// Copyright 2016-2018, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fortios

import (
	"fmt"
	"path/filepath"

	"github.com/pulumi/pulumi-fortios/provider/pkg/version"
	"github.com/pulumi/pulumi-terraform-bridge/v3/pkg/tfbridge"
	shim "github.com/pulumi/pulumi-terraform-bridge/v3/pkg/tfshim"
	shimv2 "github.com/pulumi/pulumi-terraform-bridge/v3/pkg/tfshim/sdk-v2"
	"github.com/pulumi/pulumi/sdk/v3/go/common/resource"
	"github.com/terraform-providers/terraform-provider-fortios/fortios"
)

// all of the token components used below.
const (
	// This variable controls the default name of the package in the package
	// registries for nodejs and python:
	mainPkg = "fortios"
	// modules:
	mainMod = "index" // the fortios module
)

// preConfigureCallback is called before the providerConfigure function of the underlying provider.
// It should validate that the provider can be configured, and provide actionable errors in the case
// it cannot be. Configuration variables can be read from `vars` using the `stringValue` function -
// for example `stringValue(vars, "accessKey")`.
func preConfigureCallback(vars resource.PropertyMap, c shim.ResourceConfig) error {
	return nil
}

// Provider returns additional overlaid schema and metadata associated with the provider..
func Provider() tfbridge.ProviderInfo {
	// Instantiate the Terraform provider
	p := shimv2.NewProvider(fortios.Provider())

	// Create a Pulumi provider mapping
	prov := tfbridge.ProviderInfo{
		P:           p,
		Name:        "fortios",
		DisplayName: "",
		// The default publisher for all packages is Pulumi.
		// Change this to your personal name (or a company name) that you
		// would like to be shown in the Pulumi Registry if this package is published
		// there.
		Publisher: "Pulumi",
		// LogoURL is optional but useful to help identify your package in the Pulumi Registry
		// if this package is published there.
		//
		// You may host a logo on a domain you control or add an SVG logo for your package
		// in your repository and use the raw content URL for that file as your logo URL.
		LogoURL:     "",
		Description: "A Pulumi package for creating and managing fortios cloud resources.",
		// category/cloud tag helps with categorizing the package in the Pulumi Registry.
		// For all available categories, see `Keywords` in
		// https://www.pulumi.com/docs/guides/pulumi-packages/schema/#package.
		Keywords:   []string{"pulumi", "fortios", "category/cloud"},
		License:    "Apache-2.0",
		Homepage:   "https://www.pulumi.com",
		Repository: "https://github.com/pulumi/pulumi-fortios",
		Config: map[string]*tfbridge.SchemaInfo{
			"hostname": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_ACCESS_HOSTNAME"},
				},
			},
			"token": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_ACCESS_TOKEN"},
				},
			},
			"insecure": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_INSECURE"},
				},
			},
			"cabundlefile": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_CA_CABUNDLE"},
				},
			},
			"peerauth":   {},
			"cacert":     {},
			"clientcert": {},
			"clientkey":  {},
			"vdom":       {},
			"fmg_hostname": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_FMG_HOSTNAME"},
				},
			},
			"fmg_username": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_FMG_USERNAME"},
				},
			},
			"fmg_passwd": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_FMG_PASSWORD"},
				},
			},
			"fmg_insecure": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_FMG_INSECURE"},
				},
			},
			"fmg_cabundlefile": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"FORTIOS_FMG_CABUNDLE"},
				},
			},
		},
		PreConfigureCallback: preConfigureCallback,
		Resources: map[string]*tfbridge.ResourceInfo{
			"fortios_alertemail_setting":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AlertemailSetting")},
			"fortios_antivirus_heuristic":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AntivirusHeuristic")},
			"fortios_antivirus_profile":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AntivirusProfile")},
			"fortios_antivirus_quarantine":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AntivirusQuarantine")},
			"fortios_antivirus_settings":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AntivirusSettings")},
			"fortios_application_custom":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ApplicationCustom")},
			"fortios_application_group":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ApplicationGroup")},
			"fortios_application_list":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ApplicationList")},
			"fortios_application_name":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ApplicationName")},
			"fortios_application_rulesettings":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ApplicationRuleSettings")},
			"fortios_authentication_rule":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AuthenticationRule")},
			"fortios_authentication_scheme":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AuthenticationScheme")},
			"fortios_authentication_setting":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "AuthenticationSetting")},
			"fortios_certificate_ca":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CertificateCa")},
			"fortios_certificate_crl":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CertificateCrl")},
			"fortios_certificate_local":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CertificateLocal")},
			"fortios_certificate_remote":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CertificateRemote")},
			"fortios_cifs_domaincontroller":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CifsDomainController")},
			"fortios_cifs_profile":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CifsProfile")},
			"fortios_credentialstore_domaincontroller":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "CredentialStoreDomainController")},
			"fortios_dlp_filepattern":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpFilepattern")},
			"fortios_dlp_fpdocsource":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpFpDocSource")},
			"fortios_dlp_fpsensitivity":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpFpSensitivity")},
			"fortios_dlp_sensitivity":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpSensitivity")},
			"fortios_dlp_sensor":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpSensor")},
			"fortios_dlp_settings":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DlpSettings")},
			"fortios_dnsfilter_domainfilter":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DnsfilterDomainFilter")},
			"fortios_dnsfilter_profile":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DnsfilterProfile")},
			"fortios_dpdk_cpus":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DpdkCpus")},
			"fortios_dpdk_global":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "DpdkGlobal")},
			"fortios_emailfilter_blockallowlist":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterBlockAllowList")},
			"fortios_emailfilter_bwl":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterBwl")},
			"fortios_emailfilter_bword":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterBword")},
			"fortios_emailfilter_dnsbl":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterDnsbl")},
			"fortios_emailfilter_fortishield":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterFortishield")},
			"fortios_emailfilter_iptrust":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterIptrust")},
			"fortios_emailfilter_mheader":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterMheader")},
			"fortios_emailfilter_options":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterOptions")},
			"fortios_emailfilter_profile":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EmailfilterProfile")},
			"fortios_endpointcontrol_client":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlClient")},
			"fortios_endpointcontrol_fctems":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlFctems")},
			"fortios_endpointcontrol_forticlientems":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlForticlientEms")},
			"fortios_endpointcontrol_forticlientregistrationsync":        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlForticlientRegistrationSync")},
			"fortios_endpointcontrol_profile":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlProfile")},
			"fortios_endpointcontrol_registeredforticlient":              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlRegisteredForticlient")},
			"fortios_endpointcontrol_settings":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "EndpointControlSettings")},
			"fortios_extendercontroller_dataplan":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ExtenderControllerDataplan")},
			"fortios_extendercontroller_extender":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ExtenderControllerExtender")},
			"fortios_extendercontroller_extender1":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ExtenderControllerExtender1")},
			"fortios_extendercontroller_extenderprofile":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ExtenderControllerExtenderProfile")},
			"fortios_filefilter_profile":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FileFilterProfile")},
			"fortios_firewall_DoSpolicy":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallDosPolicy")},
			"fortios_firewall_DoSpolicy6":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallDosPolicy6")},
			"fortios_firewall_accessproxy":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAccessProxy")},
			"fortios_firewall_accessproxy6":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAccessProxy6")},
			"fortios_firewall_accessproxysshclientcert":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAccessProxySshClientCert")},
			"fortios_firewall_accessproxyvirtualhost":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAccessProxyVirtualHost")},
			"fortios_firewall_address":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAddress")},
			"fortios_firewall_address6":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAddress6")},
			"fortios_firewall_address6template":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAddress6Template")},
			"fortios_firewall_addrgrp":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAddrgrp")},
			"fortios_firewall_addrgrp6":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAddrgrp6")},
			"fortios_firewall_authportal":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallAuthPortal")},
			"fortios_firewall_centralsnatmap":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallCentralSnatMap")},
			"fortios_firewall_centralsnatmap_move":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallCentralsnatmapMove")},
			"fortios_firewall_centralsnatmap_sort":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallCentralsnatmapSort")},
			"fortios_firewall_city":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallCity")},
			"fortios_firewall_country":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallCountry")},
			"fortios_firewall_decryptedtrafficmirror":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallDecryptedTrafficMirror")},
			"fortios_firewall_dnstranslation":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallDnstranslation")},
			"fortios_firewall_identitybasedroute":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIdentityBasedRoute")},
			"fortios_firewall_interfacepolicy":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInterfacePolicy")},
			"fortios_firewall_interfacepolicy6":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInterfacePolicy6")},
			"fortios_firewall_internetservice":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetService")},
			"fortios_firewall_internetserviceaddition":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceAddition")},
			"fortios_firewall_internetserviceappend":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceAppend")},
			"fortios_firewall_internetservicebotnet":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceBotnet")},
			"fortios_firewall_internetservicecustom":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceCustom")},
			"fortios_firewall_internetservicecustomgroup":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceCustomGroup")},
			"fortios_firewall_internetservicedefinition":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceDefinition")},
			"fortios_firewall_internetserviceextension":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceExtension")},
			"fortios_firewall_internetservicegroup":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceGroup")},
			"fortios_firewall_internetserviceipblreason":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceIpblReason")},
			"fortios_firewall_internetserviceipblvendor":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceIpblVendor")},
			"fortios_firewall_internetservicelist":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceList")},
			"fortios_firewall_internetservicename":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceName")},
			"fortios_firewall_internetserviceowner":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceOwner")},
			"fortios_firewall_internetservicereputation":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallInternetServiceReputation")},
			"fortios_firewall_ippool":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIppool")},
			"fortios_firewall_ippool6":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIppool6")},
			"fortios_firewall_iptranslation":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIpTranslation")},
			"fortios_firewall_ipv6ehfilter":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIpv6EhFilter")},
			"fortios_firewall_ldbmonitor":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallLdbMonitor")},
			"fortios_firewall_localinpolicy":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallLocalInPolicy")},
			"fortios_firewall_localinpolicy6":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallLocalInPolicy6")},
			"fortios_firewall_multicastaddress":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallMulticastAddress")},
			"fortios_firewall_multicastaddress6":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallMulticastAddress6")},
			"fortios_firewall_multicastpolicy":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallMulticastPolicy")},
			"fortios_firewall_multicastpolicy6":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallMulticastPolicy6")},
			"fortios_firewall_object_address":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectAddress")},
			"fortios_firewall_object_addressgroup":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectAddressGroup")},
			"fortios_firewall_object_ippool":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectIPPool")},
			"fortios_firewall_object_service":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectService")},
			"fortios_firewall_object_servicecategory":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectServiceCategory")},
			"fortios_firewall_object_servicegroup":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectServiceGroup")},
			"fortios_firewall_object_vip":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectVip")},
			"fortios_firewall_object_vipgroup":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallObjectVipGroup")},
			"fortios_firewall_policy":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallPolicy")},
			"fortios_firewall_policy46":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallPolicy46")},
			"fortios_firewall_policy6":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallPolicy6")},
			"fortios_firewall_policy64":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallPolicy64")},
			"fortios_firewall_profilegroup":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProfileGroup")},
			"fortios_firewall_profileprotocoloptions":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProfileProtocolOptions")},
			"fortios_firewall_proxyaddress":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProxyAddress")},
			"fortios_firewall_proxyaddrgrp":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProxyAddrgrp")},
			"fortios_firewall_proxypolicy":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProxyPolicy")},
			"fortios_firewall_proxypolicy_move":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProxypolicyMove")},
			"fortios_firewall_proxypolicy_sort":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallProxypolicySort")},
			"fortios_firewall_region":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallRegion")},
			"fortios_firewall_security_policy":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSecurityPolicy1")},
			"fortios_firewall_security_policyseq":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSecurityPolicySeq")},
			"fortios_firewall_security_policysort":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSecurityPolicySort")},
			"fortios_firewall_securitypolicy":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSecurityPolicy")},
			"fortios_firewall_shapingpolicy":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallShapingPolicy")},
			"fortios_firewall_shapingprofile":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallShapingProfile")},
			"fortios_firewall_sniffer":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSniffer")},
			"fortios_firewall_sslserver":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSslServer")},
			"fortios_firewall_sslsshprofile":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSslSshProfile")},
			"fortios_firewall_trafficclass":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallTrafficClass")},
			"fortios_firewall_ttlpolicy":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallTtlPolicy")},
			"fortios_firewall_vendormac":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVendorMac")},
			"fortios_firewall_vip":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVip")},
			"fortios_firewall_vip46":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVip46")},
			"fortios_firewall_vip6":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVip6")},
			"fortios_firewall_vip64":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVip64")},
			"fortios_firewall_vipgrp":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVipgrp")},
			"fortios_firewall_vipgrp46":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVipgrp46")},
			"fortios_firewall_vipgrp6":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVipgrp6")},
			"fortios_firewall_vipgrp64":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallVipgrp64")},
			"fortios_firewallconsolidated_policy":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallConsolidatedPolicy")},
			"fortios_firewallipmacbinding_setting":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIpmacbindingSetting")},
			"fortios_firewallipmacbinding_table":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallIpmacbindingTable")},
			"fortios_firewallschedule_group":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallScheduleGroup")},
			"fortios_firewallschedule_onetime":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallScheduleOnetime")},
			"fortios_firewallschedule_recurring":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallScheduleRecurring")},
			"fortios_firewallservice_category":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallServiceCategory")},
			"fortios_firewallservice_custom":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallServiceCustom")},
			"fortios_firewallservice_group":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallServiceGroup")},
			"fortios_firewallshaper_peripshaper":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallShaperPerIpShaper")},
			"fortios_firewallshaper_trafficshaper":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallShaperTrafficShaper")},
			"fortios_firewallssh_hostkey":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSshHostKey")},
			"fortios_firewallssh_localca":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSshLocalCa")},
			"fortios_firewallssh_localkey":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSshLocalKey")},
			"fortios_firewallssh_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSshSetting")},
			"fortios_firewallssl_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallSslSetting")},
			"fortios_firewallwildcardfqdn_custom":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallWildcardFqdnCustom")},
			"fortios_firewallwildcardfqdn_group":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FirewallWildcardFqdnGroup")},
			"fortios_fmg_devicemanager_device":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerDVMDevice")},
			"fortios_fmg_devicemanager_install_device":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerDVMInstallDev")},
			"fortios_fmg_devicemanager_install_policypackage":            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerDVMInstallPolicyPackage")},
			"fortios_fmg_devicemanager_script":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerDVMScript")},
			"fortios_fmg_devicemanager_script_execute":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerDVMScriptExecute")},
			"fortios_fmg_firewall_object_address":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallObjectAddress")},
			"fortios_fmg_firewall_object_ippool":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallObjectIppool")},
			"fortios_fmg_firewall_object_service":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallObjectService")},
			"fortios_fmg_firewall_object_vip":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallObjectVip")},
			"fortios_fmg_firewall_security_policy":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallSecurityPolicy")},
			"fortios_fmg_firewall_security_policypackage":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerFirewallSecurityPolicyPackage")},
			"fortios_fmg_jsonrpc_request":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerJSONRPCRequest")},
			"fortios_fmg_object_adom_revision":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerObjectAdomRevision")},
			"fortios_fmg_system_admin":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemAdmin")},
			"fortios_fmg_system_admin_profiles":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemAdminProfiles")},
			"fortios_fmg_system_admin_user":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemAdminUser")},
			"fortios_fmg_system_adom":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemAdom")},
			"fortios_fmg_system_dns":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemDNS")},
			"fortios_fmg_system_global":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemGlobal")},
			"fortios_fmg_system_license_forticare":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemLicenseFortiCare")},
			"fortios_fmg_system_license_vm":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemLicenseVM")},
			"fortios_fmg_system_network_interface":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemNetworkInterface")},
			"fortios_fmg_system_network_route":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemNetworkRoute")},
			"fortios_fmg_system_ntp":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemNTP")},
			"fortios_fmg_system_syslogserver":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FortimanagerSystemSyslogServer")},
			"fortios_ftpproxy_explicit":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "FtpProxyExplicit")},
			"fortios_icap_profile":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IcapProfile")},
			"fortios_icap_server":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IcapServer")},
			"fortios_ips_custom":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsCustom")},
			"fortios_ips_decoder":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsDecoder")},
			"fortios_ips_global":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsGlobal")},
			"fortios_ips_rule":                                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsRule")},
			"fortios_ips_rulesettings":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsRuleSettings")},
			"fortios_ips_sensor":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsSensor")},
			"fortios_ips_settings":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsSettings")},
			"fortios_ips_viewmap":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "IpsViewMap")},
			"fortios_json_generic_api":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "JSONGenericAPI")},
			"fortios_log_customfield":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogCustomField")},
			"fortios_log_eventfilter":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogEventfilter")},
			"fortios_log_fortianalyzer_setting":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortiAnalyzerSettingLegacy")},
			"fortios_log_guidisplay":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogGuiDisplay")},
			"fortios_log_setting":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSetting")},
			"fortios_log_syslog_setting":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogSetting")},
			"fortios_log_threatweight":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogThreatWeight")},
			"fortios_logdisk_filter":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogDiskFilter")},
			"fortios_logdisk_setting":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogDiskSetting")},
			"fortios_logfortianalyzer2_filter":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer2Filter")},
			"fortios_logfortianalyzer2_overridefilter":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer2OverrideFilter")},
			"fortios_logfortianalyzer2_overridesetting":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer2OverrideSetting")},
			"fortios_logfortianalyzer2_setting":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer2Setting")},
			"fortios_logfortianalyzer3_filter":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer3Filter")},
			"fortios_logfortianalyzer3_overridefilter":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer3OverrideFilter")},
			"fortios_logfortianalyzer3_overridesetting":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer3OverrideSetting")},
			"fortios_logfortianalyzer3_setting":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzer3Setting")},
			"fortios_logfortianalyzer_filter":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerFilter")},
			"fortios_logfortianalyzer_overridefilter":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerOverrideFilter")},
			"fortios_logfortianalyzer_overridesetting":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerOverrideSetting")},
			"fortios_logfortianalyzer_setting":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerSetting")},
			"fortios_logfortianalyzercloud_filter":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerCloudFilter")},
			"fortios_logfortianalyzercloud_overridefilter":               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerCloudOverrideFilter")},
			"fortios_logfortianalyzercloud_overridesetting":              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerCloudOverrideSetting")},
			"fortios_logfortianalyzercloud_setting":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortianalyzerCloudSetting")},
			"fortios_logfortiguard_filter":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortiguardFilter")},
			"fortios_logfortiguard_overridefilter":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortiguardOverrideFilter")},
			"fortios_logfortiguard_overridesetting":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortiguardOverrideSetting")},
			"fortios_logfortiguard_setting":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogFortiguardSetting")},
			"fortios_logmemory_filter":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogMemoryFilter")},
			"fortios_logmemory_globalsetting":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogMemoryGlobalSetting")},
			"fortios_logmemory_setting":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogMemorySetting")},
			"fortios_lognulldevice_filter":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogNullDeviceFilter")},
			"fortios_lognulldevice_setting":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogNullDeviceSetting")},
			"fortios_logsyslogd2_filter":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd2Filter")},
			"fortios_logsyslogd2_overridefilter":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd2OverrideFilter")},
			"fortios_logsyslogd2_overridesetting":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd2OverrideSetting")},
			"fortios_logsyslogd2_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd2Setting")},
			"fortios_logsyslogd3_filter":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd3Filter")},
			"fortios_logsyslogd3_overridefilter":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd3OverrideFilter")},
			"fortios_logsyslogd3_overridesetting":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd3OverrideSetting")},
			"fortios_logsyslogd3_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd3Setting")},
			"fortios_logsyslogd4_filter":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd4Filter")},
			"fortios_logsyslogd4_overridefilter":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd4OverrideFilter")},
			"fortios_logsyslogd4_overridesetting":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd4OverrideSetting")},
			"fortios_logsyslogd4_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogd4Setting")},
			"fortios_logsyslogd_filter":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogdFilter")},
			"fortios_logsyslogd_overridefilter":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogdOverrideFilter")},
			"fortios_logsyslogd_overridesetting":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogdOverrideSetting")},
			"fortios_logsyslogd_setting":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogSyslogdSetting")},
			"fortios_logtacacsaccounting2_filter":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccounting2Filter")},
			"fortios_logtacacsaccounting2_setting":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccounting2Setting")},
			"fortios_logtacacsaccounting3_filter":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccounting3Filter")},
			"fortios_logtacacsaccounting3_setting":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccounting3Setting")},
			"fortios_logtacacsaccounting_filter":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccountingFilter")},
			"fortios_logtacacsaccounting_setting":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogTacacsAccountingSetting")},
			"fortios_logwebtrends_filter":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogWebtrendsFilter")},
			"fortios_logwebtrends_setting":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "LogWebtrendsSetting")},
			"fortios_networking_interface_port":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "NetworkingInterfacePort")},
			"fortios_networking_route_static":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "NetworkingRouteStatic")},
			"fortios_nsxt_servicechain":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "NsxtServiceChain")},
			"fortios_nsxt_setting":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "NsxtSetting")},
			"fortios_report_chart":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportChart")},
			"fortios_report_dataset":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportDataset")},
			"fortios_report_layout":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportLayout")},
			"fortios_report_setting":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportSetting")},
			"fortios_report_style":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportStyle")},
			"fortios_report_theme":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "ReportTheme")},
			"fortios_router_accesslist":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterAccessList")},
			"fortios_router_accesslist6":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterAccessList6")},
			"fortios_router_aspathlist":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterAspathList")},
			"fortios_router_authpath":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterAuthPath")},
			"fortios_router_bfd":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterBfd")},
			"fortios_router_bfd6":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterBfd6")},
			"fortios_router_bgp":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterBgp")},
			"fortios_router_communitylist":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterCommunityList")},
			"fortios_router_isis":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterIsis")},
			"fortios_router_keychain":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterKeyChain")},
			"fortios_router_multicast":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterMulticast")},
			"fortios_router_multicast6":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterMulticast6")},
			"fortios_router_multicastflow":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterMulticastFlow")},
			"fortios_router_ospf":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterOspf")},
			"fortios_router_ospf6":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterOspf6")},
			"fortios_router_policy":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterPolicy")},
			"fortios_router_policy6":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterPolicy6")},
			"fortios_router_prefixlist":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterPrefixList")},
			"fortios_router_prefixlist6":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterPrefixList6")},
			"fortios_router_rip":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterRip")},
			"fortios_router_ripng":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterRipng")},
			"fortios_router_routemap":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterRouteMap")},
			"fortios_router_setting":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterSetting")},
			"fortios_router_static":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterStatic")},
			"fortios_router_static6":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterStatic6")},
			"fortios_routerbgp_neighbor":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterbgpNeighbor")},
			"fortios_routerbgp_network":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterbgpNetwork")},
			"fortios_routerbgp_network6":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterbgpNetwork6")},
			"fortios_routerospf6_ospf6interface":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "Routerospf6Ospf6Interface")},
			"fortios_routerospf_neighbor":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterospfNeighbor")},
			"fortios_routerospf_network":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterospfNetwork")},
			"fortios_routerospf_ospfinterface":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "RouterospfOspfInterface")},
			"fortios_sctpfilter_profile":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SctpFilterProfile")},
			"fortios_spamfilter_bwl":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterBwl")},
			"fortios_spamfilter_bword":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterBword")},
			"fortios_spamfilter_dnsbl":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterDnsbl")},
			"fortios_spamfilter_fortishield":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterFortishield")},
			"fortios_spamfilter_iptrust":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterIptrust")},
			"fortios_spamfilter_mheader":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterMheader")},
			"fortios_spamfilter_options":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterOptions")},
			"fortios_spamfilter_profile":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SpamfilterProfile")},
			"fortios_sshfilter_profile":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SshFilterProfile")},
			"fortios_switchcontroller_8021Xsettings":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchController8021XSettings")},
			"fortios_switchcontroller_customcommand":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerCustomCommand")},
			"fortios_switchcontroller_dynamicportpolicy":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerDynamicPortPolicy")},
			"fortios_switchcontroller_flowtracking":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerFlowTracking")},
			"fortios_switchcontroller_fortilinksettings":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerFortilinkSettings")},
			"fortios_switchcontroller_global":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerGlobal")},
			"fortios_switchcontroller_igmpsnooping":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerIgmpSnooping")},
			"fortios_switchcontroller_lldpprofile":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerLldpProfile")},
			"fortios_switchcontroller_lldpsettings":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerLldpSettings")},
			"fortios_switchcontroller_location":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerLocation")},
			"fortios_switchcontroller_macsyncsettings":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerMacSyncSettings")},
			"fortios_switchcontroller_managedswitch":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerManagedSwitch")},
			"fortios_switchcontroller_nacdevice":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerNacDevice")},
			"fortios_switchcontroller_nacsettings":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerNacSettings")},
			"fortios_switchcontroller_networkmonitorsettings":            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerNetworkMonitorSettings")},
			"fortios_switchcontroller_portpolicy":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerPortPolicy")},
			"fortios_switchcontroller_quarantine":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerQuarantine")},
			"fortios_switchcontroller_remotelog":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerRemoteLog")},
			"fortios_switchcontroller_sflow":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSflow")},
			"fortios_switchcontroller_snmpcommunity":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSnmpCommunity")},
			"fortios_switchcontroller_snmpsysinfo":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSnmpSysinfo")},
			"fortios_switchcontroller_snmptrapthreshold":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSnmpTrapThreshold")},
			"fortios_switchcontroller_snmpuser":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSnmpUser")},
			"fortios_switchcontroller_stormcontrol":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerStormControl")},
			"fortios_switchcontroller_stormcontrolpolicy":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerStormControlPolicy")},
			"fortios_switchcontroller_stpinstance":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerStpInstance")},
			"fortios_switchcontroller_stpsettings":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerStpSettings")},
			"fortios_switchcontroller_switchgroup":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSwitchGroup")},
			"fortios_switchcontroller_switchinterfacetag":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSwitchInterfaceTag")},
			"fortios_switchcontroller_switchlog":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSwitchLog")},
			"fortios_switchcontroller_switchprofile":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSwitchProfile")},
			"fortios_switchcontroller_system":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSystem")},
			"fortios_switchcontroller_trafficpolicy":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerTrafficPolicy")},
			"fortios_switchcontroller_trafficsniffer":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerTrafficSniffer")},
			"fortios_switchcontroller_virtualportpool":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerVirtualPortPool")},
			"fortios_switchcontroller_vlan":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerVlan")},
			"fortios_switchcontroller_vlanpolicy":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerVlanPolicy")},
			"fortios_switchcontrollerautoconfig_custom":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerAutoConfigCustom")},
			"fortios_switchcontrollerautoconfig_default":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerAutoConfigDefault")},
			"fortios_switchcontrollerautoconfig_policy":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerAutoConfigPolicy")},
			"fortios_switchcontrollerinitialconfig_template":             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerInitialConfigTemplate")},
			"fortios_switchcontrollerinitialconfig_vlans":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerInitialConfigVlans")},
			"fortios_switchcontrollerptp_policy":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerPtpPolicy")},
			"fortios_switchcontrollerptp_settings":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerPtpSettings")},
			"fortios_switchcontrollerqos_dot1pmap":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerQosDot1PMap")},
			"fortios_switchcontrollerqos_ipdscpmap":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerQosIpDscpMap")},
			"fortios_switchcontrollerqos_qospolicy":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerQosQosPolicy")},
			"fortios_switchcontrollerqos_queuepolicy":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerQosQueuePolicy")},
			"fortios_switchcontrollersecuritypolicy_8021X":               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSecurityPolicy8021X")},
			"fortios_switchcontrollersecuritypolicy_captiveportal":       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSecurityPolicyCaptivePortal")},
			"fortios_switchcontrollersecuritypolicy_localaccess":         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SwitchControllerSecurityPolicyLocalAccess")},
			"fortios_system3gmodem_custom":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "System3GModemCustom")},
			"fortios_system_accprofile":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAccprofile")},
			"fortios_system_acme":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAcme")},
			"fortios_system_admin":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAdmin")},
			"fortios_system_admin_administrator":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAdminAdministrator")},
			"fortios_system_admin_profiles":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAdminProfiles")},
			"fortios_system_affinityinterrupt":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAffinityInterrupt")},
			"fortios_system_affinitypacketredistribution":                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAffinityPacketRedistribution")},
			"fortios_system_alarm":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAlarm")},
			"fortios_system_alias":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAlias")},
			"fortios_system_apiuser":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemApiUser")},
			"fortios_system_apiuser_setting":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAPIUserSetting")},
			"fortios_system_arptable":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemArpTable")},
			"fortios_system_autoinstall":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutoInstall")},
			"fortios_system_automationaction":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutomationAction")},
			"fortios_system_automationdestination":                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutomationDestination")},
			"fortios_system_automationstitch":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutomationStitch")},
			"fortios_system_automationtrigger":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutomationTrigger")},
			"fortios_system_autoscript":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutoScript")},
			"fortios_system_centralmanagement":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemCentralManagement")},
			"fortios_system_clustersync":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemClusterSync")},
			"fortios_system_console":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemConsole")},
			"fortios_system_csf":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemCsf")},
			"fortios_system_customlanguage":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemCustomLanguage")},
			"fortios_system_ddns":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDdns")},
			"fortios_system_dedicatedmgmt":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDedicatedMgmt")},
			"fortios_system_dns":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDns")},
			"fortios_system_dns64":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDns64")},
			"fortios_system_dnsdatabase":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDnsDatabase")},
			"fortios_system_dnsserver":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDnsServer")},
			"fortios_system_dscpbasedpriority":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDscpBasedPriority")},
			"fortios_system_emailserver":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemEmailServer")},
			"fortios_system_externalresource":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemExternalResource")},
			"fortios_system_federatedupgrade":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFederatedUpgrade")},
			"fortios_system_fipscc":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFipsCc")},
			"fortios_system_fm":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFm")},
			"fortios_system_fortiai":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFortiai")},
			"fortios_system_fortiguard":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFortiguard")},
			"fortios_system_fortimanager":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFortimanager")},
			"fortios_system_fortisandbox":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFortisandbox")},
			"fortios_system_fssopolling":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFssoPolling")},
			"fortios_system_ftmpush":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemFtmPush")},
			"fortios_system_geneve":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemGeneve")},
			"fortios_system_geoipcountry":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemGeoipCountry")},
			"fortios_system_geoipoverride":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemGeoipOverride")},
			"fortios_system_global":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemGlobal")},
			"fortios_system_gretunnel":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemGreTunnel")},
			"fortios_system_ha":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemHa")},
			"fortios_system_hamonitor":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemHaMonitor")},
			"fortios_system_ike":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIke")},
			"fortios_system_interface":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemInterface")},
			"fortios_system_ipam":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpam")},
			"fortios_system_ipiptunnel":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpipTunnel")},
			"fortios_system_ips":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIps")},
			"fortios_system_ipsecaggregate":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpsecAggregate")},
			"fortios_system_ipsurlfilterdns":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpsUrlfilterDns")},
			"fortios_system_ipsurlfilterdns6":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpsUrlfilterDns6")},
			"fortios_system_ipv6neighborcache":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpv6NeighborCache")},
			"fortios_system_ipv6tunnel":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemIpv6Tunnel")},
			"fortios_system_license_forticare":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLicenseFortiCare")},
			"fortios_system_license_vdom":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLicenseVDOM")},
			"fortios_system_license_vm":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLicenseVM")},
			"fortios_system_linkmonitor":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLinkMonitor")},
			"fortios_system_ltemodem":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLteModem")},
			"fortios_system_macaddresstable":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemMacAddressTable")},
			"fortios_system_managementtunnel":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemManagementTunnel")},
			"fortios_system_mobiletunnel":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemMobileTunnel")},
			"fortios_system_modem":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemModem")},
			"fortios_system_nat64":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNat64")},
			"fortios_system_ndproxy":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNdProxy")},
			"fortios_system_netflow":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNetflow")},
			"fortios_system_networkvisibility":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNetworkVisibility")},
			"fortios_system_npu":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNpu")},
			"fortios_system_ntp":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemNtp")},
			"fortios_system_objecttagging":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemObjectTagging")},
			"fortios_system_passwordpolicy":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemPasswordPolicy")},
			"fortios_system_passwordpolicyguestadmin":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemPasswordPolicyGuestAdmin")},
			"fortios_system_physicalswitch":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemPhysicalSwitch")},
			"fortios_system_pppoeinterface":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemPppoeInterface")},
			"fortios_system_proberesponse":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemProbeResponse")},
			"fortios_system_proxyarp":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemProxyArp")},
			"fortios_system_ptp":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemPtp")},
			"fortios_system_replacemsggroup":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgGroup")},
			"fortios_system_replacemsgimage":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgImage")},
			"fortios_system_resourcelimits":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemResourceLimits")},
			"fortios_system_saml":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSaml")},
			"fortios_system_sdnconnector":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSdnConnector")},
			"fortios_system_sdwan":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSdwan")},
			"fortios_system_sessionhelper":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSessionHelper")},
			"fortios_system_sessionttl":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSessionTtl")},
			"fortios_system_setting_dns":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSettingDNS")},
			"fortios_system_setting_global":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSettingGlobal")},
			"fortios_system_setting_ntp":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSettingNTP")},
			"fortios_system_settings":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSettings")},
			"fortios_system_sflow":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSflow")},
			"fortios_system_sittunnel":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSitTunnel")},
			"fortios_system_smsserver":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSmsServer")},
			"fortios_system_speedtestschedule":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSpeedTestSchedule")},
			"fortios_system_speedtestserver":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSpeedTestServer")},
			"fortios_system_ssoadmin":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSsoAdmin")},
			"fortios_system_ssoforticloudadmin":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSsoForticloudAdmin")},
			"fortios_system_standalonecluster":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemStandaloneCluster")},
			"fortios_system_storage":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemStorage")},
			"fortios_system_stp":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemStp")},
			"fortios_system_switchinterface":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSwitchInterface")},
			"fortios_system_tosbasedpriority":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemTosBasedPriority")},
			"fortios_system_vdom":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdom")},
			"fortios_system_vdom_setting":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomSetting")},
			"fortios_system_vdomdns":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomDns")},
			"fortios_system_vdomexception":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomException")},
			"fortios_system_vdomlink":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomLink")},
			"fortios_system_vdomnetflow":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomNetflow")},
			"fortios_system_vdomproperty":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomProperty")},
			"fortios_system_vdomradiusserver":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomRadiusServer")},
			"fortios_system_vdomsflow":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVdomSflow")},
			"fortios_system_virtualswitch":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVirtualSwitch")},
			"fortios_system_virtualwanlink":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVirtualWanLink")},
			"fortios_system_virtualwirepair":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVirtualWirePair")},
			"fortios_system_vnetunnel":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVneTunnel")},
			"fortios_system_vxlan":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemVxlan")},
			"fortios_system_wccp":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemWccp")},
			"fortios_system_zone":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemZone")},
			"fortios_systemautoupdate_pushupdate":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutoupdatePushUpdate")},
			"fortios_systemautoupdate_schedule":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutoupdateSchedule")},
			"fortios_systemautoupdate_tunneling":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemAutoupdateTunneling")},
			"fortios_systemdhcp6_server":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDhcp6Server")},
			"fortios_systemdhcp_server":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemDhcpServer")},
			"fortios_systemlldp_networkpolicy":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemLldpNetworkPolicy")},
			"fortios_systemreplacemsg_admin":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgAdmin")},
			"fortios_systemreplacemsg_alertmail":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgAlertmail")},
			"fortios_systemreplacemsg_auth":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgAuth")},
			"fortios_systemreplacemsg_automation":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgAutomation")},
			"fortios_systemreplacemsg_devicedetectionportal":             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgDeviceDetectionPortal")},
			"fortios_systemreplacemsg_ec":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgEc")},
			"fortios_systemreplacemsg_fortiguardwf":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgFortiguardWf")},
			"fortios_systemreplacemsg_ftp":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgFtp")},
			"fortios_systemreplacemsg_http":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgHttp")},
			"fortios_systemreplacemsg_icap":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgIcap")},
			"fortios_systemreplacemsg_mail":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgMail")},
			"fortios_systemreplacemsg_nacquar":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgNacQuar")},
			"fortios_systemreplacemsg_nntp":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgNntp")},
			"fortios_systemreplacemsg_spam":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgSpam")},
			"fortios_systemreplacemsg_sslvpn":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgSslvpn")},
			"fortios_systemreplacemsg_trafficquota":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgTrafficQuota")},
			"fortios_systemreplacemsg_utm":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgUtm")},
			"fortios_systemreplacemsg_webproxy":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemReplacemsgWebproxy")},
			"fortios_systemsnmp_community":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSnmpCommunity")},
			"fortios_systemsnmp_sysinfo":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSnmpSysinfo")},
			"fortios_systemsnmp_user":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "SystemSnmpUser")},
			"fortios_user_adgrp":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserAdgrp")},
			"fortios_user_certificate":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserCertificate")},
			"fortios_user_device":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserDevice")},
			"fortios_user_deviceaccesslist":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserDeviceAccessList")},
			"fortios_user_devicecategory":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserDeviceCategory")},
			"fortios_user_devicegroup":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserDeviceGroup")},
			"fortios_user_domaincontroller":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserDomainController")},
			"fortios_user_exchange":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserExchange")},
			"fortios_user_fortitoken":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserFortitoken")},
			"fortios_user_fsso":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserFsso")},
			"fortios_user_fssopolling":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserFssoPolling")},
			"fortios_user_group":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserGroup")},
			"fortios_user_krbkeytab":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserKrbKeytab")},
			"fortios_user_ldap":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserLdap")},
			"fortios_user_local":                                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserLocal")},
			"fortios_user_nacpolicy":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserNacPolicy")},
			"fortios_user_passwordpolicy":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserPasswordPolicy")},
			"fortios_user_peer":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserPeer")},
			"fortios_user_peergrp":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserPeergrp")},
			"fortios_user_pop3":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserPop3")},
			"fortios_user_quarantine":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserQuarantine")},
			"fortios_user_radius":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserRadius")},
			"fortios_user_saml":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserSaml")},
			"fortios_user_securityexemptlist":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserSecurityExemptList")},
			"fortios_user_setting":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserSetting")},
			"fortios_user_tacacs":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "UserTacacs")},
			"fortios_videofilter_profile":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VideofilterProfile")},
			"fortios_videofilter_youtubechannelfilter":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VideofilterYoutubeChannelFilter")},
			"fortios_videofilter_youtubekey":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VideofilterYoutubeKey")},
			"fortios_voip_profile":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VoipProfile")},
			"fortios_vpn_ipsec_phase1interface":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VPNIPsecPhase1InterfaceLegacy")},
			"fortios_vpn_ipsec_phase2interface":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VPNIPsecPhase2InterfaceLegacy")},
			"fortios_vpn_l2tp":                                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnL2Tp")},
			"fortios_vpn_ocvpn":                                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnOcvpn")},
			"fortios_vpn_pptp":                                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnPptp")},
			"fortios_vpncertificate_ca":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateCa")},
			"fortios_vpncertificate_crl":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateCrl")},
			"fortios_vpncertificate_local":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateLocal")},
			"fortios_vpncertificate_ocspserver":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateOcspServer")},
			"fortios_vpncertificate_remote":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateRemote")},
			"fortios_vpncertificate_setting":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnCertificateSetting")},
			"fortios_vpnipsec_concentrator":                              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecConcentrator")},
			"fortios_vpnipsec_fec":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecFec")},
			"fortios_vpnipsec_forticlient":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecForticlient")},
			"fortios_vpnipsec_manualkey":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecManualkey")},
			"fortios_vpnipsec_manualkeyinterface":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecManualkeyInterface")},
			"fortios_vpnipsec_phase1":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecPhase1")},
			"fortios_vpnipsec_phase1interface":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecPhase1Interface")},
			"fortios_vpnipsec_phase2":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecPhase2")},
			"fortios_vpnipsec_phase2interface":                           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnIpsecPhase2Interface")},
			"fortios_vpnssl_client":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslClient")},
			"fortios_vpnssl_settings":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslSettings")},
			"fortios_vpnsslweb_hostchecksoftware":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslWebHostCheckSoftware")},
			"fortios_vpnsslweb_portal":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslWebPortal")},
			"fortios_vpnsslweb_realm":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslWebRealm")},
			"fortios_vpnsslweb_userbookmark":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslWebUserBookmark")},
			"fortios_vpnsslweb_usergroupbookmark":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "VpnSslWebUserGroupBookmark")},
			"fortios_waf_mainclass":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WafMainClass")},
			"fortios_waf_profile":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WafProfile")},
			"fortios_waf_signature":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WafSignature")},
			"fortios_waf_subclass":                                       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WafSubClass")},
			"fortios_wanopt_authgroup":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptAuthGroup")},
			"fortios_wanopt_cacheservice":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptCacheService")},
			"fortios_wanopt_contentdeliverynetworkrule":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptContentDeliveryNetworkRule")},
			"fortios_wanopt_peer":                                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptPeer")},
			"fortios_wanopt_profile":                                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptProfile")},
			"fortios_wanopt_remotestorage":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptRemoteStorage")},
			"fortios_wanopt_settings":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptSettings")},
			"fortios_wanopt_webcache":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WanoptWebcache")},
			"fortios_webfilter_content":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterContent")},
			"fortios_webfilter_contentheader":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterContentHeader")},
			"fortios_webfilter_fortiguard":                               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterFortiguard")},
			"fortios_webfilter_ftgdlocalcat":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterFtgdLocalCat")},
			"fortios_webfilter_ftgdlocalrating":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterFtgdLocalRating")},
			"fortios_webfilter_ipsurlfiltercachesetting":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterIpsUrlfilterCacheSetting")},
			"fortios_webfilter_ipsurlfiltersetting":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterIpsUrlfilterSetting")},
			"fortios_webfilter_ipsurlfiltersetting6":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterIpsUrlfilterSetting6")},
			"fortios_webfilter_override":                                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterOverride")},
			"fortios_webfilter_profile":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterProfile")},
			"fortios_webfilter_searchengine":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterSearchEngine")},
			"fortios_webfilter_urlfilter":                                {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebfilterUrlfilter")},
			"fortios_webproxy_debugurl":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyDebugUrl")},
			"fortios_webproxy_explicit":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyExplicit")},
			"fortios_webproxy_forwardserver":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyForwardServer")},
			"fortios_webproxy_forwardservergroup":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyForwardServerGroup")},
			"fortios_webproxy_global":                                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyGlobal")},
			"fortios_webproxy_profile":                                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyProfile")},
			"fortios_webproxy_urlmatch":                                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyUrlMatch")},
			"fortios_webproxy_wisp":                                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WebProxyWisp")},
			"fortios_wirelesscontroller_accesscontrollist":               {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerAccessControlList")},
			"fortios_wirelesscontroller_address":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerAddress")},
			"fortios_wirelesscontroller_addrgrp":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerAddrgrp")},
			"fortios_wirelesscontroller_apcfgprofile":                    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerApcfgProfile")},
			"fortios_wirelesscontroller_apstatus":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerApStatus")},
			"fortios_wirelesscontroller_arrpprofile":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerArrpProfile")},
			"fortios_wirelesscontroller_bleprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerBleProfile")},
			"fortios_wirelesscontroller_bonjourprofile":                  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerBonjourProfile")},
			"fortios_wirelesscontroller_global":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerGlobal")},
			"fortios_wirelesscontroller_intercontroller":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerInterController")},
			"fortios_wirelesscontroller_log":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerLog")},
			"fortios_wirelesscontroller_mpskprofile":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerMpskProfile")},
			"fortios_wirelesscontroller_nacprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerNacProfile")},
			"fortios_wirelesscontroller_qosprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerQosProfile")},
			"fortios_wirelesscontroller_region":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerRegion")},
			"fortios_wirelesscontroller_setting":                         {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerSetting")},
			"fortios_wirelesscontroller_snmp":                            {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerSnmp")},
			"fortios_wirelesscontroller_ssidpolicy":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerSsidPolicy")},
			"fortios_wirelesscontroller_syslogprofile":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerSyslogProfile")},
			"fortios_wirelesscontroller_timers":                          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerTimers")},
			"fortios_wirelesscontroller_utmprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerUtmProfile")},
			"fortios_wirelesscontroller_vap":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerVap")},
			"fortios_wirelesscontroller_vapgroup":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerVapGroup")},
			"fortios_wirelesscontroller_wagprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerWagProfile")},
			"fortios_wirelesscontroller_widsprofile":                     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerWidsProfile")},
			"fortios_wirelesscontroller_wtp":                             {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerWtp")},
			"fortios_wirelesscontroller_wtpgroup":                        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerWtpGroup")},
			"fortios_wirelesscontroller_wtpprofile":                      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerWtpProfile")},
			"fortios_wirelesscontrollerhotspot20_anqp3gppcellular":       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20Anqp3GppCellular")},
			"fortios_wirelesscontrollerhotspot20_anqpipaddresstype":      {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpIpAddressType")},
			"fortios_wirelesscontrollerhotspot20_anqpnairealm":           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpNaiRealm")},
			"fortios_wirelesscontrollerhotspot20_anqpnetworkauthtype":    {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpNetworkAuthType")},
			"fortios_wirelesscontrollerhotspot20_anqproamingconsortium":  {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpRoamingConsortium")},
			"fortios_wirelesscontrollerhotspot20_anqpvenuename":          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpVenueName")},
			"fortios_wirelesscontrollerhotspot20_anqpvenueurl":           {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20AnqpVenueUrl")},
			"fortios_wirelesscontrollerhotspot20_h2qpadviceofcharge":     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpAdviceOfCharge")},
			"fortios_wirelesscontrollerhotspot20_h2qpconncapability":     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpConnCapability")},
			"fortios_wirelesscontrollerhotspot20_h2qpoperatorname":       {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpOperatorName")},
			"fortios_wirelesscontrollerhotspot20_h2qposuprovider":        {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpOsuProvider")},
			"fortios_wirelesscontrollerhotspot20_h2qposuprovidernai":     {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpOsuProviderNai")},
			"fortios_wirelesscontrollerhotspot20_h2qptermsandconditions": {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpTermsAndConditions")},
			"fortios_wirelesscontrollerhotspot20_h2qpwanmetric":          {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20H2QpWanMetric")},
			"fortios_wirelesscontrollerhotspot20_hsprofile":              {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20HsProfile")},
			"fortios_wirelesscontrollerhotspot20_icon":                   {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20Icon")},
			"fortios_wirelesscontrollerhotspot20_qosmap":                 {Tok: tfbridge.MakeResource(mainPkg, mainMod, "WirelessControllerHotspot20QosMap")},
		},
		DataSources: map[string]*tfbridge.DataSourceInfo{
			"fortios_firewall_DoSpolicy":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallDosPolicy")},
			"fortios_firewall_DoSpolicy6":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallDosPolicy6")},
			"fortios_firewall_DoSpolicy6list":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallDosPolicy6List")},
			"fortios_firewall_DoSpolicylist":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallDosPolicyList")},
			"fortios_firewall_address":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddress")},
			"fortios_firewall_address6":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddress6")},
			"fortios_firewall_address6list":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddress6List")},
			"fortios_firewall_address6template":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddress6Template")},
			"fortios_firewall_address6templatelist":           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddress6TemplateList")},
			"fortios_firewall_addresslist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddressList")},
			"fortios_firewall_addrgrp":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddrgrp")},
			"fortios_firewall_addrgrp6":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddrgrp6")},
			"fortios_firewall_addrgrp6list":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddrgrp6List")},
			"fortios_firewall_addrgrplist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallAddrgrpList")},
			"fortios_firewall_centralsnatmap":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallCentralSnatMap")},
			"fortios_firewall_centralsnatmaplist":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallCentralSnatMapList")},
			"fortios_firewall_internetservice":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetService")},
			"fortios_firewall_internetservicecustom":          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceCustom")},
			"fortios_firewall_internetservicecustomgroup":     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceCustomGroup")},
			"fortios_firewall_internetservicecustomgrouplist": {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceCustomGroupList")},
			"fortios_firewall_internetservicecustomlist":      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceCustomList")},
			"fortios_firewall_internetservicedefinition":      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceDefinition")},
			"fortios_firewall_internetservicedefinitionlist":  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceDefinitionList")},
			"fortios_firewall_internetserviceextension":       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceExtension")},
			"fortios_firewall_internetserviceextensionlist":   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceExtensionList")},
			"fortios_firewall_internetservicegroup":           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceGroup")},
			"fortios_firewall_internetservicegrouplist":       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceGroupList")},
			"fortios_firewall_internetservicelist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallInternetServiceList")},
			"fortios_firewall_ipv6ehfilter":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallIpv6EhFilter")},
			"fortios_firewall_multicastaddress":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallMulticastAddress")},
			"fortios_firewall_multicastaddress6":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallMulticastAddress6")},
			"fortios_firewall_multicastaddress6list":          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallMulticastAddress6List")},
			"fortios_firewall_multicastaddresslist":           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallMulticastAddressList")},
			"fortios_firewall_policy":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy")},
			"fortios_firewall_policy46":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy46")},
			"fortios_firewall_policy46list":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy46List")},
			"fortios_firewall_policy6":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy6")},
			"fortios_firewall_policy64":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy64")},
			"fortios_firewall_policy64list":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy64List")},
			"fortios_firewall_policy6list":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicy6List")},
			"fortios_firewall_policylist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallPolicyList")},
			"fortios_firewall_profileprotocoloptions":         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProfileProtocolOptions")},
			"fortios_firewall_profileprotocoloptionslist":     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProfileProtocolOptionsList")},
			"fortios_firewall_proxyaddress":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyAddress")},
			"fortios_firewall_proxyaddresslist":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyAddressList")},
			"fortios_firewall_proxyaddrgrp":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyAddrgrp")},
			"fortios_firewall_proxyaddrgrplist":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyAddrgrpList")},
			"fortios_firewall_proxypolicy":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyPolicy")},
			"fortios_firewall_proxypolicylist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallProxyPolicyList")},
			"fortios_firewallconsolidated_policy":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallConsolidatedPolicy")},
			"fortios_firewallconsolidated_policylist":         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallConsolidatedPolicyList")},
			"fortios_firewallschedule_group":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleGroup")},
			"fortios_firewallschedule_grouplist":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleGroupList")},
			"fortios_firewallschedule_onetime":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleOnetime")},
			"fortios_firewallschedule_onetimelist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleOnetimeList")},
			"fortios_firewallschedule_recurring":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleRecurring")},
			"fortios_firewallschedule_recurringlist":          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallScheduleRecurringList")},
			"fortios_firewallservice_category":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceCategory")},
			"fortios_firewallservice_categorylist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceCategoryList")},
			"fortios_firewallservice_custom":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceCustom")},
			"fortios_firewallservice_customlist":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceCustomList")},
			"fortios_firewallservice_group":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceGroup")},
			"fortios_firewallservice_grouplist":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallServiceGroupList")},
			"fortios_firewallshaper_peripshaper":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallShaperPerIpShaper")},
			"fortios_firewallshaper_peripshaperlist":          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallShaperPerIpShaperList")},
			"fortios_firewallshaper_trafficshaper":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallShaperTrafficShaper")},
			"fortios_firewallshaper_trafficshaperlist":        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallShaperTrafficShaperList")},
			"fortios_firewallwildcardfqdn_custom":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallWildcardFqdnCustom")},
			"fortios_firewallwildcardfqdn_customlist":         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallWildcardFqdnCustomList")},
			"fortios_firewallwildcardfqdn_group":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallWildcardFqdnGroup")},
			"fortios_firewallwildcardfqdn_grouplist":          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetFirewallWildcardFqdnGroupList")},
			"fortios_ipmask_cidr":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetIPMaskCIDR")},
			"fortios_json_generic_api":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetJSONGenericAPI")},
			"fortios_router_accesslist":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAccessList")},
			"fortios_router_accesslist6":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAccessList6")},
			"fortios_router_accesslist6list":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAccessList6List")},
			"fortios_router_accesslistlist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAccessListList")},
			"fortios_router_aspathlist":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAspathList")},
			"fortios_router_aspathlistlist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAspathListList")},
			"fortios_router_authpath":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAuthPath")},
			"fortios_router_authpathlist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterAuthPathList")},
			"fortios_router_bfd":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterBfd")},
			"fortios_router_bfd6":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterBfd6")},
			"fortios_router_bgp":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterBgp")},
			"fortios_router_communitylist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterCommunityList")},
			"fortios_router_communitylistlist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterCommunityListList")},
			"fortios_router_isis":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterIsis")},
			"fortios_router_keychain":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterKeyChain")},
			"fortios_router_keychainlist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterKeyChainList")},
			"fortios_router_multicast":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterMulticast")},
			"fortios_router_multicast6":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterMulticast6")},
			"fortios_router_multicastflow":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterMulticastFlow")},
			"fortios_router_multicastflowlist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterMulticastFlowList")},
			"fortios_router_ospf":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterOspf")},
			"fortios_router_ospf6":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterOspf6")},
			"fortios_router_policy":                           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPolicy")},
			"fortios_router_policy6":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPolicy6")},
			"fortios_router_policy6list":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPolicy6List")},
			"fortios_router_policylist":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPolicyList")},
			"fortios_router_prefixlist":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPrefixList")},
			"fortios_router_prefixlist6":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPrefixList6")},
			"fortios_router_prefixlist6list":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPrefixList6List")},
			"fortios_router_prefixlistlist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterPrefixListList")},
			"fortios_router_rip":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterRip")},
			"fortios_router_ripng":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterRipng")},
			"fortios_router_routemap":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterRouteMap")},
			"fortios_router_routemaplist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterRouteMapList")},
			"fortios_router_setting":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterSetting")},
			"fortios_router_static":                           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterStatic")},
			"fortios_router_static6":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterStatic6")},
			"fortios_router_static6list":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterStatic6List")},
			"fortios_router_staticlist":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterStaticList")},
			"fortios_routerbgp_neighbor":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterbgpNeighbor")},
			"fortios_routerbgp_neighborlist":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetRouterbgpNeighborList")},
			"fortios_system_accprofile":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAccprofile")},
			"fortios_system_accprofilelist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAccprofileList")},
			"fortios_system_admin":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAdmin")},
			"fortios_system_adminlist":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAdminList")},
			"fortios_system_alias":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAlias")},
			"fortios_system_aliaslist":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAliasList")},
			"fortios_system_apiuser":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemApiUser")},
			"fortios_system_apiuserlist":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemApiUserList")},
			"fortios_system_arptable":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemArpTable")},
			"fortios_system_arptablelist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemArpTableList")},
			"fortios_system_autoinstall":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoInstall")},
			"fortios_system_automationaction":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationAction")},
			"fortios_system_automationactionlist":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationActionList")},
			"fortios_system_automationdestination":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationDestination")},
			"fortios_system_automationdestinationlist":        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationDestinationList")},
			"fortios_system_automationtrigger":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationTrigger")},
			"fortios_system_automationtriggerlist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutomationTriggerList")},
			"fortios_system_autoscript":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoScript")},
			"fortios_system_autoscriptlist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoScriptList")},
			"fortios_system_centralmanagement":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemCentralManagement")},
			"fortios_system_clustersync":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemClusterSync")},
			"fortios_system_clustersynclist":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemClusterSyncList")},
			"fortios_system_console":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemConsole")},
			"fortios_system_csf":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemCsf")},
			"fortios_system_ddns":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDdns")},
			"fortios_system_ddnslist":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDdnsList")},
			"fortios_system_dns":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDns")},
			"fortios_system_dnsdatabase":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDnsDatabase")},
			"fortios_system_dnsdatabaselist":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDnsDatabaseList")},
			"fortios_system_dnsserver":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDnsServer")},
			"fortios_system_dnsserverlist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDnsServerList")},
			"fortios_system_dscpbasedpriority":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDscpBasedPriority")},
			"fortios_system_dscpbasedprioritylist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDscpBasedPriorityList")},
			"fortios_system_emailserver":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemEmailServer")},
			"fortios_system_externalresource":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemExternalResource")},
			"fortios_system_externalresourcelist":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemExternalResourceList")},
			"fortios_system_fipscc":                           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFipsCc")},
			"fortios_system_fm":                               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFm")},
			"fortios_system_fortiguard":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFortiguard")},
			"fortios_system_fortimanager":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFortimanager")},
			"fortios_system_fortisandbox":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFortisandbox")},
			"fortios_system_fssopolling":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFssoPolling")},
			"fortios_system_ftmpush":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemFtmPush")},
			"fortios_system_global":                           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemGlobal")},
			"fortios_system_gretunnel":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemGreTunnel")},
			"fortios_system_gretunnellist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemGreTunnelList")},
			"fortios_system_ha":                               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemHa")},
			"fortios_system_hamonitor":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemHaMonitor")},
			"fortios_system_interface":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemInterface")},
			"fortios_system_interfacelist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemInterfaceList")},
			"fortios_system_ipiptunnel":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpipTunnel")},
			"fortios_system_ipiptunnellist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpipTunnelList")},
			"fortios_system_ipv6neighborcache":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpv6NeighborCache")},
			"fortios_system_ipv6neighborcachelist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpv6NeighborCacheList")},
			"fortios_system_ipv6tunnel":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpv6Tunnel")},
			"fortios_system_ipv6tunnellist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemIpv6TunnelList")},
			"fortios_system_linkmonitor":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemLinkMonitor")},
			"fortios_system_linkmonitorlist":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemLinkMonitorList")},
			"fortios_system_managementtunnel":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemManagementTunnel")},
			"fortios_system_mobiletunnel":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemMobileTunnel")},
			"fortios_system_mobiletunnellist":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemMobileTunnelList")},
			"fortios_system_nat64":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemNat64")},
			"fortios_system_ndproxy":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemNdProxy")},
			"fortios_system_netflow":                          {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemNetflow")},
			"fortios_system_networkvisibility":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemNetworkVisibility")},
			"fortios_system_ntp":                              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemNtp")},
			"fortios_system_objecttagging":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemObjectTagging")},
			"fortios_system_objecttagginglist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemObjectTaggingList")},
			"fortios_system_passwordpolicy":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemPasswordPolicy")},
			"fortios_system_passwordpolicyguestadmin":         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemPasswordPolicyGuestAdmin")},
			"fortios_system_pppoeinterface":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemPppoeInterface")},
			"fortios_system_pppoeinterfacelist":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemPppoeInterfaceList")},
			"fortios_system_proberesponse":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemProbeResponse")},
			"fortios_system_proxyarp":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemProxyArp")},
			"fortios_system_proxyarplist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemProxyArpList")},
			"fortios_system_replacemsggroup":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemReplacemsgGroup")},
			"fortios_system_replacemsggrouplist":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemReplacemsgGroupList")},
			"fortios_system_replacemsgimage":                  {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemReplacemsgImage")},
			"fortios_system_replacemsgimagelist":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemReplacemsgImageList")},
			"fortios_system_resourcelimits":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemResourceLimits")},
			"fortios_system_sdnconnector":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSdnConnector")},
			"fortios_system_sdnconnectorlist":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSdnConnectorList")},
			"fortios_system_sessionhelper":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSessionHelper")},
			"fortios_system_sessionhelperlist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSessionHelperList")},
			"fortios_system_sessionttl":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSessionTtl")},
			"fortios_system_sflow":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSflow")},
			"fortios_system_sittunnel":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSitTunnel")},
			"fortios_system_sittunnellist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSitTunnelList")},
			"fortios_system_smsserver":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSmsServer")},
			"fortios_system_smsserverlist":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSmsServerList")},
			"fortios_system_tosbasedpriority":                 {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemTosBasedPriority")},
			"fortios_system_tosbasedprioritylist":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemTosBasedPriorityList")},
			"fortios_system_vdomexception":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVdomException")},
			"fortios_system_vdomexceptionlist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVdomExceptionList")},
			"fortios_system_vdomnetflow":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVdomNetflow")},
			"fortios_system_vdomsflow":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVdomSflow")},
			"fortios_system_virtualwanlink":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVirtualWanLink")},
			"fortios_system_vxlan":                            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVxlan")},
			"fortios_system_vxlanlist":                        {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemVxlanList")},
			"fortios_system_wccp":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemWccp")},
			"fortios_system_wccplist":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemWccpList")},
			"fortios_system_zone":                             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemZone")},
			"fortios_system_zonelist":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemZoneList")},
			"fortios_systemautoupdate_pushupdate":             {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoupdatePushUpdate")},
			"fortios_systemautoupdate_schedule":               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoupdateSchedule")},
			"fortios_systemautoupdate_tunneling":              {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemAutoupdateTunneling")},
			"fortios_systemdhcp_server":                       {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDhcpServer")},
			"fortios_systemdhcp_serverlist":                   {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemDhcpServerList")},
			"fortios_systemlldp_networkpolicy":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemLldpNetworkPolicy")},
			"fortios_systemlldp_networkpolicylist":            {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemLldpNetworkPolicyList")},
			"fortios_systemsnmp_community":                    {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSnmpCommunity")},
			"fortios_systemsnmp_communitylist":                {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSnmpCommunityList")},
			"fortios_systemsnmp_sysinfo":                      {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSnmpSysinfo")},
			"fortios_systemsnmp_user":                         {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSnmpUser")},
			"fortios_systemsnmp_userlist":                     {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetSystemSnmpUserList")},
			"fortios_user_saml":                               {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetUserSaml")},
			"fortios_user_samllist":                           {Tok: tfbridge.MakeDataSource(mainPkg, mainMod, "GetUserSamlList")},
		},
		PluginDownloadURL: "https://s3.vnci.io/pulumi/releases/plugins",
		JavaScript: &tfbridge.JavaScriptInfo{
			// List any npm dependencies and their versions
			Dependencies: map[string]string{
				"@pulumi/pulumi": "^3.0.0",
			},
			DevDependencies: map[string]string{
				"@types/node": "^10.0.0", // so we can access strongly typed node definitions.
				"@types/mime": "^2.0.0",
			},
			PackageName: "@lubyou/pulumi-fortios",
			// See the documentation for tfbridge.OverlayInfo for how to lay out this
			// section, or refer to the AWS provider. Delete this section if there are
			// no overlay files.
			//Overlay: &tfbridge.OverlayInfo{},
		},
		Python: &tfbridge.PythonInfo{
			// List any Python dependencies and their version ranges
			Requires: map[string]string{
				"pulumi": ">=3.0.0,<4.0.0",
			},
		},
		Golang: &tfbridge.GolangInfo{
			ImportBasePath: filepath.Join(
				fmt.Sprintf("github.com/lubyou/pulumi-%[1]s/sdk/", mainPkg),
				tfbridge.GetModuleMajorVersion(version.Version),
				"go",
				mainPkg,
			),
			GenerateResourceContainerTypes: true,
		},
		CSharp: &tfbridge.CSharpInfo{
			PackageReferences: map[string]string{
				"Pulumi": "3.*",
			},
		},
	}

	prov.SetAutonaming(255, "-")

	return prov
}
