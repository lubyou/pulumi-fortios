// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 policies. Applies to FortiOS Version `<= 6.4.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallPolicy6(ctx, "trname", &fortios.FirewallPolicy6Args{
// 			Action:              pulumi.String("deny"),
// 			DiffservForward:     pulumi.String("disable"),
// 			DiffservReverse:     pulumi.String("disable"),
// 			DiffservcodeForward: pulumi.String("000000"),
// 			DiffservcodeRev:     pulumi.String("000000"),
// 			Dsri:                pulumi.String("disable"),
// 			Dstaddrs: FirewallPolicy6DstaddrArray{
// 				&FirewallPolicy6DstaddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			DstaddrNegate: pulumi.String("disable"),
// 			Dstintfs: FirewallPolicy6DstintfArray{
// 				&FirewallPolicy6DstintfArgs{
// 					Name: pulumi.String("port3"),
// 				},
// 			},
// 			FirewallSessionDirty:   pulumi.String("check-all"),
// 			Fixedport:              pulumi.String("disable"),
// 			Inbound:                pulumi.String("disable"),
// 			Ippool:                 pulumi.String("disable"),
// 			Logtraffic:             pulumi.String("disable"),
// 			LogtrafficStart:        pulumi.String("disable"),
// 			Nat:                    pulumi.String("disable"),
// 			Natinbound:             pulumi.String("disable"),
// 			Natoutbound:            pulumi.String("disable"),
// 			Outbound:               pulumi.String("disable"),
// 			Policyid:               pulumi.Int(1),
// 			ProfileProtocolOptions: pulumi.String("default"),
// 			ProfileType:            pulumi.String("single"),
// 			Rsso:                   pulumi.String("disable"),
// 			Schedule:               pulumi.String("always"),
// 			SendDenyPacket:         pulumi.String("disable"),
// 			Services: FirewallPolicy6ServiceArray{
// 				&FirewallPolicy6ServiceArgs{
// 					Name: pulumi.String("ALL"),
// 				},
// 			},
// 			ServiceNegate: pulumi.String("disable"),
// 			Srcaddrs: FirewallPolicy6SrcaddrArray{
// 				&FirewallPolicy6SrcaddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			SrcaddrNegate: pulumi.String("disable"),
// 			Srcintfs: FirewallPolicy6SrcintfArray{
// 				&FirewallPolicy6SrcintfArgs{
// 					Name: pulumi.String("port4"),
// 				},
// 			},
// 			SslMirror:            pulumi.String("disable"),
// 			Status:               pulumi.String("enable"),
// 			TcpMssReceiver:       pulumi.Int(0),
// 			TcpMssSender:         pulumi.Int(0),
// 			TcpSessionWithoutSyn: pulumi.String("disable"),
// 			TimeoutSendRst:       pulumi.String("disable"),
// 			Tos:                  pulumi.String("0x00"),
// 			TosMask:              pulumi.String("0x00"),
// 			TosNegate:            pulumi.String("disable"),
// 			UtmStatus:            pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall Policy6 can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallPolicy6:FirewallPolicy6 labelname {{policyid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallPolicy6 struct {
	pulumi.CustomResourceState

	// Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Enable/disable anti-replay check. Valid values: `enable`, `disable`.
	AntiReplay pulumi.StringOutput `pulumi:"antiReplay"`
	// Application category ID list. The structure of `appCategory` block is documented below.
	AppCategories FirewallPolicy6AppCategoryArrayOutput `pulumi:"appCategories"`
	// Application group names. The structure of `appGroup` block is documented below.
	AppGroups FirewallPolicy6AppGroupArrayOutput `pulumi:"appGroups"`
	// Name of an existing Application list.
	ApplicationList pulumi.StringOutput `pulumi:"applicationList"`
	// Application ID list. The structure of `application` block is documented below.
	Applications FirewallPolicy6ApplicationArrayOutput `pulumi:"applications"`
	// Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`.
	AutoAsicOffload pulumi.StringOutput `pulumi:"autoAsicOffload"`
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringOutput `pulumi:"avProfile"`
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringOutput `pulumi:"cifsProfile"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Log field index numbers to append custom log fields to log messages for this policy. The structure of `customLogFields` block is documented below.
	CustomLogFields FirewallPolicy6CustomLogFieldArrayOutput `pulumi:"customLogFields"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringOutput `pulumi:"decryptedTrafficMirror"`
	// Names of devices or device groups that can be matched by the policy. The structure of `devices` block is documented below.
	Devices FirewallPolicy6DeviceArrayOutput `pulumi:"devices"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringOutput `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringOutput `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringOutput `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringOutput `pulumi:"diffservcodeRev"`
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringOutput `pulumi:"dlpSensor"`
	// Name of an existing DNS filter profile.
	DnsfilterProfile pulumi.StringOutput `pulumi:"dnsfilterProfile"`
	// Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`.
	Dsri pulumi.StringOutput `pulumi:"dsri"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringOutput `pulumi:"dstaddrNegate"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallPolicy6DstaddrArrayOutput `pulumi:"dstaddrs"`
	// Outgoing (egress) interface. The structure of `dstintf` block is documented below.
	Dstintfs FirewallPolicy6DstintfArrayOutput `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringOutput `pulumi:"emailfilterProfile"`
	// How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`.
	FirewallSessionDirty pulumi.StringOutput `pulumi:"firewallSessionDirty"`
	// Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`.
	Fixedport pulumi.StringOutput `pulumi:"fixedport"`
	// Names of FSSO groups. The structure of `fssoGroups` block is documented below.
	FssoGroups FirewallPolicy6FssoGroupArrayOutput `pulumi:"fssoGroups"`
	// Label for the policy that appears when the GUI is in Global View mode.
	GlobalLabel pulumi.StringOutput `pulumi:"globalLabel"`
	// Names of user groups that can authenticate with this policy. The structure of `groups` block is documented below.
	Groups FirewallPolicy6GroupArrayOutput `pulumi:"groups"`
	// Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`.
	HttpPolicyRedirect pulumi.StringOutput `pulumi:"httpPolicyRedirect"`
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringOutput `pulumi:"icapProfile"`
	// Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`.
	Inbound pulumi.StringOutput `pulumi:"inbound"`
	// Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`.
	InspectionMode pulumi.StringOutput `pulumi:"inspectionMode"`
	// Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`.
	Ippool pulumi.StringOutput `pulumi:"ippool"`
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringOutput `pulumi:"ipsSensor"`
	// Label for the policy that appears when the GUI is in Section View mode.
	Label pulumi.StringOutput `pulumi:"label"`
	// Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringOutput `pulumi:"logtraffic"`
	// Record logs when a session starts. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringOutput `pulumi:"logtrafficStart"`
	// Names of FSSO groups.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringOutput `pulumi:"nat"`
	// Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`.
	Natinbound pulumi.StringOutput `pulumi:"natinbound"`
	// Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`.
	Natoutbound pulumi.StringOutput `pulumi:"natoutbound"`
	// Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`.
	Outbound pulumi.StringOutput `pulumi:"outbound"`
	// Per-IP traffic shaper.
	PerIpShaper pulumi.StringOutput `pulumi:"perIpShaper"`
	// Policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// IP Pool names. The structure of `poolname` block is documented below.
	Poolnames FirewallPolicy6PoolnameArrayOutput `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup pulumi.StringOutput `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringOutput `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringOutput `pulumi:"profileType"`
	// Override the default replacement message group for this policy.
	ReplacemsgOverrideGroup pulumi.StringOutput `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`.
	Rsso pulumi.StringOutput `pulumi:"rsso"`
	// Schedule name.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Enable/disable return of deny-packet. Valid values: `enable`, `disable`.
	SendDenyPacket pulumi.StringOutput `pulumi:"sendDenyPacket"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringOutput `pulumi:"serviceNegate"`
	// Service and service group names. The structure of `service` block is documented below.
	Services FirewallPolicy6ServiceArrayOutput `pulumi:"services"`
	// Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL.
	SessionTtl pulumi.IntOutput `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringOutput `pulumi:"spamfilterProfile"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringOutput `pulumi:"srcaddrNegate"`
	// Source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallPolicy6SrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs FirewallPolicy6SrcintfArrayOutput `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringOutput `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringOutput `pulumi:"sshPolicyRedirect"`
	// Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`.
	SslMirror pulumi.StringOutput `pulumi:"sslMirror"`
	// SSL mirror interface name. The structure of `sslMirrorIntf` block is documented below.
	SslMirrorIntfs FirewallPolicy6SslMirrorIntfArrayOutput `pulumi:"sslMirrorIntfs"`
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringOutput `pulumi:"sslSshProfile"`
	// Enable or disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Receiver TCP maximum segment size (MSS).
	TcpMssReceiver pulumi.IntOutput `pulumi:"tcpMssReceiver"`
	// Sender TCP maximum segment size (MSS).
	TcpMssSender pulumi.IntOutput `pulumi:"tcpMssSender"`
	// Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`.
	TcpSessionWithoutSyn pulumi.StringOutput `pulumi:"tcpSessionWithoutSyn"`
	// Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`.
	TimeoutSendRst pulumi.StringOutput `pulumi:"timeoutSendRst"`
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringOutput `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringOutput `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringOutput `pulumi:"tosNegate"`
	// Reverse traffic shaper.
	TrafficShaper pulumi.StringOutput `pulumi:"trafficShaper"`
	// Reverse traffic shaper.
	TrafficShaperReverse pulumi.StringOutput `pulumi:"trafficShaperReverse"`
	// URL category ID list. The structure of `urlCategory` block is documented below.
	UrlCategories FirewallPolicy6UrlCategoryArrayOutput `pulumi:"urlCategories"`
	// Names of individual users that can authenticate with this policy. The structure of `users` block is documented below.
	Users FirewallPolicy6UserArrayOutput `pulumi:"users"`
	// Enable AV/web/ips protection profile. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringOutput `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosFwd pulumi.IntOutput `pulumi:"vlanCosFwd"`
	// VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosRev pulumi.IntOutput `pulumi:"vlanCosRev"`
	// Set VLAN filters.
	VlanFilter pulumi.StringOutput `pulumi:"vlanFilter"`
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringOutput `pulumi:"voipProfile"`
	// Policy-based IPsec VPN: name of the IPsec VPN Phase 1.
	Vpntunnel pulumi.StringOutput `pulumi:"vpntunnel"`
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringOutput `pulumi:"wafProfile"`
	// Enable/disable web cache. Valid values: `enable`, `disable`.
	Webcache pulumi.StringOutput `pulumi:"webcache"`
	// Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringOutput `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringOutput `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringOutput `pulumi:"webproxyForwardServer"`
	// Webproxy profile name.
	WebproxyProfile pulumi.StringOutput `pulumi:"webproxyProfile"`
}

// NewFirewallPolicy6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy6(ctx *pulumi.Context,
	name string, args *FirewallPolicy6Args, opts ...pulumi.ResourceOption) (*FirewallPolicy6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Dstintfs == nil {
		return nil, errors.New("invalid value for required argument 'Dstintfs'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	if args.Srcintfs == nil {
		return nil, errors.New("invalid value for required argument 'Srcintfs'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallPolicy6
	err := ctx.RegisterResource("fortios:index/firewallPolicy6:FirewallPolicy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicy6 gets an existing FirewallPolicy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicy6State, opts ...pulumi.ResourceOption) (*FirewallPolicy6, error) {
	var resource FirewallPolicy6
	err := ctx.ReadResource("fortios:index/firewallPolicy6:FirewallPolicy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicy6 resources.
type firewallPolicy6State struct {
	// Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`.
	Action *string `pulumi:"action"`
	// Enable/disable anti-replay check. Valid values: `enable`, `disable`.
	AntiReplay *string `pulumi:"antiReplay"`
	// Application category ID list. The structure of `appCategory` block is documented below.
	AppCategories []FirewallPolicy6AppCategory `pulumi:"appCategories"`
	// Application group names. The structure of `appGroup` block is documented below.
	AppGroups []FirewallPolicy6AppGroup `pulumi:"appGroups"`
	// Name of an existing Application list.
	ApplicationList *string `pulumi:"applicationList"`
	// Application ID list. The structure of `application` block is documented below.
	Applications []FirewallPolicy6Application `pulumi:"applications"`
	// Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`.
	AutoAsicOffload *string `pulumi:"autoAsicOffload"`
	// Name of an existing Antivirus profile.
	AvProfile *string `pulumi:"avProfile"`
	// Name of an existing CIFS profile.
	CifsProfile *string `pulumi:"cifsProfile"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Log field index numbers to append custom log fields to log messages for this policy. The structure of `customLogFields` block is documented below.
	CustomLogFields []FirewallPolicy6CustomLogField `pulumi:"customLogFields"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Names of devices or device groups that can be matched by the policy. The structure of `devices` block is documented below.
	Devices []FirewallPolicy6Device `pulumi:"devices"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// Name of an existing DLP sensor.
	DlpSensor *string `pulumi:"dlpSensor"`
	// Name of an existing DNS filter profile.
	DnsfilterProfile *string `pulumi:"dnsfilterProfile"`
	// Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`.
	Dsri *string `pulumi:"dsri"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallPolicy6Dstaddr `pulumi:"dstaddrs"`
	// Outgoing (egress) interface. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallPolicy6Dstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile *string `pulumi:"emailfilterProfile"`
	// How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`.
	FirewallSessionDirty *string `pulumi:"firewallSessionDirty"`
	// Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`.
	Fixedport *string `pulumi:"fixedport"`
	// Names of FSSO groups. The structure of `fssoGroups` block is documented below.
	FssoGroups []FirewallPolicy6FssoGroup `pulumi:"fssoGroups"`
	// Label for the policy that appears when the GUI is in Global View mode.
	GlobalLabel *string `pulumi:"globalLabel"`
	// Names of user groups that can authenticate with this policy. The structure of `groups` block is documented below.
	Groups []FirewallPolicy6Group `pulumi:"groups"`
	// Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`.
	HttpPolicyRedirect *string `pulumi:"httpPolicyRedirect"`
	// Name of an existing ICAP profile.
	IcapProfile *string `pulumi:"icapProfile"`
	// Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`.
	Inbound *string `pulumi:"inbound"`
	// Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`.
	InspectionMode *string `pulumi:"inspectionMode"`
	// Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`.
	Ippool *string `pulumi:"ippool"`
	// Name of an existing IPS sensor.
	IpsSensor *string `pulumi:"ipsSensor"`
	// Label for the policy that appears when the GUI is in Section View mode.
	Label *string `pulumi:"label"`
	// Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`.
	Logtraffic *string `pulumi:"logtraffic"`
	// Record logs when a session starts. Valid values: `enable`, `disable`.
	LogtrafficStart *string `pulumi:"logtrafficStart"`
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
	// Enable/disable source NAT. Valid values: `enable`, `disable`.
	Nat *string `pulumi:"nat"`
	// Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`.
	Natinbound *string `pulumi:"natinbound"`
	// Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`.
	Natoutbound *string `pulumi:"natoutbound"`
	// Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`.
	Outbound *string `pulumi:"outbound"`
	// Per-IP traffic shaper.
	PerIpShaper *string `pulumi:"perIpShaper"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// IP Pool names. The structure of `poolname` block is documented below.
	Poolnames []FirewallPolicy6Poolname `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup *string `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions *string `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType *string `pulumi:"profileType"`
	// Override the default replacement message group for this policy.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`.
	Rsso *string `pulumi:"rsso"`
	// Schedule name.
	Schedule *string `pulumi:"schedule"`
	// Enable/disable return of deny-packet. Valid values: `enable`, `disable`.
	SendDenyPacket *string `pulumi:"sendDenyPacket"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service and service group names. The structure of `service` block is documented below.
	Services []FirewallPolicy6Service `pulumi:"services"`
	// Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL.
	SessionTtl *int `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile *string `pulumi:"spamfilterProfile"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallPolicy6Srcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallPolicy6Srcintf `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile *string `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect *string `pulumi:"sshPolicyRedirect"`
	// Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`.
	SslMirror *string `pulumi:"sslMirror"`
	// SSL mirror interface name. The structure of `sslMirrorIntf` block is documented below.
	SslMirrorIntfs []FirewallPolicy6SslMirrorIntf `pulumi:"sslMirrorIntfs"`
	// Name of an existing SSL SSH profile.
	SslSshProfile *string `pulumi:"sslSshProfile"`
	// Enable or disable this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Receiver TCP maximum segment size (MSS).
	TcpMssReceiver *int `pulumi:"tcpMssReceiver"`
	// Sender TCP maximum segment size (MSS).
	TcpMssSender *int `pulumi:"tcpMssSender"`
	// Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`.
	TcpSessionWithoutSyn *string `pulumi:"tcpSessionWithoutSyn"`
	// Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`.
	TimeoutSendRst *string `pulumi:"timeoutSendRst"`
	// ToS (Type of Service) value used for comparison.
	Tos *string `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask *string `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate *string `pulumi:"tosNegate"`
	// Reverse traffic shaper.
	TrafficShaper *string `pulumi:"trafficShaper"`
	// Reverse traffic shaper.
	TrafficShaperReverse *string `pulumi:"trafficShaperReverse"`
	// URL category ID list. The structure of `urlCategory` block is documented below.
	UrlCategories []FirewallPolicy6UrlCategory `pulumi:"urlCategories"`
	// Names of individual users that can authenticate with this policy. The structure of `users` block is documented below.
	Users []FirewallPolicy6User `pulumi:"users"`
	// Enable AV/web/ips protection profile. Valid values: `enable`, `disable`.
	UtmStatus *string `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosFwd *int `pulumi:"vlanCosFwd"`
	// VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosRev *int `pulumi:"vlanCosRev"`
	// Set VLAN filters.
	VlanFilter *string `pulumi:"vlanFilter"`
	// Name of an existing VoIP profile.
	VoipProfile *string `pulumi:"voipProfile"`
	// Policy-based IPsec VPN: name of the IPsec VPN Phase 1.
	Vpntunnel *string `pulumi:"vpntunnel"`
	// Name of an existing Web application firewall profile.
	WafProfile *string `pulumi:"wafProfile"`
	// Enable/disable web cache. Valid values: `enable`, `disable`.
	Webcache *string `pulumi:"webcache"`
	// Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`.
	WebcacheHttps *string `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer *string `pulumi:"webproxyForwardServer"`
	// Webproxy profile name.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

type FirewallPolicy6State struct {
	// Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`.
	Action pulumi.StringPtrInput
	// Enable/disable anti-replay check. Valid values: `enable`, `disable`.
	AntiReplay pulumi.StringPtrInput
	// Application category ID list. The structure of `appCategory` block is documented below.
	AppCategories FirewallPolicy6AppCategoryArrayInput
	// Application group names. The structure of `appGroup` block is documented below.
	AppGroups FirewallPolicy6AppGroupArrayInput
	// Name of an existing Application list.
	ApplicationList pulumi.StringPtrInput
	// Application ID list. The structure of `application` block is documented below.
	Applications FirewallPolicy6ApplicationArrayInput
	// Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`.
	AutoAsicOffload pulumi.StringPtrInput
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringPtrInput
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Log field index numbers to append custom log fields to log messages for this policy. The structure of `customLogFields` block is documented below.
	CustomLogFields FirewallPolicy6CustomLogFieldArrayInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Names of devices or device groups that can be matched by the policy. The structure of `devices` block is documented below.
	Devices FirewallPolicy6DeviceArrayInput
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringPtrInput
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringPtrInput
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringPtrInput
	// Name of an existing DNS filter profile.
	DnsfilterProfile pulumi.StringPtrInput
	// Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`.
	Dsri pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallPolicy6DstaddrArrayInput
	// Outgoing (egress) interface. The structure of `dstintf` block is documented below.
	Dstintfs FirewallPolicy6DstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringPtrInput
	// How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`.
	FirewallSessionDirty pulumi.StringPtrInput
	// Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`.
	Fixedport pulumi.StringPtrInput
	// Names of FSSO groups. The structure of `fssoGroups` block is documented below.
	FssoGroups FirewallPolicy6FssoGroupArrayInput
	// Label for the policy that appears when the GUI is in Global View mode.
	GlobalLabel pulumi.StringPtrInput
	// Names of user groups that can authenticate with this policy. The structure of `groups` block is documented below.
	Groups FirewallPolicy6GroupArrayInput
	// Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`.
	HttpPolicyRedirect pulumi.StringPtrInput
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringPtrInput
	// Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`.
	Inbound pulumi.StringPtrInput
	// Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`.
	InspectionMode pulumi.StringPtrInput
	// Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`.
	Ippool pulumi.StringPtrInput
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringPtrInput
	// Label for the policy that appears when the GUI is in Section View mode.
	Label pulumi.StringPtrInput
	// Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringPtrInput
	// Record logs when a session starts. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringPtrInput
	// Names of FSSO groups.
	Name pulumi.StringPtrInput
	// Enable/disable source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringPtrInput
	// Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`.
	Natinbound pulumi.StringPtrInput
	// Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`.
	Natoutbound pulumi.StringPtrInput
	// Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`.
	Outbound pulumi.StringPtrInput
	// Per-IP traffic shaper.
	PerIpShaper pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// IP Pool names. The structure of `poolname` block is documented below.
	Poolnames FirewallPolicy6PoolnameArrayInput
	// Name of profile group.
	ProfileGroup pulumi.StringPtrInput
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringPtrInput
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringPtrInput
	// Override the default replacement message group for this policy.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`.
	Rsso pulumi.StringPtrInput
	// Schedule name.
	Schedule pulumi.StringPtrInput
	// Enable/disable return of deny-packet. Valid values: `enable`, `disable`.
	SendDenyPacket pulumi.StringPtrInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service and service group names. The structure of `service` block is documented below.
	Services FirewallPolicy6ServiceArrayInput
	// Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL.
	SessionTtl pulumi.IntPtrInput
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringPtrInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallPolicy6SrcaddrArrayInput
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs FirewallPolicy6SrcintfArrayInput
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringPtrInput
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringPtrInput
	// Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`.
	SslMirror pulumi.StringPtrInput
	// SSL mirror interface name. The structure of `sslMirrorIntf` block is documented below.
	SslMirrorIntfs FirewallPolicy6SslMirrorIntfArrayInput
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringPtrInput
	// Enable or disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Receiver TCP maximum segment size (MSS).
	TcpMssReceiver pulumi.IntPtrInput
	// Sender TCP maximum segment size (MSS).
	TcpMssSender pulumi.IntPtrInput
	// Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`.
	TcpSessionWithoutSyn pulumi.StringPtrInput
	// Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`.
	TimeoutSendRst pulumi.StringPtrInput
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringPtrInput
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringPtrInput
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringPtrInput
	// Reverse traffic shaper.
	TrafficShaper pulumi.StringPtrInput
	// Reverse traffic shaper.
	TrafficShaperReverse pulumi.StringPtrInput
	// URL category ID list. The structure of `urlCategory` block is documented below.
	UrlCategories FirewallPolicy6UrlCategoryArrayInput
	// Names of individual users that can authenticate with this policy. The structure of `users` block is documented below.
	Users FirewallPolicy6UserArrayInput
	// Enable AV/web/ips protection profile. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosFwd pulumi.IntPtrInput
	// VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosRev pulumi.IntPtrInput
	// Set VLAN filters.
	VlanFilter pulumi.StringPtrInput
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringPtrInput
	// Policy-based IPsec VPN: name of the IPsec VPN Phase 1.
	Vpntunnel pulumi.StringPtrInput
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringPtrInput
	// Enable/disable web cache. Valid values: `enable`, `disable`.
	Webcache pulumi.StringPtrInput
	// Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringPtrInput
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringPtrInput
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringPtrInput
	// Webproxy profile name.
	WebproxyProfile pulumi.StringPtrInput
}

func (FirewallPolicy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicy6State)(nil)).Elem()
}

type firewallPolicy6Args struct {
	// Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`.
	Action *string `pulumi:"action"`
	// Enable/disable anti-replay check. Valid values: `enable`, `disable`.
	AntiReplay *string `pulumi:"antiReplay"`
	// Application category ID list. The structure of `appCategory` block is documented below.
	AppCategories []FirewallPolicy6AppCategory `pulumi:"appCategories"`
	// Application group names. The structure of `appGroup` block is documented below.
	AppGroups []FirewallPolicy6AppGroup `pulumi:"appGroups"`
	// Name of an existing Application list.
	ApplicationList *string `pulumi:"applicationList"`
	// Application ID list. The structure of `application` block is documented below.
	Applications []FirewallPolicy6Application `pulumi:"applications"`
	// Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`.
	AutoAsicOffload *string `pulumi:"autoAsicOffload"`
	// Name of an existing Antivirus profile.
	AvProfile *string `pulumi:"avProfile"`
	// Name of an existing CIFS profile.
	CifsProfile *string `pulumi:"cifsProfile"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Log field index numbers to append custom log fields to log messages for this policy. The structure of `customLogFields` block is documented below.
	CustomLogFields []FirewallPolicy6CustomLogField `pulumi:"customLogFields"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// Names of devices or device groups that can be matched by the policy. The structure of `devices` block is documented below.
	Devices []FirewallPolicy6Device `pulumi:"devices"`
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward *string `pulumi:"diffservForward"`
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse *string `pulumi:"diffservReverse"`
	// Change packet's DiffServ to this value.
	DiffservcodeForward *string `pulumi:"diffservcodeForward"`
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev *string `pulumi:"diffservcodeRev"`
	// Name of an existing DLP sensor.
	DlpSensor *string `pulumi:"dlpSensor"`
	// Name of an existing DNS filter profile.
	DnsfilterProfile *string `pulumi:"dnsfilterProfile"`
	// Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`.
	Dsri *string `pulumi:"dsri"`
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallPolicy6Dstaddr `pulumi:"dstaddrs"`
	// Outgoing (egress) interface. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallPolicy6Dstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile *string `pulumi:"emailfilterProfile"`
	// How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`.
	FirewallSessionDirty *string `pulumi:"firewallSessionDirty"`
	// Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`.
	Fixedport *string `pulumi:"fixedport"`
	// Names of FSSO groups. The structure of `fssoGroups` block is documented below.
	FssoGroups []FirewallPolicy6FssoGroup `pulumi:"fssoGroups"`
	// Label for the policy that appears when the GUI is in Global View mode.
	GlobalLabel *string `pulumi:"globalLabel"`
	// Names of user groups that can authenticate with this policy. The structure of `groups` block is documented below.
	Groups []FirewallPolicy6Group `pulumi:"groups"`
	// Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`.
	HttpPolicyRedirect *string `pulumi:"httpPolicyRedirect"`
	// Name of an existing ICAP profile.
	IcapProfile *string `pulumi:"icapProfile"`
	// Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`.
	Inbound *string `pulumi:"inbound"`
	// Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`.
	InspectionMode *string `pulumi:"inspectionMode"`
	// Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`.
	Ippool *string `pulumi:"ippool"`
	// Name of an existing IPS sensor.
	IpsSensor *string `pulumi:"ipsSensor"`
	// Label for the policy that appears when the GUI is in Section View mode.
	Label *string `pulumi:"label"`
	// Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`.
	Logtraffic *string `pulumi:"logtraffic"`
	// Record logs when a session starts. Valid values: `enable`, `disable`.
	LogtrafficStart *string `pulumi:"logtrafficStart"`
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
	// Enable/disable source NAT. Valid values: `enable`, `disable`.
	Nat *string `pulumi:"nat"`
	// Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`.
	Natinbound *string `pulumi:"natinbound"`
	// Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`.
	Natoutbound *string `pulumi:"natoutbound"`
	// Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`.
	Outbound *string `pulumi:"outbound"`
	// Per-IP traffic shaper.
	PerIpShaper *string `pulumi:"perIpShaper"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// IP Pool names. The structure of `poolname` block is documented below.
	Poolnames []FirewallPolicy6Poolname `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup *string `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions *string `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType *string `pulumi:"profileType"`
	// Override the default replacement message group for this policy.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`.
	Rsso *string `pulumi:"rsso"`
	// Schedule name.
	Schedule string `pulumi:"schedule"`
	// Enable/disable return of deny-packet. Valid values: `enable`, `disable`.
	SendDenyPacket *string `pulumi:"sendDenyPacket"`
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Service and service group names. The structure of `service` block is documented below.
	Services []FirewallPolicy6Service `pulumi:"services"`
	// Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL.
	SessionTtl *int `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile *string `pulumi:"spamfilterProfile"`
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallPolicy6Srcaddr `pulumi:"srcaddrs"`
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallPolicy6Srcintf `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile *string `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect *string `pulumi:"sshPolicyRedirect"`
	// Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`.
	SslMirror *string `pulumi:"sslMirror"`
	// SSL mirror interface name. The structure of `sslMirrorIntf` block is documented below.
	SslMirrorIntfs []FirewallPolicy6SslMirrorIntf `pulumi:"sslMirrorIntfs"`
	// Name of an existing SSL SSH profile.
	SslSshProfile *string `pulumi:"sslSshProfile"`
	// Enable or disable this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Receiver TCP maximum segment size (MSS).
	TcpMssReceiver *int `pulumi:"tcpMssReceiver"`
	// Sender TCP maximum segment size (MSS).
	TcpMssSender *int `pulumi:"tcpMssSender"`
	// Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`.
	TcpSessionWithoutSyn *string `pulumi:"tcpSessionWithoutSyn"`
	// Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`.
	TimeoutSendRst *string `pulumi:"timeoutSendRst"`
	// ToS (Type of Service) value used for comparison.
	Tos *string `pulumi:"tos"`
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask *string `pulumi:"tosMask"`
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate *string `pulumi:"tosNegate"`
	// Reverse traffic shaper.
	TrafficShaper *string `pulumi:"trafficShaper"`
	// Reverse traffic shaper.
	TrafficShaperReverse *string `pulumi:"trafficShaperReverse"`
	// URL category ID list. The structure of `urlCategory` block is documented below.
	UrlCategories []FirewallPolicy6UrlCategory `pulumi:"urlCategories"`
	// Names of individual users that can authenticate with this policy. The structure of `users` block is documented below.
	Users []FirewallPolicy6User `pulumi:"users"`
	// Enable AV/web/ips protection profile. Valid values: `enable`, `disable`.
	UtmStatus *string `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosFwd *int `pulumi:"vlanCosFwd"`
	// VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosRev *int `pulumi:"vlanCosRev"`
	// Set VLAN filters.
	VlanFilter *string `pulumi:"vlanFilter"`
	// Name of an existing VoIP profile.
	VoipProfile *string `pulumi:"voipProfile"`
	// Policy-based IPsec VPN: name of the IPsec VPN Phase 1.
	Vpntunnel *string `pulumi:"vpntunnel"`
	// Name of an existing Web application firewall profile.
	WafProfile *string `pulumi:"wafProfile"`
	// Enable/disable web cache. Valid values: `enable`, `disable`.
	Webcache *string `pulumi:"webcache"`
	// Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`.
	WebcacheHttps *string `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer *string `pulumi:"webproxyForwardServer"`
	// Webproxy profile name.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

// The set of arguments for constructing a FirewallPolicy6 resource.
type FirewallPolicy6Args struct {
	// Policy action (allow/deny/ipsec). Valid values: `accept`, `deny`, `ipsec`.
	Action pulumi.StringPtrInput
	// Enable/disable anti-replay check. Valid values: `enable`, `disable`.
	AntiReplay pulumi.StringPtrInput
	// Application category ID list. The structure of `appCategory` block is documented below.
	AppCategories FirewallPolicy6AppCategoryArrayInput
	// Application group names. The structure of `appGroup` block is documented below.
	AppGroups FirewallPolicy6AppGroupArrayInput
	// Name of an existing Application list.
	ApplicationList pulumi.StringPtrInput
	// Application ID list. The structure of `application` block is documented below.
	Applications FirewallPolicy6ApplicationArrayInput
	// Enable/disable policy traffic ASIC offloading. Valid values: `enable`, `disable`.
	AutoAsicOffload pulumi.StringPtrInput
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringPtrInput
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Log field index numbers to append custom log fields to log messages for this policy. The structure of `customLogFields` block is documented below.
	CustomLogFields FirewallPolicy6CustomLogFieldArrayInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// Names of devices or device groups that can be matched by the policy. The structure of `devices` block is documented below.
	Devices FirewallPolicy6DeviceArrayInput
	// Enable to change packet's DiffServ values to the specified diffservcode-forward value. Valid values: `enable`, `disable`.
	DiffservForward pulumi.StringPtrInput
	// Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value. Valid values: `enable`, `disable`.
	DiffservReverse pulumi.StringPtrInput
	// Change packet's DiffServ to this value.
	DiffservcodeForward pulumi.StringPtrInput
	// Change packet's reverse (reply) DiffServ to this value.
	DiffservcodeRev pulumi.StringPtrInput
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringPtrInput
	// Name of an existing DNS filter profile.
	DnsfilterProfile pulumi.StringPtrInput
	// Enable DSRI to ignore HTTP server responses. Valid values: `enable`, `disable`.
	Dsri pulumi.StringPtrInput
	// When enabled dstaddr specifies what the destination address must NOT be. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address and address group names. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallPolicy6DstaddrArrayInput
	// Outgoing (egress) interface. The structure of `dstintf` block is documented below.
	Dstintfs FirewallPolicy6DstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringPtrInput
	// How to handle sessions if the configuration of this firewall policy changes. Valid values: `check-all`, `check-new`.
	FirewallSessionDirty pulumi.StringPtrInput
	// Enable to prevent source NAT from changing a session's source port. Valid values: `enable`, `disable`.
	Fixedport pulumi.StringPtrInput
	// Names of FSSO groups. The structure of `fssoGroups` block is documented below.
	FssoGroups FirewallPolicy6FssoGroupArrayInput
	// Label for the policy that appears when the GUI is in Global View mode.
	GlobalLabel pulumi.StringPtrInput
	// Names of user groups that can authenticate with this policy. The structure of `groups` block is documented below.
	Groups FirewallPolicy6GroupArrayInput
	// Redirect HTTP(S) traffic to matching transparent web proxy policy. Valid values: `enable`, `disable`.
	HttpPolicyRedirect pulumi.StringPtrInput
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringPtrInput
	// Policy-based IPsec VPN: only traffic from the remote network can initiate a VPN. Valid values: `enable`, `disable`.
	Inbound pulumi.StringPtrInput
	// Policy inspection mode (Flow/proxy). Default is Flow mode. Valid values: `proxy`, `flow`.
	InspectionMode pulumi.StringPtrInput
	// Enable to use IP Pools for source NAT. Valid values: `enable`, `disable`.
	Ippool pulumi.StringPtrInput
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringPtrInput
	// Label for the policy that appears when the GUI is in Section View mode.
	Label pulumi.StringPtrInput
	// Enable or disable logging. Log all sessions or security profile sessions. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringPtrInput
	// Record logs when a session starts. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringPtrInput
	// Names of FSSO groups.
	Name pulumi.StringPtrInput
	// Enable/disable source NAT. Valid values: `enable`, `disable`.
	Nat pulumi.StringPtrInput
	// Policy-based IPsec VPN: apply destination NAT to inbound traffic. Valid values: `enable`, `disable`.
	Natinbound pulumi.StringPtrInput
	// Policy-based IPsec VPN: apply source NAT to outbound traffic. Valid values: `enable`, `disable`.
	Natoutbound pulumi.StringPtrInput
	// Policy-based IPsec VPN: only traffic from the internal network can initiate a VPN. Valid values: `enable`, `disable`.
	Outbound pulumi.StringPtrInput
	// Per-IP traffic shaper.
	PerIpShaper pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// IP Pool names. The structure of `poolname` block is documented below.
	Poolnames FirewallPolicy6PoolnameArrayInput
	// Name of profile group.
	ProfileGroup pulumi.StringPtrInput
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringPtrInput
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringPtrInput
	// Override the default replacement message group for this policy.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// Enable/disable RADIUS single sign-on (RSSO). Valid values: `enable`, `disable`.
	Rsso pulumi.StringPtrInput
	// Schedule name.
	Schedule pulumi.StringInput
	// Enable/disable return of deny-packet. Valid values: `enable`, `disable`.
	SendDenyPacket pulumi.StringPtrInput
	// When enabled service specifies what the service must NOT be. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Service and service group names. The structure of `service` block is documented below.
	Services FirewallPolicy6ServiceArrayInput
	// Session TTL in seconds for sessions accepted by this policy. 0 means use the system default session TTL.
	SessionTtl pulumi.IntPtrInput
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringPtrInput
	// When enabled srcaddr specifies what the source address must NOT be. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address and address group names. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallPolicy6SrcaddrArrayInput
	// Incoming (ingress) interface. The structure of `srcintf` block is documented below.
	Srcintfs FirewallPolicy6SrcintfArrayInput
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringPtrInput
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringPtrInput
	// Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring). Valid values: `enable`, `disable`.
	SslMirror pulumi.StringPtrInput
	// SSL mirror interface name. The structure of `sslMirrorIntf` block is documented below.
	SslMirrorIntfs FirewallPolicy6SslMirrorIntfArrayInput
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringPtrInput
	// Enable or disable this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Receiver TCP maximum segment size (MSS).
	TcpMssReceiver pulumi.IntPtrInput
	// Sender TCP maximum segment size (MSS).
	TcpMssSender pulumi.IntPtrInput
	// Enable/disable creation of TCP session without SYN flag. Valid values: `all`, `data-only`, `disable`.
	TcpSessionWithoutSyn pulumi.StringPtrInput
	// Enable/disable sending RST packets when TCP sessions expire. Valid values: `enable`, `disable`.
	TimeoutSendRst pulumi.StringPtrInput
	// ToS (Type of Service) value used for comparison.
	Tos pulumi.StringPtrInput
	// Non-zero bit positions are used for comparison while zero bit positions are ignored.
	TosMask pulumi.StringPtrInput
	// Enable negated TOS match. Valid values: `enable`, `disable`.
	TosNegate pulumi.StringPtrInput
	// Reverse traffic shaper.
	TrafficShaper pulumi.StringPtrInput
	// Reverse traffic shaper.
	TrafficShaperReverse pulumi.StringPtrInput
	// URL category ID list. The structure of `urlCategory` block is documented below.
	UrlCategories FirewallPolicy6UrlCategoryArrayInput
	// Names of individual users that can authenticate with this policy. The structure of `users` block is documented below.
	Users FirewallPolicy6UserArrayInput
	// Enable AV/web/ips protection profile. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN forward direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosFwd pulumi.IntPtrInput
	// VLAN reverse direction user priority: 255 passthrough, 0 lowest, 7 highest
	VlanCosRev pulumi.IntPtrInput
	// Set VLAN filters.
	VlanFilter pulumi.StringPtrInput
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringPtrInput
	// Policy-based IPsec VPN: name of the IPsec VPN Phase 1.
	Vpntunnel pulumi.StringPtrInput
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringPtrInput
	// Enable/disable web cache. Valid values: `enable`, `disable`.
	Webcache pulumi.StringPtrInput
	// Enable/disable web cache for HTTPS. Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringPtrInput
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringPtrInput
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringPtrInput
	// Webproxy profile name.
	WebproxyProfile pulumi.StringPtrInput
}

func (FirewallPolicy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicy6Args)(nil)).Elem()
}

type FirewallPolicy6Input interface {
	pulumi.Input

	ToFirewallPolicy6Output() FirewallPolicy6Output
	ToFirewallPolicy6OutputWithContext(ctx context.Context) FirewallPolicy6Output
}

func (*FirewallPolicy6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy6)(nil)).Elem()
}

func (i *FirewallPolicy6) ToFirewallPolicy6Output() FirewallPolicy6Output {
	return i.ToFirewallPolicy6OutputWithContext(context.Background())
}

func (i *FirewallPolicy6) ToFirewallPolicy6OutputWithContext(ctx context.Context) FirewallPolicy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6Output)
}

// FirewallPolicy6ArrayInput is an input type that accepts FirewallPolicy6Array and FirewallPolicy6ArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy6ArrayInput` via:
//
//          FirewallPolicy6Array{ FirewallPolicy6Args{...} }
type FirewallPolicy6ArrayInput interface {
	pulumi.Input

	ToFirewallPolicy6ArrayOutput() FirewallPolicy6ArrayOutput
	ToFirewallPolicy6ArrayOutputWithContext(context.Context) FirewallPolicy6ArrayOutput
}

type FirewallPolicy6Array []FirewallPolicy6Input

func (FirewallPolicy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy6)(nil)).Elem()
}

func (i FirewallPolicy6Array) ToFirewallPolicy6ArrayOutput() FirewallPolicy6ArrayOutput {
	return i.ToFirewallPolicy6ArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy6Array) ToFirewallPolicy6ArrayOutputWithContext(ctx context.Context) FirewallPolicy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6ArrayOutput)
}

// FirewallPolicy6MapInput is an input type that accepts FirewallPolicy6Map and FirewallPolicy6MapOutput values.
// You can construct a concrete instance of `FirewallPolicy6MapInput` via:
//
//          FirewallPolicy6Map{ "key": FirewallPolicy6Args{...} }
type FirewallPolicy6MapInput interface {
	pulumi.Input

	ToFirewallPolicy6MapOutput() FirewallPolicy6MapOutput
	ToFirewallPolicy6MapOutputWithContext(context.Context) FirewallPolicy6MapOutput
}

type FirewallPolicy6Map map[string]FirewallPolicy6Input

func (FirewallPolicy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy6)(nil)).Elem()
}

func (i FirewallPolicy6Map) ToFirewallPolicy6MapOutput() FirewallPolicy6MapOutput {
	return i.ToFirewallPolicy6MapOutputWithContext(context.Background())
}

func (i FirewallPolicy6Map) ToFirewallPolicy6MapOutputWithContext(ctx context.Context) FirewallPolicy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy6MapOutput)
}

type FirewallPolicy6Output struct{ *pulumi.OutputState }

func (FirewallPolicy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy6)(nil)).Elem()
}

func (o FirewallPolicy6Output) ToFirewallPolicy6Output() FirewallPolicy6Output {
	return o
}

func (o FirewallPolicy6Output) ToFirewallPolicy6OutputWithContext(ctx context.Context) FirewallPolicy6Output {
	return o
}

type FirewallPolicy6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy6)(nil)).Elem()
}

func (o FirewallPolicy6ArrayOutput) ToFirewallPolicy6ArrayOutput() FirewallPolicy6ArrayOutput {
	return o
}

func (o FirewallPolicy6ArrayOutput) ToFirewallPolicy6ArrayOutputWithContext(ctx context.Context) FirewallPolicy6ArrayOutput {
	return o
}

func (o FirewallPolicy6ArrayOutput) Index(i pulumi.IntInput) FirewallPolicy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallPolicy6 {
		return vs[0].([]*FirewallPolicy6)[vs[1].(int)]
	}).(FirewallPolicy6Output)
}

type FirewallPolicy6MapOutput struct{ *pulumi.OutputState }

func (FirewallPolicy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy6)(nil)).Elem()
}

func (o FirewallPolicy6MapOutput) ToFirewallPolicy6MapOutput() FirewallPolicy6MapOutput {
	return o
}

func (o FirewallPolicy6MapOutput) ToFirewallPolicy6MapOutputWithContext(ctx context.Context) FirewallPolicy6MapOutput {
	return o
}

func (o FirewallPolicy6MapOutput) MapIndex(k pulumi.StringInput) FirewallPolicy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallPolicy6 {
		return vs[0].(map[string]*FirewallPolicy6)[vs[1].(string)]
	}).(FirewallPolicy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6Input)(nil)).Elem(), &FirewallPolicy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6ArrayInput)(nil)).Elem(), FirewallPolicy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy6MapInput)(nil)).Elem(), FirewallPolicy6Map{})
	pulumi.RegisterOutputType(FirewallPolicy6Output{})
	pulumi.RegisterOutputType(FirewallPolicy6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy6MapOutput{})
}
