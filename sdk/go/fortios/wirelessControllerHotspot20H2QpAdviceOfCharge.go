// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure advice of charge. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// WirelessControllerHotspot20 H2QpAdviceOfCharge can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20H2QpAdviceOfCharge:WirelessControllerHotspot20H2QpAdviceOfCharge labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerHotspot20H2QpAdviceOfCharge struct {
	pulumi.CustomResourceState

	// AOC list. The structure of `aocList` block is documented below.
	AocLists WirelessControllerHotspot20H2QpAdviceOfChargeAocListArrayOutput `pulumi:"aocLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Plan name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerHotspot20H2QpAdviceOfCharge registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20H2QpAdviceOfCharge(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20H2QpAdviceOfChargeArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpAdviceOfCharge, error) {
	if args == nil {
		args = &WirelessControllerHotspot20H2QpAdviceOfChargeArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20H2QpAdviceOfCharge
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20H2QpAdviceOfCharge:WirelessControllerHotspot20H2QpAdviceOfCharge", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20H2QpAdviceOfCharge gets an existing WirelessControllerHotspot20H2QpAdviceOfCharge resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20H2QpAdviceOfCharge(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20H2QpAdviceOfChargeState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpAdviceOfCharge, error) {
	var resource WirelessControllerHotspot20H2QpAdviceOfCharge
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20H2QpAdviceOfCharge:WirelessControllerHotspot20H2QpAdviceOfCharge", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20H2QpAdviceOfCharge resources.
type wirelessControllerHotspot20H2QpAdviceOfChargeState struct {
	// AOC list. The structure of `aocList` block is documented below.
	AocLists []WirelessControllerHotspot20H2QpAdviceOfChargeAocList `pulumi:"aocLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Plan name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerHotspot20H2QpAdviceOfChargeState struct {
	// AOC list. The structure of `aocList` block is documented below.
	AocLists WirelessControllerHotspot20H2QpAdviceOfChargeAocListArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Plan name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpAdviceOfChargeState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpAdviceOfChargeState)(nil)).Elem()
}

type wirelessControllerHotspot20H2QpAdviceOfChargeArgs struct {
	// AOC list. The structure of `aocList` block is documented below.
	AocLists []WirelessControllerHotspot20H2QpAdviceOfChargeAocList `pulumi:"aocLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Plan name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerHotspot20H2QpAdviceOfCharge resource.
type WirelessControllerHotspot20H2QpAdviceOfChargeArgs struct {
	// AOC list. The structure of `aocList` block is documented below.
	AocLists WirelessControllerHotspot20H2QpAdviceOfChargeAocListArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Plan name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpAdviceOfChargeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpAdviceOfChargeArgs)(nil)).Elem()
}

type WirelessControllerHotspot20H2QpAdviceOfChargeInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpAdviceOfChargeOutput() WirelessControllerHotspot20H2QpAdviceOfChargeOutput
	ToWirelessControllerHotspot20H2QpAdviceOfChargeOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeOutput
}

func (*WirelessControllerHotspot20H2QpAdviceOfCharge) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (i *WirelessControllerHotspot20H2QpAdviceOfCharge) ToWirelessControllerHotspot20H2QpAdviceOfChargeOutput() WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return i.ToWirelessControllerHotspot20H2QpAdviceOfChargeOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20H2QpAdviceOfCharge) ToWirelessControllerHotspot20H2QpAdviceOfChargeOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpAdviceOfChargeOutput)
}

// WirelessControllerHotspot20H2QpAdviceOfChargeArrayInput is an input type that accepts WirelessControllerHotspot20H2QpAdviceOfChargeArray and WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpAdviceOfChargeArrayInput` via:
//
//          WirelessControllerHotspot20H2QpAdviceOfChargeArray{ WirelessControllerHotspot20H2QpAdviceOfChargeArgs{...} }
type WirelessControllerHotspot20H2QpAdviceOfChargeArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput() WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput
	ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutputWithContext(context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput
}

type WirelessControllerHotspot20H2QpAdviceOfChargeArray []WirelessControllerHotspot20H2QpAdviceOfChargeInput

func (WirelessControllerHotspot20H2QpAdviceOfChargeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpAdviceOfChargeArray) ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput() WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput {
	return i.ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpAdviceOfChargeArray) ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput)
}

// WirelessControllerHotspot20H2QpAdviceOfChargeMapInput is an input type that accepts WirelessControllerHotspot20H2QpAdviceOfChargeMap and WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpAdviceOfChargeMapInput` via:
//
//          WirelessControllerHotspot20H2QpAdviceOfChargeMap{ "key": WirelessControllerHotspot20H2QpAdviceOfChargeArgs{...} }
type WirelessControllerHotspot20H2QpAdviceOfChargeMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutput() WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput
	ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutputWithContext(context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput
}

type WirelessControllerHotspot20H2QpAdviceOfChargeMap map[string]WirelessControllerHotspot20H2QpAdviceOfChargeInput

func (WirelessControllerHotspot20H2QpAdviceOfChargeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpAdviceOfChargeMap) ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutput() WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput {
	return i.ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpAdviceOfChargeMap) ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput)
}

type WirelessControllerHotspot20H2QpAdviceOfChargeOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpAdviceOfChargeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeOutput() WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return o
}

type WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput() WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpAdviceOfCharge {
		return vs[0].([]*WirelessControllerHotspot20H2QpAdviceOfCharge)[vs[1].(int)]
	}).(WirelessControllerHotspot20H2QpAdviceOfChargeOutput)
}

type WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpAdviceOfCharge)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutput() WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput) ToWirelessControllerHotspot20H2QpAdviceOfChargeMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20H2QpAdviceOfChargeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpAdviceOfCharge {
		return vs[0].(map[string]*WirelessControllerHotspot20H2QpAdviceOfCharge)[vs[1].(string)]
	}).(WirelessControllerHotspot20H2QpAdviceOfChargeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpAdviceOfChargeInput)(nil)).Elem(), &WirelessControllerHotspot20H2QpAdviceOfCharge{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpAdviceOfChargeArrayInput)(nil)).Elem(), WirelessControllerHotspot20H2QpAdviceOfChargeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpAdviceOfChargeMapInput)(nil)).Elem(), WirelessControllerHotspot20H2QpAdviceOfChargeMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpAdviceOfChargeOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpAdviceOfChargeArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpAdviceOfChargeMapOutput{})
}
