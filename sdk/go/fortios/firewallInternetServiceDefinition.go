// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Internet Service definition.
//
// ## Import
//
// Firewall InternetServiceDefinition can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallInternetServiceDefinition:FirewallInternetServiceDefinition labelname {{fosid}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallInternetServiceDefinition:FirewallInternetServiceDefinition labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallInternetServiceDefinition struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Protocol and port information in an Internet Service entry. The structure of `entry` block is documented below.
	Entries FirewallInternetServiceDefinitionEntryArrayOutput `pulumi:"entries"`
	// Internet Service application list ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallInternetServiceDefinition registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetServiceDefinition(ctx *pulumi.Context,
	name string, args *FirewallInternetServiceDefinitionArgs, opts ...pulumi.ResourceOption) (*FirewallInternetServiceDefinition, error) {
	if args == nil {
		args = &FirewallInternetServiceDefinitionArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallInternetServiceDefinition
	err := ctx.RegisterResource("fortios:index/firewallInternetServiceDefinition:FirewallInternetServiceDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetServiceDefinition gets an existing FirewallInternetServiceDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetServiceDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetServiceDefinitionState, opts ...pulumi.ResourceOption) (*FirewallInternetServiceDefinition, error) {
	var resource FirewallInternetServiceDefinition
	err := ctx.ReadResource("fortios:index/firewallInternetServiceDefinition:FirewallInternetServiceDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetServiceDefinition resources.
type firewallInternetServiceDefinitionState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Protocol and port information in an Internet Service entry. The structure of `entry` block is documented below.
	Entries []FirewallInternetServiceDefinitionEntry `pulumi:"entries"`
	// Internet Service application list ID.
	Fosid *int `pulumi:"fosid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallInternetServiceDefinitionState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Protocol and port information in an Internet Service entry. The structure of `entry` block is documented below.
	Entries FirewallInternetServiceDefinitionEntryArrayInput
	// Internet Service application list ID.
	Fosid pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetServiceDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceDefinitionState)(nil)).Elem()
}

type firewallInternetServiceDefinitionArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Protocol and port information in an Internet Service entry. The structure of `entry` block is documented below.
	Entries []FirewallInternetServiceDefinitionEntry `pulumi:"entries"`
	// Internet Service application list ID.
	Fosid *int `pulumi:"fosid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetServiceDefinition resource.
type FirewallInternetServiceDefinitionArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Protocol and port information in an Internet Service entry. The structure of `entry` block is documented below.
	Entries FirewallInternetServiceDefinitionEntryArrayInput
	// Internet Service application list ID.
	Fosid pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetServiceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceDefinitionArgs)(nil)).Elem()
}

type FirewallInternetServiceDefinitionInput interface {
	pulumi.Input

	ToFirewallInternetServiceDefinitionOutput() FirewallInternetServiceDefinitionOutput
	ToFirewallInternetServiceDefinitionOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionOutput
}

func (*FirewallInternetServiceDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceDefinition)(nil)).Elem()
}

func (i *FirewallInternetServiceDefinition) ToFirewallInternetServiceDefinitionOutput() FirewallInternetServiceDefinitionOutput {
	return i.ToFirewallInternetServiceDefinitionOutputWithContext(context.Background())
}

func (i *FirewallInternetServiceDefinition) ToFirewallInternetServiceDefinitionOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceDefinitionOutput)
}

// FirewallInternetServiceDefinitionArrayInput is an input type that accepts FirewallInternetServiceDefinitionArray and FirewallInternetServiceDefinitionArrayOutput values.
// You can construct a concrete instance of `FirewallInternetServiceDefinitionArrayInput` via:
//
//          FirewallInternetServiceDefinitionArray{ FirewallInternetServiceDefinitionArgs{...} }
type FirewallInternetServiceDefinitionArrayInput interface {
	pulumi.Input

	ToFirewallInternetServiceDefinitionArrayOutput() FirewallInternetServiceDefinitionArrayOutput
	ToFirewallInternetServiceDefinitionArrayOutputWithContext(context.Context) FirewallInternetServiceDefinitionArrayOutput
}

type FirewallInternetServiceDefinitionArray []FirewallInternetServiceDefinitionInput

func (FirewallInternetServiceDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceDefinition)(nil)).Elem()
}

func (i FirewallInternetServiceDefinitionArray) ToFirewallInternetServiceDefinitionArrayOutput() FirewallInternetServiceDefinitionArrayOutput {
	return i.ToFirewallInternetServiceDefinitionArrayOutputWithContext(context.Background())
}

func (i FirewallInternetServiceDefinitionArray) ToFirewallInternetServiceDefinitionArrayOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceDefinitionArrayOutput)
}

// FirewallInternetServiceDefinitionMapInput is an input type that accepts FirewallInternetServiceDefinitionMap and FirewallInternetServiceDefinitionMapOutput values.
// You can construct a concrete instance of `FirewallInternetServiceDefinitionMapInput` via:
//
//          FirewallInternetServiceDefinitionMap{ "key": FirewallInternetServiceDefinitionArgs{...} }
type FirewallInternetServiceDefinitionMapInput interface {
	pulumi.Input

	ToFirewallInternetServiceDefinitionMapOutput() FirewallInternetServiceDefinitionMapOutput
	ToFirewallInternetServiceDefinitionMapOutputWithContext(context.Context) FirewallInternetServiceDefinitionMapOutput
}

type FirewallInternetServiceDefinitionMap map[string]FirewallInternetServiceDefinitionInput

func (FirewallInternetServiceDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceDefinition)(nil)).Elem()
}

func (i FirewallInternetServiceDefinitionMap) ToFirewallInternetServiceDefinitionMapOutput() FirewallInternetServiceDefinitionMapOutput {
	return i.ToFirewallInternetServiceDefinitionMapOutputWithContext(context.Background())
}

func (i FirewallInternetServiceDefinitionMap) ToFirewallInternetServiceDefinitionMapOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceDefinitionMapOutput)
}

type FirewallInternetServiceDefinitionOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceDefinition)(nil)).Elem()
}

func (o FirewallInternetServiceDefinitionOutput) ToFirewallInternetServiceDefinitionOutput() FirewallInternetServiceDefinitionOutput {
	return o
}

func (o FirewallInternetServiceDefinitionOutput) ToFirewallInternetServiceDefinitionOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionOutput {
	return o
}

type FirewallInternetServiceDefinitionArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceDefinition)(nil)).Elem()
}

func (o FirewallInternetServiceDefinitionArrayOutput) ToFirewallInternetServiceDefinitionArrayOutput() FirewallInternetServiceDefinitionArrayOutput {
	return o
}

func (o FirewallInternetServiceDefinitionArrayOutput) ToFirewallInternetServiceDefinitionArrayOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionArrayOutput {
	return o
}

func (o FirewallInternetServiceDefinitionArrayOutput) Index(i pulumi.IntInput) FirewallInternetServiceDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetServiceDefinition {
		return vs[0].([]*FirewallInternetServiceDefinition)[vs[1].(int)]
	}).(FirewallInternetServiceDefinitionOutput)
}

type FirewallInternetServiceDefinitionMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceDefinition)(nil)).Elem()
}

func (o FirewallInternetServiceDefinitionMapOutput) ToFirewallInternetServiceDefinitionMapOutput() FirewallInternetServiceDefinitionMapOutput {
	return o
}

func (o FirewallInternetServiceDefinitionMapOutput) ToFirewallInternetServiceDefinitionMapOutputWithContext(ctx context.Context) FirewallInternetServiceDefinitionMapOutput {
	return o
}

func (o FirewallInternetServiceDefinitionMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetServiceDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetServiceDefinition {
		return vs[0].(map[string]*FirewallInternetServiceDefinition)[vs[1].(string)]
	}).(FirewallInternetServiceDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceDefinitionInput)(nil)).Elem(), &FirewallInternetServiceDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceDefinitionArrayInput)(nil)).Elem(), FirewallInternetServiceDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceDefinitionMapInput)(nil)).Elem(), FirewallInternetServiceDefinitionMap{})
	pulumi.RegisterOutputType(FirewallInternetServiceDefinitionOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceDefinitionArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceDefinitionMapOutput{})
}
