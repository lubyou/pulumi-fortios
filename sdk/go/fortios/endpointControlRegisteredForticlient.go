// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type EndpointControlRegisteredForticlient struct {
	pulumi.CustomResourceState

	Flag         pulumi.IntOutput       `pulumi:"flag"`
	Ip           pulumi.StringOutput    `pulumi:"ip"`
	Mac          pulumi.StringOutput    `pulumi:"mac"`
	RegFortigate pulumi.StringOutput    `pulumi:"regFortigate"`
	Status       pulumi.IntOutput       `pulumi:"status"`
	Uid          pulumi.StringOutput    `pulumi:"uid"`
	Vdom         pulumi.StringOutput    `pulumi:"vdom"`
	Vdomparam    pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewEndpointControlRegisteredForticlient registers a new resource with the given unique name, arguments, and options.
func NewEndpointControlRegisteredForticlient(ctx *pulumi.Context,
	name string, args *EndpointControlRegisteredForticlientArgs, opts ...pulumi.ResourceOption) (*EndpointControlRegisteredForticlient, error) {
	if args == nil {
		args = &EndpointControlRegisteredForticlientArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointControlRegisteredForticlient
	err := ctx.RegisterResource("fortios:index/endpointControlRegisteredForticlient:EndpointControlRegisteredForticlient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointControlRegisteredForticlient gets an existing EndpointControlRegisteredForticlient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointControlRegisteredForticlient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointControlRegisteredForticlientState, opts ...pulumi.ResourceOption) (*EndpointControlRegisteredForticlient, error) {
	var resource EndpointControlRegisteredForticlient
	err := ctx.ReadResource("fortios:index/endpointControlRegisteredForticlient:EndpointControlRegisteredForticlient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointControlRegisteredForticlient resources.
type endpointControlRegisteredForticlientState struct {
	Flag         *int    `pulumi:"flag"`
	Ip           *string `pulumi:"ip"`
	Mac          *string `pulumi:"mac"`
	RegFortigate *string `pulumi:"regFortigate"`
	Status       *int    `pulumi:"status"`
	Uid          *string `pulumi:"uid"`
	Vdom         *string `pulumi:"vdom"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

type EndpointControlRegisteredForticlientState struct {
	Flag         pulumi.IntPtrInput
	Ip           pulumi.StringPtrInput
	Mac          pulumi.StringPtrInput
	RegFortigate pulumi.StringPtrInput
	Status       pulumi.IntPtrInput
	Uid          pulumi.StringPtrInput
	Vdom         pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (EndpointControlRegisteredForticlientState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointControlRegisteredForticlientState)(nil)).Elem()
}

type endpointControlRegisteredForticlientArgs struct {
	Flag         *int    `pulumi:"flag"`
	Ip           *string `pulumi:"ip"`
	Mac          *string `pulumi:"mac"`
	RegFortigate *string `pulumi:"regFortigate"`
	Status       *int    `pulumi:"status"`
	Uid          *string `pulumi:"uid"`
	Vdom         *string `pulumi:"vdom"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a EndpointControlRegisteredForticlient resource.
type EndpointControlRegisteredForticlientArgs struct {
	Flag         pulumi.IntPtrInput
	Ip           pulumi.StringPtrInput
	Mac          pulumi.StringPtrInput
	RegFortigate pulumi.StringPtrInput
	Status       pulumi.IntPtrInput
	Uid          pulumi.StringPtrInput
	Vdom         pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (EndpointControlRegisteredForticlientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointControlRegisteredForticlientArgs)(nil)).Elem()
}

type EndpointControlRegisteredForticlientInput interface {
	pulumi.Input

	ToEndpointControlRegisteredForticlientOutput() EndpointControlRegisteredForticlientOutput
	ToEndpointControlRegisteredForticlientOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientOutput
}

func (*EndpointControlRegisteredForticlient) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (i *EndpointControlRegisteredForticlient) ToEndpointControlRegisteredForticlientOutput() EndpointControlRegisteredForticlientOutput {
	return i.ToEndpointControlRegisteredForticlientOutputWithContext(context.Background())
}

func (i *EndpointControlRegisteredForticlient) ToEndpointControlRegisteredForticlientOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointControlRegisteredForticlientOutput)
}

func (i *EndpointControlRegisteredForticlient) ToOutput(ctx context.Context) pulumix.Output[*EndpointControlRegisteredForticlient] {
	return pulumix.Output[*EndpointControlRegisteredForticlient]{
		OutputState: i.ToEndpointControlRegisteredForticlientOutputWithContext(ctx).OutputState,
	}
}

// EndpointControlRegisteredForticlientArrayInput is an input type that accepts EndpointControlRegisteredForticlientArray and EndpointControlRegisteredForticlientArrayOutput values.
// You can construct a concrete instance of `EndpointControlRegisteredForticlientArrayInput` via:
//
//	EndpointControlRegisteredForticlientArray{ EndpointControlRegisteredForticlientArgs{...} }
type EndpointControlRegisteredForticlientArrayInput interface {
	pulumi.Input

	ToEndpointControlRegisteredForticlientArrayOutput() EndpointControlRegisteredForticlientArrayOutput
	ToEndpointControlRegisteredForticlientArrayOutputWithContext(context.Context) EndpointControlRegisteredForticlientArrayOutput
}

type EndpointControlRegisteredForticlientArray []EndpointControlRegisteredForticlientInput

func (EndpointControlRegisteredForticlientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (i EndpointControlRegisteredForticlientArray) ToEndpointControlRegisteredForticlientArrayOutput() EndpointControlRegisteredForticlientArrayOutput {
	return i.ToEndpointControlRegisteredForticlientArrayOutputWithContext(context.Background())
}

func (i EndpointControlRegisteredForticlientArray) ToEndpointControlRegisteredForticlientArrayOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointControlRegisteredForticlientArrayOutput)
}

func (i EndpointControlRegisteredForticlientArray) ToOutput(ctx context.Context) pulumix.Output[[]*EndpointControlRegisteredForticlient] {
	return pulumix.Output[[]*EndpointControlRegisteredForticlient]{
		OutputState: i.ToEndpointControlRegisteredForticlientArrayOutputWithContext(ctx).OutputState,
	}
}

// EndpointControlRegisteredForticlientMapInput is an input type that accepts EndpointControlRegisteredForticlientMap and EndpointControlRegisteredForticlientMapOutput values.
// You can construct a concrete instance of `EndpointControlRegisteredForticlientMapInput` via:
//
//	EndpointControlRegisteredForticlientMap{ "key": EndpointControlRegisteredForticlientArgs{...} }
type EndpointControlRegisteredForticlientMapInput interface {
	pulumi.Input

	ToEndpointControlRegisteredForticlientMapOutput() EndpointControlRegisteredForticlientMapOutput
	ToEndpointControlRegisteredForticlientMapOutputWithContext(context.Context) EndpointControlRegisteredForticlientMapOutput
}

type EndpointControlRegisteredForticlientMap map[string]EndpointControlRegisteredForticlientInput

func (EndpointControlRegisteredForticlientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (i EndpointControlRegisteredForticlientMap) ToEndpointControlRegisteredForticlientMapOutput() EndpointControlRegisteredForticlientMapOutput {
	return i.ToEndpointControlRegisteredForticlientMapOutputWithContext(context.Background())
}

func (i EndpointControlRegisteredForticlientMap) ToEndpointControlRegisteredForticlientMapOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointControlRegisteredForticlientMapOutput)
}

func (i EndpointControlRegisteredForticlientMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*EndpointControlRegisteredForticlient] {
	return pulumix.Output[map[string]*EndpointControlRegisteredForticlient]{
		OutputState: i.ToEndpointControlRegisteredForticlientMapOutputWithContext(ctx).OutputState,
	}
}

type EndpointControlRegisteredForticlientOutput struct{ *pulumi.OutputState }

func (EndpointControlRegisteredForticlientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (o EndpointControlRegisteredForticlientOutput) ToEndpointControlRegisteredForticlientOutput() EndpointControlRegisteredForticlientOutput {
	return o
}

func (o EndpointControlRegisteredForticlientOutput) ToEndpointControlRegisteredForticlientOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientOutput {
	return o
}

func (o EndpointControlRegisteredForticlientOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointControlRegisteredForticlient] {
	return pulumix.Output[*EndpointControlRegisteredForticlient]{
		OutputState: o.OutputState,
	}
}

func (o EndpointControlRegisteredForticlientOutput) Flag() pulumi.IntOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.IntOutput { return v.Flag }).(pulumi.IntOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringOutput { return v.Mac }).(pulumi.StringOutput)
}

func (o EndpointControlRegisteredForticlientOutput) RegFortigate() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringOutput { return v.RegFortigate }).(pulumi.StringOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringOutput { return v.Vdom }).(pulumi.StringOutput)
}

func (o EndpointControlRegisteredForticlientOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointControlRegisteredForticlient) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type EndpointControlRegisteredForticlientArrayOutput struct{ *pulumi.OutputState }

func (EndpointControlRegisteredForticlientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (o EndpointControlRegisteredForticlientArrayOutput) ToEndpointControlRegisteredForticlientArrayOutput() EndpointControlRegisteredForticlientArrayOutput {
	return o
}

func (o EndpointControlRegisteredForticlientArrayOutput) ToEndpointControlRegisteredForticlientArrayOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientArrayOutput {
	return o
}

func (o EndpointControlRegisteredForticlientArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*EndpointControlRegisteredForticlient] {
	return pulumix.Output[[]*EndpointControlRegisteredForticlient]{
		OutputState: o.OutputState,
	}
}

func (o EndpointControlRegisteredForticlientArrayOutput) Index(i pulumi.IntInput) EndpointControlRegisteredForticlientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointControlRegisteredForticlient {
		return vs[0].([]*EndpointControlRegisteredForticlient)[vs[1].(int)]
	}).(EndpointControlRegisteredForticlientOutput)
}

type EndpointControlRegisteredForticlientMapOutput struct{ *pulumi.OutputState }

func (EndpointControlRegisteredForticlientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointControlRegisteredForticlient)(nil)).Elem()
}

func (o EndpointControlRegisteredForticlientMapOutput) ToEndpointControlRegisteredForticlientMapOutput() EndpointControlRegisteredForticlientMapOutput {
	return o
}

func (o EndpointControlRegisteredForticlientMapOutput) ToEndpointControlRegisteredForticlientMapOutputWithContext(ctx context.Context) EndpointControlRegisteredForticlientMapOutput {
	return o
}

func (o EndpointControlRegisteredForticlientMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*EndpointControlRegisteredForticlient] {
	return pulumix.Output[map[string]*EndpointControlRegisteredForticlient]{
		OutputState: o.OutputState,
	}
}

func (o EndpointControlRegisteredForticlientMapOutput) MapIndex(k pulumi.StringInput) EndpointControlRegisteredForticlientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointControlRegisteredForticlient {
		return vs[0].(map[string]*EndpointControlRegisteredForticlient)[vs[1].(string)]
	}).(EndpointControlRegisteredForticlientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointControlRegisteredForticlientInput)(nil)).Elem(), &EndpointControlRegisteredForticlient{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointControlRegisteredForticlientArrayInput)(nil)).Elem(), EndpointControlRegisteredForticlientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointControlRegisteredForticlientMapInput)(nil)).Elem(), EndpointControlRegisteredForticlientMap{})
	pulumi.RegisterOutputType(EndpointControlRegisteredForticlientOutput{})
	pulumi.RegisterOutputType(EndpointControlRegisteredForticlientArrayOutput{})
	pulumi.RegisterOutputType(EndpointControlRegisteredForticlientMapOutput{})
}
