// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RuleOtdt struct {
	pulumi.CustomResourceState

	Behavior            pulumi.StringOutput          `pulumi:"behavior"`
	Category            pulumi.IntOutput             `pulumi:"category"`
	DynamicSortSubtable pulumi.StringPtrOutput       `pulumi:"dynamicSortSubtable"`
	Fosid               pulumi.IntOutput             `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput       `pulumi:"getAllTables"`
	Metadatas           RuleOtdtMetadataArrayOutput  `pulumi:"metadatas"`
	Name                pulumi.StringOutput          `pulumi:"name"`
	Parameters          RuleOtdtParameterArrayOutput `pulumi:"parameters"`
	Popularity          pulumi.IntOutput             `pulumi:"popularity"`
	Protocol            pulumi.StringOutput          `pulumi:"protocol"`
	Risk                pulumi.IntOutput             `pulumi:"risk"`
	Technology          pulumi.StringOutput          `pulumi:"technology"`
	Vdomparam           pulumi.StringPtrOutput       `pulumi:"vdomparam"`
	Vendor              pulumi.StringOutput          `pulumi:"vendor"`
	Weight              pulumi.IntOutput             `pulumi:"weight"`
}

// NewRuleOtdt registers a new resource with the given unique name, arguments, and options.
func NewRuleOtdt(ctx *pulumi.Context,
	name string, args *RuleOtdtArgs, opts ...pulumi.ResourceOption) (*RuleOtdt, error) {
	if args == nil {
		args = &RuleOtdtArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleOtdt
	err := ctx.RegisterResource("fortios:index/ruleOtdt:RuleOtdt", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleOtdt gets an existing RuleOtdt resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleOtdt(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleOtdtState, opts ...pulumi.ResourceOption) (*RuleOtdt, error) {
	var resource RuleOtdt
	err := ctx.ReadResource("fortios:index/ruleOtdt:RuleOtdt", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleOtdt resources.
type ruleOtdtState struct {
	Behavior            *string             `pulumi:"behavior"`
	Category            *int                `pulumi:"category"`
	DynamicSortSubtable *string             `pulumi:"dynamicSortSubtable"`
	Fosid               *int                `pulumi:"fosid"`
	GetAllTables        *string             `pulumi:"getAllTables"`
	Metadatas           []RuleOtdtMetadata  `pulumi:"metadatas"`
	Name                *string             `pulumi:"name"`
	Parameters          []RuleOtdtParameter `pulumi:"parameters"`
	Popularity          *int                `pulumi:"popularity"`
	Protocol            *string             `pulumi:"protocol"`
	Risk                *int                `pulumi:"risk"`
	Technology          *string             `pulumi:"technology"`
	Vdomparam           *string             `pulumi:"vdomparam"`
	Vendor              *string             `pulumi:"vendor"`
	Weight              *int                `pulumi:"weight"`
}

type RuleOtdtState struct {
	Behavior            pulumi.StringPtrInput
	Category            pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Metadatas           RuleOtdtMetadataArrayInput
	Name                pulumi.StringPtrInput
	Parameters          RuleOtdtParameterArrayInput
	Popularity          pulumi.IntPtrInput
	Protocol            pulumi.StringPtrInput
	Risk                pulumi.IntPtrInput
	Technology          pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vendor              pulumi.StringPtrInput
	Weight              pulumi.IntPtrInput
}

func (RuleOtdtState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleOtdtState)(nil)).Elem()
}

type ruleOtdtArgs struct {
	Behavior            *string             `pulumi:"behavior"`
	Category            *int                `pulumi:"category"`
	DynamicSortSubtable *string             `pulumi:"dynamicSortSubtable"`
	Fosid               *int                `pulumi:"fosid"`
	GetAllTables        *string             `pulumi:"getAllTables"`
	Metadatas           []RuleOtdtMetadata  `pulumi:"metadatas"`
	Name                *string             `pulumi:"name"`
	Parameters          []RuleOtdtParameter `pulumi:"parameters"`
	Popularity          *int                `pulumi:"popularity"`
	Protocol            *string             `pulumi:"protocol"`
	Risk                *int                `pulumi:"risk"`
	Technology          *string             `pulumi:"technology"`
	Vdomparam           *string             `pulumi:"vdomparam"`
	Vendor              *string             `pulumi:"vendor"`
	Weight              *int                `pulumi:"weight"`
}

// The set of arguments for constructing a RuleOtdt resource.
type RuleOtdtArgs struct {
	Behavior            pulumi.StringPtrInput
	Category            pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Metadatas           RuleOtdtMetadataArrayInput
	Name                pulumi.StringPtrInput
	Parameters          RuleOtdtParameterArrayInput
	Popularity          pulumi.IntPtrInput
	Protocol            pulumi.StringPtrInput
	Risk                pulumi.IntPtrInput
	Technology          pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vendor              pulumi.StringPtrInput
	Weight              pulumi.IntPtrInput
}

func (RuleOtdtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleOtdtArgs)(nil)).Elem()
}

type RuleOtdtInput interface {
	pulumi.Input

	ToRuleOtdtOutput() RuleOtdtOutput
	ToRuleOtdtOutputWithContext(ctx context.Context) RuleOtdtOutput
}

func (*RuleOtdt) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleOtdt)(nil)).Elem()
}

func (i *RuleOtdt) ToRuleOtdtOutput() RuleOtdtOutput {
	return i.ToRuleOtdtOutputWithContext(context.Background())
}

func (i *RuleOtdt) ToRuleOtdtOutputWithContext(ctx context.Context) RuleOtdtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtOutput)
}

// RuleOtdtArrayInput is an input type that accepts RuleOtdtArray and RuleOtdtArrayOutput values.
// You can construct a concrete instance of `RuleOtdtArrayInput` via:
//
//	RuleOtdtArray{ RuleOtdtArgs{...} }
type RuleOtdtArrayInput interface {
	pulumi.Input

	ToRuleOtdtArrayOutput() RuleOtdtArrayOutput
	ToRuleOtdtArrayOutputWithContext(context.Context) RuleOtdtArrayOutput
}

type RuleOtdtArray []RuleOtdtInput

func (RuleOtdtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleOtdt)(nil)).Elem()
}

func (i RuleOtdtArray) ToRuleOtdtArrayOutput() RuleOtdtArrayOutput {
	return i.ToRuleOtdtArrayOutputWithContext(context.Background())
}

func (i RuleOtdtArray) ToRuleOtdtArrayOutputWithContext(ctx context.Context) RuleOtdtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtArrayOutput)
}

// RuleOtdtMapInput is an input type that accepts RuleOtdtMap and RuleOtdtMapOutput values.
// You can construct a concrete instance of `RuleOtdtMapInput` via:
//
//	RuleOtdtMap{ "key": RuleOtdtArgs{...} }
type RuleOtdtMapInput interface {
	pulumi.Input

	ToRuleOtdtMapOutput() RuleOtdtMapOutput
	ToRuleOtdtMapOutputWithContext(context.Context) RuleOtdtMapOutput
}

type RuleOtdtMap map[string]RuleOtdtInput

func (RuleOtdtMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleOtdt)(nil)).Elem()
}

func (i RuleOtdtMap) ToRuleOtdtMapOutput() RuleOtdtMapOutput {
	return i.ToRuleOtdtMapOutputWithContext(context.Background())
}

func (i RuleOtdtMap) ToRuleOtdtMapOutputWithContext(ctx context.Context) RuleOtdtMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtMapOutput)
}

type RuleOtdtOutput struct{ *pulumi.OutputState }

func (RuleOtdtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleOtdt)(nil)).Elem()
}

func (o RuleOtdtOutput) ToRuleOtdtOutput() RuleOtdtOutput {
	return o
}

func (o RuleOtdtOutput) ToRuleOtdtOutputWithContext(ctx context.Context) RuleOtdtOutput {
	return o
}

func (o RuleOtdtOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringOutput { return v.Behavior }).(pulumi.StringOutput)
}

func (o RuleOtdtOutput) Category() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.IntOutput { return v.Category }).(pulumi.IntOutput)
}

func (o RuleOtdtOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RuleOtdtOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o RuleOtdtOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o RuleOtdtOutput) Metadatas() RuleOtdtMetadataArrayOutput {
	return o.ApplyT(func(v *RuleOtdt) RuleOtdtMetadataArrayOutput { return v.Metadatas }).(RuleOtdtMetadataArrayOutput)
}

func (o RuleOtdtOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RuleOtdtOutput) Parameters() RuleOtdtParameterArrayOutput {
	return o.ApplyT(func(v *RuleOtdt) RuleOtdtParameterArrayOutput { return v.Parameters }).(RuleOtdtParameterArrayOutput)
}

func (o RuleOtdtOutput) Popularity() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.IntOutput { return v.Popularity }).(pulumi.IntOutput)
}

func (o RuleOtdtOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o RuleOtdtOutput) Risk() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.IntOutput { return v.Risk }).(pulumi.IntOutput)
}

func (o RuleOtdtOutput) Technology() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringOutput { return v.Technology }).(pulumi.StringOutput)
}

func (o RuleOtdtOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o RuleOtdtOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.StringOutput { return v.Vendor }).(pulumi.StringOutput)
}

func (o RuleOtdtOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtdt) pulumi.IntOutput { return v.Weight }).(pulumi.IntOutput)
}

type RuleOtdtArrayOutput struct{ *pulumi.OutputState }

func (RuleOtdtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleOtdt)(nil)).Elem()
}

func (o RuleOtdtArrayOutput) ToRuleOtdtArrayOutput() RuleOtdtArrayOutput {
	return o
}

func (o RuleOtdtArrayOutput) ToRuleOtdtArrayOutputWithContext(ctx context.Context) RuleOtdtArrayOutput {
	return o
}

func (o RuleOtdtArrayOutput) Index(i pulumi.IntInput) RuleOtdtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleOtdt {
		return vs[0].([]*RuleOtdt)[vs[1].(int)]
	}).(RuleOtdtOutput)
}

type RuleOtdtMapOutput struct{ *pulumi.OutputState }

func (RuleOtdtMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleOtdt)(nil)).Elem()
}

func (o RuleOtdtMapOutput) ToRuleOtdtMapOutput() RuleOtdtMapOutput {
	return o
}

func (o RuleOtdtMapOutput) ToRuleOtdtMapOutputWithContext(ctx context.Context) RuleOtdtMapOutput {
	return o
}

func (o RuleOtdtMapOutput) MapIndex(k pulumi.StringInput) RuleOtdtOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleOtdt {
		return vs[0].(map[string]*RuleOtdt)[vs[1].(string)]
	}).(RuleOtdtOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtInput)(nil)).Elem(), &RuleOtdt{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtArrayInput)(nil)).Elem(), RuleOtdtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtMapInput)(nil)).Elem(), RuleOtdtMap{})
	pulumi.RegisterOutputType(RuleOtdtOutput{})
	pulumi.RegisterOutputType(RuleOtdtArrayOutput{})
	pulumi.RegisterOutputType(RuleOtdtMapOutput{})
}
