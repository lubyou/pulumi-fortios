// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouterAccessList6 struct {
	pulumi.CustomResourceState

	Comments            pulumi.StringOutput              `pulumi:"comments"`
	DynamicSortSubtable pulumi.StringPtrOutput           `pulumi:"dynamicSortSubtable"`
	Name                pulumi.StringOutput              `pulumi:"name"`
	Rules               RouterAccessList6RuleArrayOutput `pulumi:"rules"`
	Vdomparam           pulumi.StringPtrOutput           `pulumi:"vdomparam"`
}

// NewRouterAccessList6 registers a new resource with the given unique name, arguments, and options.
func NewRouterAccessList6(ctx *pulumi.Context,
	name string, args *RouterAccessList6Args, opts ...pulumi.ResourceOption) (*RouterAccessList6, error) {
	if args == nil {
		args = &RouterAccessList6Args{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource RouterAccessList6
	err := ctx.RegisterResource("fortios:index/routerAccessList6:RouterAccessList6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterAccessList6 gets an existing RouterAccessList6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterAccessList6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterAccessList6State, opts ...pulumi.ResourceOption) (*RouterAccessList6, error) {
	var resource RouterAccessList6
	err := ctx.ReadResource("fortios:index/routerAccessList6:RouterAccessList6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterAccessList6 resources.
type routerAccessList6State struct {
	Comments            *string                 `pulumi:"comments"`
	DynamicSortSubtable *string                 `pulumi:"dynamicSortSubtable"`
	Name                *string                 `pulumi:"name"`
	Rules               []RouterAccessList6Rule `pulumi:"rules"`
	Vdomparam           *string                 `pulumi:"vdomparam"`
}

type RouterAccessList6State struct {
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Rules               RouterAccessList6RuleArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (RouterAccessList6State) ElementType() reflect.Type {
	return reflect.TypeOf((*routerAccessList6State)(nil)).Elem()
}

type routerAccessList6Args struct {
	Comments            *string                 `pulumi:"comments"`
	DynamicSortSubtable *string                 `pulumi:"dynamicSortSubtable"`
	Name                *string                 `pulumi:"name"`
	Rules               []RouterAccessList6Rule `pulumi:"rules"`
	Vdomparam           *string                 `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterAccessList6 resource.
type RouterAccessList6Args struct {
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Rules               RouterAccessList6RuleArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (RouterAccessList6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*routerAccessList6Args)(nil)).Elem()
}

type RouterAccessList6Input interface {
	pulumi.Input

	ToRouterAccessList6Output() RouterAccessList6Output
	ToRouterAccessList6OutputWithContext(ctx context.Context) RouterAccessList6Output
}

func (*RouterAccessList6) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterAccessList6)(nil)).Elem()
}

func (i *RouterAccessList6) ToRouterAccessList6Output() RouterAccessList6Output {
	return i.ToRouterAccessList6OutputWithContext(context.Background())
}

func (i *RouterAccessList6) ToRouterAccessList6OutputWithContext(ctx context.Context) RouterAccessList6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessList6Output)
}

// RouterAccessList6ArrayInput is an input type that accepts RouterAccessList6Array and RouterAccessList6ArrayOutput values.
// You can construct a concrete instance of `RouterAccessList6ArrayInput` via:
//
//	RouterAccessList6Array{ RouterAccessList6Args{...} }
type RouterAccessList6ArrayInput interface {
	pulumi.Input

	ToRouterAccessList6ArrayOutput() RouterAccessList6ArrayOutput
	ToRouterAccessList6ArrayOutputWithContext(context.Context) RouterAccessList6ArrayOutput
}

type RouterAccessList6Array []RouterAccessList6Input

func (RouterAccessList6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterAccessList6)(nil)).Elem()
}

func (i RouterAccessList6Array) ToRouterAccessList6ArrayOutput() RouterAccessList6ArrayOutput {
	return i.ToRouterAccessList6ArrayOutputWithContext(context.Background())
}

func (i RouterAccessList6Array) ToRouterAccessList6ArrayOutputWithContext(ctx context.Context) RouterAccessList6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessList6ArrayOutput)
}

// RouterAccessList6MapInput is an input type that accepts RouterAccessList6Map and RouterAccessList6MapOutput values.
// You can construct a concrete instance of `RouterAccessList6MapInput` via:
//
//	RouterAccessList6Map{ "key": RouterAccessList6Args{...} }
type RouterAccessList6MapInput interface {
	pulumi.Input

	ToRouterAccessList6MapOutput() RouterAccessList6MapOutput
	ToRouterAccessList6MapOutputWithContext(context.Context) RouterAccessList6MapOutput
}

type RouterAccessList6Map map[string]RouterAccessList6Input

func (RouterAccessList6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterAccessList6)(nil)).Elem()
}

func (i RouterAccessList6Map) ToRouterAccessList6MapOutput() RouterAccessList6MapOutput {
	return i.ToRouterAccessList6MapOutputWithContext(context.Background())
}

func (i RouterAccessList6Map) ToRouterAccessList6MapOutputWithContext(ctx context.Context) RouterAccessList6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessList6MapOutput)
}

type RouterAccessList6Output struct{ *pulumi.OutputState }

func (RouterAccessList6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterAccessList6)(nil)).Elem()
}

func (o RouterAccessList6Output) ToRouterAccessList6Output() RouterAccessList6Output {
	return o
}

func (o RouterAccessList6Output) ToRouterAccessList6OutputWithContext(ctx context.Context) RouterAccessList6Output {
	return o
}

func (o RouterAccessList6Output) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterAccessList6) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

func (o RouterAccessList6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterAccessList6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RouterAccessList6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterAccessList6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RouterAccessList6Output) Rules() RouterAccessList6RuleArrayOutput {
	return o.ApplyT(func(v *RouterAccessList6) RouterAccessList6RuleArrayOutput { return v.Rules }).(RouterAccessList6RuleArrayOutput)
}

func (o RouterAccessList6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterAccessList6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterAccessList6ArrayOutput struct{ *pulumi.OutputState }

func (RouterAccessList6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterAccessList6)(nil)).Elem()
}

func (o RouterAccessList6ArrayOutput) ToRouterAccessList6ArrayOutput() RouterAccessList6ArrayOutput {
	return o
}

func (o RouterAccessList6ArrayOutput) ToRouterAccessList6ArrayOutputWithContext(ctx context.Context) RouterAccessList6ArrayOutput {
	return o
}

func (o RouterAccessList6ArrayOutput) Index(i pulumi.IntInput) RouterAccessList6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterAccessList6 {
		return vs[0].([]*RouterAccessList6)[vs[1].(int)]
	}).(RouterAccessList6Output)
}

type RouterAccessList6MapOutput struct{ *pulumi.OutputState }

func (RouterAccessList6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterAccessList6)(nil)).Elem()
}

func (o RouterAccessList6MapOutput) ToRouterAccessList6MapOutput() RouterAccessList6MapOutput {
	return o
}

func (o RouterAccessList6MapOutput) ToRouterAccessList6MapOutputWithContext(ctx context.Context) RouterAccessList6MapOutput {
	return o
}

func (o RouterAccessList6MapOutput) MapIndex(k pulumi.StringInput) RouterAccessList6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterAccessList6 {
		return vs[0].(map[string]*RouterAccessList6)[vs[1].(string)]
	}).(RouterAccessList6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessList6Input)(nil)).Elem(), &RouterAccessList6{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessList6ArrayInput)(nil)).Elem(), RouterAccessList6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessList6MapInput)(nil)).Elem(), RouterAccessList6Map{})
	pulumi.RegisterOutputType(RouterAccessList6Output{})
	pulumi.RegisterOutputType(RouterAccessList6ArrayOutput{})
	pulumi.RegisterOutputType(RouterAccessList6MapOutput{})
}
