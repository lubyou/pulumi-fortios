// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type AntivirusSettings struct {
	pulumi.CustomResourceState

	CacheCleanResult         pulumi.StringOutput    `pulumi:"cacheCleanResult"`
	CacheInfectedResult      pulumi.StringOutput    `pulumi:"cacheInfectedResult"`
	DefaultDb                pulumi.StringOutput    `pulumi:"defaultDb"`
	Grayware                 pulumi.StringOutput    `pulumi:"grayware"`
	MachineLearningDetection pulumi.StringOutput    `pulumi:"machineLearningDetection"`
	OverrideTimeout          pulumi.IntOutput       `pulumi:"overrideTimeout"`
	UseExtremeDb             pulumi.StringOutput    `pulumi:"useExtremeDb"`
	Vdomparam                pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAntivirusSettings registers a new resource with the given unique name, arguments, and options.
func NewAntivirusSettings(ctx *pulumi.Context,
	name string, args *AntivirusSettingsArgs, opts ...pulumi.ResourceOption) (*AntivirusSettings, error) {
	if args == nil {
		args = &AntivirusSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AntivirusSettings
	err := ctx.RegisterResource("fortios:index/antivirusSettings:AntivirusSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntivirusSettings gets an existing AntivirusSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntivirusSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntivirusSettingsState, opts ...pulumi.ResourceOption) (*AntivirusSettings, error) {
	var resource AntivirusSettings
	err := ctx.ReadResource("fortios:index/antivirusSettings:AntivirusSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntivirusSettings resources.
type antivirusSettingsState struct {
	CacheCleanResult         *string `pulumi:"cacheCleanResult"`
	CacheInfectedResult      *string `pulumi:"cacheInfectedResult"`
	DefaultDb                *string `pulumi:"defaultDb"`
	Grayware                 *string `pulumi:"grayware"`
	MachineLearningDetection *string `pulumi:"machineLearningDetection"`
	OverrideTimeout          *int    `pulumi:"overrideTimeout"`
	UseExtremeDb             *string `pulumi:"useExtremeDb"`
	Vdomparam                *string `pulumi:"vdomparam"`
}

type AntivirusSettingsState struct {
	CacheCleanResult         pulumi.StringPtrInput
	CacheInfectedResult      pulumi.StringPtrInput
	DefaultDb                pulumi.StringPtrInput
	Grayware                 pulumi.StringPtrInput
	MachineLearningDetection pulumi.StringPtrInput
	OverrideTimeout          pulumi.IntPtrInput
	UseExtremeDb             pulumi.StringPtrInput
	Vdomparam                pulumi.StringPtrInput
}

func (AntivirusSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusSettingsState)(nil)).Elem()
}

type antivirusSettingsArgs struct {
	CacheCleanResult         *string `pulumi:"cacheCleanResult"`
	CacheInfectedResult      *string `pulumi:"cacheInfectedResult"`
	DefaultDb                *string `pulumi:"defaultDb"`
	Grayware                 *string `pulumi:"grayware"`
	MachineLearningDetection *string `pulumi:"machineLearningDetection"`
	OverrideTimeout          *int    `pulumi:"overrideTimeout"`
	UseExtremeDb             *string `pulumi:"useExtremeDb"`
	Vdomparam                *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AntivirusSettings resource.
type AntivirusSettingsArgs struct {
	CacheCleanResult         pulumi.StringPtrInput
	CacheInfectedResult      pulumi.StringPtrInput
	DefaultDb                pulumi.StringPtrInput
	Grayware                 pulumi.StringPtrInput
	MachineLearningDetection pulumi.StringPtrInput
	OverrideTimeout          pulumi.IntPtrInput
	UseExtremeDb             pulumi.StringPtrInput
	Vdomparam                pulumi.StringPtrInput
}

func (AntivirusSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusSettingsArgs)(nil)).Elem()
}

type AntivirusSettingsInput interface {
	pulumi.Input

	ToAntivirusSettingsOutput() AntivirusSettingsOutput
	ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput
}

func (*AntivirusSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusSettings)(nil)).Elem()
}

func (i *AntivirusSettings) ToAntivirusSettingsOutput() AntivirusSettingsOutput {
	return i.ToAntivirusSettingsOutputWithContext(context.Background())
}

func (i *AntivirusSettings) ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsOutput)
}

func (i *AntivirusSettings) ToOutput(ctx context.Context) pulumix.Output[*AntivirusSettings] {
	return pulumix.Output[*AntivirusSettings]{
		OutputState: i.ToAntivirusSettingsOutputWithContext(ctx).OutputState,
	}
}

// AntivirusSettingsArrayInput is an input type that accepts AntivirusSettingsArray and AntivirusSettingsArrayOutput values.
// You can construct a concrete instance of `AntivirusSettingsArrayInput` via:
//
//	AntivirusSettingsArray{ AntivirusSettingsArgs{...} }
type AntivirusSettingsArrayInput interface {
	pulumi.Input

	ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput
	ToAntivirusSettingsArrayOutputWithContext(context.Context) AntivirusSettingsArrayOutput
}

type AntivirusSettingsArray []AntivirusSettingsInput

func (AntivirusSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusSettings)(nil)).Elem()
}

func (i AntivirusSettingsArray) ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput {
	return i.ToAntivirusSettingsArrayOutputWithContext(context.Background())
}

func (i AntivirusSettingsArray) ToAntivirusSettingsArrayOutputWithContext(ctx context.Context) AntivirusSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsArrayOutput)
}

func (i AntivirusSettingsArray) ToOutput(ctx context.Context) pulumix.Output[[]*AntivirusSettings] {
	return pulumix.Output[[]*AntivirusSettings]{
		OutputState: i.ToAntivirusSettingsArrayOutputWithContext(ctx).OutputState,
	}
}

// AntivirusSettingsMapInput is an input type that accepts AntivirusSettingsMap and AntivirusSettingsMapOutput values.
// You can construct a concrete instance of `AntivirusSettingsMapInput` via:
//
//	AntivirusSettingsMap{ "key": AntivirusSettingsArgs{...} }
type AntivirusSettingsMapInput interface {
	pulumi.Input

	ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput
	ToAntivirusSettingsMapOutputWithContext(context.Context) AntivirusSettingsMapOutput
}

type AntivirusSettingsMap map[string]AntivirusSettingsInput

func (AntivirusSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusSettings)(nil)).Elem()
}

func (i AntivirusSettingsMap) ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput {
	return i.ToAntivirusSettingsMapOutputWithContext(context.Background())
}

func (i AntivirusSettingsMap) ToAntivirusSettingsMapOutputWithContext(ctx context.Context) AntivirusSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsMapOutput)
}

func (i AntivirusSettingsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AntivirusSettings] {
	return pulumix.Output[map[string]*AntivirusSettings]{
		OutputState: i.ToAntivirusSettingsMapOutputWithContext(ctx).OutputState,
	}
}

type AntivirusSettingsOutput struct{ *pulumi.OutputState }

func (AntivirusSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusSettings)(nil)).Elem()
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsOutput() AntivirusSettingsOutput {
	return o
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput {
	return o
}

func (o AntivirusSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[*AntivirusSettings] {
	return pulumix.Output[*AntivirusSettings]{
		OutputState: o.OutputState,
	}
}

func (o AntivirusSettingsOutput) CacheCleanResult() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.CacheCleanResult }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) CacheInfectedResult() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.CacheInfectedResult }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) DefaultDb() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.DefaultDb }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) Grayware() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.Grayware }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) MachineLearningDetection() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.MachineLearningDetection }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) OverrideTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.IntOutput { return v.OverrideTimeout }).(pulumi.IntOutput)
}

func (o AntivirusSettingsOutput) UseExtremeDb() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringOutput { return v.UseExtremeDb }).(pulumi.StringOutput)
}

func (o AntivirusSettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusSettings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AntivirusSettingsArrayOutput struct{ *pulumi.OutputState }

func (AntivirusSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusSettings)(nil)).Elem()
}

func (o AntivirusSettingsArrayOutput) ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput {
	return o
}

func (o AntivirusSettingsArrayOutput) ToAntivirusSettingsArrayOutputWithContext(ctx context.Context) AntivirusSettingsArrayOutput {
	return o
}

func (o AntivirusSettingsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AntivirusSettings] {
	return pulumix.Output[[]*AntivirusSettings]{
		OutputState: o.OutputState,
	}
}

func (o AntivirusSettingsArrayOutput) Index(i pulumi.IntInput) AntivirusSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AntivirusSettings {
		return vs[0].([]*AntivirusSettings)[vs[1].(int)]
	}).(AntivirusSettingsOutput)
}

type AntivirusSettingsMapOutput struct{ *pulumi.OutputState }

func (AntivirusSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusSettings)(nil)).Elem()
}

func (o AntivirusSettingsMapOutput) ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput {
	return o
}

func (o AntivirusSettingsMapOutput) ToAntivirusSettingsMapOutputWithContext(ctx context.Context) AntivirusSettingsMapOutput {
	return o
}

func (o AntivirusSettingsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AntivirusSettings] {
	return pulumix.Output[map[string]*AntivirusSettings]{
		OutputState: o.OutputState,
	}
}

func (o AntivirusSettingsMapOutput) MapIndex(k pulumi.StringInput) AntivirusSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AntivirusSettings {
		return vs[0].(map[string]*AntivirusSettings)[vs[1].(string)]
	}).(AntivirusSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusSettingsInput)(nil)).Elem(), &AntivirusSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusSettingsArrayInput)(nil)).Elem(), AntivirusSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusSettingsMapInput)(nil)).Elem(), AntivirusSettingsMap{})
	pulumi.RegisterOutputType(AntivirusSettingsOutput{})
	pulumi.RegisterOutputType(AntivirusSettingsArrayOutput{})
	pulumi.RegisterOutputType(AntivirusSettingsMapOutput{})
}
