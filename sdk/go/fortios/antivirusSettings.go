// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure AntiVirus settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewAntivirusSettings(ctx, "trname", &fortios.AntivirusSettingsArgs{
// 			DefaultDb: pulumi.String("extended"),
// 			Grayware:  pulumi.String("enable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Antivirus Settings can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/antivirusSettings:AntivirusSettings labelname AntivirusSettings
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type AntivirusSettings struct {
	pulumi.CustomResourceState

	// Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
	DefaultDb pulumi.StringOutput `pulumi:"defaultDb"`
	// Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
	Grayware pulumi.StringOutput `pulumi:"grayware"`
	// Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
	OverrideTimeout pulumi.IntOutput `pulumi:"overrideTimeout"`
	// Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
	UseExtremeDb pulumi.StringOutput `pulumi:"useExtremeDb"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAntivirusSettings registers a new resource with the given unique name, arguments, and options.
func NewAntivirusSettings(ctx *pulumi.Context,
	name string, args *AntivirusSettingsArgs, opts ...pulumi.ResourceOption) (*AntivirusSettings, error) {
	if args == nil {
		args = &AntivirusSettingsArgs{}
	}

	var resource AntivirusSettings
	err := ctx.RegisterResource("fortios:index/antivirusSettings:AntivirusSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntivirusSettings gets an existing AntivirusSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntivirusSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntivirusSettingsState, opts ...pulumi.ResourceOption) (*AntivirusSettings, error) {
	var resource AntivirusSettings
	err := ctx.ReadResource("fortios:index/antivirusSettings:AntivirusSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntivirusSettings resources.
type antivirusSettingsState struct {
	// Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
	DefaultDb *string `pulumi:"defaultDb"`
	// Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
	Grayware *string `pulumi:"grayware"`
	// Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
	OverrideTimeout *int `pulumi:"overrideTimeout"`
	// Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
	UseExtremeDb *string `pulumi:"useExtremeDb"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AntivirusSettingsState struct {
	// Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
	DefaultDb pulumi.StringPtrInput
	// Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
	Grayware pulumi.StringPtrInput
	// Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
	OverrideTimeout pulumi.IntPtrInput
	// Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
	UseExtremeDb pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusSettingsState)(nil)).Elem()
}

type antivirusSettingsArgs struct {
	// Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
	DefaultDb *string `pulumi:"defaultDb"`
	// Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
	Grayware *string `pulumi:"grayware"`
	// Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
	OverrideTimeout *int `pulumi:"overrideTimeout"`
	// Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
	UseExtremeDb *string `pulumi:"useExtremeDb"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AntivirusSettings resource.
type AntivirusSettingsArgs struct {
	// Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
	DefaultDb pulumi.StringPtrInput
	// Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
	Grayware pulumi.StringPtrInput
	// Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
	OverrideTimeout pulumi.IntPtrInput
	// Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
	UseExtremeDb pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusSettingsArgs)(nil)).Elem()
}

type AntivirusSettingsInput interface {
	pulumi.Input

	ToAntivirusSettingsOutput() AntivirusSettingsOutput
	ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput
}

func (*AntivirusSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusSettings)(nil))
}

func (i *AntivirusSettings) ToAntivirusSettingsOutput() AntivirusSettingsOutput {
	return i.ToAntivirusSettingsOutputWithContext(context.Background())
}

func (i *AntivirusSettings) ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsOutput)
}

func (i *AntivirusSettings) ToAntivirusSettingsPtrOutput() AntivirusSettingsPtrOutput {
	return i.ToAntivirusSettingsPtrOutputWithContext(context.Background())
}

func (i *AntivirusSettings) ToAntivirusSettingsPtrOutputWithContext(ctx context.Context) AntivirusSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsPtrOutput)
}

type AntivirusSettingsPtrInput interface {
	pulumi.Input

	ToAntivirusSettingsPtrOutput() AntivirusSettingsPtrOutput
	ToAntivirusSettingsPtrOutputWithContext(ctx context.Context) AntivirusSettingsPtrOutput
}

type antivirusSettingsPtrType AntivirusSettingsArgs

func (*antivirusSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusSettings)(nil))
}

func (i *antivirusSettingsPtrType) ToAntivirusSettingsPtrOutput() AntivirusSettingsPtrOutput {
	return i.ToAntivirusSettingsPtrOutputWithContext(context.Background())
}

func (i *antivirusSettingsPtrType) ToAntivirusSettingsPtrOutputWithContext(ctx context.Context) AntivirusSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsPtrOutput)
}

// AntivirusSettingsArrayInput is an input type that accepts AntivirusSettingsArray and AntivirusSettingsArrayOutput values.
// You can construct a concrete instance of `AntivirusSettingsArrayInput` via:
//
//          AntivirusSettingsArray{ AntivirusSettingsArgs{...} }
type AntivirusSettingsArrayInput interface {
	pulumi.Input

	ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput
	ToAntivirusSettingsArrayOutputWithContext(context.Context) AntivirusSettingsArrayOutput
}

type AntivirusSettingsArray []AntivirusSettingsInput

func (AntivirusSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AntivirusSettings)(nil))
}

func (i AntivirusSettingsArray) ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput {
	return i.ToAntivirusSettingsArrayOutputWithContext(context.Background())
}

func (i AntivirusSettingsArray) ToAntivirusSettingsArrayOutputWithContext(ctx context.Context) AntivirusSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsArrayOutput)
}

// AntivirusSettingsMapInput is an input type that accepts AntivirusSettingsMap and AntivirusSettingsMapOutput values.
// You can construct a concrete instance of `AntivirusSettingsMapInput` via:
//
//          AntivirusSettingsMap{ "key": AntivirusSettingsArgs{...} }
type AntivirusSettingsMapInput interface {
	pulumi.Input

	ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput
	ToAntivirusSettingsMapOutputWithContext(context.Context) AntivirusSettingsMapOutput
}

type AntivirusSettingsMap map[string]AntivirusSettingsInput

func (AntivirusSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AntivirusSettings)(nil))
}

func (i AntivirusSettingsMap) ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput {
	return i.ToAntivirusSettingsMapOutputWithContext(context.Background())
}

func (i AntivirusSettingsMap) ToAntivirusSettingsMapOutputWithContext(ctx context.Context) AntivirusSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusSettingsMapOutput)
}

type AntivirusSettingsOutput struct {
	*pulumi.OutputState
}

func (AntivirusSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusSettings)(nil))
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsOutput() AntivirusSettingsOutput {
	return o
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsOutputWithContext(ctx context.Context) AntivirusSettingsOutput {
	return o
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsPtrOutput() AntivirusSettingsPtrOutput {
	return o.ToAntivirusSettingsPtrOutputWithContext(context.Background())
}

func (o AntivirusSettingsOutput) ToAntivirusSettingsPtrOutputWithContext(ctx context.Context) AntivirusSettingsPtrOutput {
	return o.ApplyT(func(v AntivirusSettings) *AntivirusSettings {
		return &v
	}).(AntivirusSettingsPtrOutput)
}

type AntivirusSettingsPtrOutput struct {
	*pulumi.OutputState
}

func (AntivirusSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusSettings)(nil))
}

func (o AntivirusSettingsPtrOutput) ToAntivirusSettingsPtrOutput() AntivirusSettingsPtrOutput {
	return o
}

func (o AntivirusSettingsPtrOutput) ToAntivirusSettingsPtrOutputWithContext(ctx context.Context) AntivirusSettingsPtrOutput {
	return o
}

type AntivirusSettingsArrayOutput struct{ *pulumi.OutputState }

func (AntivirusSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntivirusSettings)(nil))
}

func (o AntivirusSettingsArrayOutput) ToAntivirusSettingsArrayOutput() AntivirusSettingsArrayOutput {
	return o
}

func (o AntivirusSettingsArrayOutput) ToAntivirusSettingsArrayOutputWithContext(ctx context.Context) AntivirusSettingsArrayOutput {
	return o
}

func (o AntivirusSettingsArrayOutput) Index(i pulumi.IntInput) AntivirusSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AntivirusSettings {
		return vs[0].([]AntivirusSettings)[vs[1].(int)]
	}).(AntivirusSettingsOutput)
}

type AntivirusSettingsMapOutput struct{ *pulumi.OutputState }

func (AntivirusSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AntivirusSettings)(nil))
}

func (o AntivirusSettingsMapOutput) ToAntivirusSettingsMapOutput() AntivirusSettingsMapOutput {
	return o
}

func (o AntivirusSettingsMapOutput) ToAntivirusSettingsMapOutputWithContext(ctx context.Context) AntivirusSettingsMapOutput {
	return o
}

func (o AntivirusSettingsMapOutput) MapIndex(k pulumi.StringInput) AntivirusSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AntivirusSettings {
		return vs[0].(map[string]AntivirusSettings)[vs[1].(string)]
	}).(AntivirusSettingsOutput)
}

func init() {
	pulumi.RegisterOutputType(AntivirusSettingsOutput{})
	pulumi.RegisterOutputType(AntivirusSettingsPtrOutput{})
	pulumi.RegisterOutputType(AntivirusSettingsArrayOutput{})
	pulumi.RegisterOutputType(AntivirusSettingsMapOutput{})
}
