// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CA certificate.
//
// ## Import
//
// Certificate Ca can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/certificateCa:CertificateCa labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/certificateCa:CertificateCa labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type CertificateCa struct {
	pulumi.CustomResourceState

	// Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
	AutoUpdateDays pulumi.IntOutput `pulumi:"autoUpdateDays"`
	// Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
	AutoUpdateDaysWarning pulumi.IntOutput `pulumi:"autoUpdateDaysWarning"`
	// CA certificate as a PEM file.
	Ca pulumi.StringOutput `pulumi:"ca"`
	// CA identifier of the SCEP server.
	CaIdentifier pulumi.StringOutput `pulumi:"caIdentifier"`
	// Time at which CA was last updated.
	LastUpdated pulumi.IntOutput `pulumi:"lastUpdated"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
	Range pulumi.StringOutput `pulumi:"range"`
	// URL of the SCEP server.
	ScepUrl pulumi.StringOutput `pulumi:"scepUrl"`
	// CA certificate source type.
	Source pulumi.StringOutput `pulumi:"source"`
	// Source IP address for communications to the SCEP server.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
	SslInspectionTrusted pulumi.StringOutput `pulumi:"sslInspectionTrusted"`
	// Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
	Trusted pulumi.StringOutput `pulumi:"trusted"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewCertificateCa registers a new resource with the given unique name, arguments, and options.
func NewCertificateCa(ctx *pulumi.Context,
	name string, args *CertificateCaArgs, opts ...pulumi.ResourceOption) (*CertificateCa, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ca == nil {
		return nil, errors.New("invalid value for required argument 'Ca'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CertificateCa
	err := ctx.RegisterResource("fortios:index/certificateCa:CertificateCa", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateCa gets an existing CertificateCa resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateCa(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateCaState, opts ...pulumi.ResourceOption) (*CertificateCa, error) {
	var resource CertificateCa
	err := ctx.ReadResource("fortios:index/certificateCa:CertificateCa", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateCa resources.
type certificateCaState struct {
	// Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
	AutoUpdateDays *int `pulumi:"autoUpdateDays"`
	// Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
	AutoUpdateDaysWarning *int `pulumi:"autoUpdateDaysWarning"`
	// CA certificate as a PEM file.
	Ca *string `pulumi:"ca"`
	// CA identifier of the SCEP server.
	CaIdentifier *string `pulumi:"caIdentifier"`
	// Time at which CA was last updated.
	LastUpdated *int `pulumi:"lastUpdated"`
	// Name.
	Name *string `pulumi:"name"`
	// Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
	Range *string `pulumi:"range"`
	// URL of the SCEP server.
	ScepUrl *string `pulumi:"scepUrl"`
	// CA certificate source type.
	Source *string `pulumi:"source"`
	// Source IP address for communications to the SCEP server.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
	SslInspectionTrusted *string `pulumi:"sslInspectionTrusted"`
	// Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
	Trusted *string `pulumi:"trusted"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type CertificateCaState struct {
	// Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
	AutoUpdateDays pulumi.IntPtrInput
	// Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
	AutoUpdateDaysWarning pulumi.IntPtrInput
	// CA certificate as a PEM file.
	Ca pulumi.StringPtrInput
	// CA identifier of the SCEP server.
	CaIdentifier pulumi.StringPtrInput
	// Time at which CA was last updated.
	LastUpdated pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
	Range pulumi.StringPtrInput
	// URL of the SCEP server.
	ScepUrl pulumi.StringPtrInput
	// CA certificate source type.
	Source pulumi.StringPtrInput
	// Source IP address for communications to the SCEP server.
	SourceIp pulumi.StringPtrInput
	// Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
	SslInspectionTrusted pulumi.StringPtrInput
	// Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
	Trusted pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CertificateCaState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateCaState)(nil)).Elem()
}

type certificateCaArgs struct {
	// Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
	AutoUpdateDays *int `pulumi:"autoUpdateDays"`
	// Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
	AutoUpdateDaysWarning *int `pulumi:"autoUpdateDaysWarning"`
	// CA certificate as a PEM file.
	Ca string `pulumi:"ca"`
	// CA identifier of the SCEP server.
	CaIdentifier *string `pulumi:"caIdentifier"`
	// Time at which CA was last updated.
	LastUpdated *int `pulumi:"lastUpdated"`
	// Name.
	Name *string `pulumi:"name"`
	// Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
	Range *string `pulumi:"range"`
	// URL of the SCEP server.
	ScepUrl *string `pulumi:"scepUrl"`
	// CA certificate source type.
	Source *string `pulumi:"source"`
	// Source IP address for communications to the SCEP server.
	SourceIp *string `pulumi:"sourceIp"`
	// Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
	SslInspectionTrusted *string `pulumi:"sslInspectionTrusted"`
	// Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
	Trusted *string `pulumi:"trusted"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a CertificateCa resource.
type CertificateCaArgs struct {
	// Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
	AutoUpdateDays pulumi.IntPtrInput
	// Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
	AutoUpdateDaysWarning pulumi.IntPtrInput
	// CA certificate as a PEM file.
	Ca pulumi.StringInput
	// CA identifier of the SCEP server.
	CaIdentifier pulumi.StringPtrInput
	// Time at which CA was last updated.
	LastUpdated pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
	Range pulumi.StringPtrInput
	// URL of the SCEP server.
	ScepUrl pulumi.StringPtrInput
	// CA certificate source type.
	Source pulumi.StringPtrInput
	// Source IP address for communications to the SCEP server.
	SourceIp pulumi.StringPtrInput
	// Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
	SslInspectionTrusted pulumi.StringPtrInput
	// Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
	Trusted pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (CertificateCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateCaArgs)(nil)).Elem()
}

type CertificateCaInput interface {
	pulumi.Input

	ToCertificateCaOutput() CertificateCaOutput
	ToCertificateCaOutputWithContext(ctx context.Context) CertificateCaOutput
}

func (*CertificateCa) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCa)(nil)).Elem()
}

func (i *CertificateCa) ToCertificateCaOutput() CertificateCaOutput {
	return i.ToCertificateCaOutputWithContext(context.Background())
}

func (i *CertificateCa) ToCertificateCaOutputWithContext(ctx context.Context) CertificateCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCaOutput)
}

// CertificateCaArrayInput is an input type that accepts CertificateCaArray and CertificateCaArrayOutput values.
// You can construct a concrete instance of `CertificateCaArrayInput` via:
//
//          CertificateCaArray{ CertificateCaArgs{...} }
type CertificateCaArrayInput interface {
	pulumi.Input

	ToCertificateCaArrayOutput() CertificateCaArrayOutput
	ToCertificateCaArrayOutputWithContext(context.Context) CertificateCaArrayOutput
}

type CertificateCaArray []CertificateCaInput

func (CertificateCaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateCa)(nil)).Elem()
}

func (i CertificateCaArray) ToCertificateCaArrayOutput() CertificateCaArrayOutput {
	return i.ToCertificateCaArrayOutputWithContext(context.Background())
}

func (i CertificateCaArray) ToCertificateCaArrayOutputWithContext(ctx context.Context) CertificateCaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCaArrayOutput)
}

// CertificateCaMapInput is an input type that accepts CertificateCaMap and CertificateCaMapOutput values.
// You can construct a concrete instance of `CertificateCaMapInput` via:
//
//          CertificateCaMap{ "key": CertificateCaArgs{...} }
type CertificateCaMapInput interface {
	pulumi.Input

	ToCertificateCaMapOutput() CertificateCaMapOutput
	ToCertificateCaMapOutputWithContext(context.Context) CertificateCaMapOutput
}

type CertificateCaMap map[string]CertificateCaInput

func (CertificateCaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateCa)(nil)).Elem()
}

func (i CertificateCaMap) ToCertificateCaMapOutput() CertificateCaMapOutput {
	return i.ToCertificateCaMapOutputWithContext(context.Background())
}

func (i CertificateCaMap) ToCertificateCaMapOutputWithContext(ctx context.Context) CertificateCaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCaMapOutput)
}

type CertificateCaOutput struct{ *pulumi.OutputState }

func (CertificateCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCa)(nil)).Elem()
}

func (o CertificateCaOutput) ToCertificateCaOutput() CertificateCaOutput {
	return o
}

func (o CertificateCaOutput) ToCertificateCaOutputWithContext(ctx context.Context) CertificateCaOutput {
	return o
}

type CertificateCaArrayOutput struct{ *pulumi.OutputState }

func (CertificateCaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateCa)(nil)).Elem()
}

func (o CertificateCaArrayOutput) ToCertificateCaArrayOutput() CertificateCaArrayOutput {
	return o
}

func (o CertificateCaArrayOutput) ToCertificateCaArrayOutputWithContext(ctx context.Context) CertificateCaArrayOutput {
	return o
}

func (o CertificateCaArrayOutput) Index(i pulumi.IntInput) CertificateCaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CertificateCa {
		return vs[0].([]*CertificateCa)[vs[1].(int)]
	}).(CertificateCaOutput)
}

type CertificateCaMapOutput struct{ *pulumi.OutputState }

func (CertificateCaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateCa)(nil)).Elem()
}

func (o CertificateCaMapOutput) ToCertificateCaMapOutput() CertificateCaMapOutput {
	return o
}

func (o CertificateCaMapOutput) ToCertificateCaMapOutputWithContext(ctx context.Context) CertificateCaMapOutput {
	return o
}

func (o CertificateCaMapOutput) MapIndex(k pulumi.StringInput) CertificateCaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CertificateCa {
		return vs[0].(map[string]*CertificateCa)[vs[1].(string)]
	}).(CertificateCaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCaInput)(nil)).Elem(), &CertificateCa{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCaArrayInput)(nil)).Elem(), CertificateCaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCaMapInput)(nil)).Elem(), CertificateCaMap{})
	pulumi.RegisterOutputType(CertificateCaOutput{})
	pulumi.RegisterOutputType(CertificateCaArrayOutput{})
	pulumi.RegisterOutputType(CertificateCaMapOutput{})
}
