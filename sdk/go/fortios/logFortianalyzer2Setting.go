// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LogFortianalyzer2Setting struct {
	pulumi.CustomResourceState

	__changeIp                pulumi.IntOutput                          `pulumi:"__changeIp"`
	AccessConfig              pulumi.StringOutput                       `pulumi:"accessConfig"`
	AltServer                 pulumi.StringOutput                       `pulumi:"altServer"`
	Certificate               pulumi.StringOutput                       `pulumi:"certificate"`
	CertificateVerification   pulumi.StringOutput                       `pulumi:"certificateVerification"`
	ConnTimeout               pulumi.IntOutput                          `pulumi:"connTimeout"`
	DynamicSortSubtable       pulumi.StringPtrOutput                    `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              pulumi.StringOutput                       `pulumi:"encAlgorithm"`
	FallbackToPrimary         pulumi.StringOutput                       `pulumi:"fallbackToPrimary"`
	FazType                   pulumi.IntOutput                          `pulumi:"fazType"`
	GetAllTables              pulumi.StringPtrOutput                    `pulumi:"getAllTables"`
	HmacAlgorithm             pulumi.StringOutput                       `pulumi:"hmacAlgorithm"`
	Interface                 pulumi.StringOutput                       `pulumi:"interface"`
	InterfaceSelectMethod     pulumi.StringOutput                       `pulumi:"interfaceSelectMethod"`
	IpsArchive                pulumi.StringOutput                       `pulumi:"ipsArchive"`
	MaxLogRate                pulumi.IntOutput                          `pulumi:"maxLogRate"`
	MgmtName                  pulumi.StringOutput                       `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod pulumi.IntOutput                          `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    pulumi.IntOutput                          `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              pulumi.StringOutput                       `pulumi:"presharedKey"`
	Priority                  pulumi.StringOutput                       `pulumi:"priority"`
	Reliable                  pulumi.StringOutput                       `pulumi:"reliable"`
	Serials                   LogFortianalyzer2SettingSerialArrayOutput `pulumi:"serials"`
	Server                    pulumi.StringOutput                       `pulumi:"server"`
	SourceIp                  pulumi.StringOutput                       `pulumi:"sourceIp"`
	SslMinProtoVersion        pulumi.StringOutput                       `pulumi:"sslMinProtoVersion"`
	Status                    pulumi.StringOutput                       `pulumi:"status"`
	UploadDay                 pulumi.StringOutput                       `pulumi:"uploadDay"`
	UploadInterval            pulumi.StringOutput                       `pulumi:"uploadInterval"`
	UploadOption              pulumi.StringOutput                       `pulumi:"uploadOption"`
	UploadTime                pulumi.StringOutput                       `pulumi:"uploadTime"`
	Vdomparam                 pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewLogFortianalyzer2Setting registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzer2Setting(ctx *pulumi.Context,
	name string, args *LogFortianalyzer2SettingArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzer2Setting, error) {
	if args == nil {
		args = &LogFortianalyzer2SettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogFortianalyzer2Setting
	err := ctx.RegisterResource("fortios:index/logFortianalyzer2Setting:LogFortianalyzer2Setting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzer2Setting gets an existing LogFortianalyzer2Setting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzer2Setting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzer2SettingState, opts ...pulumi.ResourceOption) (*LogFortianalyzer2Setting, error) {
	var resource LogFortianalyzer2Setting
	err := ctx.ReadResource("fortios:index/logFortianalyzer2Setting:LogFortianalyzer2Setting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzer2Setting resources.
type logFortianalyzer2SettingState struct {
	__changeIp                *int                             `pulumi:"__changeIp"`
	AccessConfig              *string                          `pulumi:"accessConfig"`
	AltServer                 *string                          `pulumi:"altServer"`
	Certificate               *string                          `pulumi:"certificate"`
	CertificateVerification   *string                          `pulumi:"certificateVerification"`
	ConnTimeout               *int                             `pulumi:"connTimeout"`
	DynamicSortSubtable       *string                          `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              *string                          `pulumi:"encAlgorithm"`
	FallbackToPrimary         *string                          `pulumi:"fallbackToPrimary"`
	FazType                   *int                             `pulumi:"fazType"`
	GetAllTables              *string                          `pulumi:"getAllTables"`
	HmacAlgorithm             *string                          `pulumi:"hmacAlgorithm"`
	Interface                 *string                          `pulumi:"interface"`
	InterfaceSelectMethod     *string                          `pulumi:"interfaceSelectMethod"`
	IpsArchive                *string                          `pulumi:"ipsArchive"`
	MaxLogRate                *int                             `pulumi:"maxLogRate"`
	MgmtName                  *string                          `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod *int                             `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    *int                             `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              *string                          `pulumi:"presharedKey"`
	Priority                  *string                          `pulumi:"priority"`
	Reliable                  *string                          `pulumi:"reliable"`
	Serials                   []LogFortianalyzer2SettingSerial `pulumi:"serials"`
	Server                    *string                          `pulumi:"server"`
	SourceIp                  *string                          `pulumi:"sourceIp"`
	SslMinProtoVersion        *string                          `pulumi:"sslMinProtoVersion"`
	Status                    *string                          `pulumi:"status"`
	UploadDay                 *string                          `pulumi:"uploadDay"`
	UploadInterval            *string                          `pulumi:"uploadInterval"`
	UploadOption              *string                          `pulumi:"uploadOption"`
	UploadTime                *string                          `pulumi:"uploadTime"`
	Vdomparam                 *string                          `pulumi:"vdomparam"`
}

type LogFortianalyzer2SettingState struct {
	__changeIp                pulumi.IntPtrInput
	AccessConfig              pulumi.StringPtrInput
	AltServer                 pulumi.StringPtrInput
	Certificate               pulumi.StringPtrInput
	CertificateVerification   pulumi.StringPtrInput
	ConnTimeout               pulumi.IntPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	EncAlgorithm              pulumi.StringPtrInput
	FallbackToPrimary         pulumi.StringPtrInput
	FazType                   pulumi.IntPtrInput
	GetAllTables              pulumi.StringPtrInput
	HmacAlgorithm             pulumi.StringPtrInput
	Interface                 pulumi.StringPtrInput
	InterfaceSelectMethod     pulumi.StringPtrInput
	IpsArchive                pulumi.StringPtrInput
	MaxLogRate                pulumi.IntPtrInput
	MgmtName                  pulumi.StringPtrInput
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	MonitorKeepalivePeriod    pulumi.IntPtrInput
	PresharedKey              pulumi.StringPtrInput
	Priority                  pulumi.StringPtrInput
	Reliable                  pulumi.StringPtrInput
	Serials                   LogFortianalyzer2SettingSerialArrayInput
	Server                    pulumi.StringPtrInput
	SourceIp                  pulumi.StringPtrInput
	SslMinProtoVersion        pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	UploadDay                 pulumi.StringPtrInput
	UploadInterval            pulumi.StringPtrInput
	UploadOption              pulumi.StringPtrInput
	UploadTime                pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (LogFortianalyzer2SettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzer2SettingState)(nil)).Elem()
}

type logFortianalyzer2SettingArgs struct {
	__changeIp                *int                             `pulumi:"__changeIp"`
	AccessConfig              *string                          `pulumi:"accessConfig"`
	AltServer                 *string                          `pulumi:"altServer"`
	Certificate               *string                          `pulumi:"certificate"`
	CertificateVerification   *string                          `pulumi:"certificateVerification"`
	ConnTimeout               *int                             `pulumi:"connTimeout"`
	DynamicSortSubtable       *string                          `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              *string                          `pulumi:"encAlgorithm"`
	FallbackToPrimary         *string                          `pulumi:"fallbackToPrimary"`
	FazType                   *int                             `pulumi:"fazType"`
	GetAllTables              *string                          `pulumi:"getAllTables"`
	HmacAlgorithm             *string                          `pulumi:"hmacAlgorithm"`
	Interface                 *string                          `pulumi:"interface"`
	InterfaceSelectMethod     *string                          `pulumi:"interfaceSelectMethod"`
	IpsArchive                *string                          `pulumi:"ipsArchive"`
	MaxLogRate                *int                             `pulumi:"maxLogRate"`
	MgmtName                  *string                          `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod *int                             `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    *int                             `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              *string                          `pulumi:"presharedKey"`
	Priority                  *string                          `pulumi:"priority"`
	Reliable                  *string                          `pulumi:"reliable"`
	Serials                   []LogFortianalyzer2SettingSerial `pulumi:"serials"`
	Server                    *string                          `pulumi:"server"`
	SourceIp                  *string                          `pulumi:"sourceIp"`
	SslMinProtoVersion        *string                          `pulumi:"sslMinProtoVersion"`
	Status                    *string                          `pulumi:"status"`
	UploadDay                 *string                          `pulumi:"uploadDay"`
	UploadInterval            *string                          `pulumi:"uploadInterval"`
	UploadOption              *string                          `pulumi:"uploadOption"`
	UploadTime                *string                          `pulumi:"uploadTime"`
	Vdomparam                 *string                          `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogFortianalyzer2Setting resource.
type LogFortianalyzer2SettingArgs struct {
	__changeIp                pulumi.IntPtrInput
	AccessConfig              pulumi.StringPtrInput
	AltServer                 pulumi.StringPtrInput
	Certificate               pulumi.StringPtrInput
	CertificateVerification   pulumi.StringPtrInput
	ConnTimeout               pulumi.IntPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	EncAlgorithm              pulumi.StringPtrInput
	FallbackToPrimary         pulumi.StringPtrInput
	FazType                   pulumi.IntPtrInput
	GetAllTables              pulumi.StringPtrInput
	HmacAlgorithm             pulumi.StringPtrInput
	Interface                 pulumi.StringPtrInput
	InterfaceSelectMethod     pulumi.StringPtrInput
	IpsArchive                pulumi.StringPtrInput
	MaxLogRate                pulumi.IntPtrInput
	MgmtName                  pulumi.StringPtrInput
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	MonitorKeepalivePeriod    pulumi.IntPtrInput
	PresharedKey              pulumi.StringPtrInput
	Priority                  pulumi.StringPtrInput
	Reliable                  pulumi.StringPtrInput
	Serials                   LogFortianalyzer2SettingSerialArrayInput
	Server                    pulumi.StringPtrInput
	SourceIp                  pulumi.StringPtrInput
	SslMinProtoVersion        pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	UploadDay                 pulumi.StringPtrInput
	UploadInterval            pulumi.StringPtrInput
	UploadOption              pulumi.StringPtrInput
	UploadTime                pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (LogFortianalyzer2SettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzer2SettingArgs)(nil)).Elem()
}

type LogFortianalyzer2SettingInput interface {
	pulumi.Input

	ToLogFortianalyzer2SettingOutput() LogFortianalyzer2SettingOutput
	ToLogFortianalyzer2SettingOutputWithContext(ctx context.Context) LogFortianalyzer2SettingOutput
}

func (*LogFortianalyzer2Setting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzer2Setting)(nil)).Elem()
}

func (i *LogFortianalyzer2Setting) ToLogFortianalyzer2SettingOutput() LogFortianalyzer2SettingOutput {
	return i.ToLogFortianalyzer2SettingOutputWithContext(context.Background())
}

func (i *LogFortianalyzer2Setting) ToLogFortianalyzer2SettingOutputWithContext(ctx context.Context) LogFortianalyzer2SettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2SettingOutput)
}

func (i *LogFortianalyzer2Setting) ToOutput(ctx context.Context) pulumix.Output[*LogFortianalyzer2Setting] {
	return pulumix.Output[*LogFortianalyzer2Setting]{
		OutputState: i.ToLogFortianalyzer2SettingOutputWithContext(ctx).OutputState,
	}
}

// LogFortianalyzer2SettingArrayInput is an input type that accepts LogFortianalyzer2SettingArray and LogFortianalyzer2SettingArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzer2SettingArrayInput` via:
//
//	LogFortianalyzer2SettingArray{ LogFortianalyzer2SettingArgs{...} }
type LogFortianalyzer2SettingArrayInput interface {
	pulumi.Input

	ToLogFortianalyzer2SettingArrayOutput() LogFortianalyzer2SettingArrayOutput
	ToLogFortianalyzer2SettingArrayOutputWithContext(context.Context) LogFortianalyzer2SettingArrayOutput
}

type LogFortianalyzer2SettingArray []LogFortianalyzer2SettingInput

func (LogFortianalyzer2SettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzer2Setting)(nil)).Elem()
}

func (i LogFortianalyzer2SettingArray) ToLogFortianalyzer2SettingArrayOutput() LogFortianalyzer2SettingArrayOutput {
	return i.ToLogFortianalyzer2SettingArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzer2SettingArray) ToLogFortianalyzer2SettingArrayOutputWithContext(ctx context.Context) LogFortianalyzer2SettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2SettingArrayOutput)
}

func (i LogFortianalyzer2SettingArray) ToOutput(ctx context.Context) pulumix.Output[[]*LogFortianalyzer2Setting] {
	return pulumix.Output[[]*LogFortianalyzer2Setting]{
		OutputState: i.ToLogFortianalyzer2SettingArrayOutputWithContext(ctx).OutputState,
	}
}

// LogFortianalyzer2SettingMapInput is an input type that accepts LogFortianalyzer2SettingMap and LogFortianalyzer2SettingMapOutput values.
// You can construct a concrete instance of `LogFortianalyzer2SettingMapInput` via:
//
//	LogFortianalyzer2SettingMap{ "key": LogFortianalyzer2SettingArgs{...} }
type LogFortianalyzer2SettingMapInput interface {
	pulumi.Input

	ToLogFortianalyzer2SettingMapOutput() LogFortianalyzer2SettingMapOutput
	ToLogFortianalyzer2SettingMapOutputWithContext(context.Context) LogFortianalyzer2SettingMapOutput
}

type LogFortianalyzer2SettingMap map[string]LogFortianalyzer2SettingInput

func (LogFortianalyzer2SettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzer2Setting)(nil)).Elem()
}

func (i LogFortianalyzer2SettingMap) ToLogFortianalyzer2SettingMapOutput() LogFortianalyzer2SettingMapOutput {
	return i.ToLogFortianalyzer2SettingMapOutputWithContext(context.Background())
}

func (i LogFortianalyzer2SettingMap) ToLogFortianalyzer2SettingMapOutputWithContext(ctx context.Context) LogFortianalyzer2SettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2SettingMapOutput)
}

func (i LogFortianalyzer2SettingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogFortianalyzer2Setting] {
	return pulumix.Output[map[string]*LogFortianalyzer2Setting]{
		OutputState: i.ToLogFortianalyzer2SettingMapOutputWithContext(ctx).OutputState,
	}
}

type LogFortianalyzer2SettingOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2SettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzer2Setting)(nil)).Elem()
}

func (o LogFortianalyzer2SettingOutput) ToLogFortianalyzer2SettingOutput() LogFortianalyzer2SettingOutput {
	return o
}

func (o LogFortianalyzer2SettingOutput) ToLogFortianalyzer2SettingOutputWithContext(ctx context.Context) LogFortianalyzer2SettingOutput {
	return o
}

func (o LogFortianalyzer2SettingOutput) ToOutput(ctx context.Context) pulumix.Output[*LogFortianalyzer2Setting] {
	return pulumix.Output[*LogFortianalyzer2Setting]{
		OutputState: o.OutputState,
	}
}

func (o LogFortianalyzer2SettingOutput) __changeIp() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.__changeIp }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) AccessConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.AccessConfig }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) AltServer() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.AltServer }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) CertificateVerification() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.CertificateVerification }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.ConnTimeout }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzer2SettingOutput) EncAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.EncAlgorithm }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) FallbackToPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.FallbackToPrimary }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) FazType() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.FazType }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzer2SettingOutput) HmacAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.HmacAlgorithm }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) IpsArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.IpsArchive }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) MaxLogRate() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.MaxLogRate }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) MgmtName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.MgmtName }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) MonitorFailureRetryPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.MonitorFailureRetryPeriod }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) MonitorKeepalivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.IntOutput { return v.MonitorKeepalivePeriod }).(pulumi.IntOutput)
}

func (o LogFortianalyzer2SettingOutput) PresharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.PresharedKey }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Reliable() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Reliable }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Serials() LogFortianalyzer2SettingSerialArrayOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) LogFortianalyzer2SettingSerialArrayOutput { return v.Serials }).(LogFortianalyzer2SettingSerialArrayOutput)
}

func (o LogFortianalyzer2SettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) UploadDay() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.UploadDay }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) UploadInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.UploadInterval }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) UploadOption() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.UploadOption }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) UploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringOutput { return v.UploadTime }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2SettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Setting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogFortianalyzer2SettingArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2SettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzer2Setting)(nil)).Elem()
}

func (o LogFortianalyzer2SettingArrayOutput) ToLogFortianalyzer2SettingArrayOutput() LogFortianalyzer2SettingArrayOutput {
	return o
}

func (o LogFortianalyzer2SettingArrayOutput) ToLogFortianalyzer2SettingArrayOutputWithContext(ctx context.Context) LogFortianalyzer2SettingArrayOutput {
	return o
}

func (o LogFortianalyzer2SettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LogFortianalyzer2Setting] {
	return pulumix.Output[[]*LogFortianalyzer2Setting]{
		OutputState: o.OutputState,
	}
}

func (o LogFortianalyzer2SettingArrayOutput) Index(i pulumi.IntInput) LogFortianalyzer2SettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortianalyzer2Setting {
		return vs[0].([]*LogFortianalyzer2Setting)[vs[1].(int)]
	}).(LogFortianalyzer2SettingOutput)
}

type LogFortianalyzer2SettingMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2SettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzer2Setting)(nil)).Elem()
}

func (o LogFortianalyzer2SettingMapOutput) ToLogFortianalyzer2SettingMapOutput() LogFortianalyzer2SettingMapOutput {
	return o
}

func (o LogFortianalyzer2SettingMapOutput) ToLogFortianalyzer2SettingMapOutputWithContext(ctx context.Context) LogFortianalyzer2SettingMapOutput {
	return o
}

func (o LogFortianalyzer2SettingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogFortianalyzer2Setting] {
	return pulumix.Output[map[string]*LogFortianalyzer2Setting]{
		OutputState: o.OutputState,
	}
}

func (o LogFortianalyzer2SettingMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzer2SettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortianalyzer2Setting {
		return vs[0].(map[string]*LogFortianalyzer2Setting)[vs[1].(string)]
	}).(LogFortianalyzer2SettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2SettingInput)(nil)).Elem(), &LogFortianalyzer2Setting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2SettingArrayInput)(nil)).Elem(), LogFortianalyzer2SettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2SettingMapInput)(nil)).Elem(), LogFortianalyzer2SettingMap{})
	pulumi.RegisterOutputType(LogFortianalyzer2SettingOutput{})
	pulumi.RegisterOutputType(LogFortianalyzer2SettingArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzer2SettingMapOutput{})
}
