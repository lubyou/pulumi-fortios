// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemIpsUrlfilterDns struct {
	pulumi.CustomResourceState

	Address        pulumi.StringOutput    `pulumi:"address"`
	Ipv6Capability pulumi.StringOutput    `pulumi:"ipv6Capability"`
	Status         pulumi.StringOutput    `pulumi:"status"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemIpsUrlfilterDns registers a new resource with the given unique name, arguments, and options.
func NewSystemIpsUrlfilterDns(ctx *pulumi.Context,
	name string, args *SystemIpsUrlfilterDnsArgs, opts ...pulumi.ResourceOption) (*SystemIpsUrlfilterDns, error) {
	if args == nil {
		args = &SystemIpsUrlfilterDnsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemIpsUrlfilterDns
	err := ctx.RegisterResource("fortios:index/systemIpsUrlfilterDns:SystemIpsUrlfilterDns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemIpsUrlfilterDns gets an existing SystemIpsUrlfilterDns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemIpsUrlfilterDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemIpsUrlfilterDnsState, opts ...pulumi.ResourceOption) (*SystemIpsUrlfilterDns, error) {
	var resource SystemIpsUrlfilterDns
	err := ctx.ReadResource("fortios:index/systemIpsUrlfilterDns:SystemIpsUrlfilterDns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemIpsUrlfilterDns resources.
type systemIpsUrlfilterDnsState struct {
	Address        *string `pulumi:"address"`
	Ipv6Capability *string `pulumi:"ipv6Capability"`
	Status         *string `pulumi:"status"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

type SystemIpsUrlfilterDnsState struct {
	Address        pulumi.StringPtrInput
	Ipv6Capability pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemIpsUrlfilterDnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsUrlfilterDnsState)(nil)).Elem()
}

type systemIpsUrlfilterDnsArgs struct {
	Address        *string `pulumi:"address"`
	Ipv6Capability *string `pulumi:"ipv6Capability"`
	Status         *string `pulumi:"status"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemIpsUrlfilterDns resource.
type SystemIpsUrlfilterDnsArgs struct {
	Address        pulumi.StringPtrInput
	Ipv6Capability pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemIpsUrlfilterDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsUrlfilterDnsArgs)(nil)).Elem()
}

type SystemIpsUrlfilterDnsInput interface {
	pulumi.Input

	ToSystemIpsUrlfilterDnsOutput() SystemIpsUrlfilterDnsOutput
	ToSystemIpsUrlfilterDnsOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsOutput
}

func (*SystemIpsUrlfilterDns) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsUrlfilterDns)(nil)).Elem()
}

func (i *SystemIpsUrlfilterDns) ToSystemIpsUrlfilterDnsOutput() SystemIpsUrlfilterDnsOutput {
	return i.ToSystemIpsUrlfilterDnsOutputWithContext(context.Background())
}

func (i *SystemIpsUrlfilterDns) ToSystemIpsUrlfilterDnsOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDnsOutput)
}

func (i *SystemIpsUrlfilterDns) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsUrlfilterDns] {
	return pulumix.Output[*SystemIpsUrlfilterDns]{
		OutputState: i.ToSystemIpsUrlfilterDnsOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsUrlfilterDnsArrayInput is an input type that accepts SystemIpsUrlfilterDnsArray and SystemIpsUrlfilterDnsArrayOutput values.
// You can construct a concrete instance of `SystemIpsUrlfilterDnsArrayInput` via:
//
//	SystemIpsUrlfilterDnsArray{ SystemIpsUrlfilterDnsArgs{...} }
type SystemIpsUrlfilterDnsArrayInput interface {
	pulumi.Input

	ToSystemIpsUrlfilterDnsArrayOutput() SystemIpsUrlfilterDnsArrayOutput
	ToSystemIpsUrlfilterDnsArrayOutputWithContext(context.Context) SystemIpsUrlfilterDnsArrayOutput
}

type SystemIpsUrlfilterDnsArray []SystemIpsUrlfilterDnsInput

func (SystemIpsUrlfilterDnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsUrlfilterDns)(nil)).Elem()
}

func (i SystemIpsUrlfilterDnsArray) ToSystemIpsUrlfilterDnsArrayOutput() SystemIpsUrlfilterDnsArrayOutput {
	return i.ToSystemIpsUrlfilterDnsArrayOutputWithContext(context.Background())
}

func (i SystemIpsUrlfilterDnsArray) ToSystemIpsUrlfilterDnsArrayOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDnsArrayOutput)
}

func (i SystemIpsUrlfilterDnsArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsUrlfilterDns] {
	return pulumix.Output[[]*SystemIpsUrlfilterDns]{
		OutputState: i.ToSystemIpsUrlfilterDnsArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsUrlfilterDnsMapInput is an input type that accepts SystemIpsUrlfilterDnsMap and SystemIpsUrlfilterDnsMapOutput values.
// You can construct a concrete instance of `SystemIpsUrlfilterDnsMapInput` via:
//
//	SystemIpsUrlfilterDnsMap{ "key": SystemIpsUrlfilterDnsArgs{...} }
type SystemIpsUrlfilterDnsMapInput interface {
	pulumi.Input

	ToSystemIpsUrlfilterDnsMapOutput() SystemIpsUrlfilterDnsMapOutput
	ToSystemIpsUrlfilterDnsMapOutputWithContext(context.Context) SystemIpsUrlfilterDnsMapOutput
}

type SystemIpsUrlfilterDnsMap map[string]SystemIpsUrlfilterDnsInput

func (SystemIpsUrlfilterDnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsUrlfilterDns)(nil)).Elem()
}

func (i SystemIpsUrlfilterDnsMap) ToSystemIpsUrlfilterDnsMapOutput() SystemIpsUrlfilterDnsMapOutput {
	return i.ToSystemIpsUrlfilterDnsMapOutputWithContext(context.Background())
}

func (i SystemIpsUrlfilterDnsMap) ToSystemIpsUrlfilterDnsMapOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDnsMapOutput)
}

func (i SystemIpsUrlfilterDnsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsUrlfilterDns] {
	return pulumix.Output[map[string]*SystemIpsUrlfilterDns]{
		OutputState: i.ToSystemIpsUrlfilterDnsMapOutputWithContext(ctx).OutputState,
	}
}

type SystemIpsUrlfilterDnsOutput struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsUrlfilterDns)(nil)).Elem()
}

func (o SystemIpsUrlfilterDnsOutput) ToSystemIpsUrlfilterDnsOutput() SystemIpsUrlfilterDnsOutput {
	return o
}

func (o SystemIpsUrlfilterDnsOutput) ToSystemIpsUrlfilterDnsOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsOutput {
	return o
}

func (o SystemIpsUrlfilterDnsOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsUrlfilterDns] {
	return pulumix.Output[*SystemIpsUrlfilterDns]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDnsOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o SystemIpsUrlfilterDnsOutput) Ipv6Capability() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns) pulumi.StringOutput { return v.Ipv6Capability }).(pulumi.StringOutput)
}

func (o SystemIpsUrlfilterDnsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemIpsUrlfilterDnsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemIpsUrlfilterDnsArrayOutput struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsUrlfilterDns)(nil)).Elem()
}

func (o SystemIpsUrlfilterDnsArrayOutput) ToSystemIpsUrlfilterDnsArrayOutput() SystemIpsUrlfilterDnsArrayOutput {
	return o
}

func (o SystemIpsUrlfilterDnsArrayOutput) ToSystemIpsUrlfilterDnsArrayOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsArrayOutput {
	return o
}

func (o SystemIpsUrlfilterDnsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsUrlfilterDns] {
	return pulumix.Output[[]*SystemIpsUrlfilterDns]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDnsArrayOutput) Index(i pulumi.IntInput) SystemIpsUrlfilterDnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemIpsUrlfilterDns {
		return vs[0].([]*SystemIpsUrlfilterDns)[vs[1].(int)]
	}).(SystemIpsUrlfilterDnsOutput)
}

type SystemIpsUrlfilterDnsMapOutput struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsUrlfilterDns)(nil)).Elem()
}

func (o SystemIpsUrlfilterDnsMapOutput) ToSystemIpsUrlfilterDnsMapOutput() SystemIpsUrlfilterDnsMapOutput {
	return o
}

func (o SystemIpsUrlfilterDnsMapOutput) ToSystemIpsUrlfilterDnsMapOutputWithContext(ctx context.Context) SystemIpsUrlfilterDnsMapOutput {
	return o
}

func (o SystemIpsUrlfilterDnsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsUrlfilterDns] {
	return pulumix.Output[map[string]*SystemIpsUrlfilterDns]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDnsMapOutput) MapIndex(k pulumi.StringInput) SystemIpsUrlfilterDnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemIpsUrlfilterDns {
		return vs[0].(map[string]*SystemIpsUrlfilterDns)[vs[1].(string)]
	}).(SystemIpsUrlfilterDnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDnsInput)(nil)).Elem(), &SystemIpsUrlfilterDns{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDnsArrayInput)(nil)).Elem(), SystemIpsUrlfilterDnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDnsMapInput)(nil)).Elem(), SystemIpsUrlfilterDnsMap{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDnsOutput{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDnsArrayOutput{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDnsMapOutput{})
}
