// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemVdomDns struct {
	pulumi.CustomResourceState

	AltPrimary            pulumi.StringOutput                    `pulumi:"altPrimary"`
	AltSecondary          pulumi.StringOutput                    `pulumi:"altSecondary"`
	DnsOverTls            pulumi.StringOutput                    `pulumi:"dnsOverTls"`
	DynamicSortSubtable   pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	Interface             pulumi.StringOutput                    `pulumi:"interface"`
	InterfaceSelectMethod pulumi.StringOutput                    `pulumi:"interfaceSelectMethod"`
	Ip6Primary            pulumi.StringOutput                    `pulumi:"ip6Primary"`
	Ip6Secondary          pulumi.StringOutput                    `pulumi:"ip6Secondary"`
	Primary               pulumi.StringOutput                    `pulumi:"primary"`
	Protocol              pulumi.StringOutput                    `pulumi:"protocol"`
	Secondary             pulumi.StringOutput                    `pulumi:"secondary"`
	ServerHostnames       SystemVdomDnsServerHostnameArrayOutput `pulumi:"serverHostnames"`
	ServerSelectMethod    pulumi.StringOutput                    `pulumi:"serverSelectMethod"`
	SourceIp              pulumi.StringOutput                    `pulumi:"sourceIp"`
	SslCertificate        pulumi.StringOutput                    `pulumi:"sslCertificate"`
	VdomDns               pulumi.StringOutput                    `pulumi:"vdomDns"`
	Vdomparam             pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewSystemVdomDns registers a new resource with the given unique name, arguments, and options.
func NewSystemVdomDns(ctx *pulumi.Context,
	name string, args *SystemVdomDnsArgs, opts ...pulumi.ResourceOption) (*SystemVdomDns, error) {
	if args == nil {
		args = &SystemVdomDnsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemVdomDns
	err := ctx.RegisterResource("fortios:index/systemVdomDns:SystemVdomDns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemVdomDns gets an existing SystemVdomDns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemVdomDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemVdomDnsState, opts ...pulumi.ResourceOption) (*SystemVdomDns, error) {
	var resource SystemVdomDns
	err := ctx.ReadResource("fortios:index/systemVdomDns:SystemVdomDns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemVdomDns resources.
type systemVdomDnsState struct {
	AltPrimary            *string                       `pulumi:"altPrimary"`
	AltSecondary          *string                       `pulumi:"altSecondary"`
	DnsOverTls            *string                       `pulumi:"dnsOverTls"`
	DynamicSortSubtable   *string                       `pulumi:"dynamicSortSubtable"`
	Interface             *string                       `pulumi:"interface"`
	InterfaceSelectMethod *string                       `pulumi:"interfaceSelectMethod"`
	Ip6Primary            *string                       `pulumi:"ip6Primary"`
	Ip6Secondary          *string                       `pulumi:"ip6Secondary"`
	Primary               *string                       `pulumi:"primary"`
	Protocol              *string                       `pulumi:"protocol"`
	Secondary             *string                       `pulumi:"secondary"`
	ServerHostnames       []SystemVdomDnsServerHostname `pulumi:"serverHostnames"`
	ServerSelectMethod    *string                       `pulumi:"serverSelectMethod"`
	SourceIp              *string                       `pulumi:"sourceIp"`
	SslCertificate        *string                       `pulumi:"sslCertificate"`
	VdomDns               *string                       `pulumi:"vdomDns"`
	Vdomparam             *string                       `pulumi:"vdomparam"`
}

type SystemVdomDnsState struct {
	AltPrimary            pulumi.StringPtrInput
	AltSecondary          pulumi.StringPtrInput
	DnsOverTls            pulumi.StringPtrInput
	DynamicSortSubtable   pulumi.StringPtrInput
	Interface             pulumi.StringPtrInput
	InterfaceSelectMethod pulumi.StringPtrInput
	Ip6Primary            pulumi.StringPtrInput
	Ip6Secondary          pulumi.StringPtrInput
	Primary               pulumi.StringPtrInput
	Protocol              pulumi.StringPtrInput
	Secondary             pulumi.StringPtrInput
	ServerHostnames       SystemVdomDnsServerHostnameArrayInput
	ServerSelectMethod    pulumi.StringPtrInput
	SourceIp              pulumi.StringPtrInput
	SslCertificate        pulumi.StringPtrInput
	VdomDns               pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
}

func (SystemVdomDnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVdomDnsState)(nil)).Elem()
}

type systemVdomDnsArgs struct {
	AltPrimary            *string                       `pulumi:"altPrimary"`
	AltSecondary          *string                       `pulumi:"altSecondary"`
	DnsOverTls            *string                       `pulumi:"dnsOverTls"`
	DynamicSortSubtable   *string                       `pulumi:"dynamicSortSubtable"`
	Interface             *string                       `pulumi:"interface"`
	InterfaceSelectMethod *string                       `pulumi:"interfaceSelectMethod"`
	Ip6Primary            *string                       `pulumi:"ip6Primary"`
	Ip6Secondary          *string                       `pulumi:"ip6Secondary"`
	Primary               *string                       `pulumi:"primary"`
	Protocol              *string                       `pulumi:"protocol"`
	Secondary             *string                       `pulumi:"secondary"`
	ServerHostnames       []SystemVdomDnsServerHostname `pulumi:"serverHostnames"`
	ServerSelectMethod    *string                       `pulumi:"serverSelectMethod"`
	SourceIp              *string                       `pulumi:"sourceIp"`
	SslCertificate        *string                       `pulumi:"sslCertificate"`
	VdomDns               *string                       `pulumi:"vdomDns"`
	Vdomparam             *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemVdomDns resource.
type SystemVdomDnsArgs struct {
	AltPrimary            pulumi.StringPtrInput
	AltSecondary          pulumi.StringPtrInput
	DnsOverTls            pulumi.StringPtrInput
	DynamicSortSubtable   pulumi.StringPtrInput
	Interface             pulumi.StringPtrInput
	InterfaceSelectMethod pulumi.StringPtrInput
	Ip6Primary            pulumi.StringPtrInput
	Ip6Secondary          pulumi.StringPtrInput
	Primary               pulumi.StringPtrInput
	Protocol              pulumi.StringPtrInput
	Secondary             pulumi.StringPtrInput
	ServerHostnames       SystemVdomDnsServerHostnameArrayInput
	ServerSelectMethod    pulumi.StringPtrInput
	SourceIp              pulumi.StringPtrInput
	SslCertificate        pulumi.StringPtrInput
	VdomDns               pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
}

func (SystemVdomDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVdomDnsArgs)(nil)).Elem()
}

type SystemVdomDnsInput interface {
	pulumi.Input

	ToSystemVdomDnsOutput() SystemVdomDnsOutput
	ToSystemVdomDnsOutputWithContext(ctx context.Context) SystemVdomDnsOutput
}

func (*SystemVdomDns) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVdomDns)(nil)).Elem()
}

func (i *SystemVdomDns) ToSystemVdomDnsOutput() SystemVdomDnsOutput {
	return i.ToSystemVdomDnsOutputWithContext(context.Background())
}

func (i *SystemVdomDns) ToSystemVdomDnsOutputWithContext(ctx context.Context) SystemVdomDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomDnsOutput)
}

// SystemVdomDnsArrayInput is an input type that accepts SystemVdomDnsArray and SystemVdomDnsArrayOutput values.
// You can construct a concrete instance of `SystemVdomDnsArrayInput` via:
//
//	SystemVdomDnsArray{ SystemVdomDnsArgs{...} }
type SystemVdomDnsArrayInput interface {
	pulumi.Input

	ToSystemVdomDnsArrayOutput() SystemVdomDnsArrayOutput
	ToSystemVdomDnsArrayOutputWithContext(context.Context) SystemVdomDnsArrayOutput
}

type SystemVdomDnsArray []SystemVdomDnsInput

func (SystemVdomDnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVdomDns)(nil)).Elem()
}

func (i SystemVdomDnsArray) ToSystemVdomDnsArrayOutput() SystemVdomDnsArrayOutput {
	return i.ToSystemVdomDnsArrayOutputWithContext(context.Background())
}

func (i SystemVdomDnsArray) ToSystemVdomDnsArrayOutputWithContext(ctx context.Context) SystemVdomDnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomDnsArrayOutput)
}

// SystemVdomDnsMapInput is an input type that accepts SystemVdomDnsMap and SystemVdomDnsMapOutput values.
// You can construct a concrete instance of `SystemVdomDnsMapInput` via:
//
//	SystemVdomDnsMap{ "key": SystemVdomDnsArgs{...} }
type SystemVdomDnsMapInput interface {
	pulumi.Input

	ToSystemVdomDnsMapOutput() SystemVdomDnsMapOutput
	ToSystemVdomDnsMapOutputWithContext(context.Context) SystemVdomDnsMapOutput
}

type SystemVdomDnsMap map[string]SystemVdomDnsInput

func (SystemVdomDnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVdomDns)(nil)).Elem()
}

func (i SystemVdomDnsMap) ToSystemVdomDnsMapOutput() SystemVdomDnsMapOutput {
	return i.ToSystemVdomDnsMapOutputWithContext(context.Background())
}

func (i SystemVdomDnsMap) ToSystemVdomDnsMapOutputWithContext(ctx context.Context) SystemVdomDnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomDnsMapOutput)
}

type SystemVdomDnsOutput struct{ *pulumi.OutputState }

func (SystemVdomDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVdomDns)(nil)).Elem()
}

func (o SystemVdomDnsOutput) ToSystemVdomDnsOutput() SystemVdomDnsOutput {
	return o
}

func (o SystemVdomDnsOutput) ToSystemVdomDnsOutputWithContext(ctx context.Context) SystemVdomDnsOutput {
	return o
}

func (o SystemVdomDnsOutput) AltPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.AltPrimary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) AltSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.AltSecondary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) DnsOverTls() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.DnsOverTls }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemVdomDnsOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Ip6Primary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Ip6Primary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Ip6Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Ip6Secondary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Primary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.Secondary }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) ServerHostnames() SystemVdomDnsServerHostnameArrayOutput {
	return o.ApplyT(func(v *SystemVdomDns) SystemVdomDnsServerHostnameArrayOutput { return v.ServerHostnames }).(SystemVdomDnsServerHostnameArrayOutput)
}

func (o SystemVdomDnsOutput) ServerSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.ServerSelectMethod }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.SslCertificate }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) VdomDns() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringOutput { return v.VdomDns }).(pulumi.StringOutput)
}

func (o SystemVdomDnsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVdomDns) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemVdomDnsArrayOutput struct{ *pulumi.OutputState }

func (SystemVdomDnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVdomDns)(nil)).Elem()
}

func (o SystemVdomDnsArrayOutput) ToSystemVdomDnsArrayOutput() SystemVdomDnsArrayOutput {
	return o
}

func (o SystemVdomDnsArrayOutput) ToSystemVdomDnsArrayOutputWithContext(ctx context.Context) SystemVdomDnsArrayOutput {
	return o
}

func (o SystemVdomDnsArrayOutput) Index(i pulumi.IntInput) SystemVdomDnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemVdomDns {
		return vs[0].([]*SystemVdomDns)[vs[1].(int)]
	}).(SystemVdomDnsOutput)
}

type SystemVdomDnsMapOutput struct{ *pulumi.OutputState }

func (SystemVdomDnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVdomDns)(nil)).Elem()
}

func (o SystemVdomDnsMapOutput) ToSystemVdomDnsMapOutput() SystemVdomDnsMapOutput {
	return o
}

func (o SystemVdomDnsMapOutput) ToSystemVdomDnsMapOutputWithContext(ctx context.Context) SystemVdomDnsMapOutput {
	return o
}

func (o SystemVdomDnsMapOutput) MapIndex(k pulumi.StringInput) SystemVdomDnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemVdomDns {
		return vs[0].(map[string]*SystemVdomDns)[vs[1].(string)]
	}).(SystemVdomDnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomDnsInput)(nil)).Elem(), &SystemVdomDns{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomDnsArrayInput)(nil)).Elem(), SystemVdomDnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomDnsMapInput)(nil)).Elem(), SystemVdomDnsMap{})
	pulumi.RegisterOutputType(SystemVdomDnsOutput{})
	pulumi.RegisterOutputType(SystemVdomDnsArrayOutput{})
	pulumi.RegisterOutputType(SystemVdomDnsMapOutput{})
}
