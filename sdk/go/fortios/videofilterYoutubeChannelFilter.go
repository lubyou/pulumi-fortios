// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure YouTube channel filter. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// Videofilter YoutubeChannelFilter can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/videofilterYoutubeChannelFilter:VideofilterYoutubeChannelFilter labelname {{fosid}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/videofilterYoutubeChannelFilter:VideofilterYoutubeChannelFilter labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type VideofilterYoutubeChannelFilter struct {
	pulumi.CustomResourceState

	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries VideofilterYoutubeChannelFilterEntryArrayOutput `pulumi:"entries"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringOutput `pulumi:"log"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVideofilterYoutubeChannelFilter registers a new resource with the given unique name, arguments, and options.
func NewVideofilterYoutubeChannelFilter(ctx *pulumi.Context,
	name string, args *VideofilterYoutubeChannelFilterArgs, opts ...pulumi.ResourceOption) (*VideofilterYoutubeChannelFilter, error) {
	if args == nil {
		args = &VideofilterYoutubeChannelFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource VideofilterYoutubeChannelFilter
	err := ctx.RegisterResource("fortios:index/videofilterYoutubeChannelFilter:VideofilterYoutubeChannelFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVideofilterYoutubeChannelFilter gets an existing VideofilterYoutubeChannelFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVideofilterYoutubeChannelFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VideofilterYoutubeChannelFilterState, opts ...pulumi.ResourceOption) (*VideofilterYoutubeChannelFilter, error) {
	var resource VideofilterYoutubeChannelFilter
	err := ctx.ReadResource("fortios:index/videofilterYoutubeChannelFilter:VideofilterYoutubeChannelFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VideofilterYoutubeChannelFilter resources.
type videofilterYoutubeChannelFilterState struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries []VideofilterYoutubeChannelFilterEntry `pulumi:"entries"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type VideofilterYoutubeChannelFilterState struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries VideofilterYoutubeChannelFilterEntryArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VideofilterYoutubeChannelFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*videofilterYoutubeChannelFilterState)(nil)).Elem()
}

type videofilterYoutubeChannelFilterArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries []VideofilterYoutubeChannelFilterEntry `pulumi:"entries"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a VideofilterYoutubeChannelFilter resource.
type VideofilterYoutubeChannelFilterArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// YouTube channel filter default action. Valid values: `allow`, `monitor`, `block`.
	DefaultAction pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// YouTube filter entries. The structure of `entries` block is documented below.
	Entries VideofilterYoutubeChannelFilterEntryArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Eanble/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VideofilterYoutubeChannelFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*videofilterYoutubeChannelFilterArgs)(nil)).Elem()
}

type VideofilterYoutubeChannelFilterInput interface {
	pulumi.Input

	ToVideofilterYoutubeChannelFilterOutput() VideofilterYoutubeChannelFilterOutput
	ToVideofilterYoutubeChannelFilterOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterOutput
}

func (*VideofilterYoutubeChannelFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (i *VideofilterYoutubeChannelFilter) ToVideofilterYoutubeChannelFilterOutput() VideofilterYoutubeChannelFilterOutput {
	return i.ToVideofilterYoutubeChannelFilterOutputWithContext(context.Background())
}

func (i *VideofilterYoutubeChannelFilter) ToVideofilterYoutubeChannelFilterOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterYoutubeChannelFilterOutput)
}

// VideofilterYoutubeChannelFilterArrayInput is an input type that accepts VideofilterYoutubeChannelFilterArray and VideofilterYoutubeChannelFilterArrayOutput values.
// You can construct a concrete instance of `VideofilterYoutubeChannelFilterArrayInput` via:
//
//          VideofilterYoutubeChannelFilterArray{ VideofilterYoutubeChannelFilterArgs{...} }
type VideofilterYoutubeChannelFilterArrayInput interface {
	pulumi.Input

	ToVideofilterYoutubeChannelFilterArrayOutput() VideofilterYoutubeChannelFilterArrayOutput
	ToVideofilterYoutubeChannelFilterArrayOutputWithContext(context.Context) VideofilterYoutubeChannelFilterArrayOutput
}

type VideofilterYoutubeChannelFilterArray []VideofilterYoutubeChannelFilterInput

func (VideofilterYoutubeChannelFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (i VideofilterYoutubeChannelFilterArray) ToVideofilterYoutubeChannelFilterArrayOutput() VideofilterYoutubeChannelFilterArrayOutput {
	return i.ToVideofilterYoutubeChannelFilterArrayOutputWithContext(context.Background())
}

func (i VideofilterYoutubeChannelFilterArray) ToVideofilterYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterYoutubeChannelFilterArrayOutput)
}

// VideofilterYoutubeChannelFilterMapInput is an input type that accepts VideofilterYoutubeChannelFilterMap and VideofilterYoutubeChannelFilterMapOutput values.
// You can construct a concrete instance of `VideofilterYoutubeChannelFilterMapInput` via:
//
//          VideofilterYoutubeChannelFilterMap{ "key": VideofilterYoutubeChannelFilterArgs{...} }
type VideofilterYoutubeChannelFilterMapInput interface {
	pulumi.Input

	ToVideofilterYoutubeChannelFilterMapOutput() VideofilterYoutubeChannelFilterMapOutput
	ToVideofilterYoutubeChannelFilterMapOutputWithContext(context.Context) VideofilterYoutubeChannelFilterMapOutput
}

type VideofilterYoutubeChannelFilterMap map[string]VideofilterYoutubeChannelFilterInput

func (VideofilterYoutubeChannelFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (i VideofilterYoutubeChannelFilterMap) ToVideofilterYoutubeChannelFilterMapOutput() VideofilterYoutubeChannelFilterMapOutput {
	return i.ToVideofilterYoutubeChannelFilterMapOutputWithContext(context.Background())
}

func (i VideofilterYoutubeChannelFilterMap) ToVideofilterYoutubeChannelFilterMapOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VideofilterYoutubeChannelFilterMapOutput)
}

type VideofilterYoutubeChannelFilterOutput struct{ *pulumi.OutputState }

func (VideofilterYoutubeChannelFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (o VideofilterYoutubeChannelFilterOutput) ToVideofilterYoutubeChannelFilterOutput() VideofilterYoutubeChannelFilterOutput {
	return o
}

func (o VideofilterYoutubeChannelFilterOutput) ToVideofilterYoutubeChannelFilterOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterOutput {
	return o
}

type VideofilterYoutubeChannelFilterArrayOutput struct{ *pulumi.OutputState }

func (VideofilterYoutubeChannelFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (o VideofilterYoutubeChannelFilterArrayOutput) ToVideofilterYoutubeChannelFilterArrayOutput() VideofilterYoutubeChannelFilterArrayOutput {
	return o
}

func (o VideofilterYoutubeChannelFilterArrayOutput) ToVideofilterYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterArrayOutput {
	return o
}

func (o VideofilterYoutubeChannelFilterArrayOutput) Index(i pulumi.IntInput) VideofilterYoutubeChannelFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VideofilterYoutubeChannelFilter {
		return vs[0].([]*VideofilterYoutubeChannelFilter)[vs[1].(int)]
	}).(VideofilterYoutubeChannelFilterOutput)
}

type VideofilterYoutubeChannelFilterMapOutput struct{ *pulumi.OutputState }

func (VideofilterYoutubeChannelFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VideofilterYoutubeChannelFilter)(nil)).Elem()
}

func (o VideofilterYoutubeChannelFilterMapOutput) ToVideofilterYoutubeChannelFilterMapOutput() VideofilterYoutubeChannelFilterMapOutput {
	return o
}

func (o VideofilterYoutubeChannelFilterMapOutput) ToVideofilterYoutubeChannelFilterMapOutputWithContext(ctx context.Context) VideofilterYoutubeChannelFilterMapOutput {
	return o
}

func (o VideofilterYoutubeChannelFilterMapOutput) MapIndex(k pulumi.StringInput) VideofilterYoutubeChannelFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VideofilterYoutubeChannelFilter {
		return vs[0].(map[string]*VideofilterYoutubeChannelFilter)[vs[1].(string)]
	}).(VideofilterYoutubeChannelFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterYoutubeChannelFilterInput)(nil)).Elem(), &VideofilterYoutubeChannelFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterYoutubeChannelFilterArrayInput)(nil)).Elem(), VideofilterYoutubeChannelFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VideofilterYoutubeChannelFilterMapInput)(nil)).Elem(), VideofilterYoutubeChannelFilterMap{})
	pulumi.RegisterOutputType(VideofilterYoutubeChannelFilterOutput{})
	pulumi.RegisterOutputType(VideofilterYoutubeChannelFilterArrayOutput{})
	pulumi.RegisterOutputType(VideofilterYoutubeChannelFilterMapOutput{})
}
