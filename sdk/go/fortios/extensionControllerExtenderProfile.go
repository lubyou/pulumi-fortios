// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExtensionControllerExtenderProfile struct {
	pulumi.CustomResourceState

	Allowaccess         pulumi.StringOutput                                  `pulumi:"allowaccess"`
	BandwidthLimit      pulumi.IntOutput                                     `pulumi:"bandwidthLimit"`
	Cellular            ExtensionControllerExtenderProfileCellularOutput     `pulumi:"cellular"`
	EnforceBandwidth    pulumi.StringOutput                                  `pulumi:"enforceBandwidth"`
	Extension           pulumi.StringOutput                                  `pulumi:"extension"`
	Fosid               pulumi.IntOutput                                     `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput                               `pulumi:"getAllTables"`
	LanExtension        ExtensionControllerExtenderProfileLanExtensionOutput `pulumi:"lanExtension"`
	LoginPassword       pulumi.StringPtrOutput                               `pulumi:"loginPassword"`
	LoginPasswordChange pulumi.StringOutput                                  `pulumi:"loginPasswordChange"`
	Model               pulumi.StringOutput                                  `pulumi:"model"`
	Name                pulumi.StringOutput                                  `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                               `pulumi:"vdomparam"`
}

// NewExtensionControllerExtenderProfile registers a new resource with the given unique name, arguments, and options.
func NewExtensionControllerExtenderProfile(ctx *pulumi.Context,
	name string, args *ExtensionControllerExtenderProfileArgs, opts ...pulumi.ResourceOption) (*ExtensionControllerExtenderProfile, error) {
	if args == nil {
		args = &ExtensionControllerExtenderProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExtensionControllerExtenderProfile
	err := ctx.RegisterResource("fortios:index/extensionControllerExtenderProfile:ExtensionControllerExtenderProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtensionControllerExtenderProfile gets an existing ExtensionControllerExtenderProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtensionControllerExtenderProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensionControllerExtenderProfileState, opts ...pulumi.ResourceOption) (*ExtensionControllerExtenderProfile, error) {
	var resource ExtensionControllerExtenderProfile
	err := ctx.ReadResource("fortios:index/extensionControllerExtenderProfile:ExtensionControllerExtenderProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtensionControllerExtenderProfile resources.
type extensionControllerExtenderProfileState struct {
	Allowaccess         *string                                         `pulumi:"allowaccess"`
	BandwidthLimit      *int                                            `pulumi:"bandwidthLimit"`
	Cellular            *ExtensionControllerExtenderProfileCellular     `pulumi:"cellular"`
	EnforceBandwidth    *string                                         `pulumi:"enforceBandwidth"`
	Extension           *string                                         `pulumi:"extension"`
	Fosid               *int                                            `pulumi:"fosid"`
	GetAllTables        *string                                         `pulumi:"getAllTables"`
	LanExtension        *ExtensionControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	LoginPassword       *string                                         `pulumi:"loginPassword"`
	LoginPasswordChange *string                                         `pulumi:"loginPasswordChange"`
	Model               *string                                         `pulumi:"model"`
	Name                *string                                         `pulumi:"name"`
	Vdomparam           *string                                         `pulumi:"vdomparam"`
}

type ExtensionControllerExtenderProfileState struct {
	Allowaccess         pulumi.StringPtrInput
	BandwidthLimit      pulumi.IntPtrInput
	Cellular            ExtensionControllerExtenderProfileCellularPtrInput
	EnforceBandwidth    pulumi.StringPtrInput
	Extension           pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	LanExtension        ExtensionControllerExtenderProfileLanExtensionPtrInput
	LoginPassword       pulumi.StringPtrInput
	LoginPasswordChange pulumi.StringPtrInput
	Model               pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (ExtensionControllerExtenderProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionControllerExtenderProfileState)(nil)).Elem()
}

type extensionControllerExtenderProfileArgs struct {
	Allowaccess         *string                                         `pulumi:"allowaccess"`
	BandwidthLimit      *int                                            `pulumi:"bandwidthLimit"`
	Cellular            *ExtensionControllerExtenderProfileCellular     `pulumi:"cellular"`
	EnforceBandwidth    *string                                         `pulumi:"enforceBandwidth"`
	Extension           *string                                         `pulumi:"extension"`
	Fosid               *int                                            `pulumi:"fosid"`
	GetAllTables        *string                                         `pulumi:"getAllTables"`
	LanExtension        *ExtensionControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	LoginPassword       *string                                         `pulumi:"loginPassword"`
	LoginPasswordChange *string                                         `pulumi:"loginPasswordChange"`
	Model               *string                                         `pulumi:"model"`
	Name                *string                                         `pulumi:"name"`
	Vdomparam           *string                                         `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ExtensionControllerExtenderProfile resource.
type ExtensionControllerExtenderProfileArgs struct {
	Allowaccess         pulumi.StringPtrInput
	BandwidthLimit      pulumi.IntPtrInput
	Cellular            ExtensionControllerExtenderProfileCellularPtrInput
	EnforceBandwidth    pulumi.StringPtrInput
	Extension           pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	LanExtension        ExtensionControllerExtenderProfileLanExtensionPtrInput
	LoginPassword       pulumi.StringPtrInput
	LoginPasswordChange pulumi.StringPtrInput
	Model               pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (ExtensionControllerExtenderProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionControllerExtenderProfileArgs)(nil)).Elem()
}

type ExtensionControllerExtenderProfileInput interface {
	pulumi.Input

	ToExtensionControllerExtenderProfileOutput() ExtensionControllerExtenderProfileOutput
	ToExtensionControllerExtenderProfileOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileOutput
}

func (*ExtensionControllerExtenderProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (i *ExtensionControllerExtenderProfile) ToExtensionControllerExtenderProfileOutput() ExtensionControllerExtenderProfileOutput {
	return i.ToExtensionControllerExtenderProfileOutputWithContext(context.Background())
}

func (i *ExtensionControllerExtenderProfile) ToExtensionControllerExtenderProfileOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerExtenderProfileOutput)
}

// ExtensionControllerExtenderProfileArrayInput is an input type that accepts ExtensionControllerExtenderProfileArray and ExtensionControllerExtenderProfileArrayOutput values.
// You can construct a concrete instance of `ExtensionControllerExtenderProfileArrayInput` via:
//
//	ExtensionControllerExtenderProfileArray{ ExtensionControllerExtenderProfileArgs{...} }
type ExtensionControllerExtenderProfileArrayInput interface {
	pulumi.Input

	ToExtensionControllerExtenderProfileArrayOutput() ExtensionControllerExtenderProfileArrayOutput
	ToExtensionControllerExtenderProfileArrayOutputWithContext(context.Context) ExtensionControllerExtenderProfileArrayOutput
}

type ExtensionControllerExtenderProfileArray []ExtensionControllerExtenderProfileInput

func (ExtensionControllerExtenderProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (i ExtensionControllerExtenderProfileArray) ToExtensionControllerExtenderProfileArrayOutput() ExtensionControllerExtenderProfileArrayOutput {
	return i.ToExtensionControllerExtenderProfileArrayOutputWithContext(context.Background())
}

func (i ExtensionControllerExtenderProfileArray) ToExtensionControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerExtenderProfileArrayOutput)
}

// ExtensionControllerExtenderProfileMapInput is an input type that accepts ExtensionControllerExtenderProfileMap and ExtensionControllerExtenderProfileMapOutput values.
// You can construct a concrete instance of `ExtensionControllerExtenderProfileMapInput` via:
//
//	ExtensionControllerExtenderProfileMap{ "key": ExtensionControllerExtenderProfileArgs{...} }
type ExtensionControllerExtenderProfileMapInput interface {
	pulumi.Input

	ToExtensionControllerExtenderProfileMapOutput() ExtensionControllerExtenderProfileMapOutput
	ToExtensionControllerExtenderProfileMapOutputWithContext(context.Context) ExtensionControllerExtenderProfileMapOutput
}

type ExtensionControllerExtenderProfileMap map[string]ExtensionControllerExtenderProfileInput

func (ExtensionControllerExtenderProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (i ExtensionControllerExtenderProfileMap) ToExtensionControllerExtenderProfileMapOutput() ExtensionControllerExtenderProfileMapOutput {
	return i.ToExtensionControllerExtenderProfileMapOutputWithContext(context.Background())
}

func (i ExtensionControllerExtenderProfileMap) ToExtensionControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerExtenderProfileMapOutput)
}

type ExtensionControllerExtenderProfileOutput struct{ *pulumi.OutputState }

func (ExtensionControllerExtenderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (o ExtensionControllerExtenderProfileOutput) ToExtensionControllerExtenderProfileOutput() ExtensionControllerExtenderProfileOutput {
	return o
}

func (o ExtensionControllerExtenderProfileOutput) ToExtensionControllerExtenderProfileOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileOutput {
	return o
}

func (o ExtensionControllerExtenderProfileOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.Allowaccess }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.IntOutput { return v.BandwidthLimit }).(pulumi.IntOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Cellular() ExtensionControllerExtenderProfileCellularOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) ExtensionControllerExtenderProfileCellularOutput {
		return v.Cellular
	}).(ExtensionControllerExtenderProfileCellularOutput)
}

func (o ExtensionControllerExtenderProfileOutput) EnforceBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.EnforceBandwidth }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.Extension }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o ExtensionControllerExtenderProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o ExtensionControllerExtenderProfileOutput) LanExtension() ExtensionControllerExtenderProfileLanExtensionOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) ExtensionControllerExtenderProfileLanExtensionOutput {
		return v.LanExtension
	}).(ExtensionControllerExtenderProfileLanExtensionOutput)
}

func (o ExtensionControllerExtenderProfileOutput) LoginPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringPtrOutput { return v.LoginPassword }).(pulumi.StringPtrOutput)
}

func (o ExtensionControllerExtenderProfileOutput) LoginPasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.LoginPasswordChange }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExtensionControllerExtenderProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionControllerExtenderProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ExtensionControllerExtenderProfileArrayOutput struct{ *pulumi.OutputState }

func (ExtensionControllerExtenderProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (o ExtensionControllerExtenderProfileArrayOutput) ToExtensionControllerExtenderProfileArrayOutput() ExtensionControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtensionControllerExtenderProfileArrayOutput) ToExtensionControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtensionControllerExtenderProfileArrayOutput) Index(i pulumi.IntInput) ExtensionControllerExtenderProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtensionControllerExtenderProfile {
		return vs[0].([]*ExtensionControllerExtenderProfile)[vs[1].(int)]
	}).(ExtensionControllerExtenderProfileOutput)
}

type ExtensionControllerExtenderProfileMapOutput struct{ *pulumi.OutputState }

func (ExtensionControllerExtenderProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensionControllerExtenderProfile)(nil)).Elem()
}

func (o ExtensionControllerExtenderProfileMapOutput) ToExtensionControllerExtenderProfileMapOutput() ExtensionControllerExtenderProfileMapOutput {
	return o
}

func (o ExtensionControllerExtenderProfileMapOutput) ToExtensionControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtensionControllerExtenderProfileMapOutput {
	return o
}

func (o ExtensionControllerExtenderProfileMapOutput) MapIndex(k pulumi.StringInput) ExtensionControllerExtenderProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtensionControllerExtenderProfile {
		return vs[0].(map[string]*ExtensionControllerExtenderProfile)[vs[1].(string)]
	}).(ExtensionControllerExtenderProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerExtenderProfileInput)(nil)).Elem(), &ExtensionControllerExtenderProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerExtenderProfileArrayInput)(nil)).Elem(), ExtensionControllerExtenderProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerExtenderProfileMapInput)(nil)).Elem(), ExtensionControllerExtenderProfileMap{})
	pulumi.RegisterOutputType(ExtensionControllerExtenderProfileOutput{})
	pulumi.RegisterOutputType(ExtensionControllerExtenderProfileArrayOutput{})
	pulumi.RegisterOutputType(ExtensionControllerExtenderProfileMapOutput{})
}
