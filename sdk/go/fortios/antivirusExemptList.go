// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AntivirusExemptList struct {
	pulumi.CustomResourceState

	Comment   pulumi.StringPtrOutput `pulumi:"comment"`
	Hash      pulumi.StringOutput    `pulumi:"hash"`
	HashType  pulumi.StringOutput    `pulumi:"hashType"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAntivirusExemptList registers a new resource with the given unique name, arguments, and options.
func NewAntivirusExemptList(ctx *pulumi.Context,
	name string, args *AntivirusExemptListArgs, opts ...pulumi.ResourceOption) (*AntivirusExemptList, error) {
	if args == nil {
		args = &AntivirusExemptListArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AntivirusExemptList
	err := ctx.RegisterResource("fortios:index/antivirusExemptList:AntivirusExemptList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntivirusExemptList gets an existing AntivirusExemptList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntivirusExemptList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntivirusExemptListState, opts ...pulumi.ResourceOption) (*AntivirusExemptList, error) {
	var resource AntivirusExemptList
	err := ctx.ReadResource("fortios:index/antivirusExemptList:AntivirusExemptList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntivirusExemptList resources.
type antivirusExemptListState struct {
	Comment   *string `pulumi:"comment"`
	Hash      *string `pulumi:"hash"`
	HashType  *string `pulumi:"hashType"`
	Name      *string `pulumi:"name"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type AntivirusExemptListState struct {
	Comment   pulumi.StringPtrInput
	Hash      pulumi.StringPtrInput
	HashType  pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusExemptListState) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusExemptListState)(nil)).Elem()
}

type antivirusExemptListArgs struct {
	Comment   *string `pulumi:"comment"`
	Hash      *string `pulumi:"hash"`
	HashType  *string `pulumi:"hashType"`
	Name      *string `pulumi:"name"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AntivirusExemptList resource.
type AntivirusExemptListArgs struct {
	Comment   pulumi.StringPtrInput
	Hash      pulumi.StringPtrInput
	HashType  pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusExemptListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusExemptListArgs)(nil)).Elem()
}

type AntivirusExemptListInput interface {
	pulumi.Input

	ToAntivirusExemptListOutput() AntivirusExemptListOutput
	ToAntivirusExemptListOutputWithContext(ctx context.Context) AntivirusExemptListOutput
}

func (*AntivirusExemptList) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusExemptList)(nil)).Elem()
}

func (i *AntivirusExemptList) ToAntivirusExemptListOutput() AntivirusExemptListOutput {
	return i.ToAntivirusExemptListOutputWithContext(context.Background())
}

func (i *AntivirusExemptList) ToAntivirusExemptListOutputWithContext(ctx context.Context) AntivirusExemptListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusExemptListOutput)
}

// AntivirusExemptListArrayInput is an input type that accepts AntivirusExemptListArray and AntivirusExemptListArrayOutput values.
// You can construct a concrete instance of `AntivirusExemptListArrayInput` via:
//
//	AntivirusExemptListArray{ AntivirusExemptListArgs{...} }
type AntivirusExemptListArrayInput interface {
	pulumi.Input

	ToAntivirusExemptListArrayOutput() AntivirusExemptListArrayOutput
	ToAntivirusExemptListArrayOutputWithContext(context.Context) AntivirusExemptListArrayOutput
}

type AntivirusExemptListArray []AntivirusExemptListInput

func (AntivirusExemptListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusExemptList)(nil)).Elem()
}

func (i AntivirusExemptListArray) ToAntivirusExemptListArrayOutput() AntivirusExemptListArrayOutput {
	return i.ToAntivirusExemptListArrayOutputWithContext(context.Background())
}

func (i AntivirusExemptListArray) ToAntivirusExemptListArrayOutputWithContext(ctx context.Context) AntivirusExemptListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusExemptListArrayOutput)
}

// AntivirusExemptListMapInput is an input type that accepts AntivirusExemptListMap and AntivirusExemptListMapOutput values.
// You can construct a concrete instance of `AntivirusExemptListMapInput` via:
//
//	AntivirusExemptListMap{ "key": AntivirusExemptListArgs{...} }
type AntivirusExemptListMapInput interface {
	pulumi.Input

	ToAntivirusExemptListMapOutput() AntivirusExemptListMapOutput
	ToAntivirusExemptListMapOutputWithContext(context.Context) AntivirusExemptListMapOutput
}

type AntivirusExemptListMap map[string]AntivirusExemptListInput

func (AntivirusExemptListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusExemptList)(nil)).Elem()
}

func (i AntivirusExemptListMap) ToAntivirusExemptListMapOutput() AntivirusExemptListMapOutput {
	return i.ToAntivirusExemptListMapOutputWithContext(context.Background())
}

func (i AntivirusExemptListMap) ToAntivirusExemptListMapOutputWithContext(ctx context.Context) AntivirusExemptListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusExemptListMapOutput)
}

type AntivirusExemptListOutput struct{ *pulumi.OutputState }

func (AntivirusExemptListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusExemptList)(nil)).Elem()
}

func (o AntivirusExemptListOutput) ToAntivirusExemptListOutput() AntivirusExemptListOutput {
	return o
}

func (o AntivirusExemptListOutput) ToAntivirusExemptListOutputWithContext(ctx context.Context) AntivirusExemptListOutput {
	return o
}

func (o AntivirusExemptListOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o AntivirusExemptListOutput) Hash() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringOutput { return v.Hash }).(pulumi.StringOutput)
}

func (o AntivirusExemptListOutput) HashType() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringOutput { return v.HashType }).(pulumi.StringOutput)
}

func (o AntivirusExemptListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AntivirusExemptListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o AntivirusExemptListOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusExemptList) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AntivirusExemptListArrayOutput struct{ *pulumi.OutputState }

func (AntivirusExemptListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusExemptList)(nil)).Elem()
}

func (o AntivirusExemptListArrayOutput) ToAntivirusExemptListArrayOutput() AntivirusExemptListArrayOutput {
	return o
}

func (o AntivirusExemptListArrayOutput) ToAntivirusExemptListArrayOutputWithContext(ctx context.Context) AntivirusExemptListArrayOutput {
	return o
}

func (o AntivirusExemptListArrayOutput) Index(i pulumi.IntInput) AntivirusExemptListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AntivirusExemptList {
		return vs[0].([]*AntivirusExemptList)[vs[1].(int)]
	}).(AntivirusExemptListOutput)
}

type AntivirusExemptListMapOutput struct{ *pulumi.OutputState }

func (AntivirusExemptListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusExemptList)(nil)).Elem()
}

func (o AntivirusExemptListMapOutput) ToAntivirusExemptListMapOutput() AntivirusExemptListMapOutput {
	return o
}

func (o AntivirusExemptListMapOutput) ToAntivirusExemptListMapOutputWithContext(ctx context.Context) AntivirusExemptListMapOutput {
	return o
}

func (o AntivirusExemptListMapOutput) MapIndex(k pulumi.StringInput) AntivirusExemptListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AntivirusExemptList {
		return vs[0].(map[string]*AntivirusExemptList)[vs[1].(string)]
	}).(AntivirusExemptListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusExemptListInput)(nil)).Elem(), &AntivirusExemptList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusExemptListArrayInput)(nil)).Elem(), AntivirusExemptListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusExemptListMapInput)(nil)).Elem(), AntivirusExemptListMap{})
	pulumi.RegisterOutputType(AntivirusExemptListOutput{})
	pulumi.RegisterOutputType(AntivirusExemptListArrayOutput{})
	pulumi.RegisterOutputType(AntivirusExemptListMapOutput{})
}
