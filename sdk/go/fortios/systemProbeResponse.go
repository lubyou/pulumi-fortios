// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemProbeResponse struct {
	pulumi.CustomResourceState

	HttpProbeValue pulumi.StringOutput    `pulumi:"httpProbeValue"`
	Mode           pulumi.StringOutput    `pulumi:"mode"`
	Password       pulumi.StringPtrOutput `pulumi:"password"`
	Port           pulumi.IntOutput       `pulumi:"port"`
	SecurityMode   pulumi.StringOutput    `pulumi:"securityMode"`
	Timeout        pulumi.IntOutput       `pulumi:"timeout"`
	TtlMode        pulumi.StringOutput    `pulumi:"ttlMode"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemProbeResponse registers a new resource with the given unique name, arguments, and options.
func NewSystemProbeResponse(ctx *pulumi.Context,
	name string, args *SystemProbeResponseArgs, opts ...pulumi.ResourceOption) (*SystemProbeResponse, error) {
	if args == nil {
		args = &SystemProbeResponseArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemProbeResponse
	err := ctx.RegisterResource("fortios:index/systemProbeResponse:SystemProbeResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemProbeResponse gets an existing SystemProbeResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemProbeResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemProbeResponseState, opts ...pulumi.ResourceOption) (*SystemProbeResponse, error) {
	var resource SystemProbeResponse
	err := ctx.ReadResource("fortios:index/systemProbeResponse:SystemProbeResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemProbeResponse resources.
type systemProbeResponseState struct {
	HttpProbeValue *string `pulumi:"httpProbeValue"`
	Mode           *string `pulumi:"mode"`
	Password       *string `pulumi:"password"`
	Port           *int    `pulumi:"port"`
	SecurityMode   *string `pulumi:"securityMode"`
	Timeout        *int    `pulumi:"timeout"`
	TtlMode        *string `pulumi:"ttlMode"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

type SystemProbeResponseState struct {
	HttpProbeValue pulumi.StringPtrInput
	Mode           pulumi.StringPtrInput
	Password       pulumi.StringPtrInput
	Port           pulumi.IntPtrInput
	SecurityMode   pulumi.StringPtrInput
	Timeout        pulumi.IntPtrInput
	TtlMode        pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemProbeResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemProbeResponseState)(nil)).Elem()
}

type systemProbeResponseArgs struct {
	HttpProbeValue *string `pulumi:"httpProbeValue"`
	Mode           *string `pulumi:"mode"`
	Password       *string `pulumi:"password"`
	Port           *int    `pulumi:"port"`
	SecurityMode   *string `pulumi:"securityMode"`
	Timeout        *int    `pulumi:"timeout"`
	TtlMode        *string `pulumi:"ttlMode"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemProbeResponse resource.
type SystemProbeResponseArgs struct {
	HttpProbeValue pulumi.StringPtrInput
	Mode           pulumi.StringPtrInput
	Password       pulumi.StringPtrInput
	Port           pulumi.IntPtrInput
	SecurityMode   pulumi.StringPtrInput
	Timeout        pulumi.IntPtrInput
	TtlMode        pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemProbeResponseArgs)(nil)).Elem()
}

type SystemProbeResponseInput interface {
	pulumi.Input

	ToSystemProbeResponseOutput() SystemProbeResponseOutput
	ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput
}

func (*SystemProbeResponse) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemProbeResponse)(nil)).Elem()
}

func (i *SystemProbeResponse) ToSystemProbeResponseOutput() SystemProbeResponseOutput {
	return i.ToSystemProbeResponseOutputWithContext(context.Background())
}

func (i *SystemProbeResponse) ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseOutput)
}

// SystemProbeResponseArrayInput is an input type that accepts SystemProbeResponseArray and SystemProbeResponseArrayOutput values.
// You can construct a concrete instance of `SystemProbeResponseArrayInput` via:
//
//	SystemProbeResponseArray{ SystemProbeResponseArgs{...} }
type SystemProbeResponseArrayInput interface {
	pulumi.Input

	ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput
	ToSystemProbeResponseArrayOutputWithContext(context.Context) SystemProbeResponseArrayOutput
}

type SystemProbeResponseArray []SystemProbeResponseInput

func (SystemProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemProbeResponse)(nil)).Elem()
}

func (i SystemProbeResponseArray) ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput {
	return i.ToSystemProbeResponseArrayOutputWithContext(context.Background())
}

func (i SystemProbeResponseArray) ToSystemProbeResponseArrayOutputWithContext(ctx context.Context) SystemProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseArrayOutput)
}

// SystemProbeResponseMapInput is an input type that accepts SystemProbeResponseMap and SystemProbeResponseMapOutput values.
// You can construct a concrete instance of `SystemProbeResponseMapInput` via:
//
//	SystemProbeResponseMap{ "key": SystemProbeResponseArgs{...} }
type SystemProbeResponseMapInput interface {
	pulumi.Input

	ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput
	ToSystemProbeResponseMapOutputWithContext(context.Context) SystemProbeResponseMapOutput
}

type SystemProbeResponseMap map[string]SystemProbeResponseInput

func (SystemProbeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemProbeResponse)(nil)).Elem()
}

func (i SystemProbeResponseMap) ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput {
	return i.ToSystemProbeResponseMapOutputWithContext(context.Background())
}

func (i SystemProbeResponseMap) ToSystemProbeResponseMapOutputWithContext(ctx context.Context) SystemProbeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseMapOutput)
}

type SystemProbeResponseOutput struct{ *pulumi.OutputState }

func (SystemProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemProbeResponse)(nil)).Elem()
}

func (o SystemProbeResponseOutput) ToSystemProbeResponseOutput() SystemProbeResponseOutput {
	return o
}

func (o SystemProbeResponseOutput) ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput {
	return o
}

func (o SystemProbeResponseOutput) HttpProbeValue() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringOutput { return v.HttpProbeValue }).(pulumi.StringOutput)
}

func (o SystemProbeResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

func (o SystemProbeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemProbeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o SystemProbeResponseOutput) SecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringOutput { return v.SecurityMode }).(pulumi.StringOutput)
}

func (o SystemProbeResponseOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

func (o SystemProbeResponseOutput) TtlMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringOutput { return v.TtlMode }).(pulumi.StringOutput)
}

func (o SystemProbeResponseOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemProbeResponse) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemProbeResponse)(nil)).Elem()
}

func (o SystemProbeResponseArrayOutput) ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput {
	return o
}

func (o SystemProbeResponseArrayOutput) ToSystemProbeResponseArrayOutputWithContext(ctx context.Context) SystemProbeResponseArrayOutput {
	return o
}

func (o SystemProbeResponseArrayOutput) Index(i pulumi.IntInput) SystemProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemProbeResponse {
		return vs[0].([]*SystemProbeResponse)[vs[1].(int)]
	}).(SystemProbeResponseOutput)
}

type SystemProbeResponseMapOutput struct{ *pulumi.OutputState }

func (SystemProbeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemProbeResponse)(nil)).Elem()
}

func (o SystemProbeResponseMapOutput) ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput {
	return o
}

func (o SystemProbeResponseMapOutput) ToSystemProbeResponseMapOutputWithContext(ctx context.Context) SystemProbeResponseMapOutput {
	return o
}

func (o SystemProbeResponseMapOutput) MapIndex(k pulumi.StringInput) SystemProbeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemProbeResponse {
		return vs[0].(map[string]*SystemProbeResponse)[vs[1].(string)]
	}).(SystemProbeResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemProbeResponseInput)(nil)).Elem(), &SystemProbeResponse{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemProbeResponseArrayInput)(nil)).Elem(), SystemProbeResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemProbeResponseMapInput)(nil)).Elem(), SystemProbeResponseMap{})
	pulumi.RegisterOutputType(SystemProbeResponseOutput{})
	pulumi.RegisterOutputType(SystemProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemProbeResponseMapOutput{})
}
