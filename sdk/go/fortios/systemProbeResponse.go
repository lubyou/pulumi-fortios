// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure system probe response.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemProbeResponse(ctx, "trname", &fortios.SystemProbeResponseArgs{
// 			HttpProbeValue: pulumi.String("OK"),
// 			Mode:           pulumi.String("none"),
// 			Port:           pulumi.Int(8008),
// 			SecurityMode:   pulumi.String("none"),
// 			Timeout:        pulumi.Int(300),
// 			TtlMode:        pulumi.String("retain"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System ProbeResponse can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemProbeResponse:SystemProbeResponse labelname SystemProbeResponse
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemProbeResponse struct {
	pulumi.CustomResourceState

	// Value to respond to the monitoring server.
	HttpProbeValue pulumi.StringOutput `pulumi:"httpProbeValue"`
	// SLA response mode. Valid values: `none`, `http-probe`, `twamp`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Twamp respondor password in authentication mode
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Port number to response.
	Port pulumi.IntOutput `pulumi:"port"`
	// Twamp respondor security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringOutput `pulumi:"securityMode"`
	// An inactivity timer for a twamp test session.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Mode for TWAMP packet TTL modification. Valid values: `reinit`, `decrease`, `retain`.
	TtlMode pulumi.StringOutput `pulumi:"ttlMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemProbeResponse registers a new resource with the given unique name, arguments, and options.
func NewSystemProbeResponse(ctx *pulumi.Context,
	name string, args *SystemProbeResponseArgs, opts ...pulumi.ResourceOption) (*SystemProbeResponse, error) {
	if args == nil {
		args = &SystemProbeResponseArgs{}
	}

	var resource SystemProbeResponse
	err := ctx.RegisterResource("fortios:index/systemProbeResponse:SystemProbeResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemProbeResponse gets an existing SystemProbeResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemProbeResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemProbeResponseState, opts ...pulumi.ResourceOption) (*SystemProbeResponse, error) {
	var resource SystemProbeResponse
	err := ctx.ReadResource("fortios:index/systemProbeResponse:SystemProbeResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemProbeResponse resources.
type systemProbeResponseState struct {
	// Value to respond to the monitoring server.
	HttpProbeValue *string `pulumi:"httpProbeValue"`
	// SLA response mode. Valid values: `none`, `http-probe`, `twamp`.
	Mode *string `pulumi:"mode"`
	// Twamp respondor password in authentication mode
	Password *string `pulumi:"password"`
	// Port number to response.
	Port *int `pulumi:"port"`
	// Twamp respondor security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// An inactivity timer for a twamp test session.
	Timeout *int `pulumi:"timeout"`
	// Mode for TWAMP packet TTL modification. Valid values: `reinit`, `decrease`, `retain`.
	TtlMode *string `pulumi:"ttlMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemProbeResponseState struct {
	// Value to respond to the monitoring server.
	HttpProbeValue pulumi.StringPtrInput
	// SLA response mode. Valid values: `none`, `http-probe`, `twamp`.
	Mode pulumi.StringPtrInput
	// Twamp respondor password in authentication mode
	Password pulumi.StringPtrInput
	// Port number to response.
	Port pulumi.IntPtrInput
	// Twamp respondor security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput
	// An inactivity timer for a twamp test session.
	Timeout pulumi.IntPtrInput
	// Mode for TWAMP packet TTL modification. Valid values: `reinit`, `decrease`, `retain`.
	TtlMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemProbeResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemProbeResponseState)(nil)).Elem()
}

type systemProbeResponseArgs struct {
	// Value to respond to the monitoring server.
	HttpProbeValue *string `pulumi:"httpProbeValue"`
	// SLA response mode. Valid values: `none`, `http-probe`, `twamp`.
	Mode *string `pulumi:"mode"`
	// Twamp respondor password in authentication mode
	Password *string `pulumi:"password"`
	// Port number to response.
	Port *int `pulumi:"port"`
	// Twamp respondor security mode. Valid values: `none`, `authentication`.
	SecurityMode *string `pulumi:"securityMode"`
	// An inactivity timer for a twamp test session.
	Timeout *int `pulumi:"timeout"`
	// Mode for TWAMP packet TTL modification. Valid values: `reinit`, `decrease`, `retain`.
	TtlMode *string `pulumi:"ttlMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemProbeResponse resource.
type SystemProbeResponseArgs struct {
	// Value to respond to the monitoring server.
	HttpProbeValue pulumi.StringPtrInput
	// SLA response mode. Valid values: `none`, `http-probe`, `twamp`.
	Mode pulumi.StringPtrInput
	// Twamp respondor password in authentication mode
	Password pulumi.StringPtrInput
	// Port number to response.
	Port pulumi.IntPtrInput
	// Twamp respondor security mode. Valid values: `none`, `authentication`.
	SecurityMode pulumi.StringPtrInput
	// An inactivity timer for a twamp test session.
	Timeout pulumi.IntPtrInput
	// Mode for TWAMP packet TTL modification. Valid values: `reinit`, `decrease`, `retain`.
	TtlMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemProbeResponseArgs)(nil)).Elem()
}

type SystemProbeResponseInput interface {
	pulumi.Input

	ToSystemProbeResponseOutput() SystemProbeResponseOutput
	ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput
}

func (*SystemProbeResponse) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemProbeResponse)(nil))
}

func (i *SystemProbeResponse) ToSystemProbeResponseOutput() SystemProbeResponseOutput {
	return i.ToSystemProbeResponseOutputWithContext(context.Background())
}

func (i *SystemProbeResponse) ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseOutput)
}

func (i *SystemProbeResponse) ToSystemProbeResponsePtrOutput() SystemProbeResponsePtrOutput {
	return i.ToSystemProbeResponsePtrOutputWithContext(context.Background())
}

func (i *SystemProbeResponse) ToSystemProbeResponsePtrOutputWithContext(ctx context.Context) SystemProbeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponsePtrOutput)
}

type SystemProbeResponsePtrInput interface {
	pulumi.Input

	ToSystemProbeResponsePtrOutput() SystemProbeResponsePtrOutput
	ToSystemProbeResponsePtrOutputWithContext(ctx context.Context) SystemProbeResponsePtrOutput
}

type systemProbeResponsePtrType SystemProbeResponseArgs

func (*systemProbeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemProbeResponse)(nil))
}

func (i *systemProbeResponsePtrType) ToSystemProbeResponsePtrOutput() SystemProbeResponsePtrOutput {
	return i.ToSystemProbeResponsePtrOutputWithContext(context.Background())
}

func (i *systemProbeResponsePtrType) ToSystemProbeResponsePtrOutputWithContext(ctx context.Context) SystemProbeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponsePtrOutput)
}

// SystemProbeResponseArrayInput is an input type that accepts SystemProbeResponseArray and SystemProbeResponseArrayOutput values.
// You can construct a concrete instance of `SystemProbeResponseArrayInput` via:
//
//          SystemProbeResponseArray{ SystemProbeResponseArgs{...} }
type SystemProbeResponseArrayInput interface {
	pulumi.Input

	ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput
	ToSystemProbeResponseArrayOutputWithContext(context.Context) SystemProbeResponseArrayOutput
}

type SystemProbeResponseArray []SystemProbeResponseInput

func (SystemProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemProbeResponse)(nil))
}

func (i SystemProbeResponseArray) ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput {
	return i.ToSystemProbeResponseArrayOutputWithContext(context.Background())
}

func (i SystemProbeResponseArray) ToSystemProbeResponseArrayOutputWithContext(ctx context.Context) SystemProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseArrayOutput)
}

// SystemProbeResponseMapInput is an input type that accepts SystemProbeResponseMap and SystemProbeResponseMapOutput values.
// You can construct a concrete instance of `SystemProbeResponseMapInput` via:
//
//          SystemProbeResponseMap{ "key": SystemProbeResponseArgs{...} }
type SystemProbeResponseMapInput interface {
	pulumi.Input

	ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput
	ToSystemProbeResponseMapOutputWithContext(context.Context) SystemProbeResponseMapOutput
}

type SystemProbeResponseMap map[string]SystemProbeResponseInput

func (SystemProbeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemProbeResponse)(nil))
}

func (i SystemProbeResponseMap) ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput {
	return i.ToSystemProbeResponseMapOutputWithContext(context.Background())
}

func (i SystemProbeResponseMap) ToSystemProbeResponseMapOutputWithContext(ctx context.Context) SystemProbeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemProbeResponseMapOutput)
}

type SystemProbeResponseOutput struct {
	*pulumi.OutputState
}

func (SystemProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemProbeResponse)(nil))
}

func (o SystemProbeResponseOutput) ToSystemProbeResponseOutput() SystemProbeResponseOutput {
	return o
}

func (o SystemProbeResponseOutput) ToSystemProbeResponseOutputWithContext(ctx context.Context) SystemProbeResponseOutput {
	return o
}

func (o SystemProbeResponseOutput) ToSystemProbeResponsePtrOutput() SystemProbeResponsePtrOutput {
	return o.ToSystemProbeResponsePtrOutputWithContext(context.Background())
}

func (o SystemProbeResponseOutput) ToSystemProbeResponsePtrOutputWithContext(ctx context.Context) SystemProbeResponsePtrOutput {
	return o.ApplyT(func(v SystemProbeResponse) *SystemProbeResponse {
		return &v
	}).(SystemProbeResponsePtrOutput)
}

type SystemProbeResponsePtrOutput struct {
	*pulumi.OutputState
}

func (SystemProbeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemProbeResponse)(nil))
}

func (o SystemProbeResponsePtrOutput) ToSystemProbeResponsePtrOutput() SystemProbeResponsePtrOutput {
	return o
}

func (o SystemProbeResponsePtrOutput) ToSystemProbeResponsePtrOutputWithContext(ctx context.Context) SystemProbeResponsePtrOutput {
	return o
}

type SystemProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemProbeResponse)(nil))
}

func (o SystemProbeResponseArrayOutput) ToSystemProbeResponseArrayOutput() SystemProbeResponseArrayOutput {
	return o
}

func (o SystemProbeResponseArrayOutput) ToSystemProbeResponseArrayOutputWithContext(ctx context.Context) SystemProbeResponseArrayOutput {
	return o
}

func (o SystemProbeResponseArrayOutput) Index(i pulumi.IntInput) SystemProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemProbeResponse {
		return vs[0].([]SystemProbeResponse)[vs[1].(int)]
	}).(SystemProbeResponseOutput)
}

type SystemProbeResponseMapOutput struct{ *pulumi.OutputState }

func (SystemProbeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemProbeResponse)(nil))
}

func (o SystemProbeResponseMapOutput) ToSystemProbeResponseMapOutput() SystemProbeResponseMapOutput {
	return o
}

func (o SystemProbeResponseMapOutput) ToSystemProbeResponseMapOutputWithContext(ctx context.Context) SystemProbeResponseMapOutput {
	return o
}

func (o SystemProbeResponseMapOutput) MapIndex(k pulumi.StringInput) SystemProbeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemProbeResponse {
		return vs[0].(map[string]SystemProbeResponse)[vs[1].(string)]
	}).(SystemProbeResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemProbeResponseOutput{})
	pulumi.RegisterOutputType(SystemProbeResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemProbeResponseMapOutput{})
}
