// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type ReportSetting struct {
	pulumi.CustomResourceState

	Fortiview            pulumi.StringOutput    `pulumi:"fortiview"`
	PdfReport            pulumi.StringOutput    `pulumi:"pdfReport"`
	ReportSource         pulumi.StringOutput    `pulumi:"reportSource"`
	TopN                 pulumi.IntOutput       `pulumi:"topN"`
	Vdomparam            pulumi.StringPtrOutput `pulumi:"vdomparam"`
	WebBrowsingThreshold pulumi.IntOutput       `pulumi:"webBrowsingThreshold"`
}

// NewReportSetting registers a new resource with the given unique name, arguments, and options.
func NewReportSetting(ctx *pulumi.Context,
	name string, args *ReportSettingArgs, opts ...pulumi.ResourceOption) (*ReportSetting, error) {
	if args == nil {
		args = &ReportSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReportSetting
	err := ctx.RegisterResource("fortios:index/reportSetting:ReportSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportSetting gets an existing ReportSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportSettingState, opts ...pulumi.ResourceOption) (*ReportSetting, error) {
	var resource ReportSetting
	err := ctx.ReadResource("fortios:index/reportSetting:ReportSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportSetting resources.
type reportSettingState struct {
	Fortiview            *string `pulumi:"fortiview"`
	PdfReport            *string `pulumi:"pdfReport"`
	ReportSource         *string `pulumi:"reportSource"`
	TopN                 *int    `pulumi:"topN"`
	Vdomparam            *string `pulumi:"vdomparam"`
	WebBrowsingThreshold *int    `pulumi:"webBrowsingThreshold"`
}

type ReportSettingState struct {
	Fortiview            pulumi.StringPtrInput
	PdfReport            pulumi.StringPtrInput
	ReportSource         pulumi.StringPtrInput
	TopN                 pulumi.IntPtrInput
	Vdomparam            pulumi.StringPtrInput
	WebBrowsingThreshold pulumi.IntPtrInput
}

func (ReportSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportSettingState)(nil)).Elem()
}

type reportSettingArgs struct {
	Fortiview            *string `pulumi:"fortiview"`
	PdfReport            *string `pulumi:"pdfReport"`
	ReportSource         *string `pulumi:"reportSource"`
	TopN                 *int    `pulumi:"topN"`
	Vdomparam            *string `pulumi:"vdomparam"`
	WebBrowsingThreshold *int    `pulumi:"webBrowsingThreshold"`
}

// The set of arguments for constructing a ReportSetting resource.
type ReportSettingArgs struct {
	Fortiview            pulumi.StringPtrInput
	PdfReport            pulumi.StringPtrInput
	ReportSource         pulumi.StringPtrInput
	TopN                 pulumi.IntPtrInput
	Vdomparam            pulumi.StringPtrInput
	WebBrowsingThreshold pulumi.IntPtrInput
}

func (ReportSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportSettingArgs)(nil)).Elem()
}

type ReportSettingInput interface {
	pulumi.Input

	ToReportSettingOutput() ReportSettingOutput
	ToReportSettingOutputWithContext(ctx context.Context) ReportSettingOutput
}

func (*ReportSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportSetting)(nil)).Elem()
}

func (i *ReportSetting) ToReportSettingOutput() ReportSettingOutput {
	return i.ToReportSettingOutputWithContext(context.Background())
}

func (i *ReportSetting) ToReportSettingOutputWithContext(ctx context.Context) ReportSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingOutput)
}

func (i *ReportSetting) ToOutput(ctx context.Context) pulumix.Output[*ReportSetting] {
	return pulumix.Output[*ReportSetting]{
		OutputState: i.ToReportSettingOutputWithContext(ctx).OutputState,
	}
}

// ReportSettingArrayInput is an input type that accepts ReportSettingArray and ReportSettingArrayOutput values.
// You can construct a concrete instance of `ReportSettingArrayInput` via:
//
//	ReportSettingArray{ ReportSettingArgs{...} }
type ReportSettingArrayInput interface {
	pulumi.Input

	ToReportSettingArrayOutput() ReportSettingArrayOutput
	ToReportSettingArrayOutputWithContext(context.Context) ReportSettingArrayOutput
}

type ReportSettingArray []ReportSettingInput

func (ReportSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportSetting)(nil)).Elem()
}

func (i ReportSettingArray) ToReportSettingArrayOutput() ReportSettingArrayOutput {
	return i.ToReportSettingArrayOutputWithContext(context.Background())
}

func (i ReportSettingArray) ToReportSettingArrayOutputWithContext(ctx context.Context) ReportSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingArrayOutput)
}

func (i ReportSettingArray) ToOutput(ctx context.Context) pulumix.Output[[]*ReportSetting] {
	return pulumix.Output[[]*ReportSetting]{
		OutputState: i.ToReportSettingArrayOutputWithContext(ctx).OutputState,
	}
}

// ReportSettingMapInput is an input type that accepts ReportSettingMap and ReportSettingMapOutput values.
// You can construct a concrete instance of `ReportSettingMapInput` via:
//
//	ReportSettingMap{ "key": ReportSettingArgs{...} }
type ReportSettingMapInput interface {
	pulumi.Input

	ToReportSettingMapOutput() ReportSettingMapOutput
	ToReportSettingMapOutputWithContext(context.Context) ReportSettingMapOutput
}

type ReportSettingMap map[string]ReportSettingInput

func (ReportSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportSetting)(nil)).Elem()
}

func (i ReportSettingMap) ToReportSettingMapOutput() ReportSettingMapOutput {
	return i.ToReportSettingMapOutputWithContext(context.Background())
}

func (i ReportSettingMap) ToReportSettingMapOutputWithContext(ctx context.Context) ReportSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingMapOutput)
}

func (i ReportSettingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ReportSetting] {
	return pulumix.Output[map[string]*ReportSetting]{
		OutputState: i.ToReportSettingMapOutputWithContext(ctx).OutputState,
	}
}

type ReportSettingOutput struct{ *pulumi.OutputState }

func (ReportSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportSetting)(nil)).Elem()
}

func (o ReportSettingOutput) ToReportSettingOutput() ReportSettingOutput {
	return o
}

func (o ReportSettingOutput) ToReportSettingOutputWithContext(ctx context.Context) ReportSettingOutput {
	return o
}

func (o ReportSettingOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportSetting] {
	return pulumix.Output[*ReportSetting]{
		OutputState: o.OutputState,
	}
}

func (o ReportSettingOutput) Fortiview() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.StringOutput { return v.Fortiview }).(pulumi.StringOutput)
}

func (o ReportSettingOutput) PdfReport() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.StringOutput { return v.PdfReport }).(pulumi.StringOutput)
}

func (o ReportSettingOutput) ReportSource() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.StringOutput { return v.ReportSource }).(pulumi.StringOutput)
}

func (o ReportSettingOutput) TopN() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.IntOutput { return v.TopN }).(pulumi.IntOutput)
}

func (o ReportSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o ReportSettingOutput) WebBrowsingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportSetting) pulumi.IntOutput { return v.WebBrowsingThreshold }).(pulumi.IntOutput)
}

type ReportSettingArrayOutput struct{ *pulumi.OutputState }

func (ReportSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportSetting)(nil)).Elem()
}

func (o ReportSettingArrayOutput) ToReportSettingArrayOutput() ReportSettingArrayOutput {
	return o
}

func (o ReportSettingArrayOutput) ToReportSettingArrayOutputWithContext(ctx context.Context) ReportSettingArrayOutput {
	return o
}

func (o ReportSettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ReportSetting] {
	return pulumix.Output[[]*ReportSetting]{
		OutputState: o.OutputState,
	}
}

func (o ReportSettingArrayOutput) Index(i pulumi.IntInput) ReportSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportSetting {
		return vs[0].([]*ReportSetting)[vs[1].(int)]
	}).(ReportSettingOutput)
}

type ReportSettingMapOutput struct{ *pulumi.OutputState }

func (ReportSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportSetting)(nil)).Elem()
}

func (o ReportSettingMapOutput) ToReportSettingMapOutput() ReportSettingMapOutput {
	return o
}

func (o ReportSettingMapOutput) ToReportSettingMapOutputWithContext(ctx context.Context) ReportSettingMapOutput {
	return o
}

func (o ReportSettingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ReportSetting] {
	return pulumix.Output[map[string]*ReportSetting]{
		OutputState: o.OutputState,
	}
}

func (o ReportSettingMapOutput) MapIndex(k pulumi.StringInput) ReportSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportSetting {
		return vs[0].(map[string]*ReportSetting)[vs[1].(string)]
	}).(ReportSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportSettingInput)(nil)).Elem(), &ReportSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportSettingArrayInput)(nil)).Elem(), ReportSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportSettingMapInput)(nil)).Elem(), ReportSettingMap{})
	pulumi.RegisterOutputType(ReportSettingOutput{})
	pulumi.RegisterOutputType(ReportSettingArrayOutput{})
	pulumi.RegisterOutputType(ReportSettingMapOutput{})
}
