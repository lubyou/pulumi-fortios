// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallScheduleGroup struct {
	pulumi.CustomResourceState

	Color               pulumi.IntOutput                       `pulumi:"color"`
	DynamicSortSubtable pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	FabricObject        pulumi.StringOutput                    `pulumi:"fabricObject"`
	Members             FirewallScheduleGroupMemberArrayOutput `pulumi:"members"`
	Name                pulumi.StringOutput                    `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewFirewallScheduleGroup registers a new resource with the given unique name, arguments, and options.
func NewFirewallScheduleGroup(ctx *pulumi.Context,
	name string, args *FirewallScheduleGroupArgs, opts ...pulumi.ResourceOption) (*FirewallScheduleGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallScheduleGroup
	err := ctx.RegisterResource("fortios:index/firewallScheduleGroup:FirewallScheduleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallScheduleGroup gets an existing FirewallScheduleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallScheduleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallScheduleGroupState, opts ...pulumi.ResourceOption) (*FirewallScheduleGroup, error) {
	var resource FirewallScheduleGroup
	err := ctx.ReadResource("fortios:index/firewallScheduleGroup:FirewallScheduleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallScheduleGroup resources.
type firewallScheduleGroupState struct {
	Color               *int                          `pulumi:"color"`
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	FabricObject        *string                       `pulumi:"fabricObject"`
	Members             []FirewallScheduleGroupMember `pulumi:"members"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
}

type FirewallScheduleGroupState struct {
	Color               pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	FabricObject        pulumi.StringPtrInput
	Members             FirewallScheduleGroupMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallScheduleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallScheduleGroupState)(nil)).Elem()
}

type firewallScheduleGroupArgs struct {
	Color               *int                          `pulumi:"color"`
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	FabricObject        *string                       `pulumi:"fabricObject"`
	Members             []FirewallScheduleGroupMember `pulumi:"members"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallScheduleGroup resource.
type FirewallScheduleGroupArgs struct {
	Color               pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	FabricObject        pulumi.StringPtrInput
	Members             FirewallScheduleGroupMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallScheduleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallScheduleGroupArgs)(nil)).Elem()
}

type FirewallScheduleGroupInput interface {
	pulumi.Input

	ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput
	ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput
}

func (*FirewallScheduleGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallScheduleGroup)(nil)).Elem()
}

func (i *FirewallScheduleGroup) ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput {
	return i.ToFirewallScheduleGroupOutputWithContext(context.Background())
}

func (i *FirewallScheduleGroup) ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupOutput)
}

// FirewallScheduleGroupArrayInput is an input type that accepts FirewallScheduleGroupArray and FirewallScheduleGroupArrayOutput values.
// You can construct a concrete instance of `FirewallScheduleGroupArrayInput` via:
//
//	FirewallScheduleGroupArray{ FirewallScheduleGroupArgs{...} }
type FirewallScheduleGroupArrayInput interface {
	pulumi.Input

	ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput
	ToFirewallScheduleGroupArrayOutputWithContext(context.Context) FirewallScheduleGroupArrayOutput
}

type FirewallScheduleGroupArray []FirewallScheduleGroupInput

func (FirewallScheduleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallScheduleGroup)(nil)).Elem()
}

func (i FirewallScheduleGroupArray) ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput {
	return i.ToFirewallScheduleGroupArrayOutputWithContext(context.Background())
}

func (i FirewallScheduleGroupArray) ToFirewallScheduleGroupArrayOutputWithContext(ctx context.Context) FirewallScheduleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupArrayOutput)
}

// FirewallScheduleGroupMapInput is an input type that accepts FirewallScheduleGroupMap and FirewallScheduleGroupMapOutput values.
// You can construct a concrete instance of `FirewallScheduleGroupMapInput` via:
//
//	FirewallScheduleGroupMap{ "key": FirewallScheduleGroupArgs{...} }
type FirewallScheduleGroupMapInput interface {
	pulumi.Input

	ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput
	ToFirewallScheduleGroupMapOutputWithContext(context.Context) FirewallScheduleGroupMapOutput
}

type FirewallScheduleGroupMap map[string]FirewallScheduleGroupInput

func (FirewallScheduleGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallScheduleGroup)(nil)).Elem()
}

func (i FirewallScheduleGroupMap) ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput {
	return i.ToFirewallScheduleGroupMapOutputWithContext(context.Background())
}

func (i FirewallScheduleGroupMap) ToFirewallScheduleGroupMapOutputWithContext(ctx context.Context) FirewallScheduleGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupMapOutput)
}

type FirewallScheduleGroupOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupOutput) ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput {
	return o
}

func (o FirewallScheduleGroupOutput) ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput {
	return o
}

func (o FirewallScheduleGroupOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o FirewallScheduleGroupOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallScheduleGroupOutput) FabricObject() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) pulumi.StringOutput { return v.FabricObject }).(pulumi.StringOutput)
}

func (o FirewallScheduleGroupOutput) Members() FirewallScheduleGroupMemberArrayOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) FirewallScheduleGroupMemberArrayOutput { return v.Members }).(FirewallScheduleGroupMemberArrayOutput)
}

func (o FirewallScheduleGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallScheduleGroupOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallScheduleGroup) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallScheduleGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupArrayOutput) ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput {
	return o
}

func (o FirewallScheduleGroupArrayOutput) ToFirewallScheduleGroupArrayOutputWithContext(ctx context.Context) FirewallScheduleGroupArrayOutput {
	return o
}

func (o FirewallScheduleGroupArrayOutput) Index(i pulumi.IntInput) FirewallScheduleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallScheduleGroup {
		return vs[0].([]*FirewallScheduleGroup)[vs[1].(int)]
	}).(FirewallScheduleGroupOutput)
}

type FirewallScheduleGroupMapOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupMapOutput) ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput {
	return o
}

func (o FirewallScheduleGroupMapOutput) ToFirewallScheduleGroupMapOutputWithContext(ctx context.Context) FirewallScheduleGroupMapOutput {
	return o
}

func (o FirewallScheduleGroupMapOutput) MapIndex(k pulumi.StringInput) FirewallScheduleGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallScheduleGroup {
		return vs[0].(map[string]*FirewallScheduleGroup)[vs[1].(string)]
	}).(FirewallScheduleGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupInput)(nil)).Elem(), &FirewallScheduleGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupArrayInput)(nil)).Elem(), FirewallScheduleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupMapInput)(nil)).Elem(), FirewallScheduleGroupMap{})
	pulumi.RegisterOutputType(FirewallScheduleGroupOutput{})
	pulumi.RegisterOutputType(FirewallScheduleGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallScheduleGroupMapOutput{})
}
