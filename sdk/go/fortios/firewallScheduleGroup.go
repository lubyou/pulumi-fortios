// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schedule group configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		trname1, err := fortios.NewFirewallScheduleRecurring(ctx, "trname1", &fortios.FirewallScheduleRecurringArgs{
// 			Color: pulumi.Int(0),
// 			Day:   pulumi.String("sunday"),
// 			End:   pulumi.String("00:00"),
// 			Start: pulumi.String("00:00"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = fortios.NewFirewallScheduleGroup(ctx, "trname", &fortios.FirewallScheduleGroupArgs{
// 			Color: pulumi.Int(0),
// 			Members: FirewallScheduleGroupMemberArray{
// 				&FirewallScheduleGroupMemberArgs{
// 					Name: trname1.Name,
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// FirewallSchedule Group can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallScheduleGroup:FirewallScheduleGroup labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallScheduleGroup struct {
	pulumi.CustomResourceState

	// Color of icon on the GUI.
	Color pulumi.IntOutput `pulumi:"color"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Security Fabric global object setting. Valid values: `enable`, `disable`.
	FabricObject pulumi.StringOutput `pulumi:"fabricObject"`
	// Schedules added to the schedule group. The structure of `member` block is documented below.
	Members FirewallScheduleGroupMemberArrayOutput `pulumi:"members"`
	// Schedule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallScheduleGroup registers a new resource with the given unique name, arguments, and options.
func NewFirewallScheduleGroup(ctx *pulumi.Context,
	name string, args *FirewallScheduleGroupArgs, opts ...pulumi.ResourceOption) (*FirewallScheduleGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallScheduleGroup
	err := ctx.RegisterResource("fortios:index/firewallScheduleGroup:FirewallScheduleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallScheduleGroup gets an existing FirewallScheduleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallScheduleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallScheduleGroupState, opts ...pulumi.ResourceOption) (*FirewallScheduleGroup, error) {
	var resource FirewallScheduleGroup
	err := ctx.ReadResource("fortios:index/firewallScheduleGroup:FirewallScheduleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallScheduleGroup resources.
type firewallScheduleGroupState struct {
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Security Fabric global object setting. Valid values: `enable`, `disable`.
	FabricObject *string `pulumi:"fabricObject"`
	// Schedules added to the schedule group. The structure of `member` block is documented below.
	Members []FirewallScheduleGroupMember `pulumi:"members"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallScheduleGroupState struct {
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Security Fabric global object setting. Valid values: `enable`, `disable`.
	FabricObject pulumi.StringPtrInput
	// Schedules added to the schedule group. The structure of `member` block is documented below.
	Members FirewallScheduleGroupMemberArrayInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallScheduleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallScheduleGroupState)(nil)).Elem()
}

type firewallScheduleGroupArgs struct {
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Security Fabric global object setting. Valid values: `enable`, `disable`.
	FabricObject *string `pulumi:"fabricObject"`
	// Schedules added to the schedule group. The structure of `member` block is documented below.
	Members []FirewallScheduleGroupMember `pulumi:"members"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallScheduleGroup resource.
type FirewallScheduleGroupArgs struct {
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Security Fabric global object setting. Valid values: `enable`, `disable`.
	FabricObject pulumi.StringPtrInput
	// Schedules added to the schedule group. The structure of `member` block is documented below.
	Members FirewallScheduleGroupMemberArrayInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallScheduleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallScheduleGroupArgs)(nil)).Elem()
}

type FirewallScheduleGroupInput interface {
	pulumi.Input

	ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput
	ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput
}

func (*FirewallScheduleGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallScheduleGroup)(nil)).Elem()
}

func (i *FirewallScheduleGroup) ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput {
	return i.ToFirewallScheduleGroupOutputWithContext(context.Background())
}

func (i *FirewallScheduleGroup) ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupOutput)
}

// FirewallScheduleGroupArrayInput is an input type that accepts FirewallScheduleGroupArray and FirewallScheduleGroupArrayOutput values.
// You can construct a concrete instance of `FirewallScheduleGroupArrayInput` via:
//
//          FirewallScheduleGroupArray{ FirewallScheduleGroupArgs{...} }
type FirewallScheduleGroupArrayInput interface {
	pulumi.Input

	ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput
	ToFirewallScheduleGroupArrayOutputWithContext(context.Context) FirewallScheduleGroupArrayOutput
}

type FirewallScheduleGroupArray []FirewallScheduleGroupInput

func (FirewallScheduleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallScheduleGroup)(nil)).Elem()
}

func (i FirewallScheduleGroupArray) ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput {
	return i.ToFirewallScheduleGroupArrayOutputWithContext(context.Background())
}

func (i FirewallScheduleGroupArray) ToFirewallScheduleGroupArrayOutputWithContext(ctx context.Context) FirewallScheduleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupArrayOutput)
}

// FirewallScheduleGroupMapInput is an input type that accepts FirewallScheduleGroupMap and FirewallScheduleGroupMapOutput values.
// You can construct a concrete instance of `FirewallScheduleGroupMapInput` via:
//
//          FirewallScheduleGroupMap{ "key": FirewallScheduleGroupArgs{...} }
type FirewallScheduleGroupMapInput interface {
	pulumi.Input

	ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput
	ToFirewallScheduleGroupMapOutputWithContext(context.Context) FirewallScheduleGroupMapOutput
}

type FirewallScheduleGroupMap map[string]FirewallScheduleGroupInput

func (FirewallScheduleGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallScheduleGroup)(nil)).Elem()
}

func (i FirewallScheduleGroupMap) ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput {
	return i.ToFirewallScheduleGroupMapOutputWithContext(context.Background())
}

func (i FirewallScheduleGroupMap) ToFirewallScheduleGroupMapOutputWithContext(ctx context.Context) FirewallScheduleGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallScheduleGroupMapOutput)
}

type FirewallScheduleGroupOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupOutput) ToFirewallScheduleGroupOutput() FirewallScheduleGroupOutput {
	return o
}

func (o FirewallScheduleGroupOutput) ToFirewallScheduleGroupOutputWithContext(ctx context.Context) FirewallScheduleGroupOutput {
	return o
}

type FirewallScheduleGroupArrayOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupArrayOutput) ToFirewallScheduleGroupArrayOutput() FirewallScheduleGroupArrayOutput {
	return o
}

func (o FirewallScheduleGroupArrayOutput) ToFirewallScheduleGroupArrayOutputWithContext(ctx context.Context) FirewallScheduleGroupArrayOutput {
	return o
}

func (o FirewallScheduleGroupArrayOutput) Index(i pulumi.IntInput) FirewallScheduleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallScheduleGroup {
		return vs[0].([]*FirewallScheduleGroup)[vs[1].(int)]
	}).(FirewallScheduleGroupOutput)
}

type FirewallScheduleGroupMapOutput struct{ *pulumi.OutputState }

func (FirewallScheduleGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallScheduleGroup)(nil)).Elem()
}

func (o FirewallScheduleGroupMapOutput) ToFirewallScheduleGroupMapOutput() FirewallScheduleGroupMapOutput {
	return o
}

func (o FirewallScheduleGroupMapOutput) ToFirewallScheduleGroupMapOutputWithContext(ctx context.Context) FirewallScheduleGroupMapOutput {
	return o
}

func (o FirewallScheduleGroupMapOutput) MapIndex(k pulumi.StringInput) FirewallScheduleGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallScheduleGroup {
		return vs[0].(map[string]*FirewallScheduleGroup)[vs[1].(string)]
	}).(FirewallScheduleGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupInput)(nil)).Elem(), &FirewallScheduleGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupArrayInput)(nil)).Elem(), FirewallScheduleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallScheduleGroupMapInput)(nil)).Elem(), FirewallScheduleGroupMap{})
	pulumi.RegisterOutputType(FirewallScheduleGroupOutput{})
	pulumi.RegisterOutputType(FirewallScheduleGroupArrayOutput{})
	pulumi.RegisterOutputType(FirewallScheduleGroupMapOutput{})
}
