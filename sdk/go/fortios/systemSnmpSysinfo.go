// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemSnmpSysinfo struct {
	pulumi.CustomResourceState

	ContactInfo            pulumi.StringPtrOutput `pulumi:"contactInfo"`
	Description            pulumi.StringPtrOutput `pulumi:"description"`
	EngineId               pulumi.StringOutput    `pulumi:"engineId"`
	EngineIdType           pulumi.StringOutput    `pulumi:"engineIdType"`
	Location               pulumi.StringPtrOutput `pulumi:"location"`
	Status                 pulumi.StringOutput    `pulumi:"status"`
	TrapHighCpuThreshold   pulumi.IntOutput       `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   pulumi.IntOutput       `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold pulumi.IntOutput       `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSnmpSysinfo registers a new resource with the given unique name, arguments, and options.
func NewSystemSnmpSysinfo(ctx *pulumi.Context,
	name string, args *SystemSnmpSysinfoArgs, opts ...pulumi.ResourceOption) (*SystemSnmpSysinfo, error) {
	if args == nil {
		args = &SystemSnmpSysinfoArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSnmpSysinfo
	err := ctx.RegisterResource("fortios:index/systemSnmpSysinfo:SystemSnmpSysinfo", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSnmpSysinfo gets an existing SystemSnmpSysinfo resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSnmpSysinfo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSnmpSysinfoState, opts ...pulumi.ResourceOption) (*SystemSnmpSysinfo, error) {
	var resource SystemSnmpSysinfo
	err := ctx.ReadResource("fortios:index/systemSnmpSysinfo:SystemSnmpSysinfo", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSnmpSysinfo resources.
type systemSnmpSysinfoState struct {
	ContactInfo            *string `pulumi:"contactInfo"`
	Description            *string `pulumi:"description"`
	EngineId               *string `pulumi:"engineId"`
	EngineIdType           *string `pulumi:"engineIdType"`
	Location               *string `pulumi:"location"`
	Status                 *string `pulumi:"status"`
	TrapHighCpuThreshold   *int    `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   *int    `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold *int    `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

type SystemSnmpSysinfoState struct {
	ContactInfo            pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	EngineId               pulumi.StringPtrInput
	EngineIdType           pulumi.StringPtrInput
	Location               pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	TrapHighCpuThreshold   pulumi.IntPtrInput
	TrapLogFullThreshold   pulumi.IntPtrInput
	TrapLowMemoryThreshold pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemSnmpSysinfoState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpSysinfoState)(nil)).Elem()
}

type systemSnmpSysinfoArgs struct {
	ContactInfo            *string `pulumi:"contactInfo"`
	Description            *string `pulumi:"description"`
	EngineId               *string `pulumi:"engineId"`
	EngineIdType           *string `pulumi:"engineIdType"`
	Location               *string `pulumi:"location"`
	Status                 *string `pulumi:"status"`
	TrapHighCpuThreshold   *int    `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   *int    `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold *int    `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSnmpSysinfo resource.
type SystemSnmpSysinfoArgs struct {
	ContactInfo            pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	EngineId               pulumi.StringPtrInput
	EngineIdType           pulumi.StringPtrInput
	Location               pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	TrapHighCpuThreshold   pulumi.IntPtrInput
	TrapLogFullThreshold   pulumi.IntPtrInput
	TrapLowMemoryThreshold pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemSnmpSysinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpSysinfoArgs)(nil)).Elem()
}

type SystemSnmpSysinfoInput interface {
	pulumi.Input

	ToSystemSnmpSysinfoOutput() SystemSnmpSysinfoOutput
	ToSystemSnmpSysinfoOutputWithContext(ctx context.Context) SystemSnmpSysinfoOutput
}

func (*SystemSnmpSysinfo) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpSysinfo)(nil)).Elem()
}

func (i *SystemSnmpSysinfo) ToSystemSnmpSysinfoOutput() SystemSnmpSysinfoOutput {
	return i.ToSystemSnmpSysinfoOutputWithContext(context.Background())
}

func (i *SystemSnmpSysinfo) ToSystemSnmpSysinfoOutputWithContext(ctx context.Context) SystemSnmpSysinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpSysinfoOutput)
}

func (i *SystemSnmpSysinfo) ToOutput(ctx context.Context) pulumix.Output[*SystemSnmpSysinfo] {
	return pulumix.Output[*SystemSnmpSysinfo]{
		OutputState: i.ToSystemSnmpSysinfoOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpSysinfoArrayInput is an input type that accepts SystemSnmpSysinfoArray and SystemSnmpSysinfoArrayOutput values.
// You can construct a concrete instance of `SystemSnmpSysinfoArrayInput` via:
//
//	SystemSnmpSysinfoArray{ SystemSnmpSysinfoArgs{...} }
type SystemSnmpSysinfoArrayInput interface {
	pulumi.Input

	ToSystemSnmpSysinfoArrayOutput() SystemSnmpSysinfoArrayOutput
	ToSystemSnmpSysinfoArrayOutputWithContext(context.Context) SystemSnmpSysinfoArrayOutput
}

type SystemSnmpSysinfoArray []SystemSnmpSysinfoInput

func (SystemSnmpSysinfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpSysinfo)(nil)).Elem()
}

func (i SystemSnmpSysinfoArray) ToSystemSnmpSysinfoArrayOutput() SystemSnmpSysinfoArrayOutput {
	return i.ToSystemSnmpSysinfoArrayOutputWithContext(context.Background())
}

func (i SystemSnmpSysinfoArray) ToSystemSnmpSysinfoArrayOutputWithContext(ctx context.Context) SystemSnmpSysinfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpSysinfoArrayOutput)
}

func (i SystemSnmpSysinfoArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSnmpSysinfo] {
	return pulumix.Output[[]*SystemSnmpSysinfo]{
		OutputState: i.ToSystemSnmpSysinfoArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpSysinfoMapInput is an input type that accepts SystemSnmpSysinfoMap and SystemSnmpSysinfoMapOutput values.
// You can construct a concrete instance of `SystemSnmpSysinfoMapInput` via:
//
//	SystemSnmpSysinfoMap{ "key": SystemSnmpSysinfoArgs{...} }
type SystemSnmpSysinfoMapInput interface {
	pulumi.Input

	ToSystemSnmpSysinfoMapOutput() SystemSnmpSysinfoMapOutput
	ToSystemSnmpSysinfoMapOutputWithContext(context.Context) SystemSnmpSysinfoMapOutput
}

type SystemSnmpSysinfoMap map[string]SystemSnmpSysinfoInput

func (SystemSnmpSysinfoMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpSysinfo)(nil)).Elem()
}

func (i SystemSnmpSysinfoMap) ToSystemSnmpSysinfoMapOutput() SystemSnmpSysinfoMapOutput {
	return i.ToSystemSnmpSysinfoMapOutputWithContext(context.Background())
}

func (i SystemSnmpSysinfoMap) ToSystemSnmpSysinfoMapOutputWithContext(ctx context.Context) SystemSnmpSysinfoMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpSysinfoMapOutput)
}

func (i SystemSnmpSysinfoMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSnmpSysinfo] {
	return pulumix.Output[map[string]*SystemSnmpSysinfo]{
		OutputState: i.ToSystemSnmpSysinfoMapOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpSysinfoOutput struct{ *pulumi.OutputState }

func (SystemSnmpSysinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpSysinfo)(nil)).Elem()
}

func (o SystemSnmpSysinfoOutput) ToSystemSnmpSysinfoOutput() SystemSnmpSysinfoOutput {
	return o
}

func (o SystemSnmpSysinfoOutput) ToSystemSnmpSysinfoOutputWithContext(ctx context.Context) SystemSnmpSysinfoOutput {
	return o
}

func (o SystemSnmpSysinfoOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemSnmpSysinfo] {
	return pulumix.Output[*SystemSnmpSysinfo]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpSysinfoOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringPtrOutput { return v.ContactInfo }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpSysinfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpSysinfoOutput) EngineId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringOutput { return v.EngineId }).(pulumi.StringOutput)
}

func (o SystemSnmpSysinfoOutput) EngineIdType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringOutput { return v.EngineIdType }).(pulumi.StringOutput)
}

func (o SystemSnmpSysinfoOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpSysinfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemSnmpSysinfoOutput) TrapHighCpuThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.IntOutput { return v.TrapHighCpuThreshold }).(pulumi.IntOutput)
}

func (o SystemSnmpSysinfoOutput) TrapLogFullThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.IntOutput { return v.TrapLogFullThreshold }).(pulumi.IntOutput)
}

func (o SystemSnmpSysinfoOutput) TrapLowMemoryThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.IntOutput { return v.TrapLowMemoryThreshold }).(pulumi.IntOutput)
}

func (o SystemSnmpSysinfoOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpSysinfo) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemSnmpSysinfoArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpSysinfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpSysinfo)(nil)).Elem()
}

func (o SystemSnmpSysinfoArrayOutput) ToSystemSnmpSysinfoArrayOutput() SystemSnmpSysinfoArrayOutput {
	return o
}

func (o SystemSnmpSysinfoArrayOutput) ToSystemSnmpSysinfoArrayOutputWithContext(ctx context.Context) SystemSnmpSysinfoArrayOutput {
	return o
}

func (o SystemSnmpSysinfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSnmpSysinfo] {
	return pulumix.Output[[]*SystemSnmpSysinfo]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpSysinfoArrayOutput) Index(i pulumi.IntInput) SystemSnmpSysinfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSnmpSysinfo {
		return vs[0].([]*SystemSnmpSysinfo)[vs[1].(int)]
	}).(SystemSnmpSysinfoOutput)
}

type SystemSnmpSysinfoMapOutput struct{ *pulumi.OutputState }

func (SystemSnmpSysinfoMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpSysinfo)(nil)).Elem()
}

func (o SystemSnmpSysinfoMapOutput) ToSystemSnmpSysinfoMapOutput() SystemSnmpSysinfoMapOutput {
	return o
}

func (o SystemSnmpSysinfoMapOutput) ToSystemSnmpSysinfoMapOutputWithContext(ctx context.Context) SystemSnmpSysinfoMapOutput {
	return o
}

func (o SystemSnmpSysinfoMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSnmpSysinfo] {
	return pulumix.Output[map[string]*SystemSnmpSysinfo]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpSysinfoMapOutput) MapIndex(k pulumi.StringInput) SystemSnmpSysinfoOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSnmpSysinfo {
		return vs[0].(map[string]*SystemSnmpSysinfo)[vs[1].(string)]
	}).(SystemSnmpSysinfoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpSysinfoInput)(nil)).Elem(), &SystemSnmpSysinfo{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpSysinfoArrayInput)(nil)).Elem(), SystemSnmpSysinfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpSysinfoMapInput)(nil)).Elem(), SystemSnmpSysinfoMap{})
	pulumi.RegisterOutputType(SystemSnmpSysinfoOutput{})
	pulumi.RegisterOutputType(SystemSnmpSysinfoArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpSysinfoMapOutput{})
}
