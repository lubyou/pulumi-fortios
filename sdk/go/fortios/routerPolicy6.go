// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouterPolicy6 struct {
	pulumi.CustomResourceState

	Action                 pulumi.StringOutput                           `pulumi:"action"`
	Comments               pulumi.StringPtrOutput                        `pulumi:"comments"`
	Dst                    pulumi.StringOutput                           `pulumi:"dst"`
	DstNegate              pulumi.StringOutput                           `pulumi:"dstNegate"`
	Dstaddrs               RouterPolicy6DstaddrArrayOutput               `pulumi:"dstaddrs"`
	DynamicSortSubtable    pulumi.StringPtrOutput                        `pulumi:"dynamicSortSubtable"`
	EndPort                pulumi.IntOutput                              `pulumi:"endPort"`
	EndSourcePort          pulumi.IntOutput                              `pulumi:"endSourcePort"`
	Gateway                pulumi.StringOutput                           `pulumi:"gateway"`
	GetAllTables           pulumi.StringPtrOutput                        `pulumi:"getAllTables"`
	InputDevice            pulumi.StringOutput                           `pulumi:"inputDevice"`
	InputDeviceNegate      pulumi.StringOutput                           `pulumi:"inputDeviceNegate"`
	InternetServiceCustoms RouterPolicy6InternetServiceCustomArrayOutput `pulumi:"internetServiceCustoms"`
	InternetServiceIds     RouterPolicy6InternetServiceIdArrayOutput     `pulumi:"internetServiceIds"`
	OutputDevice           pulumi.StringOutput                           `pulumi:"outputDevice"`
	Protocol               pulumi.IntOutput                              `pulumi:"protocol"`
	SeqNum                 pulumi.IntOutput                              `pulumi:"seqNum"`
	Src                    pulumi.StringOutput                           `pulumi:"src"`
	SrcNegate              pulumi.StringOutput                           `pulumi:"srcNegate"`
	Srcaddrs               RouterPolicy6SrcaddrArrayOutput               `pulumi:"srcaddrs"`
	StartPort              pulumi.IntOutput                              `pulumi:"startPort"`
	StartSourcePort        pulumi.IntOutput                              `pulumi:"startSourcePort"`
	Status                 pulumi.StringOutput                           `pulumi:"status"`
	Tos                    pulumi.StringOutput                           `pulumi:"tos"`
	TosMask                pulumi.StringOutput                           `pulumi:"tosMask"`
	Vdomparam              pulumi.StringPtrOutput                        `pulumi:"vdomparam"`
}

// NewRouterPolicy6 registers a new resource with the given unique name, arguments, and options.
func NewRouterPolicy6(ctx *pulumi.Context,
	name string, args *RouterPolicy6Args, opts ...pulumi.ResourceOption) (*RouterPolicy6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputDevice == nil {
		return nil, errors.New("invalid value for required argument 'InputDevice'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterPolicy6
	err := ctx.RegisterResource("fortios:index/routerPolicy6:RouterPolicy6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterPolicy6 gets an existing RouterPolicy6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterPolicy6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterPolicy6State, opts ...pulumi.ResourceOption) (*RouterPolicy6, error) {
	var resource RouterPolicy6
	err := ctx.ReadResource("fortios:index/routerPolicy6:RouterPolicy6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterPolicy6 resources.
type routerPolicy6State struct {
	Action                 *string                              `pulumi:"action"`
	Comments               *string                              `pulumi:"comments"`
	Dst                    *string                              `pulumi:"dst"`
	DstNegate              *string                              `pulumi:"dstNegate"`
	Dstaddrs               []RouterPolicy6Dstaddr               `pulumi:"dstaddrs"`
	DynamicSortSubtable    *string                              `pulumi:"dynamicSortSubtable"`
	EndPort                *int                                 `pulumi:"endPort"`
	EndSourcePort          *int                                 `pulumi:"endSourcePort"`
	Gateway                *string                              `pulumi:"gateway"`
	GetAllTables           *string                              `pulumi:"getAllTables"`
	InputDevice            *string                              `pulumi:"inputDevice"`
	InputDeviceNegate      *string                              `pulumi:"inputDeviceNegate"`
	InternetServiceCustoms []RouterPolicy6InternetServiceCustom `pulumi:"internetServiceCustoms"`
	InternetServiceIds     []RouterPolicy6InternetServiceId     `pulumi:"internetServiceIds"`
	OutputDevice           *string                              `pulumi:"outputDevice"`
	Protocol               *int                                 `pulumi:"protocol"`
	SeqNum                 *int                                 `pulumi:"seqNum"`
	Src                    *string                              `pulumi:"src"`
	SrcNegate              *string                              `pulumi:"srcNegate"`
	Srcaddrs               []RouterPolicy6Srcaddr               `pulumi:"srcaddrs"`
	StartPort              *int                                 `pulumi:"startPort"`
	StartSourcePort        *int                                 `pulumi:"startSourcePort"`
	Status                 *string                              `pulumi:"status"`
	Tos                    *string                              `pulumi:"tos"`
	TosMask                *string                              `pulumi:"tosMask"`
	Vdomparam              *string                              `pulumi:"vdomparam"`
}

type RouterPolicy6State struct {
	Action                 pulumi.StringPtrInput
	Comments               pulumi.StringPtrInput
	Dst                    pulumi.StringPtrInput
	DstNegate              pulumi.StringPtrInput
	Dstaddrs               RouterPolicy6DstaddrArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	EndPort                pulumi.IntPtrInput
	EndSourcePort          pulumi.IntPtrInput
	Gateway                pulumi.StringPtrInput
	GetAllTables           pulumi.StringPtrInput
	InputDevice            pulumi.StringPtrInput
	InputDeviceNegate      pulumi.StringPtrInput
	InternetServiceCustoms RouterPolicy6InternetServiceCustomArrayInput
	InternetServiceIds     RouterPolicy6InternetServiceIdArrayInput
	OutputDevice           pulumi.StringPtrInput
	Protocol               pulumi.IntPtrInput
	SeqNum                 pulumi.IntPtrInput
	Src                    pulumi.StringPtrInput
	SrcNegate              pulumi.StringPtrInput
	Srcaddrs               RouterPolicy6SrcaddrArrayInput
	StartPort              pulumi.IntPtrInput
	StartSourcePort        pulumi.IntPtrInput
	Status                 pulumi.StringPtrInput
	Tos                    pulumi.StringPtrInput
	TosMask                pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (RouterPolicy6State) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPolicy6State)(nil)).Elem()
}

type routerPolicy6Args struct {
	Action                 *string                              `pulumi:"action"`
	Comments               *string                              `pulumi:"comments"`
	Dst                    *string                              `pulumi:"dst"`
	DstNegate              *string                              `pulumi:"dstNegate"`
	Dstaddrs               []RouterPolicy6Dstaddr               `pulumi:"dstaddrs"`
	DynamicSortSubtable    *string                              `pulumi:"dynamicSortSubtable"`
	EndPort                *int                                 `pulumi:"endPort"`
	EndSourcePort          *int                                 `pulumi:"endSourcePort"`
	Gateway                *string                              `pulumi:"gateway"`
	GetAllTables           *string                              `pulumi:"getAllTables"`
	InputDevice            string                               `pulumi:"inputDevice"`
	InputDeviceNegate      *string                              `pulumi:"inputDeviceNegate"`
	InternetServiceCustoms []RouterPolicy6InternetServiceCustom `pulumi:"internetServiceCustoms"`
	InternetServiceIds     []RouterPolicy6InternetServiceId     `pulumi:"internetServiceIds"`
	OutputDevice           *string                              `pulumi:"outputDevice"`
	Protocol               *int                                 `pulumi:"protocol"`
	SeqNum                 *int                                 `pulumi:"seqNum"`
	Src                    *string                              `pulumi:"src"`
	SrcNegate              *string                              `pulumi:"srcNegate"`
	Srcaddrs               []RouterPolicy6Srcaddr               `pulumi:"srcaddrs"`
	StartPort              *int                                 `pulumi:"startPort"`
	StartSourcePort        *int                                 `pulumi:"startSourcePort"`
	Status                 *string                              `pulumi:"status"`
	Tos                    *string                              `pulumi:"tos"`
	TosMask                *string                              `pulumi:"tosMask"`
	Vdomparam              *string                              `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterPolicy6 resource.
type RouterPolicy6Args struct {
	Action                 pulumi.StringPtrInput
	Comments               pulumi.StringPtrInput
	Dst                    pulumi.StringPtrInput
	DstNegate              pulumi.StringPtrInput
	Dstaddrs               RouterPolicy6DstaddrArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	EndPort                pulumi.IntPtrInput
	EndSourcePort          pulumi.IntPtrInput
	Gateway                pulumi.StringPtrInput
	GetAllTables           pulumi.StringPtrInput
	InputDevice            pulumi.StringInput
	InputDeviceNegate      pulumi.StringPtrInput
	InternetServiceCustoms RouterPolicy6InternetServiceCustomArrayInput
	InternetServiceIds     RouterPolicy6InternetServiceIdArrayInput
	OutputDevice           pulumi.StringPtrInput
	Protocol               pulumi.IntPtrInput
	SeqNum                 pulumi.IntPtrInput
	Src                    pulumi.StringPtrInput
	SrcNegate              pulumi.StringPtrInput
	Srcaddrs               RouterPolicy6SrcaddrArrayInput
	StartPort              pulumi.IntPtrInput
	StartSourcePort        pulumi.IntPtrInput
	Status                 pulumi.StringPtrInput
	Tos                    pulumi.StringPtrInput
	TosMask                pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (RouterPolicy6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPolicy6Args)(nil)).Elem()
}

type RouterPolicy6Input interface {
	pulumi.Input

	ToRouterPolicy6Output() RouterPolicy6Output
	ToRouterPolicy6OutputWithContext(ctx context.Context) RouterPolicy6Output
}

func (*RouterPolicy6) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPolicy6)(nil)).Elem()
}

func (i *RouterPolicy6) ToRouterPolicy6Output() RouterPolicy6Output {
	return i.ToRouterPolicy6OutputWithContext(context.Background())
}

func (i *RouterPolicy6) ToRouterPolicy6OutputWithContext(ctx context.Context) RouterPolicy6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6Output)
}

// RouterPolicy6ArrayInput is an input type that accepts RouterPolicy6Array and RouterPolicy6ArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6ArrayInput` via:
//
//	RouterPolicy6Array{ RouterPolicy6Args{...} }
type RouterPolicy6ArrayInput interface {
	pulumi.Input

	ToRouterPolicy6ArrayOutput() RouterPolicy6ArrayOutput
	ToRouterPolicy6ArrayOutputWithContext(context.Context) RouterPolicy6ArrayOutput
}

type RouterPolicy6Array []RouterPolicy6Input

func (RouterPolicy6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPolicy6)(nil)).Elem()
}

func (i RouterPolicy6Array) ToRouterPolicy6ArrayOutput() RouterPolicy6ArrayOutput {
	return i.ToRouterPolicy6ArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6Array) ToRouterPolicy6ArrayOutputWithContext(ctx context.Context) RouterPolicy6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6ArrayOutput)
}

// RouterPolicy6MapInput is an input type that accepts RouterPolicy6Map and RouterPolicy6MapOutput values.
// You can construct a concrete instance of `RouterPolicy6MapInput` via:
//
//	RouterPolicy6Map{ "key": RouterPolicy6Args{...} }
type RouterPolicy6MapInput interface {
	pulumi.Input

	ToRouterPolicy6MapOutput() RouterPolicy6MapOutput
	ToRouterPolicy6MapOutputWithContext(context.Context) RouterPolicy6MapOutput
}

type RouterPolicy6Map map[string]RouterPolicy6Input

func (RouterPolicy6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPolicy6)(nil)).Elem()
}

func (i RouterPolicy6Map) ToRouterPolicy6MapOutput() RouterPolicy6MapOutput {
	return i.ToRouterPolicy6MapOutputWithContext(context.Background())
}

func (i RouterPolicy6Map) ToRouterPolicy6MapOutputWithContext(ctx context.Context) RouterPolicy6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6MapOutput)
}

type RouterPolicy6Output struct{ *pulumi.OutputState }

func (RouterPolicy6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPolicy6)(nil)).Elem()
}

func (o RouterPolicy6Output) ToRouterPolicy6Output() RouterPolicy6Output {
	return o
}

func (o RouterPolicy6Output) ToRouterPolicy6OutputWithContext(ctx context.Context) RouterPolicy6Output {
	return o
}

func (o RouterPolicy6Output) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o RouterPolicy6Output) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Dst }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) DstNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.DstNegate }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Dstaddrs() RouterPolicy6DstaddrArrayOutput {
	return o.ApplyT(func(v *RouterPolicy6) RouterPolicy6DstaddrArrayOutput { return v.Dstaddrs }).(RouterPolicy6DstaddrArrayOutput)
}

func (o RouterPolicy6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RouterPolicy6Output) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.EndPort }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) EndSourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.EndSourcePort }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o RouterPolicy6Output) InputDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.InputDevice }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) InputDeviceNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.InputDeviceNegate }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) InternetServiceCustoms() RouterPolicy6InternetServiceCustomArrayOutput {
	return o.ApplyT(func(v *RouterPolicy6) RouterPolicy6InternetServiceCustomArrayOutput { return v.InternetServiceCustoms }).(RouterPolicy6InternetServiceCustomArrayOutput)
}

func (o RouterPolicy6Output) InternetServiceIds() RouterPolicy6InternetServiceIdArrayOutput {
	return o.ApplyT(func(v *RouterPolicy6) RouterPolicy6InternetServiceIdArrayOutput { return v.InternetServiceIds }).(RouterPolicy6InternetServiceIdArrayOutput)
}

func (o RouterPolicy6Output) OutputDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.OutputDevice }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) SeqNum() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.SeqNum }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) Src() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Src }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) SrcNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.SrcNegate }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Srcaddrs() RouterPolicy6SrcaddrArrayOutput {
	return o.ApplyT(func(v *RouterPolicy6) RouterPolicy6SrcaddrArrayOutput { return v.Srcaddrs }).(RouterPolicy6SrcaddrArrayOutput)
}

func (o RouterPolicy6Output) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.StartPort }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) StartSourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.IntOutput { return v.StartSourcePort }).(pulumi.IntOutput)
}

func (o RouterPolicy6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Tos() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.Tos }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) TosMask() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringOutput { return v.TosMask }).(pulumi.StringOutput)
}

func (o RouterPolicy6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterPolicy6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterPolicy6ArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterPolicy6)(nil)).Elem()
}

func (o RouterPolicy6ArrayOutput) ToRouterPolicy6ArrayOutput() RouterPolicy6ArrayOutput {
	return o
}

func (o RouterPolicy6ArrayOutput) ToRouterPolicy6ArrayOutputWithContext(ctx context.Context) RouterPolicy6ArrayOutput {
	return o
}

func (o RouterPolicy6ArrayOutput) Index(i pulumi.IntInput) RouterPolicy6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterPolicy6 {
		return vs[0].([]*RouterPolicy6)[vs[1].(int)]
	}).(RouterPolicy6Output)
}

type RouterPolicy6MapOutput struct{ *pulumi.OutputState }

func (RouterPolicy6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterPolicy6)(nil)).Elem()
}

func (o RouterPolicy6MapOutput) ToRouterPolicy6MapOutput() RouterPolicy6MapOutput {
	return o
}

func (o RouterPolicy6MapOutput) ToRouterPolicy6MapOutputWithContext(ctx context.Context) RouterPolicy6MapOutput {
	return o
}

func (o RouterPolicy6MapOutput) MapIndex(k pulumi.StringInput) RouterPolicy6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterPolicy6 {
		return vs[0].(map[string]*RouterPolicy6)[vs[1].(string)]
	}).(RouterPolicy6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6Input)(nil)).Elem(), &RouterPolicy6{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6ArrayInput)(nil)).Elem(), RouterPolicy6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6MapInput)(nil)).Elem(), RouterPolicy6Map{})
	pulumi.RegisterOutputType(RouterPolicy6Output{})
	pulumi.RegisterOutputType(RouterPolicy6ArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6MapOutput{})
}
