// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure Fortinet Single Sign On (FSSO) server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemFssoPolling(ctx, "trname", &fortios.SystemFssoPollingArgs{
// 			Authentication: pulumi.String("disable"),
// 			ListeningPort:  pulumi.Int(8000),
// 			Status:         pulumi.String("enable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System FssoPolling can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemFssoPolling:SystemFssoPolling labelname SystemFssoPolling
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemFssoPolling:SystemFssoPolling labelname SystemFssoPolling
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemFssoPolling struct {
	pulumi.CustomResourceState

	// Password to connect to FSSO Agent.
	AuthPassword pulumi.StringPtrOutput `pulumi:"authPassword"`
	// Enable/disable FSSO Agent Authentication. Valid values: `enable`, `disable`.
	Authentication pulumi.StringOutput `pulumi:"authentication"`
	// Listening port to accept clients (1 - 65535).
	ListeningPort pulumi.IntOutput `pulumi:"listeningPort"`
	// Enable/disable FSSO Polling Mode. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemFssoPolling registers a new resource with the given unique name, arguments, and options.
func NewSystemFssoPolling(ctx *pulumi.Context,
	name string, args *SystemFssoPollingArgs, opts ...pulumi.ResourceOption) (*SystemFssoPolling, error) {
	if args == nil {
		args = &SystemFssoPollingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemFssoPolling
	err := ctx.RegisterResource("fortios:index/systemFssoPolling:SystemFssoPolling", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFssoPolling gets an existing SystemFssoPolling resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFssoPolling(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFssoPollingState, opts ...pulumi.ResourceOption) (*SystemFssoPolling, error) {
	var resource SystemFssoPolling
	err := ctx.ReadResource("fortios:index/systemFssoPolling:SystemFssoPolling", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFssoPolling resources.
type systemFssoPollingState struct {
	// Password to connect to FSSO Agent.
	AuthPassword *string `pulumi:"authPassword"`
	// Enable/disable FSSO Agent Authentication. Valid values: `enable`, `disable`.
	Authentication *string `pulumi:"authentication"`
	// Listening port to accept clients (1 - 65535).
	ListeningPort *int `pulumi:"listeningPort"`
	// Enable/disable FSSO Polling Mode. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemFssoPollingState struct {
	// Password to connect to FSSO Agent.
	AuthPassword pulumi.StringPtrInput
	// Enable/disable FSSO Agent Authentication. Valid values: `enable`, `disable`.
	Authentication pulumi.StringPtrInput
	// Listening port to accept clients (1 - 65535).
	ListeningPort pulumi.IntPtrInput
	// Enable/disable FSSO Polling Mode. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFssoPollingState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFssoPollingState)(nil)).Elem()
}

type systemFssoPollingArgs struct {
	// Password to connect to FSSO Agent.
	AuthPassword *string `pulumi:"authPassword"`
	// Enable/disable FSSO Agent Authentication. Valid values: `enable`, `disable`.
	Authentication *string `pulumi:"authentication"`
	// Listening port to accept clients (1 - 65535).
	ListeningPort *int `pulumi:"listeningPort"`
	// Enable/disable FSSO Polling Mode. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemFssoPolling resource.
type SystemFssoPollingArgs struct {
	// Password to connect to FSSO Agent.
	AuthPassword pulumi.StringPtrInput
	// Enable/disable FSSO Agent Authentication. Valid values: `enable`, `disable`.
	Authentication pulumi.StringPtrInput
	// Listening port to accept clients (1 - 65535).
	ListeningPort pulumi.IntPtrInput
	// Enable/disable FSSO Polling Mode. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFssoPollingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFssoPollingArgs)(nil)).Elem()
}

type SystemFssoPollingInput interface {
	pulumi.Input

	ToSystemFssoPollingOutput() SystemFssoPollingOutput
	ToSystemFssoPollingOutputWithContext(ctx context.Context) SystemFssoPollingOutput
}

func (*SystemFssoPolling) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFssoPolling)(nil)).Elem()
}

func (i *SystemFssoPolling) ToSystemFssoPollingOutput() SystemFssoPollingOutput {
	return i.ToSystemFssoPollingOutputWithContext(context.Background())
}

func (i *SystemFssoPolling) ToSystemFssoPollingOutputWithContext(ctx context.Context) SystemFssoPollingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFssoPollingOutput)
}

// SystemFssoPollingArrayInput is an input type that accepts SystemFssoPollingArray and SystemFssoPollingArrayOutput values.
// You can construct a concrete instance of `SystemFssoPollingArrayInput` via:
//
//          SystemFssoPollingArray{ SystemFssoPollingArgs{...} }
type SystemFssoPollingArrayInput interface {
	pulumi.Input

	ToSystemFssoPollingArrayOutput() SystemFssoPollingArrayOutput
	ToSystemFssoPollingArrayOutputWithContext(context.Context) SystemFssoPollingArrayOutput
}

type SystemFssoPollingArray []SystemFssoPollingInput

func (SystemFssoPollingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFssoPolling)(nil)).Elem()
}

func (i SystemFssoPollingArray) ToSystemFssoPollingArrayOutput() SystemFssoPollingArrayOutput {
	return i.ToSystemFssoPollingArrayOutputWithContext(context.Background())
}

func (i SystemFssoPollingArray) ToSystemFssoPollingArrayOutputWithContext(ctx context.Context) SystemFssoPollingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFssoPollingArrayOutput)
}

// SystemFssoPollingMapInput is an input type that accepts SystemFssoPollingMap and SystemFssoPollingMapOutput values.
// You can construct a concrete instance of `SystemFssoPollingMapInput` via:
//
//          SystemFssoPollingMap{ "key": SystemFssoPollingArgs{...} }
type SystemFssoPollingMapInput interface {
	pulumi.Input

	ToSystemFssoPollingMapOutput() SystemFssoPollingMapOutput
	ToSystemFssoPollingMapOutputWithContext(context.Context) SystemFssoPollingMapOutput
}

type SystemFssoPollingMap map[string]SystemFssoPollingInput

func (SystemFssoPollingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFssoPolling)(nil)).Elem()
}

func (i SystemFssoPollingMap) ToSystemFssoPollingMapOutput() SystemFssoPollingMapOutput {
	return i.ToSystemFssoPollingMapOutputWithContext(context.Background())
}

func (i SystemFssoPollingMap) ToSystemFssoPollingMapOutputWithContext(ctx context.Context) SystemFssoPollingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFssoPollingMapOutput)
}

type SystemFssoPollingOutput struct{ *pulumi.OutputState }

func (SystemFssoPollingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFssoPolling)(nil)).Elem()
}

func (o SystemFssoPollingOutput) ToSystemFssoPollingOutput() SystemFssoPollingOutput {
	return o
}

func (o SystemFssoPollingOutput) ToSystemFssoPollingOutputWithContext(ctx context.Context) SystemFssoPollingOutput {
	return o
}

type SystemFssoPollingArrayOutput struct{ *pulumi.OutputState }

func (SystemFssoPollingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFssoPolling)(nil)).Elem()
}

func (o SystemFssoPollingArrayOutput) ToSystemFssoPollingArrayOutput() SystemFssoPollingArrayOutput {
	return o
}

func (o SystemFssoPollingArrayOutput) ToSystemFssoPollingArrayOutputWithContext(ctx context.Context) SystemFssoPollingArrayOutput {
	return o
}

func (o SystemFssoPollingArrayOutput) Index(i pulumi.IntInput) SystemFssoPollingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemFssoPolling {
		return vs[0].([]*SystemFssoPolling)[vs[1].(int)]
	}).(SystemFssoPollingOutput)
}

type SystemFssoPollingMapOutput struct{ *pulumi.OutputState }

func (SystemFssoPollingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFssoPolling)(nil)).Elem()
}

func (o SystemFssoPollingMapOutput) ToSystemFssoPollingMapOutput() SystemFssoPollingMapOutput {
	return o
}

func (o SystemFssoPollingMapOutput) ToSystemFssoPollingMapOutputWithContext(ctx context.Context) SystemFssoPollingMapOutput {
	return o
}

func (o SystemFssoPollingMapOutput) MapIndex(k pulumi.StringInput) SystemFssoPollingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemFssoPolling {
		return vs[0].(map[string]*SystemFssoPolling)[vs[1].(string)]
	}).(SystemFssoPollingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFssoPollingInput)(nil)).Elem(), &SystemFssoPolling{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFssoPollingArrayInput)(nil)).Elem(), SystemFssoPollingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFssoPollingMapInput)(nil)).Elem(), SystemFssoPollingMap{})
	pulumi.RegisterOutputType(SystemFssoPollingOutput{})
	pulumi.RegisterOutputType(SystemFssoPollingArrayOutput{})
	pulumi.RegisterOutputType(SystemFssoPollingMapOutput{})
}
