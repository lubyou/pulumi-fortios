// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WirelessControllerApStatus struct {
	pulumi.CustomResourceState

	Bssid     pulumi.StringOutput    `pulumi:"bssid"`
	Fosid     pulumi.IntOutput       `pulumi:"fosid"`
	Ssid      pulumi.StringOutput    `pulumi:"ssid"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerApStatus registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerApStatus(ctx *pulumi.Context,
	name string, args *WirelessControllerApStatusArgs, opts ...pulumi.ResourceOption) (*WirelessControllerApStatus, error) {
	if args == nil {
		args = &WirelessControllerApStatusArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessControllerApStatus
	err := ctx.RegisterResource("fortios:index/wirelessControllerApStatus:WirelessControllerApStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerApStatus gets an existing WirelessControllerApStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerApStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerApStatusState, opts ...pulumi.ResourceOption) (*WirelessControllerApStatus, error) {
	var resource WirelessControllerApStatus
	err := ctx.ReadResource("fortios:index/wirelessControllerApStatus:WirelessControllerApStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerApStatus resources.
type wirelessControllerApStatusState struct {
	Bssid     *string `pulumi:"bssid"`
	Fosid     *int    `pulumi:"fosid"`
	Ssid      *string `pulumi:"ssid"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerApStatusState struct {
	Bssid     pulumi.StringPtrInput
	Fosid     pulumi.IntPtrInput
	Ssid      pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerApStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerApStatusState)(nil)).Elem()
}

type wirelessControllerApStatusArgs struct {
	Bssid     *string `pulumi:"bssid"`
	Fosid     *int    `pulumi:"fosid"`
	Ssid      *string `pulumi:"ssid"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerApStatus resource.
type WirelessControllerApStatusArgs struct {
	Bssid     pulumi.StringPtrInput
	Fosid     pulumi.IntPtrInput
	Ssid      pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerApStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerApStatusArgs)(nil)).Elem()
}

type WirelessControllerApStatusInput interface {
	pulumi.Input

	ToWirelessControllerApStatusOutput() WirelessControllerApStatusOutput
	ToWirelessControllerApStatusOutputWithContext(ctx context.Context) WirelessControllerApStatusOutput
}

func (*WirelessControllerApStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerApStatus)(nil)).Elem()
}

func (i *WirelessControllerApStatus) ToWirelessControllerApStatusOutput() WirelessControllerApStatusOutput {
	return i.ToWirelessControllerApStatusOutputWithContext(context.Background())
}

func (i *WirelessControllerApStatus) ToWirelessControllerApStatusOutputWithContext(ctx context.Context) WirelessControllerApStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerApStatusOutput)
}

func (i *WirelessControllerApStatus) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerApStatus] {
	return pulumix.Output[*WirelessControllerApStatus]{
		OutputState: i.ToWirelessControllerApStatusOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerApStatusArrayInput is an input type that accepts WirelessControllerApStatusArray and WirelessControllerApStatusArrayOutput values.
// You can construct a concrete instance of `WirelessControllerApStatusArrayInput` via:
//
//	WirelessControllerApStatusArray{ WirelessControllerApStatusArgs{...} }
type WirelessControllerApStatusArrayInput interface {
	pulumi.Input

	ToWirelessControllerApStatusArrayOutput() WirelessControllerApStatusArrayOutput
	ToWirelessControllerApStatusArrayOutputWithContext(context.Context) WirelessControllerApStatusArrayOutput
}

type WirelessControllerApStatusArray []WirelessControllerApStatusInput

func (WirelessControllerApStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerApStatus)(nil)).Elem()
}

func (i WirelessControllerApStatusArray) ToWirelessControllerApStatusArrayOutput() WirelessControllerApStatusArrayOutput {
	return i.ToWirelessControllerApStatusArrayOutputWithContext(context.Background())
}

func (i WirelessControllerApStatusArray) ToWirelessControllerApStatusArrayOutputWithContext(ctx context.Context) WirelessControllerApStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerApStatusArrayOutput)
}

func (i WirelessControllerApStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerApStatus] {
	return pulumix.Output[[]*WirelessControllerApStatus]{
		OutputState: i.ToWirelessControllerApStatusArrayOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerApStatusMapInput is an input type that accepts WirelessControllerApStatusMap and WirelessControllerApStatusMapOutput values.
// You can construct a concrete instance of `WirelessControllerApStatusMapInput` via:
//
//	WirelessControllerApStatusMap{ "key": WirelessControllerApStatusArgs{...} }
type WirelessControllerApStatusMapInput interface {
	pulumi.Input

	ToWirelessControllerApStatusMapOutput() WirelessControllerApStatusMapOutput
	ToWirelessControllerApStatusMapOutputWithContext(context.Context) WirelessControllerApStatusMapOutput
}

type WirelessControllerApStatusMap map[string]WirelessControllerApStatusInput

func (WirelessControllerApStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerApStatus)(nil)).Elem()
}

func (i WirelessControllerApStatusMap) ToWirelessControllerApStatusMapOutput() WirelessControllerApStatusMapOutput {
	return i.ToWirelessControllerApStatusMapOutputWithContext(context.Background())
}

func (i WirelessControllerApStatusMap) ToWirelessControllerApStatusMapOutputWithContext(ctx context.Context) WirelessControllerApStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerApStatusMapOutput)
}

func (i WirelessControllerApStatusMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerApStatus] {
	return pulumix.Output[map[string]*WirelessControllerApStatus]{
		OutputState: i.ToWirelessControllerApStatusMapOutputWithContext(ctx).OutputState,
	}
}

type WirelessControllerApStatusOutput struct{ *pulumi.OutputState }

func (WirelessControllerApStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerApStatus)(nil)).Elem()
}

func (o WirelessControllerApStatusOutput) ToWirelessControllerApStatusOutput() WirelessControllerApStatusOutput {
	return o
}

func (o WirelessControllerApStatusOutput) ToWirelessControllerApStatusOutputWithContext(ctx context.Context) WirelessControllerApStatusOutput {
	return o
}

func (o WirelessControllerApStatusOutput) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerApStatus] {
	return pulumix.Output[*WirelessControllerApStatus]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerApStatusOutput) Bssid() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerApStatus) pulumi.StringOutput { return v.Bssid }).(pulumi.StringOutput)
}

func (o WirelessControllerApStatusOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerApStatus) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o WirelessControllerApStatusOutput) Ssid() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerApStatus) pulumi.StringOutput { return v.Ssid }).(pulumi.StringOutput)
}

func (o WirelessControllerApStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerApStatus) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o WirelessControllerApStatusOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerApStatus) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WirelessControllerApStatusArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerApStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerApStatus)(nil)).Elem()
}

func (o WirelessControllerApStatusArrayOutput) ToWirelessControllerApStatusArrayOutput() WirelessControllerApStatusArrayOutput {
	return o
}

func (o WirelessControllerApStatusArrayOutput) ToWirelessControllerApStatusArrayOutputWithContext(ctx context.Context) WirelessControllerApStatusArrayOutput {
	return o
}

func (o WirelessControllerApStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerApStatus] {
	return pulumix.Output[[]*WirelessControllerApStatus]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerApStatusArrayOutput) Index(i pulumi.IntInput) WirelessControllerApStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerApStatus {
		return vs[0].([]*WirelessControllerApStatus)[vs[1].(int)]
	}).(WirelessControllerApStatusOutput)
}

type WirelessControllerApStatusMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerApStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerApStatus)(nil)).Elem()
}

func (o WirelessControllerApStatusMapOutput) ToWirelessControllerApStatusMapOutput() WirelessControllerApStatusMapOutput {
	return o
}

func (o WirelessControllerApStatusMapOutput) ToWirelessControllerApStatusMapOutputWithContext(ctx context.Context) WirelessControllerApStatusMapOutput {
	return o
}

func (o WirelessControllerApStatusMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerApStatus] {
	return pulumix.Output[map[string]*WirelessControllerApStatus]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerApStatusMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerApStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerApStatus {
		return vs[0].(map[string]*WirelessControllerApStatus)[vs[1].(string)]
	}).(WirelessControllerApStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerApStatusInput)(nil)).Elem(), &WirelessControllerApStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerApStatusArrayInput)(nil)).Elem(), WirelessControllerApStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerApStatusMapInput)(nil)).Elem(), WirelessControllerApStatusMap{})
	pulumi.RegisterOutputType(WirelessControllerApStatusOutput{})
	pulumi.RegisterOutputType(WirelessControllerApStatusArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerApStatusMapOutput{})
}
