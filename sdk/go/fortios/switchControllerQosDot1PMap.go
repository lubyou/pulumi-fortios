// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerQosDot1PMap struct {
	pulumi.CustomResourceState

	Description      pulumi.StringOutput    `pulumi:"description"`
	EgressPriTagging pulumi.StringOutput    `pulumi:"egressPriTagging"`
	Name             pulumi.StringOutput    `pulumi:"name"`
	Priority0        pulumi.StringOutput    `pulumi:"priority0"`
	Priority1        pulumi.StringOutput    `pulumi:"priority1"`
	Priority2        pulumi.StringOutput    `pulumi:"priority2"`
	Priority3        pulumi.StringOutput    `pulumi:"priority3"`
	Priority4        pulumi.StringOutput    `pulumi:"priority4"`
	Priority5        pulumi.StringOutput    `pulumi:"priority5"`
	Priority6        pulumi.StringOutput    `pulumi:"priority6"`
	Priority7        pulumi.StringOutput    `pulumi:"priority7"`
	Vdomparam        pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerQosDot1PMap registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerQosDot1PMap(ctx *pulumi.Context,
	name string, args *SwitchControllerQosDot1PMapArgs, opts ...pulumi.ResourceOption) (*SwitchControllerQosDot1PMap, error) {
	if args == nil {
		args = &SwitchControllerQosDot1PMapArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerQosDot1PMap
	err := ctx.RegisterResource("fortios:index/switchControllerQosDot1PMap:SwitchControllerQosDot1PMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerQosDot1PMap gets an existing SwitchControllerQosDot1PMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerQosDot1PMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerQosDot1PMapState, opts ...pulumi.ResourceOption) (*SwitchControllerQosDot1PMap, error) {
	var resource SwitchControllerQosDot1PMap
	err := ctx.ReadResource("fortios:index/switchControllerQosDot1PMap:SwitchControllerQosDot1PMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerQosDot1PMap resources.
type switchControllerQosDot1PMapState struct {
	Description      *string `pulumi:"description"`
	EgressPriTagging *string `pulumi:"egressPriTagging"`
	Name             *string `pulumi:"name"`
	Priority0        *string `pulumi:"priority0"`
	Priority1        *string `pulumi:"priority1"`
	Priority2        *string `pulumi:"priority2"`
	Priority3        *string `pulumi:"priority3"`
	Priority4        *string `pulumi:"priority4"`
	Priority5        *string `pulumi:"priority5"`
	Priority6        *string `pulumi:"priority6"`
	Priority7        *string `pulumi:"priority7"`
	Vdomparam        *string `pulumi:"vdomparam"`
}

type SwitchControllerQosDot1PMapState struct {
	Description      pulumi.StringPtrInput
	EgressPriTagging pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	Priority0        pulumi.StringPtrInput
	Priority1        pulumi.StringPtrInput
	Priority2        pulumi.StringPtrInput
	Priority3        pulumi.StringPtrInput
	Priority4        pulumi.StringPtrInput
	Priority5        pulumi.StringPtrInput
	Priority6        pulumi.StringPtrInput
	Priority7        pulumi.StringPtrInput
	Vdomparam        pulumi.StringPtrInput
}

func (SwitchControllerQosDot1PMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerQosDot1PMapState)(nil)).Elem()
}

type switchControllerQosDot1PMapArgs struct {
	Description      *string `pulumi:"description"`
	EgressPriTagging *string `pulumi:"egressPriTagging"`
	Name             *string `pulumi:"name"`
	Priority0        *string `pulumi:"priority0"`
	Priority1        *string `pulumi:"priority1"`
	Priority2        *string `pulumi:"priority2"`
	Priority3        *string `pulumi:"priority3"`
	Priority4        *string `pulumi:"priority4"`
	Priority5        *string `pulumi:"priority5"`
	Priority6        *string `pulumi:"priority6"`
	Priority7        *string `pulumi:"priority7"`
	Vdomparam        *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerQosDot1PMap resource.
type SwitchControllerQosDot1PMapArgs struct {
	Description      pulumi.StringPtrInput
	EgressPriTagging pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	Priority0        pulumi.StringPtrInput
	Priority1        pulumi.StringPtrInput
	Priority2        pulumi.StringPtrInput
	Priority3        pulumi.StringPtrInput
	Priority4        pulumi.StringPtrInput
	Priority5        pulumi.StringPtrInput
	Priority6        pulumi.StringPtrInput
	Priority7        pulumi.StringPtrInput
	Vdomparam        pulumi.StringPtrInput
}

func (SwitchControllerQosDot1PMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerQosDot1PMapArgs)(nil)).Elem()
}

type SwitchControllerQosDot1PMapInput interface {
	pulumi.Input

	ToSwitchControllerQosDot1PMapOutput() SwitchControllerQosDot1PMapOutput
	ToSwitchControllerQosDot1PMapOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapOutput
}

func (*SwitchControllerQosDot1PMap) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (i *SwitchControllerQosDot1PMap) ToSwitchControllerQosDot1PMapOutput() SwitchControllerQosDot1PMapOutput {
	return i.ToSwitchControllerQosDot1PMapOutputWithContext(context.Background())
}

func (i *SwitchControllerQosDot1PMap) ToSwitchControllerQosDot1PMapOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosDot1PMapOutput)
}

// SwitchControllerQosDot1PMapArrayInput is an input type that accepts SwitchControllerQosDot1PMapArray and SwitchControllerQosDot1PMapArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQosDot1PMapArrayInput` via:
//
//	SwitchControllerQosDot1PMapArray{ SwitchControllerQosDot1PMapArgs{...} }
type SwitchControllerQosDot1PMapArrayInput interface {
	pulumi.Input

	ToSwitchControllerQosDot1PMapArrayOutput() SwitchControllerQosDot1PMapArrayOutput
	ToSwitchControllerQosDot1PMapArrayOutputWithContext(context.Context) SwitchControllerQosDot1PMapArrayOutput
}

type SwitchControllerQosDot1PMapArray []SwitchControllerQosDot1PMapInput

func (SwitchControllerQosDot1PMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (i SwitchControllerQosDot1PMapArray) ToSwitchControllerQosDot1PMapArrayOutput() SwitchControllerQosDot1PMapArrayOutput {
	return i.ToSwitchControllerQosDot1PMapArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQosDot1PMapArray) ToSwitchControllerQosDot1PMapArrayOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosDot1PMapArrayOutput)
}

// SwitchControllerQosDot1PMapMapInput is an input type that accepts SwitchControllerQosDot1PMapMap and SwitchControllerQosDot1PMapMapOutput values.
// You can construct a concrete instance of `SwitchControllerQosDot1PMapMapInput` via:
//
//	SwitchControllerQosDot1PMapMap{ "key": SwitchControllerQosDot1PMapArgs{...} }
type SwitchControllerQosDot1PMapMapInput interface {
	pulumi.Input

	ToSwitchControllerQosDot1PMapMapOutput() SwitchControllerQosDot1PMapMapOutput
	ToSwitchControllerQosDot1PMapMapOutputWithContext(context.Context) SwitchControllerQosDot1PMapMapOutput
}

type SwitchControllerQosDot1PMapMap map[string]SwitchControllerQosDot1PMapInput

func (SwitchControllerQosDot1PMapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (i SwitchControllerQosDot1PMapMap) ToSwitchControllerQosDot1PMapMapOutput() SwitchControllerQosDot1PMapMapOutput {
	return i.ToSwitchControllerQosDot1PMapMapOutputWithContext(context.Background())
}

func (i SwitchControllerQosDot1PMapMap) ToSwitchControllerQosDot1PMapMapOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosDot1PMapMapOutput)
}

type SwitchControllerQosDot1PMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosDot1PMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (o SwitchControllerQosDot1PMapOutput) ToSwitchControllerQosDot1PMapOutput() SwitchControllerQosDot1PMapOutput {
	return o
}

func (o SwitchControllerQosDot1PMapOutput) ToSwitchControllerQosDot1PMapOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapOutput {
	return o
}

func (o SwitchControllerQosDot1PMapOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) EgressPriTagging() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.EgressPriTagging }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority0() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority0 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority1() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority1 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority2() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority2 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority3() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority3 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority4() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority4 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority5() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority5 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority6() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority6 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Priority7() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringOutput { return v.Priority7 }).(pulumi.StringOutput)
}

func (o SwitchControllerQosDot1PMapOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerQosDot1PMap) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerQosDot1PMapArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosDot1PMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (o SwitchControllerQosDot1PMapArrayOutput) ToSwitchControllerQosDot1PMapArrayOutput() SwitchControllerQosDot1PMapArrayOutput {
	return o
}

func (o SwitchControllerQosDot1PMapArrayOutput) ToSwitchControllerQosDot1PMapArrayOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapArrayOutput {
	return o
}

func (o SwitchControllerQosDot1PMapArrayOutput) Index(i pulumi.IntInput) SwitchControllerQosDot1PMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerQosDot1PMap {
		return vs[0].([]*SwitchControllerQosDot1PMap)[vs[1].(int)]
	}).(SwitchControllerQosDot1PMapOutput)
}

type SwitchControllerQosDot1PMapMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosDot1PMapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerQosDot1PMap)(nil)).Elem()
}

func (o SwitchControllerQosDot1PMapMapOutput) ToSwitchControllerQosDot1PMapMapOutput() SwitchControllerQosDot1PMapMapOutput {
	return o
}

func (o SwitchControllerQosDot1PMapMapOutput) ToSwitchControllerQosDot1PMapMapOutputWithContext(ctx context.Context) SwitchControllerQosDot1PMapMapOutput {
	return o
}

func (o SwitchControllerQosDot1PMapMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerQosDot1PMapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerQosDot1PMap {
		return vs[0].(map[string]*SwitchControllerQosDot1PMap)[vs[1].(string)]
	}).(SwitchControllerQosDot1PMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosDot1PMapInput)(nil)).Elem(), &SwitchControllerQosDot1PMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosDot1PMapArrayInput)(nil)).Elem(), SwitchControllerQosDot1PMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosDot1PMapMapInput)(nil)).Elem(), SwitchControllerQosDot1PMapMap{})
	pulumi.RegisterOutputType(SwitchControllerQosDot1PMapOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosDot1PMapArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosDot1PMapMapOutput{})
}
