// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure NPU attributes. Applies to FortiOS Version `>= 7.0.4`.
//
// ## Import
//
// System Npu can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemNpu:SystemNpu labelname SystemNpu
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemNpu:SystemNpu labelname SystemNpu
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemNpu struct {
	pulumi.CustomResourceState

	// Enable/disable offloading managed FortiAP and FortiLink CAPWAP sessions. Valid values: `enable`, `disable`.
	CapwapOffload pulumi.StringOutput `pulumi:"capwapOffload"`
	// Affinity setting for management deamons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	DedicatedManagementAffinity pulumi.StringOutput `pulumi:"dedicatedManagementAffinity"`
	// Enable to dedicate one CPU for GUI and CLI connections when NPs are busy. Valid values: `enable`, `disable`.
	DedicatedManagementCpu pulumi.StringOutput `pulumi:"dedicatedManagementCpu"`
	// Enable/disable NP6 offloading (also called fast path). Valid values: `disable`, `enable`.
	Fastpath pulumi.StringOutput `pulumi:"fastpath"`
	// IPsec decryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecDecSubengineMask pulumi.StringOutput `pulumi:"ipsecDecSubengineMask"`
	// IPsec encryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecEncSubengineMask pulumi.StringOutput `pulumi:"ipsecEncSubengineMask"`
	// Enable/disable IPsec inbound cache for anti-replay. Valid values: `enable`, `disable`.
	IpsecInboundCache pulumi.StringOutput `pulumi:"ipsecInboundCache"`
	// Enable/disable NP6 IPsec MTU override. Valid values: `disable`, `enable`.
	IpsecMtuOverride pulumi.StringOutput `pulumi:"ipsecMtuOverride"`
	// Enable/disable IPSEC over vlink. Valid values: `enable`, `disable`.
	IpsecOverVlink pulumi.StringOutput `pulumi:"ipsecOverVlink"`
	// Enable/disable traffic accounting for each multicast session through TAE counter. Valid values: `tpe-based`, `session-based`, `disable`.
	McastSessionAccounting pulumi.StringOutput `pulumi:"mcastSessionAccounting"`
	// Enable/disable NP6 connection per second (CPS) optimization mode. Valid values: `enable`, `disable`.
	Np6CpsOptimizationMode pulumi.StringOutput `pulumi:"np6CpsOptimizationMode"`
	// Configure NPU priority protocol. The structure of `priorityProtocol` block is documented below.
	PriorityProtocol SystemNpuPriorityProtocolPtrOutput `pulumi:"priorityProtocol"`
	// Enable/disable rdp offload. Valid values: `enable`, `disable`.
	RdpOffload pulumi.StringOutput `pulumi:"rdpOffload"`
	// Enable/disable offloading of denied sessions. Requires ses-denied-traffic to be set. Valid values: `disable`, `enable`.
	SessionDeniedOffload pulumi.StringOutput `pulumi:"sessionDeniedOffload"`
	// Enable/disable sse backpressure. Valid values: `enable`, `disable`.
	SseBackpressure pulumi.StringOutput `pulumi:"sseBackpressure"`
	// Enable/disable stripping clear text padding. Valid values: `enable`, `disable`.
	StripClearTextPadding pulumi.StringOutput `pulumi:"stripClearTextPadding"`
	// Enable/disable stripping ESP padding. Valid values: `enable`, `disable`.
	StripEspPadding pulumi.StringOutput `pulumi:"stripEspPadding"`
	// Bandwidth from switch to NP. Valid values: `0G`, `2G`, `4G`, `5G`, `6G`.
	SwNpBandwidth pulumi.StringOutput `pulumi:"swNpBandwidth"`
	// Enable/disable UDP-encapsulated ESP offload (default = disable). Valid values: `enable`, `disable`.
	UespOffload pulumi.StringOutput `pulumi:"uespOffload"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemNpu registers a new resource with the given unique name, arguments, and options.
func NewSystemNpu(ctx *pulumi.Context,
	name string, args *SystemNpuArgs, opts ...pulumi.ResourceOption) (*SystemNpu, error) {
	if args == nil {
		args = &SystemNpuArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemNpu
	err := ctx.RegisterResource("fortios:index/systemNpu:SystemNpu", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemNpu gets an existing SystemNpu resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemNpu(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemNpuState, opts ...pulumi.ResourceOption) (*SystemNpu, error) {
	var resource SystemNpu
	err := ctx.ReadResource("fortios:index/systemNpu:SystemNpu", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemNpu resources.
type systemNpuState struct {
	// Enable/disable offloading managed FortiAP and FortiLink CAPWAP sessions. Valid values: `enable`, `disable`.
	CapwapOffload *string `pulumi:"capwapOffload"`
	// Affinity setting for management deamons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	DedicatedManagementAffinity *string `pulumi:"dedicatedManagementAffinity"`
	// Enable to dedicate one CPU for GUI and CLI connections when NPs are busy. Valid values: `enable`, `disable`.
	DedicatedManagementCpu *string `pulumi:"dedicatedManagementCpu"`
	// Enable/disable NP6 offloading (also called fast path). Valid values: `disable`, `enable`.
	Fastpath *string `pulumi:"fastpath"`
	// IPsec decryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecDecSubengineMask *string `pulumi:"ipsecDecSubengineMask"`
	// IPsec encryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecEncSubengineMask *string `pulumi:"ipsecEncSubengineMask"`
	// Enable/disable IPsec inbound cache for anti-replay. Valid values: `enable`, `disable`.
	IpsecInboundCache *string `pulumi:"ipsecInboundCache"`
	// Enable/disable NP6 IPsec MTU override. Valid values: `disable`, `enable`.
	IpsecMtuOverride *string `pulumi:"ipsecMtuOverride"`
	// Enable/disable IPSEC over vlink. Valid values: `enable`, `disable`.
	IpsecOverVlink *string `pulumi:"ipsecOverVlink"`
	// Enable/disable traffic accounting for each multicast session through TAE counter. Valid values: `tpe-based`, `session-based`, `disable`.
	McastSessionAccounting *string `pulumi:"mcastSessionAccounting"`
	// Enable/disable NP6 connection per second (CPS) optimization mode. Valid values: `enable`, `disable`.
	Np6CpsOptimizationMode *string `pulumi:"np6CpsOptimizationMode"`
	// Configure NPU priority protocol. The structure of `priorityProtocol` block is documented below.
	PriorityProtocol *SystemNpuPriorityProtocol `pulumi:"priorityProtocol"`
	// Enable/disable rdp offload. Valid values: `enable`, `disable`.
	RdpOffload *string `pulumi:"rdpOffload"`
	// Enable/disable offloading of denied sessions. Requires ses-denied-traffic to be set. Valid values: `disable`, `enable`.
	SessionDeniedOffload *string `pulumi:"sessionDeniedOffload"`
	// Enable/disable sse backpressure. Valid values: `enable`, `disable`.
	SseBackpressure *string `pulumi:"sseBackpressure"`
	// Enable/disable stripping clear text padding. Valid values: `enable`, `disable`.
	StripClearTextPadding *string `pulumi:"stripClearTextPadding"`
	// Enable/disable stripping ESP padding. Valid values: `enable`, `disable`.
	StripEspPadding *string `pulumi:"stripEspPadding"`
	// Bandwidth from switch to NP. Valid values: `0G`, `2G`, `4G`, `5G`, `6G`.
	SwNpBandwidth *string `pulumi:"swNpBandwidth"`
	// Enable/disable UDP-encapsulated ESP offload (default = disable). Valid values: `enable`, `disable`.
	UespOffload *string `pulumi:"uespOffload"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemNpuState struct {
	// Enable/disable offloading managed FortiAP and FortiLink CAPWAP sessions. Valid values: `enable`, `disable`.
	CapwapOffload pulumi.StringPtrInput
	// Affinity setting for management deamons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	DedicatedManagementAffinity pulumi.StringPtrInput
	// Enable to dedicate one CPU for GUI and CLI connections when NPs are busy. Valid values: `enable`, `disable`.
	DedicatedManagementCpu pulumi.StringPtrInput
	// Enable/disable NP6 offloading (also called fast path). Valid values: `disable`, `enable`.
	Fastpath pulumi.StringPtrInput
	// IPsec decryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecDecSubengineMask pulumi.StringPtrInput
	// IPsec encryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecEncSubengineMask pulumi.StringPtrInput
	// Enable/disable IPsec inbound cache for anti-replay. Valid values: `enable`, `disable`.
	IpsecInboundCache pulumi.StringPtrInput
	// Enable/disable NP6 IPsec MTU override. Valid values: `disable`, `enable`.
	IpsecMtuOverride pulumi.StringPtrInput
	// Enable/disable IPSEC over vlink. Valid values: `enable`, `disable`.
	IpsecOverVlink pulumi.StringPtrInput
	// Enable/disable traffic accounting for each multicast session through TAE counter. Valid values: `tpe-based`, `session-based`, `disable`.
	McastSessionAccounting pulumi.StringPtrInput
	// Enable/disable NP6 connection per second (CPS) optimization mode. Valid values: `enable`, `disable`.
	Np6CpsOptimizationMode pulumi.StringPtrInput
	// Configure NPU priority protocol. The structure of `priorityProtocol` block is documented below.
	PriorityProtocol SystemNpuPriorityProtocolPtrInput
	// Enable/disable rdp offload. Valid values: `enable`, `disable`.
	RdpOffload pulumi.StringPtrInput
	// Enable/disable offloading of denied sessions. Requires ses-denied-traffic to be set. Valid values: `disable`, `enable`.
	SessionDeniedOffload pulumi.StringPtrInput
	// Enable/disable sse backpressure. Valid values: `enable`, `disable`.
	SseBackpressure pulumi.StringPtrInput
	// Enable/disable stripping clear text padding. Valid values: `enable`, `disable`.
	StripClearTextPadding pulumi.StringPtrInput
	// Enable/disable stripping ESP padding. Valid values: `enable`, `disable`.
	StripEspPadding pulumi.StringPtrInput
	// Bandwidth from switch to NP. Valid values: `0G`, `2G`, `4G`, `5G`, `6G`.
	SwNpBandwidth pulumi.StringPtrInput
	// Enable/disable UDP-encapsulated ESP offload (default = disable). Valid values: `enable`, `disable`.
	UespOffload pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNpuState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNpuState)(nil)).Elem()
}

type systemNpuArgs struct {
	// Enable/disable offloading managed FortiAP and FortiLink CAPWAP sessions. Valid values: `enable`, `disable`.
	CapwapOffload *string `pulumi:"capwapOffload"`
	// Affinity setting for management deamons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	DedicatedManagementAffinity *string `pulumi:"dedicatedManagementAffinity"`
	// Enable to dedicate one CPU for GUI and CLI connections when NPs are busy. Valid values: `enable`, `disable`.
	DedicatedManagementCpu *string `pulumi:"dedicatedManagementCpu"`
	// Enable/disable NP6 offloading (also called fast path). Valid values: `disable`, `enable`.
	Fastpath *string `pulumi:"fastpath"`
	// IPsec decryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecDecSubengineMask *string `pulumi:"ipsecDecSubengineMask"`
	// IPsec encryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecEncSubengineMask *string `pulumi:"ipsecEncSubengineMask"`
	// Enable/disable IPsec inbound cache for anti-replay. Valid values: `enable`, `disable`.
	IpsecInboundCache *string `pulumi:"ipsecInboundCache"`
	// Enable/disable NP6 IPsec MTU override. Valid values: `disable`, `enable`.
	IpsecMtuOverride *string `pulumi:"ipsecMtuOverride"`
	// Enable/disable IPSEC over vlink. Valid values: `enable`, `disable`.
	IpsecOverVlink *string `pulumi:"ipsecOverVlink"`
	// Enable/disable traffic accounting for each multicast session through TAE counter. Valid values: `tpe-based`, `session-based`, `disable`.
	McastSessionAccounting *string `pulumi:"mcastSessionAccounting"`
	// Enable/disable NP6 connection per second (CPS) optimization mode. Valid values: `enable`, `disable`.
	Np6CpsOptimizationMode *string `pulumi:"np6CpsOptimizationMode"`
	// Configure NPU priority protocol. The structure of `priorityProtocol` block is documented below.
	PriorityProtocol *SystemNpuPriorityProtocol `pulumi:"priorityProtocol"`
	// Enable/disable rdp offload. Valid values: `enable`, `disable`.
	RdpOffload *string `pulumi:"rdpOffload"`
	// Enable/disable offloading of denied sessions. Requires ses-denied-traffic to be set. Valid values: `disable`, `enable`.
	SessionDeniedOffload *string `pulumi:"sessionDeniedOffload"`
	// Enable/disable sse backpressure. Valid values: `enable`, `disable`.
	SseBackpressure *string `pulumi:"sseBackpressure"`
	// Enable/disable stripping clear text padding. Valid values: `enable`, `disable`.
	StripClearTextPadding *string `pulumi:"stripClearTextPadding"`
	// Enable/disable stripping ESP padding. Valid values: `enable`, `disable`.
	StripEspPadding *string `pulumi:"stripEspPadding"`
	// Bandwidth from switch to NP. Valid values: `0G`, `2G`, `4G`, `5G`, `6G`.
	SwNpBandwidth *string `pulumi:"swNpBandwidth"`
	// Enable/disable UDP-encapsulated ESP offload (default = disable). Valid values: `enable`, `disable`.
	UespOffload *string `pulumi:"uespOffload"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemNpu resource.
type SystemNpuArgs struct {
	// Enable/disable offloading managed FortiAP and FortiLink CAPWAP sessions. Valid values: `enable`, `disable`.
	CapwapOffload pulumi.StringPtrInput
	// Affinity setting for management deamons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	DedicatedManagementAffinity pulumi.StringPtrInput
	// Enable to dedicate one CPU for GUI and CLI connections when NPs are busy. Valid values: `enable`, `disable`.
	DedicatedManagementCpu pulumi.StringPtrInput
	// Enable/disable NP6 offloading (also called fast path). Valid values: `disable`, `enable`.
	Fastpath pulumi.StringPtrInput
	// IPsec decryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecDecSubengineMask pulumi.StringPtrInput
	// IPsec encryption subengine mask (0x1 - 0xff, default 0xff).
	IpsecEncSubengineMask pulumi.StringPtrInput
	// Enable/disable IPsec inbound cache for anti-replay. Valid values: `enable`, `disable`.
	IpsecInboundCache pulumi.StringPtrInput
	// Enable/disable NP6 IPsec MTU override. Valid values: `disable`, `enable`.
	IpsecMtuOverride pulumi.StringPtrInput
	// Enable/disable IPSEC over vlink. Valid values: `enable`, `disable`.
	IpsecOverVlink pulumi.StringPtrInput
	// Enable/disable traffic accounting for each multicast session through TAE counter. Valid values: `tpe-based`, `session-based`, `disable`.
	McastSessionAccounting pulumi.StringPtrInput
	// Enable/disable NP6 connection per second (CPS) optimization mode. Valid values: `enable`, `disable`.
	Np6CpsOptimizationMode pulumi.StringPtrInput
	// Configure NPU priority protocol. The structure of `priorityProtocol` block is documented below.
	PriorityProtocol SystemNpuPriorityProtocolPtrInput
	// Enable/disable rdp offload. Valid values: `enable`, `disable`.
	RdpOffload pulumi.StringPtrInput
	// Enable/disable offloading of denied sessions. Requires ses-denied-traffic to be set. Valid values: `disable`, `enable`.
	SessionDeniedOffload pulumi.StringPtrInput
	// Enable/disable sse backpressure. Valid values: `enable`, `disable`.
	SseBackpressure pulumi.StringPtrInput
	// Enable/disable stripping clear text padding. Valid values: `enable`, `disable`.
	StripClearTextPadding pulumi.StringPtrInput
	// Enable/disable stripping ESP padding. Valid values: `enable`, `disable`.
	StripEspPadding pulumi.StringPtrInput
	// Bandwidth from switch to NP. Valid values: `0G`, `2G`, `4G`, `5G`, `6G`.
	SwNpBandwidth pulumi.StringPtrInput
	// Enable/disable UDP-encapsulated ESP offload (default = disable). Valid values: `enable`, `disable`.
	UespOffload pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNpuArgs)(nil)).Elem()
}

type SystemNpuInput interface {
	pulumi.Input

	ToSystemNpuOutput() SystemNpuOutput
	ToSystemNpuOutputWithContext(ctx context.Context) SystemNpuOutput
}

func (*SystemNpu) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpu)(nil)).Elem()
}

func (i *SystemNpu) ToSystemNpuOutput() SystemNpuOutput {
	return i.ToSystemNpuOutputWithContext(context.Background())
}

func (i *SystemNpu) ToSystemNpuOutputWithContext(ctx context.Context) SystemNpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuOutput)
}

// SystemNpuArrayInput is an input type that accepts SystemNpuArray and SystemNpuArrayOutput values.
// You can construct a concrete instance of `SystemNpuArrayInput` via:
//
//          SystemNpuArray{ SystemNpuArgs{...} }
type SystemNpuArrayInput interface {
	pulumi.Input

	ToSystemNpuArrayOutput() SystemNpuArrayOutput
	ToSystemNpuArrayOutputWithContext(context.Context) SystemNpuArrayOutput
}

type SystemNpuArray []SystemNpuInput

func (SystemNpuArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNpu)(nil)).Elem()
}

func (i SystemNpuArray) ToSystemNpuArrayOutput() SystemNpuArrayOutput {
	return i.ToSystemNpuArrayOutputWithContext(context.Background())
}

func (i SystemNpuArray) ToSystemNpuArrayOutputWithContext(ctx context.Context) SystemNpuArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuArrayOutput)
}

// SystemNpuMapInput is an input type that accepts SystemNpuMap and SystemNpuMapOutput values.
// You can construct a concrete instance of `SystemNpuMapInput` via:
//
//          SystemNpuMap{ "key": SystemNpuArgs{...} }
type SystemNpuMapInput interface {
	pulumi.Input

	ToSystemNpuMapOutput() SystemNpuMapOutput
	ToSystemNpuMapOutputWithContext(context.Context) SystemNpuMapOutput
}

type SystemNpuMap map[string]SystemNpuInput

func (SystemNpuMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNpu)(nil)).Elem()
}

func (i SystemNpuMap) ToSystemNpuMapOutput() SystemNpuMapOutput {
	return i.ToSystemNpuMapOutputWithContext(context.Background())
}

func (i SystemNpuMap) ToSystemNpuMapOutputWithContext(ctx context.Context) SystemNpuMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuMapOutput)
}

type SystemNpuOutput struct{ *pulumi.OutputState }

func (SystemNpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpu)(nil)).Elem()
}

func (o SystemNpuOutput) ToSystemNpuOutput() SystemNpuOutput {
	return o
}

func (o SystemNpuOutput) ToSystemNpuOutputWithContext(ctx context.Context) SystemNpuOutput {
	return o
}

type SystemNpuArrayOutput struct{ *pulumi.OutputState }

func (SystemNpuArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNpu)(nil)).Elem()
}

func (o SystemNpuArrayOutput) ToSystemNpuArrayOutput() SystemNpuArrayOutput {
	return o
}

func (o SystemNpuArrayOutput) ToSystemNpuArrayOutputWithContext(ctx context.Context) SystemNpuArrayOutput {
	return o
}

func (o SystemNpuArrayOutput) Index(i pulumi.IntInput) SystemNpuOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemNpu {
		return vs[0].([]*SystemNpu)[vs[1].(int)]
	}).(SystemNpuOutput)
}

type SystemNpuMapOutput struct{ *pulumi.OutputState }

func (SystemNpuMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNpu)(nil)).Elem()
}

func (o SystemNpuMapOutput) ToSystemNpuMapOutput() SystemNpuMapOutput {
	return o
}

func (o SystemNpuMapOutput) ToSystemNpuMapOutputWithContext(ctx context.Context) SystemNpuMapOutput {
	return o
}

func (o SystemNpuMapOutput) MapIndex(k pulumi.StringInput) SystemNpuOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemNpu {
		return vs[0].(map[string]*SystemNpu)[vs[1].(string)]
	}).(SystemNpuOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuInput)(nil)).Elem(), &SystemNpu{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuArrayInput)(nil)).Elem(), SystemNpuArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuMapInput)(nil)).Elem(), SystemNpuMap{})
	pulumi.RegisterOutputType(SystemNpuOutput{})
	pulumi.RegisterOutputType(SystemNpuArrayOutput{})
	pulumi.RegisterOutputType(SystemNpuMapOutput{})
}
