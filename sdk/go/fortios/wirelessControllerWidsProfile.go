// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure wireless intrusion detection system (WIDS) profiles.
//
// ## Import
//
// WirelessController WidsProfile can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerWidsProfile:WirelessControllerWidsProfile labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerWidsProfile:WirelessControllerWidsProfile labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerWidsProfile struct {
	pulumi.CustomResourceState

	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringOutput `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringOutput `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringOutput `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WirelessControllerWidsProfileApBgscanDisableScheduleArrayOutput `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringOutput `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntOutput `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntOutput `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntOutput `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntOutput `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntOutput `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntOutput `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringOutput `pulumi:"apScan"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringOutput `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringOutput `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringOutput `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntOutput `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntOutput `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringOutput `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntOutput `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntOutput `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringOutput `pulumi:"authFrameFlood"`
	// Comment.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringOutput `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntOutput `pulumi:"deauthUnknownSrcThresh"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringOutput `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntOutput `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntOutput `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringOutput `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntOutput `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntOutput `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringOutput `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntOutput `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntOutput `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringOutput `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntOutput `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntOutput `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringOutput `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntOutput `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntOutput `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringOutput `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntOutput `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntOutput `pulumi:"eapolSuccThresh"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringOutput `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringOutput `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntOutput `pulumi:"longDurationThresh"`
	// Schedule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringOutput `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringOutput `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringOutput `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringOutput `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringOutput `pulumi:"wirelessBridge"`
}

// NewWirelessControllerWidsProfile registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerWidsProfile(ctx *pulumi.Context,
	name string, args *WirelessControllerWidsProfileArgs, opts ...pulumi.ResourceOption) (*WirelessControllerWidsProfile, error) {
	if args == nil {
		args = &WirelessControllerWidsProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerWidsProfile
	err := ctx.RegisterResource("fortios:index/wirelessControllerWidsProfile:WirelessControllerWidsProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerWidsProfile gets an existing WirelessControllerWidsProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerWidsProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerWidsProfileState, opts ...pulumi.ResourceOption) (*WirelessControllerWidsProfile, error) {
	var resource WirelessControllerWidsProfile
	err := ctx.ReadResource("fortios:index/wirelessControllerWidsProfile:WirelessControllerWidsProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerWidsProfile resources.
type wirelessControllerWidsProfileState struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress *string `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay *string `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd *string `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules []WirelessControllerWidsProfileApBgscanDisableSchedule `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart *string `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration *int `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle *int `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv *int `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod *int `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv *int `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv *int `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan *string `pulumi:"apScan"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive *string `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold *string `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack *string `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh *int `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime *int `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood *string `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh *int `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime *int `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood *string `pulumi:"authFrameFlood"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast *string `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh *int `pulumi:"deauthUnknownSrcThresh"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood *string `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv *int `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh *int `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood *string `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv *int `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh *int `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood *string `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv *int `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh *int `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood *string `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv *int `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh *int `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood *string `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv *int `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh *int `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood *string `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv *int `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh *int `pulumi:"eapolSuccThresh"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui *string `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack *string `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh *int `pulumi:"longDurationThresh"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp *string `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode *string `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth *string `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv *string `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge *string `pulumi:"wirelessBridge"`
}

type WirelessControllerWidsProfileState struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringPtrInput
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringPtrInput
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringPtrInput
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WirelessControllerWidsProfileApBgscanDisableScheduleArrayInput
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringPtrInput
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntPtrInput
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntPtrInput
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntPtrInput
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntPtrInput
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntPtrInput
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntPtrInput
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringPtrInput
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringPtrInput
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringPtrInput
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntPtrInput
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringPtrInput
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntPtrInput
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringPtrInput
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntPtrInput
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringPtrInput
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringPtrInput
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntPtrInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringPtrInput
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringPtrInput
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringPtrInput
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringPtrInput
}

func (WirelessControllerWidsProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerWidsProfileState)(nil)).Elem()
}

type wirelessControllerWidsProfileArgs struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress *string `pulumi:"apAutoSuppress"`
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay *string `pulumi:"apBgscanDisableDay"`
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd *string `pulumi:"apBgscanDisableEnd"`
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules []WirelessControllerWidsProfileApBgscanDisableSchedule `pulumi:"apBgscanDisableSchedules"`
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart *string `pulumi:"apBgscanDisableStart"`
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration *int `pulumi:"apBgscanDuration"`
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle *int `pulumi:"apBgscanIdle"`
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv *int `pulumi:"apBgscanIntv"`
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod *int `pulumi:"apBgscanPeriod"`
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv *int `pulumi:"apBgscanReportIntv"`
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv *int `pulumi:"apFgscanReportIntv"`
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan *string `pulumi:"apScan"`
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive *string `pulumi:"apScanPassive"`
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold *string `pulumi:"apScanThreshold"`
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack *string `pulumi:"asleapAttack"`
	// The threshold value for association frame flooding.
	AssocFloodThresh *int `pulumi:"assocFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime *int `pulumi:"assocFloodTime"`
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood *string `pulumi:"assocFrameFlood"`
	// The threshold value for authentication frame flooding.
	AuthFloodThresh *int `pulumi:"authFloodThresh"`
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime *int `pulumi:"authFloodTime"`
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood *string `pulumi:"authFrameFlood"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast *string `pulumi:"deauthBroadcast"`
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh *int `pulumi:"deauthUnknownSrcThresh"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood *string `pulumi:"eapolFailFlood"`
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv *int `pulumi:"eapolFailIntv"`
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh *int `pulumi:"eapolFailThresh"`
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood *string `pulumi:"eapolLogoffFlood"`
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv *int `pulumi:"eapolLogoffIntv"`
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh *int `pulumi:"eapolLogoffThresh"`
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood *string `pulumi:"eapolPreFailFlood"`
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv *int `pulumi:"eapolPreFailIntv"`
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh *int `pulumi:"eapolPreFailThresh"`
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood *string `pulumi:"eapolPreSuccFlood"`
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv *int `pulumi:"eapolPreSuccIntv"`
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh *int `pulumi:"eapolPreSuccThresh"`
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood *string `pulumi:"eapolStartFlood"`
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv *int `pulumi:"eapolStartIntv"`
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh *int `pulumi:"eapolStartThresh"`
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood *string `pulumi:"eapolSuccFlood"`
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv *int `pulumi:"eapolSuccIntv"`
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh *int `pulumi:"eapolSuccThresh"`
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui *string `pulumi:"invalidMacOui"`
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack *string `pulumi:"longDurationAttack"`
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh *int `pulumi:"longDurationThresh"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp *string `pulumi:"nullSsidProbeResp"`
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode *string `pulumi:"sensorMode"`
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth *string `pulumi:"spoofedDeauth"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv *string `pulumi:"weakWepIv"`
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge *string `pulumi:"wirelessBridge"`
}

// The set of arguments for constructing a WirelessControllerWidsProfile resource.
type WirelessControllerWidsProfileArgs struct {
	// Enable/disable on-wire rogue AP auto-suppression (default = disable). Valid values: `enable`, `disable`.
	ApAutoSuppress pulumi.StringPtrInput
	// Optionally turn off scanning for one or more days of the week. Separate the days with a space. By default, no days are set. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	ApBgscanDisableDay pulumi.StringPtrInput
	// End time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableEnd pulumi.StringPtrInput
	// Firewall schedules for turning off FortiAP radio background scan. Background scan will be disabled when at least one of the schedules is valid. Separate multiple schedule names with a space. The structure of `apBgscanDisableSchedules` block is documented below.
	ApBgscanDisableSchedules WirelessControllerWidsProfileApBgscanDisableScheduleArrayInput
	// Start time, using a 24-hour clock in the format of hh:mm, for disabling background scanning (default = 00:00).
	ApBgscanDisableStart pulumi.StringPtrInput
	// Listening time on a scanning channel (10 - 1000 msec, default = 20).
	ApBgscanDuration pulumi.IntPtrInput
	// Waiting time for channel inactivity before scanning this channel (0 - 1000 msec, default = 0).
	ApBgscanIdle pulumi.IntPtrInput
	// Period of time between scanning two channels (1 - 600 sec, default = 1).
	ApBgscanIntv pulumi.IntPtrInput
	// Period of time between background scans (60 - 3600 sec, default = 600).
	ApBgscanPeriod pulumi.IntPtrInput
	// Period of time between background scan reports (15 - 600 sec, default = 30).
	ApBgscanReportIntv pulumi.IntPtrInput
	// Period of time between foreground scan reports (15 - 600 sec, default = 15).
	ApFgscanReportIntv pulumi.IntPtrInput
	// Enable/disable rogue AP detection. Valid values: `disable`, `enable`.
	ApScan pulumi.StringPtrInput
	// Enable/disable passive scanning. Enable means do not send probe request on any channels (default = disable). Valid values: `enable`, `disable`.
	ApScanPassive pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP to report detected rogue AP (-95 to -20, default = -90).
	ApScanThreshold pulumi.StringPtrInput
	// Enable/disable asleap attack detection (default = disable). Valid values: `enable`, `disable`.
	AsleapAttack pulumi.StringPtrInput
	// The threshold value for association frame flooding.
	AssocFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AssocFloodTime pulumi.IntPtrInput
	// Enable/disable association frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AssocFrameFlood pulumi.StringPtrInput
	// The threshold value for authentication frame flooding.
	AuthFloodThresh pulumi.IntPtrInput
	// Number of seconds after which a station is considered not connected.
	AuthFloodTime pulumi.IntPtrInput
	// Enable/disable authentication frame flooding detection (default = disable). Valid values: `enable`, `disable`.
	AuthFrameFlood pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Enable/disable broadcasting de-authentication detection (default = disable). Valid values: `enable`, `disable`.
	DeauthBroadcast pulumi.StringPtrInput
	// Threshold value per second to deauth unknown src for DoS attack (0: no limit).
	DeauthUnknownSrcThresh pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EAPOL-Failure flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolFailFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Failure flooding (1 - 3600 sec).
	EapolFailIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Failure flooding in specified interval.
	EapolFailThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Logoff flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolLogoffFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Logoff flooding (1 - 3600 sec).
	EapolLogoffIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Logoff flooding in specified interval.
	EapolLogoffThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Failure flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreFailFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Failure flooding (1 - 3600 sec).
	EapolPreFailIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Failure flooding in specified interval.
	EapolPreFailThresh pulumi.IntPtrInput
	// Enable/disable premature EAPOL-Success flooding (to STA) detection (default = disable). Valid values: `enable`, `disable`.
	EapolPreSuccFlood pulumi.StringPtrInput
	// The detection interval for premature EAPOL-Success flooding (1 - 3600 sec).
	EapolPreSuccIntv pulumi.IntPtrInput
	// The threshold value for premature EAPOL-Success flooding in specified interval.
	EapolPreSuccThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Start flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolStartFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Start flooding (1 - 3600 sec).
	EapolStartIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Start flooding in specified interval.
	EapolStartThresh pulumi.IntPtrInput
	// Enable/disable EAPOL-Success flooding (to AP) detection (default = disable). Valid values: `enable`, `disable`.
	EapolSuccFlood pulumi.StringPtrInput
	// The detection interval for EAPOL-Success flooding (1 - 3600 sec).
	EapolSuccIntv pulumi.IntPtrInput
	// The threshold value for EAPOL-Success flooding in specified interval.
	EapolSuccThresh pulumi.IntPtrInput
	// Enable/disable invalid MAC OUI detection. Valid values: `enable`, `disable`.
	InvalidMacOui pulumi.StringPtrInput
	// Enable/disable long duration attack detection based on user configured threshold (default = disable). Valid values: `enable`, `disable`.
	LongDurationAttack pulumi.StringPtrInput
	// Threshold value for long duration attack detection (1000 - 32767 usec, default = 8200).
	LongDurationThresh pulumi.IntPtrInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Enable/disable null SSID probe response detection (default = disable). Valid values: `enable`, `disable`.
	NullSsidProbeResp pulumi.StringPtrInput
	// Scan WiFi nearby stations (default = disable). Valid values: `disable`, `foreign`, `both`.
	SensorMode pulumi.StringPtrInput
	// Enable/disable spoofed de-authentication attack detection (default = disable). Valid values: `enable`, `disable`.
	SpoofedDeauth pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable weak WEP IV (Initialization Vector) detection (default = disable). Valid values: `enable`, `disable`.
	WeakWepIv pulumi.StringPtrInput
	// Enable/disable wireless bridge detection (default = disable). Valid values: `enable`, `disable`.
	WirelessBridge pulumi.StringPtrInput
}

func (WirelessControllerWidsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerWidsProfileArgs)(nil)).Elem()
}

type WirelessControllerWidsProfileInput interface {
	pulumi.Input

	ToWirelessControllerWidsProfileOutput() WirelessControllerWidsProfileOutput
	ToWirelessControllerWidsProfileOutputWithContext(ctx context.Context) WirelessControllerWidsProfileOutput
}

func (*WirelessControllerWidsProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerWidsProfile)(nil)).Elem()
}

func (i *WirelessControllerWidsProfile) ToWirelessControllerWidsProfileOutput() WirelessControllerWidsProfileOutput {
	return i.ToWirelessControllerWidsProfileOutputWithContext(context.Background())
}

func (i *WirelessControllerWidsProfile) ToWirelessControllerWidsProfileOutputWithContext(ctx context.Context) WirelessControllerWidsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerWidsProfileOutput)
}

// WirelessControllerWidsProfileArrayInput is an input type that accepts WirelessControllerWidsProfileArray and WirelessControllerWidsProfileArrayOutput values.
// You can construct a concrete instance of `WirelessControllerWidsProfileArrayInput` via:
//
//          WirelessControllerWidsProfileArray{ WirelessControllerWidsProfileArgs{...} }
type WirelessControllerWidsProfileArrayInput interface {
	pulumi.Input

	ToWirelessControllerWidsProfileArrayOutput() WirelessControllerWidsProfileArrayOutput
	ToWirelessControllerWidsProfileArrayOutputWithContext(context.Context) WirelessControllerWidsProfileArrayOutput
}

type WirelessControllerWidsProfileArray []WirelessControllerWidsProfileInput

func (WirelessControllerWidsProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerWidsProfile)(nil)).Elem()
}

func (i WirelessControllerWidsProfileArray) ToWirelessControllerWidsProfileArrayOutput() WirelessControllerWidsProfileArrayOutput {
	return i.ToWirelessControllerWidsProfileArrayOutputWithContext(context.Background())
}

func (i WirelessControllerWidsProfileArray) ToWirelessControllerWidsProfileArrayOutputWithContext(ctx context.Context) WirelessControllerWidsProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerWidsProfileArrayOutput)
}

// WirelessControllerWidsProfileMapInput is an input type that accepts WirelessControllerWidsProfileMap and WirelessControllerWidsProfileMapOutput values.
// You can construct a concrete instance of `WirelessControllerWidsProfileMapInput` via:
//
//          WirelessControllerWidsProfileMap{ "key": WirelessControllerWidsProfileArgs{...} }
type WirelessControllerWidsProfileMapInput interface {
	pulumi.Input

	ToWirelessControllerWidsProfileMapOutput() WirelessControllerWidsProfileMapOutput
	ToWirelessControllerWidsProfileMapOutputWithContext(context.Context) WirelessControllerWidsProfileMapOutput
}

type WirelessControllerWidsProfileMap map[string]WirelessControllerWidsProfileInput

func (WirelessControllerWidsProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerWidsProfile)(nil)).Elem()
}

func (i WirelessControllerWidsProfileMap) ToWirelessControllerWidsProfileMapOutput() WirelessControllerWidsProfileMapOutput {
	return i.ToWirelessControllerWidsProfileMapOutputWithContext(context.Background())
}

func (i WirelessControllerWidsProfileMap) ToWirelessControllerWidsProfileMapOutputWithContext(ctx context.Context) WirelessControllerWidsProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerWidsProfileMapOutput)
}

type WirelessControllerWidsProfileOutput struct{ *pulumi.OutputState }

func (WirelessControllerWidsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerWidsProfile)(nil)).Elem()
}

func (o WirelessControllerWidsProfileOutput) ToWirelessControllerWidsProfileOutput() WirelessControllerWidsProfileOutput {
	return o
}

func (o WirelessControllerWidsProfileOutput) ToWirelessControllerWidsProfileOutputWithContext(ctx context.Context) WirelessControllerWidsProfileOutput {
	return o
}

type WirelessControllerWidsProfileArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerWidsProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerWidsProfile)(nil)).Elem()
}

func (o WirelessControllerWidsProfileArrayOutput) ToWirelessControllerWidsProfileArrayOutput() WirelessControllerWidsProfileArrayOutput {
	return o
}

func (o WirelessControllerWidsProfileArrayOutput) ToWirelessControllerWidsProfileArrayOutputWithContext(ctx context.Context) WirelessControllerWidsProfileArrayOutput {
	return o
}

func (o WirelessControllerWidsProfileArrayOutput) Index(i pulumi.IntInput) WirelessControllerWidsProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerWidsProfile {
		return vs[0].([]*WirelessControllerWidsProfile)[vs[1].(int)]
	}).(WirelessControllerWidsProfileOutput)
}

type WirelessControllerWidsProfileMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerWidsProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerWidsProfile)(nil)).Elem()
}

func (o WirelessControllerWidsProfileMapOutput) ToWirelessControllerWidsProfileMapOutput() WirelessControllerWidsProfileMapOutput {
	return o
}

func (o WirelessControllerWidsProfileMapOutput) ToWirelessControllerWidsProfileMapOutputWithContext(ctx context.Context) WirelessControllerWidsProfileMapOutput {
	return o
}

func (o WirelessControllerWidsProfileMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerWidsProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerWidsProfile {
		return vs[0].(map[string]*WirelessControllerWidsProfile)[vs[1].(string)]
	}).(WirelessControllerWidsProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerWidsProfileInput)(nil)).Elem(), &WirelessControllerWidsProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerWidsProfileArrayInput)(nil)).Elem(), WirelessControllerWidsProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerWidsProfileMapInput)(nil)).Elem(), WirelessControllerWidsProfileMap{})
	pulumi.RegisterOutputType(WirelessControllerWidsProfileOutput{})
	pulumi.RegisterOutputType(WirelessControllerWidsProfileArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerWidsProfileMapOutput{})
}
