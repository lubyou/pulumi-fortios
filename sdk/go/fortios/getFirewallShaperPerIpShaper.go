// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFirewallShaperPerIpShaper(ctx *pulumi.Context, args *LookupFirewallShaperPerIpShaperArgs, opts ...pulumi.InvokeOption) (*LookupFirewallShaperPerIpShaperResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirewallShaperPerIpShaperResult
	err := ctx.Invoke("fortios:index/getFirewallShaperPerIpShaper:GetFirewallShaperPerIpShaper", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetFirewallShaperPerIpShaper.
type LookupFirewallShaperPerIpShaperArgs struct {
	Name      string  `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetFirewallShaperPerIpShaper.
type LookupFirewallShaperPerIpShaperResult struct {
	BandwidthUnit       string `pulumi:"bandwidthUnit"`
	DiffservForward     string `pulumi:"diffservForward"`
	DiffservReverse     string `pulumi:"diffservReverse"`
	DiffservcodeForward string `pulumi:"diffservcodeForward"`
	DiffservcodeRev     string `pulumi:"diffservcodeRev"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string  `pulumi:"id"`
	MaxBandwidth            int     `pulumi:"maxBandwidth"`
	MaxConcurrentSession    int     `pulumi:"maxConcurrentSession"`
	MaxConcurrentTcpSession int     `pulumi:"maxConcurrentTcpSession"`
	MaxConcurrentUdpSession int     `pulumi:"maxConcurrentUdpSession"`
	Name                    string  `pulumi:"name"`
	Vdomparam               *string `pulumi:"vdomparam"`
}

func LookupFirewallShaperPerIpShaperOutput(ctx *pulumi.Context, args LookupFirewallShaperPerIpShaperOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallShaperPerIpShaperResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallShaperPerIpShaperResult, error) {
			args := v.(LookupFirewallShaperPerIpShaperArgs)
			r, err := LookupFirewallShaperPerIpShaper(ctx, &args, opts...)
			var s LookupFirewallShaperPerIpShaperResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFirewallShaperPerIpShaperResultOutput)
}

// A collection of arguments for invoking GetFirewallShaperPerIpShaper.
type LookupFirewallShaperPerIpShaperOutputArgs struct {
	Name      pulumi.StringInput    `pulumi:"name"`
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupFirewallShaperPerIpShaperOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallShaperPerIpShaperArgs)(nil)).Elem()
}

// A collection of values returned by GetFirewallShaperPerIpShaper.
type LookupFirewallShaperPerIpShaperResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallShaperPerIpShaperResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallShaperPerIpShaperResult)(nil)).Elem()
}

func (o LookupFirewallShaperPerIpShaperResultOutput) ToLookupFirewallShaperPerIpShaperResultOutput() LookupFirewallShaperPerIpShaperResultOutput {
	return o
}

func (o LookupFirewallShaperPerIpShaperResultOutput) ToLookupFirewallShaperPerIpShaperResultOutputWithContext(ctx context.Context) LookupFirewallShaperPerIpShaperResultOutput {
	return o
}

func (o LookupFirewallShaperPerIpShaperResultOutput) BandwidthUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.BandwidthUnit }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) DiffservForward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.DiffservForward }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) DiffservReverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.DiffservReverse }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) DiffservcodeForward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.DiffservcodeForward }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) DiffservcodeRev() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.DiffservcodeRev }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFirewallShaperPerIpShaperResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) MaxBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) int { return v.MaxBandwidth }).(pulumi.IntOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) MaxConcurrentSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) int { return v.MaxConcurrentSession }).(pulumi.IntOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) MaxConcurrentTcpSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) int { return v.MaxConcurrentTcpSession }).(pulumi.IntOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) MaxConcurrentUdpSession() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) int { return v.MaxConcurrentUdpSession }).(pulumi.IntOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFirewallShaperPerIpShaperResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallShaperPerIpShaperResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallShaperPerIpShaperResultOutput{})
}
