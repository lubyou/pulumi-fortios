// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallServiceCategory struct {
	pulumi.CustomResourceState

	Comment      pulumi.StringPtrOutput `pulumi:"comment"`
	FabricObject pulumi.StringOutput    `pulumi:"fabricObject"`
	Name         pulumi.StringOutput    `pulumi:"name"`
	Vdomparam    pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallServiceCategory registers a new resource with the given unique name, arguments, and options.
func NewFirewallServiceCategory(ctx *pulumi.Context,
	name string, args *FirewallServiceCategoryArgs, opts ...pulumi.ResourceOption) (*FirewallServiceCategory, error) {
	if args == nil {
		args = &FirewallServiceCategoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallServiceCategory
	err := ctx.RegisterResource("fortios:index/firewallServiceCategory:FirewallServiceCategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallServiceCategory gets an existing FirewallServiceCategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallServiceCategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallServiceCategoryState, opts ...pulumi.ResourceOption) (*FirewallServiceCategory, error) {
	var resource FirewallServiceCategory
	err := ctx.ReadResource("fortios:index/firewallServiceCategory:FirewallServiceCategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallServiceCategory resources.
type firewallServiceCategoryState struct {
	Comment      *string `pulumi:"comment"`
	FabricObject *string `pulumi:"fabricObject"`
	Name         *string `pulumi:"name"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

type FirewallServiceCategoryState struct {
	Comment      pulumi.StringPtrInput
	FabricObject pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (FirewallServiceCategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallServiceCategoryState)(nil)).Elem()
}

type firewallServiceCategoryArgs struct {
	Comment      *string `pulumi:"comment"`
	FabricObject *string `pulumi:"fabricObject"`
	Name         *string `pulumi:"name"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallServiceCategory resource.
type FirewallServiceCategoryArgs struct {
	Comment      pulumi.StringPtrInput
	FabricObject pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (FirewallServiceCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallServiceCategoryArgs)(nil)).Elem()
}

type FirewallServiceCategoryInput interface {
	pulumi.Input

	ToFirewallServiceCategoryOutput() FirewallServiceCategoryOutput
	ToFirewallServiceCategoryOutputWithContext(ctx context.Context) FirewallServiceCategoryOutput
}

func (*FirewallServiceCategory) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallServiceCategory)(nil)).Elem()
}

func (i *FirewallServiceCategory) ToFirewallServiceCategoryOutput() FirewallServiceCategoryOutput {
	return i.ToFirewallServiceCategoryOutputWithContext(context.Background())
}

func (i *FirewallServiceCategory) ToFirewallServiceCategoryOutputWithContext(ctx context.Context) FirewallServiceCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallServiceCategoryOutput)
}

// FirewallServiceCategoryArrayInput is an input type that accepts FirewallServiceCategoryArray and FirewallServiceCategoryArrayOutput values.
// You can construct a concrete instance of `FirewallServiceCategoryArrayInput` via:
//
//	FirewallServiceCategoryArray{ FirewallServiceCategoryArgs{...} }
type FirewallServiceCategoryArrayInput interface {
	pulumi.Input

	ToFirewallServiceCategoryArrayOutput() FirewallServiceCategoryArrayOutput
	ToFirewallServiceCategoryArrayOutputWithContext(context.Context) FirewallServiceCategoryArrayOutput
}

type FirewallServiceCategoryArray []FirewallServiceCategoryInput

func (FirewallServiceCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallServiceCategory)(nil)).Elem()
}

func (i FirewallServiceCategoryArray) ToFirewallServiceCategoryArrayOutput() FirewallServiceCategoryArrayOutput {
	return i.ToFirewallServiceCategoryArrayOutputWithContext(context.Background())
}

func (i FirewallServiceCategoryArray) ToFirewallServiceCategoryArrayOutputWithContext(ctx context.Context) FirewallServiceCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallServiceCategoryArrayOutput)
}

// FirewallServiceCategoryMapInput is an input type that accepts FirewallServiceCategoryMap and FirewallServiceCategoryMapOutput values.
// You can construct a concrete instance of `FirewallServiceCategoryMapInput` via:
//
//	FirewallServiceCategoryMap{ "key": FirewallServiceCategoryArgs{...} }
type FirewallServiceCategoryMapInput interface {
	pulumi.Input

	ToFirewallServiceCategoryMapOutput() FirewallServiceCategoryMapOutput
	ToFirewallServiceCategoryMapOutputWithContext(context.Context) FirewallServiceCategoryMapOutput
}

type FirewallServiceCategoryMap map[string]FirewallServiceCategoryInput

func (FirewallServiceCategoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallServiceCategory)(nil)).Elem()
}

func (i FirewallServiceCategoryMap) ToFirewallServiceCategoryMapOutput() FirewallServiceCategoryMapOutput {
	return i.ToFirewallServiceCategoryMapOutputWithContext(context.Background())
}

func (i FirewallServiceCategoryMap) ToFirewallServiceCategoryMapOutputWithContext(ctx context.Context) FirewallServiceCategoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallServiceCategoryMapOutput)
}

type FirewallServiceCategoryOutput struct{ *pulumi.OutputState }

func (FirewallServiceCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallServiceCategory)(nil)).Elem()
}

func (o FirewallServiceCategoryOutput) ToFirewallServiceCategoryOutput() FirewallServiceCategoryOutput {
	return o
}

func (o FirewallServiceCategoryOutput) ToFirewallServiceCategoryOutputWithContext(ctx context.Context) FirewallServiceCategoryOutput {
	return o
}

func (o FirewallServiceCategoryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallServiceCategory) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallServiceCategoryOutput) FabricObject() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallServiceCategory) pulumi.StringOutput { return v.FabricObject }).(pulumi.StringOutput)
}

func (o FirewallServiceCategoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallServiceCategory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallServiceCategoryOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallServiceCategory) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallServiceCategoryArrayOutput struct{ *pulumi.OutputState }

func (FirewallServiceCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallServiceCategory)(nil)).Elem()
}

func (o FirewallServiceCategoryArrayOutput) ToFirewallServiceCategoryArrayOutput() FirewallServiceCategoryArrayOutput {
	return o
}

func (o FirewallServiceCategoryArrayOutput) ToFirewallServiceCategoryArrayOutputWithContext(ctx context.Context) FirewallServiceCategoryArrayOutput {
	return o
}

func (o FirewallServiceCategoryArrayOutput) Index(i pulumi.IntInput) FirewallServiceCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallServiceCategory {
		return vs[0].([]*FirewallServiceCategory)[vs[1].(int)]
	}).(FirewallServiceCategoryOutput)
}

type FirewallServiceCategoryMapOutput struct{ *pulumi.OutputState }

func (FirewallServiceCategoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallServiceCategory)(nil)).Elem()
}

func (o FirewallServiceCategoryMapOutput) ToFirewallServiceCategoryMapOutput() FirewallServiceCategoryMapOutput {
	return o
}

func (o FirewallServiceCategoryMapOutput) ToFirewallServiceCategoryMapOutputWithContext(ctx context.Context) FirewallServiceCategoryMapOutput {
	return o
}

func (o FirewallServiceCategoryMapOutput) MapIndex(k pulumi.StringInput) FirewallServiceCategoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallServiceCategory {
		return vs[0].(map[string]*FirewallServiceCategory)[vs[1].(string)]
	}).(FirewallServiceCategoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallServiceCategoryInput)(nil)).Elem(), &FirewallServiceCategory{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallServiceCategoryArrayInput)(nil)).Elem(), FirewallServiceCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallServiceCategoryMapInput)(nil)).Elem(), FirewallServiceCategoryMap{})
	pulumi.RegisterOutputType(FirewallServiceCategoryOutput{})
	pulumi.RegisterOutputType(FirewallServiceCategoryArrayOutput{})
	pulumi.RegisterOutputType(FirewallServiceCategoryMapOutput{})
}
