// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type CasbUserActivity struct {
	pulumi.CustomResourceState

	Application         pulumi.StringOutput                      `pulumi:"application"`
	CasbName            pulumi.StringOutput                      `pulumi:"casbName"`
	Category            pulumi.StringOutput                      `pulumi:"category"`
	ControlOptions      CasbUserActivityControlOptionArrayOutput `pulumi:"controlOptions"`
	Description         pulumi.StringOutput                      `pulumi:"description"`
	DynamicSortSubtable pulumi.StringPtrOutput                   `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                   `pulumi:"getAllTables"`
	MatchStrategy       pulumi.StringOutput                      `pulumi:"matchStrategy"`
	Matches             CasbUserActivityMatchArrayOutput         `pulumi:"matches"`
	Name                pulumi.StringOutput                      `pulumi:"name"`
	Type                pulumi.StringOutput                      `pulumi:"type"`
	Uuid                pulumi.StringOutput                      `pulumi:"uuid"`
	Vdomparam           pulumi.StringPtrOutput                   `pulumi:"vdomparam"`
}

// NewCasbUserActivity registers a new resource with the given unique name, arguments, and options.
func NewCasbUserActivity(ctx *pulumi.Context,
	name string, args *CasbUserActivityArgs, opts ...pulumi.ResourceOption) (*CasbUserActivity, error) {
	if args == nil {
		args = &CasbUserActivityArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CasbUserActivity
	err := ctx.RegisterResource("fortios:index/casbUserActivity:CasbUserActivity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCasbUserActivity gets an existing CasbUserActivity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCasbUserActivity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CasbUserActivityState, opts ...pulumi.ResourceOption) (*CasbUserActivity, error) {
	var resource CasbUserActivity
	err := ctx.ReadResource("fortios:index/casbUserActivity:CasbUserActivity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CasbUserActivity resources.
type casbUserActivityState struct {
	Application         *string                         `pulumi:"application"`
	CasbName            *string                         `pulumi:"casbName"`
	Category            *string                         `pulumi:"category"`
	ControlOptions      []CasbUserActivityControlOption `pulumi:"controlOptions"`
	Description         *string                         `pulumi:"description"`
	DynamicSortSubtable *string                         `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                         `pulumi:"getAllTables"`
	MatchStrategy       *string                         `pulumi:"matchStrategy"`
	Matches             []CasbUserActivityMatch         `pulumi:"matches"`
	Name                *string                         `pulumi:"name"`
	Type                *string                         `pulumi:"type"`
	Uuid                *string                         `pulumi:"uuid"`
	Vdomparam           *string                         `pulumi:"vdomparam"`
}

type CasbUserActivityState struct {
	Application         pulumi.StringPtrInput
	CasbName            pulumi.StringPtrInput
	Category            pulumi.StringPtrInput
	ControlOptions      CasbUserActivityControlOptionArrayInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	MatchStrategy       pulumi.StringPtrInput
	Matches             CasbUserActivityMatchArrayInput
	Name                pulumi.StringPtrInput
	Type                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (CasbUserActivityState) ElementType() reflect.Type {
	return reflect.TypeOf((*casbUserActivityState)(nil)).Elem()
}

type casbUserActivityArgs struct {
	Application         *string                         `pulumi:"application"`
	CasbName            *string                         `pulumi:"casbName"`
	Category            *string                         `pulumi:"category"`
	ControlOptions      []CasbUserActivityControlOption `pulumi:"controlOptions"`
	Description         *string                         `pulumi:"description"`
	DynamicSortSubtable *string                         `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                         `pulumi:"getAllTables"`
	MatchStrategy       *string                         `pulumi:"matchStrategy"`
	Matches             []CasbUserActivityMatch         `pulumi:"matches"`
	Name                *string                         `pulumi:"name"`
	Type                *string                         `pulumi:"type"`
	Uuid                *string                         `pulumi:"uuid"`
	Vdomparam           *string                         `pulumi:"vdomparam"`
}

// The set of arguments for constructing a CasbUserActivity resource.
type CasbUserActivityArgs struct {
	Application         pulumi.StringPtrInput
	CasbName            pulumi.StringPtrInput
	Category            pulumi.StringPtrInput
	ControlOptions      CasbUserActivityControlOptionArrayInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	MatchStrategy       pulumi.StringPtrInput
	Matches             CasbUserActivityMatchArrayInput
	Name                pulumi.StringPtrInput
	Type                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (CasbUserActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*casbUserActivityArgs)(nil)).Elem()
}

type CasbUserActivityInput interface {
	pulumi.Input

	ToCasbUserActivityOutput() CasbUserActivityOutput
	ToCasbUserActivityOutputWithContext(ctx context.Context) CasbUserActivityOutput
}

func (*CasbUserActivity) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbUserActivity)(nil)).Elem()
}

func (i *CasbUserActivity) ToCasbUserActivityOutput() CasbUserActivityOutput {
	return i.ToCasbUserActivityOutputWithContext(context.Background())
}

func (i *CasbUserActivity) ToCasbUserActivityOutputWithContext(ctx context.Context) CasbUserActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbUserActivityOutput)
}

func (i *CasbUserActivity) ToOutput(ctx context.Context) pulumix.Output[*CasbUserActivity] {
	return pulumix.Output[*CasbUserActivity]{
		OutputState: i.ToCasbUserActivityOutputWithContext(ctx).OutputState,
	}
}

// CasbUserActivityArrayInput is an input type that accepts CasbUserActivityArray and CasbUserActivityArrayOutput values.
// You can construct a concrete instance of `CasbUserActivityArrayInput` via:
//
//	CasbUserActivityArray{ CasbUserActivityArgs{...} }
type CasbUserActivityArrayInput interface {
	pulumi.Input

	ToCasbUserActivityArrayOutput() CasbUserActivityArrayOutput
	ToCasbUserActivityArrayOutputWithContext(context.Context) CasbUserActivityArrayOutput
}

type CasbUserActivityArray []CasbUserActivityInput

func (CasbUserActivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbUserActivity)(nil)).Elem()
}

func (i CasbUserActivityArray) ToCasbUserActivityArrayOutput() CasbUserActivityArrayOutput {
	return i.ToCasbUserActivityArrayOutputWithContext(context.Background())
}

func (i CasbUserActivityArray) ToCasbUserActivityArrayOutputWithContext(ctx context.Context) CasbUserActivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbUserActivityArrayOutput)
}

func (i CasbUserActivityArray) ToOutput(ctx context.Context) pulumix.Output[[]*CasbUserActivity] {
	return pulumix.Output[[]*CasbUserActivity]{
		OutputState: i.ToCasbUserActivityArrayOutputWithContext(ctx).OutputState,
	}
}

// CasbUserActivityMapInput is an input type that accepts CasbUserActivityMap and CasbUserActivityMapOutput values.
// You can construct a concrete instance of `CasbUserActivityMapInput` via:
//
//	CasbUserActivityMap{ "key": CasbUserActivityArgs{...} }
type CasbUserActivityMapInput interface {
	pulumi.Input

	ToCasbUserActivityMapOutput() CasbUserActivityMapOutput
	ToCasbUserActivityMapOutputWithContext(context.Context) CasbUserActivityMapOutput
}

type CasbUserActivityMap map[string]CasbUserActivityInput

func (CasbUserActivityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbUserActivity)(nil)).Elem()
}

func (i CasbUserActivityMap) ToCasbUserActivityMapOutput() CasbUserActivityMapOutput {
	return i.ToCasbUserActivityMapOutputWithContext(context.Background())
}

func (i CasbUserActivityMap) ToCasbUserActivityMapOutputWithContext(ctx context.Context) CasbUserActivityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CasbUserActivityMapOutput)
}

func (i CasbUserActivityMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*CasbUserActivity] {
	return pulumix.Output[map[string]*CasbUserActivity]{
		OutputState: i.ToCasbUserActivityMapOutputWithContext(ctx).OutputState,
	}
}

type CasbUserActivityOutput struct{ *pulumi.OutputState }

func (CasbUserActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CasbUserActivity)(nil)).Elem()
}

func (o CasbUserActivityOutput) ToCasbUserActivityOutput() CasbUserActivityOutput {
	return o
}

func (o CasbUserActivityOutput) ToCasbUserActivityOutputWithContext(ctx context.Context) CasbUserActivityOutput {
	return o
}

func (o CasbUserActivityOutput) ToOutput(ctx context.Context) pulumix.Output[*CasbUserActivity] {
	return pulumix.Output[*CasbUserActivity]{
		OutputState: o.OutputState,
	}
}

func (o CasbUserActivityOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) CasbName() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.CasbName }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) ControlOptions() CasbUserActivityControlOptionArrayOutput {
	return o.ApplyT(func(v *CasbUserActivity) CasbUserActivityControlOptionArrayOutput { return v.ControlOptions }).(CasbUserActivityControlOptionArrayOutput)
}

func (o CasbUserActivityOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o CasbUserActivityOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o CasbUserActivityOutput) MatchStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.MatchStrategy }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) Matches() CasbUserActivityMatchArrayOutput {
	return o.ApplyT(func(v *CasbUserActivity) CasbUserActivityMatchArrayOutput { return v.Matches }).(CasbUserActivityMatchArrayOutput)
}

func (o CasbUserActivityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o CasbUserActivityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CasbUserActivity) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type CasbUserActivityArrayOutput struct{ *pulumi.OutputState }

func (CasbUserActivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CasbUserActivity)(nil)).Elem()
}

func (o CasbUserActivityArrayOutput) ToCasbUserActivityArrayOutput() CasbUserActivityArrayOutput {
	return o
}

func (o CasbUserActivityArrayOutput) ToCasbUserActivityArrayOutputWithContext(ctx context.Context) CasbUserActivityArrayOutput {
	return o
}

func (o CasbUserActivityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*CasbUserActivity] {
	return pulumix.Output[[]*CasbUserActivity]{
		OutputState: o.OutputState,
	}
}

func (o CasbUserActivityArrayOutput) Index(i pulumi.IntInput) CasbUserActivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CasbUserActivity {
		return vs[0].([]*CasbUserActivity)[vs[1].(int)]
	}).(CasbUserActivityOutput)
}

type CasbUserActivityMapOutput struct{ *pulumi.OutputState }

func (CasbUserActivityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CasbUserActivity)(nil)).Elem()
}

func (o CasbUserActivityMapOutput) ToCasbUserActivityMapOutput() CasbUserActivityMapOutput {
	return o
}

func (o CasbUserActivityMapOutput) ToCasbUserActivityMapOutputWithContext(ctx context.Context) CasbUserActivityMapOutput {
	return o
}

func (o CasbUserActivityMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*CasbUserActivity] {
	return pulumix.Output[map[string]*CasbUserActivity]{
		OutputState: o.OutputState,
	}
}

func (o CasbUserActivityMapOutput) MapIndex(k pulumi.StringInput) CasbUserActivityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CasbUserActivity {
		return vs[0].(map[string]*CasbUserActivity)[vs[1].(string)]
	}).(CasbUserActivityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CasbUserActivityInput)(nil)).Elem(), &CasbUserActivity{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbUserActivityArrayInput)(nil)).Elem(), CasbUserActivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CasbUserActivityMapInput)(nil)).Elem(), CasbUserActivityMap{})
	pulumi.RegisterOutputType(CasbUserActivityOutput{})
	pulumi.RegisterOutputType(CasbUserActivityArrayOutput{})
	pulumi.RegisterOutputType(CasbUserActivityMapOutput{})
}
