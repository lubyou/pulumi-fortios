// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch Auto-Config QoS policy.
//
// ## Import
//
// SwitchControllerAutoConfig Policy can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerAutoConfigPolicy:SwitchControllerAutoConfigPolicy labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerAutoConfigPolicy:SwitchControllerAutoConfigPolicy labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerAutoConfigPolicy struct {
	pulumi.CustomResourceState

	// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
	IgmpFloodReport pulumi.StringOutput `pulumi:"igmpFloodReport"`
	// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
	IgmpFloodTraffic pulumi.StringOutput `pulumi:"igmpFloodTraffic"`
	// Auto-Config QoS policy name
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus pulumi.StringOutput `pulumi:"poeStatus"`
	// Auto-Config QoS policy.
	QosPolicy pulumi.StringOutput `pulumi:"qosPolicy"`
	// Auto-Config storm control policy.
	StormControlPolicy pulumi.StringOutput `pulumi:"stormControlPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerAutoConfigPolicy registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerAutoConfigPolicy(ctx *pulumi.Context,
	name string, args *SwitchControllerAutoConfigPolicyArgs, opts ...pulumi.ResourceOption) (*SwitchControllerAutoConfigPolicy, error) {
	if args == nil {
		args = &SwitchControllerAutoConfigPolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerAutoConfigPolicy
	err := ctx.RegisterResource("fortios:index/switchControllerAutoConfigPolicy:SwitchControllerAutoConfigPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerAutoConfigPolicy gets an existing SwitchControllerAutoConfigPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerAutoConfigPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerAutoConfigPolicyState, opts ...pulumi.ResourceOption) (*SwitchControllerAutoConfigPolicy, error) {
	var resource SwitchControllerAutoConfigPolicy
	err := ctx.ReadResource("fortios:index/switchControllerAutoConfigPolicy:SwitchControllerAutoConfigPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerAutoConfigPolicy resources.
type switchControllerAutoConfigPolicyState struct {
	// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
	IgmpFloodReport *string `pulumi:"igmpFloodReport"`
	// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
	IgmpFloodTraffic *string `pulumi:"igmpFloodTraffic"`
	// Auto-Config QoS policy name
	Name *string `pulumi:"name"`
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus *string `pulumi:"poeStatus"`
	// Auto-Config QoS policy.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Auto-Config storm control policy.
	StormControlPolicy *string `pulumi:"stormControlPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchControllerAutoConfigPolicyState struct {
	// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
	IgmpFloodReport pulumi.StringPtrInput
	// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
	IgmpFloodTraffic pulumi.StringPtrInput
	// Auto-Config QoS policy name
	Name pulumi.StringPtrInput
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus pulumi.StringPtrInput
	// Auto-Config QoS policy.
	QosPolicy pulumi.StringPtrInput
	// Auto-Config storm control policy.
	StormControlPolicy pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerAutoConfigPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerAutoConfigPolicyState)(nil)).Elem()
}

type switchControllerAutoConfigPolicyArgs struct {
	// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
	IgmpFloodReport *string `pulumi:"igmpFloodReport"`
	// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
	IgmpFloodTraffic *string `pulumi:"igmpFloodTraffic"`
	// Auto-Config QoS policy name
	Name *string `pulumi:"name"`
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus *string `pulumi:"poeStatus"`
	// Auto-Config QoS policy.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Auto-Config storm control policy.
	StormControlPolicy *string `pulumi:"stormControlPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerAutoConfigPolicy resource.
type SwitchControllerAutoConfigPolicyArgs struct {
	// Enable/disable IGMP flood report. Valid values: `enable`, `disable`.
	IgmpFloodReport pulumi.StringPtrInput
	// Enable/disable IGMP flood traffic. Valid values: `enable`, `disable`.
	IgmpFloodTraffic pulumi.StringPtrInput
	// Auto-Config QoS policy name
	Name pulumi.StringPtrInput
	// Enable/disable PoE status. Valid values: `enable`, `disable`.
	PoeStatus pulumi.StringPtrInput
	// Auto-Config QoS policy.
	QosPolicy pulumi.StringPtrInput
	// Auto-Config storm control policy.
	StormControlPolicy pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerAutoConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerAutoConfigPolicyArgs)(nil)).Elem()
}

type SwitchControllerAutoConfigPolicyInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigPolicyOutput() SwitchControllerAutoConfigPolicyOutput
	ToSwitchControllerAutoConfigPolicyOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyOutput
}

func (*SwitchControllerAutoConfigPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (i *SwitchControllerAutoConfigPolicy) ToSwitchControllerAutoConfigPolicyOutput() SwitchControllerAutoConfigPolicyOutput {
	return i.ToSwitchControllerAutoConfigPolicyOutputWithContext(context.Background())
}

func (i *SwitchControllerAutoConfigPolicy) ToSwitchControllerAutoConfigPolicyOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigPolicyOutput)
}

// SwitchControllerAutoConfigPolicyArrayInput is an input type that accepts SwitchControllerAutoConfigPolicyArray and SwitchControllerAutoConfigPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigPolicyArrayInput` via:
//
//          SwitchControllerAutoConfigPolicyArray{ SwitchControllerAutoConfigPolicyArgs{...} }
type SwitchControllerAutoConfigPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigPolicyArrayOutput() SwitchControllerAutoConfigPolicyArrayOutput
	ToSwitchControllerAutoConfigPolicyArrayOutputWithContext(context.Context) SwitchControllerAutoConfigPolicyArrayOutput
}

type SwitchControllerAutoConfigPolicyArray []SwitchControllerAutoConfigPolicyInput

func (SwitchControllerAutoConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (i SwitchControllerAutoConfigPolicyArray) ToSwitchControllerAutoConfigPolicyArrayOutput() SwitchControllerAutoConfigPolicyArrayOutput {
	return i.ToSwitchControllerAutoConfigPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigPolicyArray) ToSwitchControllerAutoConfigPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigPolicyArrayOutput)
}

// SwitchControllerAutoConfigPolicyMapInput is an input type that accepts SwitchControllerAutoConfigPolicyMap and SwitchControllerAutoConfigPolicyMapOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigPolicyMapInput` via:
//
//          SwitchControllerAutoConfigPolicyMap{ "key": SwitchControllerAutoConfigPolicyArgs{...} }
type SwitchControllerAutoConfigPolicyMapInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigPolicyMapOutput() SwitchControllerAutoConfigPolicyMapOutput
	ToSwitchControllerAutoConfigPolicyMapOutputWithContext(context.Context) SwitchControllerAutoConfigPolicyMapOutput
}

type SwitchControllerAutoConfigPolicyMap map[string]SwitchControllerAutoConfigPolicyInput

func (SwitchControllerAutoConfigPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (i SwitchControllerAutoConfigPolicyMap) ToSwitchControllerAutoConfigPolicyMapOutput() SwitchControllerAutoConfigPolicyMapOutput {
	return i.ToSwitchControllerAutoConfigPolicyMapOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigPolicyMap) ToSwitchControllerAutoConfigPolicyMapOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigPolicyMapOutput)
}

type SwitchControllerAutoConfigPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (o SwitchControllerAutoConfigPolicyOutput) ToSwitchControllerAutoConfigPolicyOutput() SwitchControllerAutoConfigPolicyOutput {
	return o
}

func (o SwitchControllerAutoConfigPolicyOutput) ToSwitchControllerAutoConfigPolicyOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyOutput {
	return o
}

type SwitchControllerAutoConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (o SwitchControllerAutoConfigPolicyArrayOutput) ToSwitchControllerAutoConfigPolicyArrayOutput() SwitchControllerAutoConfigPolicyArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigPolicyArrayOutput) ToSwitchControllerAutoConfigPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerAutoConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerAutoConfigPolicy {
		return vs[0].([]*SwitchControllerAutoConfigPolicy)[vs[1].(int)]
	}).(SwitchControllerAutoConfigPolicyOutput)
}

type SwitchControllerAutoConfigPolicyMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerAutoConfigPolicy)(nil)).Elem()
}

func (o SwitchControllerAutoConfigPolicyMapOutput) ToSwitchControllerAutoConfigPolicyMapOutput() SwitchControllerAutoConfigPolicyMapOutput {
	return o
}

func (o SwitchControllerAutoConfigPolicyMapOutput) ToSwitchControllerAutoConfigPolicyMapOutputWithContext(ctx context.Context) SwitchControllerAutoConfigPolicyMapOutput {
	return o
}

func (o SwitchControllerAutoConfigPolicyMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerAutoConfigPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerAutoConfigPolicy {
		return vs[0].(map[string]*SwitchControllerAutoConfigPolicy)[vs[1].(string)]
	}).(SwitchControllerAutoConfigPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigPolicyInput)(nil)).Elem(), &SwitchControllerAutoConfigPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigPolicyArrayInput)(nil)).Elem(), SwitchControllerAutoConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigPolicyMapInput)(nil)).Elem(), SwitchControllerAutoConfigPolicyMap{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigPolicyMapOutput{})
}
