// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReportChart struct {
	pulumi.CustomResourceState

	Background          pulumi.StringOutput                  `pulumi:"background"`
	Category            pulumi.StringOutput                  `pulumi:"category"`
	CategorySeries      ReportChartCategorySeriesOutput      `pulumi:"categorySeries"`
	ColorPalette        pulumi.StringOutput                  `pulumi:"colorPalette"`
	Columns             ReportChartColumnArrayOutput         `pulumi:"columns"`
	Comments            pulumi.StringOutput                  `pulumi:"comments"`
	Dataset             pulumi.StringOutput                  `pulumi:"dataset"`
	Dimension           pulumi.StringOutput                  `pulumi:"dimension"`
	DrillDownCharts     ReportChartDrillDownChartArrayOutput `pulumi:"drillDownCharts"`
	DynamicSortSubtable pulumi.StringPtrOutput               `pulumi:"dynamicSortSubtable"`
	Favorite            pulumi.StringOutput                  `pulumi:"favorite"`
	GraphType           pulumi.StringOutput                  `pulumi:"graphType"`
	Legend              pulumi.StringOutput                  `pulumi:"legend"`
	LegendFontSize      pulumi.IntOutput                     `pulumi:"legendFontSize"`
	Name                pulumi.StringOutput                  `pulumi:"name"`
	Period              pulumi.StringOutput                  `pulumi:"period"`
	Policy              pulumi.IntOutput                     `pulumi:"policy"`
	Style               pulumi.StringOutput                  `pulumi:"style"`
	Title               pulumi.StringOutput                  `pulumi:"title"`
	TitleFontSize       pulumi.IntOutput                     `pulumi:"titleFontSize"`
	Type                pulumi.StringOutput                  `pulumi:"type"`
	ValueSeries         ReportChartValueSeriesOutput         `pulumi:"valueSeries"`
	Vdomparam           pulumi.StringPtrOutput               `pulumi:"vdomparam"`
	XSeries             ReportChartXSeriesOutput             `pulumi:"xSeries"`
	YSeries             ReportChartYSeriesOutput             `pulumi:"ySeries"`
}

// NewReportChart registers a new resource with the given unique name, arguments, and options.
func NewReportChart(ctx *pulumi.Context,
	name string, args *ReportChartArgs, opts ...pulumi.ResourceOption) (*ReportChart, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Comments == nil {
		return nil, errors.New("invalid value for required argument 'Comments'")
	}
	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ReportChart
	err := ctx.RegisterResource("fortios:index/reportChart:ReportChart", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportChart gets an existing ReportChart resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportChart(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportChartState, opts ...pulumi.ResourceOption) (*ReportChart, error) {
	var resource ReportChart
	err := ctx.ReadResource("fortios:index/reportChart:ReportChart", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportChart resources.
type reportChartState struct {
	Background          *string                     `pulumi:"background"`
	Category            *string                     `pulumi:"category"`
	CategorySeries      *ReportChartCategorySeries  `pulumi:"categorySeries"`
	ColorPalette        *string                     `pulumi:"colorPalette"`
	Columns             []ReportChartColumn         `pulumi:"columns"`
	Comments            *string                     `pulumi:"comments"`
	Dataset             *string                     `pulumi:"dataset"`
	Dimension           *string                     `pulumi:"dimension"`
	DrillDownCharts     []ReportChartDrillDownChart `pulumi:"drillDownCharts"`
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	Favorite            *string                     `pulumi:"favorite"`
	GraphType           *string                     `pulumi:"graphType"`
	Legend              *string                     `pulumi:"legend"`
	LegendFontSize      *int                        `pulumi:"legendFontSize"`
	Name                *string                     `pulumi:"name"`
	Period              *string                     `pulumi:"period"`
	Policy              *int                        `pulumi:"policy"`
	Style               *string                     `pulumi:"style"`
	Title               *string                     `pulumi:"title"`
	TitleFontSize       *int                        `pulumi:"titleFontSize"`
	Type                *string                     `pulumi:"type"`
	ValueSeries         *ReportChartValueSeries     `pulumi:"valueSeries"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
	XSeries             *ReportChartXSeries         `pulumi:"xSeries"`
	YSeries             *ReportChartYSeries         `pulumi:"ySeries"`
}

type ReportChartState struct {
	Background          pulumi.StringPtrInput
	Category            pulumi.StringPtrInput
	CategorySeries      ReportChartCategorySeriesPtrInput
	ColorPalette        pulumi.StringPtrInput
	Columns             ReportChartColumnArrayInput
	Comments            pulumi.StringPtrInput
	Dataset             pulumi.StringPtrInput
	Dimension           pulumi.StringPtrInput
	DrillDownCharts     ReportChartDrillDownChartArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	Favorite            pulumi.StringPtrInput
	GraphType           pulumi.StringPtrInput
	Legend              pulumi.StringPtrInput
	LegendFontSize      pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	Period              pulumi.StringPtrInput
	Policy              pulumi.IntPtrInput
	Style               pulumi.StringPtrInput
	Title               pulumi.StringPtrInput
	TitleFontSize       pulumi.IntPtrInput
	Type                pulumi.StringPtrInput
	ValueSeries         ReportChartValueSeriesPtrInput
	Vdomparam           pulumi.StringPtrInput
	XSeries             ReportChartXSeriesPtrInput
	YSeries             ReportChartYSeriesPtrInput
}

func (ReportChartState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportChartState)(nil)).Elem()
}

type reportChartArgs struct {
	Background          *string                     `pulumi:"background"`
	Category            *string                     `pulumi:"category"`
	CategorySeries      *ReportChartCategorySeries  `pulumi:"categorySeries"`
	ColorPalette        *string                     `pulumi:"colorPalette"`
	Columns             []ReportChartColumn         `pulumi:"columns"`
	Comments            string                      `pulumi:"comments"`
	Dataset             string                      `pulumi:"dataset"`
	Dimension           *string                     `pulumi:"dimension"`
	DrillDownCharts     []ReportChartDrillDownChart `pulumi:"drillDownCharts"`
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	Favorite            *string                     `pulumi:"favorite"`
	GraphType           *string                     `pulumi:"graphType"`
	Legend              *string                     `pulumi:"legend"`
	LegendFontSize      *int                        `pulumi:"legendFontSize"`
	Name                *string                     `pulumi:"name"`
	Period              *string                     `pulumi:"period"`
	Policy              *int                        `pulumi:"policy"`
	Style               *string                     `pulumi:"style"`
	Title               *string                     `pulumi:"title"`
	TitleFontSize       *int                        `pulumi:"titleFontSize"`
	Type                *string                     `pulumi:"type"`
	ValueSeries         *ReportChartValueSeries     `pulumi:"valueSeries"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
	XSeries             *ReportChartXSeries         `pulumi:"xSeries"`
	YSeries             *ReportChartYSeries         `pulumi:"ySeries"`
}

// The set of arguments for constructing a ReportChart resource.
type ReportChartArgs struct {
	Background          pulumi.StringPtrInput
	Category            pulumi.StringPtrInput
	CategorySeries      ReportChartCategorySeriesPtrInput
	ColorPalette        pulumi.StringPtrInput
	Columns             ReportChartColumnArrayInput
	Comments            pulumi.StringInput
	Dataset             pulumi.StringInput
	Dimension           pulumi.StringPtrInput
	DrillDownCharts     ReportChartDrillDownChartArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	Favorite            pulumi.StringPtrInput
	GraphType           pulumi.StringPtrInput
	Legend              pulumi.StringPtrInput
	LegendFontSize      pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	Period              pulumi.StringPtrInput
	Policy              pulumi.IntPtrInput
	Style               pulumi.StringPtrInput
	Title               pulumi.StringPtrInput
	TitleFontSize       pulumi.IntPtrInput
	Type                pulumi.StringPtrInput
	ValueSeries         ReportChartValueSeriesPtrInput
	Vdomparam           pulumi.StringPtrInput
	XSeries             ReportChartXSeriesPtrInput
	YSeries             ReportChartYSeriesPtrInput
}

func (ReportChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportChartArgs)(nil)).Elem()
}

type ReportChartInput interface {
	pulumi.Input

	ToReportChartOutput() ReportChartOutput
	ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput
}

func (*ReportChart) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChart)(nil)).Elem()
}

func (i *ReportChart) ToReportChartOutput() ReportChartOutput {
	return i.ToReportChartOutputWithContext(context.Background())
}

func (i *ReportChart) ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartOutput)
}

// ReportChartArrayInput is an input type that accepts ReportChartArray and ReportChartArrayOutput values.
// You can construct a concrete instance of `ReportChartArrayInput` via:
//
//	ReportChartArray{ ReportChartArgs{...} }
type ReportChartArrayInput interface {
	pulumi.Input

	ToReportChartArrayOutput() ReportChartArrayOutput
	ToReportChartArrayOutputWithContext(context.Context) ReportChartArrayOutput
}

type ReportChartArray []ReportChartInput

func (ReportChartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportChart)(nil)).Elem()
}

func (i ReportChartArray) ToReportChartArrayOutput() ReportChartArrayOutput {
	return i.ToReportChartArrayOutputWithContext(context.Background())
}

func (i ReportChartArray) ToReportChartArrayOutputWithContext(ctx context.Context) ReportChartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartArrayOutput)
}

// ReportChartMapInput is an input type that accepts ReportChartMap and ReportChartMapOutput values.
// You can construct a concrete instance of `ReportChartMapInput` via:
//
//	ReportChartMap{ "key": ReportChartArgs{...} }
type ReportChartMapInput interface {
	pulumi.Input

	ToReportChartMapOutput() ReportChartMapOutput
	ToReportChartMapOutputWithContext(context.Context) ReportChartMapOutput
}

type ReportChartMap map[string]ReportChartInput

func (ReportChartMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportChart)(nil)).Elem()
}

func (i ReportChartMap) ToReportChartMapOutput() ReportChartMapOutput {
	return i.ToReportChartMapOutputWithContext(context.Background())
}

func (i ReportChartMap) ToReportChartMapOutputWithContext(ctx context.Context) ReportChartMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartMapOutput)
}

type ReportChartOutput struct{ *pulumi.OutputState }

func (ReportChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChart)(nil)).Elem()
}

func (o ReportChartOutput) ToReportChartOutput() ReportChartOutput {
	return o
}

func (o ReportChartOutput) ToReportChartOutputWithContext(ctx context.Context) ReportChartOutput {
	return o
}

func (o ReportChartOutput) Background() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Background }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

func (o ReportChartOutput) CategorySeries() ReportChartCategorySeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartCategorySeriesOutput { return v.CategorySeries }).(ReportChartCategorySeriesOutput)
}

func (o ReportChartOutput) ColorPalette() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.ColorPalette }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Columns() ReportChartColumnArrayOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartColumnArrayOutput { return v.Columns }).(ReportChartColumnArrayOutput)
}

func (o ReportChartOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Dimension() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Dimension }).(pulumi.StringOutput)
}

func (o ReportChartOutput) DrillDownCharts() ReportChartDrillDownChartArrayOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartDrillDownChartArrayOutput { return v.DrillDownCharts }).(ReportChartDrillDownChartArrayOutput)
}

func (o ReportChartOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o ReportChartOutput) Favorite() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Favorite }).(pulumi.StringOutput)
}

func (o ReportChartOutput) GraphType() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.GraphType }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Legend() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Legend }).(pulumi.StringOutput)
}

func (o ReportChartOutput) LegendFontSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.LegendFontSize }).(pulumi.IntOutput)
}

func (o ReportChartOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Period }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Policy() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.Policy }).(pulumi.IntOutput)
}

func (o ReportChartOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Style }).(pulumi.StringOutput)
}

func (o ReportChartOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

func (o ReportChartOutput) TitleFontSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.IntOutput { return v.TitleFontSize }).(pulumi.IntOutput)
}

func (o ReportChartOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o ReportChartOutput) ValueSeries() ReportChartValueSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartValueSeriesOutput { return v.ValueSeries }).(ReportChartValueSeriesOutput)
}

func (o ReportChartOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChart) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o ReportChartOutput) XSeries() ReportChartXSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartXSeriesOutput { return v.XSeries }).(ReportChartXSeriesOutput)
}

func (o ReportChartOutput) YSeries() ReportChartYSeriesOutput {
	return o.ApplyT(func(v *ReportChart) ReportChartYSeriesOutput { return v.YSeries }).(ReportChartYSeriesOutput)
}

type ReportChartArrayOutput struct{ *pulumi.OutputState }

func (ReportChartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportChart)(nil)).Elem()
}

func (o ReportChartArrayOutput) ToReportChartArrayOutput() ReportChartArrayOutput {
	return o
}

func (o ReportChartArrayOutput) ToReportChartArrayOutputWithContext(ctx context.Context) ReportChartArrayOutput {
	return o
}

func (o ReportChartArrayOutput) Index(i pulumi.IntInput) ReportChartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportChart {
		return vs[0].([]*ReportChart)[vs[1].(int)]
	}).(ReportChartOutput)
}

type ReportChartMapOutput struct{ *pulumi.OutputState }

func (ReportChartMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportChart)(nil)).Elem()
}

func (o ReportChartMapOutput) ToReportChartMapOutput() ReportChartMapOutput {
	return o
}

func (o ReportChartMapOutput) ToReportChartMapOutputWithContext(ctx context.Context) ReportChartMapOutput {
	return o
}

func (o ReportChartMapOutput) MapIndex(k pulumi.StringInput) ReportChartOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportChart {
		return vs[0].(map[string]*ReportChart)[vs[1].(string)]
	}).(ReportChartOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartInput)(nil)).Elem(), &ReportChart{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartArrayInput)(nil)).Elem(), ReportChartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartMapInput)(nil)).Elem(), ReportChartMap{})
	pulumi.RegisterOutputType(ReportChartOutput{})
	pulumi.RegisterOutputType(ReportChartArrayOutput{})
	pulumi.RegisterOutputType(ReportChartMapOutput{})
}
