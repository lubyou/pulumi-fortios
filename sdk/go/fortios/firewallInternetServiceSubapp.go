// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallInternetServiceSubapp struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput                         `pulumi:"dynamicSortSubtable"`
	Fosid               pulumi.IntOutput                               `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput                         `pulumi:"getAllTables"`
	SubApps             FirewallInternetServiceSubappSubAppArrayOutput `pulumi:"subApps"`
	Vdomparam           pulumi.StringPtrOutput                         `pulumi:"vdomparam"`
}

// NewFirewallInternetServiceSubapp registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetServiceSubapp(ctx *pulumi.Context,
	name string, args *FirewallInternetServiceSubappArgs, opts ...pulumi.ResourceOption) (*FirewallInternetServiceSubapp, error) {
	if args == nil {
		args = &FirewallInternetServiceSubappArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallInternetServiceSubapp
	err := ctx.RegisterResource("fortios:index/firewallInternetServiceSubapp:FirewallInternetServiceSubapp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetServiceSubapp gets an existing FirewallInternetServiceSubapp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetServiceSubapp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetServiceSubappState, opts ...pulumi.ResourceOption) (*FirewallInternetServiceSubapp, error) {
	var resource FirewallInternetServiceSubapp
	err := ctx.ReadResource("fortios:index/firewallInternetServiceSubapp:FirewallInternetServiceSubapp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetServiceSubapp resources.
type firewallInternetServiceSubappState struct {
	DynamicSortSubtable *string                               `pulumi:"dynamicSortSubtable"`
	Fosid               *int                                  `pulumi:"fosid"`
	GetAllTables        *string                               `pulumi:"getAllTables"`
	SubApps             []FirewallInternetServiceSubappSubApp `pulumi:"subApps"`
	Vdomparam           *string                               `pulumi:"vdomparam"`
}

type FirewallInternetServiceSubappState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	SubApps             FirewallInternetServiceSubappSubAppArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallInternetServiceSubappState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceSubappState)(nil)).Elem()
}

type firewallInternetServiceSubappArgs struct {
	DynamicSortSubtable *string                               `pulumi:"dynamicSortSubtable"`
	Fosid               *int                                  `pulumi:"fosid"`
	GetAllTables        *string                               `pulumi:"getAllTables"`
	SubApps             []FirewallInternetServiceSubappSubApp `pulumi:"subApps"`
	Vdomparam           *string                               `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetServiceSubapp resource.
type FirewallInternetServiceSubappArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	SubApps             FirewallInternetServiceSubappSubAppArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallInternetServiceSubappArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceSubappArgs)(nil)).Elem()
}

type FirewallInternetServiceSubappInput interface {
	pulumi.Input

	ToFirewallInternetServiceSubappOutput() FirewallInternetServiceSubappOutput
	ToFirewallInternetServiceSubappOutputWithContext(ctx context.Context) FirewallInternetServiceSubappOutput
}

func (*FirewallInternetServiceSubapp) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceSubapp)(nil)).Elem()
}

func (i *FirewallInternetServiceSubapp) ToFirewallInternetServiceSubappOutput() FirewallInternetServiceSubappOutput {
	return i.ToFirewallInternetServiceSubappOutputWithContext(context.Background())
}

func (i *FirewallInternetServiceSubapp) ToFirewallInternetServiceSubappOutputWithContext(ctx context.Context) FirewallInternetServiceSubappOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceSubappOutput)
}

func (i *FirewallInternetServiceSubapp) ToOutput(ctx context.Context) pulumix.Output[*FirewallInternetServiceSubapp] {
	return pulumix.Output[*FirewallInternetServiceSubapp]{
		OutputState: i.ToFirewallInternetServiceSubappOutputWithContext(ctx).OutputState,
	}
}

// FirewallInternetServiceSubappArrayInput is an input type that accepts FirewallInternetServiceSubappArray and FirewallInternetServiceSubappArrayOutput values.
// You can construct a concrete instance of `FirewallInternetServiceSubappArrayInput` via:
//
//	FirewallInternetServiceSubappArray{ FirewallInternetServiceSubappArgs{...} }
type FirewallInternetServiceSubappArrayInput interface {
	pulumi.Input

	ToFirewallInternetServiceSubappArrayOutput() FirewallInternetServiceSubappArrayOutput
	ToFirewallInternetServiceSubappArrayOutputWithContext(context.Context) FirewallInternetServiceSubappArrayOutput
}

type FirewallInternetServiceSubappArray []FirewallInternetServiceSubappInput

func (FirewallInternetServiceSubappArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceSubapp)(nil)).Elem()
}

func (i FirewallInternetServiceSubappArray) ToFirewallInternetServiceSubappArrayOutput() FirewallInternetServiceSubappArrayOutput {
	return i.ToFirewallInternetServiceSubappArrayOutputWithContext(context.Background())
}

func (i FirewallInternetServiceSubappArray) ToFirewallInternetServiceSubappArrayOutputWithContext(ctx context.Context) FirewallInternetServiceSubappArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceSubappArrayOutput)
}

func (i FirewallInternetServiceSubappArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallInternetServiceSubapp] {
	return pulumix.Output[[]*FirewallInternetServiceSubapp]{
		OutputState: i.ToFirewallInternetServiceSubappArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallInternetServiceSubappMapInput is an input type that accepts FirewallInternetServiceSubappMap and FirewallInternetServiceSubappMapOutput values.
// You can construct a concrete instance of `FirewallInternetServiceSubappMapInput` via:
//
//	FirewallInternetServiceSubappMap{ "key": FirewallInternetServiceSubappArgs{...} }
type FirewallInternetServiceSubappMapInput interface {
	pulumi.Input

	ToFirewallInternetServiceSubappMapOutput() FirewallInternetServiceSubappMapOutput
	ToFirewallInternetServiceSubappMapOutputWithContext(context.Context) FirewallInternetServiceSubappMapOutput
}

type FirewallInternetServiceSubappMap map[string]FirewallInternetServiceSubappInput

func (FirewallInternetServiceSubappMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceSubapp)(nil)).Elem()
}

func (i FirewallInternetServiceSubappMap) ToFirewallInternetServiceSubappMapOutput() FirewallInternetServiceSubappMapOutput {
	return i.ToFirewallInternetServiceSubappMapOutputWithContext(context.Background())
}

func (i FirewallInternetServiceSubappMap) ToFirewallInternetServiceSubappMapOutputWithContext(ctx context.Context) FirewallInternetServiceSubappMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceSubappMapOutput)
}

func (i FirewallInternetServiceSubappMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallInternetServiceSubapp] {
	return pulumix.Output[map[string]*FirewallInternetServiceSubapp]{
		OutputState: i.ToFirewallInternetServiceSubappMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallInternetServiceSubappOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceSubappOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceSubapp)(nil)).Elem()
}

func (o FirewallInternetServiceSubappOutput) ToFirewallInternetServiceSubappOutput() FirewallInternetServiceSubappOutput {
	return o
}

func (o FirewallInternetServiceSubappOutput) ToFirewallInternetServiceSubappOutputWithContext(ctx context.Context) FirewallInternetServiceSubappOutput {
	return o
}

func (o FirewallInternetServiceSubappOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallInternetServiceSubapp] {
	return pulumix.Output[*FirewallInternetServiceSubapp]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceSubappOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetServiceSubapp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallInternetServiceSubappOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceSubapp) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceSubappOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetServiceSubapp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallInternetServiceSubappOutput) SubApps() FirewallInternetServiceSubappSubAppArrayOutput {
	return o.ApplyT(func(v *FirewallInternetServiceSubapp) FirewallInternetServiceSubappSubAppArrayOutput {
		return v.SubApps
	}).(FirewallInternetServiceSubappSubAppArrayOutput)
}

func (o FirewallInternetServiceSubappOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetServiceSubapp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallInternetServiceSubappArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceSubappArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceSubapp)(nil)).Elem()
}

func (o FirewallInternetServiceSubappArrayOutput) ToFirewallInternetServiceSubappArrayOutput() FirewallInternetServiceSubappArrayOutput {
	return o
}

func (o FirewallInternetServiceSubappArrayOutput) ToFirewallInternetServiceSubappArrayOutputWithContext(ctx context.Context) FirewallInternetServiceSubappArrayOutput {
	return o
}

func (o FirewallInternetServiceSubappArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallInternetServiceSubapp] {
	return pulumix.Output[[]*FirewallInternetServiceSubapp]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceSubappArrayOutput) Index(i pulumi.IntInput) FirewallInternetServiceSubappOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetServiceSubapp {
		return vs[0].([]*FirewallInternetServiceSubapp)[vs[1].(int)]
	}).(FirewallInternetServiceSubappOutput)
}

type FirewallInternetServiceSubappMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceSubappMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceSubapp)(nil)).Elem()
}

func (o FirewallInternetServiceSubappMapOutput) ToFirewallInternetServiceSubappMapOutput() FirewallInternetServiceSubappMapOutput {
	return o
}

func (o FirewallInternetServiceSubappMapOutput) ToFirewallInternetServiceSubappMapOutputWithContext(ctx context.Context) FirewallInternetServiceSubappMapOutput {
	return o
}

func (o FirewallInternetServiceSubappMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallInternetServiceSubapp] {
	return pulumix.Output[map[string]*FirewallInternetServiceSubapp]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceSubappMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetServiceSubappOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetServiceSubapp {
		return vs[0].(map[string]*FirewallInternetServiceSubapp)[vs[1].(string)]
	}).(FirewallInternetServiceSubappOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceSubappInput)(nil)).Elem(), &FirewallInternetServiceSubapp{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceSubappArrayInput)(nil)).Elem(), FirewallInternetServiceSubappArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceSubappMapInput)(nil)).Elem(), FirewallInternetServiceSubappMap{})
	pulumi.RegisterOutputType(FirewallInternetServiceSubappOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceSubappArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceSubappMapOutput{})
}
