// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogSetting struct {
	pulumi.CustomResourceState

	AnonymizationHash    pulumi.StringOutput                 `pulumi:"anonymizationHash"`
	BriefTrafficFormat   pulumi.StringOutput                 `pulumi:"briefTrafficFormat"`
	CustomLogFields      LogSettingCustomLogFieldArrayOutput `pulumi:"customLogFields"`
	DaemonLog            pulumi.StringOutput                 `pulumi:"daemonLog"`
	DynamicSortSubtable  pulumi.StringPtrOutput              `pulumi:"dynamicSortSubtable"`
	ExpolicyImplicitLog  pulumi.StringOutput                 `pulumi:"expolicyImplicitLog"`
	FazOverride          pulumi.StringOutput                 `pulumi:"fazOverride"`
	Fwpolicy6ImplicitLog pulumi.StringOutput                 `pulumi:"fwpolicy6ImplicitLog"`
	FwpolicyImplicitLog  pulumi.StringOutput                 `pulumi:"fwpolicyImplicitLog"`
	LocalInAllow         pulumi.StringOutput                 `pulumi:"localInAllow"`
	LocalInDenyBroadcast pulumi.StringOutput                 `pulumi:"localInDenyBroadcast"`
	LocalInDenyUnicast   pulumi.StringOutput                 `pulumi:"localInDenyUnicast"`
	LocalOut             pulumi.StringOutput                 `pulumi:"localOut"`
	LocalOutIocDetection pulumi.StringOutput                 `pulumi:"localOutIocDetection"`
	LogInvalidPacket     pulumi.StringOutput                 `pulumi:"logInvalidPacket"`
	LogPolicyComment     pulumi.StringOutput                 `pulumi:"logPolicyComment"`
	LogPolicyName        pulumi.StringOutput                 `pulumi:"logPolicyName"`
	LogUserInUpper       pulumi.StringOutput                 `pulumi:"logUserInUpper"`
	NeighborEvent        pulumi.StringOutput                 `pulumi:"neighborEvent"`
	ResolveIp            pulumi.StringOutput                 `pulumi:"resolveIp"`
	ResolvePort          pulumi.StringOutput                 `pulumi:"resolvePort"`
	RestApiGet           pulumi.StringOutput                 `pulumi:"restApiGet"`
	RestApiSet           pulumi.StringOutput                 `pulumi:"restApiSet"`
	SyslogOverride       pulumi.StringOutput                 `pulumi:"syslogOverride"`
	UserAnonymize        pulumi.StringOutput                 `pulumi:"userAnonymize"`
	Vdomparam            pulumi.StringPtrOutput              `pulumi:"vdomparam"`
}

// NewLogSetting registers a new resource with the given unique name, arguments, and options.
func NewLogSetting(ctx *pulumi.Context,
	name string, args *LogSettingArgs, opts ...pulumi.ResourceOption) (*LogSetting, error) {
	if args == nil {
		args = &LogSettingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogSetting
	err := ctx.RegisterResource("fortios:index/logSetting:LogSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSetting gets an existing LogSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSettingState, opts ...pulumi.ResourceOption) (*LogSetting, error) {
	var resource LogSetting
	err := ctx.ReadResource("fortios:index/logSetting:LogSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSetting resources.
type logSettingState struct {
	AnonymizationHash    *string                    `pulumi:"anonymizationHash"`
	BriefTrafficFormat   *string                    `pulumi:"briefTrafficFormat"`
	CustomLogFields      []LogSettingCustomLogField `pulumi:"customLogFields"`
	DaemonLog            *string                    `pulumi:"daemonLog"`
	DynamicSortSubtable  *string                    `pulumi:"dynamicSortSubtable"`
	ExpolicyImplicitLog  *string                    `pulumi:"expolicyImplicitLog"`
	FazOverride          *string                    `pulumi:"fazOverride"`
	Fwpolicy6ImplicitLog *string                    `pulumi:"fwpolicy6ImplicitLog"`
	FwpolicyImplicitLog  *string                    `pulumi:"fwpolicyImplicitLog"`
	LocalInAllow         *string                    `pulumi:"localInAllow"`
	LocalInDenyBroadcast *string                    `pulumi:"localInDenyBroadcast"`
	LocalInDenyUnicast   *string                    `pulumi:"localInDenyUnicast"`
	LocalOut             *string                    `pulumi:"localOut"`
	LocalOutIocDetection *string                    `pulumi:"localOutIocDetection"`
	LogInvalidPacket     *string                    `pulumi:"logInvalidPacket"`
	LogPolicyComment     *string                    `pulumi:"logPolicyComment"`
	LogPolicyName        *string                    `pulumi:"logPolicyName"`
	LogUserInUpper       *string                    `pulumi:"logUserInUpper"`
	NeighborEvent        *string                    `pulumi:"neighborEvent"`
	ResolveIp            *string                    `pulumi:"resolveIp"`
	ResolvePort          *string                    `pulumi:"resolvePort"`
	RestApiGet           *string                    `pulumi:"restApiGet"`
	RestApiSet           *string                    `pulumi:"restApiSet"`
	SyslogOverride       *string                    `pulumi:"syslogOverride"`
	UserAnonymize        *string                    `pulumi:"userAnonymize"`
	Vdomparam            *string                    `pulumi:"vdomparam"`
}

type LogSettingState struct {
	AnonymizationHash    pulumi.StringPtrInput
	BriefTrafficFormat   pulumi.StringPtrInput
	CustomLogFields      LogSettingCustomLogFieldArrayInput
	DaemonLog            pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	ExpolicyImplicitLog  pulumi.StringPtrInput
	FazOverride          pulumi.StringPtrInput
	Fwpolicy6ImplicitLog pulumi.StringPtrInput
	FwpolicyImplicitLog  pulumi.StringPtrInput
	LocalInAllow         pulumi.StringPtrInput
	LocalInDenyBroadcast pulumi.StringPtrInput
	LocalInDenyUnicast   pulumi.StringPtrInput
	LocalOut             pulumi.StringPtrInput
	LocalOutIocDetection pulumi.StringPtrInput
	LogInvalidPacket     pulumi.StringPtrInput
	LogPolicyComment     pulumi.StringPtrInput
	LogPolicyName        pulumi.StringPtrInput
	LogUserInUpper       pulumi.StringPtrInput
	NeighborEvent        pulumi.StringPtrInput
	ResolveIp            pulumi.StringPtrInput
	ResolvePort          pulumi.StringPtrInput
	RestApiGet           pulumi.StringPtrInput
	RestApiSet           pulumi.StringPtrInput
	SyslogOverride       pulumi.StringPtrInput
	UserAnonymize        pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (LogSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSettingState)(nil)).Elem()
}

type logSettingArgs struct {
	AnonymizationHash    *string                    `pulumi:"anonymizationHash"`
	BriefTrafficFormat   *string                    `pulumi:"briefTrafficFormat"`
	CustomLogFields      []LogSettingCustomLogField `pulumi:"customLogFields"`
	DaemonLog            *string                    `pulumi:"daemonLog"`
	DynamicSortSubtable  *string                    `pulumi:"dynamicSortSubtable"`
	ExpolicyImplicitLog  *string                    `pulumi:"expolicyImplicitLog"`
	FazOverride          *string                    `pulumi:"fazOverride"`
	Fwpolicy6ImplicitLog *string                    `pulumi:"fwpolicy6ImplicitLog"`
	FwpolicyImplicitLog  *string                    `pulumi:"fwpolicyImplicitLog"`
	LocalInAllow         *string                    `pulumi:"localInAllow"`
	LocalInDenyBroadcast *string                    `pulumi:"localInDenyBroadcast"`
	LocalInDenyUnicast   *string                    `pulumi:"localInDenyUnicast"`
	LocalOut             *string                    `pulumi:"localOut"`
	LocalOutIocDetection *string                    `pulumi:"localOutIocDetection"`
	LogInvalidPacket     *string                    `pulumi:"logInvalidPacket"`
	LogPolicyComment     *string                    `pulumi:"logPolicyComment"`
	LogPolicyName        *string                    `pulumi:"logPolicyName"`
	LogUserInUpper       *string                    `pulumi:"logUserInUpper"`
	NeighborEvent        *string                    `pulumi:"neighborEvent"`
	ResolveIp            *string                    `pulumi:"resolveIp"`
	ResolvePort          *string                    `pulumi:"resolvePort"`
	RestApiGet           *string                    `pulumi:"restApiGet"`
	RestApiSet           *string                    `pulumi:"restApiSet"`
	SyslogOverride       *string                    `pulumi:"syslogOverride"`
	UserAnonymize        *string                    `pulumi:"userAnonymize"`
	Vdomparam            *string                    `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogSetting resource.
type LogSettingArgs struct {
	AnonymizationHash    pulumi.StringPtrInput
	BriefTrafficFormat   pulumi.StringPtrInput
	CustomLogFields      LogSettingCustomLogFieldArrayInput
	DaemonLog            pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	ExpolicyImplicitLog  pulumi.StringPtrInput
	FazOverride          pulumi.StringPtrInput
	Fwpolicy6ImplicitLog pulumi.StringPtrInput
	FwpolicyImplicitLog  pulumi.StringPtrInput
	LocalInAllow         pulumi.StringPtrInput
	LocalInDenyBroadcast pulumi.StringPtrInput
	LocalInDenyUnicast   pulumi.StringPtrInput
	LocalOut             pulumi.StringPtrInput
	LocalOutIocDetection pulumi.StringPtrInput
	LogInvalidPacket     pulumi.StringPtrInput
	LogPolicyComment     pulumi.StringPtrInput
	LogPolicyName        pulumi.StringPtrInput
	LogUserInUpper       pulumi.StringPtrInput
	NeighborEvent        pulumi.StringPtrInput
	ResolveIp            pulumi.StringPtrInput
	ResolvePort          pulumi.StringPtrInput
	RestApiGet           pulumi.StringPtrInput
	RestApiSet           pulumi.StringPtrInput
	SyslogOverride       pulumi.StringPtrInput
	UserAnonymize        pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (LogSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSettingArgs)(nil)).Elem()
}

type LogSettingInput interface {
	pulumi.Input

	ToLogSettingOutput() LogSettingOutput
	ToLogSettingOutputWithContext(ctx context.Context) LogSettingOutput
}

func (*LogSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSetting)(nil)).Elem()
}

func (i *LogSetting) ToLogSettingOutput() LogSettingOutput {
	return i.ToLogSettingOutputWithContext(context.Background())
}

func (i *LogSetting) ToLogSettingOutputWithContext(ctx context.Context) LogSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingOutput)
}

// LogSettingArrayInput is an input type that accepts LogSettingArray and LogSettingArrayOutput values.
// You can construct a concrete instance of `LogSettingArrayInput` via:
//
//	LogSettingArray{ LogSettingArgs{...} }
type LogSettingArrayInput interface {
	pulumi.Input

	ToLogSettingArrayOutput() LogSettingArrayOutput
	ToLogSettingArrayOutputWithContext(context.Context) LogSettingArrayOutput
}

type LogSettingArray []LogSettingInput

func (LogSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSetting)(nil)).Elem()
}

func (i LogSettingArray) ToLogSettingArrayOutput() LogSettingArrayOutput {
	return i.ToLogSettingArrayOutputWithContext(context.Background())
}

func (i LogSettingArray) ToLogSettingArrayOutputWithContext(ctx context.Context) LogSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingArrayOutput)
}

// LogSettingMapInput is an input type that accepts LogSettingMap and LogSettingMapOutput values.
// You can construct a concrete instance of `LogSettingMapInput` via:
//
//	LogSettingMap{ "key": LogSettingArgs{...} }
type LogSettingMapInput interface {
	pulumi.Input

	ToLogSettingMapOutput() LogSettingMapOutput
	ToLogSettingMapOutputWithContext(context.Context) LogSettingMapOutput
}

type LogSettingMap map[string]LogSettingInput

func (LogSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSetting)(nil)).Elem()
}

func (i LogSettingMap) ToLogSettingMapOutput() LogSettingMapOutput {
	return i.ToLogSettingMapOutputWithContext(context.Background())
}

func (i LogSettingMap) ToLogSettingMapOutputWithContext(ctx context.Context) LogSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingMapOutput)
}

type LogSettingOutput struct{ *pulumi.OutputState }

func (LogSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSetting)(nil)).Elem()
}

func (o LogSettingOutput) ToLogSettingOutput() LogSettingOutput {
	return o
}

func (o LogSettingOutput) ToLogSettingOutputWithContext(ctx context.Context) LogSettingOutput {
	return o
}

func (o LogSettingOutput) AnonymizationHash() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.AnonymizationHash }).(pulumi.StringOutput)
}

func (o LogSettingOutput) BriefTrafficFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.BriefTrafficFormat }).(pulumi.StringOutput)
}

func (o LogSettingOutput) CustomLogFields() LogSettingCustomLogFieldArrayOutput {
	return o.ApplyT(func(v *LogSetting) LogSettingCustomLogFieldArrayOutput { return v.CustomLogFields }).(LogSettingCustomLogFieldArrayOutput)
}

func (o LogSettingOutput) DaemonLog() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.DaemonLog }).(pulumi.StringOutput)
}

func (o LogSettingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogSettingOutput) ExpolicyImplicitLog() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.ExpolicyImplicitLog }).(pulumi.StringOutput)
}

func (o LogSettingOutput) FazOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.FazOverride }).(pulumi.StringOutput)
}

func (o LogSettingOutput) Fwpolicy6ImplicitLog() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.Fwpolicy6ImplicitLog }).(pulumi.StringOutput)
}

func (o LogSettingOutput) FwpolicyImplicitLog() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.FwpolicyImplicitLog }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LocalInAllow() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LocalInAllow }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LocalInDenyBroadcast() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LocalInDenyBroadcast }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LocalInDenyUnicast() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LocalInDenyUnicast }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LocalOut() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LocalOut }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LocalOutIocDetection() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LocalOutIocDetection }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LogInvalidPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LogInvalidPacket }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LogPolicyComment() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LogPolicyComment }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LogPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LogPolicyName }).(pulumi.StringOutput)
}

func (o LogSettingOutput) LogUserInUpper() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.LogUserInUpper }).(pulumi.StringOutput)
}

func (o LogSettingOutput) NeighborEvent() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.NeighborEvent }).(pulumi.StringOutput)
}

func (o LogSettingOutput) ResolveIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.ResolveIp }).(pulumi.StringOutput)
}

func (o LogSettingOutput) ResolvePort() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.ResolvePort }).(pulumi.StringOutput)
}

func (o LogSettingOutput) RestApiGet() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.RestApiGet }).(pulumi.StringOutput)
}

func (o LogSettingOutput) RestApiSet() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.RestApiSet }).(pulumi.StringOutput)
}

func (o LogSettingOutput) SyslogOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.SyslogOverride }).(pulumi.StringOutput)
}

func (o LogSettingOutput) UserAnonymize() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringOutput { return v.UserAnonymize }).(pulumi.StringOutput)
}

func (o LogSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogSettingArrayOutput struct{ *pulumi.OutputState }

func (LogSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSetting)(nil)).Elem()
}

func (o LogSettingArrayOutput) ToLogSettingArrayOutput() LogSettingArrayOutput {
	return o
}

func (o LogSettingArrayOutput) ToLogSettingArrayOutputWithContext(ctx context.Context) LogSettingArrayOutput {
	return o
}

func (o LogSettingArrayOutput) Index(i pulumi.IntInput) LogSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSetting {
		return vs[0].([]*LogSetting)[vs[1].(int)]
	}).(LogSettingOutput)
}

type LogSettingMapOutput struct{ *pulumi.OutputState }

func (LogSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSetting)(nil)).Elem()
}

func (o LogSettingMapOutput) ToLogSettingMapOutput() LogSettingMapOutput {
	return o
}

func (o LogSettingMapOutput) ToLogSettingMapOutputWithContext(ctx context.Context) LogSettingMapOutput {
	return o
}

func (o LogSettingMapOutput) MapIndex(k pulumi.StringInput) LogSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSetting {
		return vs[0].(map[string]*LogSetting)[vs[1].(string)]
	}).(LogSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingInput)(nil)).Elem(), &LogSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingArrayInput)(nil)).Elem(), LogSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingMapInput)(nil)).Elem(), LogSettingMap{})
	pulumi.RegisterOutputType(LogSettingOutput{})
	pulumi.RegisterOutputType(LogSettingArrayOutput{})
	pulumi.RegisterOutputType(LogSettingMapOutput{})
}
