// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure Web proxy global settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWebProxyGlobal(ctx, "trname", &fortios.WebProxyGlobalArgs{
// 			FastPolicyMatch:              pulumi.String("enable"),
// 			ForwardProxyAuth:             pulumi.String("disable"),
// 			ForwardServerAffinityTimeout: pulumi.Int(30),
// 			LearnClientIp:                pulumi.String("disable"),
// 			MaxMessageLength:             pulumi.Int(32),
// 			MaxRequestLength:             pulumi.Int(4),
// 			MaxWafBodyCacheLength:        pulumi.Int(32),
// 			ProxyFqdn:                    pulumi.String("default.fqdn"),
// 			SslCaCert:                    pulumi.String("Fortinet_CA_SSL"),
// 			SslCert:                      pulumi.String("Fortinet_Factory"),
// 			StrictWebCheck:               pulumi.String("disable"),
// 			TunnelNonHttp:                pulumi.String("enable"),
// 			UnknownHttpVersion:           pulumi.String("best-effort"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// WebProxy Global can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/webProxyGlobal:WebProxyGlobal labelname WebProxyGlobal
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/webProxyGlobal:WebProxyGlobal labelname WebProxyGlobal
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WebProxyGlobal struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringOutput `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringOutput `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntOutput `pulumi:"forwardServerAffinityTimeout"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringOutput `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringOutput `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringOutput `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s WebProxyGlobalLearnClientIpSrcaddr6ArrayOutput `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs WebProxyGlobalLearnClientIpSrcaddrArrayOutput `pulumi:"learnClientIpSrcaddrs"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntOutput `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntOutput `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntOutput `pulumi:"maxWafBodyCacheLength"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringOutput `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringOutput `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringOutput `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringOutput `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert pulumi.StringOutput `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringOutput `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringOutput `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringOutput `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringOutput `pulumi:"webproxyProfile"`
}

// NewWebProxyGlobal registers a new resource with the given unique name, arguments, and options.
func NewWebProxyGlobal(ctx *pulumi.Context,
	name string, args *WebProxyGlobalArgs, opts ...pulumi.ResourceOption) (*WebProxyGlobal, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProxyFqdn == nil {
		return nil, errors.New("invalid value for required argument 'ProxyFqdn'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource WebProxyGlobal
	err := ctx.RegisterResource("fortios:index/webProxyGlobal:WebProxyGlobal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebProxyGlobal gets an existing WebProxyGlobal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebProxyGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebProxyGlobalState, opts ...pulumi.ResourceOption) (*WebProxyGlobal, error) {
	var resource WebProxyGlobal
	err := ctx.ReadResource("fortios:index/webProxyGlobal:WebProxyGlobal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebProxyGlobal resources.
type webProxyGlobalState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch *string `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth *string `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout *int `pulumi:"forwardServerAffinityTimeout"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache *string `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp *string `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader *string `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s []WebProxyGlobalLearnClientIpSrcaddr6 `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs []WebProxyGlobalLearnClientIpSrcaddr `pulumi:"learnClientIpSrcaddrs"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength *int `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength *int `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength *int `pulumi:"maxWafBodyCacheLength"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn *string `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr *string `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 *string `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert *string `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert *string `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck *string `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

type WebProxyGlobalState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringPtrInput
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringPtrInput
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntPtrInput
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringPtrInput
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringPtrInput
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringPtrInput
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s WebProxyGlobalLearnClientIpSrcaddr6ArrayInput
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs WebProxyGlobalLearnClientIpSrcaddrArrayInput
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntPtrInput
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntPtrInput
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntPtrInput
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringPtrInput
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringPtrInput
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringPtrInput
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringPtrInput
	// SSL certificate for SSL interception.
	SslCert pulumi.StringPtrInput
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringPtrInput
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringPtrInput
}

func (WebProxyGlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyGlobalState)(nil)).Elem()
}

type webProxyGlobalArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch *string `pulumi:"fastPolicyMatch"`
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth *string `pulumi:"forwardProxyAuth"`
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout *int `pulumi:"forwardServerAffinityTimeout"`
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache *string `pulumi:"ldapUserCache"`
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp *string `pulumi:"learnClientIp"`
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader *string `pulumi:"learnClientIpFromHeader"`
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s []WebProxyGlobalLearnClientIpSrcaddr6 `pulumi:"learnClientIpSrcaddr6s"`
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs []WebProxyGlobalLearnClientIpSrcaddr `pulumi:"learnClientIpSrcaddrs"`
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength *int `pulumi:"maxMessageLength"`
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength *int `pulumi:"maxRequestLength"`
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength *int `pulumi:"maxWafBodyCacheLength"`
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn string `pulumi:"proxyFqdn"`
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr *string `pulumi:"srcAffinityExemptAddr"`
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 *string `pulumi:"srcAffinityExemptAddr6"`
	// SSL CA certificate for SSL interception.
	SslCaCert *string `pulumi:"sslCaCert"`
	// SSL certificate for SSL interception.
	SslCert *string `pulumi:"sslCert"`
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck *string `pulumi:"strictWebCheck"`
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp *string `pulumi:"tunnelNonHttp"`
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion *string `pulumi:"unknownHttpVersion"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
}

// The set of arguments for constructing a WebProxyGlobal resource.
type WebProxyGlobalArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable fast matching algorithm for explicit and transparent proxy policy. Valid values: `enable`, `disable`.
	FastPolicyMatch pulumi.StringPtrInput
	// Enable/disable forwarding proxy authentication headers. Valid values: `enable`, `disable`.
	ForwardProxyAuth pulumi.StringPtrInput
	// Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).
	ForwardServerAffinityTimeout pulumi.IntPtrInput
	// Enable/disable LDAP user cache for explicit and transparent proxy user. Valid values: `enable`, `disable`.
	LdapUserCache pulumi.StringPtrInput
	// Enable/disable learning the client's IP address from headers. Valid values: `enable`, `disable`.
	LearnClientIp pulumi.StringPtrInput
	// Learn client IP address from the specified headers. Valid values: `true-client-ip`, `x-real-ip`, `x-forwarded-for`.
	LearnClientIpFromHeader pulumi.StringPtrInput
	// IPv6 Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr6` block is documented below.
	LearnClientIpSrcaddr6s WebProxyGlobalLearnClientIpSrcaddr6ArrayInput
	// Source address name (srcaddr or srcaddr6 must be set). The structure of `learnClientIpSrcaddr` block is documented below.
	LearnClientIpSrcaddrs WebProxyGlobalLearnClientIpSrcaddrArrayInput
	// Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).
	MaxMessageLength pulumi.IntPtrInput
	// Maximum length of HTTP request line (2 - 64 Kbytes, default = 4).
	MaxRequestLength pulumi.IntPtrInput
	// Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).
	MaxWafBodyCacheLength pulumi.IntPtrInput
	// Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.
	ProxyFqdn pulumi.StringInput
	// IPv4 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr pulumi.StringPtrInput
	// IPv6 source addresses to exempt proxy affinity.
	SrcAffinityExemptAddr6 pulumi.StringPtrInput
	// SSL CA certificate for SSL interception.
	SslCaCert pulumi.StringPtrInput
	// SSL certificate for SSL interception.
	SslCert pulumi.StringPtrInput
	// Enable/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1. Valid values: `enable`, `disable`.
	StrictWebCheck pulumi.StringPtrInput
	// Enable/disable allowing non-HTTP traffic. Allowed non-HTTP traffic is tunneled. Valid values: `enable`, `disable`.
	TunnelNonHttp pulumi.StringPtrInput
	// Action to take when an unknown version of HTTP is encountered: reject, allow (tunnel), or proceed with best-effort. Valid values: `reject`, `tunnel`, `best-effort`.
	UnknownHttpVersion pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.
	WebproxyProfile pulumi.StringPtrInput
}

func (WebProxyGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyGlobalArgs)(nil)).Elem()
}

type WebProxyGlobalInput interface {
	pulumi.Input

	ToWebProxyGlobalOutput() WebProxyGlobalOutput
	ToWebProxyGlobalOutputWithContext(ctx context.Context) WebProxyGlobalOutput
}

func (*WebProxyGlobal) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyGlobal)(nil)).Elem()
}

func (i *WebProxyGlobal) ToWebProxyGlobalOutput() WebProxyGlobalOutput {
	return i.ToWebProxyGlobalOutputWithContext(context.Background())
}

func (i *WebProxyGlobal) ToWebProxyGlobalOutputWithContext(ctx context.Context) WebProxyGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyGlobalOutput)
}

// WebProxyGlobalArrayInput is an input type that accepts WebProxyGlobalArray and WebProxyGlobalArrayOutput values.
// You can construct a concrete instance of `WebProxyGlobalArrayInput` via:
//
//          WebProxyGlobalArray{ WebProxyGlobalArgs{...} }
type WebProxyGlobalArrayInput interface {
	pulumi.Input

	ToWebProxyGlobalArrayOutput() WebProxyGlobalArrayOutput
	ToWebProxyGlobalArrayOutputWithContext(context.Context) WebProxyGlobalArrayOutput
}

type WebProxyGlobalArray []WebProxyGlobalInput

func (WebProxyGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyGlobal)(nil)).Elem()
}

func (i WebProxyGlobalArray) ToWebProxyGlobalArrayOutput() WebProxyGlobalArrayOutput {
	return i.ToWebProxyGlobalArrayOutputWithContext(context.Background())
}

func (i WebProxyGlobalArray) ToWebProxyGlobalArrayOutputWithContext(ctx context.Context) WebProxyGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyGlobalArrayOutput)
}

// WebProxyGlobalMapInput is an input type that accepts WebProxyGlobalMap and WebProxyGlobalMapOutput values.
// You can construct a concrete instance of `WebProxyGlobalMapInput` via:
//
//          WebProxyGlobalMap{ "key": WebProxyGlobalArgs{...} }
type WebProxyGlobalMapInput interface {
	pulumi.Input

	ToWebProxyGlobalMapOutput() WebProxyGlobalMapOutput
	ToWebProxyGlobalMapOutputWithContext(context.Context) WebProxyGlobalMapOutput
}

type WebProxyGlobalMap map[string]WebProxyGlobalInput

func (WebProxyGlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyGlobal)(nil)).Elem()
}

func (i WebProxyGlobalMap) ToWebProxyGlobalMapOutput() WebProxyGlobalMapOutput {
	return i.ToWebProxyGlobalMapOutputWithContext(context.Background())
}

func (i WebProxyGlobalMap) ToWebProxyGlobalMapOutputWithContext(ctx context.Context) WebProxyGlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyGlobalMapOutput)
}

type WebProxyGlobalOutput struct{ *pulumi.OutputState }

func (WebProxyGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyGlobal)(nil)).Elem()
}

func (o WebProxyGlobalOutput) ToWebProxyGlobalOutput() WebProxyGlobalOutput {
	return o
}

func (o WebProxyGlobalOutput) ToWebProxyGlobalOutputWithContext(ctx context.Context) WebProxyGlobalOutput {
	return o
}

type WebProxyGlobalArrayOutput struct{ *pulumi.OutputState }

func (WebProxyGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyGlobal)(nil)).Elem()
}

func (o WebProxyGlobalArrayOutput) ToWebProxyGlobalArrayOutput() WebProxyGlobalArrayOutput {
	return o
}

func (o WebProxyGlobalArrayOutput) ToWebProxyGlobalArrayOutputWithContext(ctx context.Context) WebProxyGlobalArrayOutput {
	return o
}

func (o WebProxyGlobalArrayOutput) Index(i pulumi.IntInput) WebProxyGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebProxyGlobal {
		return vs[0].([]*WebProxyGlobal)[vs[1].(int)]
	}).(WebProxyGlobalOutput)
}

type WebProxyGlobalMapOutput struct{ *pulumi.OutputState }

func (WebProxyGlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyGlobal)(nil)).Elem()
}

func (o WebProxyGlobalMapOutput) ToWebProxyGlobalMapOutput() WebProxyGlobalMapOutput {
	return o
}

func (o WebProxyGlobalMapOutput) ToWebProxyGlobalMapOutputWithContext(ctx context.Context) WebProxyGlobalMapOutput {
	return o
}

func (o WebProxyGlobalMapOutput) MapIndex(k pulumi.StringInput) WebProxyGlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebProxyGlobal {
		return vs[0].(map[string]*WebProxyGlobal)[vs[1].(string)]
	}).(WebProxyGlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyGlobalInput)(nil)).Elem(), &WebProxyGlobal{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyGlobalArrayInput)(nil)).Elem(), WebProxyGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyGlobalMapInput)(nil)).Elem(), WebProxyGlobalMap{})
	pulumi.RegisterOutputType(WebProxyGlobalOutput{})
	pulumi.RegisterOutputType(WebProxyGlobalArrayOutput{})
	pulumi.RegisterOutputType(WebProxyGlobalMapOutput{})
}
