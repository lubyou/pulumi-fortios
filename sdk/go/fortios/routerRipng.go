// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouterRipng struct {
	pulumi.CustomResourceState

	AggregateAddresses          RouterRipngAggregateAddressArrayOutput `pulumi:"aggregateAddresses"`
	DefaultInformationOriginate pulumi.StringOutput                    `pulumi:"defaultInformationOriginate"`
	DefaultMetric               pulumi.IntOutput                       `pulumi:"defaultMetric"`
	Distances                   RouterRipngDistanceArrayOutput         `pulumi:"distances"`
	DistributeLists             RouterRipngDistributeListArrayOutput   `pulumi:"distributeLists"`
	DynamicSortSubtable         pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	GarbageTimer                pulumi.IntOutput                       `pulumi:"garbageTimer"`
	Interfaces                  RouterRipngInterfaceArrayOutput        `pulumi:"interfaces"`
	MaxOutMetric                pulumi.IntOutput                       `pulumi:"maxOutMetric"`
	Neighbors                   RouterRipngNeighborArrayOutput         `pulumi:"neighbors"`
	Networks                    RouterRipngNetworkArrayOutput          `pulumi:"networks"`
	OffsetLists                 RouterRipngOffsetListArrayOutput       `pulumi:"offsetLists"`
	PassiveInterfaces           RouterRipngPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	Redistributes               RouterRipngRedistributeArrayOutput     `pulumi:"redistributes"`
	TimeoutTimer                pulumi.IntOutput                       `pulumi:"timeoutTimer"`
	UpdateTimer                 pulumi.IntOutput                       `pulumi:"updateTimer"`
	Vdomparam                   pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewRouterRipng registers a new resource with the given unique name, arguments, and options.
func NewRouterRipng(ctx *pulumi.Context,
	name string, args *RouterRipngArgs, opts ...pulumi.ResourceOption) (*RouterRipng, error) {
	if args == nil {
		args = &RouterRipngArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource RouterRipng
	err := ctx.RegisterResource("fortios:index/routerRipng:RouterRipng", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterRipng gets an existing RouterRipng resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterRipng(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterRipngState, opts ...pulumi.ResourceOption) (*RouterRipng, error) {
	var resource RouterRipng
	err := ctx.ReadResource("fortios:index/routerRipng:RouterRipng", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterRipng resources.
type routerRipngState struct {
	AggregateAddresses          []RouterRipngAggregateAddress `pulumi:"aggregateAddresses"`
	DefaultInformationOriginate *string                       `pulumi:"defaultInformationOriginate"`
	DefaultMetric               *int                          `pulumi:"defaultMetric"`
	Distances                   []RouterRipngDistance         `pulumi:"distances"`
	DistributeLists             []RouterRipngDistributeList   `pulumi:"distributeLists"`
	DynamicSortSubtable         *string                       `pulumi:"dynamicSortSubtable"`
	GarbageTimer                *int                          `pulumi:"garbageTimer"`
	Interfaces                  []RouterRipngInterface        `pulumi:"interfaces"`
	MaxOutMetric                *int                          `pulumi:"maxOutMetric"`
	Neighbors                   []RouterRipngNeighbor         `pulumi:"neighbors"`
	Networks                    []RouterRipngNetwork          `pulumi:"networks"`
	OffsetLists                 []RouterRipngOffsetList       `pulumi:"offsetLists"`
	PassiveInterfaces           []RouterRipngPassiveInterface `pulumi:"passiveInterfaces"`
	Redistributes               []RouterRipngRedistribute     `pulumi:"redistributes"`
	TimeoutTimer                *int                          `pulumi:"timeoutTimer"`
	UpdateTimer                 *int                          `pulumi:"updateTimer"`
	Vdomparam                   *string                       `pulumi:"vdomparam"`
}

type RouterRipngState struct {
	AggregateAddresses          RouterRipngAggregateAddressArrayInput
	DefaultInformationOriginate pulumi.StringPtrInput
	DefaultMetric               pulumi.IntPtrInput
	Distances                   RouterRipngDistanceArrayInput
	DistributeLists             RouterRipngDistributeListArrayInput
	DynamicSortSubtable         pulumi.StringPtrInput
	GarbageTimer                pulumi.IntPtrInput
	Interfaces                  RouterRipngInterfaceArrayInput
	MaxOutMetric                pulumi.IntPtrInput
	Neighbors                   RouterRipngNeighborArrayInput
	Networks                    RouterRipngNetworkArrayInput
	OffsetLists                 RouterRipngOffsetListArrayInput
	PassiveInterfaces           RouterRipngPassiveInterfaceArrayInput
	Redistributes               RouterRipngRedistributeArrayInput
	TimeoutTimer                pulumi.IntPtrInput
	UpdateTimer                 pulumi.IntPtrInput
	Vdomparam                   pulumi.StringPtrInput
}

func (RouterRipngState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipngState)(nil)).Elem()
}

type routerRipngArgs struct {
	AggregateAddresses          []RouterRipngAggregateAddress `pulumi:"aggregateAddresses"`
	DefaultInformationOriginate *string                       `pulumi:"defaultInformationOriginate"`
	DefaultMetric               *int                          `pulumi:"defaultMetric"`
	Distances                   []RouterRipngDistance         `pulumi:"distances"`
	DistributeLists             []RouterRipngDistributeList   `pulumi:"distributeLists"`
	DynamicSortSubtable         *string                       `pulumi:"dynamicSortSubtable"`
	GarbageTimer                *int                          `pulumi:"garbageTimer"`
	Interfaces                  []RouterRipngInterface        `pulumi:"interfaces"`
	MaxOutMetric                *int                          `pulumi:"maxOutMetric"`
	Neighbors                   []RouterRipngNeighbor         `pulumi:"neighbors"`
	Networks                    []RouterRipngNetwork          `pulumi:"networks"`
	OffsetLists                 []RouterRipngOffsetList       `pulumi:"offsetLists"`
	PassiveInterfaces           []RouterRipngPassiveInterface `pulumi:"passiveInterfaces"`
	Redistributes               []RouterRipngRedistribute     `pulumi:"redistributes"`
	TimeoutTimer                *int                          `pulumi:"timeoutTimer"`
	UpdateTimer                 *int                          `pulumi:"updateTimer"`
	Vdomparam                   *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterRipng resource.
type RouterRipngArgs struct {
	AggregateAddresses          RouterRipngAggregateAddressArrayInput
	DefaultInformationOriginate pulumi.StringPtrInput
	DefaultMetric               pulumi.IntPtrInput
	Distances                   RouterRipngDistanceArrayInput
	DistributeLists             RouterRipngDistributeListArrayInput
	DynamicSortSubtable         pulumi.StringPtrInput
	GarbageTimer                pulumi.IntPtrInput
	Interfaces                  RouterRipngInterfaceArrayInput
	MaxOutMetric                pulumi.IntPtrInput
	Neighbors                   RouterRipngNeighborArrayInput
	Networks                    RouterRipngNetworkArrayInput
	OffsetLists                 RouterRipngOffsetListArrayInput
	PassiveInterfaces           RouterRipngPassiveInterfaceArrayInput
	Redistributes               RouterRipngRedistributeArrayInput
	TimeoutTimer                pulumi.IntPtrInput
	UpdateTimer                 pulumi.IntPtrInput
	Vdomparam                   pulumi.StringPtrInput
}

func (RouterRipngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipngArgs)(nil)).Elem()
}

type RouterRipngInput interface {
	pulumi.Input

	ToRouterRipngOutput() RouterRipngOutput
	ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput
}

func (*RouterRipng) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRipng)(nil)).Elem()
}

func (i *RouterRipng) ToRouterRipngOutput() RouterRipngOutput {
	return i.ToRouterRipngOutputWithContext(context.Background())
}

func (i *RouterRipng) ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOutput)
}

// RouterRipngArrayInput is an input type that accepts RouterRipngArray and RouterRipngArrayOutput values.
// You can construct a concrete instance of `RouterRipngArrayInput` via:
//
//	RouterRipngArray{ RouterRipngArgs{...} }
type RouterRipngArrayInput interface {
	pulumi.Input

	ToRouterRipngArrayOutput() RouterRipngArrayOutput
	ToRouterRipngArrayOutputWithContext(context.Context) RouterRipngArrayOutput
}

type RouterRipngArray []RouterRipngInput

func (RouterRipngArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRipng)(nil)).Elem()
}

func (i RouterRipngArray) ToRouterRipngArrayOutput() RouterRipngArrayOutput {
	return i.ToRouterRipngArrayOutputWithContext(context.Background())
}

func (i RouterRipngArray) ToRouterRipngArrayOutputWithContext(ctx context.Context) RouterRipngArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngArrayOutput)
}

// RouterRipngMapInput is an input type that accepts RouterRipngMap and RouterRipngMapOutput values.
// You can construct a concrete instance of `RouterRipngMapInput` via:
//
//	RouterRipngMap{ "key": RouterRipngArgs{...} }
type RouterRipngMapInput interface {
	pulumi.Input

	ToRouterRipngMapOutput() RouterRipngMapOutput
	ToRouterRipngMapOutputWithContext(context.Context) RouterRipngMapOutput
}

type RouterRipngMap map[string]RouterRipngInput

func (RouterRipngMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRipng)(nil)).Elem()
}

func (i RouterRipngMap) ToRouterRipngMapOutput() RouterRipngMapOutput {
	return i.ToRouterRipngMapOutputWithContext(context.Background())
}

func (i RouterRipngMap) ToRouterRipngMapOutputWithContext(ctx context.Context) RouterRipngMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngMapOutput)
}

type RouterRipngOutput struct{ *pulumi.OutputState }

func (RouterRipngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRipng)(nil)).Elem()
}

func (o RouterRipngOutput) ToRouterRipngOutput() RouterRipngOutput {
	return o
}

func (o RouterRipngOutput) ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput {
	return o
}

func (o RouterRipngOutput) AggregateAddresses() RouterRipngAggregateAddressArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngAggregateAddressArrayOutput { return v.AggregateAddresses }).(RouterRipngAggregateAddressArrayOutput)
}

func (o RouterRipngOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

func (o RouterRipngOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

func (o RouterRipngOutput) Distances() RouterRipngDistanceArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngDistanceArrayOutput { return v.Distances }).(RouterRipngDistanceArrayOutput)
}

func (o RouterRipngOutput) DistributeLists() RouterRipngDistributeListArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngDistributeListArrayOutput { return v.DistributeLists }).(RouterRipngDistributeListArrayOutput)
}

func (o RouterRipngOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RouterRipngOutput) GarbageTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.IntOutput { return v.GarbageTimer }).(pulumi.IntOutput)
}

func (o RouterRipngOutput) Interfaces() RouterRipngInterfaceArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngInterfaceArrayOutput { return v.Interfaces }).(RouterRipngInterfaceArrayOutput)
}

func (o RouterRipngOutput) MaxOutMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.IntOutput { return v.MaxOutMetric }).(pulumi.IntOutput)
}

func (o RouterRipngOutput) Neighbors() RouterRipngNeighborArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngNeighborArrayOutput { return v.Neighbors }).(RouterRipngNeighborArrayOutput)
}

func (o RouterRipngOutput) Networks() RouterRipngNetworkArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngNetworkArrayOutput { return v.Networks }).(RouterRipngNetworkArrayOutput)
}

func (o RouterRipngOutput) OffsetLists() RouterRipngOffsetListArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngOffsetListArrayOutput { return v.OffsetLists }).(RouterRipngOffsetListArrayOutput)
}

func (o RouterRipngOutput) PassiveInterfaces() RouterRipngPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(RouterRipngPassiveInterfaceArrayOutput)
}

func (o RouterRipngOutput) Redistributes() RouterRipngRedistributeArrayOutput {
	return o.ApplyT(func(v *RouterRipng) RouterRipngRedistributeArrayOutput { return v.Redistributes }).(RouterRipngRedistributeArrayOutput)
}

func (o RouterRipngOutput) TimeoutTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.IntOutput { return v.TimeoutTimer }).(pulumi.IntOutput)
}

func (o RouterRipngOutput) UpdateTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.IntOutput { return v.UpdateTimer }).(pulumi.IntOutput)
}

func (o RouterRipngOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterRipng) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterRipngArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRipng)(nil)).Elem()
}

func (o RouterRipngArrayOutput) ToRouterRipngArrayOutput() RouterRipngArrayOutput {
	return o
}

func (o RouterRipngArrayOutput) ToRouterRipngArrayOutputWithContext(ctx context.Context) RouterRipngArrayOutput {
	return o
}

func (o RouterRipngArrayOutput) Index(i pulumi.IntInput) RouterRipngOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterRipng {
		return vs[0].([]*RouterRipng)[vs[1].(int)]
	}).(RouterRipngOutput)
}

type RouterRipngMapOutput struct{ *pulumi.OutputState }

func (RouterRipngMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRipng)(nil)).Elem()
}

func (o RouterRipngMapOutput) ToRouterRipngMapOutput() RouterRipngMapOutput {
	return o
}

func (o RouterRipngMapOutput) ToRouterRipngMapOutputWithContext(ctx context.Context) RouterRipngMapOutput {
	return o
}

func (o RouterRipngMapOutput) MapIndex(k pulumi.StringInput) RouterRipngOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterRipng {
		return vs[0].(map[string]*RouterRipng)[vs[1].(string)]
	}).(RouterRipngOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInput)(nil)).Elem(), &RouterRipng{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngArrayInput)(nil)).Elem(), RouterRipngArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngMapInput)(nil)).Elem(), RouterRipngMap{})
	pulumi.RegisterOutputType(RouterRipngOutput{})
	pulumi.RegisterOutputType(RouterRipngArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngMapOutput{})
}
