// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure RIPng.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewRouterRipng(ctx, "trname", &fortios.RouterRipngArgs{
// 			DefaultInformationOriginate: pulumi.String("disable"),
// 			DefaultMetric:               pulumi.Int(1),
// 			GarbageTimer:                pulumi.Int(120),
// 			MaxOutMetric:                pulumi.Int(0),
// 			Redistributes: RouterRipngRedistributeArray{
// 				&RouterRipngRedistributeArgs{
// 					Metric: pulumi.Int(10),
// 					Name:   pulumi.String("connected"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterRipngRedistributeArgs{
// 					Metric: pulumi.Int(10),
// 					Name:   pulumi.String("static"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterRipngRedistributeArgs{
// 					Metric: pulumi.Int(10),
// 					Name:   pulumi.String("ospf"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterRipngRedistributeArgs{
// 					Metric: pulumi.Int(10),
// 					Name:   pulumi.String("bgp"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterRipngRedistributeArgs{
// 					Metric: pulumi.Int(10),
// 					Name:   pulumi.String("isis"),
// 					Status: pulumi.String("disable"),
// 				},
// 			},
// 			TimeoutTimer: pulumi.Int(180),
// 			UpdateTimer:  pulumi.Int(30),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Router Ripng can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/routerRipng:RouterRipng labelname RouterRipng
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/routerRipng:RouterRipng labelname RouterRipng
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type RouterRipng struct {
	pulumi.CustomResourceState

	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterRipngAggregateAddressArrayOutput `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringOutput `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric pulumi.IntOutput `pulumi:"defaultMetric"`
	// Distance (1 - 255).
	Distances RouterRipngDistanceArrayOutput `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RouterRipngDistributeListArrayOutput `pulumi:"distributeLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer pulumi.IntOutput `pulumi:"garbageTimer"`
	// Interface name.
	Interfaces RouterRipngInterfaceArrayOutput `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntOutput `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RouterRipngNeighborArrayOutput `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks RouterRipngNetworkArrayOutput `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RouterRipngOffsetListArrayOutput `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RouterRipngPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RouterRipngRedistributeArrayOutput `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer pulumi.IntOutput `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer pulumi.IntOutput `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRouterRipng registers a new resource with the given unique name, arguments, and options.
func NewRouterRipng(ctx *pulumi.Context,
	name string, args *RouterRipngArgs, opts ...pulumi.ResourceOption) (*RouterRipng, error) {
	if args == nil {
		args = &RouterRipngArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource RouterRipng
	err := ctx.RegisterResource("fortios:index/routerRipng:RouterRipng", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterRipng gets an existing RouterRipng resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterRipng(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterRipngState, opts ...pulumi.ResourceOption) (*RouterRipng, error) {
	var resource RouterRipng
	err := ctx.ReadResource("fortios:index/routerRipng:RouterRipng", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterRipng resources.
type routerRipngState struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RouterRipngAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Distance (1 - 255).
	Distances []RouterRipngDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RouterRipngDistributeList `pulumi:"distributeLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Interface name.
	Interfaces []RouterRipngInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RouterRipngNeighbor `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks []RouterRipngNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RouterRipngOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RouterRipngPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RouterRipngRedistribute `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type RouterRipngState struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterRipngAggregateAddressArrayInput
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// Distance (1 - 255).
	Distances RouterRipngDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RouterRipngDistributeListArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer.
	GarbageTimer pulumi.IntPtrInput
	// Interface name.
	Interfaces RouterRipngInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RouterRipngNeighborArrayInput
	// Network. The structure of `network` block is documented below.
	Networks RouterRipngNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RouterRipngOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RouterRipngPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RouterRipngRedistributeArrayInput
	// Timeout timer.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterRipngState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipngState)(nil)).Elem()
}

type routerRipngArgs struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RouterRipngAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate *string `pulumi:"defaultInformationOriginate"`
	// Default metric.
	DefaultMetric *int `pulumi:"defaultMetric"`
	// Distance (1 - 255).
	Distances []RouterRipngDistance `pulumi:"distances"`
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists []RouterRipngDistributeList `pulumi:"distributeLists"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Garbage timer.
	GarbageTimer *int `pulumi:"garbageTimer"`
	// Interface name.
	Interfaces []RouterRipngInterface `pulumi:"interfaces"`
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric *int `pulumi:"maxOutMetric"`
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors []RouterRipngNeighbor `pulumi:"neighbors"`
	// Network. The structure of `network` block is documented below.
	Networks []RouterRipngNetwork `pulumi:"networks"`
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists []RouterRipngOffsetList `pulumi:"offsetLists"`
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces []RouterRipngPassiveInterface `pulumi:"passiveInterfaces"`
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes []RouterRipngRedistribute `pulumi:"redistributes"`
	// Timeout timer.
	TimeoutTimer *int `pulumi:"timeoutTimer"`
	// Update timer.
	UpdateTimer *int `pulumi:"updateTimer"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterRipng resource.
type RouterRipngArgs struct {
	// Aggregate address. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterRipngAggregateAddressArrayInput
	// Enable/disable generation of default route. Valid values: `enable`, `disable`.
	DefaultInformationOriginate pulumi.StringPtrInput
	// Default metric.
	DefaultMetric pulumi.IntPtrInput
	// Distance (1 - 255).
	Distances RouterRipngDistanceArrayInput
	// Distribute list. The structure of `distributeList` block is documented below.
	DistributeLists RouterRipngDistributeListArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Garbage timer.
	GarbageTimer pulumi.IntPtrInput
	// Interface name.
	Interfaces RouterRipngInterfaceArrayInput
	// Maximum metric allowed to output(0 means 'not set').
	MaxOutMetric pulumi.IntPtrInput
	// neighbor The structure of `neighbor` block is documented below.
	Neighbors RouterRipngNeighborArrayInput
	// Network. The structure of `network` block is documented below.
	Networks RouterRipngNetworkArrayInput
	// Offset list. The structure of `offsetList` block is documented below.
	OffsetLists RouterRipngOffsetListArrayInput
	// Passive interface configuration. The structure of `passiveInterface` block is documented below.
	PassiveInterfaces RouterRipngPassiveInterfaceArrayInput
	// Redistribute configuration. The structure of `redistribute` block is documented below.
	Redistributes RouterRipngRedistributeArrayInput
	// Timeout timer.
	TimeoutTimer pulumi.IntPtrInput
	// Update timer.
	UpdateTimer pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterRipngArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipngArgs)(nil)).Elem()
}

type RouterRipngInput interface {
	pulumi.Input

	ToRouterRipngOutput() RouterRipngOutput
	ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput
}

func (*RouterRipng) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRipng)(nil)).Elem()
}

func (i *RouterRipng) ToRouterRipngOutput() RouterRipngOutput {
	return i.ToRouterRipngOutputWithContext(context.Background())
}

func (i *RouterRipng) ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOutput)
}

// RouterRipngArrayInput is an input type that accepts RouterRipngArray and RouterRipngArrayOutput values.
// You can construct a concrete instance of `RouterRipngArrayInput` via:
//
//          RouterRipngArray{ RouterRipngArgs{...} }
type RouterRipngArrayInput interface {
	pulumi.Input

	ToRouterRipngArrayOutput() RouterRipngArrayOutput
	ToRouterRipngArrayOutputWithContext(context.Context) RouterRipngArrayOutput
}

type RouterRipngArray []RouterRipngInput

func (RouterRipngArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRipng)(nil)).Elem()
}

func (i RouterRipngArray) ToRouterRipngArrayOutput() RouterRipngArrayOutput {
	return i.ToRouterRipngArrayOutputWithContext(context.Background())
}

func (i RouterRipngArray) ToRouterRipngArrayOutputWithContext(ctx context.Context) RouterRipngArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngArrayOutput)
}

// RouterRipngMapInput is an input type that accepts RouterRipngMap and RouterRipngMapOutput values.
// You can construct a concrete instance of `RouterRipngMapInput` via:
//
//          RouterRipngMap{ "key": RouterRipngArgs{...} }
type RouterRipngMapInput interface {
	pulumi.Input

	ToRouterRipngMapOutput() RouterRipngMapOutput
	ToRouterRipngMapOutputWithContext(context.Context) RouterRipngMapOutput
}

type RouterRipngMap map[string]RouterRipngInput

func (RouterRipngMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRipng)(nil)).Elem()
}

func (i RouterRipngMap) ToRouterRipngMapOutput() RouterRipngMapOutput {
	return i.ToRouterRipngMapOutputWithContext(context.Background())
}

func (i RouterRipngMap) ToRouterRipngMapOutputWithContext(ctx context.Context) RouterRipngMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngMapOutput)
}

type RouterRipngOutput struct{ *pulumi.OutputState }

func (RouterRipngOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRipng)(nil)).Elem()
}

func (o RouterRipngOutput) ToRouterRipngOutput() RouterRipngOutput {
	return o
}

func (o RouterRipngOutput) ToRouterRipngOutputWithContext(ctx context.Context) RouterRipngOutput {
	return o
}

type RouterRipngArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRipng)(nil)).Elem()
}

func (o RouterRipngArrayOutput) ToRouterRipngArrayOutput() RouterRipngArrayOutput {
	return o
}

func (o RouterRipngArrayOutput) ToRouterRipngArrayOutputWithContext(ctx context.Context) RouterRipngArrayOutput {
	return o
}

func (o RouterRipngArrayOutput) Index(i pulumi.IntInput) RouterRipngOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterRipng {
		return vs[0].([]*RouterRipng)[vs[1].(int)]
	}).(RouterRipngOutput)
}

type RouterRipngMapOutput struct{ *pulumi.OutputState }

func (RouterRipngMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRipng)(nil)).Elem()
}

func (o RouterRipngMapOutput) ToRouterRipngMapOutput() RouterRipngMapOutput {
	return o
}

func (o RouterRipngMapOutput) ToRouterRipngMapOutputWithContext(ctx context.Context) RouterRipngMapOutput {
	return o
}

func (o RouterRipngMapOutput) MapIndex(k pulumi.StringInput) RouterRipngOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterRipng {
		return vs[0].(map[string]*RouterRipng)[vs[1].(string)]
	}).(RouterRipngOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInput)(nil)).Elem(), &RouterRipng{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngArrayInput)(nil)).Elem(), RouterRipngArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngMapInput)(nil)).Elem(), RouterRipngMap{})
	pulumi.RegisterOutputType(RouterRipngOutput{})
	pulumi.RegisterOutputType(RouterRipngArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngMapOutput{})
}
