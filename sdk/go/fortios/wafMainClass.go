// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WafMainClass struct {
	pulumi.CustomResourceState

	Fosid     pulumi.IntOutput       `pulumi:"fosid"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWafMainClass registers a new resource with the given unique name, arguments, and options.
func NewWafMainClass(ctx *pulumi.Context,
	name string, args *WafMainClassArgs, opts ...pulumi.ResourceOption) (*WafMainClass, error) {
	if args == nil {
		args = &WafMainClassArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WafMainClass
	err := ctx.RegisterResource("fortios:index/wafMainClass:WafMainClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafMainClass gets an existing WafMainClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafMainClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafMainClassState, opts ...pulumi.ResourceOption) (*WafMainClass, error) {
	var resource WafMainClass
	err := ctx.ReadResource("fortios:index/wafMainClass:WafMainClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafMainClass resources.
type wafMainClassState struct {
	Fosid     *int    `pulumi:"fosid"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type WafMainClassState struct {
	Fosid     pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WafMainClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafMainClassState)(nil)).Elem()
}

type wafMainClassArgs struct {
	Fosid     *int    `pulumi:"fosid"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WafMainClass resource.
type WafMainClassArgs struct {
	Fosid     pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WafMainClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafMainClassArgs)(nil)).Elem()
}

type WafMainClassInput interface {
	pulumi.Input

	ToWafMainClassOutput() WafMainClassOutput
	ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput
}

func (*WafMainClass) ElementType() reflect.Type {
	return reflect.TypeOf((**WafMainClass)(nil)).Elem()
}

func (i *WafMainClass) ToWafMainClassOutput() WafMainClassOutput {
	return i.ToWafMainClassOutputWithContext(context.Background())
}

func (i *WafMainClass) ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassOutput)
}

// WafMainClassArrayInput is an input type that accepts WafMainClassArray and WafMainClassArrayOutput values.
// You can construct a concrete instance of `WafMainClassArrayInput` via:
//
//	WafMainClassArray{ WafMainClassArgs{...} }
type WafMainClassArrayInput interface {
	pulumi.Input

	ToWafMainClassArrayOutput() WafMainClassArrayOutput
	ToWafMainClassArrayOutputWithContext(context.Context) WafMainClassArrayOutput
}

type WafMainClassArray []WafMainClassInput

func (WafMainClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafMainClass)(nil)).Elem()
}

func (i WafMainClassArray) ToWafMainClassArrayOutput() WafMainClassArrayOutput {
	return i.ToWafMainClassArrayOutputWithContext(context.Background())
}

func (i WafMainClassArray) ToWafMainClassArrayOutputWithContext(ctx context.Context) WafMainClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassArrayOutput)
}

// WafMainClassMapInput is an input type that accepts WafMainClassMap and WafMainClassMapOutput values.
// You can construct a concrete instance of `WafMainClassMapInput` via:
//
//	WafMainClassMap{ "key": WafMainClassArgs{...} }
type WafMainClassMapInput interface {
	pulumi.Input

	ToWafMainClassMapOutput() WafMainClassMapOutput
	ToWafMainClassMapOutputWithContext(context.Context) WafMainClassMapOutput
}

type WafMainClassMap map[string]WafMainClassInput

func (WafMainClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafMainClass)(nil)).Elem()
}

func (i WafMainClassMap) ToWafMainClassMapOutput() WafMainClassMapOutput {
	return i.ToWafMainClassMapOutputWithContext(context.Background())
}

func (i WafMainClassMap) ToWafMainClassMapOutputWithContext(ctx context.Context) WafMainClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassMapOutput)
}

type WafMainClassOutput struct{ *pulumi.OutputState }

func (WafMainClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafMainClass)(nil)).Elem()
}

func (o WafMainClassOutput) ToWafMainClassOutput() WafMainClassOutput {
	return o
}

func (o WafMainClassOutput) ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput {
	return o
}

func (o WafMainClassOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *WafMainClass) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o WafMainClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WafMainClass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WafMainClassOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafMainClass) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WafMainClassArrayOutput struct{ *pulumi.OutputState }

func (WafMainClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafMainClass)(nil)).Elem()
}

func (o WafMainClassArrayOutput) ToWafMainClassArrayOutput() WafMainClassArrayOutput {
	return o
}

func (o WafMainClassArrayOutput) ToWafMainClassArrayOutputWithContext(ctx context.Context) WafMainClassArrayOutput {
	return o
}

func (o WafMainClassArrayOutput) Index(i pulumi.IntInput) WafMainClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WafMainClass {
		return vs[0].([]*WafMainClass)[vs[1].(int)]
	}).(WafMainClassOutput)
}

type WafMainClassMapOutput struct{ *pulumi.OutputState }

func (WafMainClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafMainClass)(nil)).Elem()
}

func (o WafMainClassMapOutput) ToWafMainClassMapOutput() WafMainClassMapOutput {
	return o
}

func (o WafMainClassMapOutput) ToWafMainClassMapOutputWithContext(ctx context.Context) WafMainClassMapOutput {
	return o
}

func (o WafMainClassMapOutput) MapIndex(k pulumi.StringInput) WafMainClassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WafMainClass {
		return vs[0].(map[string]*WafMainClass)[vs[1].(string)]
	}).(WafMainClassOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WafMainClassInput)(nil)).Elem(), &WafMainClass{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafMainClassArrayInput)(nil)).Elem(), WafMainClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafMainClassMapInput)(nil)).Elem(), WafMainClassMap{})
	pulumi.RegisterOutputType(WafMainClassOutput{})
	pulumi.RegisterOutputType(WafMainClassArrayOutput{})
	pulumi.RegisterOutputType(WafMainClassMapOutput{})
}
