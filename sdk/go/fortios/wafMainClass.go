// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Hidden table for datasource.
//
// ## Import
//
// Waf MainClass can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/wafMainClass:WafMainClass labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WafMainClass struct {
	pulumi.CustomResourceState

	// Main signature class ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Main signature class name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWafMainClass registers a new resource with the given unique name, arguments, and options.
func NewWafMainClass(ctx *pulumi.Context,
	name string, args *WafMainClassArgs, opts ...pulumi.ResourceOption) (*WafMainClass, error) {
	if args == nil {
		args = &WafMainClassArgs{}
	}

	var resource WafMainClass
	err := ctx.RegisterResource("fortios:index/wafMainClass:WafMainClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafMainClass gets an existing WafMainClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafMainClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafMainClassState, opts ...pulumi.ResourceOption) (*WafMainClass, error) {
	var resource WafMainClass
	err := ctx.ReadResource("fortios:index/wafMainClass:WafMainClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafMainClass resources.
type wafMainClassState struct {
	// Main signature class ID.
	Fosid *int `pulumi:"fosid"`
	// Main signature class name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WafMainClassState struct {
	// Main signature class ID.
	Fosid pulumi.IntPtrInput
	// Main signature class name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafMainClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafMainClassState)(nil)).Elem()
}

type wafMainClassArgs struct {
	// Main signature class ID.
	Fosid *int `pulumi:"fosid"`
	// Main signature class name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WafMainClass resource.
type WafMainClassArgs struct {
	// Main signature class ID.
	Fosid pulumi.IntPtrInput
	// Main signature class name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafMainClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafMainClassArgs)(nil)).Elem()
}

type WafMainClassInput interface {
	pulumi.Input

	ToWafMainClassOutput() WafMainClassOutput
	ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput
}

func (*WafMainClass) ElementType() reflect.Type {
	return reflect.TypeOf((*WafMainClass)(nil))
}

func (i *WafMainClass) ToWafMainClassOutput() WafMainClassOutput {
	return i.ToWafMainClassOutputWithContext(context.Background())
}

func (i *WafMainClass) ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassOutput)
}

func (i *WafMainClass) ToWafMainClassPtrOutput() WafMainClassPtrOutput {
	return i.ToWafMainClassPtrOutputWithContext(context.Background())
}

func (i *WafMainClass) ToWafMainClassPtrOutputWithContext(ctx context.Context) WafMainClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassPtrOutput)
}

type WafMainClassPtrInput interface {
	pulumi.Input

	ToWafMainClassPtrOutput() WafMainClassPtrOutput
	ToWafMainClassPtrOutputWithContext(ctx context.Context) WafMainClassPtrOutput
}

type wafMainClassPtrType WafMainClassArgs

func (*wafMainClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WafMainClass)(nil))
}

func (i *wafMainClassPtrType) ToWafMainClassPtrOutput() WafMainClassPtrOutput {
	return i.ToWafMainClassPtrOutputWithContext(context.Background())
}

func (i *wafMainClassPtrType) ToWafMainClassPtrOutputWithContext(ctx context.Context) WafMainClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassPtrOutput)
}

// WafMainClassArrayInput is an input type that accepts WafMainClassArray and WafMainClassArrayOutput values.
// You can construct a concrete instance of `WafMainClassArrayInput` via:
//
//          WafMainClassArray{ WafMainClassArgs{...} }
type WafMainClassArrayInput interface {
	pulumi.Input

	ToWafMainClassArrayOutput() WafMainClassArrayOutput
	ToWafMainClassArrayOutputWithContext(context.Context) WafMainClassArrayOutput
}

type WafMainClassArray []WafMainClassInput

func (WafMainClassArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WafMainClass)(nil))
}

func (i WafMainClassArray) ToWafMainClassArrayOutput() WafMainClassArrayOutput {
	return i.ToWafMainClassArrayOutputWithContext(context.Background())
}

func (i WafMainClassArray) ToWafMainClassArrayOutputWithContext(ctx context.Context) WafMainClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassArrayOutput)
}

// WafMainClassMapInput is an input type that accepts WafMainClassMap and WafMainClassMapOutput values.
// You can construct a concrete instance of `WafMainClassMapInput` via:
//
//          WafMainClassMap{ "key": WafMainClassArgs{...} }
type WafMainClassMapInput interface {
	pulumi.Input

	ToWafMainClassMapOutput() WafMainClassMapOutput
	ToWafMainClassMapOutputWithContext(context.Context) WafMainClassMapOutput
}

type WafMainClassMap map[string]WafMainClassInput

func (WafMainClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WafMainClass)(nil))
}

func (i WafMainClassMap) ToWafMainClassMapOutput() WafMainClassMapOutput {
	return i.ToWafMainClassMapOutputWithContext(context.Background())
}

func (i WafMainClassMap) ToWafMainClassMapOutputWithContext(ctx context.Context) WafMainClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafMainClassMapOutput)
}

type WafMainClassOutput struct {
	*pulumi.OutputState
}

func (WafMainClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafMainClass)(nil))
}

func (o WafMainClassOutput) ToWafMainClassOutput() WafMainClassOutput {
	return o
}

func (o WafMainClassOutput) ToWafMainClassOutputWithContext(ctx context.Context) WafMainClassOutput {
	return o
}

func (o WafMainClassOutput) ToWafMainClassPtrOutput() WafMainClassPtrOutput {
	return o.ToWafMainClassPtrOutputWithContext(context.Background())
}

func (o WafMainClassOutput) ToWafMainClassPtrOutputWithContext(ctx context.Context) WafMainClassPtrOutput {
	return o.ApplyT(func(v WafMainClass) *WafMainClass {
		return &v
	}).(WafMainClassPtrOutput)
}

type WafMainClassPtrOutput struct {
	*pulumi.OutputState
}

func (WafMainClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafMainClass)(nil))
}

func (o WafMainClassPtrOutput) ToWafMainClassPtrOutput() WafMainClassPtrOutput {
	return o
}

func (o WafMainClassPtrOutput) ToWafMainClassPtrOutputWithContext(ctx context.Context) WafMainClassPtrOutput {
	return o
}

type WafMainClassArrayOutput struct{ *pulumi.OutputState }

func (WafMainClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafMainClass)(nil))
}

func (o WafMainClassArrayOutput) ToWafMainClassArrayOutput() WafMainClassArrayOutput {
	return o
}

func (o WafMainClassArrayOutput) ToWafMainClassArrayOutputWithContext(ctx context.Context) WafMainClassArrayOutput {
	return o
}

func (o WafMainClassArrayOutput) Index(i pulumi.IntInput) WafMainClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafMainClass {
		return vs[0].([]WafMainClass)[vs[1].(int)]
	}).(WafMainClassOutput)
}

type WafMainClassMapOutput struct{ *pulumi.OutputState }

func (WafMainClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WafMainClass)(nil))
}

func (o WafMainClassMapOutput) ToWafMainClassMapOutput() WafMainClassMapOutput {
	return o
}

func (o WafMainClassMapOutput) ToWafMainClassMapOutputWithContext(ctx context.Context) WafMainClassMapOutput {
	return o
}

func (o WafMainClassMapOutput) MapIndex(k pulumi.StringInput) WafMainClassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WafMainClass {
		return vs[0].(map[string]WafMainClass)[vs[1].(string)]
	}).(WafMainClassOutput)
}

func init() {
	pulumi.RegisterOutputType(WafMainClassOutput{})
	pulumi.RegisterOutputType(WafMainClassPtrOutput{})
	pulumi.RegisterOutputType(WafMainClassArrayOutput{})
	pulumi.RegisterOutputType(WafMainClassMapOutput{})
}
