// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WanoptWebcache struct {
	pulumi.CustomResourceState

	AlwaysRevalidate  pulumi.StringOutput    `pulumi:"alwaysRevalidate"`
	CacheByDefault    pulumi.StringOutput    `pulumi:"cacheByDefault"`
	CacheCookie       pulumi.StringOutput    `pulumi:"cacheCookie"`
	CacheExpired      pulumi.StringOutput    `pulumi:"cacheExpired"`
	DefaultTtl        pulumi.IntOutput       `pulumi:"defaultTtl"`
	External          pulumi.StringOutput    `pulumi:"external"`
	FreshFactor       pulumi.IntOutput       `pulumi:"freshFactor"`
	HostValidate      pulumi.StringOutput    `pulumi:"hostValidate"`
	IgnoreConditional pulumi.StringOutput    `pulumi:"ignoreConditional"`
	IgnoreIeReload    pulumi.StringOutput    `pulumi:"ignoreIeReload"`
	IgnoreIms         pulumi.StringOutput    `pulumi:"ignoreIms"`
	IgnorePnc         pulumi.StringOutput    `pulumi:"ignorePnc"`
	MaxObjectSize     pulumi.IntOutput       `pulumi:"maxObjectSize"`
	MaxTtl            pulumi.IntOutput       `pulumi:"maxTtl"`
	MinTtl            pulumi.IntOutput       `pulumi:"minTtl"`
	NegRespTime       pulumi.IntOutput       `pulumi:"negRespTime"`
	RevalPnc          pulumi.StringOutput    `pulumi:"revalPnc"`
	Vdomparam         pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWanoptWebcache registers a new resource with the given unique name, arguments, and options.
func NewWanoptWebcache(ctx *pulumi.Context,
	name string, args *WanoptWebcacheArgs, opts ...pulumi.ResourceOption) (*WanoptWebcache, error) {
	if args == nil {
		args = &WanoptWebcacheArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WanoptWebcache
	err := ctx.RegisterResource("fortios:index/wanoptWebcache:WanoptWebcache", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWanoptWebcache gets an existing WanoptWebcache resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWanoptWebcache(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WanoptWebcacheState, opts ...pulumi.ResourceOption) (*WanoptWebcache, error) {
	var resource WanoptWebcache
	err := ctx.ReadResource("fortios:index/wanoptWebcache:WanoptWebcache", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WanoptWebcache resources.
type wanoptWebcacheState struct {
	AlwaysRevalidate  *string `pulumi:"alwaysRevalidate"`
	CacheByDefault    *string `pulumi:"cacheByDefault"`
	CacheCookie       *string `pulumi:"cacheCookie"`
	CacheExpired      *string `pulumi:"cacheExpired"`
	DefaultTtl        *int    `pulumi:"defaultTtl"`
	External          *string `pulumi:"external"`
	FreshFactor       *int    `pulumi:"freshFactor"`
	HostValidate      *string `pulumi:"hostValidate"`
	IgnoreConditional *string `pulumi:"ignoreConditional"`
	IgnoreIeReload    *string `pulumi:"ignoreIeReload"`
	IgnoreIms         *string `pulumi:"ignoreIms"`
	IgnorePnc         *string `pulumi:"ignorePnc"`
	MaxObjectSize     *int    `pulumi:"maxObjectSize"`
	MaxTtl            *int    `pulumi:"maxTtl"`
	MinTtl            *int    `pulumi:"minTtl"`
	NegRespTime       *int    `pulumi:"negRespTime"`
	RevalPnc          *string `pulumi:"revalPnc"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

type WanoptWebcacheState struct {
	AlwaysRevalidate  pulumi.StringPtrInput
	CacheByDefault    pulumi.StringPtrInput
	CacheCookie       pulumi.StringPtrInput
	CacheExpired      pulumi.StringPtrInput
	DefaultTtl        pulumi.IntPtrInput
	External          pulumi.StringPtrInput
	FreshFactor       pulumi.IntPtrInput
	HostValidate      pulumi.StringPtrInput
	IgnoreConditional pulumi.StringPtrInput
	IgnoreIeReload    pulumi.StringPtrInput
	IgnoreIms         pulumi.StringPtrInput
	IgnorePnc         pulumi.StringPtrInput
	MaxObjectSize     pulumi.IntPtrInput
	MaxTtl            pulumi.IntPtrInput
	MinTtl            pulumi.IntPtrInput
	NegRespTime       pulumi.IntPtrInput
	RevalPnc          pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (WanoptWebcacheState) ElementType() reflect.Type {
	return reflect.TypeOf((*wanoptWebcacheState)(nil)).Elem()
}

type wanoptWebcacheArgs struct {
	AlwaysRevalidate  *string `pulumi:"alwaysRevalidate"`
	CacheByDefault    *string `pulumi:"cacheByDefault"`
	CacheCookie       *string `pulumi:"cacheCookie"`
	CacheExpired      *string `pulumi:"cacheExpired"`
	DefaultTtl        *int    `pulumi:"defaultTtl"`
	External          *string `pulumi:"external"`
	FreshFactor       *int    `pulumi:"freshFactor"`
	HostValidate      *string `pulumi:"hostValidate"`
	IgnoreConditional *string `pulumi:"ignoreConditional"`
	IgnoreIeReload    *string `pulumi:"ignoreIeReload"`
	IgnoreIms         *string `pulumi:"ignoreIms"`
	IgnorePnc         *string `pulumi:"ignorePnc"`
	MaxObjectSize     *int    `pulumi:"maxObjectSize"`
	MaxTtl            *int    `pulumi:"maxTtl"`
	MinTtl            *int    `pulumi:"minTtl"`
	NegRespTime       *int    `pulumi:"negRespTime"`
	RevalPnc          *string `pulumi:"revalPnc"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WanoptWebcache resource.
type WanoptWebcacheArgs struct {
	AlwaysRevalidate  pulumi.StringPtrInput
	CacheByDefault    pulumi.StringPtrInput
	CacheCookie       pulumi.StringPtrInput
	CacheExpired      pulumi.StringPtrInput
	DefaultTtl        pulumi.IntPtrInput
	External          pulumi.StringPtrInput
	FreshFactor       pulumi.IntPtrInput
	HostValidate      pulumi.StringPtrInput
	IgnoreConditional pulumi.StringPtrInput
	IgnoreIeReload    pulumi.StringPtrInput
	IgnoreIms         pulumi.StringPtrInput
	IgnorePnc         pulumi.StringPtrInput
	MaxObjectSize     pulumi.IntPtrInput
	MaxTtl            pulumi.IntPtrInput
	MinTtl            pulumi.IntPtrInput
	NegRespTime       pulumi.IntPtrInput
	RevalPnc          pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (WanoptWebcacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wanoptWebcacheArgs)(nil)).Elem()
}

type WanoptWebcacheInput interface {
	pulumi.Input

	ToWanoptWebcacheOutput() WanoptWebcacheOutput
	ToWanoptWebcacheOutputWithContext(ctx context.Context) WanoptWebcacheOutput
}

func (*WanoptWebcache) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptWebcache)(nil)).Elem()
}

func (i *WanoptWebcache) ToWanoptWebcacheOutput() WanoptWebcacheOutput {
	return i.ToWanoptWebcacheOutputWithContext(context.Background())
}

func (i *WanoptWebcache) ToWanoptWebcacheOutputWithContext(ctx context.Context) WanoptWebcacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptWebcacheOutput)
}

// WanoptWebcacheArrayInput is an input type that accepts WanoptWebcacheArray and WanoptWebcacheArrayOutput values.
// You can construct a concrete instance of `WanoptWebcacheArrayInput` via:
//
//	WanoptWebcacheArray{ WanoptWebcacheArgs{...} }
type WanoptWebcacheArrayInput interface {
	pulumi.Input

	ToWanoptWebcacheArrayOutput() WanoptWebcacheArrayOutput
	ToWanoptWebcacheArrayOutputWithContext(context.Context) WanoptWebcacheArrayOutput
}

type WanoptWebcacheArray []WanoptWebcacheInput

func (WanoptWebcacheArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WanoptWebcache)(nil)).Elem()
}

func (i WanoptWebcacheArray) ToWanoptWebcacheArrayOutput() WanoptWebcacheArrayOutput {
	return i.ToWanoptWebcacheArrayOutputWithContext(context.Background())
}

func (i WanoptWebcacheArray) ToWanoptWebcacheArrayOutputWithContext(ctx context.Context) WanoptWebcacheArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptWebcacheArrayOutput)
}

// WanoptWebcacheMapInput is an input type that accepts WanoptWebcacheMap and WanoptWebcacheMapOutput values.
// You can construct a concrete instance of `WanoptWebcacheMapInput` via:
//
//	WanoptWebcacheMap{ "key": WanoptWebcacheArgs{...} }
type WanoptWebcacheMapInput interface {
	pulumi.Input

	ToWanoptWebcacheMapOutput() WanoptWebcacheMapOutput
	ToWanoptWebcacheMapOutputWithContext(context.Context) WanoptWebcacheMapOutput
}

type WanoptWebcacheMap map[string]WanoptWebcacheInput

func (WanoptWebcacheMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WanoptWebcache)(nil)).Elem()
}

func (i WanoptWebcacheMap) ToWanoptWebcacheMapOutput() WanoptWebcacheMapOutput {
	return i.ToWanoptWebcacheMapOutputWithContext(context.Background())
}

func (i WanoptWebcacheMap) ToWanoptWebcacheMapOutputWithContext(ctx context.Context) WanoptWebcacheMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptWebcacheMapOutput)
}

type WanoptWebcacheOutput struct{ *pulumi.OutputState }

func (WanoptWebcacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptWebcache)(nil)).Elem()
}

func (o WanoptWebcacheOutput) ToWanoptWebcacheOutput() WanoptWebcacheOutput {
	return o
}

func (o WanoptWebcacheOutput) ToWanoptWebcacheOutputWithContext(ctx context.Context) WanoptWebcacheOutput {
	return o
}

func (o WanoptWebcacheOutput) AlwaysRevalidate() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.AlwaysRevalidate }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) CacheByDefault() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.CacheByDefault }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) CacheCookie() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.CacheCookie }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) CacheExpired() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.CacheExpired }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) DefaultTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.DefaultTtl }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) External() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.External }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) FreshFactor() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.FreshFactor }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) HostValidate() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.HostValidate }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) IgnoreConditional() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.IgnoreConditional }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) IgnoreIeReload() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.IgnoreIeReload }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) IgnoreIms() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.IgnoreIms }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) IgnorePnc() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.IgnorePnc }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) MaxObjectSize() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.MaxObjectSize }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) MaxTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.MaxTtl }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) MinTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.MinTtl }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) NegRespTime() pulumi.IntOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.IntOutput { return v.NegRespTime }).(pulumi.IntOutput)
}

func (o WanoptWebcacheOutput) RevalPnc() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringOutput { return v.RevalPnc }).(pulumi.StringOutput)
}

func (o WanoptWebcacheOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptWebcache) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WanoptWebcacheArrayOutput struct{ *pulumi.OutputState }

func (WanoptWebcacheArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WanoptWebcache)(nil)).Elem()
}

func (o WanoptWebcacheArrayOutput) ToWanoptWebcacheArrayOutput() WanoptWebcacheArrayOutput {
	return o
}

func (o WanoptWebcacheArrayOutput) ToWanoptWebcacheArrayOutputWithContext(ctx context.Context) WanoptWebcacheArrayOutput {
	return o
}

func (o WanoptWebcacheArrayOutput) Index(i pulumi.IntInput) WanoptWebcacheOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WanoptWebcache {
		return vs[0].([]*WanoptWebcache)[vs[1].(int)]
	}).(WanoptWebcacheOutput)
}

type WanoptWebcacheMapOutput struct{ *pulumi.OutputState }

func (WanoptWebcacheMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WanoptWebcache)(nil)).Elem()
}

func (o WanoptWebcacheMapOutput) ToWanoptWebcacheMapOutput() WanoptWebcacheMapOutput {
	return o
}

func (o WanoptWebcacheMapOutput) ToWanoptWebcacheMapOutputWithContext(ctx context.Context) WanoptWebcacheMapOutput {
	return o
}

func (o WanoptWebcacheMapOutput) MapIndex(k pulumi.StringInput) WanoptWebcacheOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WanoptWebcache {
		return vs[0].(map[string]*WanoptWebcache)[vs[1].(string)]
	}).(WanoptWebcacheOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptWebcacheInput)(nil)).Elem(), &WanoptWebcache{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptWebcacheArrayInput)(nil)).Elem(), WanoptWebcacheArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptWebcacheMapInput)(nil)).Elem(), WanoptWebcacheMap{})
	pulumi.RegisterOutputType(WanoptWebcacheOutput{})
	pulumi.RegisterOutputType(WanoptWebcacheArrayOutput{})
	pulumi.RegisterOutputType(WanoptWebcacheMapOutput{})
}
