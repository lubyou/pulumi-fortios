// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FortimanagerSystemSyslogServer struct {
	pulumi.CustomResourceState

	Ip   pulumi.StringPtrOutput `pulumi:"ip"`
	Name pulumi.StringOutput    `pulumi:"name"`
	Port pulumi.IntPtrOutput    `pulumi:"port"`
}

// NewFortimanagerSystemSyslogServer registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerSystemSyslogServer(ctx *pulumi.Context,
	name string, args *FortimanagerSystemSyslogServerArgs, opts ...pulumi.ResourceOption) (*FortimanagerSystemSyslogServer, error) {
	if args == nil {
		args = &FortimanagerSystemSyslogServerArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FortimanagerSystemSyslogServer
	err := ctx.RegisterResource("fortios:index/fortimanagerSystemSyslogServer:FortimanagerSystemSyslogServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerSystemSyslogServer gets an existing FortimanagerSystemSyslogServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerSystemSyslogServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerSystemSyslogServerState, opts ...pulumi.ResourceOption) (*FortimanagerSystemSyslogServer, error) {
	var resource FortimanagerSystemSyslogServer
	err := ctx.ReadResource("fortios:index/fortimanagerSystemSyslogServer:FortimanagerSystemSyslogServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerSystemSyslogServer resources.
type fortimanagerSystemSyslogServerState struct {
	Ip   *string `pulumi:"ip"`
	Name *string `pulumi:"name"`
	Port *int    `pulumi:"port"`
}

type FortimanagerSystemSyslogServerState struct {
	Ip   pulumi.StringPtrInput
	Name pulumi.StringPtrInput
	Port pulumi.IntPtrInput
}

func (FortimanagerSystemSyslogServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemSyslogServerState)(nil)).Elem()
}

type fortimanagerSystemSyslogServerArgs struct {
	Ip   *string `pulumi:"ip"`
	Name *string `pulumi:"name"`
	Port *int    `pulumi:"port"`
}

// The set of arguments for constructing a FortimanagerSystemSyslogServer resource.
type FortimanagerSystemSyslogServerArgs struct {
	Ip   pulumi.StringPtrInput
	Name pulumi.StringPtrInput
	Port pulumi.IntPtrInput
}

func (FortimanagerSystemSyslogServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemSyslogServerArgs)(nil)).Elem()
}

type FortimanagerSystemSyslogServerInput interface {
	pulumi.Input

	ToFortimanagerSystemSyslogServerOutput() FortimanagerSystemSyslogServerOutput
	ToFortimanagerSystemSyslogServerOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerOutput
}

func (*FortimanagerSystemSyslogServer) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (i *FortimanagerSystemSyslogServer) ToFortimanagerSystemSyslogServerOutput() FortimanagerSystemSyslogServerOutput {
	return i.ToFortimanagerSystemSyslogServerOutputWithContext(context.Background())
}

func (i *FortimanagerSystemSyslogServer) ToFortimanagerSystemSyslogServerOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemSyslogServerOutput)
}

// FortimanagerSystemSyslogServerArrayInput is an input type that accepts FortimanagerSystemSyslogServerArray and FortimanagerSystemSyslogServerArrayOutput values.
// You can construct a concrete instance of `FortimanagerSystemSyslogServerArrayInput` via:
//
//	FortimanagerSystemSyslogServerArray{ FortimanagerSystemSyslogServerArgs{...} }
type FortimanagerSystemSyslogServerArrayInput interface {
	pulumi.Input

	ToFortimanagerSystemSyslogServerArrayOutput() FortimanagerSystemSyslogServerArrayOutput
	ToFortimanagerSystemSyslogServerArrayOutputWithContext(context.Context) FortimanagerSystemSyslogServerArrayOutput
}

type FortimanagerSystemSyslogServerArray []FortimanagerSystemSyslogServerInput

func (FortimanagerSystemSyslogServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (i FortimanagerSystemSyslogServerArray) ToFortimanagerSystemSyslogServerArrayOutput() FortimanagerSystemSyslogServerArrayOutput {
	return i.ToFortimanagerSystemSyslogServerArrayOutputWithContext(context.Background())
}

func (i FortimanagerSystemSyslogServerArray) ToFortimanagerSystemSyslogServerArrayOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemSyslogServerArrayOutput)
}

// FortimanagerSystemSyslogServerMapInput is an input type that accepts FortimanagerSystemSyslogServerMap and FortimanagerSystemSyslogServerMapOutput values.
// You can construct a concrete instance of `FortimanagerSystemSyslogServerMapInput` via:
//
//	FortimanagerSystemSyslogServerMap{ "key": FortimanagerSystemSyslogServerArgs{...} }
type FortimanagerSystemSyslogServerMapInput interface {
	pulumi.Input

	ToFortimanagerSystemSyslogServerMapOutput() FortimanagerSystemSyslogServerMapOutput
	ToFortimanagerSystemSyslogServerMapOutputWithContext(context.Context) FortimanagerSystemSyslogServerMapOutput
}

type FortimanagerSystemSyslogServerMap map[string]FortimanagerSystemSyslogServerInput

func (FortimanagerSystemSyslogServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (i FortimanagerSystemSyslogServerMap) ToFortimanagerSystemSyslogServerMapOutput() FortimanagerSystemSyslogServerMapOutput {
	return i.ToFortimanagerSystemSyslogServerMapOutputWithContext(context.Background())
}

func (i FortimanagerSystemSyslogServerMap) ToFortimanagerSystemSyslogServerMapOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemSyslogServerMapOutput)
}

type FortimanagerSystemSyslogServerOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemSyslogServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (o FortimanagerSystemSyslogServerOutput) ToFortimanagerSystemSyslogServerOutput() FortimanagerSystemSyslogServerOutput {
	return o
}

func (o FortimanagerSystemSyslogServerOutput) ToFortimanagerSystemSyslogServerOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerOutput {
	return o
}

func (o FortimanagerSystemSyslogServerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerSystemSyslogServer) pulumi.StringPtrOutput { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o FortimanagerSystemSyslogServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FortimanagerSystemSyslogServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FortimanagerSystemSyslogServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FortimanagerSystemSyslogServer) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

type FortimanagerSystemSyslogServerArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemSyslogServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (o FortimanagerSystemSyslogServerArrayOutput) ToFortimanagerSystemSyslogServerArrayOutput() FortimanagerSystemSyslogServerArrayOutput {
	return o
}

func (o FortimanagerSystemSyslogServerArrayOutput) ToFortimanagerSystemSyslogServerArrayOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerArrayOutput {
	return o
}

func (o FortimanagerSystemSyslogServerArrayOutput) Index(i pulumi.IntInput) FortimanagerSystemSyslogServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerSystemSyslogServer {
		return vs[0].([]*FortimanagerSystemSyslogServer)[vs[1].(int)]
	}).(FortimanagerSystemSyslogServerOutput)
}

type FortimanagerSystemSyslogServerMapOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemSyslogServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemSyslogServer)(nil)).Elem()
}

func (o FortimanagerSystemSyslogServerMapOutput) ToFortimanagerSystemSyslogServerMapOutput() FortimanagerSystemSyslogServerMapOutput {
	return o
}

func (o FortimanagerSystemSyslogServerMapOutput) ToFortimanagerSystemSyslogServerMapOutputWithContext(ctx context.Context) FortimanagerSystemSyslogServerMapOutput {
	return o
}

func (o FortimanagerSystemSyslogServerMapOutput) MapIndex(k pulumi.StringInput) FortimanagerSystemSyslogServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerSystemSyslogServer {
		return vs[0].(map[string]*FortimanagerSystemSyslogServer)[vs[1].(string)]
	}).(FortimanagerSystemSyslogServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemSyslogServerInput)(nil)).Elem(), &FortimanagerSystemSyslogServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemSyslogServerArrayInput)(nil)).Elem(), FortimanagerSystemSyslogServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemSyslogServerMapInput)(nil)).Elem(), FortimanagerSystemSyslogServerMap{})
	pulumi.RegisterOutputType(FortimanagerSystemSyslogServerOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemSyslogServerArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemSyslogServerMapOutput{})
}
