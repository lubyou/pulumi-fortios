// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WebfilterFortiguard struct {
	pulumi.CustomResourceState

	CacheMemPercent        pulumi.IntOutput       `pulumi:"cacheMemPercent"`
	CacheMemPermille       pulumi.IntOutput       `pulumi:"cacheMemPermille"`
	CacheMode              pulumi.StringOutput    `pulumi:"cacheMode"`
	CachePrefixMatch       pulumi.StringOutput    `pulumi:"cachePrefixMatch"`
	ClosePorts             pulumi.StringOutput    `pulumi:"closePorts"`
	EmbedImage             pulumi.StringOutput    `pulumi:"embedImage"`
	OvrdAuthHttps          pulumi.StringOutput    `pulumi:"ovrdAuthHttps"`
	OvrdAuthPort           pulumi.IntOutput       `pulumi:"ovrdAuthPort"`
	OvrdAuthPortHttp       pulumi.IntOutput       `pulumi:"ovrdAuthPortHttp"`
	OvrdAuthPortHttps      pulumi.IntOutput       `pulumi:"ovrdAuthPortHttps"`
	OvrdAuthPortHttpsFlow  pulumi.IntOutput       `pulumi:"ovrdAuthPortHttpsFlow"`
	OvrdAuthPortWarning    pulumi.IntOutput       `pulumi:"ovrdAuthPortWarning"`
	RequestPacketSizeLimit pulumi.IntOutput       `pulumi:"requestPacketSizeLimit"`
	Vdomparam              pulumi.StringPtrOutput `pulumi:"vdomparam"`
	WarnAuthHttps          pulumi.StringOutput    `pulumi:"warnAuthHttps"`
}

// NewWebfilterFortiguard registers a new resource with the given unique name, arguments, and options.
func NewWebfilterFortiguard(ctx *pulumi.Context,
	name string, args *WebfilterFortiguardArgs, opts ...pulumi.ResourceOption) (*WebfilterFortiguard, error) {
	if args == nil {
		args = &WebfilterFortiguardArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebfilterFortiguard
	err := ctx.RegisterResource("fortios:index/webfilterFortiguard:WebfilterFortiguard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterFortiguard gets an existing WebfilterFortiguard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterFortiguard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterFortiguardState, opts ...pulumi.ResourceOption) (*WebfilterFortiguard, error) {
	var resource WebfilterFortiguard
	err := ctx.ReadResource("fortios:index/webfilterFortiguard:WebfilterFortiguard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterFortiguard resources.
type webfilterFortiguardState struct {
	CacheMemPercent        *int    `pulumi:"cacheMemPercent"`
	CacheMemPermille       *int    `pulumi:"cacheMemPermille"`
	CacheMode              *string `pulumi:"cacheMode"`
	CachePrefixMatch       *string `pulumi:"cachePrefixMatch"`
	ClosePorts             *string `pulumi:"closePorts"`
	EmbedImage             *string `pulumi:"embedImage"`
	OvrdAuthHttps          *string `pulumi:"ovrdAuthHttps"`
	OvrdAuthPort           *int    `pulumi:"ovrdAuthPort"`
	OvrdAuthPortHttp       *int    `pulumi:"ovrdAuthPortHttp"`
	OvrdAuthPortHttps      *int    `pulumi:"ovrdAuthPortHttps"`
	OvrdAuthPortHttpsFlow  *int    `pulumi:"ovrdAuthPortHttpsFlow"`
	OvrdAuthPortWarning    *int    `pulumi:"ovrdAuthPortWarning"`
	RequestPacketSizeLimit *int    `pulumi:"requestPacketSizeLimit"`
	Vdomparam              *string `pulumi:"vdomparam"`
	WarnAuthHttps          *string `pulumi:"warnAuthHttps"`
}

type WebfilterFortiguardState struct {
	CacheMemPercent        pulumi.IntPtrInput
	CacheMemPermille       pulumi.IntPtrInput
	CacheMode              pulumi.StringPtrInput
	CachePrefixMatch       pulumi.StringPtrInput
	ClosePorts             pulumi.StringPtrInput
	EmbedImage             pulumi.StringPtrInput
	OvrdAuthHttps          pulumi.StringPtrInput
	OvrdAuthPort           pulumi.IntPtrInput
	OvrdAuthPortHttp       pulumi.IntPtrInput
	OvrdAuthPortHttps      pulumi.IntPtrInput
	OvrdAuthPortHttpsFlow  pulumi.IntPtrInput
	OvrdAuthPortWarning    pulumi.IntPtrInput
	RequestPacketSizeLimit pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
	WarnAuthHttps          pulumi.StringPtrInput
}

func (WebfilterFortiguardState) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterFortiguardState)(nil)).Elem()
}

type webfilterFortiguardArgs struct {
	CacheMemPercent        *int    `pulumi:"cacheMemPercent"`
	CacheMemPermille       *int    `pulumi:"cacheMemPermille"`
	CacheMode              *string `pulumi:"cacheMode"`
	CachePrefixMatch       *string `pulumi:"cachePrefixMatch"`
	ClosePorts             *string `pulumi:"closePorts"`
	EmbedImage             *string `pulumi:"embedImage"`
	OvrdAuthHttps          *string `pulumi:"ovrdAuthHttps"`
	OvrdAuthPort           *int    `pulumi:"ovrdAuthPort"`
	OvrdAuthPortHttp       *int    `pulumi:"ovrdAuthPortHttp"`
	OvrdAuthPortHttps      *int    `pulumi:"ovrdAuthPortHttps"`
	OvrdAuthPortHttpsFlow  *int    `pulumi:"ovrdAuthPortHttpsFlow"`
	OvrdAuthPortWarning    *int    `pulumi:"ovrdAuthPortWarning"`
	RequestPacketSizeLimit *int    `pulumi:"requestPacketSizeLimit"`
	Vdomparam              *string `pulumi:"vdomparam"`
	WarnAuthHttps          *string `pulumi:"warnAuthHttps"`
}

// The set of arguments for constructing a WebfilterFortiguard resource.
type WebfilterFortiguardArgs struct {
	CacheMemPercent        pulumi.IntPtrInput
	CacheMemPermille       pulumi.IntPtrInput
	CacheMode              pulumi.StringPtrInput
	CachePrefixMatch       pulumi.StringPtrInput
	ClosePorts             pulumi.StringPtrInput
	EmbedImage             pulumi.StringPtrInput
	OvrdAuthHttps          pulumi.StringPtrInput
	OvrdAuthPort           pulumi.IntPtrInput
	OvrdAuthPortHttp       pulumi.IntPtrInput
	OvrdAuthPortHttps      pulumi.IntPtrInput
	OvrdAuthPortHttpsFlow  pulumi.IntPtrInput
	OvrdAuthPortWarning    pulumi.IntPtrInput
	RequestPacketSizeLimit pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
	WarnAuthHttps          pulumi.StringPtrInput
}

func (WebfilterFortiguardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterFortiguardArgs)(nil)).Elem()
}

type WebfilterFortiguardInput interface {
	pulumi.Input

	ToWebfilterFortiguardOutput() WebfilterFortiguardOutput
	ToWebfilterFortiguardOutputWithContext(ctx context.Context) WebfilterFortiguardOutput
}

func (*WebfilterFortiguard) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterFortiguard)(nil)).Elem()
}

func (i *WebfilterFortiguard) ToWebfilterFortiguardOutput() WebfilterFortiguardOutput {
	return i.ToWebfilterFortiguardOutputWithContext(context.Background())
}

func (i *WebfilterFortiguard) ToWebfilterFortiguardOutputWithContext(ctx context.Context) WebfilterFortiguardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterFortiguardOutput)
}

func (i *WebfilterFortiguard) ToOutput(ctx context.Context) pulumix.Output[*WebfilterFortiguard] {
	return pulumix.Output[*WebfilterFortiguard]{
		OutputState: i.ToWebfilterFortiguardOutputWithContext(ctx).OutputState,
	}
}

// WebfilterFortiguardArrayInput is an input type that accepts WebfilterFortiguardArray and WebfilterFortiguardArrayOutput values.
// You can construct a concrete instance of `WebfilterFortiguardArrayInput` via:
//
//	WebfilterFortiguardArray{ WebfilterFortiguardArgs{...} }
type WebfilterFortiguardArrayInput interface {
	pulumi.Input

	ToWebfilterFortiguardArrayOutput() WebfilterFortiguardArrayOutput
	ToWebfilterFortiguardArrayOutputWithContext(context.Context) WebfilterFortiguardArrayOutput
}

type WebfilterFortiguardArray []WebfilterFortiguardInput

func (WebfilterFortiguardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterFortiguard)(nil)).Elem()
}

func (i WebfilterFortiguardArray) ToWebfilterFortiguardArrayOutput() WebfilterFortiguardArrayOutput {
	return i.ToWebfilterFortiguardArrayOutputWithContext(context.Background())
}

func (i WebfilterFortiguardArray) ToWebfilterFortiguardArrayOutputWithContext(ctx context.Context) WebfilterFortiguardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterFortiguardArrayOutput)
}

func (i WebfilterFortiguardArray) ToOutput(ctx context.Context) pulumix.Output[[]*WebfilterFortiguard] {
	return pulumix.Output[[]*WebfilterFortiguard]{
		OutputState: i.ToWebfilterFortiguardArrayOutputWithContext(ctx).OutputState,
	}
}

// WebfilterFortiguardMapInput is an input type that accepts WebfilterFortiguardMap and WebfilterFortiguardMapOutput values.
// You can construct a concrete instance of `WebfilterFortiguardMapInput` via:
//
//	WebfilterFortiguardMap{ "key": WebfilterFortiguardArgs{...} }
type WebfilterFortiguardMapInput interface {
	pulumi.Input

	ToWebfilterFortiguardMapOutput() WebfilterFortiguardMapOutput
	ToWebfilterFortiguardMapOutputWithContext(context.Context) WebfilterFortiguardMapOutput
}

type WebfilterFortiguardMap map[string]WebfilterFortiguardInput

func (WebfilterFortiguardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterFortiguard)(nil)).Elem()
}

func (i WebfilterFortiguardMap) ToWebfilterFortiguardMapOutput() WebfilterFortiguardMapOutput {
	return i.ToWebfilterFortiguardMapOutputWithContext(context.Background())
}

func (i WebfilterFortiguardMap) ToWebfilterFortiguardMapOutputWithContext(ctx context.Context) WebfilterFortiguardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterFortiguardMapOutput)
}

func (i WebfilterFortiguardMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebfilterFortiguard] {
	return pulumix.Output[map[string]*WebfilterFortiguard]{
		OutputState: i.ToWebfilterFortiguardMapOutputWithContext(ctx).OutputState,
	}
}

type WebfilterFortiguardOutput struct{ *pulumi.OutputState }

func (WebfilterFortiguardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterFortiguard)(nil)).Elem()
}

func (o WebfilterFortiguardOutput) ToWebfilterFortiguardOutput() WebfilterFortiguardOutput {
	return o
}

func (o WebfilterFortiguardOutput) ToWebfilterFortiguardOutputWithContext(ctx context.Context) WebfilterFortiguardOutput {
	return o
}

func (o WebfilterFortiguardOutput) ToOutput(ctx context.Context) pulumix.Output[*WebfilterFortiguard] {
	return pulumix.Output[*WebfilterFortiguard]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterFortiguardOutput) CacheMemPercent() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.CacheMemPercent }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) CacheMemPermille() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.CacheMemPermille }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) CacheMode() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.CacheMode }).(pulumi.StringOutput)
}

func (o WebfilterFortiguardOutput) CachePrefixMatch() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.CachePrefixMatch }).(pulumi.StringOutput)
}

func (o WebfilterFortiguardOutput) ClosePorts() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.ClosePorts }).(pulumi.StringOutput)
}

func (o WebfilterFortiguardOutput) EmbedImage() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.EmbedImage }).(pulumi.StringOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.OvrdAuthHttps }).(pulumi.StringOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthPort() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.OvrdAuthPort }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthPortHttp() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttp }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthPortHttps() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttps }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthPortHttpsFlow() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.OvrdAuthPortHttpsFlow }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) OvrdAuthPortWarning() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.OvrdAuthPortWarning }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) RequestPacketSizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.IntOutput { return v.RequestPacketSizeLimit }).(pulumi.IntOutput)
}

func (o WebfilterFortiguardOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o WebfilterFortiguardOutput) WarnAuthHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterFortiguard) pulumi.StringOutput { return v.WarnAuthHttps }).(pulumi.StringOutput)
}

type WebfilterFortiguardArrayOutput struct{ *pulumi.OutputState }

func (WebfilterFortiguardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterFortiguard)(nil)).Elem()
}

func (o WebfilterFortiguardArrayOutput) ToWebfilterFortiguardArrayOutput() WebfilterFortiguardArrayOutput {
	return o
}

func (o WebfilterFortiguardArrayOutput) ToWebfilterFortiguardArrayOutputWithContext(ctx context.Context) WebfilterFortiguardArrayOutput {
	return o
}

func (o WebfilterFortiguardArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WebfilterFortiguard] {
	return pulumix.Output[[]*WebfilterFortiguard]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterFortiguardArrayOutput) Index(i pulumi.IntInput) WebfilterFortiguardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebfilterFortiguard {
		return vs[0].([]*WebfilterFortiguard)[vs[1].(int)]
	}).(WebfilterFortiguardOutput)
}

type WebfilterFortiguardMapOutput struct{ *pulumi.OutputState }

func (WebfilterFortiguardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterFortiguard)(nil)).Elem()
}

func (o WebfilterFortiguardMapOutput) ToWebfilterFortiguardMapOutput() WebfilterFortiguardMapOutput {
	return o
}

func (o WebfilterFortiguardMapOutput) ToWebfilterFortiguardMapOutputWithContext(ctx context.Context) WebfilterFortiguardMapOutput {
	return o
}

func (o WebfilterFortiguardMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebfilterFortiguard] {
	return pulumix.Output[map[string]*WebfilterFortiguard]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterFortiguardMapOutput) MapIndex(k pulumi.StringInput) WebfilterFortiguardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebfilterFortiguard {
		return vs[0].(map[string]*WebfilterFortiguard)[vs[1].(string)]
	}).(WebfilterFortiguardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterFortiguardInput)(nil)).Elem(), &WebfilterFortiguard{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterFortiguardArrayInput)(nil)).Elem(), WebfilterFortiguardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterFortiguardMapInput)(nil)).Elem(), WebfilterFortiguardMap{})
	pulumi.RegisterOutputType(WebfilterFortiguardOutput{})
	pulumi.RegisterOutputType(WebfilterFortiguardArrayOutput{})
	pulumi.RegisterOutputType(WebfilterFortiguardMapOutput{})
}
