// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallNetworkServiceDynamic struct {
	pulumi.CustomResourceState

	Comment   pulumi.StringPtrOutput `pulumi:"comment"`
	Filter    pulumi.StringPtrOutput `pulumi:"filter"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Sdn       pulumi.StringOutput    `pulumi:"sdn"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallNetworkServiceDynamic registers a new resource with the given unique name, arguments, and options.
func NewFirewallNetworkServiceDynamic(ctx *pulumi.Context,
	name string, args *FirewallNetworkServiceDynamicArgs, opts ...pulumi.ResourceOption) (*FirewallNetworkServiceDynamic, error) {
	if args == nil {
		args = &FirewallNetworkServiceDynamicArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallNetworkServiceDynamic
	err := ctx.RegisterResource("fortios:index/firewallNetworkServiceDynamic:FirewallNetworkServiceDynamic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallNetworkServiceDynamic gets an existing FirewallNetworkServiceDynamic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallNetworkServiceDynamic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallNetworkServiceDynamicState, opts ...pulumi.ResourceOption) (*FirewallNetworkServiceDynamic, error) {
	var resource FirewallNetworkServiceDynamic
	err := ctx.ReadResource("fortios:index/firewallNetworkServiceDynamic:FirewallNetworkServiceDynamic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallNetworkServiceDynamic resources.
type firewallNetworkServiceDynamicState struct {
	Comment   *string `pulumi:"comment"`
	Filter    *string `pulumi:"filter"`
	Name      *string `pulumi:"name"`
	Sdn       *string `pulumi:"sdn"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallNetworkServiceDynamicState struct {
	Comment   pulumi.StringPtrInput
	Filter    pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Sdn       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (FirewallNetworkServiceDynamicState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallNetworkServiceDynamicState)(nil)).Elem()
}

type firewallNetworkServiceDynamicArgs struct {
	Comment   *string `pulumi:"comment"`
	Filter    *string `pulumi:"filter"`
	Name      *string `pulumi:"name"`
	Sdn       *string `pulumi:"sdn"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallNetworkServiceDynamic resource.
type FirewallNetworkServiceDynamicArgs struct {
	Comment   pulumi.StringPtrInput
	Filter    pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Sdn       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (FirewallNetworkServiceDynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallNetworkServiceDynamicArgs)(nil)).Elem()
}

type FirewallNetworkServiceDynamicInput interface {
	pulumi.Input

	ToFirewallNetworkServiceDynamicOutput() FirewallNetworkServiceDynamicOutput
	ToFirewallNetworkServiceDynamicOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicOutput
}

func (*FirewallNetworkServiceDynamic) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (i *FirewallNetworkServiceDynamic) ToFirewallNetworkServiceDynamicOutput() FirewallNetworkServiceDynamicOutput {
	return i.ToFirewallNetworkServiceDynamicOutputWithContext(context.Background())
}

func (i *FirewallNetworkServiceDynamic) ToFirewallNetworkServiceDynamicOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkServiceDynamicOutput)
}

func (i *FirewallNetworkServiceDynamic) ToOutput(ctx context.Context) pulumix.Output[*FirewallNetworkServiceDynamic] {
	return pulumix.Output[*FirewallNetworkServiceDynamic]{
		OutputState: i.ToFirewallNetworkServiceDynamicOutputWithContext(ctx).OutputState,
	}
}

// FirewallNetworkServiceDynamicArrayInput is an input type that accepts FirewallNetworkServiceDynamicArray and FirewallNetworkServiceDynamicArrayOutput values.
// You can construct a concrete instance of `FirewallNetworkServiceDynamicArrayInput` via:
//
//	FirewallNetworkServiceDynamicArray{ FirewallNetworkServiceDynamicArgs{...} }
type FirewallNetworkServiceDynamicArrayInput interface {
	pulumi.Input

	ToFirewallNetworkServiceDynamicArrayOutput() FirewallNetworkServiceDynamicArrayOutput
	ToFirewallNetworkServiceDynamicArrayOutputWithContext(context.Context) FirewallNetworkServiceDynamicArrayOutput
}

type FirewallNetworkServiceDynamicArray []FirewallNetworkServiceDynamicInput

func (FirewallNetworkServiceDynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (i FirewallNetworkServiceDynamicArray) ToFirewallNetworkServiceDynamicArrayOutput() FirewallNetworkServiceDynamicArrayOutput {
	return i.ToFirewallNetworkServiceDynamicArrayOutputWithContext(context.Background())
}

func (i FirewallNetworkServiceDynamicArray) ToFirewallNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkServiceDynamicArrayOutput)
}

func (i FirewallNetworkServiceDynamicArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallNetworkServiceDynamic] {
	return pulumix.Output[[]*FirewallNetworkServiceDynamic]{
		OutputState: i.ToFirewallNetworkServiceDynamicArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallNetworkServiceDynamicMapInput is an input type that accepts FirewallNetworkServiceDynamicMap and FirewallNetworkServiceDynamicMapOutput values.
// You can construct a concrete instance of `FirewallNetworkServiceDynamicMapInput` via:
//
//	FirewallNetworkServiceDynamicMap{ "key": FirewallNetworkServiceDynamicArgs{...} }
type FirewallNetworkServiceDynamicMapInput interface {
	pulumi.Input

	ToFirewallNetworkServiceDynamicMapOutput() FirewallNetworkServiceDynamicMapOutput
	ToFirewallNetworkServiceDynamicMapOutputWithContext(context.Context) FirewallNetworkServiceDynamicMapOutput
}

type FirewallNetworkServiceDynamicMap map[string]FirewallNetworkServiceDynamicInput

func (FirewallNetworkServiceDynamicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (i FirewallNetworkServiceDynamicMap) ToFirewallNetworkServiceDynamicMapOutput() FirewallNetworkServiceDynamicMapOutput {
	return i.ToFirewallNetworkServiceDynamicMapOutputWithContext(context.Background())
}

func (i FirewallNetworkServiceDynamicMap) ToFirewallNetworkServiceDynamicMapOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkServiceDynamicMapOutput)
}

func (i FirewallNetworkServiceDynamicMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallNetworkServiceDynamic] {
	return pulumix.Output[map[string]*FirewallNetworkServiceDynamic]{
		OutputState: i.ToFirewallNetworkServiceDynamicMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallNetworkServiceDynamicOutput struct{ *pulumi.OutputState }

func (FirewallNetworkServiceDynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (o FirewallNetworkServiceDynamicOutput) ToFirewallNetworkServiceDynamicOutput() FirewallNetworkServiceDynamicOutput {
	return o
}

func (o FirewallNetworkServiceDynamicOutput) ToFirewallNetworkServiceDynamicOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicOutput {
	return o
}

func (o FirewallNetworkServiceDynamicOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallNetworkServiceDynamic] {
	return pulumix.Output[*FirewallNetworkServiceDynamic]{
		OutputState: o.OutputState,
	}
}

func (o FirewallNetworkServiceDynamicOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallNetworkServiceDynamic) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallNetworkServiceDynamicOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallNetworkServiceDynamic) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o FirewallNetworkServiceDynamicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkServiceDynamic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallNetworkServiceDynamicOutput) Sdn() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkServiceDynamic) pulumi.StringOutput { return v.Sdn }).(pulumi.StringOutput)
}

func (o FirewallNetworkServiceDynamicOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallNetworkServiceDynamic) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallNetworkServiceDynamicArrayOutput struct{ *pulumi.OutputState }

func (FirewallNetworkServiceDynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (o FirewallNetworkServiceDynamicArrayOutput) ToFirewallNetworkServiceDynamicArrayOutput() FirewallNetworkServiceDynamicArrayOutput {
	return o
}

func (o FirewallNetworkServiceDynamicArrayOutput) ToFirewallNetworkServiceDynamicArrayOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicArrayOutput {
	return o
}

func (o FirewallNetworkServiceDynamicArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallNetworkServiceDynamic] {
	return pulumix.Output[[]*FirewallNetworkServiceDynamic]{
		OutputState: o.OutputState,
	}
}

func (o FirewallNetworkServiceDynamicArrayOutput) Index(i pulumi.IntInput) FirewallNetworkServiceDynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallNetworkServiceDynamic {
		return vs[0].([]*FirewallNetworkServiceDynamic)[vs[1].(int)]
	}).(FirewallNetworkServiceDynamicOutput)
}

type FirewallNetworkServiceDynamicMapOutput struct{ *pulumi.OutputState }

func (FirewallNetworkServiceDynamicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallNetworkServiceDynamic)(nil)).Elem()
}

func (o FirewallNetworkServiceDynamicMapOutput) ToFirewallNetworkServiceDynamicMapOutput() FirewallNetworkServiceDynamicMapOutput {
	return o
}

func (o FirewallNetworkServiceDynamicMapOutput) ToFirewallNetworkServiceDynamicMapOutputWithContext(ctx context.Context) FirewallNetworkServiceDynamicMapOutput {
	return o
}

func (o FirewallNetworkServiceDynamicMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallNetworkServiceDynamic] {
	return pulumix.Output[map[string]*FirewallNetworkServiceDynamic]{
		OutputState: o.OutputState,
	}
}

func (o FirewallNetworkServiceDynamicMapOutput) MapIndex(k pulumi.StringInput) FirewallNetworkServiceDynamicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallNetworkServiceDynamic {
		return vs[0].(map[string]*FirewallNetworkServiceDynamic)[vs[1].(string)]
	}).(FirewallNetworkServiceDynamicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkServiceDynamicInput)(nil)).Elem(), &FirewallNetworkServiceDynamic{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkServiceDynamicArrayInput)(nil)).Elem(), FirewallNetworkServiceDynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkServiceDynamicMapInput)(nil)).Elem(), FirewallNetworkServiceDynamicMap{})
	pulumi.RegisterOutputType(FirewallNetworkServiceDynamicOutput{})
	pulumi.RegisterOutputType(FirewallNetworkServiceDynamicArrayOutput{})
	pulumi.RegisterOutputType(FirewallNetworkServiceDynamicMapOutput{})
}
