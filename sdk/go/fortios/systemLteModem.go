// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure USB LTE/WIMAX devices. Applies to FortiOS Version `>= 7.0.4`.
//
// ## Import
//
// System LteModem can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemLteModem:SystemLteModem labelname SystemLteModem
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemLteModem:SystemLteModem labelname SystemLteModem
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemLteModem struct {
	pulumi.CustomResourceState

	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringOutput `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringOutput `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringOutput `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntOutput `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort pulumi.IntOutput `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrOutput `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringOutput `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemLteModem registers a new resource with the given unique name, arguments, and options.
func NewSystemLteModem(ctx *pulumi.Context,
	name string, args *SystemLteModemArgs, opts ...pulumi.ResourceOption) (*SystemLteModem, error) {
	if args == nil {
		args = &SystemLteModemArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemLteModem
	err := ctx.RegisterResource("fortios:index/systemLteModem:SystemLteModem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemLteModem gets an existing SystemLteModem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemLteModem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemLteModemState, opts ...pulumi.ResourceOption) (*SystemLteModem, error) {
	var resource SystemLteModem
	err := ctx.ReadResource("fortios:index/systemLteModem:SystemLteModem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemLteModem resources.
type systemLteModemState struct {
	// Login APN string for PDP-IP packet data calls.
	Apn *string `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype *string `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit *string `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer *int `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface *string `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort *int `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd *string `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemLteModemState struct {
	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringPtrInput
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringPtrInput
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringPtrInput
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntPtrInput
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringPtrInput
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Modem port index (0 - 20).
	ModemPort pulumi.IntPtrInput
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrInput
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemLteModemState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemLteModemState)(nil)).Elem()
}

type systemLteModemArgs struct {
	// Login APN string for PDP-IP packet data calls.
	Apn *string `pulumi:"apn"`
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype *string `pulumi:"authtype"`
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit *string `pulumi:"extraInit"`
	// Hold down timer (10 - 60 sec).
	HolddownTimer *int `pulumi:"holddownTimer"`
	// The interface that the modem is acting as a redundant interface for.
	Interface *string `pulumi:"interface"`
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode *string `pulumi:"mode"`
	// Modem port index (0 - 20).
	ModemPort *int `pulumi:"modemPort"`
	// Authentication password for PDP-IP packet data calls.
	Passwd *string `pulumi:"passwd"`
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Authentication username for PDP-IP packet data calls.
	Username *string `pulumi:"username"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemLteModem resource.
type SystemLteModemArgs struct {
	// Login APN string for PDP-IP packet data calls.
	Apn pulumi.StringPtrInput
	// Authentication type for PDP-IP packet data calls. Valid values: `none`, `pap`, `chap`.
	Authtype pulumi.StringPtrInput
	// Extra initialization string for USB LTE/WIMAX devices.
	ExtraInit pulumi.StringPtrInput
	// Hold down timer (10 - 60 sec).
	HolddownTimer pulumi.IntPtrInput
	// The interface that the modem is acting as a redundant interface for.
	Interface pulumi.StringPtrInput
	// Modem operation mode. Valid values: `standalone`, `redundant`.
	Mode pulumi.StringPtrInput
	// Modem port index (0 - 20).
	ModemPort pulumi.IntPtrInput
	// Authentication password for PDP-IP packet data calls.
	Passwd pulumi.StringPtrInput
	// Enable/disable USB LTE/WIMAX device. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Authentication username for PDP-IP packet data calls.
	Username pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemLteModemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemLteModemArgs)(nil)).Elem()
}

type SystemLteModemInput interface {
	pulumi.Input

	ToSystemLteModemOutput() SystemLteModemOutput
	ToSystemLteModemOutputWithContext(ctx context.Context) SystemLteModemOutput
}

func (*SystemLteModem) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLteModem)(nil)).Elem()
}

func (i *SystemLteModem) ToSystemLteModemOutput() SystemLteModemOutput {
	return i.ToSystemLteModemOutputWithContext(context.Background())
}

func (i *SystemLteModem) ToSystemLteModemOutputWithContext(ctx context.Context) SystemLteModemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLteModemOutput)
}

// SystemLteModemArrayInput is an input type that accepts SystemLteModemArray and SystemLteModemArrayOutput values.
// You can construct a concrete instance of `SystemLteModemArrayInput` via:
//
//          SystemLteModemArray{ SystemLteModemArgs{...} }
type SystemLteModemArrayInput interface {
	pulumi.Input

	ToSystemLteModemArrayOutput() SystemLteModemArrayOutput
	ToSystemLteModemArrayOutputWithContext(context.Context) SystemLteModemArrayOutput
}

type SystemLteModemArray []SystemLteModemInput

func (SystemLteModemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemLteModem)(nil)).Elem()
}

func (i SystemLteModemArray) ToSystemLteModemArrayOutput() SystemLteModemArrayOutput {
	return i.ToSystemLteModemArrayOutputWithContext(context.Background())
}

func (i SystemLteModemArray) ToSystemLteModemArrayOutputWithContext(ctx context.Context) SystemLteModemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLteModemArrayOutput)
}

// SystemLteModemMapInput is an input type that accepts SystemLteModemMap and SystemLteModemMapOutput values.
// You can construct a concrete instance of `SystemLteModemMapInput` via:
//
//          SystemLteModemMap{ "key": SystemLteModemArgs{...} }
type SystemLteModemMapInput interface {
	pulumi.Input

	ToSystemLteModemMapOutput() SystemLteModemMapOutput
	ToSystemLteModemMapOutputWithContext(context.Context) SystemLteModemMapOutput
}

type SystemLteModemMap map[string]SystemLteModemInput

func (SystemLteModemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemLteModem)(nil)).Elem()
}

func (i SystemLteModemMap) ToSystemLteModemMapOutput() SystemLteModemMapOutput {
	return i.ToSystemLteModemMapOutputWithContext(context.Background())
}

func (i SystemLteModemMap) ToSystemLteModemMapOutputWithContext(ctx context.Context) SystemLteModemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLteModemMapOutput)
}

type SystemLteModemOutput struct{ *pulumi.OutputState }

func (SystemLteModemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLteModem)(nil)).Elem()
}

func (o SystemLteModemOutput) ToSystemLteModemOutput() SystemLteModemOutput {
	return o
}

func (o SystemLteModemOutput) ToSystemLteModemOutputWithContext(ctx context.Context) SystemLteModemOutput {
	return o
}

type SystemLteModemArrayOutput struct{ *pulumi.OutputState }

func (SystemLteModemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemLteModem)(nil)).Elem()
}

func (o SystemLteModemArrayOutput) ToSystemLteModemArrayOutput() SystemLteModemArrayOutput {
	return o
}

func (o SystemLteModemArrayOutput) ToSystemLteModemArrayOutputWithContext(ctx context.Context) SystemLteModemArrayOutput {
	return o
}

func (o SystemLteModemArrayOutput) Index(i pulumi.IntInput) SystemLteModemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemLteModem {
		return vs[0].([]*SystemLteModem)[vs[1].(int)]
	}).(SystemLteModemOutput)
}

type SystemLteModemMapOutput struct{ *pulumi.OutputState }

func (SystemLteModemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemLteModem)(nil)).Elem()
}

func (o SystemLteModemMapOutput) ToSystemLteModemMapOutput() SystemLteModemMapOutput {
	return o
}

func (o SystemLteModemMapOutput) ToSystemLteModemMapOutputWithContext(ctx context.Context) SystemLteModemMapOutput {
	return o
}

func (o SystemLteModemMapOutput) MapIndex(k pulumi.StringInput) SystemLteModemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemLteModem {
		return vs[0].(map[string]*SystemLteModem)[vs[1].(string)]
	}).(SystemLteModemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLteModemInput)(nil)).Elem(), &SystemLteModem{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLteModemArrayInput)(nil)).Elem(), SystemLteModemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLteModemMapInput)(nil)).Elem(), SystemLteModemMap{})
	pulumi.RegisterOutputType(SystemLteModemOutput{})
	pulumi.RegisterOutputType(SystemLteModemArrayOutput{})
	pulumi.RegisterOutputType(SystemLteModemMapOutput{})
}
