// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure resource limits.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemResourceLimits(ctx, "trname", &fortios.SystemResourceLimitsArgs{
// 			CustomService:        pulumi.Int(0),
// 			DialupTunnel:         pulumi.Int(0),
// 			FirewallAddress:      pulumi.Int(41024),
// 			FirewallAddrgrp:      pulumi.Int(10692),
// 			FirewallPolicy:       pulumi.Int(41024),
// 			IpsecPhase1:          pulumi.Int(2000),
// 			IpsecPhase1Interface: pulumi.Int(0),
// 			IpsecPhase2:          pulumi.Int(2000),
// 			IpsecPhase2Interface: pulumi.Int(0),
// 			LogDiskQuota:         pulumi.Int(30235),
// 			OnetimeSchedule:      pulumi.Int(0),
// 			Proxy:                pulumi.Int(64000),
// 			RecurringSchedule:    pulumi.Int(0),
// 			ServiceGroup:         pulumi.Int(0),
// 			Session:              pulumi.Int(0),
// 			Sslvpn:               pulumi.Int(0),
// 			User:                 pulumi.Int(0),
// 			UserGroup:            pulumi.Int(0),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System ResourceLimits can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemResourceLimits:SystemResourceLimits labelname SystemResourceLimits
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemResourceLimits struct {
	pulumi.CustomResourceState

	// Maximum number of firewall custom services.
	CustomService pulumi.IntOutput `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntOutput `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntOutput `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntOutput `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntOutput `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntOutput `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntOutput `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntOutput `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntOutput `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in MB.
	LogDiskQuota pulumi.IntOutput `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntOutput `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntOutput `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntOutput `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntOutput `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session pulumi.IntOutput `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntOutput `pulumi:"sslvpn"`
	// Maximum number of local users.
	User pulumi.IntOutput `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup pulumi.IntOutput `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemResourceLimits registers a new resource with the given unique name, arguments, and options.
func NewSystemResourceLimits(ctx *pulumi.Context,
	name string, args *SystemResourceLimitsArgs, opts ...pulumi.ResourceOption) (*SystemResourceLimits, error) {
	if args == nil {
		args = &SystemResourceLimitsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemResourceLimits
	err := ctx.RegisterResource("fortios:index/systemResourceLimits:SystemResourceLimits", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemResourceLimits gets an existing SystemResourceLimits resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemResourceLimits(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemResourceLimitsState, opts ...pulumi.ResourceOption) (*SystemResourceLimits, error) {
	var resource SystemResourceLimits
	err := ctx.ReadResource("fortios:index/systemResourceLimits:SystemResourceLimits", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemResourceLimits resources.
type systemResourceLimitsState struct {
	// Maximum number of firewall custom services.
	CustomService *int `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel *int `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress *int `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp *int `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy *int `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 *int `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface *int `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 *int `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface *int `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in MB.
	LogDiskQuota *int `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule *int `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy *int `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule *int `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup *int `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session *int `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn *int `pulumi:"sslvpn"`
	// Maximum number of local users.
	User *int `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup *int `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemResourceLimitsState struct {
	// Maximum number of firewall custom services.
	CustomService pulumi.IntPtrInput
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntPtrInput
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntPtrInput
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntPtrInput
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntPtrInput
	// Log disk quota in MB.
	LogDiskQuota pulumi.IntPtrInput
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntPtrInput
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntPtrInput
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntPtrInput
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntPtrInput
	// Maximum number of sessions.
	Session pulumi.IntPtrInput
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntPtrInput
	// Maximum number of local users.
	User pulumi.IntPtrInput
	// Maximum number of user groups.
	UserGroup pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemResourceLimitsState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemResourceLimitsState)(nil)).Elem()
}

type systemResourceLimitsArgs struct {
	// Maximum number of firewall custom services.
	CustomService *int `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel *int `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress *int `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp *int `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy *int `pulumi:"firewallPolicy"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 *int `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface *int `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 *int `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface *int `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in MB.
	LogDiskQuota *int `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule *int `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy *int `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule *int `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup *int `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session *int `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn *int `pulumi:"sslvpn"`
	// Maximum number of local users.
	User *int `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup *int `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemResourceLimits resource.
type SystemResourceLimitsArgs struct {
	// Maximum number of firewall custom services.
	CustomService pulumi.IntPtrInput
	// Maximum number of dial-up tunnels.
	DialupTunnel pulumi.IntPtrInput
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress pulumi.IntPtrInput
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp pulumi.IntPtrInput
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 pulumi.IntPtrInput
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface pulumi.IntPtrInput
	// Log disk quota in MB.
	LogDiskQuota pulumi.IntPtrInput
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule pulumi.IntPtrInput
	// Maximum number of concurrent proxy users.
	Proxy pulumi.IntPtrInput
	// Maximum number of firewall recurring schedules.
	RecurringSchedule pulumi.IntPtrInput
	// Maximum number of firewall service groups.
	ServiceGroup pulumi.IntPtrInput
	// Maximum number of sessions.
	Session pulumi.IntPtrInput
	// Maximum number of SSL-VPN.
	Sslvpn pulumi.IntPtrInput
	// Maximum number of local users.
	User pulumi.IntPtrInput
	// Maximum number of user groups.
	UserGroup pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemResourceLimitsArgs)(nil)).Elem()
}

type SystemResourceLimitsInput interface {
	pulumi.Input

	ToSystemResourceLimitsOutput() SystemResourceLimitsOutput
	ToSystemResourceLimitsOutputWithContext(ctx context.Context) SystemResourceLimitsOutput
}

func (*SystemResourceLimits) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemResourceLimits)(nil)).Elem()
}

func (i *SystemResourceLimits) ToSystemResourceLimitsOutput() SystemResourceLimitsOutput {
	return i.ToSystemResourceLimitsOutputWithContext(context.Background())
}

func (i *SystemResourceLimits) ToSystemResourceLimitsOutputWithContext(ctx context.Context) SystemResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemResourceLimitsOutput)
}

// SystemResourceLimitsArrayInput is an input type that accepts SystemResourceLimitsArray and SystemResourceLimitsArrayOutput values.
// You can construct a concrete instance of `SystemResourceLimitsArrayInput` via:
//
//          SystemResourceLimitsArray{ SystemResourceLimitsArgs{...} }
type SystemResourceLimitsArrayInput interface {
	pulumi.Input

	ToSystemResourceLimitsArrayOutput() SystemResourceLimitsArrayOutput
	ToSystemResourceLimitsArrayOutputWithContext(context.Context) SystemResourceLimitsArrayOutput
}

type SystemResourceLimitsArray []SystemResourceLimitsInput

func (SystemResourceLimitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemResourceLimits)(nil)).Elem()
}

func (i SystemResourceLimitsArray) ToSystemResourceLimitsArrayOutput() SystemResourceLimitsArrayOutput {
	return i.ToSystemResourceLimitsArrayOutputWithContext(context.Background())
}

func (i SystemResourceLimitsArray) ToSystemResourceLimitsArrayOutputWithContext(ctx context.Context) SystemResourceLimitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemResourceLimitsArrayOutput)
}

// SystemResourceLimitsMapInput is an input type that accepts SystemResourceLimitsMap and SystemResourceLimitsMapOutput values.
// You can construct a concrete instance of `SystemResourceLimitsMapInput` via:
//
//          SystemResourceLimitsMap{ "key": SystemResourceLimitsArgs{...} }
type SystemResourceLimitsMapInput interface {
	pulumi.Input

	ToSystemResourceLimitsMapOutput() SystemResourceLimitsMapOutput
	ToSystemResourceLimitsMapOutputWithContext(context.Context) SystemResourceLimitsMapOutput
}

type SystemResourceLimitsMap map[string]SystemResourceLimitsInput

func (SystemResourceLimitsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemResourceLimits)(nil)).Elem()
}

func (i SystemResourceLimitsMap) ToSystemResourceLimitsMapOutput() SystemResourceLimitsMapOutput {
	return i.ToSystemResourceLimitsMapOutputWithContext(context.Background())
}

func (i SystemResourceLimitsMap) ToSystemResourceLimitsMapOutputWithContext(ctx context.Context) SystemResourceLimitsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemResourceLimitsMapOutput)
}

type SystemResourceLimitsOutput struct{ *pulumi.OutputState }

func (SystemResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemResourceLimits)(nil)).Elem()
}

func (o SystemResourceLimitsOutput) ToSystemResourceLimitsOutput() SystemResourceLimitsOutput {
	return o
}

func (o SystemResourceLimitsOutput) ToSystemResourceLimitsOutputWithContext(ctx context.Context) SystemResourceLimitsOutput {
	return o
}

type SystemResourceLimitsArrayOutput struct{ *pulumi.OutputState }

func (SystemResourceLimitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemResourceLimits)(nil)).Elem()
}

func (o SystemResourceLimitsArrayOutput) ToSystemResourceLimitsArrayOutput() SystemResourceLimitsArrayOutput {
	return o
}

func (o SystemResourceLimitsArrayOutput) ToSystemResourceLimitsArrayOutputWithContext(ctx context.Context) SystemResourceLimitsArrayOutput {
	return o
}

func (o SystemResourceLimitsArrayOutput) Index(i pulumi.IntInput) SystemResourceLimitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemResourceLimits {
		return vs[0].([]*SystemResourceLimits)[vs[1].(int)]
	}).(SystemResourceLimitsOutput)
}

type SystemResourceLimitsMapOutput struct{ *pulumi.OutputState }

func (SystemResourceLimitsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemResourceLimits)(nil)).Elem()
}

func (o SystemResourceLimitsMapOutput) ToSystemResourceLimitsMapOutput() SystemResourceLimitsMapOutput {
	return o
}

func (o SystemResourceLimitsMapOutput) ToSystemResourceLimitsMapOutputWithContext(ctx context.Context) SystemResourceLimitsMapOutput {
	return o
}

func (o SystemResourceLimitsMapOutput) MapIndex(k pulumi.StringInput) SystemResourceLimitsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemResourceLimits {
		return vs[0].(map[string]*SystemResourceLimits)[vs[1].(string)]
	}).(SystemResourceLimitsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemResourceLimitsInput)(nil)).Elem(), &SystemResourceLimits{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemResourceLimitsArrayInput)(nil)).Elem(), SystemResourceLimitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemResourceLimitsMapInput)(nil)).Elem(), SystemResourceLimitsMap{})
	pulumi.RegisterOutputType(SystemResourceLimitsOutput{})
	pulumi.RegisterOutputType(SystemResourceLimitsArrayOutput{})
	pulumi.RegisterOutputType(SystemResourceLimitsMapOutput{})
}
