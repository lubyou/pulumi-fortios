// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallAccessProxyVirtualHost struct {
	pulumi.CustomResourceState

	Host            pulumi.StringOutput    `pulumi:"host"`
	HostType        pulumi.StringOutput    `pulumi:"hostType"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	ReplacemsgGroup pulumi.StringOutput    `pulumi:"replacemsgGroup"`
	SslCertificate  pulumi.StringOutput    `pulumi:"sslCertificate"`
	Vdomparam       pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallAccessProxyVirtualHost registers a new resource with the given unique name, arguments, and options.
func NewFirewallAccessProxyVirtualHost(ctx *pulumi.Context,
	name string, args *FirewallAccessProxyVirtualHostArgs, opts ...pulumi.ResourceOption) (*FirewallAccessProxyVirtualHost, error) {
	if args == nil {
		args = &FirewallAccessProxyVirtualHostArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallAccessProxyVirtualHost
	err := ctx.RegisterResource("fortios:index/firewallAccessProxyVirtualHost:FirewallAccessProxyVirtualHost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAccessProxyVirtualHost gets an existing FirewallAccessProxyVirtualHost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAccessProxyVirtualHost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAccessProxyVirtualHostState, opts ...pulumi.ResourceOption) (*FirewallAccessProxyVirtualHost, error) {
	var resource FirewallAccessProxyVirtualHost
	err := ctx.ReadResource("fortios:index/firewallAccessProxyVirtualHost:FirewallAccessProxyVirtualHost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAccessProxyVirtualHost resources.
type firewallAccessProxyVirtualHostState struct {
	Host            *string `pulumi:"host"`
	HostType        *string `pulumi:"hostType"`
	Name            *string `pulumi:"name"`
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	SslCertificate  *string `pulumi:"sslCertificate"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

type FirewallAccessProxyVirtualHostState struct {
	Host            pulumi.StringPtrInput
	HostType        pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	ReplacemsgGroup pulumi.StringPtrInput
	SslCertificate  pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (FirewallAccessProxyVirtualHostState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxyVirtualHostState)(nil)).Elem()
}

type firewallAccessProxyVirtualHostArgs struct {
	Host            *string `pulumi:"host"`
	HostType        *string `pulumi:"hostType"`
	Name            *string `pulumi:"name"`
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	SslCertificate  *string `pulumi:"sslCertificate"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallAccessProxyVirtualHost resource.
type FirewallAccessProxyVirtualHostArgs struct {
	Host            pulumi.StringPtrInput
	HostType        pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	ReplacemsgGroup pulumi.StringPtrInput
	SslCertificate  pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (FirewallAccessProxyVirtualHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxyVirtualHostArgs)(nil)).Elem()
}

type FirewallAccessProxyVirtualHostInput interface {
	pulumi.Input

	ToFirewallAccessProxyVirtualHostOutput() FirewallAccessProxyVirtualHostOutput
	ToFirewallAccessProxyVirtualHostOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostOutput
}

func (*FirewallAccessProxyVirtualHost) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (i *FirewallAccessProxyVirtualHost) ToFirewallAccessProxyVirtualHostOutput() FirewallAccessProxyVirtualHostOutput {
	return i.ToFirewallAccessProxyVirtualHostOutputWithContext(context.Background())
}

func (i *FirewallAccessProxyVirtualHost) ToFirewallAccessProxyVirtualHostOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxyVirtualHostOutput)
}

// FirewallAccessProxyVirtualHostArrayInput is an input type that accepts FirewallAccessProxyVirtualHostArray and FirewallAccessProxyVirtualHostArrayOutput values.
// You can construct a concrete instance of `FirewallAccessProxyVirtualHostArrayInput` via:
//
//	FirewallAccessProxyVirtualHostArray{ FirewallAccessProxyVirtualHostArgs{...} }
type FirewallAccessProxyVirtualHostArrayInput interface {
	pulumi.Input

	ToFirewallAccessProxyVirtualHostArrayOutput() FirewallAccessProxyVirtualHostArrayOutput
	ToFirewallAccessProxyVirtualHostArrayOutputWithContext(context.Context) FirewallAccessProxyVirtualHostArrayOutput
}

type FirewallAccessProxyVirtualHostArray []FirewallAccessProxyVirtualHostInput

func (FirewallAccessProxyVirtualHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (i FirewallAccessProxyVirtualHostArray) ToFirewallAccessProxyVirtualHostArrayOutput() FirewallAccessProxyVirtualHostArrayOutput {
	return i.ToFirewallAccessProxyVirtualHostArrayOutputWithContext(context.Background())
}

func (i FirewallAccessProxyVirtualHostArray) ToFirewallAccessProxyVirtualHostArrayOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxyVirtualHostArrayOutput)
}

// FirewallAccessProxyVirtualHostMapInput is an input type that accepts FirewallAccessProxyVirtualHostMap and FirewallAccessProxyVirtualHostMapOutput values.
// You can construct a concrete instance of `FirewallAccessProxyVirtualHostMapInput` via:
//
//	FirewallAccessProxyVirtualHostMap{ "key": FirewallAccessProxyVirtualHostArgs{...} }
type FirewallAccessProxyVirtualHostMapInput interface {
	pulumi.Input

	ToFirewallAccessProxyVirtualHostMapOutput() FirewallAccessProxyVirtualHostMapOutput
	ToFirewallAccessProxyVirtualHostMapOutputWithContext(context.Context) FirewallAccessProxyVirtualHostMapOutput
}

type FirewallAccessProxyVirtualHostMap map[string]FirewallAccessProxyVirtualHostInput

func (FirewallAccessProxyVirtualHostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (i FirewallAccessProxyVirtualHostMap) ToFirewallAccessProxyVirtualHostMapOutput() FirewallAccessProxyVirtualHostMapOutput {
	return i.ToFirewallAccessProxyVirtualHostMapOutputWithContext(context.Background())
}

func (i FirewallAccessProxyVirtualHostMap) ToFirewallAccessProxyVirtualHostMapOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxyVirtualHostMapOutput)
}

type FirewallAccessProxyVirtualHostOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxyVirtualHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (o FirewallAccessProxyVirtualHostOutput) ToFirewallAccessProxyVirtualHostOutput() FirewallAccessProxyVirtualHostOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostOutput) ToFirewallAccessProxyVirtualHostOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

func (o FirewallAccessProxyVirtualHostOutput) HostType() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringOutput { return v.HostType }).(pulumi.StringOutput)
}

func (o FirewallAccessProxyVirtualHostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallAccessProxyVirtualHostOutput) ReplacemsgGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringOutput { return v.ReplacemsgGroup }).(pulumi.StringOutput)
}

func (o FirewallAccessProxyVirtualHostOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringOutput { return v.SslCertificate }).(pulumi.StringOutput)
}

func (o FirewallAccessProxyVirtualHostOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessProxyVirtualHost) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallAccessProxyVirtualHostArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxyVirtualHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (o FirewallAccessProxyVirtualHostArrayOutput) ToFirewallAccessProxyVirtualHostArrayOutput() FirewallAccessProxyVirtualHostArrayOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostArrayOutput) ToFirewallAccessProxyVirtualHostArrayOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostArrayOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostArrayOutput) Index(i pulumi.IntInput) FirewallAccessProxyVirtualHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAccessProxyVirtualHost {
		return vs[0].([]*FirewallAccessProxyVirtualHost)[vs[1].(int)]
	}).(FirewallAccessProxyVirtualHostOutput)
}

type FirewallAccessProxyVirtualHostMapOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxyVirtualHostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxyVirtualHost)(nil)).Elem()
}

func (o FirewallAccessProxyVirtualHostMapOutput) ToFirewallAccessProxyVirtualHostMapOutput() FirewallAccessProxyVirtualHostMapOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostMapOutput) ToFirewallAccessProxyVirtualHostMapOutputWithContext(ctx context.Context) FirewallAccessProxyVirtualHostMapOutput {
	return o
}

func (o FirewallAccessProxyVirtualHostMapOutput) MapIndex(k pulumi.StringInput) FirewallAccessProxyVirtualHostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAccessProxyVirtualHost {
		return vs[0].(map[string]*FirewallAccessProxyVirtualHost)[vs[1].(string)]
	}).(FirewallAccessProxyVirtualHostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxyVirtualHostInput)(nil)).Elem(), &FirewallAccessProxyVirtualHost{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxyVirtualHostArrayInput)(nil)).Elem(), FirewallAccessProxyVirtualHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxyVirtualHostMapInput)(nil)).Elem(), FirewallAccessProxyVirtualHostMap{})
	pulumi.RegisterOutputType(FirewallAccessProxyVirtualHostOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxyVirtualHostArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxyVirtualHostMapOutput{})
}
