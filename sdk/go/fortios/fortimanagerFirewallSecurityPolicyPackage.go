// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FortimanagerFirewallSecurityPolicyPackage struct {
	pulumi.CustomResourceState

	Adom           pulumi.StringPtrOutput `pulumi:"adom"`
	InspectionMode pulumi.StringPtrOutput `pulumi:"inspectionMode"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	Target         pulumi.StringPtrOutput `pulumi:"target"`
	Vdom           pulumi.StringPtrOutput `pulumi:"vdom"`
}

// NewFortimanagerFirewallSecurityPolicyPackage registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerFirewallSecurityPolicyPackage(ctx *pulumi.Context,
	name string, args *FortimanagerFirewallSecurityPolicyPackageArgs, opts ...pulumi.ResourceOption) (*FortimanagerFirewallSecurityPolicyPackage, error) {
	if args == nil {
		args = &FortimanagerFirewallSecurityPolicyPackageArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FortimanagerFirewallSecurityPolicyPackage
	err := ctx.RegisterResource("fortios:index/fortimanagerFirewallSecurityPolicyPackage:FortimanagerFirewallSecurityPolicyPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerFirewallSecurityPolicyPackage gets an existing FortimanagerFirewallSecurityPolicyPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerFirewallSecurityPolicyPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerFirewallSecurityPolicyPackageState, opts ...pulumi.ResourceOption) (*FortimanagerFirewallSecurityPolicyPackage, error) {
	var resource FortimanagerFirewallSecurityPolicyPackage
	err := ctx.ReadResource("fortios:index/fortimanagerFirewallSecurityPolicyPackage:FortimanagerFirewallSecurityPolicyPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerFirewallSecurityPolicyPackage resources.
type fortimanagerFirewallSecurityPolicyPackageState struct {
	Adom           *string `pulumi:"adom"`
	InspectionMode *string `pulumi:"inspectionMode"`
	Name           *string `pulumi:"name"`
	Target         *string `pulumi:"target"`
	Vdom           *string `pulumi:"vdom"`
}

type FortimanagerFirewallSecurityPolicyPackageState struct {
	Adom           pulumi.StringPtrInput
	InspectionMode pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	Target         pulumi.StringPtrInput
	Vdom           pulumi.StringPtrInput
}

func (FortimanagerFirewallSecurityPolicyPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerFirewallSecurityPolicyPackageState)(nil)).Elem()
}

type fortimanagerFirewallSecurityPolicyPackageArgs struct {
	Adom           *string `pulumi:"adom"`
	InspectionMode *string `pulumi:"inspectionMode"`
	Name           *string `pulumi:"name"`
	Target         *string `pulumi:"target"`
	Vdom           *string `pulumi:"vdom"`
}

// The set of arguments for constructing a FortimanagerFirewallSecurityPolicyPackage resource.
type FortimanagerFirewallSecurityPolicyPackageArgs struct {
	Adom           pulumi.StringPtrInput
	InspectionMode pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	Target         pulumi.StringPtrInput
	Vdom           pulumi.StringPtrInput
}

func (FortimanagerFirewallSecurityPolicyPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerFirewallSecurityPolicyPackageArgs)(nil)).Elem()
}

type FortimanagerFirewallSecurityPolicyPackageInput interface {
	pulumi.Input

	ToFortimanagerFirewallSecurityPolicyPackageOutput() FortimanagerFirewallSecurityPolicyPackageOutput
	ToFortimanagerFirewallSecurityPolicyPackageOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageOutput
}

func (*FortimanagerFirewallSecurityPolicyPackage) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (i *FortimanagerFirewallSecurityPolicyPackage) ToFortimanagerFirewallSecurityPolicyPackageOutput() FortimanagerFirewallSecurityPolicyPackageOutput {
	return i.ToFortimanagerFirewallSecurityPolicyPackageOutputWithContext(context.Background())
}

func (i *FortimanagerFirewallSecurityPolicyPackage) ToFortimanagerFirewallSecurityPolicyPackageOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallSecurityPolicyPackageOutput)
}

func (i *FortimanagerFirewallSecurityPolicyPackage) ToOutput(ctx context.Context) pulumix.Output[*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: i.ToFortimanagerFirewallSecurityPolicyPackageOutputWithContext(ctx).OutputState,
	}
}

// FortimanagerFirewallSecurityPolicyPackageArrayInput is an input type that accepts FortimanagerFirewallSecurityPolicyPackageArray and FortimanagerFirewallSecurityPolicyPackageArrayOutput values.
// You can construct a concrete instance of `FortimanagerFirewallSecurityPolicyPackageArrayInput` via:
//
//	FortimanagerFirewallSecurityPolicyPackageArray{ FortimanagerFirewallSecurityPolicyPackageArgs{...} }
type FortimanagerFirewallSecurityPolicyPackageArrayInput interface {
	pulumi.Input

	ToFortimanagerFirewallSecurityPolicyPackageArrayOutput() FortimanagerFirewallSecurityPolicyPackageArrayOutput
	ToFortimanagerFirewallSecurityPolicyPackageArrayOutputWithContext(context.Context) FortimanagerFirewallSecurityPolicyPackageArrayOutput
}

type FortimanagerFirewallSecurityPolicyPackageArray []FortimanagerFirewallSecurityPolicyPackageInput

func (FortimanagerFirewallSecurityPolicyPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (i FortimanagerFirewallSecurityPolicyPackageArray) ToFortimanagerFirewallSecurityPolicyPackageArrayOutput() FortimanagerFirewallSecurityPolicyPackageArrayOutput {
	return i.ToFortimanagerFirewallSecurityPolicyPackageArrayOutputWithContext(context.Background())
}

func (i FortimanagerFirewallSecurityPolicyPackageArray) ToFortimanagerFirewallSecurityPolicyPackageArrayOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallSecurityPolicyPackageArrayOutput)
}

func (i FortimanagerFirewallSecurityPolicyPackageArray) ToOutput(ctx context.Context) pulumix.Output[[]*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[[]*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: i.ToFortimanagerFirewallSecurityPolicyPackageArrayOutputWithContext(ctx).OutputState,
	}
}

// FortimanagerFirewallSecurityPolicyPackageMapInput is an input type that accepts FortimanagerFirewallSecurityPolicyPackageMap and FortimanagerFirewallSecurityPolicyPackageMapOutput values.
// You can construct a concrete instance of `FortimanagerFirewallSecurityPolicyPackageMapInput` via:
//
//	FortimanagerFirewallSecurityPolicyPackageMap{ "key": FortimanagerFirewallSecurityPolicyPackageArgs{...} }
type FortimanagerFirewallSecurityPolicyPackageMapInput interface {
	pulumi.Input

	ToFortimanagerFirewallSecurityPolicyPackageMapOutput() FortimanagerFirewallSecurityPolicyPackageMapOutput
	ToFortimanagerFirewallSecurityPolicyPackageMapOutputWithContext(context.Context) FortimanagerFirewallSecurityPolicyPackageMapOutput
}

type FortimanagerFirewallSecurityPolicyPackageMap map[string]FortimanagerFirewallSecurityPolicyPackageInput

func (FortimanagerFirewallSecurityPolicyPackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (i FortimanagerFirewallSecurityPolicyPackageMap) ToFortimanagerFirewallSecurityPolicyPackageMapOutput() FortimanagerFirewallSecurityPolicyPackageMapOutput {
	return i.ToFortimanagerFirewallSecurityPolicyPackageMapOutputWithContext(context.Background())
}

func (i FortimanagerFirewallSecurityPolicyPackageMap) ToFortimanagerFirewallSecurityPolicyPackageMapOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallSecurityPolicyPackageMapOutput)
}

func (i FortimanagerFirewallSecurityPolicyPackageMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[map[string]*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: i.ToFortimanagerFirewallSecurityPolicyPackageMapOutputWithContext(ctx).OutputState,
	}
}

type FortimanagerFirewallSecurityPolicyPackageOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallSecurityPolicyPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) ToFortimanagerFirewallSecurityPolicyPackageOutput() FortimanagerFirewallSecurityPolicyPackageOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) ToFortimanagerFirewallSecurityPolicyPackageOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) ToOutput(ctx context.Context) pulumix.Output[*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: o.OutputState,
	}
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallSecurityPolicyPackage) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) InspectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallSecurityPolicyPackage) pulumi.StringPtrOutput { return v.InspectionMode }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FortimanagerFirewallSecurityPolicyPackage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallSecurityPolicyPackage) pulumi.StringPtrOutput { return v.Target }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallSecurityPolicyPackageOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallSecurityPolicyPackage) pulumi.StringPtrOutput { return v.Vdom }).(pulumi.StringPtrOutput)
}

type FortimanagerFirewallSecurityPolicyPackageArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallSecurityPolicyPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (o FortimanagerFirewallSecurityPolicyPackageArrayOutput) ToFortimanagerFirewallSecurityPolicyPackageArrayOutput() FortimanagerFirewallSecurityPolicyPackageArrayOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageArrayOutput) ToFortimanagerFirewallSecurityPolicyPackageArrayOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageArrayOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[[]*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: o.OutputState,
	}
}

func (o FortimanagerFirewallSecurityPolicyPackageArrayOutput) Index(i pulumi.IntInput) FortimanagerFirewallSecurityPolicyPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerFirewallSecurityPolicyPackage {
		return vs[0].([]*FortimanagerFirewallSecurityPolicyPackage)[vs[1].(int)]
	}).(FortimanagerFirewallSecurityPolicyPackageOutput)
}

type FortimanagerFirewallSecurityPolicyPackageMapOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallSecurityPolicyPackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerFirewallSecurityPolicyPackage)(nil)).Elem()
}

func (o FortimanagerFirewallSecurityPolicyPackageMapOutput) ToFortimanagerFirewallSecurityPolicyPackageMapOutput() FortimanagerFirewallSecurityPolicyPackageMapOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageMapOutput) ToFortimanagerFirewallSecurityPolicyPackageMapOutputWithContext(ctx context.Context) FortimanagerFirewallSecurityPolicyPackageMapOutput {
	return o
}

func (o FortimanagerFirewallSecurityPolicyPackageMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FortimanagerFirewallSecurityPolicyPackage] {
	return pulumix.Output[map[string]*FortimanagerFirewallSecurityPolicyPackage]{
		OutputState: o.OutputState,
	}
}

func (o FortimanagerFirewallSecurityPolicyPackageMapOutput) MapIndex(k pulumi.StringInput) FortimanagerFirewallSecurityPolicyPackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerFirewallSecurityPolicyPackage {
		return vs[0].(map[string]*FortimanagerFirewallSecurityPolicyPackage)[vs[1].(string)]
	}).(FortimanagerFirewallSecurityPolicyPackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallSecurityPolicyPackageInput)(nil)).Elem(), &FortimanagerFirewallSecurityPolicyPackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallSecurityPolicyPackageArrayInput)(nil)).Elem(), FortimanagerFirewallSecurityPolicyPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallSecurityPolicyPackageMapInput)(nil)).Elem(), FortimanagerFirewallSecurityPolicyPackageMap{})
	pulumi.RegisterOutputType(FortimanagerFirewallSecurityPolicyPackageOutput{})
	pulumi.RegisterOutputType(FortimanagerFirewallSecurityPolicyPackageArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerFirewallSecurityPolicyPackageMapOutput{})
}
