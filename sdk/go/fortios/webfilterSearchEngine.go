// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebfilterSearchEngine struct {
	pulumi.CustomResourceState

	Charset       pulumi.StringOutput    `pulumi:"charset"`
	Hostname      pulumi.StringOutput    `pulumi:"hostname"`
	Name          pulumi.StringOutput    `pulumi:"name"`
	Query         pulumi.StringOutput    `pulumi:"query"`
	Safesearch    pulumi.StringOutput    `pulumi:"safesearch"`
	SafesearchStr pulumi.StringOutput    `pulumi:"safesearchStr"`
	Url           pulumi.StringOutput    `pulumi:"url"`
	Vdomparam     pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebfilterSearchEngine registers a new resource with the given unique name, arguments, and options.
func NewWebfilterSearchEngine(ctx *pulumi.Context,
	name string, args *WebfilterSearchEngineArgs, opts ...pulumi.ResourceOption) (*WebfilterSearchEngine, error) {
	if args == nil {
		args = &WebfilterSearchEngineArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WebfilterSearchEngine
	err := ctx.RegisterResource("fortios:index/webfilterSearchEngine:WebfilterSearchEngine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterSearchEngine gets an existing WebfilterSearchEngine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterSearchEngine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterSearchEngineState, opts ...pulumi.ResourceOption) (*WebfilterSearchEngine, error) {
	var resource WebfilterSearchEngine
	err := ctx.ReadResource("fortios:index/webfilterSearchEngine:WebfilterSearchEngine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterSearchEngine resources.
type webfilterSearchEngineState struct {
	Charset       *string `pulumi:"charset"`
	Hostname      *string `pulumi:"hostname"`
	Name          *string `pulumi:"name"`
	Query         *string `pulumi:"query"`
	Safesearch    *string `pulumi:"safesearch"`
	SafesearchStr *string `pulumi:"safesearchStr"`
	Url           *string `pulumi:"url"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

type WebfilterSearchEngineState struct {
	Charset       pulumi.StringPtrInput
	Hostname      pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Query         pulumi.StringPtrInput
	Safesearch    pulumi.StringPtrInput
	SafesearchStr pulumi.StringPtrInput
	Url           pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (WebfilterSearchEngineState) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterSearchEngineState)(nil)).Elem()
}

type webfilterSearchEngineArgs struct {
	Charset       *string `pulumi:"charset"`
	Hostname      *string `pulumi:"hostname"`
	Name          *string `pulumi:"name"`
	Query         *string `pulumi:"query"`
	Safesearch    *string `pulumi:"safesearch"`
	SafesearchStr *string `pulumi:"safesearchStr"`
	Url           *string `pulumi:"url"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebfilterSearchEngine resource.
type WebfilterSearchEngineArgs struct {
	Charset       pulumi.StringPtrInput
	Hostname      pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Query         pulumi.StringPtrInput
	Safesearch    pulumi.StringPtrInput
	SafesearchStr pulumi.StringPtrInput
	Url           pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (WebfilterSearchEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterSearchEngineArgs)(nil)).Elem()
}

type WebfilterSearchEngineInput interface {
	pulumi.Input

	ToWebfilterSearchEngineOutput() WebfilterSearchEngineOutput
	ToWebfilterSearchEngineOutputWithContext(ctx context.Context) WebfilterSearchEngineOutput
}

func (*WebfilterSearchEngine) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterSearchEngine)(nil)).Elem()
}

func (i *WebfilterSearchEngine) ToWebfilterSearchEngineOutput() WebfilterSearchEngineOutput {
	return i.ToWebfilterSearchEngineOutputWithContext(context.Background())
}

func (i *WebfilterSearchEngine) ToWebfilterSearchEngineOutputWithContext(ctx context.Context) WebfilterSearchEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterSearchEngineOutput)
}

// WebfilterSearchEngineArrayInput is an input type that accepts WebfilterSearchEngineArray and WebfilterSearchEngineArrayOutput values.
// You can construct a concrete instance of `WebfilterSearchEngineArrayInput` via:
//
//	WebfilterSearchEngineArray{ WebfilterSearchEngineArgs{...} }
type WebfilterSearchEngineArrayInput interface {
	pulumi.Input

	ToWebfilterSearchEngineArrayOutput() WebfilterSearchEngineArrayOutput
	ToWebfilterSearchEngineArrayOutputWithContext(context.Context) WebfilterSearchEngineArrayOutput
}

type WebfilterSearchEngineArray []WebfilterSearchEngineInput

func (WebfilterSearchEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterSearchEngine)(nil)).Elem()
}

func (i WebfilterSearchEngineArray) ToWebfilterSearchEngineArrayOutput() WebfilterSearchEngineArrayOutput {
	return i.ToWebfilterSearchEngineArrayOutputWithContext(context.Background())
}

func (i WebfilterSearchEngineArray) ToWebfilterSearchEngineArrayOutputWithContext(ctx context.Context) WebfilterSearchEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterSearchEngineArrayOutput)
}

// WebfilterSearchEngineMapInput is an input type that accepts WebfilterSearchEngineMap and WebfilterSearchEngineMapOutput values.
// You can construct a concrete instance of `WebfilterSearchEngineMapInput` via:
//
//	WebfilterSearchEngineMap{ "key": WebfilterSearchEngineArgs{...} }
type WebfilterSearchEngineMapInput interface {
	pulumi.Input

	ToWebfilterSearchEngineMapOutput() WebfilterSearchEngineMapOutput
	ToWebfilterSearchEngineMapOutputWithContext(context.Context) WebfilterSearchEngineMapOutput
}

type WebfilterSearchEngineMap map[string]WebfilterSearchEngineInput

func (WebfilterSearchEngineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterSearchEngine)(nil)).Elem()
}

func (i WebfilterSearchEngineMap) ToWebfilterSearchEngineMapOutput() WebfilterSearchEngineMapOutput {
	return i.ToWebfilterSearchEngineMapOutputWithContext(context.Background())
}

func (i WebfilterSearchEngineMap) ToWebfilterSearchEngineMapOutputWithContext(ctx context.Context) WebfilterSearchEngineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterSearchEngineMapOutput)
}

type WebfilterSearchEngineOutput struct{ *pulumi.OutputState }

func (WebfilterSearchEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterSearchEngine)(nil)).Elem()
}

func (o WebfilterSearchEngineOutput) ToWebfilterSearchEngineOutput() WebfilterSearchEngineOutput {
	return o
}

func (o WebfilterSearchEngineOutput) ToWebfilterSearchEngineOutputWithContext(ctx context.Context) WebfilterSearchEngineOutput {
	return o
}

func (o WebfilterSearchEngineOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Charset }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Query }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Safesearch() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Safesearch }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) SafesearchStr() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.SafesearchStr }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o WebfilterSearchEngineOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterSearchEngine) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WebfilterSearchEngineArrayOutput struct{ *pulumi.OutputState }

func (WebfilterSearchEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterSearchEngine)(nil)).Elem()
}

func (o WebfilterSearchEngineArrayOutput) ToWebfilterSearchEngineArrayOutput() WebfilterSearchEngineArrayOutput {
	return o
}

func (o WebfilterSearchEngineArrayOutput) ToWebfilterSearchEngineArrayOutputWithContext(ctx context.Context) WebfilterSearchEngineArrayOutput {
	return o
}

func (o WebfilterSearchEngineArrayOutput) Index(i pulumi.IntInput) WebfilterSearchEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebfilterSearchEngine {
		return vs[0].([]*WebfilterSearchEngine)[vs[1].(int)]
	}).(WebfilterSearchEngineOutput)
}

type WebfilterSearchEngineMapOutput struct{ *pulumi.OutputState }

func (WebfilterSearchEngineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterSearchEngine)(nil)).Elem()
}

func (o WebfilterSearchEngineMapOutput) ToWebfilterSearchEngineMapOutput() WebfilterSearchEngineMapOutput {
	return o
}

func (o WebfilterSearchEngineMapOutput) ToWebfilterSearchEngineMapOutputWithContext(ctx context.Context) WebfilterSearchEngineMapOutput {
	return o
}

func (o WebfilterSearchEngineMapOutput) MapIndex(k pulumi.StringInput) WebfilterSearchEngineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebfilterSearchEngine {
		return vs[0].(map[string]*WebfilterSearchEngine)[vs[1].(string)]
	}).(WebfilterSearchEngineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterSearchEngineInput)(nil)).Elem(), &WebfilterSearchEngine{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterSearchEngineArrayInput)(nil)).Elem(), WebfilterSearchEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterSearchEngineMapInput)(nil)).Elem(), WebfilterSearchEngineMap{})
	pulumi.RegisterOutputType(WebfilterSearchEngineOutput{})
	pulumi.RegisterOutputType(WebfilterSearchEngineArrayOutput{})
	pulumi.RegisterOutputType(WebfilterSearchEngineMapOutput{})
}
