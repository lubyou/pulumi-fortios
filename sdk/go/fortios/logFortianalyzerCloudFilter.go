// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogFortianalyzerCloudFilter struct {
	pulumi.CustomResourceState

	Anomaly             pulumi.StringOutput                             `pulumi:"anomaly"`
	DlpArchive          pulumi.StringOutput                             `pulumi:"dlpArchive"`
	DynamicSortSubtable pulumi.StringPtrOutput                          `pulumi:"dynamicSortSubtable"`
	Filter              pulumi.StringOutput                             `pulumi:"filter"`
	FilterType          pulumi.StringOutput                             `pulumi:"filterType"`
	ForwardTraffic      pulumi.StringOutput                             `pulumi:"forwardTraffic"`
	FreeStyles          LogFortianalyzerCloudFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables        pulumi.StringPtrOutput                          `pulumi:"getAllTables"`
	Gtp                 pulumi.StringOutput                             `pulumi:"gtp"`
	LocalTraffic        pulumi.StringOutput                             `pulumi:"localTraffic"`
	MulticastTraffic    pulumi.StringOutput                             `pulumi:"multicastTraffic"`
	Severity            pulumi.StringOutput                             `pulumi:"severity"`
	SnifferTraffic      pulumi.StringOutput                             `pulumi:"snifferTraffic"`
	Vdomparam           pulumi.StringPtrOutput                          `pulumi:"vdomparam"`
	Voip                pulumi.StringOutput                             `pulumi:"voip"`
	ZtnaTraffic         pulumi.StringOutput                             `pulumi:"ztnaTraffic"`
}

// NewLogFortianalyzerCloudFilter registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzerCloudFilter(ctx *pulumi.Context,
	name string, args *LogFortianalyzerCloudFilterArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudFilter, error) {
	if args == nil {
		args = &LogFortianalyzerCloudFilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogFortianalyzerCloudFilter
	err := ctx.RegisterResource("fortios:index/logFortianalyzerCloudFilter:LogFortianalyzerCloudFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzerCloudFilter gets an existing LogFortianalyzerCloudFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzerCloudFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzerCloudFilterState, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudFilter, error) {
	var resource LogFortianalyzerCloudFilter
	err := ctx.ReadResource("fortios:index/logFortianalyzerCloudFilter:LogFortianalyzerCloudFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzerCloudFilter resources.
type logFortianalyzerCloudFilterState struct {
	Anomaly             *string                                `pulumi:"anomaly"`
	DlpArchive          *string                                `pulumi:"dlpArchive"`
	DynamicSortSubtable *string                                `pulumi:"dynamicSortSubtable"`
	Filter              *string                                `pulumi:"filter"`
	FilterType          *string                                `pulumi:"filterType"`
	ForwardTraffic      *string                                `pulumi:"forwardTraffic"`
	FreeStyles          []LogFortianalyzerCloudFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables        *string                                `pulumi:"getAllTables"`
	Gtp                 *string                                `pulumi:"gtp"`
	LocalTraffic        *string                                `pulumi:"localTraffic"`
	MulticastTraffic    *string                                `pulumi:"multicastTraffic"`
	Severity            *string                                `pulumi:"severity"`
	SnifferTraffic      *string                                `pulumi:"snifferTraffic"`
	Vdomparam           *string                                `pulumi:"vdomparam"`
	Voip                *string                                `pulumi:"voip"`
	ZtnaTraffic         *string                                `pulumi:"ztnaTraffic"`
}

type LogFortianalyzerCloudFilterState struct {
	Anomaly             pulumi.StringPtrInput
	DlpArchive          pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Filter              pulumi.StringPtrInput
	FilterType          pulumi.StringPtrInput
	ForwardTraffic      pulumi.StringPtrInput
	FreeStyles          LogFortianalyzerCloudFilterFreeStyleArrayInput
	GetAllTables        pulumi.StringPtrInput
	Gtp                 pulumi.StringPtrInput
	LocalTraffic        pulumi.StringPtrInput
	MulticastTraffic    pulumi.StringPtrInput
	Severity            pulumi.StringPtrInput
	SnifferTraffic      pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Voip                pulumi.StringPtrInput
	ZtnaTraffic         pulumi.StringPtrInput
}

func (LogFortianalyzerCloudFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudFilterState)(nil)).Elem()
}

type logFortianalyzerCloudFilterArgs struct {
	Anomaly             *string                                `pulumi:"anomaly"`
	DlpArchive          *string                                `pulumi:"dlpArchive"`
	DynamicSortSubtable *string                                `pulumi:"dynamicSortSubtable"`
	Filter              *string                                `pulumi:"filter"`
	FilterType          *string                                `pulumi:"filterType"`
	ForwardTraffic      *string                                `pulumi:"forwardTraffic"`
	FreeStyles          []LogFortianalyzerCloudFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables        *string                                `pulumi:"getAllTables"`
	Gtp                 *string                                `pulumi:"gtp"`
	LocalTraffic        *string                                `pulumi:"localTraffic"`
	MulticastTraffic    *string                                `pulumi:"multicastTraffic"`
	Severity            *string                                `pulumi:"severity"`
	SnifferTraffic      *string                                `pulumi:"snifferTraffic"`
	Vdomparam           *string                                `pulumi:"vdomparam"`
	Voip                *string                                `pulumi:"voip"`
	ZtnaTraffic         *string                                `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogFortianalyzerCloudFilter resource.
type LogFortianalyzerCloudFilterArgs struct {
	Anomaly             pulumi.StringPtrInput
	DlpArchive          pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Filter              pulumi.StringPtrInput
	FilterType          pulumi.StringPtrInput
	ForwardTraffic      pulumi.StringPtrInput
	FreeStyles          LogFortianalyzerCloudFilterFreeStyleArrayInput
	GetAllTables        pulumi.StringPtrInput
	Gtp                 pulumi.StringPtrInput
	LocalTraffic        pulumi.StringPtrInput
	MulticastTraffic    pulumi.StringPtrInput
	Severity            pulumi.StringPtrInput
	SnifferTraffic      pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Voip                pulumi.StringPtrInput
	ZtnaTraffic         pulumi.StringPtrInput
}

func (LogFortianalyzerCloudFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudFilterArgs)(nil)).Elem()
}

type LogFortianalyzerCloudFilterInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudFilterOutput() LogFortianalyzerCloudFilterOutput
	ToLogFortianalyzerCloudFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterOutput
}

func (*LogFortianalyzerCloudFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (i *LogFortianalyzerCloudFilter) ToLogFortianalyzerCloudFilterOutput() LogFortianalyzerCloudFilterOutput {
	return i.ToLogFortianalyzerCloudFilterOutputWithContext(context.Background())
}

func (i *LogFortianalyzerCloudFilter) ToLogFortianalyzerCloudFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudFilterOutput)
}

// LogFortianalyzerCloudFilterArrayInput is an input type that accepts LogFortianalyzerCloudFilterArray and LogFortianalyzerCloudFilterArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudFilterArrayInput` via:
//
//	LogFortianalyzerCloudFilterArray{ LogFortianalyzerCloudFilterArgs{...} }
type LogFortianalyzerCloudFilterArrayInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudFilterArrayOutput() LogFortianalyzerCloudFilterArrayOutput
	ToLogFortianalyzerCloudFilterArrayOutputWithContext(context.Context) LogFortianalyzerCloudFilterArrayOutput
}

type LogFortianalyzerCloudFilterArray []LogFortianalyzerCloudFilterInput

func (LogFortianalyzerCloudFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (i LogFortianalyzerCloudFilterArray) ToLogFortianalyzerCloudFilterArrayOutput() LogFortianalyzerCloudFilterArrayOutput {
	return i.ToLogFortianalyzerCloudFilterArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudFilterArray) ToLogFortianalyzerCloudFilterArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudFilterArrayOutput)
}

// LogFortianalyzerCloudFilterMapInput is an input type that accepts LogFortianalyzerCloudFilterMap and LogFortianalyzerCloudFilterMapOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudFilterMapInput` via:
//
//	LogFortianalyzerCloudFilterMap{ "key": LogFortianalyzerCloudFilterArgs{...} }
type LogFortianalyzerCloudFilterMapInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudFilterMapOutput() LogFortianalyzerCloudFilterMapOutput
	ToLogFortianalyzerCloudFilterMapOutputWithContext(context.Context) LogFortianalyzerCloudFilterMapOutput
}

type LogFortianalyzerCloudFilterMap map[string]LogFortianalyzerCloudFilterInput

func (LogFortianalyzerCloudFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (i LogFortianalyzerCloudFilterMap) ToLogFortianalyzerCloudFilterMapOutput() LogFortianalyzerCloudFilterMapOutput {
	return i.ToLogFortianalyzerCloudFilterMapOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudFilterMap) ToLogFortianalyzerCloudFilterMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudFilterMapOutput)
}

type LogFortianalyzerCloudFilterOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudFilterOutput) ToLogFortianalyzerCloudFilterOutput() LogFortianalyzerCloudFilterOutput {
	return o
}

func (o LogFortianalyzerCloudFilterOutput) ToLogFortianalyzerCloudFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterOutput {
	return o
}

func (o LogFortianalyzerCloudFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) DlpArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.DlpArchive }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzerCloudFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) FreeStyles() LogFortianalyzerCloudFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) LogFortianalyzerCloudFilterFreeStyleArrayOutput {
		return v.FreeStyles
	}).(LogFortianalyzerCloudFilterFreeStyleArrayOutput)
}

func (o LogFortianalyzerCloudFilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzerCloudFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzerCloudFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogFortianalyzerCloudFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerCloudFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogFortianalyzerCloudFilterArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudFilterArrayOutput) ToLogFortianalyzerCloudFilterArrayOutput() LogFortianalyzerCloudFilterArrayOutput {
	return o
}

func (o LogFortianalyzerCloudFilterArrayOutput) ToLogFortianalyzerCloudFilterArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterArrayOutput {
	return o
}

func (o LogFortianalyzerCloudFilterArrayOutput) Index(i pulumi.IntInput) LogFortianalyzerCloudFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortianalyzerCloudFilter {
		return vs[0].([]*LogFortianalyzerCloudFilter)[vs[1].(int)]
	}).(LogFortianalyzerCloudFilterOutput)
}

type LogFortianalyzerCloudFilterMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerCloudFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudFilterMapOutput) ToLogFortianalyzerCloudFilterMapOutput() LogFortianalyzerCloudFilterMapOutput {
	return o
}

func (o LogFortianalyzerCloudFilterMapOutput) ToLogFortianalyzerCloudFilterMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudFilterMapOutput {
	return o
}

func (o LogFortianalyzerCloudFilterMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzerCloudFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortianalyzerCloudFilter {
		return vs[0].(map[string]*LogFortianalyzerCloudFilter)[vs[1].(string)]
	}).(LogFortianalyzerCloudFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudFilterInput)(nil)).Elem(), &LogFortianalyzerCloudFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudFilterArrayInput)(nil)).Elem(), LogFortianalyzerCloudFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudFilterMapInput)(nil)).Elem(), LogFortianalyzerCloudFilterMap{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudFilterOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudFilterArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudFilterMapOutput{})
}
