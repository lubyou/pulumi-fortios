// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouterRip struct {
	pulumi.CustomResourceState

	DefaultInformationOriginate pulumi.StringOutput                  `pulumi:"defaultInformationOriginate"`
	DefaultMetric               pulumi.IntOutput                     `pulumi:"defaultMetric"`
	Distances                   RouterRipDistanceArrayOutput         `pulumi:"distances"`
	DistributeLists             RouterRipDistributeListArrayOutput   `pulumi:"distributeLists"`
	DynamicSortSubtable         pulumi.StringPtrOutput               `pulumi:"dynamicSortSubtable"`
	GarbageTimer                pulumi.IntOutput                     `pulumi:"garbageTimer"`
	GetAllTables                pulumi.StringPtrOutput               `pulumi:"getAllTables"`
	Interfaces                  RouterRipInterfaceArrayOutput        `pulumi:"interfaces"`
	MaxOutMetric                pulumi.IntOutput                     `pulumi:"maxOutMetric"`
	Neighbors                   RouterRipNeighborArrayOutput         `pulumi:"neighbors"`
	Networks                    RouterRipNetworkArrayOutput          `pulumi:"networks"`
	OffsetLists                 RouterRipOffsetListArrayOutput       `pulumi:"offsetLists"`
	PassiveInterfaces           RouterRipPassiveInterfaceArrayOutput `pulumi:"passiveInterfaces"`
	RecvBufferSize              pulumi.IntOutput                     `pulumi:"recvBufferSize"`
	Redistributes               RouterRipRedistributeArrayOutput     `pulumi:"redistributes"`
	TimeoutTimer                pulumi.IntOutput                     `pulumi:"timeoutTimer"`
	UpdateTimer                 pulumi.IntOutput                     `pulumi:"updateTimer"`
	Vdomparam                   pulumi.StringPtrOutput               `pulumi:"vdomparam"`
	Version                     pulumi.StringOutput                  `pulumi:"version"`
}

// NewRouterRip registers a new resource with the given unique name, arguments, and options.
func NewRouterRip(ctx *pulumi.Context,
	name string, args *RouterRipArgs, opts ...pulumi.ResourceOption) (*RouterRip, error) {
	if args == nil {
		args = &RouterRipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterRip
	err := ctx.RegisterResource("fortios:index/routerRip:RouterRip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterRip gets an existing RouterRip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterRip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterRipState, opts ...pulumi.ResourceOption) (*RouterRip, error) {
	var resource RouterRip
	err := ctx.ReadResource("fortios:index/routerRip:RouterRip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterRip resources.
type routerRipState struct {
	DefaultInformationOriginate *string                     `pulumi:"defaultInformationOriginate"`
	DefaultMetric               *int                        `pulumi:"defaultMetric"`
	Distances                   []RouterRipDistance         `pulumi:"distances"`
	DistributeLists             []RouterRipDistributeList   `pulumi:"distributeLists"`
	DynamicSortSubtable         *string                     `pulumi:"dynamicSortSubtable"`
	GarbageTimer                *int                        `pulumi:"garbageTimer"`
	GetAllTables                *string                     `pulumi:"getAllTables"`
	Interfaces                  []RouterRipInterface        `pulumi:"interfaces"`
	MaxOutMetric                *int                        `pulumi:"maxOutMetric"`
	Neighbors                   []RouterRipNeighbor         `pulumi:"neighbors"`
	Networks                    []RouterRipNetwork          `pulumi:"networks"`
	OffsetLists                 []RouterRipOffsetList       `pulumi:"offsetLists"`
	PassiveInterfaces           []RouterRipPassiveInterface `pulumi:"passiveInterfaces"`
	RecvBufferSize              *int                        `pulumi:"recvBufferSize"`
	Redistributes               []RouterRipRedistribute     `pulumi:"redistributes"`
	TimeoutTimer                *int                        `pulumi:"timeoutTimer"`
	UpdateTimer                 *int                        `pulumi:"updateTimer"`
	Vdomparam                   *string                     `pulumi:"vdomparam"`
	Version                     *string                     `pulumi:"version"`
}

type RouterRipState struct {
	DefaultInformationOriginate pulumi.StringPtrInput
	DefaultMetric               pulumi.IntPtrInput
	Distances                   RouterRipDistanceArrayInput
	DistributeLists             RouterRipDistributeListArrayInput
	DynamicSortSubtable         pulumi.StringPtrInput
	GarbageTimer                pulumi.IntPtrInput
	GetAllTables                pulumi.StringPtrInput
	Interfaces                  RouterRipInterfaceArrayInput
	MaxOutMetric                pulumi.IntPtrInput
	Neighbors                   RouterRipNeighborArrayInput
	Networks                    RouterRipNetworkArrayInput
	OffsetLists                 RouterRipOffsetListArrayInput
	PassiveInterfaces           RouterRipPassiveInterfaceArrayInput
	RecvBufferSize              pulumi.IntPtrInput
	Redistributes               RouterRipRedistributeArrayInput
	TimeoutTimer                pulumi.IntPtrInput
	UpdateTimer                 pulumi.IntPtrInput
	Vdomparam                   pulumi.StringPtrInput
	Version                     pulumi.StringPtrInput
}

func (RouterRipState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipState)(nil)).Elem()
}

type routerRipArgs struct {
	DefaultInformationOriginate *string                     `pulumi:"defaultInformationOriginate"`
	DefaultMetric               *int                        `pulumi:"defaultMetric"`
	Distances                   []RouterRipDistance         `pulumi:"distances"`
	DistributeLists             []RouterRipDistributeList   `pulumi:"distributeLists"`
	DynamicSortSubtable         *string                     `pulumi:"dynamicSortSubtable"`
	GarbageTimer                *int                        `pulumi:"garbageTimer"`
	GetAllTables                *string                     `pulumi:"getAllTables"`
	Interfaces                  []RouterRipInterface        `pulumi:"interfaces"`
	MaxOutMetric                *int                        `pulumi:"maxOutMetric"`
	Neighbors                   []RouterRipNeighbor         `pulumi:"neighbors"`
	Networks                    []RouterRipNetwork          `pulumi:"networks"`
	OffsetLists                 []RouterRipOffsetList       `pulumi:"offsetLists"`
	PassiveInterfaces           []RouterRipPassiveInterface `pulumi:"passiveInterfaces"`
	RecvBufferSize              *int                        `pulumi:"recvBufferSize"`
	Redistributes               []RouterRipRedistribute     `pulumi:"redistributes"`
	TimeoutTimer                *int                        `pulumi:"timeoutTimer"`
	UpdateTimer                 *int                        `pulumi:"updateTimer"`
	Vdomparam                   *string                     `pulumi:"vdomparam"`
	Version                     *string                     `pulumi:"version"`
}

// The set of arguments for constructing a RouterRip resource.
type RouterRipArgs struct {
	DefaultInformationOriginate pulumi.StringPtrInput
	DefaultMetric               pulumi.IntPtrInput
	Distances                   RouterRipDistanceArrayInput
	DistributeLists             RouterRipDistributeListArrayInput
	DynamicSortSubtable         pulumi.StringPtrInput
	GarbageTimer                pulumi.IntPtrInput
	GetAllTables                pulumi.StringPtrInput
	Interfaces                  RouterRipInterfaceArrayInput
	MaxOutMetric                pulumi.IntPtrInput
	Neighbors                   RouterRipNeighborArrayInput
	Networks                    RouterRipNetworkArrayInput
	OffsetLists                 RouterRipOffsetListArrayInput
	PassiveInterfaces           RouterRipPassiveInterfaceArrayInput
	RecvBufferSize              pulumi.IntPtrInput
	Redistributes               RouterRipRedistributeArrayInput
	TimeoutTimer                pulumi.IntPtrInput
	UpdateTimer                 pulumi.IntPtrInput
	Vdomparam                   pulumi.StringPtrInput
	Version                     pulumi.StringPtrInput
}

func (RouterRipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerRipArgs)(nil)).Elem()
}

type RouterRipInput interface {
	pulumi.Input

	ToRouterRipOutput() RouterRipOutput
	ToRouterRipOutputWithContext(ctx context.Context) RouterRipOutput
}

func (*RouterRip) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRip)(nil)).Elem()
}

func (i *RouterRip) ToRouterRipOutput() RouterRipOutput {
	return i.ToRouterRipOutputWithContext(context.Background())
}

func (i *RouterRip) ToRouterRipOutputWithContext(ctx context.Context) RouterRipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipOutput)
}

// RouterRipArrayInput is an input type that accepts RouterRipArray and RouterRipArrayOutput values.
// You can construct a concrete instance of `RouterRipArrayInput` via:
//
//	RouterRipArray{ RouterRipArgs{...} }
type RouterRipArrayInput interface {
	pulumi.Input

	ToRouterRipArrayOutput() RouterRipArrayOutput
	ToRouterRipArrayOutputWithContext(context.Context) RouterRipArrayOutput
}

type RouterRipArray []RouterRipInput

func (RouterRipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRip)(nil)).Elem()
}

func (i RouterRipArray) ToRouterRipArrayOutput() RouterRipArrayOutput {
	return i.ToRouterRipArrayOutputWithContext(context.Background())
}

func (i RouterRipArray) ToRouterRipArrayOutputWithContext(ctx context.Context) RouterRipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipArrayOutput)
}

// RouterRipMapInput is an input type that accepts RouterRipMap and RouterRipMapOutput values.
// You can construct a concrete instance of `RouterRipMapInput` via:
//
//	RouterRipMap{ "key": RouterRipArgs{...} }
type RouterRipMapInput interface {
	pulumi.Input

	ToRouterRipMapOutput() RouterRipMapOutput
	ToRouterRipMapOutputWithContext(context.Context) RouterRipMapOutput
}

type RouterRipMap map[string]RouterRipInput

func (RouterRipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRip)(nil)).Elem()
}

func (i RouterRipMap) ToRouterRipMapOutput() RouterRipMapOutput {
	return i.ToRouterRipMapOutputWithContext(context.Background())
}

func (i RouterRipMap) ToRouterRipMapOutputWithContext(ctx context.Context) RouterRipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipMapOutput)
}

type RouterRipOutput struct{ *pulumi.OutputState }

func (RouterRipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterRip)(nil)).Elem()
}

func (o RouterRipOutput) ToRouterRipOutput() RouterRipOutput {
	return o
}

func (o RouterRipOutput) ToRouterRipOutputWithContext(ctx context.Context) RouterRipOutput {
	return o
}

func (o RouterRipOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

func (o RouterRipOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

func (o RouterRipOutput) Distances() RouterRipDistanceArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipDistanceArrayOutput { return v.Distances }).(RouterRipDistanceArrayOutput)
}

func (o RouterRipOutput) DistributeLists() RouterRipDistributeListArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipDistributeListArrayOutput { return v.DistributeLists }).(RouterRipDistributeListArrayOutput)
}

func (o RouterRipOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RouterRipOutput) GarbageTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.GarbageTimer }).(pulumi.IntOutput)
}

func (o RouterRipOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o RouterRipOutput) Interfaces() RouterRipInterfaceArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipInterfaceArrayOutput { return v.Interfaces }).(RouterRipInterfaceArrayOutput)
}

func (o RouterRipOutput) MaxOutMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.MaxOutMetric }).(pulumi.IntOutput)
}

func (o RouterRipOutput) Neighbors() RouterRipNeighborArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipNeighborArrayOutput { return v.Neighbors }).(RouterRipNeighborArrayOutput)
}

func (o RouterRipOutput) Networks() RouterRipNetworkArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipNetworkArrayOutput { return v.Networks }).(RouterRipNetworkArrayOutput)
}

func (o RouterRipOutput) OffsetLists() RouterRipOffsetListArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipOffsetListArrayOutput { return v.OffsetLists }).(RouterRipOffsetListArrayOutput)
}

func (o RouterRipOutput) PassiveInterfaces() RouterRipPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(RouterRipPassiveInterfaceArrayOutput)
}

func (o RouterRipOutput) RecvBufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.RecvBufferSize }).(pulumi.IntOutput)
}

func (o RouterRipOutput) Redistributes() RouterRipRedistributeArrayOutput {
	return o.ApplyT(func(v *RouterRip) RouterRipRedistributeArrayOutput { return v.Redistributes }).(RouterRipRedistributeArrayOutput)
}

func (o RouterRipOutput) TimeoutTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.TimeoutTimer }).(pulumi.IntOutput)
}

func (o RouterRipOutput) UpdateTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.IntOutput { return v.UpdateTimer }).(pulumi.IntOutput)
}

func (o RouterRipOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o RouterRipOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterRip) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type RouterRipArrayOutput struct{ *pulumi.OutputState }

func (RouterRipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterRip)(nil)).Elem()
}

func (o RouterRipArrayOutput) ToRouterRipArrayOutput() RouterRipArrayOutput {
	return o
}

func (o RouterRipArrayOutput) ToRouterRipArrayOutputWithContext(ctx context.Context) RouterRipArrayOutput {
	return o
}

func (o RouterRipArrayOutput) Index(i pulumi.IntInput) RouterRipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterRip {
		return vs[0].([]*RouterRip)[vs[1].(int)]
	}).(RouterRipOutput)
}

type RouterRipMapOutput struct{ *pulumi.OutputState }

func (RouterRipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterRip)(nil)).Elem()
}

func (o RouterRipMapOutput) ToRouterRipMapOutput() RouterRipMapOutput {
	return o
}

func (o RouterRipMapOutput) ToRouterRipMapOutputWithContext(ctx context.Context) RouterRipMapOutput {
	return o
}

func (o RouterRipMapOutput) MapIndex(k pulumi.StringInput) RouterRipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterRip {
		return vs[0].(map[string]*RouterRip)[vs[1].(string)]
	}).(RouterRipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipInput)(nil)).Elem(), &RouterRip{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipArrayInput)(nil)).Elem(), RouterRipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipMapInput)(nil)).Elem(), RouterRipMap{})
	pulumi.RegisterOutputType(RouterRipOutput{})
	pulumi.RegisterOutputType(RouterRipArrayOutput{})
	pulumi.RegisterOutputType(RouterRipMapOutput{})
}
