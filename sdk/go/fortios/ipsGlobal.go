// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type IpsGlobal struct {
	pulumi.CustomResourceState

	AnomalyMode             pulumi.StringOutput           `pulumi:"anomalyMode"`
	CpAccelMode             pulumi.StringOutput           `pulumi:"cpAccelMode"`
	Database                pulumi.StringOutput           `pulumi:"database"`
	DeepAppInspDbLimit      pulumi.IntOutput              `pulumi:"deepAppInspDbLimit"`
	DeepAppInspTimeout      pulumi.IntOutput              `pulumi:"deepAppInspTimeout"`
	EngineCount             pulumi.IntOutput              `pulumi:"engineCount"`
	ExcludeSignatures       pulumi.StringOutput           `pulumi:"excludeSignatures"`
	FailOpen                pulumi.StringOutput           `pulumi:"failOpen"`
	GetAllTables            pulumi.StringPtrOutput        `pulumi:"getAllTables"`
	IntelligentMode         pulumi.StringOutput           `pulumi:"intelligentMode"`
	IpsReserveCpu           pulumi.StringOutput           `pulumi:"ipsReserveCpu"`
	NgfwMaxScanRange        pulumi.IntOutput              `pulumi:"ngfwMaxScanRange"`
	NpAccelMode             pulumi.StringOutput           `pulumi:"npAccelMode"`
	PacketLogQueueDepth     pulumi.IntOutput              `pulumi:"packetLogQueueDepth"`
	SessionLimitMode        pulumi.StringOutput           `pulumi:"sessionLimitMode"`
	SkypeClientPublicIpaddr pulumi.StringPtrOutput        `pulumi:"skypeClientPublicIpaddr"`
	SocketSize              pulumi.IntOutput              `pulumi:"socketSize"`
	SyncSessionTtl          pulumi.StringOutput           `pulumi:"syncSessionTtl"`
	TlsActiveProbe          IpsGlobalTlsActiveProbeOutput `pulumi:"tlsActiveProbe"`
	TrafficSubmit           pulumi.StringOutput           `pulumi:"trafficSubmit"`
	Vdomparam               pulumi.StringPtrOutput        `pulumi:"vdomparam"`
}

// NewIpsGlobal registers a new resource with the given unique name, arguments, and options.
func NewIpsGlobal(ctx *pulumi.Context,
	name string, args *IpsGlobalArgs, opts ...pulumi.ResourceOption) (*IpsGlobal, error) {
	if args == nil {
		args = &IpsGlobalArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpsGlobal
	err := ctx.RegisterResource("fortios:index/ipsGlobal:IpsGlobal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsGlobal gets an existing IpsGlobal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpsGlobalState, opts ...pulumi.ResourceOption) (*IpsGlobal, error) {
	var resource IpsGlobal
	err := ctx.ReadResource("fortios:index/ipsGlobal:IpsGlobal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpsGlobal resources.
type ipsGlobalState struct {
	AnomalyMode             *string                  `pulumi:"anomalyMode"`
	CpAccelMode             *string                  `pulumi:"cpAccelMode"`
	Database                *string                  `pulumi:"database"`
	DeepAppInspDbLimit      *int                     `pulumi:"deepAppInspDbLimit"`
	DeepAppInspTimeout      *int                     `pulumi:"deepAppInspTimeout"`
	EngineCount             *int                     `pulumi:"engineCount"`
	ExcludeSignatures       *string                  `pulumi:"excludeSignatures"`
	FailOpen                *string                  `pulumi:"failOpen"`
	GetAllTables            *string                  `pulumi:"getAllTables"`
	IntelligentMode         *string                  `pulumi:"intelligentMode"`
	IpsReserveCpu           *string                  `pulumi:"ipsReserveCpu"`
	NgfwMaxScanRange        *int                     `pulumi:"ngfwMaxScanRange"`
	NpAccelMode             *string                  `pulumi:"npAccelMode"`
	PacketLogQueueDepth     *int                     `pulumi:"packetLogQueueDepth"`
	SessionLimitMode        *string                  `pulumi:"sessionLimitMode"`
	SkypeClientPublicIpaddr *string                  `pulumi:"skypeClientPublicIpaddr"`
	SocketSize              *int                     `pulumi:"socketSize"`
	SyncSessionTtl          *string                  `pulumi:"syncSessionTtl"`
	TlsActiveProbe          *IpsGlobalTlsActiveProbe `pulumi:"tlsActiveProbe"`
	TrafficSubmit           *string                  `pulumi:"trafficSubmit"`
	Vdomparam               *string                  `pulumi:"vdomparam"`
}

type IpsGlobalState struct {
	AnomalyMode             pulumi.StringPtrInput
	CpAccelMode             pulumi.StringPtrInput
	Database                pulumi.StringPtrInput
	DeepAppInspDbLimit      pulumi.IntPtrInput
	DeepAppInspTimeout      pulumi.IntPtrInput
	EngineCount             pulumi.IntPtrInput
	ExcludeSignatures       pulumi.StringPtrInput
	FailOpen                pulumi.StringPtrInput
	GetAllTables            pulumi.StringPtrInput
	IntelligentMode         pulumi.StringPtrInput
	IpsReserveCpu           pulumi.StringPtrInput
	NgfwMaxScanRange        pulumi.IntPtrInput
	NpAccelMode             pulumi.StringPtrInput
	PacketLogQueueDepth     pulumi.IntPtrInput
	SessionLimitMode        pulumi.StringPtrInput
	SkypeClientPublicIpaddr pulumi.StringPtrInput
	SocketSize              pulumi.IntPtrInput
	SyncSessionTtl          pulumi.StringPtrInput
	TlsActiveProbe          IpsGlobalTlsActiveProbePtrInput
	TrafficSubmit           pulumi.StringPtrInput
	Vdomparam               pulumi.StringPtrInput
}

func (IpsGlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsGlobalState)(nil)).Elem()
}

type ipsGlobalArgs struct {
	AnomalyMode             *string                  `pulumi:"anomalyMode"`
	CpAccelMode             *string                  `pulumi:"cpAccelMode"`
	Database                *string                  `pulumi:"database"`
	DeepAppInspDbLimit      *int                     `pulumi:"deepAppInspDbLimit"`
	DeepAppInspTimeout      *int                     `pulumi:"deepAppInspTimeout"`
	EngineCount             *int                     `pulumi:"engineCount"`
	ExcludeSignatures       *string                  `pulumi:"excludeSignatures"`
	FailOpen                *string                  `pulumi:"failOpen"`
	GetAllTables            *string                  `pulumi:"getAllTables"`
	IntelligentMode         *string                  `pulumi:"intelligentMode"`
	IpsReserveCpu           *string                  `pulumi:"ipsReserveCpu"`
	NgfwMaxScanRange        *int                     `pulumi:"ngfwMaxScanRange"`
	NpAccelMode             *string                  `pulumi:"npAccelMode"`
	PacketLogQueueDepth     *int                     `pulumi:"packetLogQueueDepth"`
	SessionLimitMode        *string                  `pulumi:"sessionLimitMode"`
	SkypeClientPublicIpaddr *string                  `pulumi:"skypeClientPublicIpaddr"`
	SocketSize              *int                     `pulumi:"socketSize"`
	SyncSessionTtl          *string                  `pulumi:"syncSessionTtl"`
	TlsActiveProbe          *IpsGlobalTlsActiveProbe `pulumi:"tlsActiveProbe"`
	TrafficSubmit           *string                  `pulumi:"trafficSubmit"`
	Vdomparam               *string                  `pulumi:"vdomparam"`
}

// The set of arguments for constructing a IpsGlobal resource.
type IpsGlobalArgs struct {
	AnomalyMode             pulumi.StringPtrInput
	CpAccelMode             pulumi.StringPtrInput
	Database                pulumi.StringPtrInput
	DeepAppInspDbLimit      pulumi.IntPtrInput
	DeepAppInspTimeout      pulumi.IntPtrInput
	EngineCount             pulumi.IntPtrInput
	ExcludeSignatures       pulumi.StringPtrInput
	FailOpen                pulumi.StringPtrInput
	GetAllTables            pulumi.StringPtrInput
	IntelligentMode         pulumi.StringPtrInput
	IpsReserveCpu           pulumi.StringPtrInput
	NgfwMaxScanRange        pulumi.IntPtrInput
	NpAccelMode             pulumi.StringPtrInput
	PacketLogQueueDepth     pulumi.IntPtrInput
	SessionLimitMode        pulumi.StringPtrInput
	SkypeClientPublicIpaddr pulumi.StringPtrInput
	SocketSize              pulumi.IntPtrInput
	SyncSessionTtl          pulumi.StringPtrInput
	TlsActiveProbe          IpsGlobalTlsActiveProbePtrInput
	TrafficSubmit           pulumi.StringPtrInput
	Vdomparam               pulumi.StringPtrInput
}

func (IpsGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsGlobalArgs)(nil)).Elem()
}

type IpsGlobalInput interface {
	pulumi.Input

	ToIpsGlobalOutput() IpsGlobalOutput
	ToIpsGlobalOutputWithContext(ctx context.Context) IpsGlobalOutput
}

func (*IpsGlobal) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsGlobal)(nil)).Elem()
}

func (i *IpsGlobal) ToIpsGlobalOutput() IpsGlobalOutput {
	return i.ToIpsGlobalOutputWithContext(context.Background())
}

func (i *IpsGlobal) ToIpsGlobalOutputWithContext(ctx context.Context) IpsGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalOutput)
}

func (i *IpsGlobal) ToOutput(ctx context.Context) pulumix.Output[*IpsGlobal] {
	return pulumix.Output[*IpsGlobal]{
		OutputState: i.ToIpsGlobalOutputWithContext(ctx).OutputState,
	}
}

// IpsGlobalArrayInput is an input type that accepts IpsGlobalArray and IpsGlobalArrayOutput values.
// You can construct a concrete instance of `IpsGlobalArrayInput` via:
//
//	IpsGlobalArray{ IpsGlobalArgs{...} }
type IpsGlobalArrayInput interface {
	pulumi.Input

	ToIpsGlobalArrayOutput() IpsGlobalArrayOutput
	ToIpsGlobalArrayOutputWithContext(context.Context) IpsGlobalArrayOutput
}

type IpsGlobalArray []IpsGlobalInput

func (IpsGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsGlobal)(nil)).Elem()
}

func (i IpsGlobalArray) ToIpsGlobalArrayOutput() IpsGlobalArrayOutput {
	return i.ToIpsGlobalArrayOutputWithContext(context.Background())
}

func (i IpsGlobalArray) ToIpsGlobalArrayOutputWithContext(ctx context.Context) IpsGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalArrayOutput)
}

func (i IpsGlobalArray) ToOutput(ctx context.Context) pulumix.Output[[]*IpsGlobal] {
	return pulumix.Output[[]*IpsGlobal]{
		OutputState: i.ToIpsGlobalArrayOutputWithContext(ctx).OutputState,
	}
}

// IpsGlobalMapInput is an input type that accepts IpsGlobalMap and IpsGlobalMapOutput values.
// You can construct a concrete instance of `IpsGlobalMapInput` via:
//
//	IpsGlobalMap{ "key": IpsGlobalArgs{...} }
type IpsGlobalMapInput interface {
	pulumi.Input

	ToIpsGlobalMapOutput() IpsGlobalMapOutput
	ToIpsGlobalMapOutputWithContext(context.Context) IpsGlobalMapOutput
}

type IpsGlobalMap map[string]IpsGlobalInput

func (IpsGlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsGlobal)(nil)).Elem()
}

func (i IpsGlobalMap) ToIpsGlobalMapOutput() IpsGlobalMapOutput {
	return i.ToIpsGlobalMapOutputWithContext(context.Background())
}

func (i IpsGlobalMap) ToIpsGlobalMapOutputWithContext(ctx context.Context) IpsGlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsGlobalMapOutput)
}

func (i IpsGlobalMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*IpsGlobal] {
	return pulumix.Output[map[string]*IpsGlobal]{
		OutputState: i.ToIpsGlobalMapOutputWithContext(ctx).OutputState,
	}
}

type IpsGlobalOutput struct{ *pulumi.OutputState }

func (IpsGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsGlobal)(nil)).Elem()
}

func (o IpsGlobalOutput) ToIpsGlobalOutput() IpsGlobalOutput {
	return o
}

func (o IpsGlobalOutput) ToIpsGlobalOutputWithContext(ctx context.Context) IpsGlobalOutput {
	return o
}

func (o IpsGlobalOutput) ToOutput(ctx context.Context) pulumix.Output[*IpsGlobal] {
	return pulumix.Output[*IpsGlobal]{
		OutputState: o.OutputState,
	}
}

func (o IpsGlobalOutput) AnomalyMode() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.AnomalyMode }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) CpAccelMode() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.CpAccelMode }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.Database }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) DeepAppInspDbLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.DeepAppInspDbLimit }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) DeepAppInspTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.DeepAppInspTimeout }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) EngineCount() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.EngineCount }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) ExcludeSignatures() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.ExcludeSignatures }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) FailOpen() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.FailOpen }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o IpsGlobalOutput) IntelligentMode() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.IntelligentMode }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) IpsReserveCpu() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.IpsReserveCpu }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) NgfwMaxScanRange() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.NgfwMaxScanRange }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) NpAccelMode() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.NpAccelMode }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) PacketLogQueueDepth() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.PacketLogQueueDepth }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) SessionLimitMode() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.SessionLimitMode }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) SkypeClientPublicIpaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringPtrOutput { return v.SkypeClientPublicIpaddr }).(pulumi.StringPtrOutput)
}

func (o IpsGlobalOutput) SocketSize() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.IntOutput { return v.SocketSize }).(pulumi.IntOutput)
}

func (o IpsGlobalOutput) SyncSessionTtl() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.SyncSessionTtl }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) TlsActiveProbe() IpsGlobalTlsActiveProbeOutput {
	return o.ApplyT(func(v *IpsGlobal) IpsGlobalTlsActiveProbeOutput { return v.TlsActiveProbe }).(IpsGlobalTlsActiveProbeOutput)
}

func (o IpsGlobalOutput) TrafficSubmit() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringOutput { return v.TrafficSubmit }).(pulumi.StringOutput)
}

func (o IpsGlobalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsGlobal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type IpsGlobalArrayOutput struct{ *pulumi.OutputState }

func (IpsGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsGlobal)(nil)).Elem()
}

func (o IpsGlobalArrayOutput) ToIpsGlobalArrayOutput() IpsGlobalArrayOutput {
	return o
}

func (o IpsGlobalArrayOutput) ToIpsGlobalArrayOutputWithContext(ctx context.Context) IpsGlobalArrayOutput {
	return o
}

func (o IpsGlobalArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*IpsGlobal] {
	return pulumix.Output[[]*IpsGlobal]{
		OutputState: o.OutputState,
	}
}

func (o IpsGlobalArrayOutput) Index(i pulumi.IntInput) IpsGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpsGlobal {
		return vs[0].([]*IpsGlobal)[vs[1].(int)]
	}).(IpsGlobalOutput)
}

type IpsGlobalMapOutput struct{ *pulumi.OutputState }

func (IpsGlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsGlobal)(nil)).Elem()
}

func (o IpsGlobalMapOutput) ToIpsGlobalMapOutput() IpsGlobalMapOutput {
	return o
}

func (o IpsGlobalMapOutput) ToIpsGlobalMapOutputWithContext(ctx context.Context) IpsGlobalMapOutput {
	return o
}

func (o IpsGlobalMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*IpsGlobal] {
	return pulumix.Output[map[string]*IpsGlobal]{
		OutputState: o.OutputState,
	}
}

func (o IpsGlobalMapOutput) MapIndex(k pulumi.StringInput) IpsGlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpsGlobal {
		return vs[0].(map[string]*IpsGlobal)[vs[1].(string)]
	}).(IpsGlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpsGlobalInput)(nil)).Elem(), &IpsGlobal{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsGlobalArrayInput)(nil)).Elem(), IpsGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsGlobalMapInput)(nil)).Elem(), IpsGlobalMap{})
	pulumi.RegisterOutputType(IpsGlobalOutput{})
	pulumi.RegisterOutputType(IpsGlobalArrayOutput{})
	pulumi.RegisterOutputType(IpsGlobalMapOutput{})
}
