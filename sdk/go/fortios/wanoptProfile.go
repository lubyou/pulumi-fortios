// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WanoptProfile struct {
	pulumi.CustomResourceState

	AuthGroup    pulumi.StringOutput     `pulumi:"authGroup"`
	Cifs         WanoptProfileCifsOutput `pulumi:"cifs"`
	Comments     pulumi.StringPtrOutput  `pulumi:"comments"`
	Ftp          WanoptProfileFtpOutput  `pulumi:"ftp"`
	GetAllTables pulumi.StringPtrOutput  `pulumi:"getAllTables"`
	Http         WanoptProfileHttpOutput `pulumi:"http"`
	Mapi         WanoptProfileMapiOutput `pulumi:"mapi"`
	Name         pulumi.StringOutput     `pulumi:"name"`
	Tcp          WanoptProfileTcpOutput  `pulumi:"tcp"`
	Transparent  pulumi.StringOutput     `pulumi:"transparent"`
	Vdomparam    pulumi.StringPtrOutput  `pulumi:"vdomparam"`
}

// NewWanoptProfile registers a new resource with the given unique name, arguments, and options.
func NewWanoptProfile(ctx *pulumi.Context,
	name string, args *WanoptProfileArgs, opts ...pulumi.ResourceOption) (*WanoptProfile, error) {
	if args == nil {
		args = &WanoptProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WanoptProfile
	err := ctx.RegisterResource("fortios:index/wanoptProfile:WanoptProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWanoptProfile gets an existing WanoptProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWanoptProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WanoptProfileState, opts ...pulumi.ResourceOption) (*WanoptProfile, error) {
	var resource WanoptProfile
	err := ctx.ReadResource("fortios:index/wanoptProfile:WanoptProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WanoptProfile resources.
type wanoptProfileState struct {
	AuthGroup    *string            `pulumi:"authGroup"`
	Cifs         *WanoptProfileCifs `pulumi:"cifs"`
	Comments     *string            `pulumi:"comments"`
	Ftp          *WanoptProfileFtp  `pulumi:"ftp"`
	GetAllTables *string            `pulumi:"getAllTables"`
	Http         *WanoptProfileHttp `pulumi:"http"`
	Mapi         *WanoptProfileMapi `pulumi:"mapi"`
	Name         *string            `pulumi:"name"`
	Tcp          *WanoptProfileTcp  `pulumi:"tcp"`
	Transparent  *string            `pulumi:"transparent"`
	Vdomparam    *string            `pulumi:"vdomparam"`
}

type WanoptProfileState struct {
	AuthGroup    pulumi.StringPtrInput
	Cifs         WanoptProfileCifsPtrInput
	Comments     pulumi.StringPtrInput
	Ftp          WanoptProfileFtpPtrInput
	GetAllTables pulumi.StringPtrInput
	Http         WanoptProfileHttpPtrInput
	Mapi         WanoptProfileMapiPtrInput
	Name         pulumi.StringPtrInput
	Tcp          WanoptProfileTcpPtrInput
	Transparent  pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (WanoptProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wanoptProfileState)(nil)).Elem()
}

type wanoptProfileArgs struct {
	AuthGroup    *string            `pulumi:"authGroup"`
	Cifs         *WanoptProfileCifs `pulumi:"cifs"`
	Comments     *string            `pulumi:"comments"`
	Ftp          *WanoptProfileFtp  `pulumi:"ftp"`
	GetAllTables *string            `pulumi:"getAllTables"`
	Http         *WanoptProfileHttp `pulumi:"http"`
	Mapi         *WanoptProfileMapi `pulumi:"mapi"`
	Name         *string            `pulumi:"name"`
	Tcp          *WanoptProfileTcp  `pulumi:"tcp"`
	Transparent  *string            `pulumi:"transparent"`
	Vdomparam    *string            `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WanoptProfile resource.
type WanoptProfileArgs struct {
	AuthGroup    pulumi.StringPtrInput
	Cifs         WanoptProfileCifsPtrInput
	Comments     pulumi.StringPtrInput
	Ftp          WanoptProfileFtpPtrInput
	GetAllTables pulumi.StringPtrInput
	Http         WanoptProfileHttpPtrInput
	Mapi         WanoptProfileMapiPtrInput
	Name         pulumi.StringPtrInput
	Tcp          WanoptProfileTcpPtrInput
	Transparent  pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (WanoptProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wanoptProfileArgs)(nil)).Elem()
}

type WanoptProfileInput interface {
	pulumi.Input

	ToWanoptProfileOutput() WanoptProfileOutput
	ToWanoptProfileOutputWithContext(ctx context.Context) WanoptProfileOutput
}

func (*WanoptProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfile)(nil)).Elem()
}

func (i *WanoptProfile) ToWanoptProfileOutput() WanoptProfileOutput {
	return i.ToWanoptProfileOutputWithContext(context.Background())
}

func (i *WanoptProfile) ToWanoptProfileOutputWithContext(ctx context.Context) WanoptProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileOutput)
}

// WanoptProfileArrayInput is an input type that accepts WanoptProfileArray and WanoptProfileArrayOutput values.
// You can construct a concrete instance of `WanoptProfileArrayInput` via:
//
//	WanoptProfileArray{ WanoptProfileArgs{...} }
type WanoptProfileArrayInput interface {
	pulumi.Input

	ToWanoptProfileArrayOutput() WanoptProfileArrayOutput
	ToWanoptProfileArrayOutputWithContext(context.Context) WanoptProfileArrayOutput
}

type WanoptProfileArray []WanoptProfileInput

func (WanoptProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WanoptProfile)(nil)).Elem()
}

func (i WanoptProfileArray) ToWanoptProfileArrayOutput() WanoptProfileArrayOutput {
	return i.ToWanoptProfileArrayOutputWithContext(context.Background())
}

func (i WanoptProfileArray) ToWanoptProfileArrayOutputWithContext(ctx context.Context) WanoptProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileArrayOutput)
}

// WanoptProfileMapInput is an input type that accepts WanoptProfileMap and WanoptProfileMapOutput values.
// You can construct a concrete instance of `WanoptProfileMapInput` via:
//
//	WanoptProfileMap{ "key": WanoptProfileArgs{...} }
type WanoptProfileMapInput interface {
	pulumi.Input

	ToWanoptProfileMapOutput() WanoptProfileMapOutput
	ToWanoptProfileMapOutputWithContext(context.Context) WanoptProfileMapOutput
}

type WanoptProfileMap map[string]WanoptProfileInput

func (WanoptProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WanoptProfile)(nil)).Elem()
}

func (i WanoptProfileMap) ToWanoptProfileMapOutput() WanoptProfileMapOutput {
	return i.ToWanoptProfileMapOutputWithContext(context.Background())
}

func (i WanoptProfileMap) ToWanoptProfileMapOutputWithContext(ctx context.Context) WanoptProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WanoptProfileMapOutput)
}

type WanoptProfileOutput struct{ *pulumi.OutputState }

func (WanoptProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WanoptProfile)(nil)).Elem()
}

func (o WanoptProfileOutput) ToWanoptProfileOutput() WanoptProfileOutput {
	return o
}

func (o WanoptProfileOutput) ToWanoptProfileOutputWithContext(ctx context.Context) WanoptProfileOutput {
	return o
}

func (o WanoptProfileOutput) AuthGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringOutput { return v.AuthGroup }).(pulumi.StringOutput)
}

func (o WanoptProfileOutput) Cifs() WanoptProfileCifsOutput {
	return o.ApplyT(func(v *WanoptProfile) WanoptProfileCifsOutput { return v.Cifs }).(WanoptProfileCifsOutput)
}

func (o WanoptProfileOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o WanoptProfileOutput) Ftp() WanoptProfileFtpOutput {
	return o.ApplyT(func(v *WanoptProfile) WanoptProfileFtpOutput { return v.Ftp }).(WanoptProfileFtpOutput)
}

func (o WanoptProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o WanoptProfileOutput) Http() WanoptProfileHttpOutput {
	return o.ApplyT(func(v *WanoptProfile) WanoptProfileHttpOutput { return v.Http }).(WanoptProfileHttpOutput)
}

func (o WanoptProfileOutput) Mapi() WanoptProfileMapiOutput {
	return o.ApplyT(func(v *WanoptProfile) WanoptProfileMapiOutput { return v.Mapi }).(WanoptProfileMapiOutput)
}

func (o WanoptProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WanoptProfileOutput) Tcp() WanoptProfileTcpOutput {
	return o.ApplyT(func(v *WanoptProfile) WanoptProfileTcpOutput { return v.Tcp }).(WanoptProfileTcpOutput)
}

func (o WanoptProfileOutput) Transparent() pulumi.StringOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringOutput { return v.Transparent }).(pulumi.StringOutput)
}

func (o WanoptProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WanoptProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WanoptProfileArrayOutput struct{ *pulumi.OutputState }

func (WanoptProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WanoptProfile)(nil)).Elem()
}

func (o WanoptProfileArrayOutput) ToWanoptProfileArrayOutput() WanoptProfileArrayOutput {
	return o
}

func (o WanoptProfileArrayOutput) ToWanoptProfileArrayOutputWithContext(ctx context.Context) WanoptProfileArrayOutput {
	return o
}

func (o WanoptProfileArrayOutput) Index(i pulumi.IntInput) WanoptProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WanoptProfile {
		return vs[0].([]*WanoptProfile)[vs[1].(int)]
	}).(WanoptProfileOutput)
}

type WanoptProfileMapOutput struct{ *pulumi.OutputState }

func (WanoptProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WanoptProfile)(nil)).Elem()
}

func (o WanoptProfileMapOutput) ToWanoptProfileMapOutput() WanoptProfileMapOutput {
	return o
}

func (o WanoptProfileMapOutput) ToWanoptProfileMapOutputWithContext(ctx context.Context) WanoptProfileMapOutput {
	return o
}

func (o WanoptProfileMapOutput) MapIndex(k pulumi.StringInput) WanoptProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WanoptProfile {
		return vs[0].(map[string]*WanoptProfile)[vs[1].(string)]
	}).(WanoptProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileInput)(nil)).Elem(), &WanoptProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileArrayInput)(nil)).Elem(), WanoptProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WanoptProfileMapInput)(nil)).Elem(), WanoptProfileMap{})
	pulumi.RegisterOutputType(WanoptProfileOutput{})
	pulumi.RegisterOutputType(WanoptProfileArrayOutput{})
	pulumi.RegisterOutputType(WanoptProfileMapOutput{})
}
