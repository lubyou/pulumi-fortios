// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemPasswordPolicy struct {
	pulumi.CustomResourceState

	ApplyTo             pulumi.StringOutput    `pulumi:"applyTo"`
	Change4Characters   pulumi.StringOutput    `pulumi:"change4Characters"`
	ExpireDay           pulumi.IntOutput       `pulumi:"expireDay"`
	ExpireStatus        pulumi.StringOutput    `pulumi:"expireStatus"`
	MinChangeCharacters pulumi.IntOutput       `pulumi:"minChangeCharacters"`
	MinLowerCaseLetter  pulumi.IntOutput       `pulumi:"minLowerCaseLetter"`
	MinNonAlphanumeric  pulumi.IntOutput       `pulumi:"minNonAlphanumeric"`
	MinNumber           pulumi.IntOutput       `pulumi:"minNumber"`
	MinUpperCaseLetter  pulumi.IntOutput       `pulumi:"minUpperCaseLetter"`
	MinimumLength       pulumi.IntOutput       `pulumi:"minimumLength"`
	ReusePassword       pulumi.StringOutput    `pulumi:"reusePassword"`
	Status              pulumi.StringOutput    `pulumi:"status"`
	Vdomparam           pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemPasswordPolicy registers a new resource with the given unique name, arguments, and options.
func NewSystemPasswordPolicy(ctx *pulumi.Context,
	name string, args *SystemPasswordPolicyArgs, opts ...pulumi.ResourceOption) (*SystemPasswordPolicy, error) {
	if args == nil {
		args = &SystemPasswordPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemPasswordPolicy
	err := ctx.RegisterResource("fortios:index/systemPasswordPolicy:SystemPasswordPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemPasswordPolicy gets an existing SystemPasswordPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemPasswordPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemPasswordPolicyState, opts ...pulumi.ResourceOption) (*SystemPasswordPolicy, error) {
	var resource SystemPasswordPolicy
	err := ctx.ReadResource("fortios:index/systemPasswordPolicy:SystemPasswordPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemPasswordPolicy resources.
type systemPasswordPolicyState struct {
	ApplyTo             *string `pulumi:"applyTo"`
	Change4Characters   *string `pulumi:"change4Characters"`
	ExpireDay           *int    `pulumi:"expireDay"`
	ExpireStatus        *string `pulumi:"expireStatus"`
	MinChangeCharacters *int    `pulumi:"minChangeCharacters"`
	MinLowerCaseLetter  *int    `pulumi:"minLowerCaseLetter"`
	MinNonAlphanumeric  *int    `pulumi:"minNonAlphanumeric"`
	MinNumber           *int    `pulumi:"minNumber"`
	MinUpperCaseLetter  *int    `pulumi:"minUpperCaseLetter"`
	MinimumLength       *int    `pulumi:"minimumLength"`
	ReusePassword       *string `pulumi:"reusePassword"`
	Status              *string `pulumi:"status"`
	Vdomparam           *string `pulumi:"vdomparam"`
}

type SystemPasswordPolicyState struct {
	ApplyTo             pulumi.StringPtrInput
	Change4Characters   pulumi.StringPtrInput
	ExpireDay           pulumi.IntPtrInput
	ExpireStatus        pulumi.StringPtrInput
	MinChangeCharacters pulumi.IntPtrInput
	MinLowerCaseLetter  pulumi.IntPtrInput
	MinNonAlphanumeric  pulumi.IntPtrInput
	MinNumber           pulumi.IntPtrInput
	MinUpperCaseLetter  pulumi.IntPtrInput
	MinimumLength       pulumi.IntPtrInput
	ReusePassword       pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemPasswordPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPasswordPolicyState)(nil)).Elem()
}

type systemPasswordPolicyArgs struct {
	ApplyTo             *string `pulumi:"applyTo"`
	Change4Characters   *string `pulumi:"change4Characters"`
	ExpireDay           *int    `pulumi:"expireDay"`
	ExpireStatus        *string `pulumi:"expireStatus"`
	MinChangeCharacters *int    `pulumi:"minChangeCharacters"`
	MinLowerCaseLetter  *int    `pulumi:"minLowerCaseLetter"`
	MinNonAlphanumeric  *int    `pulumi:"minNonAlphanumeric"`
	MinNumber           *int    `pulumi:"minNumber"`
	MinUpperCaseLetter  *int    `pulumi:"minUpperCaseLetter"`
	MinimumLength       *int    `pulumi:"minimumLength"`
	ReusePassword       *string `pulumi:"reusePassword"`
	Status              *string `pulumi:"status"`
	Vdomparam           *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemPasswordPolicy resource.
type SystemPasswordPolicyArgs struct {
	ApplyTo             pulumi.StringPtrInput
	Change4Characters   pulumi.StringPtrInput
	ExpireDay           pulumi.IntPtrInput
	ExpireStatus        pulumi.StringPtrInput
	MinChangeCharacters pulumi.IntPtrInput
	MinLowerCaseLetter  pulumi.IntPtrInput
	MinNonAlphanumeric  pulumi.IntPtrInput
	MinNumber           pulumi.IntPtrInput
	MinUpperCaseLetter  pulumi.IntPtrInput
	MinimumLength       pulumi.IntPtrInput
	ReusePassword       pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPasswordPolicyArgs)(nil)).Elem()
}

type SystemPasswordPolicyInput interface {
	pulumi.Input

	ToSystemPasswordPolicyOutput() SystemPasswordPolicyOutput
	ToSystemPasswordPolicyOutputWithContext(ctx context.Context) SystemPasswordPolicyOutput
}

func (*SystemPasswordPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPasswordPolicy)(nil)).Elem()
}

func (i *SystemPasswordPolicy) ToSystemPasswordPolicyOutput() SystemPasswordPolicyOutput {
	return i.ToSystemPasswordPolicyOutputWithContext(context.Background())
}

func (i *SystemPasswordPolicy) ToSystemPasswordPolicyOutputWithContext(ctx context.Context) SystemPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPasswordPolicyOutput)
}

func (i *SystemPasswordPolicy) ToOutput(ctx context.Context) pulumix.Output[*SystemPasswordPolicy] {
	return pulumix.Output[*SystemPasswordPolicy]{
		OutputState: i.ToSystemPasswordPolicyOutputWithContext(ctx).OutputState,
	}
}

// SystemPasswordPolicyArrayInput is an input type that accepts SystemPasswordPolicyArray and SystemPasswordPolicyArrayOutput values.
// You can construct a concrete instance of `SystemPasswordPolicyArrayInput` via:
//
//	SystemPasswordPolicyArray{ SystemPasswordPolicyArgs{...} }
type SystemPasswordPolicyArrayInput interface {
	pulumi.Input

	ToSystemPasswordPolicyArrayOutput() SystemPasswordPolicyArrayOutput
	ToSystemPasswordPolicyArrayOutputWithContext(context.Context) SystemPasswordPolicyArrayOutput
}

type SystemPasswordPolicyArray []SystemPasswordPolicyInput

func (SystemPasswordPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPasswordPolicy)(nil)).Elem()
}

func (i SystemPasswordPolicyArray) ToSystemPasswordPolicyArrayOutput() SystemPasswordPolicyArrayOutput {
	return i.ToSystemPasswordPolicyArrayOutputWithContext(context.Background())
}

func (i SystemPasswordPolicyArray) ToSystemPasswordPolicyArrayOutputWithContext(ctx context.Context) SystemPasswordPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPasswordPolicyArrayOutput)
}

func (i SystemPasswordPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemPasswordPolicy] {
	return pulumix.Output[[]*SystemPasswordPolicy]{
		OutputState: i.ToSystemPasswordPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemPasswordPolicyMapInput is an input type that accepts SystemPasswordPolicyMap and SystemPasswordPolicyMapOutput values.
// You can construct a concrete instance of `SystemPasswordPolicyMapInput` via:
//
//	SystemPasswordPolicyMap{ "key": SystemPasswordPolicyArgs{...} }
type SystemPasswordPolicyMapInput interface {
	pulumi.Input

	ToSystemPasswordPolicyMapOutput() SystemPasswordPolicyMapOutput
	ToSystemPasswordPolicyMapOutputWithContext(context.Context) SystemPasswordPolicyMapOutput
}

type SystemPasswordPolicyMap map[string]SystemPasswordPolicyInput

func (SystemPasswordPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPasswordPolicy)(nil)).Elem()
}

func (i SystemPasswordPolicyMap) ToSystemPasswordPolicyMapOutput() SystemPasswordPolicyMapOutput {
	return i.ToSystemPasswordPolicyMapOutputWithContext(context.Background())
}

func (i SystemPasswordPolicyMap) ToSystemPasswordPolicyMapOutputWithContext(ctx context.Context) SystemPasswordPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPasswordPolicyMapOutput)
}

func (i SystemPasswordPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemPasswordPolicy] {
	return pulumix.Output[map[string]*SystemPasswordPolicy]{
		OutputState: i.ToSystemPasswordPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type SystemPasswordPolicyOutput struct{ *pulumi.OutputState }

func (SystemPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPasswordPolicy)(nil)).Elem()
}

func (o SystemPasswordPolicyOutput) ToSystemPasswordPolicyOutput() SystemPasswordPolicyOutput {
	return o
}

func (o SystemPasswordPolicyOutput) ToSystemPasswordPolicyOutputWithContext(ctx context.Context) SystemPasswordPolicyOutput {
	return o
}

func (o SystemPasswordPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemPasswordPolicy] {
	return pulumix.Output[*SystemPasswordPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SystemPasswordPolicyOutput) ApplyTo() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringOutput { return v.ApplyTo }).(pulumi.StringOutput)
}

func (o SystemPasswordPolicyOutput) Change4Characters() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringOutput { return v.Change4Characters }).(pulumi.StringOutput)
}

func (o SystemPasswordPolicyOutput) ExpireDay() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.ExpireDay }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) ExpireStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringOutput { return v.ExpireStatus }).(pulumi.StringOutput)
}

func (o SystemPasswordPolicyOutput) MinChangeCharacters() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinChangeCharacters }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) MinLowerCaseLetter() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinLowerCaseLetter }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) MinNonAlphanumeric() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinNonAlphanumeric }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) MinNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinNumber }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) MinUpperCaseLetter() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinUpperCaseLetter }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) MinimumLength() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.IntOutput { return v.MinimumLength }).(pulumi.IntOutput)
}

func (o SystemPasswordPolicyOutput) ReusePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringOutput { return v.ReusePassword }).(pulumi.StringOutput)
}

func (o SystemPasswordPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemPasswordPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemPasswordPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemPasswordPolicyArrayOutput struct{ *pulumi.OutputState }

func (SystemPasswordPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPasswordPolicy)(nil)).Elem()
}

func (o SystemPasswordPolicyArrayOutput) ToSystemPasswordPolicyArrayOutput() SystemPasswordPolicyArrayOutput {
	return o
}

func (o SystemPasswordPolicyArrayOutput) ToSystemPasswordPolicyArrayOutputWithContext(ctx context.Context) SystemPasswordPolicyArrayOutput {
	return o
}

func (o SystemPasswordPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemPasswordPolicy] {
	return pulumix.Output[[]*SystemPasswordPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SystemPasswordPolicyArrayOutput) Index(i pulumi.IntInput) SystemPasswordPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemPasswordPolicy {
		return vs[0].([]*SystemPasswordPolicy)[vs[1].(int)]
	}).(SystemPasswordPolicyOutput)
}

type SystemPasswordPolicyMapOutput struct{ *pulumi.OutputState }

func (SystemPasswordPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPasswordPolicy)(nil)).Elem()
}

func (o SystemPasswordPolicyMapOutput) ToSystemPasswordPolicyMapOutput() SystemPasswordPolicyMapOutput {
	return o
}

func (o SystemPasswordPolicyMapOutput) ToSystemPasswordPolicyMapOutputWithContext(ctx context.Context) SystemPasswordPolicyMapOutput {
	return o
}

func (o SystemPasswordPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemPasswordPolicy] {
	return pulumix.Output[map[string]*SystemPasswordPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SystemPasswordPolicyMapOutput) MapIndex(k pulumi.StringInput) SystemPasswordPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemPasswordPolicy {
		return vs[0].(map[string]*SystemPasswordPolicy)[vs[1].(string)]
	}).(SystemPasswordPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPasswordPolicyInput)(nil)).Elem(), &SystemPasswordPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPasswordPolicyArrayInput)(nil)).Elem(), SystemPasswordPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPasswordPolicyMapInput)(nil)).Elem(), SystemPasswordPolicyMap{})
	pulumi.RegisterOutputType(SystemPasswordPolicyOutput{})
	pulumi.RegisterOutputType(SystemPasswordPolicyArrayOutput{})
	pulumi.RegisterOutputType(SystemPasswordPolicyMapOutput{})
}
