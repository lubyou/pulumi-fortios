// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure ICAP profiles.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewIcapProfile(ctx, "trname", &fortios.IcapProfileArgs{
// 			IcapHeaders: fortios.IcapProfileIcapHeaderArray{
// 				&fortios.IcapProfileIcapHeaderArgs{
// 					Base64Encoding: pulumi.String("disable"),
// 					Content:        pulumi.String(fmt.Sprintf("%v%v", "$", "user")),
// 					Name:           pulumi.String("X-Authenticated-User"),
// 				},
// 			},
// 			Methods:                pulumi.String("delete get head options post put trace other"),
// 			Request:                pulumi.String("disable"),
// 			RequestFailure:         pulumi.String("error"),
// 			Response:               pulumi.String("disable"),
// 			ResponseFailure:        pulumi.String("error"),
// 			ResponseReqHdr:         pulumi.String("disable"),
// 			StreamingContentBypass: pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Icap Profile can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/icapProfile:IcapProfile labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type IcapProfile struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayOutput `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing. Valid values: `delete`, `get`, `head`, `options`, `post`, `put`, `trace`, `other`.
	Methods pulumi.StringOutput `pulumi:"methods"`
	// Address name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringOutput `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntOutput `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup pulumi.StringOutput `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringOutput `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringOutput `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringOutput `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringOutput `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayOutput `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringOutput `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringOutput `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringOutput `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringOutput `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringOutput `pulumi:"responseServer"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringOutput `pulumi:"streamingContentBypass"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewIcapProfile registers a new resource with the given unique name, arguments, and options.
func NewIcapProfile(ctx *pulumi.Context,
	name string, args *IcapProfileArgs, opts ...pulumi.ResourceOption) (*IcapProfile, error) {
	if args == nil {
		args = &IcapProfileArgs{}
	}

	var resource IcapProfile
	err := ctx.RegisterResource("fortios:index/icapProfile:IcapProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIcapProfile gets an existing IcapProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIcapProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IcapProfileState, opts ...pulumi.ResourceOption) (*IcapProfile, error) {
	var resource IcapProfile
	err := ctx.ReadResource("fortios:index/icapProfile:IcapProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IcapProfile resources.
type icapProfileState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []IcapProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing. Valid values: `delete`, `get`, `head`, `options`, `post`, `put`, `trace`, `other`.
	Methods *string `pulumi:"methods"`
	// Address name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []IcapProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type IcapProfileState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing. Valid values: `delete`, `get`, `head`, `options`, `post`, `put`, `trace`, `other`.
	Methods pulumi.StringPtrInput
	// Address name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IcapProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*icapProfileState)(nil)).Elem()
}

type icapProfileArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders []IcapProfileIcapHeader `pulumi:"icapHeaders"`
	// The allowed HTTP methods that will be sent to ICAP server for further processing. Valid values: `delete`, `get`, `head`, `options`, `post`, `put`, `trace`, `other`.
	Methods *string `pulumi:"methods"`
	// Address name.
	Name *string `pulumi:"name"`
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview *string `pulumi:"preview"`
	// Preview data length to be sent to ICAP server.
	PreviewDataLength *int `pulumi:"previewDataLength"`
	// Replacement message group.
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request *string `pulumi:"request"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure *string `pulumi:"requestFailure"`
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath *string `pulumi:"requestPath"`
	// ICAP server to use for an HTTP request.
	RequestServer *string `pulumi:"requestServer"`
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction *string `pulumi:"respmodDefaultAction"`
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules []IcapProfileRespmodForwardRule `pulumi:"respmodForwardRules"`
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response *string `pulumi:"response"`
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure *string `pulumi:"responseFailure"`
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath *string `pulumi:"responsePath"`
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr *string `pulumi:"responseReqHdr"`
	// ICAP server to use for an HTTP response.
	ResponseServer *string `pulumi:"responseServer"`
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass *string `pulumi:"streamingContentBypass"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a IcapProfile resource.
type IcapProfileArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure ICAP forwarded request headers. The structure of `icapHeaders` block is documented below.
	IcapHeaders IcapProfileIcapHeaderArrayInput
	// The allowed HTTP methods that will be sent to ICAP server for further processing. Valid values: `delete`, `get`, `head`, `options`, `post`, `put`, `trace`, `other`.
	Methods pulumi.StringPtrInput
	// Address name.
	Name pulumi.StringPtrInput
	// Enable/disable preview of data to ICAP server. Valid values: `disable`, `enable`.
	Preview pulumi.StringPtrInput
	// Preview data length to be sent to ICAP server.
	PreviewDataLength pulumi.IntPtrInput
	// Replacement message group.
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable whether an HTTP request is passed to an ICAP server. Valid values: `disable`, `enable`.
	Request pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP request. Valid values: `error`, `bypass`.
	RequestFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP request processing service.
	RequestPath pulumi.StringPtrInput
	// ICAP server to use for an HTTP request.
	RequestServer pulumi.StringPtrInput
	// Default action to ICAP response modification (respmod) processing. Valid values: `forward`, `bypass`.
	RespmodDefaultAction pulumi.StringPtrInput
	// ICAP response mode forward rules. The structure of `respmodForwardRules` block is documented below.
	RespmodForwardRules IcapProfileRespmodForwardRuleArrayInput
	// Enable/disable whether an HTTP response is passed to an ICAP server. Valid values: `disable`, `enable`.
	Response pulumi.StringPtrInput
	// Action to take if the ICAP server cannot be contacted when processing an HTTP response. Valid values: `error`, `bypass`.
	ResponseFailure pulumi.StringPtrInput
	// Path component of the ICAP URI that identifies the HTTP response processing service.
	ResponsePath pulumi.StringPtrInput
	// Enable/disable addition of req-hdr for ICAP response modification (respmod) processing. Valid values: `disable`, `enable`.
	ResponseReqHdr pulumi.StringPtrInput
	// ICAP server to use for an HTTP response.
	ResponseServer pulumi.StringPtrInput
	// Enable/disable bypassing of ICAP server for streaming content. Valid values: `disable`, `enable`.
	StreamingContentBypass pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (IcapProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*icapProfileArgs)(nil)).Elem()
}

type IcapProfileInput interface {
	pulumi.Input

	ToIcapProfileOutput() IcapProfileOutput
	ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput
}

func (*IcapProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfile)(nil))
}

func (i *IcapProfile) ToIcapProfileOutput() IcapProfileOutput {
	return i.ToIcapProfileOutputWithContext(context.Background())
}

func (i *IcapProfile) ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileOutput)
}

func (i *IcapProfile) ToIcapProfilePtrOutput() IcapProfilePtrOutput {
	return i.ToIcapProfilePtrOutputWithContext(context.Background())
}

func (i *IcapProfile) ToIcapProfilePtrOutputWithContext(ctx context.Context) IcapProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfilePtrOutput)
}

type IcapProfilePtrInput interface {
	pulumi.Input

	ToIcapProfilePtrOutput() IcapProfilePtrOutput
	ToIcapProfilePtrOutputWithContext(ctx context.Context) IcapProfilePtrOutput
}

type icapProfilePtrType IcapProfileArgs

func (*icapProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IcapProfile)(nil))
}

func (i *icapProfilePtrType) ToIcapProfilePtrOutput() IcapProfilePtrOutput {
	return i.ToIcapProfilePtrOutputWithContext(context.Background())
}

func (i *icapProfilePtrType) ToIcapProfilePtrOutputWithContext(ctx context.Context) IcapProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfilePtrOutput)
}

// IcapProfileArrayInput is an input type that accepts IcapProfileArray and IcapProfileArrayOutput values.
// You can construct a concrete instance of `IcapProfileArrayInput` via:
//
//          IcapProfileArray{ IcapProfileArgs{...} }
type IcapProfileArrayInput interface {
	pulumi.Input

	ToIcapProfileArrayOutput() IcapProfileArrayOutput
	ToIcapProfileArrayOutputWithContext(context.Context) IcapProfileArrayOutput
}

type IcapProfileArray []IcapProfileInput

func (IcapProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*IcapProfile)(nil))
}

func (i IcapProfileArray) ToIcapProfileArrayOutput() IcapProfileArrayOutput {
	return i.ToIcapProfileArrayOutputWithContext(context.Background())
}

func (i IcapProfileArray) ToIcapProfileArrayOutputWithContext(ctx context.Context) IcapProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileArrayOutput)
}

// IcapProfileMapInput is an input type that accepts IcapProfileMap and IcapProfileMapOutput values.
// You can construct a concrete instance of `IcapProfileMapInput` via:
//
//          IcapProfileMap{ "key": IcapProfileArgs{...} }
type IcapProfileMapInput interface {
	pulumi.Input

	ToIcapProfileMapOutput() IcapProfileMapOutput
	ToIcapProfileMapOutputWithContext(context.Context) IcapProfileMapOutput
}

type IcapProfileMap map[string]IcapProfileInput

func (IcapProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*IcapProfile)(nil))
}

func (i IcapProfileMap) ToIcapProfileMapOutput() IcapProfileMapOutput {
	return i.ToIcapProfileMapOutputWithContext(context.Background())
}

func (i IcapProfileMap) ToIcapProfileMapOutputWithContext(ctx context.Context) IcapProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IcapProfileMapOutput)
}

type IcapProfileOutput struct {
	*pulumi.OutputState
}

func (IcapProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IcapProfile)(nil))
}

func (o IcapProfileOutput) ToIcapProfileOutput() IcapProfileOutput {
	return o
}

func (o IcapProfileOutput) ToIcapProfileOutputWithContext(ctx context.Context) IcapProfileOutput {
	return o
}

func (o IcapProfileOutput) ToIcapProfilePtrOutput() IcapProfilePtrOutput {
	return o.ToIcapProfilePtrOutputWithContext(context.Background())
}

func (o IcapProfileOutput) ToIcapProfilePtrOutputWithContext(ctx context.Context) IcapProfilePtrOutput {
	return o.ApplyT(func(v IcapProfile) *IcapProfile {
		return &v
	}).(IcapProfilePtrOutput)
}

type IcapProfilePtrOutput struct {
	*pulumi.OutputState
}

func (IcapProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IcapProfile)(nil))
}

func (o IcapProfilePtrOutput) ToIcapProfilePtrOutput() IcapProfilePtrOutput {
	return o
}

func (o IcapProfilePtrOutput) ToIcapProfilePtrOutputWithContext(ctx context.Context) IcapProfilePtrOutput {
	return o
}

type IcapProfileArrayOutput struct{ *pulumi.OutputState }

func (IcapProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IcapProfile)(nil))
}

func (o IcapProfileArrayOutput) ToIcapProfileArrayOutput() IcapProfileArrayOutput {
	return o
}

func (o IcapProfileArrayOutput) ToIcapProfileArrayOutputWithContext(ctx context.Context) IcapProfileArrayOutput {
	return o
}

func (o IcapProfileArrayOutput) Index(i pulumi.IntInput) IcapProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IcapProfile {
		return vs[0].([]IcapProfile)[vs[1].(int)]
	}).(IcapProfileOutput)
}

type IcapProfileMapOutput struct{ *pulumi.OutputState }

func (IcapProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IcapProfile)(nil))
}

func (o IcapProfileMapOutput) ToIcapProfileMapOutput() IcapProfileMapOutput {
	return o
}

func (o IcapProfileMapOutput) ToIcapProfileMapOutputWithContext(ctx context.Context) IcapProfileMapOutput {
	return o
}

func (o IcapProfileMapOutput) MapIndex(k pulumi.StringInput) IcapProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IcapProfile {
		return vs[0].(map[string]IcapProfile)[vs[1].(string)]
	}).(IcapProfileOutput)
}

func init() {
	pulumi.RegisterOutputType(IcapProfileOutput{})
	pulumi.RegisterOutputType(IcapProfilePtrOutput{})
	pulumi.RegisterOutputType(IcapProfileArrayOutput{})
	pulumi.RegisterOutputType(IcapProfileMapOutput{})
}
