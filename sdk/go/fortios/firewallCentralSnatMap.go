// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure central SNAT policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallCentralSnatMap(ctx, "trname", &fortios.FirewallCentralSnatMapArgs{
// 			DstAddrs: FirewallCentralSnatMapDstAddrArray{
// 				&FirewallCentralSnatMapDstAddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			Dstintfs: FirewallCentralSnatMapDstintfArray{
// 				&FirewallCentralSnatMapDstintfArgs{
// 					Name: pulumi.String("port3"),
// 				},
// 			},
// 			Nat:     pulumi.String("enable"),
// 			NatPort: pulumi.String("0"),
// 			OrigAddrs: FirewallCentralSnatMapOrigAddrArray{
// 				&FirewallCentralSnatMapOrigAddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			OrigPort: pulumi.String("0"),
// 			Policyid: pulumi.Int(1),
// 			Protocol: pulumi.Int(33),
// 			Srcintfs: FirewallCentralSnatMapSrcintfArray{
// 				&FirewallCentralSnatMapSrcintfArgs{
// 					Name: pulumi.String("port1"),
// 				},
// 			},
// 			Status: pulumi.String("enable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall CentralSnatMap can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap labelname {{policyid}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap labelname {{policyid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallCentralSnatMap struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// IPv6 Destination address. The structure of `dstAddr6` block is documented below.
	DstAddr6s FirewallCentralSnatMapDstAddr6ArrayOutput `pulumi:"dstAddr6s"`
	// Destination address name from available addresses. The structure of `dstAddr` block is documented below.
	DstAddrs FirewallCentralSnatMapDstAddrArrayOutput `pulumi:"dstAddrs"`
	// Destination interface name from available interfaces. The structure of `dstintf` block is documented below.
	Dstintfs FirewallCentralSnatMapDstintfArrayOutput `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable source NAT. Valid values: `disable`, `enable`.
	Nat pulumi.StringOutput `pulumi:"nat"`
	// Enable/disable NAT46. Valid values: `enable`, `disable`.
	Nat46 pulumi.StringOutput `pulumi:"nat46"`
	// Enable/disable NAT64. Valid values: `enable`, `disable`.
	Nat64 pulumi.StringOutput `pulumi:"nat64"`
	// IPv6 pools to be used for source NAT. The structure of `natIppool6` block is documented below.
	NatIppool6s FirewallCentralSnatMapNatIppool6ArrayOutput `pulumi:"natIppool6s"`
	// Name of the IP pools to be used to translate addresses from available IP Pools. The structure of `natIppool` block is documented below.
	NatIppools FirewallCentralSnatMapNatIppoolArrayOutput `pulumi:"natIppools"`
	// Translated port or port range (0 to 65535).
	NatPort pulumi.StringOutput `pulumi:"natPort"`
	// IPv6 Original address. The structure of `origAddr6` block is documented below.
	OrigAddr6s FirewallCentralSnatMapOrigAddr6ArrayOutput `pulumi:"origAddr6s"`
	// Original address. The structure of `origAddr` block is documented below.
	OrigAddrs FirewallCentralSnatMapOrigAddrArrayOutput `pulumi:"origAddrs"`
	// Original TCP port (0 to 65535).
	OrigPort pulumi.StringOutput `pulumi:"origPort"`
	// Policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Integer value for the protocol type (0 - 255).
	Protocol pulumi.IntOutput `pulumi:"protocol"`
	// Source interface name from available interfaces. The structure of `srcintf` block is documented below.
	Srcintfs FirewallCentralSnatMapSrcintfArrayOutput `pulumi:"srcintfs"`
	// Enable/disable the active status of this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// IPv4/IPv6 source NAT. Valid values: `ipv4`, `ipv6`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallCentralSnatMap registers a new resource with the given unique name, arguments, and options.
func NewFirewallCentralSnatMap(ctx *pulumi.Context,
	name string, args *FirewallCentralSnatMapArgs, opts ...pulumi.ResourceOption) (*FirewallCentralSnatMap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DstAddrs == nil {
		return nil, errors.New("invalid value for required argument 'DstAddrs'")
	}
	if args.Dstintfs == nil {
		return nil, errors.New("invalid value for required argument 'Dstintfs'")
	}
	if args.Nat == nil {
		return nil, errors.New("invalid value for required argument 'Nat'")
	}
	if args.OrigAddrs == nil {
		return nil, errors.New("invalid value for required argument 'OrigAddrs'")
	}
	if args.OrigPort == nil {
		return nil, errors.New("invalid value for required argument 'OrigPort'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.Srcintfs == nil {
		return nil, errors.New("invalid value for required argument 'Srcintfs'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallCentralSnatMap
	err := ctx.RegisterResource("fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallCentralSnatMap gets an existing FirewallCentralSnatMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallCentralSnatMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallCentralSnatMapState, opts ...pulumi.ResourceOption) (*FirewallCentralSnatMap, error) {
	var resource FirewallCentralSnatMap
	err := ctx.ReadResource("fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallCentralSnatMap resources.
type firewallCentralSnatMapState struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// IPv6 Destination address. The structure of `dstAddr6` block is documented below.
	DstAddr6s []FirewallCentralSnatMapDstAddr6 `pulumi:"dstAddr6s"`
	// Destination address name from available addresses. The structure of `dstAddr` block is documented below.
	DstAddrs []FirewallCentralSnatMapDstAddr `pulumi:"dstAddrs"`
	// Destination interface name from available interfaces. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallCentralSnatMapDstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable source NAT. Valid values: `disable`, `enable`.
	Nat *string `pulumi:"nat"`
	// Enable/disable NAT46. Valid values: `enable`, `disable`.
	Nat46 *string `pulumi:"nat46"`
	// Enable/disable NAT64. Valid values: `enable`, `disable`.
	Nat64 *string `pulumi:"nat64"`
	// IPv6 pools to be used for source NAT. The structure of `natIppool6` block is documented below.
	NatIppool6s []FirewallCentralSnatMapNatIppool6 `pulumi:"natIppool6s"`
	// Name of the IP pools to be used to translate addresses from available IP Pools. The structure of `natIppool` block is documented below.
	NatIppools []FirewallCentralSnatMapNatIppool `pulumi:"natIppools"`
	// Translated port or port range (0 to 65535).
	NatPort *string `pulumi:"natPort"`
	// IPv6 Original address. The structure of `origAddr6` block is documented below.
	OrigAddr6s []FirewallCentralSnatMapOrigAddr6 `pulumi:"origAddr6s"`
	// Original address. The structure of `origAddr` block is documented below.
	OrigAddrs []FirewallCentralSnatMapOrigAddr `pulumi:"origAddrs"`
	// Original TCP port (0 to 65535).
	OrigPort *string `pulumi:"origPort"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Integer value for the protocol type (0 - 255).
	Protocol *int `pulumi:"protocol"`
	// Source interface name from available interfaces. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallCentralSnatMapSrcintf `pulumi:"srcintfs"`
	// Enable/disable the active status of this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// IPv4/IPv6 source NAT. Valid values: `ipv4`, `ipv6`.
	Type *string `pulumi:"type"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallCentralSnatMapState struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// IPv6 Destination address. The structure of `dstAddr6` block is documented below.
	DstAddr6s FirewallCentralSnatMapDstAddr6ArrayInput
	// Destination address name from available addresses. The structure of `dstAddr` block is documented below.
	DstAddrs FirewallCentralSnatMapDstAddrArrayInput
	// Destination interface name from available interfaces. The structure of `dstintf` block is documented below.
	Dstintfs FirewallCentralSnatMapDstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable source NAT. Valid values: `disable`, `enable`.
	Nat pulumi.StringPtrInput
	// Enable/disable NAT46. Valid values: `enable`, `disable`.
	Nat46 pulumi.StringPtrInput
	// Enable/disable NAT64. Valid values: `enable`, `disable`.
	Nat64 pulumi.StringPtrInput
	// IPv6 pools to be used for source NAT. The structure of `natIppool6` block is documented below.
	NatIppool6s FirewallCentralSnatMapNatIppool6ArrayInput
	// Name of the IP pools to be used to translate addresses from available IP Pools. The structure of `natIppool` block is documented below.
	NatIppools FirewallCentralSnatMapNatIppoolArrayInput
	// Translated port or port range (0 to 65535).
	NatPort pulumi.StringPtrInput
	// IPv6 Original address. The structure of `origAddr6` block is documented below.
	OrigAddr6s FirewallCentralSnatMapOrigAddr6ArrayInput
	// Original address. The structure of `origAddr` block is documented below.
	OrigAddrs FirewallCentralSnatMapOrigAddrArrayInput
	// Original TCP port (0 to 65535).
	OrigPort pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Integer value for the protocol type (0 - 255).
	Protocol pulumi.IntPtrInput
	// Source interface name from available interfaces. The structure of `srcintf` block is documented below.
	Srcintfs FirewallCentralSnatMapSrcintfArrayInput
	// Enable/disable the active status of this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// IPv4/IPv6 source NAT. Valid values: `ipv4`, `ipv6`.
	Type pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallCentralSnatMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallCentralSnatMapState)(nil)).Elem()
}

type firewallCentralSnatMapArgs struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// IPv6 Destination address. The structure of `dstAddr6` block is documented below.
	DstAddr6s []FirewallCentralSnatMapDstAddr6 `pulumi:"dstAddr6s"`
	// Destination address name from available addresses. The structure of `dstAddr` block is documented below.
	DstAddrs []FirewallCentralSnatMapDstAddr `pulumi:"dstAddrs"`
	// Destination interface name from available interfaces. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallCentralSnatMapDstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable source NAT. Valid values: `disable`, `enable`.
	Nat string `pulumi:"nat"`
	// Enable/disable NAT46. Valid values: `enable`, `disable`.
	Nat46 *string `pulumi:"nat46"`
	// Enable/disable NAT64. Valid values: `enable`, `disable`.
	Nat64 *string `pulumi:"nat64"`
	// IPv6 pools to be used for source NAT. The structure of `natIppool6` block is documented below.
	NatIppool6s []FirewallCentralSnatMapNatIppool6 `pulumi:"natIppool6s"`
	// Name of the IP pools to be used to translate addresses from available IP Pools. The structure of `natIppool` block is documented below.
	NatIppools []FirewallCentralSnatMapNatIppool `pulumi:"natIppools"`
	// Translated port or port range (0 to 65535).
	NatPort *string `pulumi:"natPort"`
	// IPv6 Original address. The structure of `origAddr6` block is documented below.
	OrigAddr6s []FirewallCentralSnatMapOrigAddr6 `pulumi:"origAddr6s"`
	// Original address. The structure of `origAddr` block is documented below.
	OrigAddrs []FirewallCentralSnatMapOrigAddr `pulumi:"origAddrs"`
	// Original TCP port (0 to 65535).
	OrigPort string `pulumi:"origPort"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Integer value for the protocol type (0 - 255).
	Protocol int `pulumi:"protocol"`
	// Source interface name from available interfaces. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallCentralSnatMapSrcintf `pulumi:"srcintfs"`
	// Enable/disable the active status of this policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// IPv4/IPv6 source NAT. Valid values: `ipv4`, `ipv6`.
	Type *string `pulumi:"type"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallCentralSnatMap resource.
type FirewallCentralSnatMapArgs struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// IPv6 Destination address. The structure of `dstAddr6` block is documented below.
	DstAddr6s FirewallCentralSnatMapDstAddr6ArrayInput
	// Destination address name from available addresses. The structure of `dstAddr` block is documented below.
	DstAddrs FirewallCentralSnatMapDstAddrArrayInput
	// Destination interface name from available interfaces. The structure of `dstintf` block is documented below.
	Dstintfs FirewallCentralSnatMapDstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable source NAT. Valid values: `disable`, `enable`.
	Nat pulumi.StringInput
	// Enable/disable NAT46. Valid values: `enable`, `disable`.
	Nat46 pulumi.StringPtrInput
	// Enable/disable NAT64. Valid values: `enable`, `disable`.
	Nat64 pulumi.StringPtrInput
	// IPv6 pools to be used for source NAT. The structure of `natIppool6` block is documented below.
	NatIppool6s FirewallCentralSnatMapNatIppool6ArrayInput
	// Name of the IP pools to be used to translate addresses from available IP Pools. The structure of `natIppool` block is documented below.
	NatIppools FirewallCentralSnatMapNatIppoolArrayInput
	// Translated port or port range (0 to 65535).
	NatPort pulumi.StringPtrInput
	// IPv6 Original address. The structure of `origAddr6` block is documented below.
	OrigAddr6s FirewallCentralSnatMapOrigAddr6ArrayInput
	// Original address. The structure of `origAddr` block is documented below.
	OrigAddrs FirewallCentralSnatMapOrigAddrArrayInput
	// Original TCP port (0 to 65535).
	OrigPort pulumi.StringInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Integer value for the protocol type (0 - 255).
	Protocol pulumi.IntInput
	// Source interface name from available interfaces. The structure of `srcintf` block is documented below.
	Srcintfs FirewallCentralSnatMapSrcintfArrayInput
	// Enable/disable the active status of this policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// IPv4/IPv6 source NAT. Valid values: `ipv4`, `ipv6`.
	Type pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallCentralSnatMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallCentralSnatMapArgs)(nil)).Elem()
}

type FirewallCentralSnatMapInput interface {
	pulumi.Input

	ToFirewallCentralSnatMapOutput() FirewallCentralSnatMapOutput
	ToFirewallCentralSnatMapOutputWithContext(ctx context.Context) FirewallCentralSnatMapOutput
}

func (*FirewallCentralSnatMap) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallCentralSnatMap)(nil)).Elem()
}

func (i *FirewallCentralSnatMap) ToFirewallCentralSnatMapOutput() FirewallCentralSnatMapOutput {
	return i.ToFirewallCentralSnatMapOutputWithContext(context.Background())
}

func (i *FirewallCentralSnatMap) ToFirewallCentralSnatMapOutputWithContext(ctx context.Context) FirewallCentralSnatMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralSnatMapOutput)
}

// FirewallCentralSnatMapArrayInput is an input type that accepts FirewallCentralSnatMapArray and FirewallCentralSnatMapArrayOutput values.
// You can construct a concrete instance of `FirewallCentralSnatMapArrayInput` via:
//
//          FirewallCentralSnatMapArray{ FirewallCentralSnatMapArgs{...} }
type FirewallCentralSnatMapArrayInput interface {
	pulumi.Input

	ToFirewallCentralSnatMapArrayOutput() FirewallCentralSnatMapArrayOutput
	ToFirewallCentralSnatMapArrayOutputWithContext(context.Context) FirewallCentralSnatMapArrayOutput
}

type FirewallCentralSnatMapArray []FirewallCentralSnatMapInput

func (FirewallCentralSnatMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallCentralSnatMap)(nil)).Elem()
}

func (i FirewallCentralSnatMapArray) ToFirewallCentralSnatMapArrayOutput() FirewallCentralSnatMapArrayOutput {
	return i.ToFirewallCentralSnatMapArrayOutputWithContext(context.Background())
}

func (i FirewallCentralSnatMapArray) ToFirewallCentralSnatMapArrayOutputWithContext(ctx context.Context) FirewallCentralSnatMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralSnatMapArrayOutput)
}

// FirewallCentralSnatMapMapInput is an input type that accepts FirewallCentralSnatMapMap and FirewallCentralSnatMapMapOutput values.
// You can construct a concrete instance of `FirewallCentralSnatMapMapInput` via:
//
//          FirewallCentralSnatMapMap{ "key": FirewallCentralSnatMapArgs{...} }
type FirewallCentralSnatMapMapInput interface {
	pulumi.Input

	ToFirewallCentralSnatMapMapOutput() FirewallCentralSnatMapMapOutput
	ToFirewallCentralSnatMapMapOutputWithContext(context.Context) FirewallCentralSnatMapMapOutput
}

type FirewallCentralSnatMapMap map[string]FirewallCentralSnatMapInput

func (FirewallCentralSnatMapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallCentralSnatMap)(nil)).Elem()
}

func (i FirewallCentralSnatMapMap) ToFirewallCentralSnatMapMapOutput() FirewallCentralSnatMapMapOutput {
	return i.ToFirewallCentralSnatMapMapOutputWithContext(context.Background())
}

func (i FirewallCentralSnatMapMap) ToFirewallCentralSnatMapMapOutputWithContext(ctx context.Context) FirewallCentralSnatMapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralSnatMapMapOutput)
}

type FirewallCentralSnatMapOutput struct{ *pulumi.OutputState }

func (FirewallCentralSnatMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallCentralSnatMap)(nil)).Elem()
}

func (o FirewallCentralSnatMapOutput) ToFirewallCentralSnatMapOutput() FirewallCentralSnatMapOutput {
	return o
}

func (o FirewallCentralSnatMapOutput) ToFirewallCentralSnatMapOutputWithContext(ctx context.Context) FirewallCentralSnatMapOutput {
	return o
}

type FirewallCentralSnatMapArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralSnatMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallCentralSnatMap)(nil)).Elem()
}

func (o FirewallCentralSnatMapArrayOutput) ToFirewallCentralSnatMapArrayOutput() FirewallCentralSnatMapArrayOutput {
	return o
}

func (o FirewallCentralSnatMapArrayOutput) ToFirewallCentralSnatMapArrayOutputWithContext(ctx context.Context) FirewallCentralSnatMapArrayOutput {
	return o
}

func (o FirewallCentralSnatMapArrayOutput) Index(i pulumi.IntInput) FirewallCentralSnatMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallCentralSnatMap {
		return vs[0].([]*FirewallCentralSnatMap)[vs[1].(int)]
	}).(FirewallCentralSnatMapOutput)
}

type FirewallCentralSnatMapMapOutput struct{ *pulumi.OutputState }

func (FirewallCentralSnatMapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallCentralSnatMap)(nil)).Elem()
}

func (o FirewallCentralSnatMapMapOutput) ToFirewallCentralSnatMapMapOutput() FirewallCentralSnatMapMapOutput {
	return o
}

func (o FirewallCentralSnatMapMapOutput) ToFirewallCentralSnatMapMapOutputWithContext(ctx context.Context) FirewallCentralSnatMapMapOutput {
	return o
}

func (o FirewallCentralSnatMapMapOutput) MapIndex(k pulumi.StringInput) FirewallCentralSnatMapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallCentralSnatMap {
		return vs[0].(map[string]*FirewallCentralSnatMap)[vs[1].(string)]
	}).(FirewallCentralSnatMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralSnatMapInput)(nil)).Elem(), &FirewallCentralSnatMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralSnatMapArrayInput)(nil)).Elem(), FirewallCentralSnatMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralSnatMapMapInput)(nil)).Elem(), FirewallCentralSnatMapMap{})
	pulumi.RegisterOutputType(FirewallCentralSnatMapOutput{})
	pulumi.RegisterOutputType(FirewallCentralSnatMapArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralSnatMapMapOutput{})
}
