// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouterOspf struct {
	pulumi.CustomResourceState

	AbrType                       pulumi.StringOutput                    `pulumi:"abrType"`
	Areas                         RouterOspfAreaArrayOutput              `pulumi:"areas"`
	AutoCostRefBandwidth          pulumi.IntOutput                       `pulumi:"autoCostRefBandwidth"`
	Bfd                           pulumi.StringOutput                    `pulumi:"bfd"`
	DatabaseOverflow              pulumi.StringOutput                    `pulumi:"databaseOverflow"`
	DatabaseOverflowMaxLsas       pulumi.IntOutput                       `pulumi:"databaseOverflowMaxLsas"`
	DatabaseOverflowTimeToRecover pulumi.IntOutput                       `pulumi:"databaseOverflowTimeToRecover"`
	DefaultInformationMetric      pulumi.IntOutput                       `pulumi:"defaultInformationMetric"`
	DefaultInformationMetricType  pulumi.StringOutput                    `pulumi:"defaultInformationMetricType"`
	DefaultInformationOriginate   pulumi.StringOutput                    `pulumi:"defaultInformationOriginate"`
	DefaultInformationRouteMap    pulumi.StringOutput                    `pulumi:"defaultInformationRouteMap"`
	DefaultMetric                 pulumi.IntOutput                       `pulumi:"defaultMetric"`
	Distance                      pulumi.IntOutput                       `pulumi:"distance"`
	DistanceExternal              pulumi.IntOutput                       `pulumi:"distanceExternal"`
	DistanceInterArea             pulumi.IntOutput                       `pulumi:"distanceInterArea"`
	DistanceIntraArea             pulumi.IntOutput                       `pulumi:"distanceIntraArea"`
	DistributeListIn              pulumi.StringOutput                    `pulumi:"distributeListIn"`
	DistributeLists               RouterOspfDistributeListArrayOutput    `pulumi:"distributeLists"`
	DistributeRouteMapIn          pulumi.StringOutput                    `pulumi:"distributeRouteMapIn"`
	DynamicSortSubtable           pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	LogNeighbourChanges           pulumi.StringOutput                    `pulumi:"logNeighbourChanges"`
	Neighbors                     RouterOspfNeighborTypeArrayOutput      `pulumi:"neighbors"`
	Networks                      RouterOspfNetworkTypeArrayOutput       `pulumi:"networks"`
	OspfInterfaces                RouterOspfOspfInterfaceTypeArrayOutput `pulumi:"ospfInterfaces"`
	PassiveInterfaces             RouterOspfPassiveInterfaceArrayOutput  `pulumi:"passiveInterfaces"`
	Redistributes                 RouterOspfRedistributeArrayOutput      `pulumi:"redistributes"`
	RestartMode                   pulumi.StringOutput                    `pulumi:"restartMode"`
	RestartOnTopologyChange       pulumi.StringOutput                    `pulumi:"restartOnTopologyChange"`
	RestartPeriod                 pulumi.IntOutput                       `pulumi:"restartPeriod"`
	Rfc1583Compatible             pulumi.StringOutput                    `pulumi:"rfc1583Compatible"`
	RouterId                      pulumi.StringOutput                    `pulumi:"routerId"`
	SpfTimers                     pulumi.StringOutput                    `pulumi:"spfTimers"`
	SummaryAddresses              RouterOspfSummaryAddressArrayOutput    `pulumi:"summaryAddresses"`
	Vdomparam                     pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewRouterOspf registers a new resource with the given unique name, arguments, and options.
func NewRouterOspf(ctx *pulumi.Context,
	name string, args *RouterOspfArgs, opts ...pulumi.ResourceOption) (*RouterOspf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RouterId == nil {
		return nil, errors.New("invalid value for required argument 'RouterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RouterOspf
	err := ctx.RegisterResource("fortios:index/routerOspf:RouterOspf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterOspf gets an existing RouterOspf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterOspf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterOspfState, opts ...pulumi.ResourceOption) (*RouterOspf, error) {
	var resource RouterOspf
	err := ctx.ReadResource("fortios:index/routerOspf:RouterOspf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterOspf resources.
type routerOspfState struct {
	AbrType                       *string                       `pulumi:"abrType"`
	Areas                         []RouterOspfArea              `pulumi:"areas"`
	AutoCostRefBandwidth          *int                          `pulumi:"autoCostRefBandwidth"`
	Bfd                           *string                       `pulumi:"bfd"`
	DatabaseOverflow              *string                       `pulumi:"databaseOverflow"`
	DatabaseOverflowMaxLsas       *int                          `pulumi:"databaseOverflowMaxLsas"`
	DatabaseOverflowTimeToRecover *int                          `pulumi:"databaseOverflowTimeToRecover"`
	DefaultInformationMetric      *int                          `pulumi:"defaultInformationMetric"`
	DefaultInformationMetricType  *string                       `pulumi:"defaultInformationMetricType"`
	DefaultInformationOriginate   *string                       `pulumi:"defaultInformationOriginate"`
	DefaultInformationRouteMap    *string                       `pulumi:"defaultInformationRouteMap"`
	DefaultMetric                 *int                          `pulumi:"defaultMetric"`
	Distance                      *int                          `pulumi:"distance"`
	DistanceExternal              *int                          `pulumi:"distanceExternal"`
	DistanceInterArea             *int                          `pulumi:"distanceInterArea"`
	DistanceIntraArea             *int                          `pulumi:"distanceIntraArea"`
	DistributeListIn              *string                       `pulumi:"distributeListIn"`
	DistributeLists               []RouterOspfDistributeList    `pulumi:"distributeLists"`
	DistributeRouteMapIn          *string                       `pulumi:"distributeRouteMapIn"`
	DynamicSortSubtable           *string                       `pulumi:"dynamicSortSubtable"`
	LogNeighbourChanges           *string                       `pulumi:"logNeighbourChanges"`
	Neighbors                     []RouterOspfNeighborType      `pulumi:"neighbors"`
	Networks                      []RouterOspfNetworkType       `pulumi:"networks"`
	OspfInterfaces                []RouterOspfOspfInterfaceType `pulumi:"ospfInterfaces"`
	PassiveInterfaces             []RouterOspfPassiveInterface  `pulumi:"passiveInterfaces"`
	Redistributes                 []RouterOspfRedistribute      `pulumi:"redistributes"`
	RestartMode                   *string                       `pulumi:"restartMode"`
	RestartOnTopologyChange       *string                       `pulumi:"restartOnTopologyChange"`
	RestartPeriod                 *int                          `pulumi:"restartPeriod"`
	Rfc1583Compatible             *string                       `pulumi:"rfc1583Compatible"`
	RouterId                      *string                       `pulumi:"routerId"`
	SpfTimers                     *string                       `pulumi:"spfTimers"`
	SummaryAddresses              []RouterOspfSummaryAddress    `pulumi:"summaryAddresses"`
	Vdomparam                     *string                       `pulumi:"vdomparam"`
}

type RouterOspfState struct {
	AbrType                       pulumi.StringPtrInput
	Areas                         RouterOspfAreaArrayInput
	AutoCostRefBandwidth          pulumi.IntPtrInput
	Bfd                           pulumi.StringPtrInput
	DatabaseOverflow              pulumi.StringPtrInput
	DatabaseOverflowMaxLsas       pulumi.IntPtrInput
	DatabaseOverflowTimeToRecover pulumi.IntPtrInput
	DefaultInformationMetric      pulumi.IntPtrInput
	DefaultInformationMetricType  pulumi.StringPtrInput
	DefaultInformationOriginate   pulumi.StringPtrInput
	DefaultInformationRouteMap    pulumi.StringPtrInput
	DefaultMetric                 pulumi.IntPtrInput
	Distance                      pulumi.IntPtrInput
	DistanceExternal              pulumi.IntPtrInput
	DistanceInterArea             pulumi.IntPtrInput
	DistanceIntraArea             pulumi.IntPtrInput
	DistributeListIn              pulumi.StringPtrInput
	DistributeLists               RouterOspfDistributeListArrayInput
	DistributeRouteMapIn          pulumi.StringPtrInput
	DynamicSortSubtable           pulumi.StringPtrInput
	LogNeighbourChanges           pulumi.StringPtrInput
	Neighbors                     RouterOspfNeighborTypeArrayInput
	Networks                      RouterOspfNetworkTypeArrayInput
	OspfInterfaces                RouterOspfOspfInterfaceTypeArrayInput
	PassiveInterfaces             RouterOspfPassiveInterfaceArrayInput
	Redistributes                 RouterOspfRedistributeArrayInput
	RestartMode                   pulumi.StringPtrInput
	RestartOnTopologyChange       pulumi.StringPtrInput
	RestartPeriod                 pulumi.IntPtrInput
	Rfc1583Compatible             pulumi.StringPtrInput
	RouterId                      pulumi.StringPtrInput
	SpfTimers                     pulumi.StringPtrInput
	SummaryAddresses              RouterOspfSummaryAddressArrayInput
	Vdomparam                     pulumi.StringPtrInput
}

func (RouterOspfState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerOspfState)(nil)).Elem()
}

type routerOspfArgs struct {
	AbrType                       *string                       `pulumi:"abrType"`
	Areas                         []RouterOspfArea              `pulumi:"areas"`
	AutoCostRefBandwidth          *int                          `pulumi:"autoCostRefBandwidth"`
	Bfd                           *string                       `pulumi:"bfd"`
	DatabaseOverflow              *string                       `pulumi:"databaseOverflow"`
	DatabaseOverflowMaxLsas       *int                          `pulumi:"databaseOverflowMaxLsas"`
	DatabaseOverflowTimeToRecover *int                          `pulumi:"databaseOverflowTimeToRecover"`
	DefaultInformationMetric      *int                          `pulumi:"defaultInformationMetric"`
	DefaultInformationMetricType  *string                       `pulumi:"defaultInformationMetricType"`
	DefaultInformationOriginate   *string                       `pulumi:"defaultInformationOriginate"`
	DefaultInformationRouteMap    *string                       `pulumi:"defaultInformationRouteMap"`
	DefaultMetric                 *int                          `pulumi:"defaultMetric"`
	Distance                      *int                          `pulumi:"distance"`
	DistanceExternal              *int                          `pulumi:"distanceExternal"`
	DistanceInterArea             *int                          `pulumi:"distanceInterArea"`
	DistanceIntraArea             *int                          `pulumi:"distanceIntraArea"`
	DistributeListIn              *string                       `pulumi:"distributeListIn"`
	DistributeLists               []RouterOspfDistributeList    `pulumi:"distributeLists"`
	DistributeRouteMapIn          *string                       `pulumi:"distributeRouteMapIn"`
	DynamicSortSubtable           *string                       `pulumi:"dynamicSortSubtable"`
	LogNeighbourChanges           *string                       `pulumi:"logNeighbourChanges"`
	Neighbors                     []RouterOspfNeighborType      `pulumi:"neighbors"`
	Networks                      []RouterOspfNetworkType       `pulumi:"networks"`
	OspfInterfaces                []RouterOspfOspfInterfaceType `pulumi:"ospfInterfaces"`
	PassiveInterfaces             []RouterOspfPassiveInterface  `pulumi:"passiveInterfaces"`
	Redistributes                 []RouterOspfRedistribute      `pulumi:"redistributes"`
	RestartMode                   *string                       `pulumi:"restartMode"`
	RestartOnTopologyChange       *string                       `pulumi:"restartOnTopologyChange"`
	RestartPeriod                 *int                          `pulumi:"restartPeriod"`
	Rfc1583Compatible             *string                       `pulumi:"rfc1583Compatible"`
	RouterId                      string                        `pulumi:"routerId"`
	SpfTimers                     *string                       `pulumi:"spfTimers"`
	SummaryAddresses              []RouterOspfSummaryAddress    `pulumi:"summaryAddresses"`
	Vdomparam                     *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterOspf resource.
type RouterOspfArgs struct {
	AbrType                       pulumi.StringPtrInput
	Areas                         RouterOspfAreaArrayInput
	AutoCostRefBandwidth          pulumi.IntPtrInput
	Bfd                           pulumi.StringPtrInput
	DatabaseOverflow              pulumi.StringPtrInput
	DatabaseOverflowMaxLsas       pulumi.IntPtrInput
	DatabaseOverflowTimeToRecover pulumi.IntPtrInput
	DefaultInformationMetric      pulumi.IntPtrInput
	DefaultInformationMetricType  pulumi.StringPtrInput
	DefaultInformationOriginate   pulumi.StringPtrInput
	DefaultInformationRouteMap    pulumi.StringPtrInput
	DefaultMetric                 pulumi.IntPtrInput
	Distance                      pulumi.IntPtrInput
	DistanceExternal              pulumi.IntPtrInput
	DistanceInterArea             pulumi.IntPtrInput
	DistanceIntraArea             pulumi.IntPtrInput
	DistributeListIn              pulumi.StringPtrInput
	DistributeLists               RouterOspfDistributeListArrayInput
	DistributeRouteMapIn          pulumi.StringPtrInput
	DynamicSortSubtable           pulumi.StringPtrInput
	LogNeighbourChanges           pulumi.StringPtrInput
	Neighbors                     RouterOspfNeighborTypeArrayInput
	Networks                      RouterOspfNetworkTypeArrayInput
	OspfInterfaces                RouterOspfOspfInterfaceTypeArrayInput
	PassiveInterfaces             RouterOspfPassiveInterfaceArrayInput
	Redistributes                 RouterOspfRedistributeArrayInput
	RestartMode                   pulumi.StringPtrInput
	RestartOnTopologyChange       pulumi.StringPtrInput
	RestartPeriod                 pulumi.IntPtrInput
	Rfc1583Compatible             pulumi.StringPtrInput
	RouterId                      pulumi.StringInput
	SpfTimers                     pulumi.StringPtrInput
	SummaryAddresses              RouterOspfSummaryAddressArrayInput
	Vdomparam                     pulumi.StringPtrInput
}

func (RouterOspfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerOspfArgs)(nil)).Elem()
}

type RouterOspfInput interface {
	pulumi.Input

	ToRouterOspfOutput() RouterOspfOutput
	ToRouterOspfOutputWithContext(ctx context.Context) RouterOspfOutput
}

func (*RouterOspf) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterOspf)(nil)).Elem()
}

func (i *RouterOspf) ToRouterOspfOutput() RouterOspfOutput {
	return i.ToRouterOspfOutputWithContext(context.Background())
}

func (i *RouterOspf) ToRouterOspfOutputWithContext(ctx context.Context) RouterOspfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOutput)
}

// RouterOspfArrayInput is an input type that accepts RouterOspfArray and RouterOspfArrayOutput values.
// You can construct a concrete instance of `RouterOspfArrayInput` via:
//
//	RouterOspfArray{ RouterOspfArgs{...} }
type RouterOspfArrayInput interface {
	pulumi.Input

	ToRouterOspfArrayOutput() RouterOspfArrayOutput
	ToRouterOspfArrayOutputWithContext(context.Context) RouterOspfArrayOutput
}

type RouterOspfArray []RouterOspfInput

func (RouterOspfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterOspf)(nil)).Elem()
}

func (i RouterOspfArray) ToRouterOspfArrayOutput() RouterOspfArrayOutput {
	return i.ToRouterOspfArrayOutputWithContext(context.Background())
}

func (i RouterOspfArray) ToRouterOspfArrayOutputWithContext(ctx context.Context) RouterOspfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfArrayOutput)
}

// RouterOspfMapInput is an input type that accepts RouterOspfMap and RouterOspfMapOutput values.
// You can construct a concrete instance of `RouterOspfMapInput` via:
//
//	RouterOspfMap{ "key": RouterOspfArgs{...} }
type RouterOspfMapInput interface {
	pulumi.Input

	ToRouterOspfMapOutput() RouterOspfMapOutput
	ToRouterOspfMapOutputWithContext(context.Context) RouterOspfMapOutput
}

type RouterOspfMap map[string]RouterOspfInput

func (RouterOspfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterOspf)(nil)).Elem()
}

func (i RouterOspfMap) ToRouterOspfMapOutput() RouterOspfMapOutput {
	return i.ToRouterOspfMapOutputWithContext(context.Background())
}

func (i RouterOspfMap) ToRouterOspfMapOutputWithContext(ctx context.Context) RouterOspfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfMapOutput)
}

type RouterOspfOutput struct{ *pulumi.OutputState }

func (RouterOspfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterOspf)(nil)).Elem()
}

func (o RouterOspfOutput) ToRouterOspfOutput() RouterOspfOutput {
	return o
}

func (o RouterOspfOutput) ToRouterOspfOutputWithContext(ctx context.Context) RouterOspfOutput {
	return o
}

func (o RouterOspfOutput) AbrType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.AbrType }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) Areas() RouterOspfAreaArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfAreaArrayOutput { return v.Areas }).(RouterOspfAreaArrayOutput)
}

func (o RouterOspfOutput) AutoCostRefBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.AutoCostRefBandwidth }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) Bfd() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.Bfd }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DatabaseOverflow() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DatabaseOverflow }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DatabaseOverflowMaxLsas() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DatabaseOverflowMaxLsas }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DatabaseOverflowTimeToRecover() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DatabaseOverflowTimeToRecover }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DefaultInformationMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DefaultInformationMetric }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DefaultInformationMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DefaultInformationMetricType }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DefaultInformationOriginate() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DefaultInformationOriginate }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DefaultInformationRouteMap() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DefaultInformationRouteMap }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DefaultMetric }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.Distance }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DistanceExternal() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DistanceExternal }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DistanceInterArea() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DistanceInterArea }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DistanceIntraArea() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.DistanceIntraArea }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) DistributeListIn() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DistributeListIn }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DistributeLists() RouterOspfDistributeListArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfDistributeListArrayOutput { return v.DistributeLists }).(RouterOspfDistributeListArrayOutput)
}

func (o RouterOspfOutput) DistributeRouteMapIn() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.DistributeRouteMapIn }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOutput) LogNeighbourChanges() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.LogNeighbourChanges }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) Neighbors() RouterOspfNeighborTypeArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfNeighborTypeArrayOutput { return v.Neighbors }).(RouterOspfNeighborTypeArrayOutput)
}

func (o RouterOspfOutput) Networks() RouterOspfNetworkTypeArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfNetworkTypeArrayOutput { return v.Networks }).(RouterOspfNetworkTypeArrayOutput)
}

func (o RouterOspfOutput) OspfInterfaces() RouterOspfOspfInterfaceTypeArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfOspfInterfaceTypeArrayOutput { return v.OspfInterfaces }).(RouterOspfOspfInterfaceTypeArrayOutput)
}

func (o RouterOspfOutput) PassiveInterfaces() RouterOspfPassiveInterfaceArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfPassiveInterfaceArrayOutput { return v.PassiveInterfaces }).(RouterOspfPassiveInterfaceArrayOutput)
}

func (o RouterOspfOutput) Redistributes() RouterOspfRedistributeArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfRedistributeArrayOutput { return v.Redistributes }).(RouterOspfRedistributeArrayOutput)
}

func (o RouterOspfOutput) RestartMode() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.RestartMode }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) RestartOnTopologyChange() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.RestartOnTopologyChange }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) RestartPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.IntOutput { return v.RestartPeriod }).(pulumi.IntOutput)
}

func (o RouterOspfOutput) Rfc1583Compatible() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.Rfc1583Compatible }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.RouterId }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) SpfTimers() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringOutput { return v.SpfTimers }).(pulumi.StringOutput)
}

func (o RouterOspfOutput) SummaryAddresses() RouterOspfSummaryAddressArrayOutput {
	return o.ApplyT(func(v *RouterOspf) RouterOspfSummaryAddressArrayOutput { return v.SummaryAddresses }).(RouterOspfSummaryAddressArrayOutput)
}

func (o RouterOspfOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterOspf) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RouterOspfArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterOspf)(nil)).Elem()
}

func (o RouterOspfArrayOutput) ToRouterOspfArrayOutput() RouterOspfArrayOutput {
	return o
}

func (o RouterOspfArrayOutput) ToRouterOspfArrayOutputWithContext(ctx context.Context) RouterOspfArrayOutput {
	return o
}

func (o RouterOspfArrayOutput) Index(i pulumi.IntInput) RouterOspfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterOspf {
		return vs[0].([]*RouterOspf)[vs[1].(int)]
	}).(RouterOspfOutput)
}

type RouterOspfMapOutput struct{ *pulumi.OutputState }

func (RouterOspfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterOspf)(nil)).Elem()
}

func (o RouterOspfMapOutput) ToRouterOspfMapOutput() RouterOspfMapOutput {
	return o
}

func (o RouterOspfMapOutput) ToRouterOspfMapOutputWithContext(ctx context.Context) RouterOspfMapOutput {
	return o
}

func (o RouterOspfMapOutput) MapIndex(k pulumi.StringInput) RouterOspfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterOspf {
		return vs[0].(map[string]*RouterOspf)[vs[1].(string)]
	}).(RouterOspfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfInput)(nil)).Elem(), &RouterOspf{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfArrayInput)(nil)).Elem(), RouterOspfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfMapInput)(nil)).Elem(), RouterOspfMap{})
	pulumi.RegisterOutputType(RouterOspfOutput{})
	pulumi.RegisterOutputType(RouterOspfArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfMapOutput{})
}
