// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch flow tracking and export via ipfix/netflow. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// SwitchController FlowTracking can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking labelname SwitchControllerFlowTracking
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking labelname SwitchControllerFlowTracking
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerFlowTracking struct {
	pulumi.CustomResourceState

	// Configure aggregates in which all traffic sessions matching the IP Address will be grouped into the same flow. The structure of `aggregates` block is documented below.
	Aggregates SwitchControllerFlowTrackingAggregateArrayOutput `pulumi:"aggregates"`
	// Configure collector ip address.
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// Configure collector port number(0-65535, default=0).
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Configure flow tracking protocol. Valid values: `netflow1`, `netflow5`, `netflow9`, `ipfix`.
	Format pulumi.StringOutput `pulumi:"format"`
	// Configure flow tracking level. Valid values: `vlan`, `ip`, `port`, `proto`, `mac`.
	Level pulumi.StringOutput `pulumi:"level"`
	// Configure flow max export packet size (512-9216, default=512 bytes).
	MaxExportPktSize pulumi.IntOutput `pulumi:"maxExportPktSize"`
	// Configure sample mode for the flow tracking. Valid values: `local`, `perimeter`, `device-ingress`.
	SampleMode pulumi.StringOutput `pulumi:"sampleMode"`
	// Configure sample rate for the perimeter and device-ingress sampling(0 - 99999).
	SampleRate pulumi.IntOutput `pulumi:"sampleRate"`
	// Configure flow session general timeout (60-604800, default=3600 seconds).
	TimeoutGeneral pulumi.IntOutput `pulumi:"timeoutGeneral"`
	// Configure flow session ICMP timeout (60-604800, default=300 seconds).
	TimeoutIcmp pulumi.IntOutput `pulumi:"timeoutIcmp"`
	// Configure flow session max timeout (60-604800, default=604800 seconds).
	TimeoutMax pulumi.IntOutput `pulumi:"timeoutMax"`
	// Configure flow session TCP timeout (60-604800, default=3600 seconds).
	TimeoutTcp pulumi.IntOutput `pulumi:"timeoutTcp"`
	// Configure flow session TCP FIN timeout (60-604800, default=300 seconds).
	TimeoutTcpFin pulumi.IntOutput `pulumi:"timeoutTcpFin"`
	// Configure flow session TCP RST timeout (60-604800, default=120 seconds).
	TimeoutTcpRst pulumi.IntOutput `pulumi:"timeoutTcpRst"`
	// Configure flow session UDP timeout (60-604800, default=300 seconds).
	TimeoutUdp pulumi.IntOutput `pulumi:"timeoutUdp"`
	// Configure L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport pulumi.StringOutput `pulumi:"transport"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerFlowTracking registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerFlowTracking(ctx *pulumi.Context,
	name string, args *SwitchControllerFlowTrackingArgs, opts ...pulumi.ResourceOption) (*SwitchControllerFlowTracking, error) {
	if args == nil {
		args = &SwitchControllerFlowTrackingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerFlowTracking
	err := ctx.RegisterResource("fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerFlowTracking gets an existing SwitchControllerFlowTracking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerFlowTracking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerFlowTrackingState, opts ...pulumi.ResourceOption) (*SwitchControllerFlowTracking, error) {
	var resource SwitchControllerFlowTracking
	err := ctx.ReadResource("fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerFlowTracking resources.
type switchControllerFlowTrackingState struct {
	// Configure aggregates in which all traffic sessions matching the IP Address will be grouped into the same flow. The structure of `aggregates` block is documented below.
	Aggregates []SwitchControllerFlowTrackingAggregate `pulumi:"aggregates"`
	// Configure collector ip address.
	CollectorIp *string `pulumi:"collectorIp"`
	// Configure collector port number(0-65535, default=0).
	CollectorPort *int `pulumi:"collectorPort"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure flow tracking protocol. Valid values: `netflow1`, `netflow5`, `netflow9`, `ipfix`.
	Format *string `pulumi:"format"`
	// Configure flow tracking level. Valid values: `vlan`, `ip`, `port`, `proto`, `mac`.
	Level *string `pulumi:"level"`
	// Configure flow max export packet size (512-9216, default=512 bytes).
	MaxExportPktSize *int `pulumi:"maxExportPktSize"`
	// Configure sample mode for the flow tracking. Valid values: `local`, `perimeter`, `device-ingress`.
	SampleMode *string `pulumi:"sampleMode"`
	// Configure sample rate for the perimeter and device-ingress sampling(0 - 99999).
	SampleRate *int `pulumi:"sampleRate"`
	// Configure flow session general timeout (60-604800, default=3600 seconds).
	TimeoutGeneral *int `pulumi:"timeoutGeneral"`
	// Configure flow session ICMP timeout (60-604800, default=300 seconds).
	TimeoutIcmp *int `pulumi:"timeoutIcmp"`
	// Configure flow session max timeout (60-604800, default=604800 seconds).
	TimeoutMax *int `pulumi:"timeoutMax"`
	// Configure flow session TCP timeout (60-604800, default=3600 seconds).
	TimeoutTcp *int `pulumi:"timeoutTcp"`
	// Configure flow session TCP FIN timeout (60-604800, default=300 seconds).
	TimeoutTcpFin *int `pulumi:"timeoutTcpFin"`
	// Configure flow session TCP RST timeout (60-604800, default=120 seconds).
	TimeoutTcpRst *int `pulumi:"timeoutTcpRst"`
	// Configure flow session UDP timeout (60-604800, default=300 seconds).
	TimeoutUdp *int `pulumi:"timeoutUdp"`
	// Configure L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport *string `pulumi:"transport"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchControllerFlowTrackingState struct {
	// Configure aggregates in which all traffic sessions matching the IP Address will be grouped into the same flow. The structure of `aggregates` block is documented below.
	Aggregates SwitchControllerFlowTrackingAggregateArrayInput
	// Configure collector ip address.
	CollectorIp pulumi.StringPtrInput
	// Configure collector port number(0-65535, default=0).
	CollectorPort pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure flow tracking protocol. Valid values: `netflow1`, `netflow5`, `netflow9`, `ipfix`.
	Format pulumi.StringPtrInput
	// Configure flow tracking level. Valid values: `vlan`, `ip`, `port`, `proto`, `mac`.
	Level pulumi.StringPtrInput
	// Configure flow max export packet size (512-9216, default=512 bytes).
	MaxExportPktSize pulumi.IntPtrInput
	// Configure sample mode for the flow tracking. Valid values: `local`, `perimeter`, `device-ingress`.
	SampleMode pulumi.StringPtrInput
	// Configure sample rate for the perimeter and device-ingress sampling(0 - 99999).
	SampleRate pulumi.IntPtrInput
	// Configure flow session general timeout (60-604800, default=3600 seconds).
	TimeoutGeneral pulumi.IntPtrInput
	// Configure flow session ICMP timeout (60-604800, default=300 seconds).
	TimeoutIcmp pulumi.IntPtrInput
	// Configure flow session max timeout (60-604800, default=604800 seconds).
	TimeoutMax pulumi.IntPtrInput
	// Configure flow session TCP timeout (60-604800, default=3600 seconds).
	TimeoutTcp pulumi.IntPtrInput
	// Configure flow session TCP FIN timeout (60-604800, default=300 seconds).
	TimeoutTcpFin pulumi.IntPtrInput
	// Configure flow session TCP RST timeout (60-604800, default=120 seconds).
	TimeoutTcpRst pulumi.IntPtrInput
	// Configure flow session UDP timeout (60-604800, default=300 seconds).
	TimeoutUdp pulumi.IntPtrInput
	// Configure L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerFlowTrackingState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFlowTrackingState)(nil)).Elem()
}

type switchControllerFlowTrackingArgs struct {
	// Configure aggregates in which all traffic sessions matching the IP Address will be grouped into the same flow. The structure of `aggregates` block is documented below.
	Aggregates []SwitchControllerFlowTrackingAggregate `pulumi:"aggregates"`
	// Configure collector ip address.
	CollectorIp *string `pulumi:"collectorIp"`
	// Configure collector port number(0-65535, default=0).
	CollectorPort *int `pulumi:"collectorPort"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Configure flow tracking protocol. Valid values: `netflow1`, `netflow5`, `netflow9`, `ipfix`.
	Format *string `pulumi:"format"`
	// Configure flow tracking level. Valid values: `vlan`, `ip`, `port`, `proto`, `mac`.
	Level *string `pulumi:"level"`
	// Configure flow max export packet size (512-9216, default=512 bytes).
	MaxExportPktSize *int `pulumi:"maxExportPktSize"`
	// Configure sample mode for the flow tracking. Valid values: `local`, `perimeter`, `device-ingress`.
	SampleMode *string `pulumi:"sampleMode"`
	// Configure sample rate for the perimeter and device-ingress sampling(0 - 99999).
	SampleRate *int `pulumi:"sampleRate"`
	// Configure flow session general timeout (60-604800, default=3600 seconds).
	TimeoutGeneral *int `pulumi:"timeoutGeneral"`
	// Configure flow session ICMP timeout (60-604800, default=300 seconds).
	TimeoutIcmp *int `pulumi:"timeoutIcmp"`
	// Configure flow session max timeout (60-604800, default=604800 seconds).
	TimeoutMax *int `pulumi:"timeoutMax"`
	// Configure flow session TCP timeout (60-604800, default=3600 seconds).
	TimeoutTcp *int `pulumi:"timeoutTcp"`
	// Configure flow session TCP FIN timeout (60-604800, default=300 seconds).
	TimeoutTcpFin *int `pulumi:"timeoutTcpFin"`
	// Configure flow session TCP RST timeout (60-604800, default=120 seconds).
	TimeoutTcpRst *int `pulumi:"timeoutTcpRst"`
	// Configure flow session UDP timeout (60-604800, default=300 seconds).
	TimeoutUdp *int `pulumi:"timeoutUdp"`
	// Configure L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport *string `pulumi:"transport"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerFlowTracking resource.
type SwitchControllerFlowTrackingArgs struct {
	// Configure aggregates in which all traffic sessions matching the IP Address will be grouped into the same flow. The structure of `aggregates` block is documented below.
	Aggregates SwitchControllerFlowTrackingAggregateArrayInput
	// Configure collector ip address.
	CollectorIp pulumi.StringPtrInput
	// Configure collector port number(0-65535, default=0).
	CollectorPort pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Configure flow tracking protocol. Valid values: `netflow1`, `netflow5`, `netflow9`, `ipfix`.
	Format pulumi.StringPtrInput
	// Configure flow tracking level. Valid values: `vlan`, `ip`, `port`, `proto`, `mac`.
	Level pulumi.StringPtrInput
	// Configure flow max export packet size (512-9216, default=512 bytes).
	MaxExportPktSize pulumi.IntPtrInput
	// Configure sample mode for the flow tracking. Valid values: `local`, `perimeter`, `device-ingress`.
	SampleMode pulumi.StringPtrInput
	// Configure sample rate for the perimeter and device-ingress sampling(0 - 99999).
	SampleRate pulumi.IntPtrInput
	// Configure flow session general timeout (60-604800, default=3600 seconds).
	TimeoutGeneral pulumi.IntPtrInput
	// Configure flow session ICMP timeout (60-604800, default=300 seconds).
	TimeoutIcmp pulumi.IntPtrInput
	// Configure flow session max timeout (60-604800, default=604800 seconds).
	TimeoutMax pulumi.IntPtrInput
	// Configure flow session TCP timeout (60-604800, default=3600 seconds).
	TimeoutTcp pulumi.IntPtrInput
	// Configure flow session TCP FIN timeout (60-604800, default=300 seconds).
	TimeoutTcpFin pulumi.IntPtrInput
	// Configure flow session TCP RST timeout (60-604800, default=120 seconds).
	TimeoutTcpRst pulumi.IntPtrInput
	// Configure flow session UDP timeout (60-604800, default=300 seconds).
	TimeoutUdp pulumi.IntPtrInput
	// Configure L4 transport protocol for exporting packets. Valid values: `udp`, `tcp`, `sctp`.
	Transport pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerFlowTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFlowTrackingArgs)(nil)).Elem()
}

type SwitchControllerFlowTrackingInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput
	ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput
}

func (*SwitchControllerFlowTracking) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFlowTracking)(nil)).Elem()
}

func (i *SwitchControllerFlowTracking) ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput {
	return i.ToSwitchControllerFlowTrackingOutputWithContext(context.Background())
}

func (i *SwitchControllerFlowTracking) ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingOutput)
}

// SwitchControllerFlowTrackingArrayInput is an input type that accepts SwitchControllerFlowTrackingArray and SwitchControllerFlowTrackingArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingArrayInput` via:
//
//          SwitchControllerFlowTrackingArray{ SwitchControllerFlowTrackingArgs{...} }
type SwitchControllerFlowTrackingArrayInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput
	ToSwitchControllerFlowTrackingArrayOutputWithContext(context.Context) SwitchControllerFlowTrackingArrayOutput
}

type SwitchControllerFlowTrackingArray []SwitchControllerFlowTrackingInput

func (SwitchControllerFlowTrackingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingArray) ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput {
	return i.ToSwitchControllerFlowTrackingArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingArray) ToSwitchControllerFlowTrackingArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingArrayOutput)
}

// SwitchControllerFlowTrackingMapInput is an input type that accepts SwitchControllerFlowTrackingMap and SwitchControllerFlowTrackingMapOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingMapInput` via:
//
//          SwitchControllerFlowTrackingMap{ "key": SwitchControllerFlowTrackingArgs{...} }
type SwitchControllerFlowTrackingMapInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput
	ToSwitchControllerFlowTrackingMapOutputWithContext(context.Context) SwitchControllerFlowTrackingMapOutput
}

type SwitchControllerFlowTrackingMap map[string]SwitchControllerFlowTrackingInput

func (SwitchControllerFlowTrackingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingMap) ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput {
	return i.ToSwitchControllerFlowTrackingMapOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingMap) ToSwitchControllerFlowTrackingMapOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingMapOutput)
}

type SwitchControllerFlowTrackingOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingOutput) ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput {
	return o
}

func (o SwitchControllerFlowTrackingOutput) ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput {
	return o
}

type SwitchControllerFlowTrackingArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingArrayOutput) ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingArrayOutput) ToSwitchControllerFlowTrackingArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingArrayOutput) Index(i pulumi.IntInput) SwitchControllerFlowTrackingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerFlowTracking {
		return vs[0].([]*SwitchControllerFlowTracking)[vs[1].(int)]
	}).(SwitchControllerFlowTrackingOutput)
}

type SwitchControllerFlowTrackingMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingMapOutput) ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput {
	return o
}

func (o SwitchControllerFlowTrackingMapOutput) ToSwitchControllerFlowTrackingMapOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingMapOutput {
	return o
}

func (o SwitchControllerFlowTrackingMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerFlowTrackingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerFlowTracking {
		return vs[0].(map[string]*SwitchControllerFlowTracking)[vs[1].(string)]
	}).(SwitchControllerFlowTrackingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingInput)(nil)).Elem(), &SwitchControllerFlowTracking{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingArrayInput)(nil)).Elem(), SwitchControllerFlowTrackingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingMapInput)(nil)).Elem(), SwitchControllerFlowTrackingMap{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingMapOutput{})
}
