// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerFlowTracking struct {
	pulumi.CustomResourceState

	Aggregates           SwitchControllerFlowTrackingAggregateArrayOutput `pulumi:"aggregates"`
	CollectorIp          pulumi.StringOutput                              `pulumi:"collectorIp"`
	CollectorPort        pulumi.IntOutput                                 `pulumi:"collectorPort"`
	Collectors           SwitchControllerFlowTrackingCollectorArrayOutput `pulumi:"collectors"`
	DynamicSortSubtable  pulumi.StringPtrOutput                           `pulumi:"dynamicSortSubtable"`
	Format               pulumi.StringOutput                              `pulumi:"format"`
	GetAllTables         pulumi.StringPtrOutput                           `pulumi:"getAllTables"`
	Level                pulumi.StringOutput                              `pulumi:"level"`
	MaxExportPktSize     pulumi.IntOutput                                 `pulumi:"maxExportPktSize"`
	SampleMode           pulumi.StringOutput                              `pulumi:"sampleMode"`
	SampleRate           pulumi.IntOutput                                 `pulumi:"sampleRate"`
	TemplateExportPeriod pulumi.IntOutput                                 `pulumi:"templateExportPeriod"`
	TimeoutGeneral       pulumi.IntOutput                                 `pulumi:"timeoutGeneral"`
	TimeoutIcmp          pulumi.IntOutput                                 `pulumi:"timeoutIcmp"`
	TimeoutMax           pulumi.IntOutput                                 `pulumi:"timeoutMax"`
	TimeoutTcp           pulumi.IntOutput                                 `pulumi:"timeoutTcp"`
	TimeoutTcpFin        pulumi.IntOutput                                 `pulumi:"timeoutTcpFin"`
	TimeoutTcpRst        pulumi.IntOutput                                 `pulumi:"timeoutTcpRst"`
	TimeoutUdp           pulumi.IntOutput                                 `pulumi:"timeoutUdp"`
	Transport            pulumi.StringOutput                              `pulumi:"transport"`
	Vdomparam            pulumi.StringPtrOutput                           `pulumi:"vdomparam"`
}

// NewSwitchControllerFlowTracking registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerFlowTracking(ctx *pulumi.Context,
	name string, args *SwitchControllerFlowTrackingArgs, opts ...pulumi.ResourceOption) (*SwitchControllerFlowTracking, error) {
	if args == nil {
		args = &SwitchControllerFlowTrackingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerFlowTracking
	err := ctx.RegisterResource("fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerFlowTracking gets an existing SwitchControllerFlowTracking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerFlowTracking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerFlowTrackingState, opts ...pulumi.ResourceOption) (*SwitchControllerFlowTracking, error) {
	var resource SwitchControllerFlowTracking
	err := ctx.ReadResource("fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerFlowTracking resources.
type switchControllerFlowTrackingState struct {
	Aggregates           []SwitchControllerFlowTrackingAggregate `pulumi:"aggregates"`
	CollectorIp          *string                                 `pulumi:"collectorIp"`
	CollectorPort        *int                                    `pulumi:"collectorPort"`
	Collectors           []SwitchControllerFlowTrackingCollector `pulumi:"collectors"`
	DynamicSortSubtable  *string                                 `pulumi:"dynamicSortSubtable"`
	Format               *string                                 `pulumi:"format"`
	GetAllTables         *string                                 `pulumi:"getAllTables"`
	Level                *string                                 `pulumi:"level"`
	MaxExportPktSize     *int                                    `pulumi:"maxExportPktSize"`
	SampleMode           *string                                 `pulumi:"sampleMode"`
	SampleRate           *int                                    `pulumi:"sampleRate"`
	TemplateExportPeriod *int                                    `pulumi:"templateExportPeriod"`
	TimeoutGeneral       *int                                    `pulumi:"timeoutGeneral"`
	TimeoutIcmp          *int                                    `pulumi:"timeoutIcmp"`
	TimeoutMax           *int                                    `pulumi:"timeoutMax"`
	TimeoutTcp           *int                                    `pulumi:"timeoutTcp"`
	TimeoutTcpFin        *int                                    `pulumi:"timeoutTcpFin"`
	TimeoutTcpRst        *int                                    `pulumi:"timeoutTcpRst"`
	TimeoutUdp           *int                                    `pulumi:"timeoutUdp"`
	Transport            *string                                 `pulumi:"transport"`
	Vdomparam            *string                                 `pulumi:"vdomparam"`
}

type SwitchControllerFlowTrackingState struct {
	Aggregates           SwitchControllerFlowTrackingAggregateArrayInput
	CollectorIp          pulumi.StringPtrInput
	CollectorPort        pulumi.IntPtrInput
	Collectors           SwitchControllerFlowTrackingCollectorArrayInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Format               pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	Level                pulumi.StringPtrInput
	MaxExportPktSize     pulumi.IntPtrInput
	SampleMode           pulumi.StringPtrInput
	SampleRate           pulumi.IntPtrInput
	TemplateExportPeriod pulumi.IntPtrInput
	TimeoutGeneral       pulumi.IntPtrInput
	TimeoutIcmp          pulumi.IntPtrInput
	TimeoutMax           pulumi.IntPtrInput
	TimeoutTcp           pulumi.IntPtrInput
	TimeoutTcpFin        pulumi.IntPtrInput
	TimeoutTcpRst        pulumi.IntPtrInput
	TimeoutUdp           pulumi.IntPtrInput
	Transport            pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (SwitchControllerFlowTrackingState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFlowTrackingState)(nil)).Elem()
}

type switchControllerFlowTrackingArgs struct {
	Aggregates           []SwitchControllerFlowTrackingAggregate `pulumi:"aggregates"`
	CollectorIp          *string                                 `pulumi:"collectorIp"`
	CollectorPort        *int                                    `pulumi:"collectorPort"`
	Collectors           []SwitchControllerFlowTrackingCollector `pulumi:"collectors"`
	DynamicSortSubtable  *string                                 `pulumi:"dynamicSortSubtable"`
	Format               *string                                 `pulumi:"format"`
	GetAllTables         *string                                 `pulumi:"getAllTables"`
	Level                *string                                 `pulumi:"level"`
	MaxExportPktSize     *int                                    `pulumi:"maxExportPktSize"`
	SampleMode           *string                                 `pulumi:"sampleMode"`
	SampleRate           *int                                    `pulumi:"sampleRate"`
	TemplateExportPeriod *int                                    `pulumi:"templateExportPeriod"`
	TimeoutGeneral       *int                                    `pulumi:"timeoutGeneral"`
	TimeoutIcmp          *int                                    `pulumi:"timeoutIcmp"`
	TimeoutMax           *int                                    `pulumi:"timeoutMax"`
	TimeoutTcp           *int                                    `pulumi:"timeoutTcp"`
	TimeoutTcpFin        *int                                    `pulumi:"timeoutTcpFin"`
	TimeoutTcpRst        *int                                    `pulumi:"timeoutTcpRst"`
	TimeoutUdp           *int                                    `pulumi:"timeoutUdp"`
	Transport            *string                                 `pulumi:"transport"`
	Vdomparam            *string                                 `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerFlowTracking resource.
type SwitchControllerFlowTrackingArgs struct {
	Aggregates           SwitchControllerFlowTrackingAggregateArrayInput
	CollectorIp          pulumi.StringPtrInput
	CollectorPort        pulumi.IntPtrInput
	Collectors           SwitchControllerFlowTrackingCollectorArrayInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Format               pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	Level                pulumi.StringPtrInput
	MaxExportPktSize     pulumi.IntPtrInput
	SampleMode           pulumi.StringPtrInput
	SampleRate           pulumi.IntPtrInput
	TemplateExportPeriod pulumi.IntPtrInput
	TimeoutGeneral       pulumi.IntPtrInput
	TimeoutIcmp          pulumi.IntPtrInput
	TimeoutMax           pulumi.IntPtrInput
	TimeoutTcp           pulumi.IntPtrInput
	TimeoutTcpFin        pulumi.IntPtrInput
	TimeoutTcpRst        pulumi.IntPtrInput
	TimeoutUdp           pulumi.IntPtrInput
	Transport            pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (SwitchControllerFlowTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFlowTrackingArgs)(nil)).Elem()
}

type SwitchControllerFlowTrackingInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput
	ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput
}

func (*SwitchControllerFlowTracking) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFlowTracking)(nil)).Elem()
}

func (i *SwitchControllerFlowTracking) ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput {
	return i.ToSwitchControllerFlowTrackingOutputWithContext(context.Background())
}

func (i *SwitchControllerFlowTracking) ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingOutput)
}

// SwitchControllerFlowTrackingArrayInput is an input type that accepts SwitchControllerFlowTrackingArray and SwitchControllerFlowTrackingArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingArrayInput` via:
//
//	SwitchControllerFlowTrackingArray{ SwitchControllerFlowTrackingArgs{...} }
type SwitchControllerFlowTrackingArrayInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput
	ToSwitchControllerFlowTrackingArrayOutputWithContext(context.Context) SwitchControllerFlowTrackingArrayOutput
}

type SwitchControllerFlowTrackingArray []SwitchControllerFlowTrackingInput

func (SwitchControllerFlowTrackingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingArray) ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput {
	return i.ToSwitchControllerFlowTrackingArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingArray) ToSwitchControllerFlowTrackingArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingArrayOutput)
}

// SwitchControllerFlowTrackingMapInput is an input type that accepts SwitchControllerFlowTrackingMap and SwitchControllerFlowTrackingMapOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingMapInput` via:
//
//	SwitchControllerFlowTrackingMap{ "key": SwitchControllerFlowTrackingArgs{...} }
type SwitchControllerFlowTrackingMapInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput
	ToSwitchControllerFlowTrackingMapOutputWithContext(context.Context) SwitchControllerFlowTrackingMapOutput
}

type SwitchControllerFlowTrackingMap map[string]SwitchControllerFlowTrackingInput

func (SwitchControllerFlowTrackingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingMap) ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput {
	return i.ToSwitchControllerFlowTrackingMapOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingMap) ToSwitchControllerFlowTrackingMapOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingMapOutput)
}

type SwitchControllerFlowTrackingOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingOutput) ToSwitchControllerFlowTrackingOutput() SwitchControllerFlowTrackingOutput {
	return o
}

func (o SwitchControllerFlowTrackingOutput) ToSwitchControllerFlowTrackingOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingOutput {
	return o
}

func (o SwitchControllerFlowTrackingOutput) Aggregates() SwitchControllerFlowTrackingAggregateArrayOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) SwitchControllerFlowTrackingAggregateArrayOutput {
		return v.Aggregates
	}).(SwitchControllerFlowTrackingAggregateArrayOutput)
}

func (o SwitchControllerFlowTrackingOutput) CollectorIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringOutput { return v.CollectorIp }).(pulumi.StringOutput)
}

func (o SwitchControllerFlowTrackingOutput) CollectorPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.CollectorPort }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) Collectors() SwitchControllerFlowTrackingCollectorArrayOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) SwitchControllerFlowTrackingCollectorArrayOutput {
		return v.Collectors
	}).(SwitchControllerFlowTrackingCollectorArrayOutput)
}

func (o SwitchControllerFlowTrackingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFlowTrackingOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

func (o SwitchControllerFlowTrackingOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFlowTrackingOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringOutput { return v.Level }).(pulumi.StringOutput)
}

func (o SwitchControllerFlowTrackingOutput) MaxExportPktSize() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.MaxExportPktSize }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) SampleMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringOutput { return v.SampleMode }).(pulumi.StringOutput)
}

func (o SwitchControllerFlowTrackingOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.SampleRate }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TemplateExportPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TemplateExportPeriod }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutGeneral() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutGeneral }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutIcmp() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutIcmp }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutMax() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutMax }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutTcp() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutTcp }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutTcpFin() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutTcpFin }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutTcpRst() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutTcpRst }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) TimeoutUdp() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.IntOutput { return v.TimeoutUdp }).(pulumi.IntOutput)
}

func (o SwitchControllerFlowTrackingOutput) Transport() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringOutput { return v.Transport }).(pulumi.StringOutput)
}

func (o SwitchControllerFlowTrackingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFlowTracking) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerFlowTrackingArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingArrayOutput) ToSwitchControllerFlowTrackingArrayOutput() SwitchControllerFlowTrackingArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingArrayOutput) ToSwitchControllerFlowTrackingArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingArrayOutput) Index(i pulumi.IntInput) SwitchControllerFlowTrackingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerFlowTracking {
		return vs[0].([]*SwitchControllerFlowTracking)[vs[1].(int)]
	}).(SwitchControllerFlowTrackingOutput)
}

type SwitchControllerFlowTrackingMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFlowTracking)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingMapOutput) ToSwitchControllerFlowTrackingMapOutput() SwitchControllerFlowTrackingMapOutput {
	return o
}

func (o SwitchControllerFlowTrackingMapOutput) ToSwitchControllerFlowTrackingMapOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingMapOutput {
	return o
}

func (o SwitchControllerFlowTrackingMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerFlowTrackingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerFlowTracking {
		return vs[0].(map[string]*SwitchControllerFlowTracking)[vs[1].(string)]
	}).(SwitchControllerFlowTrackingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingInput)(nil)).Elem(), &SwitchControllerFlowTracking{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingArrayInput)(nil)).Elem(), SwitchControllerFlowTrackingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingMapInput)(nil)).Elem(), SwitchControllerFlowTrackingMap{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingMapOutput{})
}
