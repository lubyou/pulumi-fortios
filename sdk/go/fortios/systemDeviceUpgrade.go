// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemDeviceUpgrade struct {
	pulumi.CustomResourceState

	DeviceType     pulumi.StringOutput    `pulumi:"deviceType"`
	FailureReason  pulumi.StringOutput    `pulumi:"failureReason"`
	MaximumMinutes pulumi.IntOutput       `pulumi:"maximumMinutes"`
	Serial         pulumi.StringOutput    `pulumi:"serial"`
	SetupTime      pulumi.StringOutput    `pulumi:"setupTime"`
	Status         pulumi.StringOutput    `pulumi:"status"`
	Time           pulumi.StringOutput    `pulumi:"time"`
	Timing         pulumi.StringOutput    `pulumi:"timing"`
	UpgradePath    pulumi.StringOutput    `pulumi:"upgradePath"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemDeviceUpgrade registers a new resource with the given unique name, arguments, and options.
func NewSystemDeviceUpgrade(ctx *pulumi.Context,
	name string, args *SystemDeviceUpgradeArgs, opts ...pulumi.ResourceOption) (*SystemDeviceUpgrade, error) {
	if args == nil {
		args = &SystemDeviceUpgradeArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemDeviceUpgrade
	err := ctx.RegisterResource("fortios:index/systemDeviceUpgrade:SystemDeviceUpgrade", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemDeviceUpgrade gets an existing SystemDeviceUpgrade resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemDeviceUpgrade(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemDeviceUpgradeState, opts ...pulumi.ResourceOption) (*SystemDeviceUpgrade, error) {
	var resource SystemDeviceUpgrade
	err := ctx.ReadResource("fortios:index/systemDeviceUpgrade:SystemDeviceUpgrade", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemDeviceUpgrade resources.
type systemDeviceUpgradeState struct {
	DeviceType     *string `pulumi:"deviceType"`
	FailureReason  *string `pulumi:"failureReason"`
	MaximumMinutes *int    `pulumi:"maximumMinutes"`
	Serial         *string `pulumi:"serial"`
	SetupTime      *string `pulumi:"setupTime"`
	Status         *string `pulumi:"status"`
	Time           *string `pulumi:"time"`
	Timing         *string `pulumi:"timing"`
	UpgradePath    *string `pulumi:"upgradePath"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

type SystemDeviceUpgradeState struct {
	DeviceType     pulumi.StringPtrInput
	FailureReason  pulumi.StringPtrInput
	MaximumMinutes pulumi.IntPtrInput
	Serial         pulumi.StringPtrInput
	SetupTime      pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Time           pulumi.StringPtrInput
	Timing         pulumi.StringPtrInput
	UpgradePath    pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemDeviceUpgradeState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemDeviceUpgradeState)(nil)).Elem()
}

type systemDeviceUpgradeArgs struct {
	DeviceType     *string `pulumi:"deviceType"`
	FailureReason  *string `pulumi:"failureReason"`
	MaximumMinutes *int    `pulumi:"maximumMinutes"`
	Serial         *string `pulumi:"serial"`
	SetupTime      *string `pulumi:"setupTime"`
	Status         *string `pulumi:"status"`
	Time           *string `pulumi:"time"`
	Timing         *string `pulumi:"timing"`
	UpgradePath    *string `pulumi:"upgradePath"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemDeviceUpgrade resource.
type SystemDeviceUpgradeArgs struct {
	DeviceType     pulumi.StringPtrInput
	FailureReason  pulumi.StringPtrInput
	MaximumMinutes pulumi.IntPtrInput
	Serial         pulumi.StringPtrInput
	SetupTime      pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Time           pulumi.StringPtrInput
	Timing         pulumi.StringPtrInput
	UpgradePath    pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (SystemDeviceUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemDeviceUpgradeArgs)(nil)).Elem()
}

type SystemDeviceUpgradeInput interface {
	pulumi.Input

	ToSystemDeviceUpgradeOutput() SystemDeviceUpgradeOutput
	ToSystemDeviceUpgradeOutputWithContext(ctx context.Context) SystemDeviceUpgradeOutput
}

func (*SystemDeviceUpgrade) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDeviceUpgrade)(nil)).Elem()
}

func (i *SystemDeviceUpgrade) ToSystemDeviceUpgradeOutput() SystemDeviceUpgradeOutput {
	return i.ToSystemDeviceUpgradeOutputWithContext(context.Background())
}

func (i *SystemDeviceUpgrade) ToSystemDeviceUpgradeOutputWithContext(ctx context.Context) SystemDeviceUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDeviceUpgradeOutput)
}

// SystemDeviceUpgradeArrayInput is an input type that accepts SystemDeviceUpgradeArray and SystemDeviceUpgradeArrayOutput values.
// You can construct a concrete instance of `SystemDeviceUpgradeArrayInput` via:
//
//	SystemDeviceUpgradeArray{ SystemDeviceUpgradeArgs{...} }
type SystemDeviceUpgradeArrayInput interface {
	pulumi.Input

	ToSystemDeviceUpgradeArrayOutput() SystemDeviceUpgradeArrayOutput
	ToSystemDeviceUpgradeArrayOutputWithContext(context.Context) SystemDeviceUpgradeArrayOutput
}

type SystemDeviceUpgradeArray []SystemDeviceUpgradeInput

func (SystemDeviceUpgradeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemDeviceUpgrade)(nil)).Elem()
}

func (i SystemDeviceUpgradeArray) ToSystemDeviceUpgradeArrayOutput() SystemDeviceUpgradeArrayOutput {
	return i.ToSystemDeviceUpgradeArrayOutputWithContext(context.Background())
}

func (i SystemDeviceUpgradeArray) ToSystemDeviceUpgradeArrayOutputWithContext(ctx context.Context) SystemDeviceUpgradeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDeviceUpgradeArrayOutput)
}

// SystemDeviceUpgradeMapInput is an input type that accepts SystemDeviceUpgradeMap and SystemDeviceUpgradeMapOutput values.
// You can construct a concrete instance of `SystemDeviceUpgradeMapInput` via:
//
//	SystemDeviceUpgradeMap{ "key": SystemDeviceUpgradeArgs{...} }
type SystemDeviceUpgradeMapInput interface {
	pulumi.Input

	ToSystemDeviceUpgradeMapOutput() SystemDeviceUpgradeMapOutput
	ToSystemDeviceUpgradeMapOutputWithContext(context.Context) SystemDeviceUpgradeMapOutput
}

type SystemDeviceUpgradeMap map[string]SystemDeviceUpgradeInput

func (SystemDeviceUpgradeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemDeviceUpgrade)(nil)).Elem()
}

func (i SystemDeviceUpgradeMap) ToSystemDeviceUpgradeMapOutput() SystemDeviceUpgradeMapOutput {
	return i.ToSystemDeviceUpgradeMapOutputWithContext(context.Background())
}

func (i SystemDeviceUpgradeMap) ToSystemDeviceUpgradeMapOutputWithContext(ctx context.Context) SystemDeviceUpgradeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDeviceUpgradeMapOutput)
}

type SystemDeviceUpgradeOutput struct{ *pulumi.OutputState }

func (SystemDeviceUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDeviceUpgrade)(nil)).Elem()
}

func (o SystemDeviceUpgradeOutput) ToSystemDeviceUpgradeOutput() SystemDeviceUpgradeOutput {
	return o
}

func (o SystemDeviceUpgradeOutput) ToSystemDeviceUpgradeOutputWithContext(ctx context.Context) SystemDeviceUpgradeOutput {
	return o
}

func (o SystemDeviceUpgradeOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.DeviceType }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.FailureReason }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) MaximumMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.IntOutput { return v.MaximumMinutes }).(pulumi.IntOutput)
}

func (o SystemDeviceUpgradeOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.Serial }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) SetupTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.SetupTime }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.Time }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) Timing() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.Timing }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) UpgradePath() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringOutput { return v.UpgradePath }).(pulumi.StringOutput)
}

func (o SystemDeviceUpgradeOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDeviceUpgrade) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemDeviceUpgradeArrayOutput struct{ *pulumi.OutputState }

func (SystemDeviceUpgradeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemDeviceUpgrade)(nil)).Elem()
}

func (o SystemDeviceUpgradeArrayOutput) ToSystemDeviceUpgradeArrayOutput() SystemDeviceUpgradeArrayOutput {
	return o
}

func (o SystemDeviceUpgradeArrayOutput) ToSystemDeviceUpgradeArrayOutputWithContext(ctx context.Context) SystemDeviceUpgradeArrayOutput {
	return o
}

func (o SystemDeviceUpgradeArrayOutput) Index(i pulumi.IntInput) SystemDeviceUpgradeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemDeviceUpgrade {
		return vs[0].([]*SystemDeviceUpgrade)[vs[1].(int)]
	}).(SystemDeviceUpgradeOutput)
}

type SystemDeviceUpgradeMapOutput struct{ *pulumi.OutputState }

func (SystemDeviceUpgradeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemDeviceUpgrade)(nil)).Elem()
}

func (o SystemDeviceUpgradeMapOutput) ToSystemDeviceUpgradeMapOutput() SystemDeviceUpgradeMapOutput {
	return o
}

func (o SystemDeviceUpgradeMapOutput) ToSystemDeviceUpgradeMapOutputWithContext(ctx context.Context) SystemDeviceUpgradeMapOutput {
	return o
}

func (o SystemDeviceUpgradeMapOutput) MapIndex(k pulumi.StringInput) SystemDeviceUpgradeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemDeviceUpgrade {
		return vs[0].(map[string]*SystemDeviceUpgrade)[vs[1].(string)]
	}).(SystemDeviceUpgradeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDeviceUpgradeInput)(nil)).Elem(), &SystemDeviceUpgrade{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDeviceUpgradeArrayInput)(nil)).Elem(), SystemDeviceUpgradeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDeviceUpgradeMapInput)(nil)).Elem(), SystemDeviceUpgradeMap{})
	pulumi.RegisterOutputType(SystemDeviceUpgradeOutput{})
	pulumi.RegisterOutputType(SystemDeviceUpgradeArrayOutput{})
	pulumi.RegisterOutputType(SystemDeviceUpgradeMapOutput{})
}
