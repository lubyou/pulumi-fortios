// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallVipgrp6 struct {
	pulumi.CustomResourceState

	Color               pulumi.IntOutput                 `pulumi:"color"`
	Comments            pulumi.StringPtrOutput           `pulumi:"comments"`
	DynamicSortSubtable pulumi.StringPtrOutput           `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput           `pulumi:"getAllTables"`
	Members             FirewallVipgrp6MemberArrayOutput `pulumi:"members"`
	Name                pulumi.StringOutput              `pulumi:"name"`
	Uuid                pulumi.StringOutput              `pulumi:"uuid"`
	Vdomparam           pulumi.StringPtrOutput           `pulumi:"vdomparam"`
}

// NewFirewallVipgrp6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallVipgrp6(ctx *pulumi.Context,
	name string, args *FirewallVipgrp6Args, opts ...pulumi.ResourceOption) (*FirewallVipgrp6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallVipgrp6
	err := ctx.RegisterResource("fortios:index/firewallVipgrp6:FirewallVipgrp6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallVipgrp6 gets an existing FirewallVipgrp6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallVipgrp6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallVipgrp6State, opts ...pulumi.ResourceOption) (*FirewallVipgrp6, error) {
	var resource FirewallVipgrp6
	err := ctx.ReadResource("fortios:index/firewallVipgrp6:FirewallVipgrp6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallVipgrp6 resources.
type firewallVipgrp6State struct {
	Color               *int                    `pulumi:"color"`
	Comments            *string                 `pulumi:"comments"`
	DynamicSortSubtable *string                 `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                 `pulumi:"getAllTables"`
	Members             []FirewallVipgrp6Member `pulumi:"members"`
	Name                *string                 `pulumi:"name"`
	Uuid                *string                 `pulumi:"uuid"`
	Vdomparam           *string                 `pulumi:"vdomparam"`
}

type FirewallVipgrp6State struct {
	Color               pulumi.IntPtrInput
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Members             FirewallVipgrp6MemberArrayInput
	Name                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallVipgrp6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrp6State)(nil)).Elem()
}

type firewallVipgrp6Args struct {
	Color               *int                    `pulumi:"color"`
	Comments            *string                 `pulumi:"comments"`
	DynamicSortSubtable *string                 `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                 `pulumi:"getAllTables"`
	Members             []FirewallVipgrp6Member `pulumi:"members"`
	Name                *string                 `pulumi:"name"`
	Uuid                *string                 `pulumi:"uuid"`
	Vdomparam           *string                 `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallVipgrp6 resource.
type FirewallVipgrp6Args struct {
	Color               pulumi.IntPtrInput
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Members             FirewallVipgrp6MemberArrayInput
	Name                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallVipgrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrp6Args)(nil)).Elem()
}

type FirewallVipgrp6Input interface {
	pulumi.Input

	ToFirewallVipgrp6Output() FirewallVipgrp6Output
	ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output
}

func (*FirewallVipgrp6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp6)(nil)).Elem()
}

func (i *FirewallVipgrp6) ToFirewallVipgrp6Output() FirewallVipgrp6Output {
	return i.ToFirewallVipgrp6OutputWithContext(context.Background())
}

func (i *FirewallVipgrp6) ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6Output)
}

func (i *FirewallVipgrp6) ToOutput(ctx context.Context) pulumix.Output[*FirewallVipgrp6] {
	return pulumix.Output[*FirewallVipgrp6]{
		OutputState: i.ToFirewallVipgrp6OutputWithContext(ctx).OutputState,
	}
}

// FirewallVipgrp6ArrayInput is an input type that accepts FirewallVipgrp6Array and FirewallVipgrp6ArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrp6ArrayInput` via:
//
//	FirewallVipgrp6Array{ FirewallVipgrp6Args{...} }
type FirewallVipgrp6ArrayInput interface {
	pulumi.Input

	ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput
	ToFirewallVipgrp6ArrayOutputWithContext(context.Context) FirewallVipgrp6ArrayOutput
}

type FirewallVipgrp6Array []FirewallVipgrp6Input

func (FirewallVipgrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp6)(nil)).Elem()
}

func (i FirewallVipgrp6Array) ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput {
	return i.ToFirewallVipgrp6ArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrp6Array) ToFirewallVipgrp6ArrayOutputWithContext(ctx context.Context) FirewallVipgrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6ArrayOutput)
}

func (i FirewallVipgrp6Array) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallVipgrp6] {
	return pulumix.Output[[]*FirewallVipgrp6]{
		OutputState: i.ToFirewallVipgrp6ArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallVipgrp6MapInput is an input type that accepts FirewallVipgrp6Map and FirewallVipgrp6MapOutput values.
// You can construct a concrete instance of `FirewallVipgrp6MapInput` via:
//
//	FirewallVipgrp6Map{ "key": FirewallVipgrp6Args{...} }
type FirewallVipgrp6MapInput interface {
	pulumi.Input

	ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput
	ToFirewallVipgrp6MapOutputWithContext(context.Context) FirewallVipgrp6MapOutput
}

type FirewallVipgrp6Map map[string]FirewallVipgrp6Input

func (FirewallVipgrp6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp6)(nil)).Elem()
}

func (i FirewallVipgrp6Map) ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput {
	return i.ToFirewallVipgrp6MapOutputWithContext(context.Background())
}

func (i FirewallVipgrp6Map) ToFirewallVipgrp6MapOutputWithContext(ctx context.Context) FirewallVipgrp6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6MapOutput)
}

func (i FirewallVipgrp6Map) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallVipgrp6] {
	return pulumix.Output[map[string]*FirewallVipgrp6]{
		OutputState: i.ToFirewallVipgrp6MapOutputWithContext(ctx).OutputState,
	}
}

type FirewallVipgrp6Output struct{ *pulumi.OutputState }

func (FirewallVipgrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6Output) ToFirewallVipgrp6Output() FirewallVipgrp6Output {
	return o
}

func (o FirewallVipgrp6Output) ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output {
	return o
}

func (o FirewallVipgrp6Output) ToOutput(ctx context.Context) pulumix.Output[*FirewallVipgrp6] {
	return pulumix.Output[*FirewallVipgrp6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallVipgrp6Output) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o FirewallVipgrp6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrp6Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrp6Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrp6Output) Members() FirewallVipgrp6MemberArrayOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) FirewallVipgrp6MemberArrayOutput { return v.Members }).(FirewallVipgrp6MemberArrayOutput)
}

func (o FirewallVipgrp6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallVipgrp6Output) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o FirewallVipgrp6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallVipgrp6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6ArrayOutput) ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput {
	return o
}

func (o FirewallVipgrp6ArrayOutput) ToFirewallVipgrp6ArrayOutputWithContext(ctx context.Context) FirewallVipgrp6ArrayOutput {
	return o
}

func (o FirewallVipgrp6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallVipgrp6] {
	return pulumix.Output[[]*FirewallVipgrp6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallVipgrp6ArrayOutput) Index(i pulumi.IntInput) FirewallVipgrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallVipgrp6 {
		return vs[0].([]*FirewallVipgrp6)[vs[1].(int)]
	}).(FirewallVipgrp6Output)
}

type FirewallVipgrp6MapOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6MapOutput) ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput {
	return o
}

func (o FirewallVipgrp6MapOutput) ToFirewallVipgrp6MapOutputWithContext(ctx context.Context) FirewallVipgrp6MapOutput {
	return o
}

func (o FirewallVipgrp6MapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallVipgrp6] {
	return pulumix.Output[map[string]*FirewallVipgrp6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallVipgrp6MapOutput) MapIndex(k pulumi.StringInput) FirewallVipgrp6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallVipgrp6 {
		return vs[0].(map[string]*FirewallVipgrp6)[vs[1].(string)]
	}).(FirewallVipgrp6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6Input)(nil)).Elem(), &FirewallVipgrp6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6ArrayInput)(nil)).Elem(), FirewallVipgrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6MapInput)(nil)).Elem(), FirewallVipgrp6Map{})
	pulumi.RegisterOutputType(FirewallVipgrp6Output{})
	pulumi.RegisterOutputType(FirewallVipgrp6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp6MapOutput{})
}
