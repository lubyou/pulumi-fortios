// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 virtual IP groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		trname1, err := fortios.NewFirewallVip6(ctx, "trname1", &fortios.FirewallVip6Args{
// 			ArpReply:                     pulumi.String("enable"),
// 			Color:                        pulumi.Int(0),
// 			Extip:                        pulumi.String("2001:1:1:2::100"),
// 			Extport:                      pulumi.String("0-65535"),
// 			Fosid:                        pulumi.Int(0),
// 			HttpCookieAge:                pulumi.Int(60),
// 			HttpCookieDomainFromHost:     pulumi.String("disable"),
// 			HttpCookieGeneration:         pulumi.Int(0),
// 			HttpCookieShare:              pulumi.String("same-ip"),
// 			HttpIpHeader:                 pulumi.String("disable"),
// 			HttpMultiplex:                pulumi.String("disable"),
// 			HttpsCookieSecure:            pulumi.String("disable"),
// 			LdbMethod:                    pulumi.String("static"),
// 			Mappedip:                     pulumi.String("2001:1:1:2::200"),
// 			Mappedport:                   pulumi.String("0-65535"),
// 			MaxEmbryonicConnections:      pulumi.Int(1000),
// 			OutlookWebAccess:             pulumi.String("disable"),
// 			Persistence:                  pulumi.String("none"),
// 			Portforward:                  pulumi.String("disable"),
// 			Protocol:                     pulumi.String("tcp"),
// 			SslAlgorithm:                 pulumi.String("high"),
// 			SslClientFallback:            pulumi.String("enable"),
// 			SslClientRenegotiation:       pulumi.String("secure"),
// 			SslClientSessionStateMax:     pulumi.Int(1000),
// 			SslClientSessionStateTimeout: pulumi.Int(30),
// 			SslClientSessionStateType:    pulumi.String("both"),
// 			SslDhBits:                    pulumi.String("2048"),
// 			SslHpkp:                      pulumi.String("disable"),
// 			SslHpkpAge:                   pulumi.Int(5184000),
// 			SslHpkpIncludeSubdomains:     pulumi.String("disable"),
// 			SslHsts:                      pulumi.String("disable"),
// 			SslHstsAge:                   pulumi.Int(5184000),
// 			SslHstsIncludeSubdomains:     pulumi.String("disable"),
// 			SslHttpLocationConversion:    pulumi.String("disable"),
// 			SslHttpMatchHost:             pulumi.String("enable"),
// 			SslMaxVersion:                pulumi.String("tls-1.2"),
// 			SslMinVersion:                pulumi.String("tls-1.1"),
// 			SslMode:                      pulumi.String("half"),
// 			SslPfs:                       pulumi.String("require"),
// 			SslSendEmptyFrags:            pulumi.String("enable"),
// 			SslServerAlgorithm:           pulumi.String("client"),
// 			SslServerMaxVersion:          pulumi.String("client"),
// 			SslServerMinVersion:          pulumi.String("client"),
// 			SslServerSessionStateMax:     pulumi.Int(100),
// 			SslServerSessionStateTimeout: pulumi.Int(60),
// 			SslServerSessionStateType:    pulumi.String("both"),
// 			Type:                         pulumi.String("static-nat"),
// 			WeblogicServer:               pulumi.String("disable"),
// 			WebsphereServer:              pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = fortios.NewFirewallVipgrp6(ctx, "trname", &fortios.FirewallVipgrp6Args{
// 			Color: pulumi.Int(0),
// 			Members: FirewallVipgrp6MemberArray{
// 				&FirewallVipgrp6MemberArgs{
// 					Name: trname1.Name,
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall Vipgrp6 can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallVipgrp6:FirewallVipgrp6 labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallVipgrp6:FirewallVipgrp6 labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallVipgrp6 struct {
	pulumi.CustomResourceState

	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntOutput `pulumi:"color"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members FirewallVipgrp6MemberArrayOutput `pulumi:"members"`
	// IPv6 VIP name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallVipgrp6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallVipgrp6(ctx *pulumi.Context,
	name string, args *FirewallVipgrp6Args, opts ...pulumi.ResourceOption) (*FirewallVipgrp6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallVipgrp6
	err := ctx.RegisterResource("fortios:index/firewallVipgrp6:FirewallVipgrp6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallVipgrp6 gets an existing FirewallVipgrp6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallVipgrp6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallVipgrp6State, opts ...pulumi.ResourceOption) (*FirewallVipgrp6, error) {
	var resource FirewallVipgrp6
	err := ctx.ReadResource("fortios:index/firewallVipgrp6:FirewallVipgrp6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallVipgrp6 resources.
type firewallVipgrp6State struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members []FirewallVipgrp6Member `pulumi:"members"`
	// IPv6 VIP name.
	Name *string `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallVipgrp6State struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members FirewallVipgrp6MemberArrayInput
	// IPv6 VIP name.
	Name pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallVipgrp6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrp6State)(nil)).Elem()
}

type firewallVipgrp6Args struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members []FirewallVipgrp6Member `pulumi:"members"`
	// IPv6 VIP name.
	Name *string `pulumi:"name"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallVipgrp6 resource.
type FirewallVipgrp6Args struct {
	// Integer value to determine the color of the icon in the GUI (range 1 to 32, default = 0, which sets the value to 1).
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Member VIP objects of the group (Separate multiple objects with a space). The structure of `member` block is documented below.
	Members FirewallVipgrp6MemberArrayInput
	// IPv6 VIP name.
	Name pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallVipgrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrp6Args)(nil)).Elem()
}

type FirewallVipgrp6Input interface {
	pulumi.Input

	ToFirewallVipgrp6Output() FirewallVipgrp6Output
	ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output
}

func (*FirewallVipgrp6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp6)(nil)).Elem()
}

func (i *FirewallVipgrp6) ToFirewallVipgrp6Output() FirewallVipgrp6Output {
	return i.ToFirewallVipgrp6OutputWithContext(context.Background())
}

func (i *FirewallVipgrp6) ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6Output)
}

// FirewallVipgrp6ArrayInput is an input type that accepts FirewallVipgrp6Array and FirewallVipgrp6ArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrp6ArrayInput` via:
//
//          FirewallVipgrp6Array{ FirewallVipgrp6Args{...} }
type FirewallVipgrp6ArrayInput interface {
	pulumi.Input

	ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput
	ToFirewallVipgrp6ArrayOutputWithContext(context.Context) FirewallVipgrp6ArrayOutput
}

type FirewallVipgrp6Array []FirewallVipgrp6Input

func (FirewallVipgrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp6)(nil)).Elem()
}

func (i FirewallVipgrp6Array) ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput {
	return i.ToFirewallVipgrp6ArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrp6Array) ToFirewallVipgrp6ArrayOutputWithContext(ctx context.Context) FirewallVipgrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6ArrayOutput)
}

// FirewallVipgrp6MapInput is an input type that accepts FirewallVipgrp6Map and FirewallVipgrp6MapOutput values.
// You can construct a concrete instance of `FirewallVipgrp6MapInput` via:
//
//          FirewallVipgrp6Map{ "key": FirewallVipgrp6Args{...} }
type FirewallVipgrp6MapInput interface {
	pulumi.Input

	ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput
	ToFirewallVipgrp6MapOutputWithContext(context.Context) FirewallVipgrp6MapOutput
}

type FirewallVipgrp6Map map[string]FirewallVipgrp6Input

func (FirewallVipgrp6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp6)(nil)).Elem()
}

func (i FirewallVipgrp6Map) ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput {
	return i.ToFirewallVipgrp6MapOutputWithContext(context.Background())
}

func (i FirewallVipgrp6Map) ToFirewallVipgrp6MapOutputWithContext(ctx context.Context) FirewallVipgrp6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrp6MapOutput)
}

type FirewallVipgrp6Output struct{ *pulumi.OutputState }

func (FirewallVipgrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6Output) ToFirewallVipgrp6Output() FirewallVipgrp6Output {
	return o
}

func (o FirewallVipgrp6Output) ToFirewallVipgrp6OutputWithContext(ctx context.Context) FirewallVipgrp6Output {
	return o
}

type FirewallVipgrp6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6ArrayOutput) ToFirewallVipgrp6ArrayOutput() FirewallVipgrp6ArrayOutput {
	return o
}

func (o FirewallVipgrp6ArrayOutput) ToFirewallVipgrp6ArrayOutputWithContext(ctx context.Context) FirewallVipgrp6ArrayOutput {
	return o
}

func (o FirewallVipgrp6ArrayOutput) Index(i pulumi.IntInput) FirewallVipgrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallVipgrp6 {
		return vs[0].([]*FirewallVipgrp6)[vs[1].(int)]
	}).(FirewallVipgrp6Output)
}

type FirewallVipgrp6MapOutput struct{ *pulumi.OutputState }

func (FirewallVipgrp6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp6)(nil)).Elem()
}

func (o FirewallVipgrp6MapOutput) ToFirewallVipgrp6MapOutput() FirewallVipgrp6MapOutput {
	return o
}

func (o FirewallVipgrp6MapOutput) ToFirewallVipgrp6MapOutputWithContext(ctx context.Context) FirewallVipgrp6MapOutput {
	return o
}

func (o FirewallVipgrp6MapOutput) MapIndex(k pulumi.StringInput) FirewallVipgrp6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallVipgrp6 {
		return vs[0].(map[string]*FirewallVipgrp6)[vs[1].(string)]
	}).(FirewallVipgrp6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6Input)(nil)).Elem(), &FirewallVipgrp6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6ArrayInput)(nil)).Elem(), FirewallVipgrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrp6MapInput)(nil)).Elem(), FirewallVipgrp6Map{})
	pulumi.RegisterOutputType(FirewallVipgrp6Output{})
	pulumi.RegisterOutputType(FirewallVipgrp6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrp6MapOutput{})
}
