// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemTosBasedPriority struct {
	pulumi.CustomResourceState

	Fosid     pulumi.IntOutput       `pulumi:"fosid"`
	Priority  pulumi.StringOutput    `pulumi:"priority"`
	Tos       pulumi.IntOutput       `pulumi:"tos"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemTosBasedPriority registers a new resource with the given unique name, arguments, and options.
func NewSystemTosBasedPriority(ctx *pulumi.Context,
	name string, args *SystemTosBasedPriorityArgs, opts ...pulumi.ResourceOption) (*SystemTosBasedPriority, error) {
	if args == nil {
		args = &SystemTosBasedPriorityArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemTosBasedPriority
	err := ctx.RegisterResource("fortios:index/systemTosBasedPriority:SystemTosBasedPriority", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemTosBasedPriority gets an existing SystemTosBasedPriority resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemTosBasedPriority(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemTosBasedPriorityState, opts ...pulumi.ResourceOption) (*SystemTosBasedPriority, error) {
	var resource SystemTosBasedPriority
	err := ctx.ReadResource("fortios:index/systemTosBasedPriority:SystemTosBasedPriority", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemTosBasedPriority resources.
type systemTosBasedPriorityState struct {
	Fosid     *int    `pulumi:"fosid"`
	Priority  *string `pulumi:"priority"`
	Tos       *int    `pulumi:"tos"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemTosBasedPriorityState struct {
	Fosid     pulumi.IntPtrInput
	Priority  pulumi.StringPtrInput
	Tos       pulumi.IntPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemTosBasedPriorityState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemTosBasedPriorityState)(nil)).Elem()
}

type systemTosBasedPriorityArgs struct {
	Fosid     *int    `pulumi:"fosid"`
	Priority  *string `pulumi:"priority"`
	Tos       *int    `pulumi:"tos"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemTosBasedPriority resource.
type SystemTosBasedPriorityArgs struct {
	Fosid     pulumi.IntPtrInput
	Priority  pulumi.StringPtrInput
	Tos       pulumi.IntPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemTosBasedPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemTosBasedPriorityArgs)(nil)).Elem()
}

type SystemTosBasedPriorityInput interface {
	pulumi.Input

	ToSystemTosBasedPriorityOutput() SystemTosBasedPriorityOutput
	ToSystemTosBasedPriorityOutputWithContext(ctx context.Context) SystemTosBasedPriorityOutput
}

func (*SystemTosBasedPriority) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemTosBasedPriority)(nil)).Elem()
}

func (i *SystemTosBasedPriority) ToSystemTosBasedPriorityOutput() SystemTosBasedPriorityOutput {
	return i.ToSystemTosBasedPriorityOutputWithContext(context.Background())
}

func (i *SystemTosBasedPriority) ToSystemTosBasedPriorityOutputWithContext(ctx context.Context) SystemTosBasedPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemTosBasedPriorityOutput)
}

// SystemTosBasedPriorityArrayInput is an input type that accepts SystemTosBasedPriorityArray and SystemTosBasedPriorityArrayOutput values.
// You can construct a concrete instance of `SystemTosBasedPriorityArrayInput` via:
//
//	SystemTosBasedPriorityArray{ SystemTosBasedPriorityArgs{...} }
type SystemTosBasedPriorityArrayInput interface {
	pulumi.Input

	ToSystemTosBasedPriorityArrayOutput() SystemTosBasedPriorityArrayOutput
	ToSystemTosBasedPriorityArrayOutputWithContext(context.Context) SystemTosBasedPriorityArrayOutput
}

type SystemTosBasedPriorityArray []SystemTosBasedPriorityInput

func (SystemTosBasedPriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemTosBasedPriority)(nil)).Elem()
}

func (i SystemTosBasedPriorityArray) ToSystemTosBasedPriorityArrayOutput() SystemTosBasedPriorityArrayOutput {
	return i.ToSystemTosBasedPriorityArrayOutputWithContext(context.Background())
}

func (i SystemTosBasedPriorityArray) ToSystemTosBasedPriorityArrayOutputWithContext(ctx context.Context) SystemTosBasedPriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemTosBasedPriorityArrayOutput)
}

// SystemTosBasedPriorityMapInput is an input type that accepts SystemTosBasedPriorityMap and SystemTosBasedPriorityMapOutput values.
// You can construct a concrete instance of `SystemTosBasedPriorityMapInput` via:
//
//	SystemTosBasedPriorityMap{ "key": SystemTosBasedPriorityArgs{...} }
type SystemTosBasedPriorityMapInput interface {
	pulumi.Input

	ToSystemTosBasedPriorityMapOutput() SystemTosBasedPriorityMapOutput
	ToSystemTosBasedPriorityMapOutputWithContext(context.Context) SystemTosBasedPriorityMapOutput
}

type SystemTosBasedPriorityMap map[string]SystemTosBasedPriorityInput

func (SystemTosBasedPriorityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemTosBasedPriority)(nil)).Elem()
}

func (i SystemTosBasedPriorityMap) ToSystemTosBasedPriorityMapOutput() SystemTosBasedPriorityMapOutput {
	return i.ToSystemTosBasedPriorityMapOutputWithContext(context.Background())
}

func (i SystemTosBasedPriorityMap) ToSystemTosBasedPriorityMapOutputWithContext(ctx context.Context) SystemTosBasedPriorityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemTosBasedPriorityMapOutput)
}

type SystemTosBasedPriorityOutput struct{ *pulumi.OutputState }

func (SystemTosBasedPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemTosBasedPriority)(nil)).Elem()
}

func (o SystemTosBasedPriorityOutput) ToSystemTosBasedPriorityOutput() SystemTosBasedPriorityOutput {
	return o
}

func (o SystemTosBasedPriorityOutput) ToSystemTosBasedPriorityOutputWithContext(ctx context.Context) SystemTosBasedPriorityOutput {
	return o
}

func (o SystemTosBasedPriorityOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemTosBasedPriority) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SystemTosBasedPriorityOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemTosBasedPriority) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o SystemTosBasedPriorityOutput) Tos() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemTosBasedPriority) pulumi.IntOutput { return v.Tos }).(pulumi.IntOutput)
}

func (o SystemTosBasedPriorityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemTosBasedPriority) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemTosBasedPriorityArrayOutput struct{ *pulumi.OutputState }

func (SystemTosBasedPriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemTosBasedPriority)(nil)).Elem()
}

func (o SystemTosBasedPriorityArrayOutput) ToSystemTosBasedPriorityArrayOutput() SystemTosBasedPriorityArrayOutput {
	return o
}

func (o SystemTosBasedPriorityArrayOutput) ToSystemTosBasedPriorityArrayOutputWithContext(ctx context.Context) SystemTosBasedPriorityArrayOutput {
	return o
}

func (o SystemTosBasedPriorityArrayOutput) Index(i pulumi.IntInput) SystemTosBasedPriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemTosBasedPriority {
		return vs[0].([]*SystemTosBasedPriority)[vs[1].(int)]
	}).(SystemTosBasedPriorityOutput)
}

type SystemTosBasedPriorityMapOutput struct{ *pulumi.OutputState }

func (SystemTosBasedPriorityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemTosBasedPriority)(nil)).Elem()
}

func (o SystemTosBasedPriorityMapOutput) ToSystemTosBasedPriorityMapOutput() SystemTosBasedPriorityMapOutput {
	return o
}

func (o SystemTosBasedPriorityMapOutput) ToSystemTosBasedPriorityMapOutputWithContext(ctx context.Context) SystemTosBasedPriorityMapOutput {
	return o
}

func (o SystemTosBasedPriorityMapOutput) MapIndex(k pulumi.StringInput) SystemTosBasedPriorityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemTosBasedPriority {
		return vs[0].(map[string]*SystemTosBasedPriority)[vs[1].(string)]
	}).(SystemTosBasedPriorityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemTosBasedPriorityInput)(nil)).Elem(), &SystemTosBasedPriority{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemTosBasedPriorityArrayInput)(nil)).Elem(), SystemTosBasedPriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemTosBasedPriorityMapInput)(nil)).Elem(), SystemTosBasedPriorityMap{})
	pulumi.RegisterOutputType(SystemTosBasedPriorityOutput{})
	pulumi.RegisterOutputType(SystemTosBasedPriorityArrayOutput{})
	pulumi.RegisterOutputType(SystemTosBasedPriorityMapOutput{})
}
