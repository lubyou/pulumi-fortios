// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FortimanagerFirewallObjectVip struct {
	pulumi.CustomResourceState

	Adom          pulumi.StringPtrOutput `pulumi:"adom"`
	ArpReply      pulumi.StringPtrOutput `pulumi:"arpReply"`
	Comment       pulumi.StringPtrOutput `pulumi:"comment"`
	ConfigDefault pulumi.StringPtrOutput `pulumi:"configDefault"`
	ExtIntf       pulumi.StringPtrOutput `pulumi:"extIntf"`
	ExtIp         pulumi.StringPtrOutput `pulumi:"extIp"`
	MappedAddr    pulumi.StringPtrOutput `pulumi:"mappedAddr"`
	MappedIp      pulumi.StringPtrOutput `pulumi:"mappedIp"`
	Name          pulumi.StringOutput    `pulumi:"name"`
	Type          pulumi.StringPtrOutput `pulumi:"type"`
}

// NewFortimanagerFirewallObjectVip registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerFirewallObjectVip(ctx *pulumi.Context,
	name string, args *FortimanagerFirewallObjectVipArgs, opts ...pulumi.ResourceOption) (*FortimanagerFirewallObjectVip, error) {
	if args == nil {
		args = &FortimanagerFirewallObjectVipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FortimanagerFirewallObjectVip
	err := ctx.RegisterResource("fortios:index/fortimanagerFirewallObjectVip:FortimanagerFirewallObjectVip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerFirewallObjectVip gets an existing FortimanagerFirewallObjectVip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerFirewallObjectVip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerFirewallObjectVipState, opts ...pulumi.ResourceOption) (*FortimanagerFirewallObjectVip, error) {
	var resource FortimanagerFirewallObjectVip
	err := ctx.ReadResource("fortios:index/fortimanagerFirewallObjectVip:FortimanagerFirewallObjectVip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerFirewallObjectVip resources.
type fortimanagerFirewallObjectVipState struct {
	Adom          *string `pulumi:"adom"`
	ArpReply      *string `pulumi:"arpReply"`
	Comment       *string `pulumi:"comment"`
	ConfigDefault *string `pulumi:"configDefault"`
	ExtIntf       *string `pulumi:"extIntf"`
	ExtIp         *string `pulumi:"extIp"`
	MappedAddr    *string `pulumi:"mappedAddr"`
	MappedIp      *string `pulumi:"mappedIp"`
	Name          *string `pulumi:"name"`
	Type          *string `pulumi:"type"`
}

type FortimanagerFirewallObjectVipState struct {
	Adom          pulumi.StringPtrInput
	ArpReply      pulumi.StringPtrInput
	Comment       pulumi.StringPtrInput
	ConfigDefault pulumi.StringPtrInput
	ExtIntf       pulumi.StringPtrInput
	ExtIp         pulumi.StringPtrInput
	MappedAddr    pulumi.StringPtrInput
	MappedIp      pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Type          pulumi.StringPtrInput
}

func (FortimanagerFirewallObjectVipState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerFirewallObjectVipState)(nil)).Elem()
}

type fortimanagerFirewallObjectVipArgs struct {
	Adom          *string `pulumi:"adom"`
	ArpReply      *string `pulumi:"arpReply"`
	Comment       *string `pulumi:"comment"`
	ConfigDefault *string `pulumi:"configDefault"`
	ExtIntf       *string `pulumi:"extIntf"`
	ExtIp         *string `pulumi:"extIp"`
	MappedAddr    *string `pulumi:"mappedAddr"`
	MappedIp      *string `pulumi:"mappedIp"`
	Name          *string `pulumi:"name"`
	Type          *string `pulumi:"type"`
}

// The set of arguments for constructing a FortimanagerFirewallObjectVip resource.
type FortimanagerFirewallObjectVipArgs struct {
	Adom          pulumi.StringPtrInput
	ArpReply      pulumi.StringPtrInput
	Comment       pulumi.StringPtrInput
	ConfigDefault pulumi.StringPtrInput
	ExtIntf       pulumi.StringPtrInput
	ExtIp         pulumi.StringPtrInput
	MappedAddr    pulumi.StringPtrInput
	MappedIp      pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Type          pulumi.StringPtrInput
}

func (FortimanagerFirewallObjectVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerFirewallObjectVipArgs)(nil)).Elem()
}

type FortimanagerFirewallObjectVipInput interface {
	pulumi.Input

	ToFortimanagerFirewallObjectVipOutput() FortimanagerFirewallObjectVipOutput
	ToFortimanagerFirewallObjectVipOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipOutput
}

func (*FortimanagerFirewallObjectVip) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (i *FortimanagerFirewallObjectVip) ToFortimanagerFirewallObjectVipOutput() FortimanagerFirewallObjectVipOutput {
	return i.ToFortimanagerFirewallObjectVipOutputWithContext(context.Background())
}

func (i *FortimanagerFirewallObjectVip) ToFortimanagerFirewallObjectVipOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallObjectVipOutput)
}

// FortimanagerFirewallObjectVipArrayInput is an input type that accepts FortimanagerFirewallObjectVipArray and FortimanagerFirewallObjectVipArrayOutput values.
// You can construct a concrete instance of `FortimanagerFirewallObjectVipArrayInput` via:
//
//	FortimanagerFirewallObjectVipArray{ FortimanagerFirewallObjectVipArgs{...} }
type FortimanagerFirewallObjectVipArrayInput interface {
	pulumi.Input

	ToFortimanagerFirewallObjectVipArrayOutput() FortimanagerFirewallObjectVipArrayOutput
	ToFortimanagerFirewallObjectVipArrayOutputWithContext(context.Context) FortimanagerFirewallObjectVipArrayOutput
}

type FortimanagerFirewallObjectVipArray []FortimanagerFirewallObjectVipInput

func (FortimanagerFirewallObjectVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (i FortimanagerFirewallObjectVipArray) ToFortimanagerFirewallObjectVipArrayOutput() FortimanagerFirewallObjectVipArrayOutput {
	return i.ToFortimanagerFirewallObjectVipArrayOutputWithContext(context.Background())
}

func (i FortimanagerFirewallObjectVipArray) ToFortimanagerFirewallObjectVipArrayOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallObjectVipArrayOutput)
}

// FortimanagerFirewallObjectVipMapInput is an input type that accepts FortimanagerFirewallObjectVipMap and FortimanagerFirewallObjectVipMapOutput values.
// You can construct a concrete instance of `FortimanagerFirewallObjectVipMapInput` via:
//
//	FortimanagerFirewallObjectVipMap{ "key": FortimanagerFirewallObjectVipArgs{...} }
type FortimanagerFirewallObjectVipMapInput interface {
	pulumi.Input

	ToFortimanagerFirewallObjectVipMapOutput() FortimanagerFirewallObjectVipMapOutput
	ToFortimanagerFirewallObjectVipMapOutputWithContext(context.Context) FortimanagerFirewallObjectVipMapOutput
}

type FortimanagerFirewallObjectVipMap map[string]FortimanagerFirewallObjectVipInput

func (FortimanagerFirewallObjectVipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (i FortimanagerFirewallObjectVipMap) ToFortimanagerFirewallObjectVipMapOutput() FortimanagerFirewallObjectVipMapOutput {
	return i.ToFortimanagerFirewallObjectVipMapOutputWithContext(context.Background())
}

func (i FortimanagerFirewallObjectVipMap) ToFortimanagerFirewallObjectVipMapOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerFirewallObjectVipMapOutput)
}

type FortimanagerFirewallObjectVipOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallObjectVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (o FortimanagerFirewallObjectVipOutput) ToFortimanagerFirewallObjectVipOutput() FortimanagerFirewallObjectVipOutput {
	return o
}

func (o FortimanagerFirewallObjectVipOutput) ToFortimanagerFirewallObjectVipOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipOutput {
	return o
}

func (o FortimanagerFirewallObjectVipOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) ArpReply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.ArpReply }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) ConfigDefault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.ConfigDefault }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) ExtIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.ExtIntf }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) ExtIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.ExtIp }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) MappedAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.MappedAddr }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) MappedIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.MappedIp }).(pulumi.StringPtrOutput)
}

func (o FortimanagerFirewallObjectVipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FortimanagerFirewallObjectVipOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerFirewallObjectVip) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type FortimanagerFirewallObjectVipArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallObjectVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (o FortimanagerFirewallObjectVipArrayOutput) ToFortimanagerFirewallObjectVipArrayOutput() FortimanagerFirewallObjectVipArrayOutput {
	return o
}

func (o FortimanagerFirewallObjectVipArrayOutput) ToFortimanagerFirewallObjectVipArrayOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipArrayOutput {
	return o
}

func (o FortimanagerFirewallObjectVipArrayOutput) Index(i pulumi.IntInput) FortimanagerFirewallObjectVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerFirewallObjectVip {
		return vs[0].([]*FortimanagerFirewallObjectVip)[vs[1].(int)]
	}).(FortimanagerFirewallObjectVipOutput)
}

type FortimanagerFirewallObjectVipMapOutput struct{ *pulumi.OutputState }

func (FortimanagerFirewallObjectVipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerFirewallObjectVip)(nil)).Elem()
}

func (o FortimanagerFirewallObjectVipMapOutput) ToFortimanagerFirewallObjectVipMapOutput() FortimanagerFirewallObjectVipMapOutput {
	return o
}

func (o FortimanagerFirewallObjectVipMapOutput) ToFortimanagerFirewallObjectVipMapOutputWithContext(ctx context.Context) FortimanagerFirewallObjectVipMapOutput {
	return o
}

func (o FortimanagerFirewallObjectVipMapOutput) MapIndex(k pulumi.StringInput) FortimanagerFirewallObjectVipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerFirewallObjectVip {
		return vs[0].(map[string]*FortimanagerFirewallObjectVip)[vs[1].(string)]
	}).(FortimanagerFirewallObjectVipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallObjectVipInput)(nil)).Elem(), &FortimanagerFirewallObjectVip{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallObjectVipArrayInput)(nil)).Elem(), FortimanagerFirewallObjectVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerFirewallObjectVipMapInput)(nil)).Elem(), FortimanagerFirewallObjectVipMap{})
	pulumi.RegisterOutputType(FortimanagerFirewallObjectVipOutput{})
	pulumi.RegisterOutputType(FortimanagerFirewallObjectVipArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerFirewallObjectVipMapOutput{})
}
