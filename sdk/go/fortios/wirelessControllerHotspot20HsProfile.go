// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure hotspot profile.
//
// ## Import
//
// WirelessControllerHotspot20 HsProfile can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20HsProfile:WirelessControllerHotspot20HsProfile labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20HsProfile:WirelessControllerHotspot20HsProfile labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerHotspot20HsProfile struct {
	pulumi.CustomResourceState

	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringOutput `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringOutput `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringOutput `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringOutput `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringOutput `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge pulumi.StringOutput `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntOutput `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringOutput `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap pulumi.StringOutput `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntOutput `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringOutput `pulumi:"dgaf"`
	// Domain name.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntOutput `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntOutput `pulumi:"gasFragmentationLimit"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringOutput `pulumi:"hessid"`
	// IP address type name.
	IpAddrType pulumi.StringOutput `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringOutput `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringOutput `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm pulumi.StringOutput `pulumi:"naiRealm"`
	// OSU provider name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network authentication name.
	NetworkAuth pulumi.StringOutput `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName pulumi.StringOutput `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon pulumi.StringOutput `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringOutput `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders WirelessControllerHotspot20HsProfileOsuProviderArrayOutput `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringOutput `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringOutput `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringOutput `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap pulumi.StringOutput `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntOutput `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringOutput `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions pulumi.StringOutput `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringOutput `pulumi:"venueGroup"`
	// Venue name.
	VenueName pulumi.StringOutput `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringOutput `pulumi:"venueType"`
	// Venue name.
	VenueUrl pulumi.StringOutput `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics pulumi.StringOutput `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringOutput `pulumi:"wnmSleepMode"`
}

// NewWirelessControllerHotspot20HsProfile registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20HsProfile(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20HsProfileArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20HsProfile, error) {
	if args == nil {
		args = &WirelessControllerHotspot20HsProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20HsProfile
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20HsProfile:WirelessControllerHotspot20HsProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20HsProfile gets an existing WirelessControllerHotspot20HsProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20HsProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20HsProfileState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20HsProfile, error) {
	var resource WirelessControllerHotspot20HsProfile
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20HsProfile:WirelessControllerHotspot20HsProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20HsProfile resources.
type wirelessControllerHotspot20HsProfileState struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra *string `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr *string `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet *string `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType *string `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa *string `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge *string `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId *int `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition *string `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap *string `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout *int `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf *string `pulumi:"dgaf"`
	// Domain name.
	DomainName *string `pulumi:"domainName"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay *int `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit *int `pulumi:"gasFragmentationLimit"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid *string `pulumi:"hessid"`
	// IP address type name.
	IpAddrType *string `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif *string `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn *string `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// OSU provider name.
	Name *string `pulumi:"name"`
	// Network authentication name.
	NetworkAuth *string `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName *string `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon *string `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai *string `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders []WirelessControllerHotspot20HsProfileOsuProvider `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid *string `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi *string `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp *string `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap *string `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release *int `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium *string `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions *string `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup *string `pulumi:"venueGroup"`
	// Venue name.
	VenueName *string `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType *string `pulumi:"venueType"`
	// Venue name.
	VenueUrl *string `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics *string `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode *string `pulumi:"wnmSleepMode"`
}

type WirelessControllerHotspot20HsProfileState struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringPtrInput
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringPtrInput
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringPtrInput
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringPtrInput
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringPtrInput
	// Advice of charge.
	AdviceOfCharge pulumi.StringPtrInput
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntPtrInput
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringPtrInput
	// Connection capability name.
	ConnCap pulumi.StringPtrInput
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntPtrInput
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringPtrInput
	// Domain name.
	DomainName pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntPtrInput
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntPtrInput
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringPtrInput
	// IP address type name.
	IpAddrType pulumi.StringPtrInput
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringPtrInput
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringPtrInput
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput
	// OSU provider name.
	Name pulumi.StringPtrInput
	// Network authentication name.
	NetworkAuth pulumi.StringPtrInput
	// Operator friendly name.
	OperFriendlyName pulumi.StringPtrInput
	// Operator icon.
	OperIcon pulumi.StringPtrInput
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringPtrInput
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders WirelessControllerHotspot20HsProfileOsuProviderArrayInput
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringPtrInput
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringPtrInput
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringPtrInput
	// QoS MAP set ID.
	QosMap pulumi.StringPtrInput
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntPtrInput
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringPtrInput
	// Terms and conditions.
	TermsAndConditions pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringPtrInput
	// Venue name.
	VenueName pulumi.StringPtrInput
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringPtrInput
	// Venue name.
	VenueUrl pulumi.StringPtrInput
	// WAN metric name.
	WanMetrics pulumi.StringPtrInput
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringPtrInput
}

func (WirelessControllerHotspot20HsProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20HsProfileState)(nil)).Elem()
}

type wirelessControllerHotspot20HsProfileArgs struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra *string `pulumi:"accessNetworkAsra"`
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr *string `pulumi:"accessNetworkEsr"`
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet *string `pulumi:"accessNetworkInternet"`
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType *string `pulumi:"accessNetworkType"`
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa *string `pulumi:"accessNetworkUesa"`
	// Advice of charge.
	AdviceOfCharge *string `pulumi:"adviceOfCharge"`
	// ANQP Domain ID (0-65535).
	AnqpDomainId *int `pulumi:"anqpDomainId"`
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition *string `pulumi:"bssTransition"`
	// Connection capability name.
	ConnCap *string `pulumi:"connCap"`
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout *int `pulumi:"deauthRequestTimeout"`
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf *string `pulumi:"dgaf"`
	// Domain name.
	DomainName *string `pulumi:"domainName"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay *int `pulumi:"gasComebackDelay"`
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit *int `pulumi:"gasFragmentationLimit"`
	// Homogeneous extended service set identifier (HESSID).
	Hessid *string `pulumi:"hessid"`
	// IP address type name.
	IpAddrType *string `pulumi:"ipAddrType"`
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif *string `pulumi:"l2tif"`
	// 3GPP PLMN name.
	N3gppPlmn *string `pulumi:"n3gppPlmn"`
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// OSU provider name.
	Name *string `pulumi:"name"`
	// Network authentication name.
	NetworkAuth *string `pulumi:"networkAuth"`
	// Operator friendly name.
	OperFriendlyName *string `pulumi:"operFriendlyName"`
	// Operator icon.
	OperIcon *string `pulumi:"operIcon"`
	// OSU Provider NAI.
	OsuProviderNai *string `pulumi:"osuProviderNai"`
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders []WirelessControllerHotspot20HsProfileOsuProvider `pulumi:"osuProviders"`
	// Online sign up (OSU) SSID.
	OsuSsid *string `pulumi:"osuSsid"`
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi *string `pulumi:"pameBi"`
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp *string `pulumi:"proxyArp"`
	// QoS MAP set ID.
	QosMap *string `pulumi:"qosMap"`
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release *int `pulumi:"release"`
	// Roaming consortium list name.
	RoamingConsortium *string `pulumi:"roamingConsortium"`
	// Terms and conditions.
	TermsAndConditions *string `pulumi:"termsAndConditions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup *string `pulumi:"venueGroup"`
	// Venue name.
	VenueName *string `pulumi:"venueName"`
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType *string `pulumi:"venueType"`
	// Venue name.
	VenueUrl *string `pulumi:"venueUrl"`
	// WAN metric name.
	WanMetrics *string `pulumi:"wanMetrics"`
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode *string `pulumi:"wnmSleepMode"`
}

// The set of arguments for constructing a WirelessControllerHotspot20HsProfile resource.
type WirelessControllerHotspot20HsProfileArgs struct {
	// Enable/disable additional step required for access (ASRA). Valid values: `enable`, `disable`.
	AccessNetworkAsra pulumi.StringPtrInput
	// Enable/disable emergency services reachable (ESR). Valid values: `enable`, `disable`.
	AccessNetworkEsr pulumi.StringPtrInput
	// Enable/disable connectivity to the Internet. Valid values: `enable`, `disable`.
	AccessNetworkInternet pulumi.StringPtrInput
	// Access network type. Valid values: `private-network`, `private-network-with-guest-access`, `chargeable-public-network`, `free-public-network`, `personal-device-network`, `emergency-services-only-network`, `test-or-experimental`, `wildcard`.
	AccessNetworkType pulumi.StringPtrInput
	// Enable/disable unauthenticated emergency service accessible (UESA). Valid values: `enable`, `disable`.
	AccessNetworkUesa pulumi.StringPtrInput
	// Advice of charge.
	AdviceOfCharge pulumi.StringPtrInput
	// ANQP Domain ID (0-65535).
	AnqpDomainId pulumi.IntPtrInput
	// Enable/disable basic service set (BSS) transition Support. Valid values: `enable`, `disable`.
	BssTransition pulumi.StringPtrInput
	// Connection capability name.
	ConnCap pulumi.StringPtrInput
	// Deauthentication request timeout (in seconds).
	DeauthRequestTimeout pulumi.IntPtrInput
	// Enable/disable downstream group-addressed forwarding (DGAF). Valid values: `enable`, `disable`.
	Dgaf pulumi.StringPtrInput
	// Domain name.
	DomainName pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// GAS comeback delay (0 or 100 - 4000 milliseconds, default = 500).
	GasComebackDelay pulumi.IntPtrInput
	// GAS fragmentation limit (512 - 4096, default = 1024).
	GasFragmentationLimit pulumi.IntPtrInput
	// Homogeneous extended service set identifier (HESSID).
	Hessid pulumi.StringPtrInput
	// IP address type name.
	IpAddrType pulumi.StringPtrInput
	// Enable/disable Layer 2 traffic inspection and filtering. Valid values: `enable`, `disable`.
	L2tif pulumi.StringPtrInput
	// 3GPP PLMN name.
	N3gppPlmn pulumi.StringPtrInput
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput
	// OSU provider name.
	Name pulumi.StringPtrInput
	// Network authentication name.
	NetworkAuth pulumi.StringPtrInput
	// Operator friendly name.
	OperFriendlyName pulumi.StringPtrInput
	// Operator icon.
	OperIcon pulumi.StringPtrInput
	// OSU Provider NAI.
	OsuProviderNai pulumi.StringPtrInput
	// Manually selected list of OSU provider(s). The structure of `osuProvider` block is documented below.
	OsuProviders WirelessControllerHotspot20HsProfileOsuProviderArrayInput
	// Online sign up (OSU) SSID.
	OsuSsid pulumi.StringPtrInput
	// Enable/disable Pre-Association Message Exchange BSSID Independent (PAME-BI). Valid values: `disable`, `enable`.
	PameBi pulumi.StringPtrInput
	// Enable/disable Proxy ARP. Valid values: `enable`, `disable`.
	ProxyArp pulumi.StringPtrInput
	// QoS MAP set ID.
	QosMap pulumi.StringPtrInput
	// Hotspot 2.0 Release number (1, 2, 3, default = 2).
	Release pulumi.IntPtrInput
	// Roaming consortium list name.
	RoamingConsortium pulumi.StringPtrInput
	// Terms and conditions.
	TermsAndConditions pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Venue group. Valid values: `unspecified`, `assembly`, `business`, `educational`, `factory`, `institutional`, `mercantile`, `residential`, `storage`, `utility`, `vehicular`, `outdoor`.
	VenueGroup pulumi.StringPtrInput
	// Venue name.
	VenueName pulumi.StringPtrInput
	// Venue type. Valid values: `unspecified`, `arena`, `stadium`, `passenger-terminal`, `amphitheater`, `amusement-park`, `place-of-worship`, `convention-center`, `library`, `museum`, `restaurant`, `theater`, `bar`, `coffee-shop`, `zoo-or-aquarium`, `emergency-center`, `doctor-office`, `bank`, `fire-station`, `police-station`, `post-office`, `professional-office`, `research-facility`, `attorney-office`, `primary-school`, `secondary-school`, `university-or-college`, `factory`, `hospital`, `long-term-care-facility`, `rehab-center`, `group-home`, `prison-or-jail`, `retail-store`, `grocery-market`, `auto-service-station`, `shopping-mall`, `gas-station`, `private`, `hotel-or-motel`, `dormitory`, `boarding-house`, `automobile`, `airplane`, `bus`, `ferry`, `ship-or-boat`, `train`, `motor-bike`, `muni-mesh-network`, `city-park`, `rest-area`, `traffic-control`, `bus-stop`, `kiosk`.
	VenueType pulumi.StringPtrInput
	// Venue name.
	VenueUrl pulumi.StringPtrInput
	// WAN metric name.
	WanMetrics pulumi.StringPtrInput
	// Enable/disable wireless network management (WNM) sleep mode. Valid values: `enable`, `disable`.
	WnmSleepMode pulumi.StringPtrInput
}

func (WirelessControllerHotspot20HsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20HsProfileArgs)(nil)).Elem()
}

type WirelessControllerHotspot20HsProfileInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20HsProfileOutput() WirelessControllerHotspot20HsProfileOutput
	ToWirelessControllerHotspot20HsProfileOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileOutput
}

func (*WirelessControllerHotspot20HsProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (i *WirelessControllerHotspot20HsProfile) ToWirelessControllerHotspot20HsProfileOutput() WirelessControllerHotspot20HsProfileOutput {
	return i.ToWirelessControllerHotspot20HsProfileOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20HsProfile) ToWirelessControllerHotspot20HsProfileOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20HsProfileOutput)
}

// WirelessControllerHotspot20HsProfileArrayInput is an input type that accepts WirelessControllerHotspot20HsProfileArray and WirelessControllerHotspot20HsProfileArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20HsProfileArrayInput` via:
//
//          WirelessControllerHotspot20HsProfileArray{ WirelessControllerHotspot20HsProfileArgs{...} }
type WirelessControllerHotspot20HsProfileArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20HsProfileArrayOutput() WirelessControllerHotspot20HsProfileArrayOutput
	ToWirelessControllerHotspot20HsProfileArrayOutputWithContext(context.Context) WirelessControllerHotspot20HsProfileArrayOutput
}

type WirelessControllerHotspot20HsProfileArray []WirelessControllerHotspot20HsProfileInput

func (WirelessControllerHotspot20HsProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (i WirelessControllerHotspot20HsProfileArray) ToWirelessControllerHotspot20HsProfileArrayOutput() WirelessControllerHotspot20HsProfileArrayOutput {
	return i.ToWirelessControllerHotspot20HsProfileArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20HsProfileArray) ToWirelessControllerHotspot20HsProfileArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20HsProfileArrayOutput)
}

// WirelessControllerHotspot20HsProfileMapInput is an input type that accepts WirelessControllerHotspot20HsProfileMap and WirelessControllerHotspot20HsProfileMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20HsProfileMapInput` via:
//
//          WirelessControllerHotspot20HsProfileMap{ "key": WirelessControllerHotspot20HsProfileArgs{...} }
type WirelessControllerHotspot20HsProfileMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20HsProfileMapOutput() WirelessControllerHotspot20HsProfileMapOutput
	ToWirelessControllerHotspot20HsProfileMapOutputWithContext(context.Context) WirelessControllerHotspot20HsProfileMapOutput
}

type WirelessControllerHotspot20HsProfileMap map[string]WirelessControllerHotspot20HsProfileInput

func (WirelessControllerHotspot20HsProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (i WirelessControllerHotspot20HsProfileMap) ToWirelessControllerHotspot20HsProfileMapOutput() WirelessControllerHotspot20HsProfileMapOutput {
	return i.ToWirelessControllerHotspot20HsProfileMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20HsProfileMap) ToWirelessControllerHotspot20HsProfileMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20HsProfileMapOutput)
}

type WirelessControllerHotspot20HsProfileOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20HsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (o WirelessControllerHotspot20HsProfileOutput) ToWirelessControllerHotspot20HsProfileOutput() WirelessControllerHotspot20HsProfileOutput {
	return o
}

func (o WirelessControllerHotspot20HsProfileOutput) ToWirelessControllerHotspot20HsProfileOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileOutput {
	return o
}

type WirelessControllerHotspot20HsProfileArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20HsProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (o WirelessControllerHotspot20HsProfileArrayOutput) ToWirelessControllerHotspot20HsProfileArrayOutput() WirelessControllerHotspot20HsProfileArrayOutput {
	return o
}

func (o WirelessControllerHotspot20HsProfileArrayOutput) ToWirelessControllerHotspot20HsProfileArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileArrayOutput {
	return o
}

func (o WirelessControllerHotspot20HsProfileArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20HsProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20HsProfile {
		return vs[0].([]*WirelessControllerHotspot20HsProfile)[vs[1].(int)]
	}).(WirelessControllerHotspot20HsProfileOutput)
}

type WirelessControllerHotspot20HsProfileMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20HsProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20HsProfile)(nil)).Elem()
}

func (o WirelessControllerHotspot20HsProfileMapOutput) ToWirelessControllerHotspot20HsProfileMapOutput() WirelessControllerHotspot20HsProfileMapOutput {
	return o
}

func (o WirelessControllerHotspot20HsProfileMapOutput) ToWirelessControllerHotspot20HsProfileMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20HsProfileMapOutput {
	return o
}

func (o WirelessControllerHotspot20HsProfileMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20HsProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20HsProfile {
		return vs[0].(map[string]*WirelessControllerHotspot20HsProfile)[vs[1].(string)]
	}).(WirelessControllerHotspot20HsProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20HsProfileInput)(nil)).Elem(), &WirelessControllerHotspot20HsProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20HsProfileArrayInput)(nil)).Elem(), WirelessControllerHotspot20HsProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20HsProfileMapInput)(nil)).Elem(), WirelessControllerHotspot20HsProfileMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20HsProfileOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20HsProfileArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20HsProfileMapOutput{})
}
