// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system centralmanagement
func LookupSystemCentralManagement(ctx *pulumi.Context, args *LookupSystemCentralManagementArgs, opts ...pulumi.InvokeOption) (*LookupSystemCentralManagementResult, error) {
	var rv LookupSystemCentralManagementResult
	err := ctx.Invoke("fortios:index/getSystemCentralManagement:GetSystemCentralManagement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSystemCentralManagement.
type LookupSystemCentralManagementArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetSystemCentralManagement.
type LookupSystemCentralManagementResult struct {
	// Enable/disable allowing the central management server to remotely monitor this FortiGate
	AllowMonitor string `pulumi:"allowMonitor"`
	// Enable/disable allowing the central management server to push configuration changes to this FortiGate.
	AllowPushConfiguration string `pulumi:"allowPushConfiguration"`
	// Enable/disable allowing the central management server to push firmware updates to this FortiGate.
	AllowPushFirmware string `pulumi:"allowPushFirmware"`
	// Enable/disable remotely upgrading the firmware on this FortiGate from the central management server.
	AllowRemoteFirmwareUpgrade string `pulumi:"allowRemoteFirmwareUpgrade"`
	// CA certificate to be used by FGFM protocol.
	CaCert string `pulumi:"caCert"`
	// Encryption strength for communications between the FortiGate and central management.
	EncAlgorithm string `pulumi:"encAlgorithm"`
	// IP address or FQDN of the FortiManager.
	Fmg string `pulumi:"fmg"`
	// IPv4 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp string `pulumi:"fmgSourceIp"`
	// IPv6 source address that this FortiGate uses when communicating with FortiManager.
	FmgSourceIp6 string `pulumi:"fmgSourceIp6"`
	// Port used to communicate with FortiManager that is acting as a FortiGuard update server.
	FmgUpdatePort string `pulumi:"fmgUpdatePort"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable/disable inclusion of public FortiGuard servers in the override server list.
	IncludeDefaultServers string `pulumi:"includeDefaultServers"`
	// Specify outgoing interface to reach server.
	Interface string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server.
	InterfaceSelectMethod string `pulumi:"interfaceSelectMethod"`
	// Certificate to be used by FGFM protocol.
	LocalCert string `pulumi:"localCert"`
	// Central management mode.
	Mode string `pulumi:"mode"`
	// Enable/disable allowing the central management server to restore the configuration of this FortiGate.
	ScheduleConfigRestore string `pulumi:"scheduleConfigRestore"`
	// Enable/disable allowing the central management server to restore the scripts stored on this FortiGate.
	ScheduleScriptRestore string `pulumi:"scheduleScriptRestore"`
	// Serial number.
	SerialNumber string `pulumi:"serialNumber"`
	// Additional severs that the FortiGate can use for updates (for AV, IPS, updates) and ratings (for web filter and antispam ratings) servers. The structure of `serverList` block is documented below.
	ServerLists []GetSystemCentralManagementServerList `pulumi:"serverLists"`
	// Central management type.
	Type string `pulumi:"type"`
	// Virtual domain (VDOM) name to use when communicating with FortiManager.
	Vdom      string  `pulumi:"vdom"`
	Vdomparam *string `pulumi:"vdomparam"`
}
