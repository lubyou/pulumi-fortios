// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemIpsUrlfilterDns6 struct {
	pulumi.CustomResourceState

	Address6  pulumi.StringOutput    `pulumi:"address6"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemIpsUrlfilterDns6 registers a new resource with the given unique name, arguments, and options.
func NewSystemIpsUrlfilterDns6(ctx *pulumi.Context,
	name string, args *SystemIpsUrlfilterDns6Args, opts ...pulumi.ResourceOption) (*SystemIpsUrlfilterDns6, error) {
	if args == nil {
		args = &SystemIpsUrlfilterDns6Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemIpsUrlfilterDns6
	err := ctx.RegisterResource("fortios:index/systemIpsUrlfilterDns6:SystemIpsUrlfilterDns6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemIpsUrlfilterDns6 gets an existing SystemIpsUrlfilterDns6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemIpsUrlfilterDns6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemIpsUrlfilterDns6State, opts ...pulumi.ResourceOption) (*SystemIpsUrlfilterDns6, error) {
	var resource SystemIpsUrlfilterDns6
	err := ctx.ReadResource("fortios:index/systemIpsUrlfilterDns6:SystemIpsUrlfilterDns6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemIpsUrlfilterDns6 resources.
type systemIpsUrlfilterDns6State struct {
	Address6  *string `pulumi:"address6"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemIpsUrlfilterDns6State struct {
	Address6  pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemIpsUrlfilterDns6State) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsUrlfilterDns6State)(nil)).Elem()
}

type systemIpsUrlfilterDns6Args struct {
	Address6  *string `pulumi:"address6"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemIpsUrlfilterDns6 resource.
type SystemIpsUrlfilterDns6Args struct {
	Address6  pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemIpsUrlfilterDns6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsUrlfilterDns6Args)(nil)).Elem()
}

type SystemIpsUrlfilterDns6Input interface {
	pulumi.Input

	ToSystemIpsUrlfilterDns6Output() SystemIpsUrlfilterDns6Output
	ToSystemIpsUrlfilterDns6OutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6Output
}

func (*SystemIpsUrlfilterDns6) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (i *SystemIpsUrlfilterDns6) ToSystemIpsUrlfilterDns6Output() SystemIpsUrlfilterDns6Output {
	return i.ToSystemIpsUrlfilterDns6OutputWithContext(context.Background())
}

func (i *SystemIpsUrlfilterDns6) ToSystemIpsUrlfilterDns6OutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDns6Output)
}

func (i *SystemIpsUrlfilterDns6) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsUrlfilterDns6] {
	return pulumix.Output[*SystemIpsUrlfilterDns6]{
		OutputState: i.ToSystemIpsUrlfilterDns6OutputWithContext(ctx).OutputState,
	}
}

// SystemIpsUrlfilterDns6ArrayInput is an input type that accepts SystemIpsUrlfilterDns6Array and SystemIpsUrlfilterDns6ArrayOutput values.
// You can construct a concrete instance of `SystemIpsUrlfilterDns6ArrayInput` via:
//
//	SystemIpsUrlfilterDns6Array{ SystemIpsUrlfilterDns6Args{...} }
type SystemIpsUrlfilterDns6ArrayInput interface {
	pulumi.Input

	ToSystemIpsUrlfilterDns6ArrayOutput() SystemIpsUrlfilterDns6ArrayOutput
	ToSystemIpsUrlfilterDns6ArrayOutputWithContext(context.Context) SystemIpsUrlfilterDns6ArrayOutput
}

type SystemIpsUrlfilterDns6Array []SystemIpsUrlfilterDns6Input

func (SystemIpsUrlfilterDns6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (i SystemIpsUrlfilterDns6Array) ToSystemIpsUrlfilterDns6ArrayOutput() SystemIpsUrlfilterDns6ArrayOutput {
	return i.ToSystemIpsUrlfilterDns6ArrayOutputWithContext(context.Background())
}

func (i SystemIpsUrlfilterDns6Array) ToSystemIpsUrlfilterDns6ArrayOutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDns6ArrayOutput)
}

func (i SystemIpsUrlfilterDns6Array) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsUrlfilterDns6] {
	return pulumix.Output[[]*SystemIpsUrlfilterDns6]{
		OutputState: i.ToSystemIpsUrlfilterDns6ArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsUrlfilterDns6MapInput is an input type that accepts SystemIpsUrlfilterDns6Map and SystemIpsUrlfilterDns6MapOutput values.
// You can construct a concrete instance of `SystemIpsUrlfilterDns6MapInput` via:
//
//	SystemIpsUrlfilterDns6Map{ "key": SystemIpsUrlfilterDns6Args{...} }
type SystemIpsUrlfilterDns6MapInput interface {
	pulumi.Input

	ToSystemIpsUrlfilterDns6MapOutput() SystemIpsUrlfilterDns6MapOutput
	ToSystemIpsUrlfilterDns6MapOutputWithContext(context.Context) SystemIpsUrlfilterDns6MapOutput
}

type SystemIpsUrlfilterDns6Map map[string]SystemIpsUrlfilterDns6Input

func (SystemIpsUrlfilterDns6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (i SystemIpsUrlfilterDns6Map) ToSystemIpsUrlfilterDns6MapOutput() SystemIpsUrlfilterDns6MapOutput {
	return i.ToSystemIpsUrlfilterDns6MapOutputWithContext(context.Background())
}

func (i SystemIpsUrlfilterDns6Map) ToSystemIpsUrlfilterDns6MapOutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsUrlfilterDns6MapOutput)
}

func (i SystemIpsUrlfilterDns6Map) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsUrlfilterDns6] {
	return pulumix.Output[map[string]*SystemIpsUrlfilterDns6]{
		OutputState: i.ToSystemIpsUrlfilterDns6MapOutputWithContext(ctx).OutputState,
	}
}

type SystemIpsUrlfilterDns6Output struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDns6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (o SystemIpsUrlfilterDns6Output) ToSystemIpsUrlfilterDns6Output() SystemIpsUrlfilterDns6Output {
	return o
}

func (o SystemIpsUrlfilterDns6Output) ToSystemIpsUrlfilterDns6OutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6Output {
	return o
}

func (o SystemIpsUrlfilterDns6Output) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsUrlfilterDns6] {
	return pulumix.Output[*SystemIpsUrlfilterDns6]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDns6Output) Address6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns6) pulumi.StringOutput { return v.Address6 }).(pulumi.StringOutput)
}

func (o SystemIpsUrlfilterDns6Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns6) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemIpsUrlfilterDns6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIpsUrlfilterDns6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemIpsUrlfilterDns6ArrayOutput struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDns6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (o SystemIpsUrlfilterDns6ArrayOutput) ToSystemIpsUrlfilterDns6ArrayOutput() SystemIpsUrlfilterDns6ArrayOutput {
	return o
}

func (o SystemIpsUrlfilterDns6ArrayOutput) ToSystemIpsUrlfilterDns6ArrayOutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6ArrayOutput {
	return o
}

func (o SystemIpsUrlfilterDns6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsUrlfilterDns6] {
	return pulumix.Output[[]*SystemIpsUrlfilterDns6]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDns6ArrayOutput) Index(i pulumi.IntInput) SystemIpsUrlfilterDns6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemIpsUrlfilterDns6 {
		return vs[0].([]*SystemIpsUrlfilterDns6)[vs[1].(int)]
	}).(SystemIpsUrlfilterDns6Output)
}

type SystemIpsUrlfilterDns6MapOutput struct{ *pulumi.OutputState }

func (SystemIpsUrlfilterDns6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsUrlfilterDns6)(nil)).Elem()
}

func (o SystemIpsUrlfilterDns6MapOutput) ToSystemIpsUrlfilterDns6MapOutput() SystemIpsUrlfilterDns6MapOutput {
	return o
}

func (o SystemIpsUrlfilterDns6MapOutput) ToSystemIpsUrlfilterDns6MapOutputWithContext(ctx context.Context) SystemIpsUrlfilterDns6MapOutput {
	return o
}

func (o SystemIpsUrlfilterDns6MapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsUrlfilterDns6] {
	return pulumix.Output[map[string]*SystemIpsUrlfilterDns6]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsUrlfilterDns6MapOutput) MapIndex(k pulumi.StringInput) SystemIpsUrlfilterDns6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemIpsUrlfilterDns6 {
		return vs[0].(map[string]*SystemIpsUrlfilterDns6)[vs[1].(string)]
	}).(SystemIpsUrlfilterDns6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDns6Input)(nil)).Elem(), &SystemIpsUrlfilterDns6{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDns6ArrayInput)(nil)).Elem(), SystemIpsUrlfilterDns6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsUrlfilterDns6MapInput)(nil)).Elem(), SystemIpsUrlfilterDns6Map{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDns6Output{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDns6ArrayOutput{})
	pulumi.RegisterOutputType(SystemIpsUrlfilterDns6MapOutput{})
}
