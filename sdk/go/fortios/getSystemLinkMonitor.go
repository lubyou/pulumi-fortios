// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios system linkmonitor
func LookupSystemLinkMonitor(ctx *pulumi.Context, args *LookupSystemLinkMonitorArgs, opts ...pulumi.InvokeOption) (*LookupSystemLinkMonitorResult, error) {
	var rv LookupSystemLinkMonitorResult
	err := ctx.Invoke("fortios:index/getSystemLinkMonitor:GetSystemLinkMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSystemLinkMonitor.
type LookupSystemLinkMonitorArgs struct {
	// Specify the name of the desired system linkmonitor.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetSystemLinkMonitor.
type LookupSystemLinkMonitorResult struct {
	// Address mode (IPv4 or IPv6).
	AddrMode string `pulumi:"addrMode"`
	// Number of retry attempts before the server is considered down (1 - 10, default = 5)
	Failtime int `pulumi:"failtime"`
	// Gateway IP address used to probe the server.
	GatewayIp string `pulumi:"gatewayIp"`
	// Gateway IPv6 address used to probe the server.
	GatewayIp6 string `pulumi:"gatewayIp6"`
	// HA election priority (1 - 50).
	HaPriority int `pulumi:"haPriority"`
	// String in the http-agent field in the HTTP header.
	HttpAgent string `pulumi:"httpAgent"`
	// If you are monitoring an HTML server you can send an HTTP-GET request with a custom string. Use this option to define the string.
	HttpGet string `pulumi:"httpGet"`
	// String that you expect to see in the HTTP-GET requests of the traffic to be monitored.
	HttpMatch string `pulumi:"httpMatch"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Detection interval (1 - 3600 sec, default = 5).
	Interval int `pulumi:"interval"`
	// Link monitor name.
	Name string `pulumi:"name"`
	// Packet size of a twamp test session,
	PacketSize int `pulumi:"packetSize"`
	// Twamp controller password in authentication mode
	Password string `pulumi:"password"`
	// Port number of the traffic to be used to monitor the server.
	Port int `pulumi:"port"`
	// Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
	ProbeCount int `pulumi:"probeCount"`
	// Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
	ProbeTimeout int `pulumi:"probeTimeout"`
	// Protocols used to monitor the server.
	Protocol string `pulumi:"protocol"`
	// Number of successful responses received before server is considered recovered (1 - 10, default = 5).
	Recoverytime int `pulumi:"recoverytime"`
	// Twamp controller security mode.
	SecurityMode string `pulumi:"securityMode"`
	// IP address of the server(s) to be monitored. The structure of `server` block is documented below.
	Servers []GetSystemLinkMonitorServer `pulumi:"servers"`
	// Source IP address used in packet to the server.
	SourceIp string `pulumi:"sourceIp"`
	// Source IPv6 address used in packet to the server.
	SourceIp6 string `pulumi:"sourceIp6"`
	// Interface that receives the traffic to be monitored.
	Srcintf string `pulumi:"srcintf"`
	// Enable/disable this link monitor.
	Status string `pulumi:"status"`
	// Enable/disable update cascade interface.
	UpdateCascadeInterface string `pulumi:"updateCascadeInterface"`
	// Enable/disable updating the static route.
	UpdateStaticRoute string  `pulumi:"updateStaticRoute"`
	Vdomparam         *string `pulumi:"vdomparam"`
}
