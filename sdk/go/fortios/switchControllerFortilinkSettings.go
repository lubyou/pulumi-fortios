// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerFortilinkSettings struct {
	pulumi.CustomResourceState

	Fortilink     pulumi.StringOutput                             `pulumi:"fortilink"`
	GetAllTables  pulumi.StringPtrOutput                          `pulumi:"getAllTables"`
	InactiveTimer pulumi.IntOutput                                `pulumi:"inactiveTimer"`
	LinkDownFlush pulumi.StringOutput                             `pulumi:"linkDownFlush"`
	NacPorts      SwitchControllerFortilinkSettingsNacPortsOutput `pulumi:"nacPorts"`
	Name          pulumi.StringOutput                             `pulumi:"name"`
	Vdomparam     pulumi.StringPtrOutput                          `pulumi:"vdomparam"`
}

// NewSwitchControllerFortilinkSettings registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerFortilinkSettings(ctx *pulumi.Context,
	name string, args *SwitchControllerFortilinkSettingsArgs, opts ...pulumi.ResourceOption) (*SwitchControllerFortilinkSettings, error) {
	if args == nil {
		args = &SwitchControllerFortilinkSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerFortilinkSettings
	err := ctx.RegisterResource("fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerFortilinkSettings gets an existing SwitchControllerFortilinkSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerFortilinkSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerFortilinkSettingsState, opts ...pulumi.ResourceOption) (*SwitchControllerFortilinkSettings, error) {
	var resource SwitchControllerFortilinkSettings
	err := ctx.ReadResource("fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerFortilinkSettings resources.
type switchControllerFortilinkSettingsState struct {
	Fortilink     *string                                    `pulumi:"fortilink"`
	GetAllTables  *string                                    `pulumi:"getAllTables"`
	InactiveTimer *int                                       `pulumi:"inactiveTimer"`
	LinkDownFlush *string                                    `pulumi:"linkDownFlush"`
	NacPorts      *SwitchControllerFortilinkSettingsNacPorts `pulumi:"nacPorts"`
	Name          *string                                    `pulumi:"name"`
	Vdomparam     *string                                    `pulumi:"vdomparam"`
}

type SwitchControllerFortilinkSettingsState struct {
	Fortilink     pulumi.StringPtrInput
	GetAllTables  pulumi.StringPtrInput
	InactiveTimer pulumi.IntPtrInput
	LinkDownFlush pulumi.StringPtrInput
	NacPorts      SwitchControllerFortilinkSettingsNacPortsPtrInput
	Name          pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (SwitchControllerFortilinkSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFortilinkSettingsState)(nil)).Elem()
}

type switchControllerFortilinkSettingsArgs struct {
	Fortilink     *string                                    `pulumi:"fortilink"`
	GetAllTables  *string                                    `pulumi:"getAllTables"`
	InactiveTimer *int                                       `pulumi:"inactiveTimer"`
	LinkDownFlush *string                                    `pulumi:"linkDownFlush"`
	NacPorts      *SwitchControllerFortilinkSettingsNacPorts `pulumi:"nacPorts"`
	Name          *string                                    `pulumi:"name"`
	Vdomparam     *string                                    `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerFortilinkSettings resource.
type SwitchControllerFortilinkSettingsArgs struct {
	Fortilink     pulumi.StringPtrInput
	GetAllTables  pulumi.StringPtrInput
	InactiveTimer pulumi.IntPtrInput
	LinkDownFlush pulumi.StringPtrInput
	NacPorts      SwitchControllerFortilinkSettingsNacPortsPtrInput
	Name          pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (SwitchControllerFortilinkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFortilinkSettingsArgs)(nil)).Elem()
}

type SwitchControllerFortilinkSettingsInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput
	ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput
}

func (*SwitchControllerFortilinkSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i *SwitchControllerFortilinkSettings) ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput {
	return i.ToSwitchControllerFortilinkSettingsOutputWithContext(context.Background())
}

func (i *SwitchControllerFortilinkSettings) ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsOutput)
}

// SwitchControllerFortilinkSettingsArrayInput is an input type that accepts SwitchControllerFortilinkSettingsArray and SwitchControllerFortilinkSettingsArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsArrayInput` via:
//
//	SwitchControllerFortilinkSettingsArray{ SwitchControllerFortilinkSettingsArgs{...} }
type SwitchControllerFortilinkSettingsArrayInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput
	ToSwitchControllerFortilinkSettingsArrayOutputWithContext(context.Context) SwitchControllerFortilinkSettingsArrayOutput
}

type SwitchControllerFortilinkSettingsArray []SwitchControllerFortilinkSettingsInput

func (SwitchControllerFortilinkSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsArray) ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput {
	return i.ToSwitchControllerFortilinkSettingsArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsArray) ToSwitchControllerFortilinkSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsArrayOutput)
}

// SwitchControllerFortilinkSettingsMapInput is an input type that accepts SwitchControllerFortilinkSettingsMap and SwitchControllerFortilinkSettingsMapOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsMapInput` via:
//
//	SwitchControllerFortilinkSettingsMap{ "key": SwitchControllerFortilinkSettingsArgs{...} }
type SwitchControllerFortilinkSettingsMapInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput
	ToSwitchControllerFortilinkSettingsMapOutputWithContext(context.Context) SwitchControllerFortilinkSettingsMapOutput
}

type SwitchControllerFortilinkSettingsMap map[string]SwitchControllerFortilinkSettingsInput

func (SwitchControllerFortilinkSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsMap) ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput {
	return i.ToSwitchControllerFortilinkSettingsMapOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsMap) ToSwitchControllerFortilinkSettingsMapOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsMapOutput)
}

type SwitchControllerFortilinkSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsOutput) ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsOutput) ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsOutput) Fortilink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.StringOutput { return v.Fortilink }).(pulumi.StringOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) InactiveTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.IntOutput { return v.InactiveTimer }).(pulumi.IntOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) LinkDownFlush() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.StringOutput { return v.LinkDownFlush }).(pulumi.StringOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) NacPorts() SwitchControllerFortilinkSettingsNacPortsOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) SwitchControllerFortilinkSettingsNacPortsOutput {
		return v.NacPorts
	}).(SwitchControllerFortilinkSettingsNacPortsOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerFortilinkSettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerFortilinkSettingsArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsArrayOutput) ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsArrayOutput) ToSwitchControllerFortilinkSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsArrayOutput) Index(i pulumi.IntInput) SwitchControllerFortilinkSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerFortilinkSettings {
		return vs[0].([]*SwitchControllerFortilinkSettings)[vs[1].(int)]
	}).(SwitchControllerFortilinkSettingsOutput)
}

type SwitchControllerFortilinkSettingsMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsMapOutput) ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsMapOutput) ToSwitchControllerFortilinkSettingsMapOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsMapOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerFortilinkSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerFortilinkSettings {
		return vs[0].(map[string]*SwitchControllerFortilinkSettings)[vs[1].(string)]
	}).(SwitchControllerFortilinkSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsInput)(nil)).Elem(), &SwitchControllerFortilinkSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsArrayInput)(nil)).Elem(), SwitchControllerFortilinkSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsMapInput)(nil)).Elem(), SwitchControllerFortilinkSettingsMap{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsMapOutput{})
}
