// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure integrated FortiLink settings for FortiSwitch. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// SwitchController FortilinkSettings can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerFortilinkSettings struct {
	pulumi.CustomResourceState

	// FortiLink interface to which this fortilink-setting belongs.
	Fortilink pulumi.StringOutput `pulumi:"fortilink"`
	// Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
	InactiveTimer pulumi.IntOutput `pulumi:"inactiveTimer"`
	// Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
	LinkDownFlush pulumi.StringOutput `pulumi:"linkDownFlush"`
	// NAC specific configuration. The structure of `nacPorts` block is documented below.
	NacPorts SwitchControllerFortilinkSettingsNacPortsPtrOutput `pulumi:"nacPorts"`
	// FortiLink settings name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerFortilinkSettings registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerFortilinkSettings(ctx *pulumi.Context,
	name string, args *SwitchControllerFortilinkSettingsArgs, opts ...pulumi.ResourceOption) (*SwitchControllerFortilinkSettings, error) {
	if args == nil {
		args = &SwitchControllerFortilinkSettingsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerFortilinkSettings
	err := ctx.RegisterResource("fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerFortilinkSettings gets an existing SwitchControllerFortilinkSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerFortilinkSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerFortilinkSettingsState, opts ...pulumi.ResourceOption) (*SwitchControllerFortilinkSettings, error) {
	var resource SwitchControllerFortilinkSettings
	err := ctx.ReadResource("fortios:index/switchControllerFortilinkSettings:SwitchControllerFortilinkSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerFortilinkSettings resources.
type switchControllerFortilinkSettingsState struct {
	// FortiLink interface to which this fortilink-setting belongs.
	Fortilink *string `pulumi:"fortilink"`
	// Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
	InactiveTimer *int `pulumi:"inactiveTimer"`
	// Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
	LinkDownFlush *string `pulumi:"linkDownFlush"`
	// NAC specific configuration. The structure of `nacPorts` block is documented below.
	NacPorts *SwitchControllerFortilinkSettingsNacPorts `pulumi:"nacPorts"`
	// FortiLink settings name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchControllerFortilinkSettingsState struct {
	// FortiLink interface to which this fortilink-setting belongs.
	Fortilink pulumi.StringPtrInput
	// Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
	InactiveTimer pulumi.IntPtrInput
	// Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
	LinkDownFlush pulumi.StringPtrInput
	// NAC specific configuration. The structure of `nacPorts` block is documented below.
	NacPorts SwitchControllerFortilinkSettingsNacPortsPtrInput
	// FortiLink settings name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerFortilinkSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFortilinkSettingsState)(nil)).Elem()
}

type switchControllerFortilinkSettingsArgs struct {
	// FortiLink interface to which this fortilink-setting belongs.
	Fortilink *string `pulumi:"fortilink"`
	// Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
	InactiveTimer *int `pulumi:"inactiveTimer"`
	// Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
	LinkDownFlush *string `pulumi:"linkDownFlush"`
	// NAC specific configuration. The structure of `nacPorts` block is documented below.
	NacPorts *SwitchControllerFortilinkSettingsNacPorts `pulumi:"nacPorts"`
	// FortiLink settings name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerFortilinkSettings resource.
type SwitchControllerFortilinkSettingsArgs struct {
	// FortiLink interface to which this fortilink-setting belongs.
	Fortilink pulumi.StringPtrInput
	// Time interval(minutes) to be included in the inactive devices expiry calculation (mac age-out + inactive-time + periodic scan interval).
	InactiveTimer pulumi.IntPtrInput
	// Clear NAC and dynamic devices on switch ports on link down event. Valid values: `disable`, `enable`.
	LinkDownFlush pulumi.StringPtrInput
	// NAC specific configuration. The structure of `nacPorts` block is documented below.
	NacPorts SwitchControllerFortilinkSettingsNacPortsPtrInput
	// FortiLink settings name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerFortilinkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerFortilinkSettingsArgs)(nil)).Elem()
}

type SwitchControllerFortilinkSettingsInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput
	ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput
}

func (*SwitchControllerFortilinkSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i *SwitchControllerFortilinkSettings) ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput {
	return i.ToSwitchControllerFortilinkSettingsOutputWithContext(context.Background())
}

func (i *SwitchControllerFortilinkSettings) ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsOutput)
}

// SwitchControllerFortilinkSettingsArrayInput is an input type that accepts SwitchControllerFortilinkSettingsArray and SwitchControllerFortilinkSettingsArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsArrayInput` via:
//
//          SwitchControllerFortilinkSettingsArray{ SwitchControllerFortilinkSettingsArgs{...} }
type SwitchControllerFortilinkSettingsArrayInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput
	ToSwitchControllerFortilinkSettingsArrayOutputWithContext(context.Context) SwitchControllerFortilinkSettingsArrayOutput
}

type SwitchControllerFortilinkSettingsArray []SwitchControllerFortilinkSettingsInput

func (SwitchControllerFortilinkSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsArray) ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput {
	return i.ToSwitchControllerFortilinkSettingsArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsArray) ToSwitchControllerFortilinkSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsArrayOutput)
}

// SwitchControllerFortilinkSettingsMapInput is an input type that accepts SwitchControllerFortilinkSettingsMap and SwitchControllerFortilinkSettingsMapOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsMapInput` via:
//
//          SwitchControllerFortilinkSettingsMap{ "key": SwitchControllerFortilinkSettingsArgs{...} }
type SwitchControllerFortilinkSettingsMapInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput
	ToSwitchControllerFortilinkSettingsMapOutputWithContext(context.Context) SwitchControllerFortilinkSettingsMapOutput
}

type SwitchControllerFortilinkSettingsMap map[string]SwitchControllerFortilinkSettingsInput

func (SwitchControllerFortilinkSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsMap) ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput {
	return i.ToSwitchControllerFortilinkSettingsMapOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsMap) ToSwitchControllerFortilinkSettingsMapOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsMapOutput)
}

type SwitchControllerFortilinkSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsOutput) ToSwitchControllerFortilinkSettingsOutput() SwitchControllerFortilinkSettingsOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsOutput) ToSwitchControllerFortilinkSettingsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsOutput {
	return o
}

type SwitchControllerFortilinkSettingsArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsArrayOutput) ToSwitchControllerFortilinkSettingsArrayOutput() SwitchControllerFortilinkSettingsArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsArrayOutput) ToSwitchControllerFortilinkSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsArrayOutput) Index(i pulumi.IntInput) SwitchControllerFortilinkSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerFortilinkSettings {
		return vs[0].([]*SwitchControllerFortilinkSettings)[vs[1].(int)]
	}).(SwitchControllerFortilinkSettingsOutput)
}

type SwitchControllerFortilinkSettingsMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerFortilinkSettings)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsMapOutput) ToSwitchControllerFortilinkSettingsMapOutput() SwitchControllerFortilinkSettingsMapOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsMapOutput) ToSwitchControllerFortilinkSettingsMapOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsMapOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerFortilinkSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerFortilinkSettings {
		return vs[0].(map[string]*SwitchControllerFortilinkSettings)[vs[1].(string)]
	}).(SwitchControllerFortilinkSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsInput)(nil)).Elem(), &SwitchControllerFortilinkSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsArrayInput)(nil)).Elem(), SwitchControllerFortilinkSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsMapInput)(nil)).Elem(), SwitchControllerFortilinkSettingsMap{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsMapOutput{})
}
