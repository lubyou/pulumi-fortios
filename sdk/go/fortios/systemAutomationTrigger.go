// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Trigger for automation stitches.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemAutomationTrigger(ctx, "trname", &fortios.SystemAutomationTriggerArgs{
// 			EventType:        pulumi.String("event-log"),
// 			IocLevel:         pulumi.String("high"),
// 			LicenseType:      pulumi.String("forticare-support"),
// 			Logid:            pulumi.Int(32002),
// 			TriggerFrequency: pulumi.String("daily"),
// 			TriggerMinute:    pulumi.Int(60),
// 			TriggerType:      pulumi.String("event-based"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System AutomationTrigger can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemAutomationTrigger:SystemAutomationTrigger labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemAutomationTrigger struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Event type.
	EventType pulumi.StringOutput `pulumi:"eventType"`
	// FortiAnalyzer event handler name.
	FazEventName pulumi.StringPtrOutput `pulumi:"fazEventName"`
	// FortiAnalyzer event severity.
	FazEventSeverity pulumi.StringPtrOutput `pulumi:"fazEventSeverity"`
	// FortiAnalyzer event tags.
	FazEventTags pulumi.StringPtrOutput `pulumi:"fazEventTags"`
	// Customized trigger field settings. The structure of `fields` block is documented below.
	Fields SystemAutomationTriggerFieldArrayOutput `pulumi:"fields"`
	// IOC threat level. Valid values: `medium`, `high`.
	IocLevel pulumi.StringOutput `pulumi:"iocLevel"`
	// License type.
	LicenseType pulumi.StringOutput `pulumi:"licenseType"`
	// Log ID to trigger event.
	Logid pulumi.IntOutput `pulumi:"logid"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
	ReportType pulumi.StringOutput `pulumi:"reportType"`
	// Day within a month to trigger.
	TriggerDay pulumi.IntOutput `pulumi:"triggerDay"`
	// Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
	TriggerFrequency pulumi.StringOutput `pulumi:"triggerFrequency"`
	// Hour of the day on which to trigger (0 - 23, default = 1).
	TriggerHour pulumi.IntOutput `pulumi:"triggerHour"`
	// Minute of the hour on which to trigger (0 - 59, 60 to randomize).
	TriggerMinute pulumi.IntOutput `pulumi:"triggerMinute"`
	// Trigger type. Valid values: `event-based`, `scheduled`.
	TriggerType pulumi.StringOutput `pulumi:"triggerType"`
	// Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	TriggerWeekday pulumi.StringOutput `pulumi:"triggerWeekday"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemAutomationTrigger registers a new resource with the given unique name, arguments, and options.
func NewSystemAutomationTrigger(ctx *pulumi.Context,
	name string, args *SystemAutomationTriggerArgs, opts ...pulumi.ResourceOption) (*SystemAutomationTrigger, error) {
	if args == nil {
		args = &SystemAutomationTriggerArgs{}
	}

	var resource SystemAutomationTrigger
	err := ctx.RegisterResource("fortios:index/systemAutomationTrigger:SystemAutomationTrigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAutomationTrigger gets an existing SystemAutomationTrigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAutomationTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAutomationTriggerState, opts ...pulumi.ResourceOption) (*SystemAutomationTrigger, error) {
	var resource SystemAutomationTrigger
	err := ctx.ReadResource("fortios:index/systemAutomationTrigger:SystemAutomationTrigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAutomationTrigger resources.
type systemAutomationTriggerState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Event type.
	EventType *string `pulumi:"eventType"`
	// FortiAnalyzer event handler name.
	FazEventName *string `pulumi:"fazEventName"`
	// FortiAnalyzer event severity.
	FazEventSeverity *string `pulumi:"fazEventSeverity"`
	// FortiAnalyzer event tags.
	FazEventTags *string `pulumi:"fazEventTags"`
	// Customized trigger field settings. The structure of `fields` block is documented below.
	Fields []SystemAutomationTriggerField `pulumi:"fields"`
	// IOC threat level. Valid values: `medium`, `high`.
	IocLevel *string `pulumi:"iocLevel"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// Log ID to trigger event.
	Logid *int `pulumi:"logid"`
	// Name.
	Name *string `pulumi:"name"`
	// Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
	ReportType *string `pulumi:"reportType"`
	// Day within a month to trigger.
	TriggerDay *int `pulumi:"triggerDay"`
	// Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
	TriggerFrequency *string `pulumi:"triggerFrequency"`
	// Hour of the day on which to trigger (0 - 23, default = 1).
	TriggerHour *int `pulumi:"triggerHour"`
	// Minute of the hour on which to trigger (0 - 59, 60 to randomize).
	TriggerMinute *int `pulumi:"triggerMinute"`
	// Trigger type. Valid values: `event-based`, `scheduled`.
	TriggerType *string `pulumi:"triggerType"`
	// Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	TriggerWeekday *string `pulumi:"triggerWeekday"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemAutomationTriggerState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Event type.
	EventType pulumi.StringPtrInput
	// FortiAnalyzer event handler name.
	FazEventName pulumi.StringPtrInput
	// FortiAnalyzer event severity.
	FazEventSeverity pulumi.StringPtrInput
	// FortiAnalyzer event tags.
	FazEventTags pulumi.StringPtrInput
	// Customized trigger field settings. The structure of `fields` block is documented below.
	Fields SystemAutomationTriggerFieldArrayInput
	// IOC threat level. Valid values: `medium`, `high`.
	IocLevel pulumi.StringPtrInput
	// License type.
	LicenseType pulumi.StringPtrInput
	// Log ID to trigger event.
	Logid pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
	ReportType pulumi.StringPtrInput
	// Day within a month to trigger.
	TriggerDay pulumi.IntPtrInput
	// Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
	TriggerFrequency pulumi.StringPtrInput
	// Hour of the day on which to trigger (0 - 23, default = 1).
	TriggerHour pulumi.IntPtrInput
	// Minute of the hour on which to trigger (0 - 59, 60 to randomize).
	TriggerMinute pulumi.IntPtrInput
	// Trigger type. Valid values: `event-based`, `scheduled`.
	TriggerType pulumi.StringPtrInput
	// Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	TriggerWeekday pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutomationTriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutomationTriggerState)(nil)).Elem()
}

type systemAutomationTriggerArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Event type.
	EventType *string `pulumi:"eventType"`
	// FortiAnalyzer event handler name.
	FazEventName *string `pulumi:"fazEventName"`
	// FortiAnalyzer event severity.
	FazEventSeverity *string `pulumi:"fazEventSeverity"`
	// FortiAnalyzer event tags.
	FazEventTags *string `pulumi:"fazEventTags"`
	// Customized trigger field settings. The structure of `fields` block is documented below.
	Fields []SystemAutomationTriggerField `pulumi:"fields"`
	// IOC threat level. Valid values: `medium`, `high`.
	IocLevel *string `pulumi:"iocLevel"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// Log ID to trigger event.
	Logid *int `pulumi:"logid"`
	// Name.
	Name *string `pulumi:"name"`
	// Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
	ReportType *string `pulumi:"reportType"`
	// Day within a month to trigger.
	TriggerDay *int `pulumi:"triggerDay"`
	// Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
	TriggerFrequency *string `pulumi:"triggerFrequency"`
	// Hour of the day on which to trigger (0 - 23, default = 1).
	TriggerHour *int `pulumi:"triggerHour"`
	// Minute of the hour on which to trigger (0 - 59, 60 to randomize).
	TriggerMinute *int `pulumi:"triggerMinute"`
	// Trigger type. Valid values: `event-based`, `scheduled`.
	TriggerType *string `pulumi:"triggerType"`
	// Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	TriggerWeekday *string `pulumi:"triggerWeekday"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemAutomationTrigger resource.
type SystemAutomationTriggerArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Event type.
	EventType pulumi.StringPtrInput
	// FortiAnalyzer event handler name.
	FazEventName pulumi.StringPtrInput
	// FortiAnalyzer event severity.
	FazEventSeverity pulumi.StringPtrInput
	// FortiAnalyzer event tags.
	FazEventTags pulumi.StringPtrInput
	// Customized trigger field settings. The structure of `fields` block is documented below.
	Fields SystemAutomationTriggerFieldArrayInput
	// IOC threat level. Valid values: `medium`, `high`.
	IocLevel pulumi.StringPtrInput
	// License type.
	LicenseType pulumi.StringPtrInput
	// Log ID to trigger event.
	Logid pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
	ReportType pulumi.StringPtrInput
	// Day within a month to trigger.
	TriggerDay pulumi.IntPtrInput
	// Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
	TriggerFrequency pulumi.StringPtrInput
	// Hour of the day on which to trigger (0 - 23, default = 1).
	TriggerHour pulumi.IntPtrInput
	// Minute of the hour on which to trigger (0 - 59, 60 to randomize).
	TriggerMinute pulumi.IntPtrInput
	// Trigger type. Valid values: `event-based`, `scheduled`.
	TriggerType pulumi.StringPtrInput
	// Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	TriggerWeekday pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutomationTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutomationTriggerArgs)(nil)).Elem()
}

type SystemAutomationTriggerInput interface {
	pulumi.Input

	ToSystemAutomationTriggerOutput() SystemAutomationTriggerOutput
	ToSystemAutomationTriggerOutputWithContext(ctx context.Context) SystemAutomationTriggerOutput
}

func (*SystemAutomationTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTrigger)(nil))
}

func (i *SystemAutomationTrigger) ToSystemAutomationTriggerOutput() SystemAutomationTriggerOutput {
	return i.ToSystemAutomationTriggerOutputWithContext(context.Background())
}

func (i *SystemAutomationTrigger) ToSystemAutomationTriggerOutputWithContext(ctx context.Context) SystemAutomationTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerOutput)
}

func (i *SystemAutomationTrigger) ToSystemAutomationTriggerPtrOutput() SystemAutomationTriggerPtrOutput {
	return i.ToSystemAutomationTriggerPtrOutputWithContext(context.Background())
}

func (i *SystemAutomationTrigger) ToSystemAutomationTriggerPtrOutputWithContext(ctx context.Context) SystemAutomationTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerPtrOutput)
}

type SystemAutomationTriggerPtrInput interface {
	pulumi.Input

	ToSystemAutomationTriggerPtrOutput() SystemAutomationTriggerPtrOutput
	ToSystemAutomationTriggerPtrOutputWithContext(ctx context.Context) SystemAutomationTriggerPtrOutput
}

type systemAutomationTriggerPtrType SystemAutomationTriggerArgs

func (*systemAutomationTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutomationTrigger)(nil))
}

func (i *systemAutomationTriggerPtrType) ToSystemAutomationTriggerPtrOutput() SystemAutomationTriggerPtrOutput {
	return i.ToSystemAutomationTriggerPtrOutputWithContext(context.Background())
}

func (i *systemAutomationTriggerPtrType) ToSystemAutomationTriggerPtrOutputWithContext(ctx context.Context) SystemAutomationTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerPtrOutput)
}

// SystemAutomationTriggerArrayInput is an input type that accepts SystemAutomationTriggerArray and SystemAutomationTriggerArrayOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerArrayInput` via:
//
//          SystemAutomationTriggerArray{ SystemAutomationTriggerArgs{...} }
type SystemAutomationTriggerArrayInput interface {
	pulumi.Input

	ToSystemAutomationTriggerArrayOutput() SystemAutomationTriggerArrayOutput
	ToSystemAutomationTriggerArrayOutputWithContext(context.Context) SystemAutomationTriggerArrayOutput
}

type SystemAutomationTriggerArray []SystemAutomationTriggerInput

func (SystemAutomationTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemAutomationTrigger)(nil))
}

func (i SystemAutomationTriggerArray) ToSystemAutomationTriggerArrayOutput() SystemAutomationTriggerArrayOutput {
	return i.ToSystemAutomationTriggerArrayOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerArray) ToSystemAutomationTriggerArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerArrayOutput)
}

// SystemAutomationTriggerMapInput is an input type that accepts SystemAutomationTriggerMap and SystemAutomationTriggerMapOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerMapInput` via:
//
//          SystemAutomationTriggerMap{ "key": SystemAutomationTriggerArgs{...} }
type SystemAutomationTriggerMapInput interface {
	pulumi.Input

	ToSystemAutomationTriggerMapOutput() SystemAutomationTriggerMapOutput
	ToSystemAutomationTriggerMapOutputWithContext(context.Context) SystemAutomationTriggerMapOutput
}

type SystemAutomationTriggerMap map[string]SystemAutomationTriggerInput

func (SystemAutomationTriggerMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemAutomationTrigger)(nil))
}

func (i SystemAutomationTriggerMap) ToSystemAutomationTriggerMapOutput() SystemAutomationTriggerMapOutput {
	return i.ToSystemAutomationTriggerMapOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerMap) ToSystemAutomationTriggerMapOutputWithContext(ctx context.Context) SystemAutomationTriggerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerMapOutput)
}

type SystemAutomationTriggerOutput struct {
	*pulumi.OutputState
}

func (SystemAutomationTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTrigger)(nil))
}

func (o SystemAutomationTriggerOutput) ToSystemAutomationTriggerOutput() SystemAutomationTriggerOutput {
	return o
}

func (o SystemAutomationTriggerOutput) ToSystemAutomationTriggerOutputWithContext(ctx context.Context) SystemAutomationTriggerOutput {
	return o
}

func (o SystemAutomationTriggerOutput) ToSystemAutomationTriggerPtrOutput() SystemAutomationTriggerPtrOutput {
	return o.ToSystemAutomationTriggerPtrOutputWithContext(context.Background())
}

func (o SystemAutomationTriggerOutput) ToSystemAutomationTriggerPtrOutputWithContext(ctx context.Context) SystemAutomationTriggerPtrOutput {
	return o.ApplyT(func(v SystemAutomationTrigger) *SystemAutomationTrigger {
		return &v
	}).(SystemAutomationTriggerPtrOutput)
}

type SystemAutomationTriggerPtrOutput struct {
	*pulumi.OutputState
}

func (SystemAutomationTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutomationTrigger)(nil))
}

func (o SystemAutomationTriggerPtrOutput) ToSystemAutomationTriggerPtrOutput() SystemAutomationTriggerPtrOutput {
	return o
}

func (o SystemAutomationTriggerPtrOutput) ToSystemAutomationTriggerPtrOutputWithContext(ctx context.Context) SystemAutomationTriggerPtrOutput {
	return o
}

type SystemAutomationTriggerArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTrigger)(nil))
}

func (o SystemAutomationTriggerArrayOutput) ToSystemAutomationTriggerArrayOutput() SystemAutomationTriggerArrayOutput {
	return o
}

func (o SystemAutomationTriggerArrayOutput) ToSystemAutomationTriggerArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerArrayOutput {
	return o
}

func (o SystemAutomationTriggerArrayOutput) Index(i pulumi.IntInput) SystemAutomationTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationTrigger {
		return vs[0].([]SystemAutomationTrigger)[vs[1].(int)]
	}).(SystemAutomationTriggerOutput)
}

type SystemAutomationTriggerMapOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemAutomationTrigger)(nil))
}

func (o SystemAutomationTriggerMapOutput) ToSystemAutomationTriggerMapOutput() SystemAutomationTriggerMapOutput {
	return o
}

func (o SystemAutomationTriggerMapOutput) ToSystemAutomationTriggerMapOutputWithContext(ctx context.Context) SystemAutomationTriggerMapOutput {
	return o
}

func (o SystemAutomationTriggerMapOutput) MapIndex(k pulumi.StringInput) SystemAutomationTriggerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemAutomationTrigger {
		return vs[0].(map[string]SystemAutomationTrigger)[vs[1].(string)]
	}).(SystemAutomationTriggerOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemAutomationTriggerOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerPtrOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerMapOutput{})
}
