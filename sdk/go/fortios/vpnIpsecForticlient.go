// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type VpnIpsecForticlient struct {
	pulumi.CustomResourceState

	Phase2name    pulumi.StringOutput    `pulumi:"phase2name"`
	Realm         pulumi.StringOutput    `pulumi:"realm"`
	Status        pulumi.StringOutput    `pulumi:"status"`
	Usergroupname pulumi.StringOutput    `pulumi:"usergroupname"`
	Vdomparam     pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVpnIpsecForticlient registers a new resource with the given unique name, arguments, and options.
func NewVpnIpsecForticlient(ctx *pulumi.Context,
	name string, args *VpnIpsecForticlientArgs, opts ...pulumi.ResourceOption) (*VpnIpsecForticlient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Phase2name == nil {
		return nil, errors.New("invalid value for required argument 'Phase2name'")
	}
	if args.Usergroupname == nil {
		return nil, errors.New("invalid value for required argument 'Usergroupname'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnIpsecForticlient
	err := ctx.RegisterResource("fortios:index/vpnIpsecForticlient:VpnIpsecForticlient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnIpsecForticlient gets an existing VpnIpsecForticlient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnIpsecForticlient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnIpsecForticlientState, opts ...pulumi.ResourceOption) (*VpnIpsecForticlient, error) {
	var resource VpnIpsecForticlient
	err := ctx.ReadResource("fortios:index/vpnIpsecForticlient:VpnIpsecForticlient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnIpsecForticlient resources.
type vpnIpsecForticlientState struct {
	Phase2name    *string `pulumi:"phase2name"`
	Realm         *string `pulumi:"realm"`
	Status        *string `pulumi:"status"`
	Usergroupname *string `pulumi:"usergroupname"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

type VpnIpsecForticlientState struct {
	Phase2name    pulumi.StringPtrInput
	Realm         pulumi.StringPtrInput
	Status        pulumi.StringPtrInput
	Usergroupname pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (VpnIpsecForticlientState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecForticlientState)(nil)).Elem()
}

type vpnIpsecForticlientArgs struct {
	Phase2name    string  `pulumi:"phase2name"`
	Realm         *string `pulumi:"realm"`
	Status        *string `pulumi:"status"`
	Usergroupname string  `pulumi:"usergroupname"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a VpnIpsecForticlient resource.
type VpnIpsecForticlientArgs struct {
	Phase2name    pulumi.StringInput
	Realm         pulumi.StringPtrInput
	Status        pulumi.StringPtrInput
	Usergroupname pulumi.StringInput
	Vdomparam     pulumi.StringPtrInput
}

func (VpnIpsecForticlientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecForticlientArgs)(nil)).Elem()
}

type VpnIpsecForticlientInput interface {
	pulumi.Input

	ToVpnIpsecForticlientOutput() VpnIpsecForticlientOutput
	ToVpnIpsecForticlientOutputWithContext(ctx context.Context) VpnIpsecForticlientOutput
}

func (*VpnIpsecForticlient) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecForticlient)(nil)).Elem()
}

func (i *VpnIpsecForticlient) ToVpnIpsecForticlientOutput() VpnIpsecForticlientOutput {
	return i.ToVpnIpsecForticlientOutputWithContext(context.Background())
}

func (i *VpnIpsecForticlient) ToVpnIpsecForticlientOutputWithContext(ctx context.Context) VpnIpsecForticlientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecForticlientOutput)
}

func (i *VpnIpsecForticlient) ToOutput(ctx context.Context) pulumix.Output[*VpnIpsecForticlient] {
	return pulumix.Output[*VpnIpsecForticlient]{
		OutputState: i.ToVpnIpsecForticlientOutputWithContext(ctx).OutputState,
	}
}

// VpnIpsecForticlientArrayInput is an input type that accepts VpnIpsecForticlientArray and VpnIpsecForticlientArrayOutput values.
// You can construct a concrete instance of `VpnIpsecForticlientArrayInput` via:
//
//	VpnIpsecForticlientArray{ VpnIpsecForticlientArgs{...} }
type VpnIpsecForticlientArrayInput interface {
	pulumi.Input

	ToVpnIpsecForticlientArrayOutput() VpnIpsecForticlientArrayOutput
	ToVpnIpsecForticlientArrayOutputWithContext(context.Context) VpnIpsecForticlientArrayOutput
}

type VpnIpsecForticlientArray []VpnIpsecForticlientInput

func (VpnIpsecForticlientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecForticlient)(nil)).Elem()
}

func (i VpnIpsecForticlientArray) ToVpnIpsecForticlientArrayOutput() VpnIpsecForticlientArrayOutput {
	return i.ToVpnIpsecForticlientArrayOutputWithContext(context.Background())
}

func (i VpnIpsecForticlientArray) ToVpnIpsecForticlientArrayOutputWithContext(ctx context.Context) VpnIpsecForticlientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecForticlientArrayOutput)
}

func (i VpnIpsecForticlientArray) ToOutput(ctx context.Context) pulumix.Output[[]*VpnIpsecForticlient] {
	return pulumix.Output[[]*VpnIpsecForticlient]{
		OutputState: i.ToVpnIpsecForticlientArrayOutputWithContext(ctx).OutputState,
	}
}

// VpnIpsecForticlientMapInput is an input type that accepts VpnIpsecForticlientMap and VpnIpsecForticlientMapOutput values.
// You can construct a concrete instance of `VpnIpsecForticlientMapInput` via:
//
//	VpnIpsecForticlientMap{ "key": VpnIpsecForticlientArgs{...} }
type VpnIpsecForticlientMapInput interface {
	pulumi.Input

	ToVpnIpsecForticlientMapOutput() VpnIpsecForticlientMapOutput
	ToVpnIpsecForticlientMapOutputWithContext(context.Context) VpnIpsecForticlientMapOutput
}

type VpnIpsecForticlientMap map[string]VpnIpsecForticlientInput

func (VpnIpsecForticlientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecForticlient)(nil)).Elem()
}

func (i VpnIpsecForticlientMap) ToVpnIpsecForticlientMapOutput() VpnIpsecForticlientMapOutput {
	return i.ToVpnIpsecForticlientMapOutputWithContext(context.Background())
}

func (i VpnIpsecForticlientMap) ToVpnIpsecForticlientMapOutputWithContext(ctx context.Context) VpnIpsecForticlientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecForticlientMapOutput)
}

func (i VpnIpsecForticlientMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*VpnIpsecForticlient] {
	return pulumix.Output[map[string]*VpnIpsecForticlient]{
		OutputState: i.ToVpnIpsecForticlientMapOutputWithContext(ctx).OutputState,
	}
}

type VpnIpsecForticlientOutput struct{ *pulumi.OutputState }

func (VpnIpsecForticlientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecForticlient)(nil)).Elem()
}

func (o VpnIpsecForticlientOutput) ToVpnIpsecForticlientOutput() VpnIpsecForticlientOutput {
	return o
}

func (o VpnIpsecForticlientOutput) ToVpnIpsecForticlientOutputWithContext(ctx context.Context) VpnIpsecForticlientOutput {
	return o
}

func (o VpnIpsecForticlientOutput) ToOutput(ctx context.Context) pulumix.Output[*VpnIpsecForticlient] {
	return pulumix.Output[*VpnIpsecForticlient]{
		OutputState: o.OutputState,
	}
}

func (o VpnIpsecForticlientOutput) Phase2name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecForticlient) pulumi.StringOutput { return v.Phase2name }).(pulumi.StringOutput)
}

func (o VpnIpsecForticlientOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecForticlient) pulumi.StringOutput { return v.Realm }).(pulumi.StringOutput)
}

func (o VpnIpsecForticlientOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecForticlient) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VpnIpsecForticlientOutput) Usergroupname() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecForticlient) pulumi.StringOutput { return v.Usergroupname }).(pulumi.StringOutput)
}

func (o VpnIpsecForticlientOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnIpsecForticlient) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type VpnIpsecForticlientArrayOutput struct{ *pulumi.OutputState }

func (VpnIpsecForticlientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecForticlient)(nil)).Elem()
}

func (o VpnIpsecForticlientArrayOutput) ToVpnIpsecForticlientArrayOutput() VpnIpsecForticlientArrayOutput {
	return o
}

func (o VpnIpsecForticlientArrayOutput) ToVpnIpsecForticlientArrayOutputWithContext(ctx context.Context) VpnIpsecForticlientArrayOutput {
	return o
}

func (o VpnIpsecForticlientArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*VpnIpsecForticlient] {
	return pulumix.Output[[]*VpnIpsecForticlient]{
		OutputState: o.OutputState,
	}
}

func (o VpnIpsecForticlientArrayOutput) Index(i pulumi.IntInput) VpnIpsecForticlientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnIpsecForticlient {
		return vs[0].([]*VpnIpsecForticlient)[vs[1].(int)]
	}).(VpnIpsecForticlientOutput)
}

type VpnIpsecForticlientMapOutput struct{ *pulumi.OutputState }

func (VpnIpsecForticlientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecForticlient)(nil)).Elem()
}

func (o VpnIpsecForticlientMapOutput) ToVpnIpsecForticlientMapOutput() VpnIpsecForticlientMapOutput {
	return o
}

func (o VpnIpsecForticlientMapOutput) ToVpnIpsecForticlientMapOutputWithContext(ctx context.Context) VpnIpsecForticlientMapOutput {
	return o
}

func (o VpnIpsecForticlientMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*VpnIpsecForticlient] {
	return pulumix.Output[map[string]*VpnIpsecForticlient]{
		OutputState: o.OutputState,
	}
}

func (o VpnIpsecForticlientMapOutput) MapIndex(k pulumi.StringInput) VpnIpsecForticlientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnIpsecForticlient {
		return vs[0].(map[string]*VpnIpsecForticlient)[vs[1].(string)]
	}).(VpnIpsecForticlientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecForticlientInput)(nil)).Elem(), &VpnIpsecForticlient{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecForticlientArrayInput)(nil)).Elem(), VpnIpsecForticlientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecForticlientMapInput)(nil)).Elem(), VpnIpsecForticlientMap{})
	pulumi.RegisterOutputType(VpnIpsecForticlientOutput{})
	pulumi.RegisterOutputType(VpnIpsecForticlientArrayOutput{})
	pulumi.RegisterOutputType(VpnIpsecForticlientMapOutput{})
}
