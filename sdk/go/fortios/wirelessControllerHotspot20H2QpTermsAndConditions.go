// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WirelessControllerHotspot20H2QpTermsAndConditions struct {
	pulumi.CustomResourceState

	Filename  pulumi.StringOutput    `pulumi:"filename"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Timestamp pulumi.IntOutput       `pulumi:"timestamp"`
	Url       pulumi.StringOutput    `pulumi:"url"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerHotspot20H2QpTermsAndConditions registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20H2QpTermsAndConditions(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20H2QpTermsAndConditionsArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpTermsAndConditions, error) {
	if args == nil {
		args = &WirelessControllerHotspot20H2QpTermsAndConditionsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20H2QpTermsAndConditions
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20H2QpTermsAndConditions gets an existing WirelessControllerHotspot20H2QpTermsAndConditions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20H2QpTermsAndConditions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20H2QpTermsAndConditionsState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpTermsAndConditions, error) {
	var resource WirelessControllerHotspot20H2QpTermsAndConditions
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20H2QpTermsAndConditions resources.
type wirelessControllerHotspot20H2QpTermsAndConditionsState struct {
	Filename  *string `pulumi:"filename"`
	Name      *string `pulumi:"name"`
	Timestamp *int    `pulumi:"timestamp"`
	Url       *string `pulumi:"url"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerHotspot20H2QpTermsAndConditionsState struct {
	Filename  pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Timestamp pulumi.IntPtrInput
	Url       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpTermsAndConditionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpTermsAndConditionsState)(nil)).Elem()
}

type wirelessControllerHotspot20H2QpTermsAndConditionsArgs struct {
	Filename  *string `pulumi:"filename"`
	Name      *string `pulumi:"name"`
	Timestamp *int    `pulumi:"timestamp"`
	Url       *string `pulumi:"url"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerHotspot20H2QpTermsAndConditions resource.
type WirelessControllerHotspot20H2QpTermsAndConditionsArgs struct {
	Filename  pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Timestamp pulumi.IntPtrInput
	Url       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpTermsAndConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpTermsAndConditionsArgs)(nil)).Elem()
}

type WirelessControllerHotspot20H2QpTermsAndConditionsInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput
}

func (*WirelessControllerHotspot20H2QpTermsAndConditions) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i *WirelessControllerHotspot20H2QpTermsAndConditions) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20H2QpTermsAndConditions) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

func (i *WirelessControllerHotspot20H2QpTermsAndConditions) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: i.ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput is an input type that accepts WirelessControllerHotspot20H2QpTermsAndConditionsArray and WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput` via:
//
//	WirelessControllerHotspot20H2QpTermsAndConditionsArray{ WirelessControllerHotspot20H2QpTermsAndConditionsArgs{...} }
type WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput
}

type WirelessControllerHotspot20H2QpTermsAndConditionsArray []WirelessControllerHotspot20H2QpTermsAndConditionsInput

func (WirelessControllerHotspot20H2QpTermsAndConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsArray) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsArray) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput)
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsArray) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[[]*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: i.ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerHotspot20H2QpTermsAndConditionsMapInput is an input type that accepts WirelessControllerHotspot20H2QpTermsAndConditionsMap and WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpTermsAndConditionsMapInput` via:
//
//	WirelessControllerHotspot20H2QpTermsAndConditionsMap{ "key": WirelessControllerHotspot20H2QpTermsAndConditionsArgs{...} }
type WirelessControllerHotspot20H2QpTermsAndConditionsMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput
}

type WirelessControllerHotspot20H2QpTermsAndConditionsMap map[string]WirelessControllerHotspot20H2QpTermsAndConditionsInput

func (WirelessControllerHotspot20H2QpTermsAndConditionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsMap) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsMap) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput)
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[map[string]*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: i.ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(ctx).OutputState,
	}
}

type WirelessControllerHotspot20H2QpTermsAndConditionsOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerHotspot20H2QpTermsAndConditions) pulumi.StringOutput { return v.Filename }).(pulumi.StringOutput)
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerHotspot20H2QpTermsAndConditions) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) Timestamp() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerHotspot20H2QpTermsAndConditions) pulumi.IntOutput { return v.Timestamp }).(pulumi.IntOutput)
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerHotspot20H2QpTermsAndConditions) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerHotspot20H2QpTermsAndConditions) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[[]*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpTermsAndConditions {
		return vs[0].([]*WirelessControllerHotspot20H2QpTermsAndConditions)[vs[1].(int)]
	}).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

type WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerHotspot20H2QpTermsAndConditions] {
	return pulumix.Output[map[string]*WirelessControllerHotspot20H2QpTermsAndConditions]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpTermsAndConditions {
		return vs[0].(map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)[vs[1].(string)]
	}).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsInput)(nil)).Elem(), &WirelessControllerHotspot20H2QpTermsAndConditions{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput)(nil)).Elem(), WirelessControllerHotspot20H2QpTermsAndConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsMapInput)(nil)).Elem(), WirelessControllerHotspot20H2QpTermsAndConditionsMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput{})
}
