// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure terms and conditions. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// WirelessControllerHotspot20 H2QpTermsAndConditions can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerHotspot20H2QpTermsAndConditions struct {
	pulumi.CustomResourceState

	// Filename.
	Filename pulumi.StringOutput `pulumi:"filename"`
	// Terms and Conditions ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// Timestamp.
	Timestamp pulumi.IntOutput `pulumi:"timestamp"`
	// URL.
	Url pulumi.StringOutput `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerHotspot20H2QpTermsAndConditions registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20H2QpTermsAndConditions(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20H2QpTermsAndConditionsArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpTermsAndConditions, error) {
	if args == nil {
		args = &WirelessControllerHotspot20H2QpTermsAndConditionsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20H2QpTermsAndConditions
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20H2QpTermsAndConditions gets an existing WirelessControllerHotspot20H2QpTermsAndConditions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20H2QpTermsAndConditions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20H2QpTermsAndConditionsState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpTermsAndConditions, error) {
	var resource WirelessControllerHotspot20H2QpTermsAndConditions
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20H2QpTermsAndConditions:WirelessControllerHotspot20H2QpTermsAndConditions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20H2QpTermsAndConditions resources.
type wirelessControllerHotspot20H2QpTermsAndConditionsState struct {
	// Filename.
	Filename *string `pulumi:"filename"`
	// Terms and Conditions ID.
	Name *string `pulumi:"name"`
	// Timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerHotspot20H2QpTermsAndConditionsState struct {
	// Filename.
	Filename pulumi.StringPtrInput
	// Terms and Conditions ID.
	Name pulumi.StringPtrInput
	// Timestamp.
	Timestamp pulumi.IntPtrInput
	// URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpTermsAndConditionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpTermsAndConditionsState)(nil)).Elem()
}

type wirelessControllerHotspot20H2QpTermsAndConditionsArgs struct {
	// Filename.
	Filename *string `pulumi:"filename"`
	// Terms and Conditions ID.
	Name *string `pulumi:"name"`
	// Timestamp.
	Timestamp *int `pulumi:"timestamp"`
	// URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerHotspot20H2QpTermsAndConditions resource.
type WirelessControllerHotspot20H2QpTermsAndConditionsArgs struct {
	// Filename.
	Filename pulumi.StringPtrInput
	// Terms and Conditions ID.
	Name pulumi.StringPtrInput
	// Timestamp.
	Timestamp pulumi.IntPtrInput
	// URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpTermsAndConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpTermsAndConditionsArgs)(nil)).Elem()
}

type WirelessControllerHotspot20H2QpTermsAndConditionsInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput
}

func (*WirelessControllerHotspot20H2QpTermsAndConditions) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i *WirelessControllerHotspot20H2QpTermsAndConditions) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20H2QpTermsAndConditions) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

// WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput is an input type that accepts WirelessControllerHotspot20H2QpTermsAndConditionsArray and WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput` via:
//
//          WirelessControllerHotspot20H2QpTermsAndConditionsArray{ WirelessControllerHotspot20H2QpTermsAndConditionsArgs{...} }
type WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput
}

type WirelessControllerHotspot20H2QpTermsAndConditionsArray []WirelessControllerHotspot20H2QpTermsAndConditionsInput

func (WirelessControllerHotspot20H2QpTermsAndConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsArray) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsArray) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput)
}

// WirelessControllerHotspot20H2QpTermsAndConditionsMapInput is an input type that accepts WirelessControllerHotspot20H2QpTermsAndConditionsMap and WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpTermsAndConditionsMapInput` via:
//
//          WirelessControllerHotspot20H2QpTermsAndConditionsMap{ "key": WirelessControllerHotspot20H2QpTermsAndConditionsArgs{...} }
type WirelessControllerHotspot20H2QpTermsAndConditionsMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput
	ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput
}

type WirelessControllerHotspot20H2QpTermsAndConditionsMap map[string]WirelessControllerHotspot20H2QpTermsAndConditionsInput

func (WirelessControllerHotspot20H2QpTermsAndConditionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsMap) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return i.ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpTermsAndConditionsMap) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput)
}

type WirelessControllerHotspot20H2QpTermsAndConditionsOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutput() WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return o
}

type WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput() WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpTermsAndConditions {
		return vs[0].([]*WirelessControllerHotspot20H2QpTermsAndConditions)[vs[1].(int)]
	}).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

type WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutput() WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) ToWirelessControllerHotspot20H2QpTermsAndConditionsMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20H2QpTermsAndConditionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpTermsAndConditions {
		return vs[0].(map[string]*WirelessControllerHotspot20H2QpTermsAndConditions)[vs[1].(string)]
	}).(WirelessControllerHotspot20H2QpTermsAndConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsInput)(nil)).Elem(), &WirelessControllerHotspot20H2QpTermsAndConditions{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsArrayInput)(nil)).Elem(), WirelessControllerHotspot20H2QpTermsAndConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpTermsAndConditionsMapInput)(nil)).Elem(), WirelessControllerHotspot20H2QpTermsAndConditionsMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpTermsAndConditionsMapOutput{})
}
