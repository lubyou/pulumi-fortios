// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch Auto-Config custom QoS policy.
//
// ## Import
//
// SwitchControllerAutoConfig Custom can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerAutoConfigCustom:SwitchControllerAutoConfigCustom labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerAutoConfigCustom:SwitchControllerAutoConfigCustom labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerAutoConfigCustom struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Auto-Config FortiLink or ISL/ICL interface name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Switch binding list. The structure of `switchBinding` block is documented below.
	SwitchBindings SwitchControllerAutoConfigCustomSwitchBindingArrayOutput `pulumi:"switchBindings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerAutoConfigCustom registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerAutoConfigCustom(ctx *pulumi.Context,
	name string, args *SwitchControllerAutoConfigCustomArgs, opts ...pulumi.ResourceOption) (*SwitchControllerAutoConfigCustom, error) {
	if args == nil {
		args = &SwitchControllerAutoConfigCustomArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerAutoConfigCustom
	err := ctx.RegisterResource("fortios:index/switchControllerAutoConfigCustom:SwitchControllerAutoConfigCustom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerAutoConfigCustom gets an existing SwitchControllerAutoConfigCustom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerAutoConfigCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerAutoConfigCustomState, opts ...pulumi.ResourceOption) (*SwitchControllerAutoConfigCustom, error) {
	var resource SwitchControllerAutoConfigCustom
	err := ctx.ReadResource("fortios:index/switchControllerAutoConfigCustom:SwitchControllerAutoConfigCustom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerAutoConfigCustom resources.
type switchControllerAutoConfigCustomState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Auto-Config FortiLink or ISL/ICL interface name.
	Name *string `pulumi:"name"`
	// Switch binding list. The structure of `switchBinding` block is documented below.
	SwitchBindings []SwitchControllerAutoConfigCustomSwitchBinding `pulumi:"switchBindings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchControllerAutoConfigCustomState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Auto-Config FortiLink or ISL/ICL interface name.
	Name pulumi.StringPtrInput
	// Switch binding list. The structure of `switchBinding` block is documented below.
	SwitchBindings SwitchControllerAutoConfigCustomSwitchBindingArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerAutoConfigCustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerAutoConfigCustomState)(nil)).Elem()
}

type switchControllerAutoConfigCustomArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Auto-Config FortiLink or ISL/ICL interface name.
	Name *string `pulumi:"name"`
	// Switch binding list. The structure of `switchBinding` block is documented below.
	SwitchBindings []SwitchControllerAutoConfigCustomSwitchBinding `pulumi:"switchBindings"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerAutoConfigCustom resource.
type SwitchControllerAutoConfigCustomArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Auto-Config FortiLink or ISL/ICL interface name.
	Name pulumi.StringPtrInput
	// Switch binding list. The structure of `switchBinding` block is documented below.
	SwitchBindings SwitchControllerAutoConfigCustomSwitchBindingArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerAutoConfigCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerAutoConfigCustomArgs)(nil)).Elem()
}

type SwitchControllerAutoConfigCustomInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigCustomOutput() SwitchControllerAutoConfigCustomOutput
	ToSwitchControllerAutoConfigCustomOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomOutput
}

func (*SwitchControllerAutoConfigCustom) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (i *SwitchControllerAutoConfigCustom) ToSwitchControllerAutoConfigCustomOutput() SwitchControllerAutoConfigCustomOutput {
	return i.ToSwitchControllerAutoConfigCustomOutputWithContext(context.Background())
}

func (i *SwitchControllerAutoConfigCustom) ToSwitchControllerAutoConfigCustomOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigCustomOutput)
}

// SwitchControllerAutoConfigCustomArrayInput is an input type that accepts SwitchControllerAutoConfigCustomArray and SwitchControllerAutoConfigCustomArrayOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigCustomArrayInput` via:
//
//          SwitchControllerAutoConfigCustomArray{ SwitchControllerAutoConfigCustomArgs{...} }
type SwitchControllerAutoConfigCustomArrayInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigCustomArrayOutput() SwitchControllerAutoConfigCustomArrayOutput
	ToSwitchControllerAutoConfigCustomArrayOutputWithContext(context.Context) SwitchControllerAutoConfigCustomArrayOutput
}

type SwitchControllerAutoConfigCustomArray []SwitchControllerAutoConfigCustomInput

func (SwitchControllerAutoConfigCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (i SwitchControllerAutoConfigCustomArray) ToSwitchControllerAutoConfigCustomArrayOutput() SwitchControllerAutoConfigCustomArrayOutput {
	return i.ToSwitchControllerAutoConfigCustomArrayOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigCustomArray) ToSwitchControllerAutoConfigCustomArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigCustomArrayOutput)
}

// SwitchControllerAutoConfigCustomMapInput is an input type that accepts SwitchControllerAutoConfigCustomMap and SwitchControllerAutoConfigCustomMapOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigCustomMapInput` via:
//
//          SwitchControllerAutoConfigCustomMap{ "key": SwitchControllerAutoConfigCustomArgs{...} }
type SwitchControllerAutoConfigCustomMapInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigCustomMapOutput() SwitchControllerAutoConfigCustomMapOutput
	ToSwitchControllerAutoConfigCustomMapOutputWithContext(context.Context) SwitchControllerAutoConfigCustomMapOutput
}

type SwitchControllerAutoConfigCustomMap map[string]SwitchControllerAutoConfigCustomInput

func (SwitchControllerAutoConfigCustomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (i SwitchControllerAutoConfigCustomMap) ToSwitchControllerAutoConfigCustomMapOutput() SwitchControllerAutoConfigCustomMapOutput {
	return i.ToSwitchControllerAutoConfigCustomMapOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigCustomMap) ToSwitchControllerAutoConfigCustomMapOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigCustomMapOutput)
}

type SwitchControllerAutoConfigCustomOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (o SwitchControllerAutoConfigCustomOutput) ToSwitchControllerAutoConfigCustomOutput() SwitchControllerAutoConfigCustomOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomOutput) ToSwitchControllerAutoConfigCustomOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomOutput {
	return o
}

type SwitchControllerAutoConfigCustomArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (o SwitchControllerAutoConfigCustomArrayOutput) ToSwitchControllerAutoConfigCustomArrayOutput() SwitchControllerAutoConfigCustomArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomArrayOutput) ToSwitchControllerAutoConfigCustomArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomArrayOutput) Index(i pulumi.IntInput) SwitchControllerAutoConfigCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerAutoConfigCustom {
		return vs[0].([]*SwitchControllerAutoConfigCustom)[vs[1].(int)]
	}).(SwitchControllerAutoConfigCustomOutput)
}

type SwitchControllerAutoConfigCustomMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigCustomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerAutoConfigCustom)(nil)).Elem()
}

func (o SwitchControllerAutoConfigCustomMapOutput) ToSwitchControllerAutoConfigCustomMapOutput() SwitchControllerAutoConfigCustomMapOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomMapOutput) ToSwitchControllerAutoConfigCustomMapOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomMapOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerAutoConfigCustomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerAutoConfigCustom {
		return vs[0].(map[string]*SwitchControllerAutoConfigCustom)[vs[1].(string)]
	}).(SwitchControllerAutoConfigCustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigCustomInput)(nil)).Elem(), &SwitchControllerAutoConfigCustom{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigCustomArrayInput)(nil)).Elem(), SwitchControllerAutoConfigCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigCustomMapInput)(nil)).Elem(), SwitchControllerAutoConfigCustomMap{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigCustomOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigCustomArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigCustomMapOutput{})
}
