// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogWebtrendsSetting struct {
	pulumi.CustomResourceState

	Server    pulumi.StringOutput    `pulumi:"server"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLogWebtrendsSetting registers a new resource with the given unique name, arguments, and options.
func NewLogWebtrendsSetting(ctx *pulumi.Context,
	name string, args *LogWebtrendsSettingArgs, opts ...pulumi.ResourceOption) (*LogWebtrendsSetting, error) {
	if args == nil {
		args = &LogWebtrendsSettingArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogWebtrendsSetting
	err := ctx.RegisterResource("fortios:index/logWebtrendsSetting:LogWebtrendsSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogWebtrendsSetting gets an existing LogWebtrendsSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogWebtrendsSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogWebtrendsSettingState, opts ...pulumi.ResourceOption) (*LogWebtrendsSetting, error) {
	var resource LogWebtrendsSetting
	err := ctx.ReadResource("fortios:index/logWebtrendsSetting:LogWebtrendsSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogWebtrendsSetting resources.
type logWebtrendsSettingState struct {
	Server    *string `pulumi:"server"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type LogWebtrendsSettingState struct {
	Server    pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (LogWebtrendsSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logWebtrendsSettingState)(nil)).Elem()
}

type logWebtrendsSettingArgs struct {
	Server    *string `pulumi:"server"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogWebtrendsSetting resource.
type LogWebtrendsSettingArgs struct {
	Server    pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (LogWebtrendsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logWebtrendsSettingArgs)(nil)).Elem()
}

type LogWebtrendsSettingInput interface {
	pulumi.Input

	ToLogWebtrendsSettingOutput() LogWebtrendsSettingOutput
	ToLogWebtrendsSettingOutputWithContext(ctx context.Context) LogWebtrendsSettingOutput
}

func (*LogWebtrendsSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogWebtrendsSetting)(nil)).Elem()
}

func (i *LogWebtrendsSetting) ToLogWebtrendsSettingOutput() LogWebtrendsSettingOutput {
	return i.ToLogWebtrendsSettingOutputWithContext(context.Background())
}

func (i *LogWebtrendsSetting) ToLogWebtrendsSettingOutputWithContext(ctx context.Context) LogWebtrendsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsSettingOutput)
}

// LogWebtrendsSettingArrayInput is an input type that accepts LogWebtrendsSettingArray and LogWebtrendsSettingArrayOutput values.
// You can construct a concrete instance of `LogWebtrendsSettingArrayInput` via:
//
//	LogWebtrendsSettingArray{ LogWebtrendsSettingArgs{...} }
type LogWebtrendsSettingArrayInput interface {
	pulumi.Input

	ToLogWebtrendsSettingArrayOutput() LogWebtrendsSettingArrayOutput
	ToLogWebtrendsSettingArrayOutputWithContext(context.Context) LogWebtrendsSettingArrayOutput
}

type LogWebtrendsSettingArray []LogWebtrendsSettingInput

func (LogWebtrendsSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogWebtrendsSetting)(nil)).Elem()
}

func (i LogWebtrendsSettingArray) ToLogWebtrendsSettingArrayOutput() LogWebtrendsSettingArrayOutput {
	return i.ToLogWebtrendsSettingArrayOutputWithContext(context.Background())
}

func (i LogWebtrendsSettingArray) ToLogWebtrendsSettingArrayOutputWithContext(ctx context.Context) LogWebtrendsSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsSettingArrayOutput)
}

// LogWebtrendsSettingMapInput is an input type that accepts LogWebtrendsSettingMap and LogWebtrendsSettingMapOutput values.
// You can construct a concrete instance of `LogWebtrendsSettingMapInput` via:
//
//	LogWebtrendsSettingMap{ "key": LogWebtrendsSettingArgs{...} }
type LogWebtrendsSettingMapInput interface {
	pulumi.Input

	ToLogWebtrendsSettingMapOutput() LogWebtrendsSettingMapOutput
	ToLogWebtrendsSettingMapOutputWithContext(context.Context) LogWebtrendsSettingMapOutput
}

type LogWebtrendsSettingMap map[string]LogWebtrendsSettingInput

func (LogWebtrendsSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogWebtrendsSetting)(nil)).Elem()
}

func (i LogWebtrendsSettingMap) ToLogWebtrendsSettingMapOutput() LogWebtrendsSettingMapOutput {
	return i.ToLogWebtrendsSettingMapOutputWithContext(context.Background())
}

func (i LogWebtrendsSettingMap) ToLogWebtrendsSettingMapOutputWithContext(ctx context.Context) LogWebtrendsSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsSettingMapOutput)
}

type LogWebtrendsSettingOutput struct{ *pulumi.OutputState }

func (LogWebtrendsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogWebtrendsSetting)(nil)).Elem()
}

func (o LogWebtrendsSettingOutput) ToLogWebtrendsSettingOutput() LogWebtrendsSettingOutput {
	return o
}

func (o LogWebtrendsSettingOutput) ToLogWebtrendsSettingOutputWithContext(ctx context.Context) LogWebtrendsSettingOutput {
	return o
}

func (o LogWebtrendsSettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsSetting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o LogWebtrendsSettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsSetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LogWebtrendsSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogWebtrendsSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogWebtrendsSettingArrayOutput struct{ *pulumi.OutputState }

func (LogWebtrendsSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogWebtrendsSetting)(nil)).Elem()
}

func (o LogWebtrendsSettingArrayOutput) ToLogWebtrendsSettingArrayOutput() LogWebtrendsSettingArrayOutput {
	return o
}

func (o LogWebtrendsSettingArrayOutput) ToLogWebtrendsSettingArrayOutputWithContext(ctx context.Context) LogWebtrendsSettingArrayOutput {
	return o
}

func (o LogWebtrendsSettingArrayOutput) Index(i pulumi.IntInput) LogWebtrendsSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogWebtrendsSetting {
		return vs[0].([]*LogWebtrendsSetting)[vs[1].(int)]
	}).(LogWebtrendsSettingOutput)
}

type LogWebtrendsSettingMapOutput struct{ *pulumi.OutputState }

func (LogWebtrendsSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogWebtrendsSetting)(nil)).Elem()
}

func (o LogWebtrendsSettingMapOutput) ToLogWebtrendsSettingMapOutput() LogWebtrendsSettingMapOutput {
	return o
}

func (o LogWebtrendsSettingMapOutput) ToLogWebtrendsSettingMapOutputWithContext(ctx context.Context) LogWebtrendsSettingMapOutput {
	return o
}

func (o LogWebtrendsSettingMapOutput) MapIndex(k pulumi.StringInput) LogWebtrendsSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogWebtrendsSetting {
		return vs[0].(map[string]*LogWebtrendsSetting)[vs[1].(string)]
	}).(LogWebtrendsSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsSettingInput)(nil)).Elem(), &LogWebtrendsSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsSettingArrayInput)(nil)).Elem(), LogWebtrendsSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsSettingMapInput)(nil)).Elem(), LogWebtrendsSettingMap{})
	pulumi.RegisterOutputType(LogWebtrendsSettingOutput{})
	pulumi.RegisterOutputType(LogWebtrendsSettingArrayOutput{})
	pulumi.RegisterOutputType(LogWebtrendsSettingMapOutput{})
}
