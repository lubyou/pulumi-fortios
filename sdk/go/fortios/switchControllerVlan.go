// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SwitchControllerVlan struct {
	pulumi.CustomResourceState

	Auth                       pulumi.StringOutput                              `pulumi:"auth"`
	Color                      pulumi.IntOutput                                 `pulumi:"color"`
	Comments                   pulumi.StringOutput                              `pulumi:"comments"`
	DynamicSortSubtable        pulumi.StringPtrOutput                           `pulumi:"dynamicSortSubtable"`
	GetAllTables               pulumi.StringPtrOutput                           `pulumi:"getAllTables"`
	Name                       pulumi.StringOutput                              `pulumi:"name"`
	PortalMessageOverrideGroup pulumi.StringOutput                              `pulumi:"portalMessageOverrideGroup"`
	PortalMessageOverrides     SwitchControllerVlanPortalMessageOverridesOutput `pulumi:"portalMessageOverrides"`
	RadiusServer               pulumi.StringOutput                              `pulumi:"radiusServer"`
	Security                   pulumi.StringOutput                              `pulumi:"security"`
	SelectedUsergroups         SwitchControllerVlanSelectedUsergroupArrayOutput `pulumi:"selectedUsergroups"`
	Usergroup                  pulumi.StringOutput                              `pulumi:"usergroup"`
	Vdom                       pulumi.StringOutput                              `pulumi:"vdom"`
	Vdomparam                  pulumi.StringPtrOutput                           `pulumi:"vdomparam"`
	Vlanid                     pulumi.IntOutput                                 `pulumi:"vlanid"`
}

// NewSwitchControllerVlan registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerVlan(ctx *pulumi.Context,
	name string, args *SwitchControllerVlanArgs, opts ...pulumi.ResourceOption) (*SwitchControllerVlan, error) {
	if args == nil {
		args = &SwitchControllerVlanArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerVlan
	err := ctx.RegisterResource("fortios:index/switchControllerVlan:SwitchControllerVlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerVlan gets an existing SwitchControllerVlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerVlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerVlanState, opts ...pulumi.ResourceOption) (*SwitchControllerVlan, error) {
	var resource SwitchControllerVlan
	err := ctx.ReadResource("fortios:index/switchControllerVlan:SwitchControllerVlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerVlan resources.
type switchControllerVlanState struct {
	Auth                       *string                                     `pulumi:"auth"`
	Color                      *int                                        `pulumi:"color"`
	Comments                   *string                                     `pulumi:"comments"`
	DynamicSortSubtable        *string                                     `pulumi:"dynamicSortSubtable"`
	GetAllTables               *string                                     `pulumi:"getAllTables"`
	Name                       *string                                     `pulumi:"name"`
	PortalMessageOverrideGroup *string                                     `pulumi:"portalMessageOverrideGroup"`
	PortalMessageOverrides     *SwitchControllerVlanPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	RadiusServer               *string                                     `pulumi:"radiusServer"`
	Security                   *string                                     `pulumi:"security"`
	SelectedUsergroups         []SwitchControllerVlanSelectedUsergroup     `pulumi:"selectedUsergroups"`
	Usergroup                  *string                                     `pulumi:"usergroup"`
	Vdom                       *string                                     `pulumi:"vdom"`
	Vdomparam                  *string                                     `pulumi:"vdomparam"`
	Vlanid                     *int                                        `pulumi:"vlanid"`
}

type SwitchControllerVlanState struct {
	Auth                       pulumi.StringPtrInput
	Color                      pulumi.IntPtrInput
	Comments                   pulumi.StringPtrInput
	DynamicSortSubtable        pulumi.StringPtrInput
	GetAllTables               pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	PortalMessageOverrideGroup pulumi.StringPtrInput
	PortalMessageOverrides     SwitchControllerVlanPortalMessageOverridesPtrInput
	RadiusServer               pulumi.StringPtrInput
	Security                   pulumi.StringPtrInput
	SelectedUsergroups         SwitchControllerVlanSelectedUsergroupArrayInput
	Usergroup                  pulumi.StringPtrInput
	Vdom                       pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
	Vlanid                     pulumi.IntPtrInput
}

func (SwitchControllerVlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVlanState)(nil)).Elem()
}

type switchControllerVlanArgs struct {
	Auth                       *string                                     `pulumi:"auth"`
	Color                      *int                                        `pulumi:"color"`
	Comments                   *string                                     `pulumi:"comments"`
	DynamicSortSubtable        *string                                     `pulumi:"dynamicSortSubtable"`
	GetAllTables               *string                                     `pulumi:"getAllTables"`
	Name                       *string                                     `pulumi:"name"`
	PortalMessageOverrideGroup *string                                     `pulumi:"portalMessageOverrideGroup"`
	PortalMessageOverrides     *SwitchControllerVlanPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	RadiusServer               *string                                     `pulumi:"radiusServer"`
	Security                   *string                                     `pulumi:"security"`
	SelectedUsergroups         []SwitchControllerVlanSelectedUsergroup     `pulumi:"selectedUsergroups"`
	Usergroup                  *string                                     `pulumi:"usergroup"`
	Vdom                       *string                                     `pulumi:"vdom"`
	Vdomparam                  *string                                     `pulumi:"vdomparam"`
	Vlanid                     *int                                        `pulumi:"vlanid"`
}

// The set of arguments for constructing a SwitchControllerVlan resource.
type SwitchControllerVlanArgs struct {
	Auth                       pulumi.StringPtrInput
	Color                      pulumi.IntPtrInput
	Comments                   pulumi.StringPtrInput
	DynamicSortSubtable        pulumi.StringPtrInput
	GetAllTables               pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	PortalMessageOverrideGroup pulumi.StringPtrInput
	PortalMessageOverrides     SwitchControllerVlanPortalMessageOverridesPtrInput
	RadiusServer               pulumi.StringPtrInput
	Security                   pulumi.StringPtrInput
	SelectedUsergroups         SwitchControllerVlanSelectedUsergroupArrayInput
	Usergroup                  pulumi.StringPtrInput
	Vdom                       pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
	Vlanid                     pulumi.IntPtrInput
}

func (SwitchControllerVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVlanArgs)(nil)).Elem()
}

type SwitchControllerVlanInput interface {
	pulumi.Input

	ToSwitchControllerVlanOutput() SwitchControllerVlanOutput
	ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput
}

func (*SwitchControllerVlan) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlan)(nil)).Elem()
}

func (i *SwitchControllerVlan) ToSwitchControllerVlanOutput() SwitchControllerVlanOutput {
	return i.ToSwitchControllerVlanOutputWithContext(context.Background())
}

func (i *SwitchControllerVlan) ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanOutput)
}

func (i *SwitchControllerVlan) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerVlan] {
	return pulumix.Output[*SwitchControllerVlan]{
		OutputState: i.ToSwitchControllerVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerVlanArrayInput is an input type that accepts SwitchControllerVlanArray and SwitchControllerVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVlanArrayInput` via:
//
//	SwitchControllerVlanArray{ SwitchControllerVlanArgs{...} }
type SwitchControllerVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput
	ToSwitchControllerVlanArrayOutputWithContext(context.Context) SwitchControllerVlanArrayOutput
}

type SwitchControllerVlanArray []SwitchControllerVlanInput

func (SwitchControllerVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVlan)(nil)).Elem()
}

func (i SwitchControllerVlanArray) ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput {
	return i.ToSwitchControllerVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVlanArray) ToSwitchControllerVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanArrayOutput)
}

func (i SwitchControllerVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerVlan] {
	return pulumix.Output[[]*SwitchControllerVlan]{
		OutputState: i.ToSwitchControllerVlanArrayOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerVlanMapInput is an input type that accepts SwitchControllerVlanMap and SwitchControllerVlanMapOutput values.
// You can construct a concrete instance of `SwitchControllerVlanMapInput` via:
//
//	SwitchControllerVlanMap{ "key": SwitchControllerVlanArgs{...} }
type SwitchControllerVlanMapInput interface {
	pulumi.Input

	ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput
	ToSwitchControllerVlanMapOutputWithContext(context.Context) SwitchControllerVlanMapOutput
}

type SwitchControllerVlanMap map[string]SwitchControllerVlanInput

func (SwitchControllerVlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVlan)(nil)).Elem()
}

func (i SwitchControllerVlanMap) ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput {
	return i.ToSwitchControllerVlanMapOutputWithContext(context.Background())
}

func (i SwitchControllerVlanMap) ToSwitchControllerVlanMapOutputWithContext(ctx context.Context) SwitchControllerVlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanMapOutput)
}

func (i SwitchControllerVlanMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerVlan] {
	return pulumix.Output[map[string]*SwitchControllerVlan]{
		OutputState: i.ToSwitchControllerVlanMapOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanOutput) ToSwitchControllerVlanOutput() SwitchControllerVlanOutput {
	return o
}

func (o SwitchControllerVlanOutput) ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput {
	return o
}

func (o SwitchControllerVlanOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerVlan] {
	return pulumix.Output[*SwitchControllerVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanOutput) Auth() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Auth }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o SwitchControllerVlanOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) PortalMessageOverrideGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.PortalMessageOverrideGroup }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) PortalMessageOverrides() SwitchControllerVlanPortalMessageOverridesOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) SwitchControllerVlanPortalMessageOverridesOutput {
		return v.PortalMessageOverrides
	}).(SwitchControllerVlanPortalMessageOverridesOutput)
}

func (o SwitchControllerVlanOutput) RadiusServer() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.RadiusServer }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) Security() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Security }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) SelectedUsergroups() SwitchControllerVlanSelectedUsergroupArrayOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) SwitchControllerVlanSelectedUsergroupArrayOutput {
		return v.SelectedUsergroups
	}).(SwitchControllerVlanSelectedUsergroupArrayOutput)
}

func (o SwitchControllerVlanOutput) Usergroup() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Usergroup }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringOutput { return v.Vdom }).(pulumi.StringOutput)
}

func (o SwitchControllerVlanOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanOutput) Vlanid() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerVlan) pulumi.IntOutput { return v.Vlanid }).(pulumi.IntOutput)
}

type SwitchControllerVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanArrayOutput) ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanArrayOutput) ToSwitchControllerVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerVlan] {
	return pulumix.Output[[]*SwitchControllerVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerVlan {
		return vs[0].([]*SwitchControllerVlan)[vs[1].(int)]
	}).(SwitchControllerVlanOutput)
}

type SwitchControllerVlanMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanMapOutput) ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput {
	return o
}

func (o SwitchControllerVlanMapOutput) ToSwitchControllerVlanMapOutputWithContext(ctx context.Context) SwitchControllerVlanMapOutput {
	return o
}

func (o SwitchControllerVlanMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerVlan] {
	return pulumix.Output[map[string]*SwitchControllerVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerVlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerVlan {
		return vs[0].(map[string]*SwitchControllerVlan)[vs[1].(string)]
	}).(SwitchControllerVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanInput)(nil)).Elem(), &SwitchControllerVlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanArrayInput)(nil)).Elem(), SwitchControllerVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanMapInput)(nil)).Elem(), SwitchControllerVlanMap{})
	pulumi.RegisterOutputType(SwitchControllerVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanMapOutput{})
}
