// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure VLANs for switch controller. Applies to FortiOS Version `<= 6.2.0`.
//
// ## Import
//
// SwitchController Vlan can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerVlan:SwitchControllerVlan labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerVlan struct {
	pulumi.CustomResourceState

	// Authentication. Valid values: `radius`, `usergroup`.
	Auth pulumi.StringOutput `pulumi:"auth"`
	// Color of icon on the GUI.
	Color pulumi.IntOutput `pulumi:"color"`
	// Comment.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// User group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specify captive portal replacement message override group.
	PortalMessageOverrideGroup pulumi.StringOutput `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides SwitchControllerVlanPortalMessageOverridesPtrOutput `pulumi:"portalMessageOverrides"`
	// Authentication radius server.
	RadiusServer pulumi.StringOutput `pulumi:"radiusServer"`
	// Security. Valid values: `open`, `captive-portal`, `8021x`.
	Security pulumi.StringOutput `pulumi:"security"`
	// Selected user group. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups SwitchControllerVlanSelectedUsergroupArrayOutput `pulumi:"selectedUsergroups"`
	// Authentication usergroup.
	Usergroup pulumi.StringOutput `pulumi:"usergroup"`
	// Virtual domain,
	Vdom pulumi.StringOutput `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// VLAN ID.
	Vlanid pulumi.IntOutput `pulumi:"vlanid"`
}

// NewSwitchControllerVlan registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerVlan(ctx *pulumi.Context,
	name string, args *SwitchControllerVlanArgs, opts ...pulumi.ResourceOption) (*SwitchControllerVlan, error) {
	if args == nil {
		args = &SwitchControllerVlanArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerVlan
	err := ctx.RegisterResource("fortios:index/switchControllerVlan:SwitchControllerVlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerVlan gets an existing SwitchControllerVlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerVlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerVlanState, opts ...pulumi.ResourceOption) (*SwitchControllerVlan, error) {
	var resource SwitchControllerVlan
	err := ctx.ReadResource("fortios:index/switchControllerVlan:SwitchControllerVlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerVlan resources.
type switchControllerVlanState struct {
	// Authentication. Valid values: `radius`, `usergroup`.
	Auth *string `pulumi:"auth"`
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// User group name.
	Name *string `pulumi:"name"`
	// Specify captive portal replacement message override group.
	PortalMessageOverrideGroup *string `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides *SwitchControllerVlanPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	// Authentication radius server.
	RadiusServer *string `pulumi:"radiusServer"`
	// Security. Valid values: `open`, `captive-portal`, `8021x`.
	Security *string `pulumi:"security"`
	// Selected user group. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups []SwitchControllerVlanSelectedUsergroup `pulumi:"selectedUsergroups"`
	// Authentication usergroup.
	Usergroup *string `pulumi:"usergroup"`
	// Virtual domain,
	Vdom *string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN ID.
	Vlanid *int `pulumi:"vlanid"`
}

type SwitchControllerVlanState struct {
	// Authentication. Valid values: `radius`, `usergroup`.
	Auth pulumi.StringPtrInput
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// User group name.
	Name pulumi.StringPtrInput
	// Specify captive portal replacement message override group.
	PortalMessageOverrideGroup pulumi.StringPtrInput
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides SwitchControllerVlanPortalMessageOverridesPtrInput
	// Authentication radius server.
	RadiusServer pulumi.StringPtrInput
	// Security. Valid values: `open`, `captive-portal`, `8021x`.
	Security pulumi.StringPtrInput
	// Selected user group. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups SwitchControllerVlanSelectedUsergroupArrayInput
	// Authentication usergroup.
	Usergroup pulumi.StringPtrInput
	// Virtual domain,
	Vdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN ID.
	Vlanid pulumi.IntPtrInput
}

func (SwitchControllerVlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVlanState)(nil)).Elem()
}

type switchControllerVlanArgs struct {
	// Authentication. Valid values: `radius`, `usergroup`.
	Auth *string `pulumi:"auth"`
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// User group name.
	Name *string `pulumi:"name"`
	// Specify captive portal replacement message override group.
	PortalMessageOverrideGroup *string `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides *SwitchControllerVlanPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	// Authentication radius server.
	RadiusServer *string `pulumi:"radiusServer"`
	// Security. Valid values: `open`, `captive-portal`, `8021x`.
	Security *string `pulumi:"security"`
	// Selected user group. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups []SwitchControllerVlanSelectedUsergroup `pulumi:"selectedUsergroups"`
	// Authentication usergroup.
	Usergroup *string `pulumi:"usergroup"`
	// Virtual domain,
	Vdom *string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN ID.
	Vlanid *int `pulumi:"vlanid"`
}

// The set of arguments for constructing a SwitchControllerVlan resource.
type SwitchControllerVlanArgs struct {
	// Authentication. Valid values: `radius`, `usergroup`.
	Auth pulumi.StringPtrInput
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// User group name.
	Name pulumi.StringPtrInput
	// Specify captive portal replacement message override group.
	PortalMessageOverrideGroup pulumi.StringPtrInput
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides SwitchControllerVlanPortalMessageOverridesPtrInput
	// Authentication radius server.
	RadiusServer pulumi.StringPtrInput
	// Security. Valid values: `open`, `captive-portal`, `8021x`.
	Security pulumi.StringPtrInput
	// Selected user group. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups SwitchControllerVlanSelectedUsergroupArrayInput
	// Authentication usergroup.
	Usergroup pulumi.StringPtrInput
	// Virtual domain,
	Vdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN ID.
	Vlanid pulumi.IntPtrInput
}

func (SwitchControllerVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVlanArgs)(nil)).Elem()
}

type SwitchControllerVlanInput interface {
	pulumi.Input

	ToSwitchControllerVlanOutput() SwitchControllerVlanOutput
	ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput
}

func (*SwitchControllerVlan) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlan)(nil)).Elem()
}

func (i *SwitchControllerVlan) ToSwitchControllerVlanOutput() SwitchControllerVlanOutput {
	return i.ToSwitchControllerVlanOutputWithContext(context.Background())
}

func (i *SwitchControllerVlan) ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanOutput)
}

// SwitchControllerVlanArrayInput is an input type that accepts SwitchControllerVlanArray and SwitchControllerVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVlanArrayInput` via:
//
//          SwitchControllerVlanArray{ SwitchControllerVlanArgs{...} }
type SwitchControllerVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput
	ToSwitchControllerVlanArrayOutputWithContext(context.Context) SwitchControllerVlanArrayOutput
}

type SwitchControllerVlanArray []SwitchControllerVlanInput

func (SwitchControllerVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVlan)(nil)).Elem()
}

func (i SwitchControllerVlanArray) ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput {
	return i.ToSwitchControllerVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVlanArray) ToSwitchControllerVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanArrayOutput)
}

// SwitchControllerVlanMapInput is an input type that accepts SwitchControllerVlanMap and SwitchControllerVlanMapOutput values.
// You can construct a concrete instance of `SwitchControllerVlanMapInput` via:
//
//          SwitchControllerVlanMap{ "key": SwitchControllerVlanArgs{...} }
type SwitchControllerVlanMapInput interface {
	pulumi.Input

	ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput
	ToSwitchControllerVlanMapOutputWithContext(context.Context) SwitchControllerVlanMapOutput
}

type SwitchControllerVlanMap map[string]SwitchControllerVlanInput

func (SwitchControllerVlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVlan)(nil)).Elem()
}

func (i SwitchControllerVlanMap) ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput {
	return i.ToSwitchControllerVlanMapOutputWithContext(context.Background())
}

func (i SwitchControllerVlanMap) ToSwitchControllerVlanMapOutputWithContext(ctx context.Context) SwitchControllerVlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanMapOutput)
}

type SwitchControllerVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanOutput) ToSwitchControllerVlanOutput() SwitchControllerVlanOutput {
	return o
}

func (o SwitchControllerVlanOutput) ToSwitchControllerVlanOutputWithContext(ctx context.Context) SwitchControllerVlanOutput {
	return o
}

type SwitchControllerVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanArrayOutput) ToSwitchControllerVlanArrayOutput() SwitchControllerVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanArrayOutput) ToSwitchControllerVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerVlan {
		return vs[0].([]*SwitchControllerVlan)[vs[1].(int)]
	}).(SwitchControllerVlanOutput)
}

type SwitchControllerVlanMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVlan)(nil)).Elem()
}

func (o SwitchControllerVlanMapOutput) ToSwitchControllerVlanMapOutput() SwitchControllerVlanMapOutput {
	return o
}

func (o SwitchControllerVlanMapOutput) ToSwitchControllerVlanMapOutputWithContext(ctx context.Context) SwitchControllerVlanMapOutput {
	return o
}

func (o SwitchControllerVlanMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerVlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerVlan {
		return vs[0].(map[string]*SwitchControllerVlan)[vs[1].(string)]
	}).(SwitchControllerVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanInput)(nil)).Elem(), &SwitchControllerVlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanArrayInput)(nil)).Elem(), SwitchControllerVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanMapInput)(nil)).Elem(), SwitchControllerVlanMap{})
	pulumi.RegisterOutputType(SwitchControllerVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanMapOutput{})
}
