// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type ApplicationCustom struct {
	pulumi.CustomResourceState

	Behavior   pulumi.StringOutput    `pulumi:"behavior"`
	Category   pulumi.IntOutput       `pulumi:"category"`
	Comment    pulumi.StringOutput    `pulumi:"comment"`
	Fosid      pulumi.IntOutput       `pulumi:"fosid"`
	Name       pulumi.StringOutput    `pulumi:"name"`
	Protocol   pulumi.StringOutput    `pulumi:"protocol"`
	Signature  pulumi.StringOutput    `pulumi:"signature"`
	Tag        pulumi.StringOutput    `pulumi:"tag"`
	Technology pulumi.StringOutput    `pulumi:"technology"`
	Vdomparam  pulumi.StringPtrOutput `pulumi:"vdomparam"`
	Vendor     pulumi.StringOutput    `pulumi:"vendor"`
}

// NewApplicationCustom registers a new resource with the given unique name, arguments, and options.
func NewApplicationCustom(ctx *pulumi.Context,
	name string, args *ApplicationCustomArgs, opts ...pulumi.ResourceOption) (*ApplicationCustom, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationCustom
	err := ctx.RegisterResource("fortios:index/applicationCustom:ApplicationCustom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationCustom gets an existing ApplicationCustom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationCustomState, opts ...pulumi.ResourceOption) (*ApplicationCustom, error) {
	var resource ApplicationCustom
	err := ctx.ReadResource("fortios:index/applicationCustom:ApplicationCustom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationCustom resources.
type applicationCustomState struct {
	Behavior   *string `pulumi:"behavior"`
	Category   *int    `pulumi:"category"`
	Comment    *string `pulumi:"comment"`
	Fosid      *int    `pulumi:"fosid"`
	Name       *string `pulumi:"name"`
	Protocol   *string `pulumi:"protocol"`
	Signature  *string `pulumi:"signature"`
	Tag        *string `pulumi:"tag"`
	Technology *string `pulumi:"technology"`
	Vdomparam  *string `pulumi:"vdomparam"`
	Vendor     *string `pulumi:"vendor"`
}

type ApplicationCustomState struct {
	Behavior   pulumi.StringPtrInput
	Category   pulumi.IntPtrInput
	Comment    pulumi.StringPtrInput
	Fosid      pulumi.IntPtrInput
	Name       pulumi.StringPtrInput
	Protocol   pulumi.StringPtrInput
	Signature  pulumi.StringPtrInput
	Tag        pulumi.StringPtrInput
	Technology pulumi.StringPtrInput
	Vdomparam  pulumi.StringPtrInput
	Vendor     pulumi.StringPtrInput
}

func (ApplicationCustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationCustomState)(nil)).Elem()
}

type applicationCustomArgs struct {
	Behavior   *string `pulumi:"behavior"`
	Category   int     `pulumi:"category"`
	Comment    *string `pulumi:"comment"`
	Fosid      *int    `pulumi:"fosid"`
	Name       *string `pulumi:"name"`
	Protocol   *string `pulumi:"protocol"`
	Signature  *string `pulumi:"signature"`
	Tag        *string `pulumi:"tag"`
	Technology *string `pulumi:"technology"`
	Vdomparam  *string `pulumi:"vdomparam"`
	Vendor     *string `pulumi:"vendor"`
}

// The set of arguments for constructing a ApplicationCustom resource.
type ApplicationCustomArgs struct {
	Behavior   pulumi.StringPtrInput
	Category   pulumi.IntInput
	Comment    pulumi.StringPtrInput
	Fosid      pulumi.IntPtrInput
	Name       pulumi.StringPtrInput
	Protocol   pulumi.StringPtrInput
	Signature  pulumi.StringPtrInput
	Tag        pulumi.StringPtrInput
	Technology pulumi.StringPtrInput
	Vdomparam  pulumi.StringPtrInput
	Vendor     pulumi.StringPtrInput
}

func (ApplicationCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationCustomArgs)(nil)).Elem()
}

type ApplicationCustomInput interface {
	pulumi.Input

	ToApplicationCustomOutput() ApplicationCustomOutput
	ToApplicationCustomOutputWithContext(ctx context.Context) ApplicationCustomOutput
}

func (*ApplicationCustom) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationCustom)(nil)).Elem()
}

func (i *ApplicationCustom) ToApplicationCustomOutput() ApplicationCustomOutput {
	return i.ToApplicationCustomOutputWithContext(context.Background())
}

func (i *ApplicationCustom) ToApplicationCustomOutputWithContext(ctx context.Context) ApplicationCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomOutput)
}

func (i *ApplicationCustom) ToOutput(ctx context.Context) pulumix.Output[*ApplicationCustom] {
	return pulumix.Output[*ApplicationCustom]{
		OutputState: i.ToApplicationCustomOutputWithContext(ctx).OutputState,
	}
}

// ApplicationCustomArrayInput is an input type that accepts ApplicationCustomArray and ApplicationCustomArrayOutput values.
// You can construct a concrete instance of `ApplicationCustomArrayInput` via:
//
//	ApplicationCustomArray{ ApplicationCustomArgs{...} }
type ApplicationCustomArrayInput interface {
	pulumi.Input

	ToApplicationCustomArrayOutput() ApplicationCustomArrayOutput
	ToApplicationCustomArrayOutputWithContext(context.Context) ApplicationCustomArrayOutput
}

type ApplicationCustomArray []ApplicationCustomInput

func (ApplicationCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationCustom)(nil)).Elem()
}

func (i ApplicationCustomArray) ToApplicationCustomArrayOutput() ApplicationCustomArrayOutput {
	return i.ToApplicationCustomArrayOutputWithContext(context.Background())
}

func (i ApplicationCustomArray) ToApplicationCustomArrayOutputWithContext(ctx context.Context) ApplicationCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomArrayOutput)
}

func (i ApplicationCustomArray) ToOutput(ctx context.Context) pulumix.Output[[]*ApplicationCustom] {
	return pulumix.Output[[]*ApplicationCustom]{
		OutputState: i.ToApplicationCustomArrayOutputWithContext(ctx).OutputState,
	}
}

// ApplicationCustomMapInput is an input type that accepts ApplicationCustomMap and ApplicationCustomMapOutput values.
// You can construct a concrete instance of `ApplicationCustomMapInput` via:
//
//	ApplicationCustomMap{ "key": ApplicationCustomArgs{...} }
type ApplicationCustomMapInput interface {
	pulumi.Input

	ToApplicationCustomMapOutput() ApplicationCustomMapOutput
	ToApplicationCustomMapOutputWithContext(context.Context) ApplicationCustomMapOutput
}

type ApplicationCustomMap map[string]ApplicationCustomInput

func (ApplicationCustomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationCustom)(nil)).Elem()
}

func (i ApplicationCustomMap) ToApplicationCustomMapOutput() ApplicationCustomMapOutput {
	return i.ToApplicationCustomMapOutputWithContext(context.Background())
}

func (i ApplicationCustomMap) ToApplicationCustomMapOutputWithContext(ctx context.Context) ApplicationCustomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomMapOutput)
}

func (i ApplicationCustomMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ApplicationCustom] {
	return pulumix.Output[map[string]*ApplicationCustom]{
		OutputState: i.ToApplicationCustomMapOutputWithContext(ctx).OutputState,
	}
}

type ApplicationCustomOutput struct{ *pulumi.OutputState }

func (ApplicationCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationCustom)(nil)).Elem()
}

func (o ApplicationCustomOutput) ToApplicationCustomOutput() ApplicationCustomOutput {
	return o
}

func (o ApplicationCustomOutput) ToApplicationCustomOutputWithContext(ctx context.Context) ApplicationCustomOutput {
	return o
}

func (o ApplicationCustomOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationCustom] {
	return pulumix.Output[*ApplicationCustom]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationCustomOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Behavior }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Category() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.IntOutput { return v.Category }).(pulumi.IntOutput)
}

func (o ApplicationCustomOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o ApplicationCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Signature() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Signature }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Tag }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Technology() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Technology }).(pulumi.StringOutput)
}

func (o ApplicationCustomOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o ApplicationCustomOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationCustom) pulumi.StringOutput { return v.Vendor }).(pulumi.StringOutput)
}

type ApplicationCustomArrayOutput struct{ *pulumi.OutputState }

func (ApplicationCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationCustom)(nil)).Elem()
}

func (o ApplicationCustomArrayOutput) ToApplicationCustomArrayOutput() ApplicationCustomArrayOutput {
	return o
}

func (o ApplicationCustomArrayOutput) ToApplicationCustomArrayOutputWithContext(ctx context.Context) ApplicationCustomArrayOutput {
	return o
}

func (o ApplicationCustomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ApplicationCustom] {
	return pulumix.Output[[]*ApplicationCustom]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationCustomArrayOutput) Index(i pulumi.IntInput) ApplicationCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationCustom {
		return vs[0].([]*ApplicationCustom)[vs[1].(int)]
	}).(ApplicationCustomOutput)
}

type ApplicationCustomMapOutput struct{ *pulumi.OutputState }

func (ApplicationCustomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationCustom)(nil)).Elem()
}

func (o ApplicationCustomMapOutput) ToApplicationCustomMapOutput() ApplicationCustomMapOutput {
	return o
}

func (o ApplicationCustomMapOutput) ToApplicationCustomMapOutputWithContext(ctx context.Context) ApplicationCustomMapOutput {
	return o
}

func (o ApplicationCustomMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ApplicationCustom] {
	return pulumix.Output[map[string]*ApplicationCustom]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationCustomMapOutput) MapIndex(k pulumi.StringInput) ApplicationCustomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationCustom {
		return vs[0].(map[string]*ApplicationCustom)[vs[1].(string)]
	}).(ApplicationCustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomInput)(nil)).Elem(), &ApplicationCustom{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomArrayInput)(nil)).Elem(), ApplicationCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomMapInput)(nil)).Elem(), ApplicationCustomMap{})
	pulumi.RegisterOutputType(ApplicationCustomOutput{})
	pulumi.RegisterOutputType(ApplicationCustomArrayOutput{})
	pulumi.RegisterOutputType(ApplicationCustomMapOutput{})
}
