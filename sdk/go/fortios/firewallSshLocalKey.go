// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SSH proxy local keys.
//
// ## Import
//
// FirewallSsh LocalKey can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallSshLocalKey:FirewallSshLocalKey labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallSshLocalKey struct {
	pulumi.CustomResourceState

	// SSH proxy local key name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password for SSH private key.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringOutput `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallSshLocalKey registers a new resource with the given unique name, arguments, and options.
func NewFirewallSshLocalKey(ctx *pulumi.Context,
	name string, args *FirewallSshLocalKeyArgs, opts ...pulumi.ResourceOption) (*FirewallSshLocalKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.PublicKey == nil {
		return nil, errors.New("invalid value for required argument 'PublicKey'")
	}
	var resource FirewallSshLocalKey
	err := ctx.RegisterResource("fortios:index/firewallSshLocalKey:FirewallSshLocalKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallSshLocalKey gets an existing FirewallSshLocalKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallSshLocalKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallSshLocalKeyState, opts ...pulumi.ResourceOption) (*FirewallSshLocalKey, error) {
	var resource FirewallSshLocalKey
	err := ctx.ReadResource("fortios:index/firewallSshLocalKey:FirewallSshLocalKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallSshLocalKey resources.
type firewallSshLocalKeyState struct {
	// SSH proxy local key name.
	Name *string `pulumi:"name"`
	// Password for SSH private key.
	Password *string `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey *string `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey *string `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallSshLocalKeyState struct {
	// SSH proxy local key name.
	Name pulumi.StringPtrInput
	// Password for SSH private key.
	Password pulumi.StringPtrInput
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringPtrInput
	// SSH proxy public key.
	PublicKey pulumi.StringPtrInput
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallSshLocalKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSshLocalKeyState)(nil)).Elem()
}

type firewallSshLocalKeyArgs struct {
	// SSH proxy local key name.
	Name *string `pulumi:"name"`
	// Password for SSH private key.
	Password *string `pulumi:"password"`
	// SSH proxy private key, encrypted with a password.
	PrivateKey string `pulumi:"privateKey"`
	// SSH proxy public key.
	PublicKey string `pulumi:"publicKey"`
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallSshLocalKey resource.
type FirewallSshLocalKeyArgs struct {
	// SSH proxy local key name.
	Name pulumi.StringPtrInput
	// Password for SSH private key.
	Password pulumi.StringPtrInput
	// SSH proxy private key, encrypted with a password.
	PrivateKey pulumi.StringInput
	// SSH proxy public key.
	PublicKey pulumi.StringInput
	// SSH proxy local key source type. Valid values: `built-in`, `user`.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallSshLocalKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallSshLocalKeyArgs)(nil)).Elem()
}

type FirewallSshLocalKeyInput interface {
	pulumi.Input

	ToFirewallSshLocalKeyOutput() FirewallSshLocalKeyOutput
	ToFirewallSshLocalKeyOutputWithContext(ctx context.Context) FirewallSshLocalKeyOutput
}

func (*FirewallSshLocalKey) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSshLocalKey)(nil))
}

func (i *FirewallSshLocalKey) ToFirewallSshLocalKeyOutput() FirewallSshLocalKeyOutput {
	return i.ToFirewallSshLocalKeyOutputWithContext(context.Background())
}

func (i *FirewallSshLocalKey) ToFirewallSshLocalKeyOutputWithContext(ctx context.Context) FirewallSshLocalKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSshLocalKeyOutput)
}

func (i *FirewallSshLocalKey) ToFirewallSshLocalKeyPtrOutput() FirewallSshLocalKeyPtrOutput {
	return i.ToFirewallSshLocalKeyPtrOutputWithContext(context.Background())
}

func (i *FirewallSshLocalKey) ToFirewallSshLocalKeyPtrOutputWithContext(ctx context.Context) FirewallSshLocalKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSshLocalKeyPtrOutput)
}

type FirewallSshLocalKeyPtrInput interface {
	pulumi.Input

	ToFirewallSshLocalKeyPtrOutput() FirewallSshLocalKeyPtrOutput
	ToFirewallSshLocalKeyPtrOutputWithContext(ctx context.Context) FirewallSshLocalKeyPtrOutput
}

type firewallSshLocalKeyPtrType FirewallSshLocalKeyArgs

func (*firewallSshLocalKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSshLocalKey)(nil))
}

func (i *firewallSshLocalKeyPtrType) ToFirewallSshLocalKeyPtrOutput() FirewallSshLocalKeyPtrOutput {
	return i.ToFirewallSshLocalKeyPtrOutputWithContext(context.Background())
}

func (i *firewallSshLocalKeyPtrType) ToFirewallSshLocalKeyPtrOutputWithContext(ctx context.Context) FirewallSshLocalKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSshLocalKeyPtrOutput)
}

// FirewallSshLocalKeyArrayInput is an input type that accepts FirewallSshLocalKeyArray and FirewallSshLocalKeyArrayOutput values.
// You can construct a concrete instance of `FirewallSshLocalKeyArrayInput` via:
//
//          FirewallSshLocalKeyArray{ FirewallSshLocalKeyArgs{...} }
type FirewallSshLocalKeyArrayInput interface {
	pulumi.Input

	ToFirewallSshLocalKeyArrayOutput() FirewallSshLocalKeyArrayOutput
	ToFirewallSshLocalKeyArrayOutputWithContext(context.Context) FirewallSshLocalKeyArrayOutput
}

type FirewallSshLocalKeyArray []FirewallSshLocalKeyInput

func (FirewallSshLocalKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*FirewallSshLocalKey)(nil))
}

func (i FirewallSshLocalKeyArray) ToFirewallSshLocalKeyArrayOutput() FirewallSshLocalKeyArrayOutput {
	return i.ToFirewallSshLocalKeyArrayOutputWithContext(context.Background())
}

func (i FirewallSshLocalKeyArray) ToFirewallSshLocalKeyArrayOutputWithContext(ctx context.Context) FirewallSshLocalKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSshLocalKeyArrayOutput)
}

// FirewallSshLocalKeyMapInput is an input type that accepts FirewallSshLocalKeyMap and FirewallSshLocalKeyMapOutput values.
// You can construct a concrete instance of `FirewallSshLocalKeyMapInput` via:
//
//          FirewallSshLocalKeyMap{ "key": FirewallSshLocalKeyArgs{...} }
type FirewallSshLocalKeyMapInput interface {
	pulumi.Input

	ToFirewallSshLocalKeyMapOutput() FirewallSshLocalKeyMapOutput
	ToFirewallSshLocalKeyMapOutputWithContext(context.Context) FirewallSshLocalKeyMapOutput
}

type FirewallSshLocalKeyMap map[string]FirewallSshLocalKeyInput

func (FirewallSshLocalKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*FirewallSshLocalKey)(nil))
}

func (i FirewallSshLocalKeyMap) ToFirewallSshLocalKeyMapOutput() FirewallSshLocalKeyMapOutput {
	return i.ToFirewallSshLocalKeyMapOutputWithContext(context.Background())
}

func (i FirewallSshLocalKeyMap) ToFirewallSshLocalKeyMapOutputWithContext(ctx context.Context) FirewallSshLocalKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSshLocalKeyMapOutput)
}

type FirewallSshLocalKeyOutput struct {
	*pulumi.OutputState
}

func (FirewallSshLocalKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSshLocalKey)(nil))
}

func (o FirewallSshLocalKeyOutput) ToFirewallSshLocalKeyOutput() FirewallSshLocalKeyOutput {
	return o
}

func (o FirewallSshLocalKeyOutput) ToFirewallSshLocalKeyOutputWithContext(ctx context.Context) FirewallSshLocalKeyOutput {
	return o
}

func (o FirewallSshLocalKeyOutput) ToFirewallSshLocalKeyPtrOutput() FirewallSshLocalKeyPtrOutput {
	return o.ToFirewallSshLocalKeyPtrOutputWithContext(context.Background())
}

func (o FirewallSshLocalKeyOutput) ToFirewallSshLocalKeyPtrOutputWithContext(ctx context.Context) FirewallSshLocalKeyPtrOutput {
	return o.ApplyT(func(v FirewallSshLocalKey) *FirewallSshLocalKey {
		return &v
	}).(FirewallSshLocalKeyPtrOutput)
}

type FirewallSshLocalKeyPtrOutput struct {
	*pulumi.OutputState
}

func (FirewallSshLocalKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallSshLocalKey)(nil))
}

func (o FirewallSshLocalKeyPtrOutput) ToFirewallSshLocalKeyPtrOutput() FirewallSshLocalKeyPtrOutput {
	return o
}

func (o FirewallSshLocalKeyPtrOutput) ToFirewallSshLocalKeyPtrOutputWithContext(ctx context.Context) FirewallSshLocalKeyPtrOutput {
	return o
}

type FirewallSshLocalKeyArrayOutput struct{ *pulumi.OutputState }

func (FirewallSshLocalKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSshLocalKey)(nil))
}

func (o FirewallSshLocalKeyArrayOutput) ToFirewallSshLocalKeyArrayOutput() FirewallSshLocalKeyArrayOutput {
	return o
}

func (o FirewallSshLocalKeyArrayOutput) ToFirewallSshLocalKeyArrayOutputWithContext(ctx context.Context) FirewallSshLocalKeyArrayOutput {
	return o
}

func (o FirewallSshLocalKeyArrayOutput) Index(i pulumi.IntInput) FirewallSshLocalKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSshLocalKey {
		return vs[0].([]FirewallSshLocalKey)[vs[1].(int)]
	}).(FirewallSshLocalKeyOutput)
}

type FirewallSshLocalKeyMapOutput struct{ *pulumi.OutputState }

func (FirewallSshLocalKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FirewallSshLocalKey)(nil))
}

func (o FirewallSshLocalKeyMapOutput) ToFirewallSshLocalKeyMapOutput() FirewallSshLocalKeyMapOutput {
	return o
}

func (o FirewallSshLocalKeyMapOutput) ToFirewallSshLocalKeyMapOutputWithContext(ctx context.Context) FirewallSshLocalKeyMapOutput {
	return o
}

func (o FirewallSshLocalKeyMapOutput) MapIndex(k pulumi.StringInput) FirewallSshLocalKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FirewallSshLocalKey {
		return vs[0].(map[string]FirewallSshLocalKey)[vs[1].(string)]
	}).(FirewallSshLocalKeyOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallSshLocalKeyOutput{})
	pulumi.RegisterOutputType(FirewallSshLocalKeyPtrOutput{})
	pulumi.RegisterOutputType(FirewallSshLocalKeyArrayOutput{})
	pulumi.RegisterOutputType(FirewallSshLocalKeyMapOutput{})
}
