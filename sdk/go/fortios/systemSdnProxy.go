// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemSdnProxy struct {
	pulumi.CustomResourceState

	Name       pulumi.StringOutput    `pulumi:"name"`
	Password   pulumi.StringPtrOutput `pulumi:"password"`
	Server     pulumi.StringOutput    `pulumi:"server"`
	ServerPort pulumi.IntOutput       `pulumi:"serverPort"`
	Type       pulumi.StringOutput    `pulumi:"type"`
	Username   pulumi.StringOutput    `pulumi:"username"`
	Vdomparam  pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSdnProxy registers a new resource with the given unique name, arguments, and options.
func NewSystemSdnProxy(ctx *pulumi.Context,
	name string, args *SystemSdnProxyArgs, opts ...pulumi.ResourceOption) (*SystemSdnProxy, error) {
	if args == nil {
		args = &SystemSdnProxyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSdnProxy
	err := ctx.RegisterResource("fortios:index/systemSdnProxy:SystemSdnProxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSdnProxy gets an existing SystemSdnProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSdnProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSdnProxyState, opts ...pulumi.ResourceOption) (*SystemSdnProxy, error) {
	var resource SystemSdnProxy
	err := ctx.ReadResource("fortios:index/systemSdnProxy:SystemSdnProxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSdnProxy resources.
type systemSdnProxyState struct {
	Name       *string `pulumi:"name"`
	Password   *string `pulumi:"password"`
	Server     *string `pulumi:"server"`
	ServerPort *int    `pulumi:"serverPort"`
	Type       *string `pulumi:"type"`
	Username   *string `pulumi:"username"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

type SystemSdnProxyState struct {
	Name       pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Server     pulumi.StringPtrInput
	ServerPort pulumi.IntPtrInput
	Type       pulumi.StringPtrInput
	Username   pulumi.StringPtrInput
	Vdomparam  pulumi.StringPtrInput
}

func (SystemSdnProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSdnProxyState)(nil)).Elem()
}

type systemSdnProxyArgs struct {
	Name       *string `pulumi:"name"`
	Password   *string `pulumi:"password"`
	Server     *string `pulumi:"server"`
	ServerPort *int    `pulumi:"serverPort"`
	Type       *string `pulumi:"type"`
	Username   *string `pulumi:"username"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSdnProxy resource.
type SystemSdnProxyArgs struct {
	Name       pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Server     pulumi.StringPtrInput
	ServerPort pulumi.IntPtrInput
	Type       pulumi.StringPtrInput
	Username   pulumi.StringPtrInput
	Vdomparam  pulumi.StringPtrInput
}

func (SystemSdnProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSdnProxyArgs)(nil)).Elem()
}

type SystemSdnProxyInput interface {
	pulumi.Input

	ToSystemSdnProxyOutput() SystemSdnProxyOutput
	ToSystemSdnProxyOutputWithContext(ctx context.Context) SystemSdnProxyOutput
}

func (*SystemSdnProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSdnProxy)(nil)).Elem()
}

func (i *SystemSdnProxy) ToSystemSdnProxyOutput() SystemSdnProxyOutput {
	return i.ToSystemSdnProxyOutputWithContext(context.Background())
}

func (i *SystemSdnProxy) ToSystemSdnProxyOutputWithContext(ctx context.Context) SystemSdnProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnProxyOutput)
}

// SystemSdnProxyArrayInput is an input type that accepts SystemSdnProxyArray and SystemSdnProxyArrayOutput values.
// You can construct a concrete instance of `SystemSdnProxyArrayInput` via:
//
//	SystemSdnProxyArray{ SystemSdnProxyArgs{...} }
type SystemSdnProxyArrayInput interface {
	pulumi.Input

	ToSystemSdnProxyArrayOutput() SystemSdnProxyArrayOutput
	ToSystemSdnProxyArrayOutputWithContext(context.Context) SystemSdnProxyArrayOutput
}

type SystemSdnProxyArray []SystemSdnProxyInput

func (SystemSdnProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSdnProxy)(nil)).Elem()
}

func (i SystemSdnProxyArray) ToSystemSdnProxyArrayOutput() SystemSdnProxyArrayOutput {
	return i.ToSystemSdnProxyArrayOutputWithContext(context.Background())
}

func (i SystemSdnProxyArray) ToSystemSdnProxyArrayOutputWithContext(ctx context.Context) SystemSdnProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnProxyArrayOutput)
}

// SystemSdnProxyMapInput is an input type that accepts SystemSdnProxyMap and SystemSdnProxyMapOutput values.
// You can construct a concrete instance of `SystemSdnProxyMapInput` via:
//
//	SystemSdnProxyMap{ "key": SystemSdnProxyArgs{...} }
type SystemSdnProxyMapInput interface {
	pulumi.Input

	ToSystemSdnProxyMapOutput() SystemSdnProxyMapOutput
	ToSystemSdnProxyMapOutputWithContext(context.Context) SystemSdnProxyMapOutput
}

type SystemSdnProxyMap map[string]SystemSdnProxyInput

func (SystemSdnProxyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSdnProxy)(nil)).Elem()
}

func (i SystemSdnProxyMap) ToSystemSdnProxyMapOutput() SystemSdnProxyMapOutput {
	return i.ToSystemSdnProxyMapOutputWithContext(context.Background())
}

func (i SystemSdnProxyMap) ToSystemSdnProxyMapOutputWithContext(ctx context.Context) SystemSdnProxyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnProxyMapOutput)
}

type SystemSdnProxyOutput struct{ *pulumi.OutputState }

func (SystemSdnProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSdnProxy)(nil)).Elem()
}

func (o SystemSdnProxyOutput) ToSystemSdnProxyOutput() SystemSdnProxyOutput {
	return o
}

func (o SystemSdnProxyOutput) ToSystemSdnProxyOutputWithContext(ctx context.Context) SystemSdnProxyOutput {
	return o
}

func (o SystemSdnProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemSdnProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemSdnProxyOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o SystemSdnProxyOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.IntOutput { return v.ServerPort }).(pulumi.IntOutput)
}

func (o SystemSdnProxyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o SystemSdnProxyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

func (o SystemSdnProxyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSdnProxy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemSdnProxyArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSdnProxy)(nil)).Elem()
}

func (o SystemSdnProxyArrayOutput) ToSystemSdnProxyArrayOutput() SystemSdnProxyArrayOutput {
	return o
}

func (o SystemSdnProxyArrayOutput) ToSystemSdnProxyArrayOutputWithContext(ctx context.Context) SystemSdnProxyArrayOutput {
	return o
}

func (o SystemSdnProxyArrayOutput) Index(i pulumi.IntInput) SystemSdnProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSdnProxy {
		return vs[0].([]*SystemSdnProxy)[vs[1].(int)]
	}).(SystemSdnProxyOutput)
}

type SystemSdnProxyMapOutput struct{ *pulumi.OutputState }

func (SystemSdnProxyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSdnProxy)(nil)).Elem()
}

func (o SystemSdnProxyMapOutput) ToSystemSdnProxyMapOutput() SystemSdnProxyMapOutput {
	return o
}

func (o SystemSdnProxyMapOutput) ToSystemSdnProxyMapOutputWithContext(ctx context.Context) SystemSdnProxyMapOutput {
	return o
}

func (o SystemSdnProxyMapOutput) MapIndex(k pulumi.StringInput) SystemSdnProxyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSdnProxy {
		return vs[0].(map[string]*SystemSdnProxy)[vs[1].(string)]
	}).(SystemSdnProxyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnProxyInput)(nil)).Elem(), &SystemSdnProxy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnProxyArrayInput)(nil)).Elem(), SystemSdnProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnProxyMapInput)(nil)).Elem(), SystemSdnProxyMap{})
	pulumi.RegisterOutputType(SystemSdnProxyOutput{})
	pulumi.RegisterOutputType(SystemSdnProxyArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnProxyMapOutput{})
}
