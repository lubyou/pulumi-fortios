// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure proxy policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallProxyPolicy(ctx, "trname", &fortios.FirewallProxyPolicyArgs{
// 			Action:     pulumi.String("deny"),
// 			Disclaimer: pulumi.String("disable"),
// 			Dstaddrs: FirewallProxyPolicyDstaddrArray{
// 				&FirewallProxyPolicyDstaddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			DstaddrNegate: pulumi.String("disable"),
// 			Dstintfs: FirewallProxyPolicyDstintfArray{
// 				&FirewallProxyPolicyDstintfArgs{
// 					Name: pulumi.String("port4"),
// 				},
// 			},
// 			HttpTunnelAuth:         pulumi.String("disable"),
// 			InternetService:        pulumi.String("disable"),
// 			InternetServiceNegate:  pulumi.String("disable"),
// 			Logtraffic:             pulumi.String("disable"),
// 			LogtrafficStart:        pulumi.String("disable"),
// 			Policyid:               pulumi.Int(1),
// 			ProfileProtocolOptions: pulumi.String("default"),
// 			ProfileType:            pulumi.String("single"),
// 			Proxy:                  pulumi.String("transparent-web"),
// 			ScanBotnetConnections:  pulumi.String("disable"),
// 			Schedule:               pulumi.String("always"),
// 			Services: FirewallProxyPolicyServiceArray{
// 				&FirewallProxyPolicyServiceArgs{
// 					Name: pulumi.String("webproxy"),
// 				},
// 			},
// 			ServiceNegate: pulumi.String("disable"),
// 			Srcaddrs: FirewallProxyPolicySrcaddrArray{
// 				&FirewallProxyPolicySrcaddrArgs{
// 					Name: pulumi.String("all"),
// 				},
// 			},
// 			SrcaddrNegate: pulumi.String("disable"),
// 			Srcintfs: FirewallProxyPolicySrcintfArray{
// 				&FirewallProxyPolicySrcintfArgs{
// 					Name: pulumi.String("port3"),
// 				},
// 			},
// 			Status:        pulumi.String("enable"),
// 			Transparent:   pulumi.String("disable"),
// 			UtmStatus:     pulumi.String("disable"),
// 			Webcache:      pulumi.String("disable"),
// 			WebcacheHttps: pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall ProxyPolicy can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallProxyPolicy:FirewallProxyPolicy labelname {{policyid}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallProxyPolicy:FirewallProxyPolicy labelname {{policyid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallProxyPolicy struct {
	pulumi.CustomResourceState

	// IPv4 access proxy. The structure of `accessProxy` block is documented below.
	AccessProxies FirewallProxyPolicyAccessProxyArrayOutput `pulumi:"accessProxies"`
	// IPv6 access proxy. The structure of `accessProxy6` block is documented below.
	AccessProxy6s FirewallProxyPolicyAccessProxy6ArrayOutput `pulumi:"accessProxy6s"`
	// Accept or deny traffic matching the policy parameters. Valid values: `accept`, `deny`, `redirect`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Name of an existing Application list.
	ApplicationList pulumi.StringOutput `pulumi:"applicationList"`
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringOutput `pulumi:"avProfile"`
	// Enable/disable block notification. Valid values: `enable`, `disable`.
	BlockNotification pulumi.StringOutput `pulumi:"blockNotification"`
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringOutput `pulumi:"cifsProfile"`
	// Optional comments.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringOutput `pulumi:"decryptedTrafficMirror"`
	// When enabled, the ownership enforcement will be done at policy level. Valid values: `enable`, `disable`.
	DeviceOwnership pulumi.StringOutput `pulumi:"deviceOwnership"`
	// Web proxy disclaimer setting: by domain, policy, or user. Valid values: `disable`, `domain`, `policy`, `user`.
	Disclaimer pulumi.StringOutput `pulumi:"disclaimer"`
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringOutput `pulumi:"dlpSensor"`
	// IPv6 destination address objects. The structure of `dstaddr6` block is documented below.
	Dstaddr6s FirewallProxyPolicyDstaddr6ArrayOutput `pulumi:"dstaddr6s"`
	// When enabled, destination addresses match against any address EXCEPT the specified destination addresses. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringOutput `pulumi:"dstaddrNegate"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallProxyPolicyDstaddrArrayOutput `pulumi:"dstaddrs"`
	// Destination interface names. The structure of `dstintf` block is documented below.
	Dstintfs FirewallProxyPolicyDstintfArrayOutput `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringOutput `pulumi:"emailfilterProfile"`
	// Name of an existing file-filter profile.
	FileFilterProfile pulumi.StringOutput `pulumi:"fileFilterProfile"`
	// Global web-based manager visible label.
	GlobalLabel pulumi.StringOutput `pulumi:"globalLabel"`
	// Names of group objects. The structure of `groups` block is documented below.
	Groups FirewallProxyPolicyGroupArrayOutput `pulumi:"groups"`
	// Enable/disable HTTP tunnel authentication. Valid values: `enable`, `disable`.
	HttpTunnelAuth pulumi.StringOutput `pulumi:"httpTunnelAuth"`
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringOutput `pulumi:"icapProfile"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used. Valid values: `enable`, `disable`.
	InternetService pulumi.StringOutput `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups FirewallProxyPolicyInternetServiceCustomGroupArrayOutput `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms FirewallProxyPolicyInternetServiceCustomArrayOutput `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups FirewallProxyPolicyInternetServiceGroupArrayOutput `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds FirewallProxyPolicyInternetServiceIdArrayOutput `pulumi:"internetServiceIds"`
	// Internet Service name. The structure of `internetServiceName` block is documented below.
	InternetServiceNames FirewallProxyPolicyInternetServiceNameArrayOutput `pulumi:"internetServiceNames"`
	// When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service. Valid values: `enable`, `disable`.
	InternetServiceNegate pulumi.StringOutput `pulumi:"internetServiceNegate"`
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringOutput `pulumi:"ipsSensor"`
	// VDOM-specific GUI visible label.
	Label pulumi.StringOutput `pulumi:"label"`
	// Enable/disable logging traffic through the policy. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringOutput `pulumi:"logtraffic"`
	// Enable/disable policy log traffic start. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringOutput `pulumi:"logtrafficStart"`
	// Group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy ID.
	Policyid pulumi.IntOutput `pulumi:"policyid"`
	// Name of IP pool object. The structure of `poolname` block is documented below.
	Poolnames FirewallProxyPolicyPoolnameArrayOutput `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup pulumi.StringOutput `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringOutput `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringOutput `pulumi:"profileType"`
	// Type of explicit proxy.
	Proxy pulumi.StringOutput `pulumi:"proxy"`
	// Redirect URL for further explicit web proxy processing.
	RedirectUrl pulumi.StringPtrOutput `pulumi:"redirectUrl"`
	// Authentication replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringOutput `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable scanning of connections to Botnet servers. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringOutput `pulumi:"scanBotnetConnections"`
	// Name of schedule object.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Name of an existing SCTP filter profile.
	SctpFilterProfile pulumi.StringOutput `pulumi:"sctpFilterProfile"`
	// When enabled, services match against any service EXCEPT the specified destination services. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringOutput `pulumi:"serviceNegate"`
	// Name of service objects. The structure of `service` block is documented below.
	Services FirewallProxyPolicyServiceArrayOutput `pulumi:"services"`
	// TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
	SessionTtl pulumi.IntOutput `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringOutput `pulumi:"spamfilterProfile"`
	// IPv6 source address objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s FirewallProxyPolicySrcaddr6ArrayOutput `pulumi:"srcaddr6s"`
	// When enabled, source addresses match against any address EXCEPT the specified source addresses. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringOutput `pulumi:"srcaddrNegate"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallProxyPolicySrcaddrArrayOutput `pulumi:"srcaddrs"`
	// Source interface names. The structure of `srcintf` block is documented below.
	Srcintfs FirewallProxyPolicySrcintfArrayOutput `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringOutput `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringOutput `pulumi:"sshPolicyRedirect"`
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringOutput `pulumi:"sslSshProfile"`
	// Enable/disable the active status of the policy. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Enable to use the IP address of the client to connect to the server. Valid values: `enable`, `disable`.
	Transparent pulumi.StringOutput `pulumi:"transparent"`
	// Names of user objects. The structure of `users` block is documented below.
	Users FirewallProxyPolicyUserArrayOutput `pulumi:"users"`
	// Enable the use of UTM profiles/sensors/lists. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringOutput `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Name of an existing VideoFilter profile.
	VideofilterProfile pulumi.StringOutput `pulumi:"videofilterProfile"`
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringOutput `pulumi:"voipProfile"`
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringOutput `pulumi:"wafProfile"`
	// Enable/disable web caching. Valid values: `enable`, `disable`.
	Webcache pulumi.StringOutput `pulumi:"webcache"`
	// Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile). Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringOutput `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringOutput `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringOutput `pulumi:"webproxyForwardServer"`
	// Name of web proxy profile.
	WebproxyProfile pulumi.StringOutput `pulumi:"webproxyProfile"`
	// ZTNA EMS Tag names. The structure of `ztnaEmsTag` block is documented below.
	ZtnaEmsTags FirewallProxyPolicyZtnaEmsTagArrayOutput `pulumi:"ztnaEmsTags"`
	// ZTNA tag matching logic. Valid values: `or`, `and`.
	ZtnaTagsMatchLogic pulumi.StringOutput `pulumi:"ztnaTagsMatchLogic"`
}

// NewFirewallProxyPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallProxyPolicy(ctx *pulumi.Context,
	name string, args *FirewallProxyPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallProxyPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstintfs == nil {
		return nil, errors.New("invalid value for required argument 'Dstintfs'")
	}
	if args.Proxy == nil {
		return nil, errors.New("invalid value for required argument 'Proxy'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallProxyPolicy
	err := ctx.RegisterResource("fortios:index/firewallProxyPolicy:FirewallProxyPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallProxyPolicy gets an existing FirewallProxyPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallProxyPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallProxyPolicyState, opts ...pulumi.ResourceOption) (*FirewallProxyPolicy, error) {
	var resource FirewallProxyPolicy
	err := ctx.ReadResource("fortios:index/firewallProxyPolicy:FirewallProxyPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallProxyPolicy resources.
type firewallProxyPolicyState struct {
	// IPv4 access proxy. The structure of `accessProxy` block is documented below.
	AccessProxies []FirewallProxyPolicyAccessProxy `pulumi:"accessProxies"`
	// IPv6 access proxy. The structure of `accessProxy6` block is documented below.
	AccessProxy6s []FirewallProxyPolicyAccessProxy6 `pulumi:"accessProxy6s"`
	// Accept or deny traffic matching the policy parameters. Valid values: `accept`, `deny`, `redirect`.
	Action *string `pulumi:"action"`
	// Name of an existing Application list.
	ApplicationList *string `pulumi:"applicationList"`
	// Name of an existing Antivirus profile.
	AvProfile *string `pulumi:"avProfile"`
	// Enable/disable block notification. Valid values: `enable`, `disable`.
	BlockNotification *string `pulumi:"blockNotification"`
	// Name of an existing CIFS profile.
	CifsProfile *string `pulumi:"cifsProfile"`
	// Optional comments.
	Comments *string `pulumi:"comments"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// When enabled, the ownership enforcement will be done at policy level. Valid values: `enable`, `disable`.
	DeviceOwnership *string `pulumi:"deviceOwnership"`
	// Web proxy disclaimer setting: by domain, policy, or user. Valid values: `disable`, `domain`, `policy`, `user`.
	Disclaimer *string `pulumi:"disclaimer"`
	// Name of an existing DLP sensor.
	DlpSensor *string `pulumi:"dlpSensor"`
	// IPv6 destination address objects. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []FirewallProxyPolicyDstaddr6 `pulumi:"dstaddr6s"`
	// When enabled, destination addresses match against any address EXCEPT the specified destination addresses. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallProxyPolicyDstaddr `pulumi:"dstaddrs"`
	// Destination interface names. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallProxyPolicyDstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile *string `pulumi:"emailfilterProfile"`
	// Name of an existing file-filter profile.
	FileFilterProfile *string `pulumi:"fileFilterProfile"`
	// Global web-based manager visible label.
	GlobalLabel *string `pulumi:"globalLabel"`
	// Names of group objects. The structure of `groups` block is documented below.
	Groups []FirewallProxyPolicyGroup `pulumi:"groups"`
	// Enable/disable HTTP tunnel authentication. Valid values: `enable`, `disable`.
	HttpTunnelAuth *string `pulumi:"httpTunnelAuth"`
	// Name of an existing ICAP profile.
	IcapProfile *string `pulumi:"icapProfile"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []FirewallProxyPolicyInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []FirewallProxyPolicyInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []FirewallProxyPolicyInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []FirewallProxyPolicyInternetServiceId `pulumi:"internetServiceIds"`
	// Internet Service name. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []FirewallProxyPolicyInternetServiceName `pulumi:"internetServiceNames"`
	// When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service. Valid values: `enable`, `disable`.
	InternetServiceNegate *string `pulumi:"internetServiceNegate"`
	// Name of an existing IPS sensor.
	IpsSensor *string `pulumi:"ipsSensor"`
	// VDOM-specific GUI visible label.
	Label *string `pulumi:"label"`
	// Enable/disable logging traffic through the policy. Valid values: `all`, `utm`, `disable`.
	Logtraffic *string `pulumi:"logtraffic"`
	// Enable/disable policy log traffic start. Valid values: `enable`, `disable`.
	LogtrafficStart *string `pulumi:"logtrafficStart"`
	// Group name.
	Name *string `pulumi:"name"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Name of IP pool object. The structure of `poolname` block is documented below.
	Poolnames []FirewallProxyPolicyPoolname `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup *string `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions *string `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType *string `pulumi:"profileType"`
	// Type of explicit proxy.
	Proxy *string `pulumi:"proxy"`
	// Redirect URL for further explicit web proxy processing.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Authentication replacement message override group.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable scanning of connections to Botnet servers. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	// Name of schedule object.
	Schedule *string `pulumi:"schedule"`
	// Name of an existing SCTP filter profile.
	SctpFilterProfile *string `pulumi:"sctpFilterProfile"`
	// When enabled, services match against any service EXCEPT the specified destination services. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Name of service objects. The structure of `service` block is documented below.
	Services []FirewallProxyPolicyService `pulumi:"services"`
	// TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
	SessionTtl *int `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile *string `pulumi:"spamfilterProfile"`
	// IPv6 source address objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []FirewallProxyPolicySrcaddr6 `pulumi:"srcaddr6s"`
	// When enabled, source addresses match against any address EXCEPT the specified source addresses. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallProxyPolicySrcaddr `pulumi:"srcaddrs"`
	// Source interface names. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallProxyPolicySrcintf `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile *string `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect *string `pulumi:"sshPolicyRedirect"`
	// Name of an existing SSL SSH profile.
	SslSshProfile *string `pulumi:"sslSshProfile"`
	// Enable/disable the active status of the policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable to use the IP address of the client to connect to the server. Valid values: `enable`, `disable`.
	Transparent *string `pulumi:"transparent"`
	// Names of user objects. The structure of `users` block is documented below.
	Users []FirewallProxyPolicyUser `pulumi:"users"`
	// Enable the use of UTM profiles/sensors/lists. Valid values: `enable`, `disable`.
	UtmStatus *string `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of an existing VideoFilter profile.
	VideofilterProfile *string `pulumi:"videofilterProfile"`
	// Name of an existing VoIP profile.
	VoipProfile *string `pulumi:"voipProfile"`
	// Name of an existing Web application firewall profile.
	WafProfile *string `pulumi:"wafProfile"`
	// Enable/disable web caching. Valid values: `enable`, `disable`.
	Webcache *string `pulumi:"webcache"`
	// Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile). Valid values: `disable`, `enable`.
	WebcacheHttps *string `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer *string `pulumi:"webproxyForwardServer"`
	// Name of web proxy profile.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
	// ZTNA EMS Tag names. The structure of `ztnaEmsTag` block is documented below.
	ZtnaEmsTags []FirewallProxyPolicyZtnaEmsTag `pulumi:"ztnaEmsTags"`
	// ZTNA tag matching logic. Valid values: `or`, `and`.
	ZtnaTagsMatchLogic *string `pulumi:"ztnaTagsMatchLogic"`
}

type FirewallProxyPolicyState struct {
	// IPv4 access proxy. The structure of `accessProxy` block is documented below.
	AccessProxies FirewallProxyPolicyAccessProxyArrayInput
	// IPv6 access proxy. The structure of `accessProxy6` block is documented below.
	AccessProxy6s FirewallProxyPolicyAccessProxy6ArrayInput
	// Accept or deny traffic matching the policy parameters. Valid values: `accept`, `deny`, `redirect`.
	Action pulumi.StringPtrInput
	// Name of an existing Application list.
	ApplicationList pulumi.StringPtrInput
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringPtrInput
	// Enable/disable block notification. Valid values: `enable`, `disable`.
	BlockNotification pulumi.StringPtrInput
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringPtrInput
	// Optional comments.
	Comments pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// When enabled, the ownership enforcement will be done at policy level. Valid values: `enable`, `disable`.
	DeviceOwnership pulumi.StringPtrInput
	// Web proxy disclaimer setting: by domain, policy, or user. Valid values: `disable`, `domain`, `policy`, `user`.
	Disclaimer pulumi.StringPtrInput
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringPtrInput
	// IPv6 destination address objects. The structure of `dstaddr6` block is documented below.
	Dstaddr6s FirewallProxyPolicyDstaddr6ArrayInput
	// When enabled, destination addresses match against any address EXCEPT the specified destination addresses. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallProxyPolicyDstaddrArrayInput
	// Destination interface names. The structure of `dstintf` block is documented below.
	Dstintfs FirewallProxyPolicyDstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringPtrInput
	// Name of an existing file-filter profile.
	FileFilterProfile pulumi.StringPtrInput
	// Global web-based manager visible label.
	GlobalLabel pulumi.StringPtrInput
	// Names of group objects. The structure of `groups` block is documented below.
	Groups FirewallProxyPolicyGroupArrayInput
	// Enable/disable HTTP tunnel authentication. Valid values: `enable`, `disable`.
	HttpTunnelAuth pulumi.StringPtrInput
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringPtrInput
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups FirewallProxyPolicyInternetServiceCustomGroupArrayInput
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms FirewallProxyPolicyInternetServiceCustomArrayInput
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups FirewallProxyPolicyInternetServiceGroupArrayInput
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds FirewallProxyPolicyInternetServiceIdArrayInput
	// Internet Service name. The structure of `internetServiceName` block is documented below.
	InternetServiceNames FirewallProxyPolicyInternetServiceNameArrayInput
	// When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service. Valid values: `enable`, `disable`.
	InternetServiceNegate pulumi.StringPtrInput
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringPtrInput
	// VDOM-specific GUI visible label.
	Label pulumi.StringPtrInput
	// Enable/disable logging traffic through the policy. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringPtrInput
	// Enable/disable policy log traffic start. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Name of IP pool object. The structure of `poolname` block is documented below.
	Poolnames FirewallProxyPolicyPoolnameArrayInput
	// Name of profile group.
	ProfileGroup pulumi.StringPtrInput
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringPtrInput
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringPtrInput
	// Type of explicit proxy.
	Proxy pulumi.StringPtrInput
	// Redirect URL for further explicit web proxy processing.
	RedirectUrl pulumi.StringPtrInput
	// Authentication replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// Enable/disable scanning of connections to Botnet servers. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	// Name of schedule object.
	Schedule pulumi.StringPtrInput
	// Name of an existing SCTP filter profile.
	SctpFilterProfile pulumi.StringPtrInput
	// When enabled, services match against any service EXCEPT the specified destination services. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Name of service objects. The structure of `service` block is documented below.
	Services FirewallProxyPolicyServiceArrayInput
	// TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
	SessionTtl pulumi.IntPtrInput
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringPtrInput
	// IPv6 source address objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s FirewallProxyPolicySrcaddr6ArrayInput
	// When enabled, source addresses match against any address EXCEPT the specified source addresses. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallProxyPolicySrcaddrArrayInput
	// Source interface names. The structure of `srcintf` block is documented below.
	Srcintfs FirewallProxyPolicySrcintfArrayInput
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringPtrInput
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringPtrInput
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringPtrInput
	// Enable/disable the active status of the policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable to use the IP address of the client to connect to the server. Valid values: `enable`, `disable`.
	Transparent pulumi.StringPtrInput
	// Names of user objects. The structure of `users` block is documented below.
	Users FirewallProxyPolicyUserArrayInput
	// Enable the use of UTM profiles/sensors/lists. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of an existing VideoFilter profile.
	VideofilterProfile pulumi.StringPtrInput
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringPtrInput
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringPtrInput
	// Enable/disable web caching. Valid values: `enable`, `disable`.
	Webcache pulumi.StringPtrInput
	// Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile). Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringPtrInput
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringPtrInput
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringPtrInput
	// Name of web proxy profile.
	WebproxyProfile pulumi.StringPtrInput
	// ZTNA EMS Tag names. The structure of `ztnaEmsTag` block is documented below.
	ZtnaEmsTags FirewallProxyPolicyZtnaEmsTagArrayInput
	// ZTNA tag matching logic. Valid values: `or`, `and`.
	ZtnaTagsMatchLogic pulumi.StringPtrInput
}

func (FirewallProxyPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProxyPolicyState)(nil)).Elem()
}

type firewallProxyPolicyArgs struct {
	// IPv4 access proxy. The structure of `accessProxy` block is documented below.
	AccessProxies []FirewallProxyPolicyAccessProxy `pulumi:"accessProxies"`
	// IPv6 access proxy. The structure of `accessProxy6` block is documented below.
	AccessProxy6s []FirewallProxyPolicyAccessProxy6 `pulumi:"accessProxy6s"`
	// Accept or deny traffic matching the policy parameters. Valid values: `accept`, `deny`, `redirect`.
	Action *string `pulumi:"action"`
	// Name of an existing Application list.
	ApplicationList *string `pulumi:"applicationList"`
	// Name of an existing Antivirus profile.
	AvProfile *string `pulumi:"avProfile"`
	// Enable/disable block notification. Valid values: `enable`, `disable`.
	BlockNotification *string `pulumi:"blockNotification"`
	// Name of an existing CIFS profile.
	CifsProfile *string `pulumi:"cifsProfile"`
	// Optional comments.
	Comments *string `pulumi:"comments"`
	// Decrypted traffic mirror.
	DecryptedTrafficMirror *string `pulumi:"decryptedTrafficMirror"`
	// When enabled, the ownership enforcement will be done at policy level. Valid values: `enable`, `disable`.
	DeviceOwnership *string `pulumi:"deviceOwnership"`
	// Web proxy disclaimer setting: by domain, policy, or user. Valid values: `disable`, `domain`, `policy`, `user`.
	Disclaimer *string `pulumi:"disclaimer"`
	// Name of an existing DLP sensor.
	DlpSensor *string `pulumi:"dlpSensor"`
	// IPv6 destination address objects. The structure of `dstaddr6` block is documented below.
	Dstaddr6s []FirewallProxyPolicyDstaddr6 `pulumi:"dstaddr6s"`
	// When enabled, destination addresses match against any address EXCEPT the specified destination addresses. Valid values: `enable`, `disable`.
	DstaddrNegate *string `pulumi:"dstaddrNegate"`
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs []FirewallProxyPolicyDstaddr `pulumi:"dstaddrs"`
	// Destination interface names. The structure of `dstintf` block is documented below.
	Dstintfs []FirewallProxyPolicyDstintf `pulumi:"dstintfs"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of an existing email filter profile.
	EmailfilterProfile *string `pulumi:"emailfilterProfile"`
	// Name of an existing file-filter profile.
	FileFilterProfile *string `pulumi:"fileFilterProfile"`
	// Global web-based manager visible label.
	GlobalLabel *string `pulumi:"globalLabel"`
	// Names of group objects. The structure of `groups` block is documented below.
	Groups []FirewallProxyPolicyGroup `pulumi:"groups"`
	// Enable/disable HTTP tunnel authentication. Valid values: `enable`, `disable`.
	HttpTunnelAuth *string `pulumi:"httpTunnelAuth"`
	// Name of an existing ICAP profile.
	IcapProfile *string `pulumi:"icapProfile"`
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used. Valid values: `enable`, `disable`.
	InternetService *string `pulumi:"internetService"`
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups []FirewallProxyPolicyInternetServiceCustomGroup `pulumi:"internetServiceCustomGroups"`
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms []FirewallProxyPolicyInternetServiceCustom `pulumi:"internetServiceCustoms"`
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups []FirewallProxyPolicyInternetServiceGroup `pulumi:"internetServiceGroups"`
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds []FirewallProxyPolicyInternetServiceId `pulumi:"internetServiceIds"`
	// Internet Service name. The structure of `internetServiceName` block is documented below.
	InternetServiceNames []FirewallProxyPolicyInternetServiceName `pulumi:"internetServiceNames"`
	// When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service. Valid values: `enable`, `disable`.
	InternetServiceNegate *string `pulumi:"internetServiceNegate"`
	// Name of an existing IPS sensor.
	IpsSensor *string `pulumi:"ipsSensor"`
	// VDOM-specific GUI visible label.
	Label *string `pulumi:"label"`
	// Enable/disable logging traffic through the policy. Valid values: `all`, `utm`, `disable`.
	Logtraffic *string `pulumi:"logtraffic"`
	// Enable/disable policy log traffic start. Valid values: `enable`, `disable`.
	LogtrafficStart *string `pulumi:"logtrafficStart"`
	// Group name.
	Name *string `pulumi:"name"`
	// Policy ID.
	Policyid *int `pulumi:"policyid"`
	// Name of IP pool object. The structure of `poolname` block is documented below.
	Poolnames []FirewallProxyPolicyPoolname `pulumi:"poolnames"`
	// Name of profile group.
	ProfileGroup *string `pulumi:"profileGroup"`
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions *string `pulumi:"profileProtocolOptions"`
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType *string `pulumi:"profileType"`
	// Type of explicit proxy.
	Proxy string `pulumi:"proxy"`
	// Redirect URL for further explicit web proxy processing.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Authentication replacement message override group.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// Enable/disable scanning of connections to Botnet servers. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	// Name of schedule object.
	Schedule string `pulumi:"schedule"`
	// Name of an existing SCTP filter profile.
	SctpFilterProfile *string `pulumi:"sctpFilterProfile"`
	// When enabled, services match against any service EXCEPT the specified destination services. Valid values: `enable`, `disable`.
	ServiceNegate *string `pulumi:"serviceNegate"`
	// Name of service objects. The structure of `service` block is documented below.
	Services []FirewallProxyPolicyService `pulumi:"services"`
	// TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
	SessionTtl *int `pulumi:"sessionTtl"`
	// Name of an existing Spam filter profile.
	SpamfilterProfile *string `pulumi:"spamfilterProfile"`
	// IPv6 source address objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s []FirewallProxyPolicySrcaddr6 `pulumi:"srcaddr6s"`
	// When enabled, source addresses match against any address EXCEPT the specified source addresses. Valid values: `enable`, `disable`.
	SrcaddrNegate *string `pulumi:"srcaddrNegate"`
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs []FirewallProxyPolicySrcaddr `pulumi:"srcaddrs"`
	// Source interface names. The structure of `srcintf` block is documented below.
	Srcintfs []FirewallProxyPolicySrcintf `pulumi:"srcintfs"`
	// Name of an existing SSH filter profile.
	SshFilterProfile *string `pulumi:"sshFilterProfile"`
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect *string `pulumi:"sshPolicyRedirect"`
	// Name of an existing SSL SSH profile.
	SslSshProfile *string `pulumi:"sslSshProfile"`
	// Enable/disable the active status of the policy. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable to use the IP address of the client to connect to the server. Valid values: `enable`, `disable`.
	Transparent *string `pulumi:"transparent"`
	// Names of user objects. The structure of `users` block is documented below.
	Users []FirewallProxyPolicyUser `pulumi:"users"`
	// Enable the use of UTM profiles/sensors/lists. Valid values: `enable`, `disable`.
	UtmStatus *string `pulumi:"utmStatus"`
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid *string `pulumi:"uuid"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Name of an existing VideoFilter profile.
	VideofilterProfile *string `pulumi:"videofilterProfile"`
	// Name of an existing VoIP profile.
	VoipProfile *string `pulumi:"voipProfile"`
	// Name of an existing Web application firewall profile.
	WafProfile *string `pulumi:"wafProfile"`
	// Enable/disable web caching. Valid values: `enable`, `disable`.
	Webcache *string `pulumi:"webcache"`
	// Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile). Valid values: `disable`, `enable`.
	WebcacheHttps *string `pulumi:"webcacheHttps"`
	// Name of an existing Web filter profile.
	WebfilterProfile *string `pulumi:"webfilterProfile"`
	// Web proxy forward server name.
	WebproxyForwardServer *string `pulumi:"webproxyForwardServer"`
	// Name of web proxy profile.
	WebproxyProfile *string `pulumi:"webproxyProfile"`
	// ZTNA EMS Tag names. The structure of `ztnaEmsTag` block is documented below.
	ZtnaEmsTags []FirewallProxyPolicyZtnaEmsTag `pulumi:"ztnaEmsTags"`
	// ZTNA tag matching logic. Valid values: `or`, `and`.
	ZtnaTagsMatchLogic *string `pulumi:"ztnaTagsMatchLogic"`
}

// The set of arguments for constructing a FirewallProxyPolicy resource.
type FirewallProxyPolicyArgs struct {
	// IPv4 access proxy. The structure of `accessProxy` block is documented below.
	AccessProxies FirewallProxyPolicyAccessProxyArrayInput
	// IPv6 access proxy. The structure of `accessProxy6` block is documented below.
	AccessProxy6s FirewallProxyPolicyAccessProxy6ArrayInput
	// Accept or deny traffic matching the policy parameters. Valid values: `accept`, `deny`, `redirect`.
	Action pulumi.StringPtrInput
	// Name of an existing Application list.
	ApplicationList pulumi.StringPtrInput
	// Name of an existing Antivirus profile.
	AvProfile pulumi.StringPtrInput
	// Enable/disable block notification. Valid values: `enable`, `disable`.
	BlockNotification pulumi.StringPtrInput
	// Name of an existing CIFS profile.
	CifsProfile pulumi.StringPtrInput
	// Optional comments.
	Comments pulumi.StringPtrInput
	// Decrypted traffic mirror.
	DecryptedTrafficMirror pulumi.StringPtrInput
	// When enabled, the ownership enforcement will be done at policy level. Valid values: `enable`, `disable`.
	DeviceOwnership pulumi.StringPtrInput
	// Web proxy disclaimer setting: by domain, policy, or user. Valid values: `disable`, `domain`, `policy`, `user`.
	Disclaimer pulumi.StringPtrInput
	// Name of an existing DLP sensor.
	DlpSensor pulumi.StringPtrInput
	// IPv6 destination address objects. The structure of `dstaddr6` block is documented below.
	Dstaddr6s FirewallProxyPolicyDstaddr6ArrayInput
	// When enabled, destination addresses match against any address EXCEPT the specified destination addresses. Valid values: `enable`, `disable`.
	DstaddrNegate pulumi.StringPtrInput
	// Destination address objects. The structure of `dstaddr` block is documented below.
	Dstaddrs FirewallProxyPolicyDstaddrArrayInput
	// Destination interface names. The structure of `dstintf` block is documented below.
	Dstintfs FirewallProxyPolicyDstintfArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of an existing email filter profile.
	EmailfilterProfile pulumi.StringPtrInput
	// Name of an existing file-filter profile.
	FileFilterProfile pulumi.StringPtrInput
	// Global web-based manager visible label.
	GlobalLabel pulumi.StringPtrInput
	// Names of group objects. The structure of `groups` block is documented below.
	Groups FirewallProxyPolicyGroupArrayInput
	// Enable/disable HTTP tunnel authentication. Valid values: `enable`, `disable`.
	HttpTunnelAuth pulumi.StringPtrInput
	// Name of an existing ICAP profile.
	IcapProfile pulumi.StringPtrInput
	// Enable/disable use of Internet Services for this policy. If enabled, destination address and service are not used. Valid values: `enable`, `disable`.
	InternetService pulumi.StringPtrInput
	// Custom Internet Service group name. The structure of `internetServiceCustomGroup` block is documented below.
	InternetServiceCustomGroups FirewallProxyPolicyInternetServiceCustomGroupArrayInput
	// Custom Internet Service name. The structure of `internetServiceCustom` block is documented below.
	InternetServiceCustoms FirewallProxyPolicyInternetServiceCustomArrayInput
	// Internet Service group name. The structure of `internetServiceGroup` block is documented below.
	InternetServiceGroups FirewallProxyPolicyInternetServiceGroupArrayInput
	// Internet Service ID. The structure of `internetServiceId` block is documented below.
	InternetServiceIds FirewallProxyPolicyInternetServiceIdArrayInput
	// Internet Service name. The structure of `internetServiceName` block is documented below.
	InternetServiceNames FirewallProxyPolicyInternetServiceNameArrayInput
	// When enabled, Internet Services match against any internet service EXCEPT the selected Internet Service. Valid values: `enable`, `disable`.
	InternetServiceNegate pulumi.StringPtrInput
	// Name of an existing IPS sensor.
	IpsSensor pulumi.StringPtrInput
	// VDOM-specific GUI visible label.
	Label pulumi.StringPtrInput
	// Enable/disable logging traffic through the policy. Valid values: `all`, `utm`, `disable`.
	Logtraffic pulumi.StringPtrInput
	// Enable/disable policy log traffic start. Valid values: `enable`, `disable`.
	LogtrafficStart pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Policy ID.
	Policyid pulumi.IntPtrInput
	// Name of IP pool object. The structure of `poolname` block is documented below.
	Poolnames FirewallProxyPolicyPoolnameArrayInput
	// Name of profile group.
	ProfileGroup pulumi.StringPtrInput
	// Name of an existing Protocol options profile.
	ProfileProtocolOptions pulumi.StringPtrInput
	// Determine whether the firewall policy allows security profile groups or single profiles only. Valid values: `single`, `group`.
	ProfileType pulumi.StringPtrInput
	// Type of explicit proxy.
	Proxy pulumi.StringInput
	// Redirect URL for further explicit web proxy processing.
	RedirectUrl pulumi.StringPtrInput
	// Authentication replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// Enable/disable scanning of connections to Botnet servers. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	// Name of schedule object.
	Schedule pulumi.StringInput
	// Name of an existing SCTP filter profile.
	SctpFilterProfile pulumi.StringPtrInput
	// When enabled, services match against any service EXCEPT the specified destination services. Valid values: `enable`, `disable`.
	ServiceNegate pulumi.StringPtrInput
	// Name of service objects. The structure of `service` block is documented below.
	Services FirewallProxyPolicyServiceArrayInput
	// TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
	SessionTtl pulumi.IntPtrInput
	// Name of an existing Spam filter profile.
	SpamfilterProfile pulumi.StringPtrInput
	// IPv6 source address objects. The structure of `srcaddr6` block is documented below.
	Srcaddr6s FirewallProxyPolicySrcaddr6ArrayInput
	// When enabled, source addresses match against any address EXCEPT the specified source addresses. Valid values: `enable`, `disable`.
	SrcaddrNegate pulumi.StringPtrInput
	// Source address objects. The structure of `srcaddr` block is documented below.
	Srcaddrs FirewallProxyPolicySrcaddrArrayInput
	// Source interface names. The structure of `srcintf` block is documented below.
	Srcintfs FirewallProxyPolicySrcintfArrayInput
	// Name of an existing SSH filter profile.
	SshFilterProfile pulumi.StringPtrInput
	// Redirect SSH traffic to matching transparent proxy policy. Valid values: `enable`, `disable`.
	SshPolicyRedirect pulumi.StringPtrInput
	// Name of an existing SSL SSH profile.
	SslSshProfile pulumi.StringPtrInput
	// Enable/disable the active status of the policy. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable to use the IP address of the client to connect to the server. Valid values: `enable`, `disable`.
	Transparent pulumi.StringPtrInput
	// Names of user objects. The structure of `users` block is documented below.
	Users FirewallProxyPolicyUserArrayInput
	// Enable the use of UTM profiles/sensors/lists. Valid values: `enable`, `disable`.
	UtmStatus pulumi.StringPtrInput
	// Universally Unique Identifier (UUID; automatically assigned but can be manually reset).
	Uuid pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Name of an existing VideoFilter profile.
	VideofilterProfile pulumi.StringPtrInput
	// Name of an existing VoIP profile.
	VoipProfile pulumi.StringPtrInput
	// Name of an existing Web application firewall profile.
	WafProfile pulumi.StringPtrInput
	// Enable/disable web caching. Valid values: `enable`, `disable`.
	Webcache pulumi.StringPtrInput
	// Enable/disable web caching for HTTPS (Requires deep-inspection enabled in ssl-ssh-profile). Valid values: `disable`, `enable`.
	WebcacheHttps pulumi.StringPtrInput
	// Name of an existing Web filter profile.
	WebfilterProfile pulumi.StringPtrInput
	// Web proxy forward server name.
	WebproxyForwardServer pulumi.StringPtrInput
	// Name of web proxy profile.
	WebproxyProfile pulumi.StringPtrInput
	// ZTNA EMS Tag names. The structure of `ztnaEmsTag` block is documented below.
	ZtnaEmsTags FirewallProxyPolicyZtnaEmsTagArrayInput
	// ZTNA tag matching logic. Valid values: `or`, `and`.
	ZtnaTagsMatchLogic pulumi.StringPtrInput
}

func (FirewallProxyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProxyPolicyArgs)(nil)).Elem()
}

type FirewallProxyPolicyInput interface {
	pulumi.Input

	ToFirewallProxyPolicyOutput() FirewallProxyPolicyOutput
	ToFirewallProxyPolicyOutputWithContext(ctx context.Context) FirewallProxyPolicyOutput
}

func (*FirewallProxyPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProxyPolicy)(nil)).Elem()
}

func (i *FirewallProxyPolicy) ToFirewallProxyPolicyOutput() FirewallProxyPolicyOutput {
	return i.ToFirewallProxyPolicyOutputWithContext(context.Background())
}

func (i *FirewallProxyPolicy) ToFirewallProxyPolicyOutputWithContext(ctx context.Context) FirewallProxyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyPolicyOutput)
}

// FirewallProxyPolicyArrayInput is an input type that accepts FirewallProxyPolicyArray and FirewallProxyPolicyArrayOutput values.
// You can construct a concrete instance of `FirewallProxyPolicyArrayInput` via:
//
//          FirewallProxyPolicyArray{ FirewallProxyPolicyArgs{...} }
type FirewallProxyPolicyArrayInput interface {
	pulumi.Input

	ToFirewallProxyPolicyArrayOutput() FirewallProxyPolicyArrayOutput
	ToFirewallProxyPolicyArrayOutputWithContext(context.Context) FirewallProxyPolicyArrayOutput
}

type FirewallProxyPolicyArray []FirewallProxyPolicyInput

func (FirewallProxyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProxyPolicy)(nil)).Elem()
}

func (i FirewallProxyPolicyArray) ToFirewallProxyPolicyArrayOutput() FirewallProxyPolicyArrayOutput {
	return i.ToFirewallProxyPolicyArrayOutputWithContext(context.Background())
}

func (i FirewallProxyPolicyArray) ToFirewallProxyPolicyArrayOutputWithContext(ctx context.Context) FirewallProxyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyPolicyArrayOutput)
}

// FirewallProxyPolicyMapInput is an input type that accepts FirewallProxyPolicyMap and FirewallProxyPolicyMapOutput values.
// You can construct a concrete instance of `FirewallProxyPolicyMapInput` via:
//
//          FirewallProxyPolicyMap{ "key": FirewallProxyPolicyArgs{...} }
type FirewallProxyPolicyMapInput interface {
	pulumi.Input

	ToFirewallProxyPolicyMapOutput() FirewallProxyPolicyMapOutput
	ToFirewallProxyPolicyMapOutputWithContext(context.Context) FirewallProxyPolicyMapOutput
}

type FirewallProxyPolicyMap map[string]FirewallProxyPolicyInput

func (FirewallProxyPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProxyPolicy)(nil)).Elem()
}

func (i FirewallProxyPolicyMap) ToFirewallProxyPolicyMapOutput() FirewallProxyPolicyMapOutput {
	return i.ToFirewallProxyPolicyMapOutputWithContext(context.Background())
}

func (i FirewallProxyPolicyMap) ToFirewallProxyPolicyMapOutputWithContext(ctx context.Context) FirewallProxyPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyPolicyMapOutput)
}

type FirewallProxyPolicyOutput struct{ *pulumi.OutputState }

func (FirewallProxyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProxyPolicy)(nil)).Elem()
}

func (o FirewallProxyPolicyOutput) ToFirewallProxyPolicyOutput() FirewallProxyPolicyOutput {
	return o
}

func (o FirewallProxyPolicyOutput) ToFirewallProxyPolicyOutputWithContext(ctx context.Context) FirewallProxyPolicyOutput {
	return o
}

type FirewallProxyPolicyArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProxyPolicy)(nil)).Elem()
}

func (o FirewallProxyPolicyArrayOutput) ToFirewallProxyPolicyArrayOutput() FirewallProxyPolicyArrayOutput {
	return o
}

func (o FirewallProxyPolicyArrayOutput) ToFirewallProxyPolicyArrayOutputWithContext(ctx context.Context) FirewallProxyPolicyArrayOutput {
	return o
}

func (o FirewallProxyPolicyArrayOutput) Index(i pulumi.IntInput) FirewallProxyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallProxyPolicy {
		return vs[0].([]*FirewallProxyPolicy)[vs[1].(int)]
	}).(FirewallProxyPolicyOutput)
}

type FirewallProxyPolicyMapOutput struct{ *pulumi.OutputState }

func (FirewallProxyPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProxyPolicy)(nil)).Elem()
}

func (o FirewallProxyPolicyMapOutput) ToFirewallProxyPolicyMapOutput() FirewallProxyPolicyMapOutput {
	return o
}

func (o FirewallProxyPolicyMapOutput) ToFirewallProxyPolicyMapOutputWithContext(ctx context.Context) FirewallProxyPolicyMapOutput {
	return o
}

func (o FirewallProxyPolicyMapOutput) MapIndex(k pulumi.StringInput) FirewallProxyPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallProxyPolicy {
		return vs[0].(map[string]*FirewallProxyPolicy)[vs[1].(string)]
	}).(FirewallProxyPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyPolicyInput)(nil)).Elem(), &FirewallProxyPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyPolicyArrayInput)(nil)).Elem(), FirewallProxyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyPolicyMapInput)(nil)).Elem(), FirewallProxyPolicyMap{})
	pulumi.RegisterOutputType(FirewallProxyPolicyOutput{})
	pulumi.RegisterOutputType(FirewallProxyPolicyArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyPolicyMapOutput{})
}
