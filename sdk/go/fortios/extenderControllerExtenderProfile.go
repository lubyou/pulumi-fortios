// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExtenderControllerExtenderProfile struct {
	pulumi.CustomResourceState

	Allowaccess         pulumi.StringOutput                                 `pulumi:"allowaccess"`
	BandwidthLimit      pulumi.IntOutput                                    `pulumi:"bandwidthLimit"`
	Cellular            ExtenderControllerExtenderProfileCellularOutput     `pulumi:"cellular"`
	EnforceBandwidth    pulumi.StringOutput                                 `pulumi:"enforceBandwidth"`
	Extension           pulumi.StringOutput                                 `pulumi:"extension"`
	Fosid               pulumi.IntOutput                                    `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput                              `pulumi:"getAllTables"`
	LanExtension        ExtenderControllerExtenderProfileLanExtensionOutput `pulumi:"lanExtension"`
	LoginPassword       pulumi.StringPtrOutput                              `pulumi:"loginPassword"`
	LoginPasswordChange pulumi.StringOutput                                 `pulumi:"loginPasswordChange"`
	Model               pulumi.StringOutput                                 `pulumi:"model"`
	Name                pulumi.StringOutput                                 `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                              `pulumi:"vdomparam"`
}

// NewExtenderControllerExtenderProfile registers a new resource with the given unique name, arguments, and options.
func NewExtenderControllerExtenderProfile(ctx *pulumi.Context,
	name string, args *ExtenderControllerExtenderProfileArgs, opts ...pulumi.ResourceOption) (*ExtenderControllerExtenderProfile, error) {
	if args == nil {
		args = &ExtenderControllerExtenderProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExtenderControllerExtenderProfile
	err := ctx.RegisterResource("fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtenderControllerExtenderProfile gets an existing ExtenderControllerExtenderProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtenderControllerExtenderProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtenderControllerExtenderProfileState, opts ...pulumi.ResourceOption) (*ExtenderControllerExtenderProfile, error) {
	var resource ExtenderControllerExtenderProfile
	err := ctx.ReadResource("fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtenderControllerExtenderProfile resources.
type extenderControllerExtenderProfileState struct {
	Allowaccess         *string                                        `pulumi:"allowaccess"`
	BandwidthLimit      *int                                           `pulumi:"bandwidthLimit"`
	Cellular            *ExtenderControllerExtenderProfileCellular     `pulumi:"cellular"`
	EnforceBandwidth    *string                                        `pulumi:"enforceBandwidth"`
	Extension           *string                                        `pulumi:"extension"`
	Fosid               *int                                           `pulumi:"fosid"`
	GetAllTables        *string                                        `pulumi:"getAllTables"`
	LanExtension        *ExtenderControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	LoginPassword       *string                                        `pulumi:"loginPassword"`
	LoginPasswordChange *string                                        `pulumi:"loginPasswordChange"`
	Model               *string                                        `pulumi:"model"`
	Name                *string                                        `pulumi:"name"`
	Vdomparam           *string                                        `pulumi:"vdomparam"`
}

type ExtenderControllerExtenderProfileState struct {
	Allowaccess         pulumi.StringPtrInput
	BandwidthLimit      pulumi.IntPtrInput
	Cellular            ExtenderControllerExtenderProfileCellularPtrInput
	EnforceBandwidth    pulumi.StringPtrInput
	Extension           pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	LanExtension        ExtenderControllerExtenderProfileLanExtensionPtrInput
	LoginPassword       pulumi.StringPtrInput
	LoginPasswordChange pulumi.StringPtrInput
	Model               pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (ExtenderControllerExtenderProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderControllerExtenderProfileState)(nil)).Elem()
}

type extenderControllerExtenderProfileArgs struct {
	Allowaccess         *string                                        `pulumi:"allowaccess"`
	BandwidthLimit      *int                                           `pulumi:"bandwidthLimit"`
	Cellular            *ExtenderControllerExtenderProfileCellular     `pulumi:"cellular"`
	EnforceBandwidth    *string                                        `pulumi:"enforceBandwidth"`
	Extension           *string                                        `pulumi:"extension"`
	Fosid               *int                                           `pulumi:"fosid"`
	GetAllTables        *string                                        `pulumi:"getAllTables"`
	LanExtension        *ExtenderControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	LoginPassword       *string                                        `pulumi:"loginPassword"`
	LoginPasswordChange *string                                        `pulumi:"loginPasswordChange"`
	Model               *string                                        `pulumi:"model"`
	Name                *string                                        `pulumi:"name"`
	Vdomparam           *string                                        `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ExtenderControllerExtenderProfile resource.
type ExtenderControllerExtenderProfileArgs struct {
	Allowaccess         pulumi.StringPtrInput
	BandwidthLimit      pulumi.IntPtrInput
	Cellular            ExtenderControllerExtenderProfileCellularPtrInput
	EnforceBandwidth    pulumi.StringPtrInput
	Extension           pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	LanExtension        ExtenderControllerExtenderProfileLanExtensionPtrInput
	LoginPassword       pulumi.StringPtrInput
	LoginPasswordChange pulumi.StringPtrInput
	Model               pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (ExtenderControllerExtenderProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderControllerExtenderProfileArgs)(nil)).Elem()
}

type ExtenderControllerExtenderProfileInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput
	ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput
}

func (*ExtenderControllerExtenderProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i *ExtenderControllerExtenderProfile) ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput {
	return i.ToExtenderControllerExtenderProfileOutputWithContext(context.Background())
}

func (i *ExtenderControllerExtenderProfile) ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileOutput)
}

// ExtenderControllerExtenderProfileArrayInput is an input type that accepts ExtenderControllerExtenderProfileArray and ExtenderControllerExtenderProfileArrayOutput values.
// You can construct a concrete instance of `ExtenderControllerExtenderProfileArrayInput` via:
//
//	ExtenderControllerExtenderProfileArray{ ExtenderControllerExtenderProfileArgs{...} }
type ExtenderControllerExtenderProfileArrayInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput
	ToExtenderControllerExtenderProfileArrayOutputWithContext(context.Context) ExtenderControllerExtenderProfileArrayOutput
}

type ExtenderControllerExtenderProfileArray []ExtenderControllerExtenderProfileInput

func (ExtenderControllerExtenderProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i ExtenderControllerExtenderProfileArray) ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput {
	return i.ToExtenderControllerExtenderProfileArrayOutputWithContext(context.Background())
}

func (i ExtenderControllerExtenderProfileArray) ToExtenderControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileArrayOutput)
}

// ExtenderControllerExtenderProfileMapInput is an input type that accepts ExtenderControllerExtenderProfileMap and ExtenderControllerExtenderProfileMapOutput values.
// You can construct a concrete instance of `ExtenderControllerExtenderProfileMapInput` via:
//
//	ExtenderControllerExtenderProfileMap{ "key": ExtenderControllerExtenderProfileArgs{...} }
type ExtenderControllerExtenderProfileMapInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput
	ToExtenderControllerExtenderProfileMapOutputWithContext(context.Context) ExtenderControllerExtenderProfileMapOutput
}

type ExtenderControllerExtenderProfileMap map[string]ExtenderControllerExtenderProfileInput

func (ExtenderControllerExtenderProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i ExtenderControllerExtenderProfileMap) ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput {
	return i.ToExtenderControllerExtenderProfileMapOutputWithContext(context.Background())
}

func (i ExtenderControllerExtenderProfileMap) ToExtenderControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileMapOutput)
}

type ExtenderControllerExtenderProfileOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileOutput) ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput {
	return o
}

func (o ExtenderControllerExtenderProfileOutput) ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput {
	return o
}

func (o ExtenderControllerExtenderProfileOutput) Allowaccess() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.Allowaccess }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) BandwidthLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.IntOutput { return v.BandwidthLimit }).(pulumi.IntOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Cellular() ExtenderControllerExtenderProfileCellularOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) ExtenderControllerExtenderProfileCellularOutput {
		return v.Cellular
	}).(ExtenderControllerExtenderProfileCellularOutput)
}

func (o ExtenderControllerExtenderProfileOutput) EnforceBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.EnforceBandwidth }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.Extension }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o ExtenderControllerExtenderProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o ExtenderControllerExtenderProfileOutput) LanExtension() ExtenderControllerExtenderProfileLanExtensionOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) ExtenderControllerExtenderProfileLanExtensionOutput {
		return v.LanExtension
	}).(ExtenderControllerExtenderProfileLanExtensionOutput)
}

func (o ExtenderControllerExtenderProfileOutput) LoginPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringPtrOutput { return v.LoginPassword }).(pulumi.StringPtrOutput)
}

func (o ExtenderControllerExtenderProfileOutput) LoginPasswordChange() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.LoginPasswordChange }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExtenderControllerExtenderProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtenderControllerExtenderProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ExtenderControllerExtenderProfileArrayOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileArrayOutput) ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtenderControllerExtenderProfileArrayOutput) ToExtenderControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtenderControllerExtenderProfileArrayOutput) Index(i pulumi.IntInput) ExtenderControllerExtenderProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtenderControllerExtenderProfile {
		return vs[0].([]*ExtenderControllerExtenderProfile)[vs[1].(int)]
	}).(ExtenderControllerExtenderProfileOutput)
}

type ExtenderControllerExtenderProfileMapOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileMapOutput) ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput {
	return o
}

func (o ExtenderControllerExtenderProfileMapOutput) ToExtenderControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileMapOutput {
	return o
}

func (o ExtenderControllerExtenderProfileMapOutput) MapIndex(k pulumi.StringInput) ExtenderControllerExtenderProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtenderControllerExtenderProfile {
		return vs[0].(map[string]*ExtenderControllerExtenderProfile)[vs[1].(string)]
	}).(ExtenderControllerExtenderProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileInput)(nil)).Elem(), &ExtenderControllerExtenderProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileArrayInput)(nil)).Elem(), ExtenderControllerExtenderProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileMapInput)(nil)).Elem(), ExtenderControllerExtenderProfileMap{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileOutput{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileArrayOutput{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileMapOutput{})
}
