// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// FortiExtender extender profile configuration. Applies to FortiOS Version `>= 7.0.2`.
//
// ## Import
//
// ExtenderController ExtenderProfile can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type ExtenderControllerExtenderProfile struct {
	pulumi.CustomResourceState

	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringOutput `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntOutput `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtenderControllerExtenderProfileCellularPtrOutput `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringOutput `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringOutput `pulumi:"extension"`
	// id
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtenderControllerExtenderProfileLanExtensionPtrOutput `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrOutput `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringOutput `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringOutput `pulumi:"model"`
	// FortiExtender LAN extension backhaul name
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewExtenderControllerExtenderProfile registers a new resource with the given unique name, arguments, and options.
func NewExtenderControllerExtenderProfile(ctx *pulumi.Context,
	name string, args *ExtenderControllerExtenderProfileArgs, opts ...pulumi.ResourceOption) (*ExtenderControllerExtenderProfile, error) {
	if args == nil {
		args = &ExtenderControllerExtenderProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ExtenderControllerExtenderProfile
	err := ctx.RegisterResource("fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtenderControllerExtenderProfile gets an existing ExtenderControllerExtenderProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtenderControllerExtenderProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtenderControllerExtenderProfileState, opts ...pulumi.ResourceOption) (*ExtenderControllerExtenderProfile, error) {
	var resource ExtenderControllerExtenderProfile
	err := ctx.ReadResource("fortios:index/extenderControllerExtenderProfile:ExtenderControllerExtenderProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtenderControllerExtenderProfile resources.
type extenderControllerExtenderProfileState struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular *ExtenderControllerExtenderProfileCellular `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension *string `pulumi:"extension"`
	// id
	Fosid *int `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension *ExtenderControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model *string `pulumi:"model"`
	// FortiExtender LAN extension backhaul name
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ExtenderControllerExtenderProfileState struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtenderControllerExtenderProfileCellularPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringPtrInput
	// id
	Fosid pulumi.IntPtrInput
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtenderControllerExtenderProfileLanExtensionPtrInput
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringPtrInput
	// FortiExtender LAN extension backhaul name
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ExtenderControllerExtenderProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderControllerExtenderProfileState)(nil)).Elem()
}

type extenderControllerExtenderProfileArgs struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess *string `pulumi:"allowaccess"`
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular *ExtenderControllerExtenderProfileCellular `pulumi:"cellular"`
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth *string `pulumi:"enforceBandwidth"`
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension *string `pulumi:"extension"`
	// id
	Fosid *int `pulumi:"fosid"`
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension *ExtenderControllerExtenderProfileLanExtension `pulumi:"lanExtension"`
	// Set the managed extender's administrator password.
	LoginPassword *string `pulumi:"loginPassword"`
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange *string `pulumi:"loginPasswordChange"`
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model *string `pulumi:"model"`
	// FortiExtender LAN extension backhaul name
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ExtenderControllerExtenderProfile resource.
type ExtenderControllerExtenderProfileArgs struct {
	// Control management access to the managed extender. Separate entries with a space. Valid values: `ping`, `telnet`, `http`, `https`, `ssh`, `snmp`.
	Allowaccess pulumi.StringPtrInput
	// FortiExtender LAN extension bandwidth limit (Mbps).
	BandwidthLimit pulumi.IntPtrInput
	// FortiExtender cellular configuration. The structure of `cellular` block is documented below.
	Cellular ExtenderControllerExtenderProfileCellularPtrInput
	// Enable/disable enforcement of bandwidth on LAN extension interface. Valid values: `enable`, `disable`.
	EnforceBandwidth pulumi.StringPtrInput
	// Extension option. Valid values: `wan-extension`, `lan-extension`.
	Extension pulumi.StringPtrInput
	// id
	Fosid pulumi.IntPtrInput
	// FortiExtender lan extension configuration. The structure of `lanExtension` block is documented below.
	LanExtension ExtenderControllerExtenderProfileLanExtensionPtrInput
	// Set the managed extender's administrator password.
	LoginPassword pulumi.StringPtrInput
	// Change or reset the administrator password of a managed extender (yes, default, or no, default = no). Valid values: `yes`, `default`, `no`.
	LoginPasswordChange pulumi.StringPtrInput
	// Model. Valid values: `FX201E`, `FX211E`, `FX200F`, `FXA11F`, `FXE11F`, `FXA21F`, `FXE21F`, `FXA22F`, `FXE22F`, `FX212F`, `FX311F`, `FX312F`, `FX511F`, `FVG21F`, `FVA21F`, `FVG22F`, `FVA22F`, `FX04DA`.
	Model pulumi.StringPtrInput
	// FortiExtender LAN extension backhaul name
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ExtenderControllerExtenderProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extenderControllerExtenderProfileArgs)(nil)).Elem()
}

type ExtenderControllerExtenderProfileInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput
	ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput
}

func (*ExtenderControllerExtenderProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i *ExtenderControllerExtenderProfile) ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput {
	return i.ToExtenderControllerExtenderProfileOutputWithContext(context.Background())
}

func (i *ExtenderControllerExtenderProfile) ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileOutput)
}

// ExtenderControllerExtenderProfileArrayInput is an input type that accepts ExtenderControllerExtenderProfileArray and ExtenderControllerExtenderProfileArrayOutput values.
// You can construct a concrete instance of `ExtenderControllerExtenderProfileArrayInput` via:
//
//          ExtenderControllerExtenderProfileArray{ ExtenderControllerExtenderProfileArgs{...} }
type ExtenderControllerExtenderProfileArrayInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput
	ToExtenderControllerExtenderProfileArrayOutputWithContext(context.Context) ExtenderControllerExtenderProfileArrayOutput
}

type ExtenderControllerExtenderProfileArray []ExtenderControllerExtenderProfileInput

func (ExtenderControllerExtenderProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i ExtenderControllerExtenderProfileArray) ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput {
	return i.ToExtenderControllerExtenderProfileArrayOutputWithContext(context.Background())
}

func (i ExtenderControllerExtenderProfileArray) ToExtenderControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileArrayOutput)
}

// ExtenderControllerExtenderProfileMapInput is an input type that accepts ExtenderControllerExtenderProfileMap and ExtenderControllerExtenderProfileMapOutput values.
// You can construct a concrete instance of `ExtenderControllerExtenderProfileMapInput` via:
//
//          ExtenderControllerExtenderProfileMap{ "key": ExtenderControllerExtenderProfileArgs{...} }
type ExtenderControllerExtenderProfileMapInput interface {
	pulumi.Input

	ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput
	ToExtenderControllerExtenderProfileMapOutputWithContext(context.Context) ExtenderControllerExtenderProfileMapOutput
}

type ExtenderControllerExtenderProfileMap map[string]ExtenderControllerExtenderProfileInput

func (ExtenderControllerExtenderProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (i ExtenderControllerExtenderProfileMap) ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput {
	return i.ToExtenderControllerExtenderProfileMapOutputWithContext(context.Background())
}

func (i ExtenderControllerExtenderProfileMap) ToExtenderControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtenderControllerExtenderProfileMapOutput)
}

type ExtenderControllerExtenderProfileOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileOutput) ToExtenderControllerExtenderProfileOutput() ExtenderControllerExtenderProfileOutput {
	return o
}

func (o ExtenderControllerExtenderProfileOutput) ToExtenderControllerExtenderProfileOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileOutput {
	return o
}

type ExtenderControllerExtenderProfileArrayOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileArrayOutput) ToExtenderControllerExtenderProfileArrayOutput() ExtenderControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtenderControllerExtenderProfileArrayOutput) ToExtenderControllerExtenderProfileArrayOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileArrayOutput {
	return o
}

func (o ExtenderControllerExtenderProfileArrayOutput) Index(i pulumi.IntInput) ExtenderControllerExtenderProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtenderControllerExtenderProfile {
		return vs[0].([]*ExtenderControllerExtenderProfile)[vs[1].(int)]
	}).(ExtenderControllerExtenderProfileOutput)
}

type ExtenderControllerExtenderProfileMapOutput struct{ *pulumi.OutputState }

func (ExtenderControllerExtenderProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtenderControllerExtenderProfile)(nil)).Elem()
}

func (o ExtenderControllerExtenderProfileMapOutput) ToExtenderControllerExtenderProfileMapOutput() ExtenderControllerExtenderProfileMapOutput {
	return o
}

func (o ExtenderControllerExtenderProfileMapOutput) ToExtenderControllerExtenderProfileMapOutputWithContext(ctx context.Context) ExtenderControllerExtenderProfileMapOutput {
	return o
}

func (o ExtenderControllerExtenderProfileMapOutput) MapIndex(k pulumi.StringInput) ExtenderControllerExtenderProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtenderControllerExtenderProfile {
		return vs[0].(map[string]*ExtenderControllerExtenderProfile)[vs[1].(string)]
	}).(ExtenderControllerExtenderProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileInput)(nil)).Elem(), &ExtenderControllerExtenderProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileArrayInput)(nil)).Elem(), ExtenderControllerExtenderProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtenderControllerExtenderProfileMapInput)(nil)).Elem(), ExtenderControllerExtenderProfileMap{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileOutput{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileArrayOutput{})
	pulumi.RegisterOutputType(ExtenderControllerExtenderProfileMapOutput{})
}
