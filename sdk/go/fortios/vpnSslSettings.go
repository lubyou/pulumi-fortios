// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpnSslSettings struct {
	pulumi.CustomResourceState

	Algorithm                  pulumi.StringOutput                         `pulumi:"algorithm"`
	AuthSessionCheckSourceIp   pulumi.StringOutput                         `pulumi:"authSessionCheckSourceIp"`
	AuthTimeout                pulumi.IntOutput                            `pulumi:"authTimeout"`
	AuthenticationRules        VpnSslSettingsAuthenticationRuleArrayOutput `pulumi:"authenticationRules"`
	AutoTunnelStaticRoute      pulumi.StringOutput                         `pulumi:"autoTunnelStaticRoute"`
	BannedCipher               pulumi.StringOutput                         `pulumi:"bannedCipher"`
	BrowserLanguageDetection   pulumi.StringOutput                         `pulumi:"browserLanguageDetection"`
	CheckReferer               pulumi.StringOutput                         `pulumi:"checkReferer"`
	Ciphersuite                pulumi.StringOutput                         `pulumi:"ciphersuite"`
	ClientSigalgs              pulumi.StringOutput                         `pulumi:"clientSigalgs"`
	DefaultPortal              pulumi.StringOutput                         `pulumi:"defaultPortal"`
	DeflateCompressionLevel    pulumi.IntOutput                            `pulumi:"deflateCompressionLevel"`
	DeflateMinDataSize         pulumi.IntOutput                            `pulumi:"deflateMinDataSize"`
	DnsServer1                 pulumi.StringOutput                         `pulumi:"dnsServer1"`
	DnsServer2                 pulumi.StringOutput                         `pulumi:"dnsServer2"`
	DnsSuffix                  pulumi.StringPtrOutput                      `pulumi:"dnsSuffix"`
	DtlsHeartbeatFailCount     pulumi.IntOutput                            `pulumi:"dtlsHeartbeatFailCount"`
	DtlsHeartbeatIdleTimeout   pulumi.IntOutput                            `pulumi:"dtlsHeartbeatIdleTimeout"`
	DtlsHeartbeatInterval      pulumi.IntOutput                            `pulumi:"dtlsHeartbeatInterval"`
	DtlsHelloTimeout           pulumi.IntOutput                            `pulumi:"dtlsHelloTimeout"`
	DtlsMaxProtoVer            pulumi.StringOutput                         `pulumi:"dtlsMaxProtoVer"`
	DtlsMinProtoVer            pulumi.StringOutput                         `pulumi:"dtlsMinProtoVer"`
	DtlsTunnel                 pulumi.StringOutput                         `pulumi:"dtlsTunnel"`
	DualStackMode              pulumi.StringOutput                         `pulumi:"dualStackMode"`
	DynamicSortSubtable        pulumi.StringPtrOutput                      `pulumi:"dynamicSortSubtable"`
	Encode2fSequence           pulumi.StringOutput                         `pulumi:"encode2fSequence"`
	EncryptAndStorePassword    pulumi.StringOutput                         `pulumi:"encryptAndStorePassword"`
	ForceTwoFactorAuth         pulumi.StringOutput                         `pulumi:"forceTwoFactorAuth"`
	GetAllTables               pulumi.StringPtrOutput                      `pulumi:"getAllTables"`
	HeaderXForwardedFor        pulumi.StringOutput                         `pulumi:"headerXForwardedFor"`
	HstsIncludeSubdomains      pulumi.StringOutput                         `pulumi:"hstsIncludeSubdomains"`
	HttpCompression            pulumi.StringOutput                         `pulumi:"httpCompression"`
	HttpOnlyCookie             pulumi.StringOutput                         `pulumi:"httpOnlyCookie"`
	HttpRequestBodyTimeout     pulumi.IntOutput                            `pulumi:"httpRequestBodyTimeout"`
	HttpRequestHeaderTimeout   pulumi.IntOutput                            `pulumi:"httpRequestHeaderTimeout"`
	HttpsRedirect              pulumi.StringOutput                         `pulumi:"httpsRedirect"`
	IdleTimeout                pulumi.IntOutput                            `pulumi:"idleTimeout"`
	Ipv6DnsServer1             pulumi.StringOutput                         `pulumi:"ipv6DnsServer1"`
	Ipv6DnsServer2             pulumi.StringOutput                         `pulumi:"ipv6DnsServer2"`
	Ipv6WinsServer1            pulumi.StringOutput                         `pulumi:"ipv6WinsServer1"`
	Ipv6WinsServer2            pulumi.StringOutput                         `pulumi:"ipv6WinsServer2"`
	LoginAttemptLimit          pulumi.IntOutput                            `pulumi:"loginAttemptLimit"`
	LoginBlockTime             pulumi.IntOutput                            `pulumi:"loginBlockTime"`
	LoginTimeout               pulumi.IntOutput                            `pulumi:"loginTimeout"`
	Port                       pulumi.IntOutput                            `pulumi:"port"`
	PortPrecedence             pulumi.StringOutput                         `pulumi:"portPrecedence"`
	Reqclientcert              pulumi.StringOutput                         `pulumi:"reqclientcert"`
	RouteSourceInterface       pulumi.StringOutput                         `pulumi:"routeSourceInterface"`
	SamlRedirectPort           pulumi.IntOutput                            `pulumi:"samlRedirectPort"`
	ServerHostname             pulumi.StringOutput                         `pulumi:"serverHostname"`
	Servercert                 pulumi.StringOutput                         `pulumi:"servercert"`
	SourceAddress6Negate       pulumi.StringOutput                         `pulumi:"sourceAddress6Negate"`
	SourceAddress6s            VpnSslSettingsSourceAddress6ArrayOutput     `pulumi:"sourceAddress6s"`
	SourceAddressNegate        pulumi.StringOutput                         `pulumi:"sourceAddressNegate"`
	SourceAddresses            VpnSslSettingsSourceAddressArrayOutput      `pulumi:"sourceAddresses"`
	SourceInterfaces           VpnSslSettingsSourceInterfaceArrayOutput    `pulumi:"sourceInterfaces"`
	SslClientRenegotiation     pulumi.StringOutput                         `pulumi:"sslClientRenegotiation"`
	SslInsertEmptyFragment     pulumi.StringOutput                         `pulumi:"sslInsertEmptyFragment"`
	SslMaxProtoVer             pulumi.StringOutput                         `pulumi:"sslMaxProtoVer"`
	SslMinProtoVer             pulumi.StringOutput                         `pulumi:"sslMinProtoVer"`
	Status                     pulumi.StringOutput                         `pulumi:"status"`
	Tlsv10                     pulumi.StringOutput                         `pulumi:"tlsv10"`
	Tlsv11                     pulumi.StringOutput                         `pulumi:"tlsv11"`
	Tlsv12                     pulumi.StringOutput                         `pulumi:"tlsv12"`
	Tlsv13                     pulumi.StringOutput                         `pulumi:"tlsv13"`
	TransformBackwardSlashes   pulumi.StringOutput                         `pulumi:"transformBackwardSlashes"`
	TunnelAddrAssignedMethod   pulumi.StringOutput                         `pulumi:"tunnelAddrAssignedMethod"`
	TunnelConnectWithoutReauth pulumi.StringOutput                         `pulumi:"tunnelConnectWithoutReauth"`
	TunnelIpPools              VpnSslSettingsTunnelIpPoolArrayOutput       `pulumi:"tunnelIpPools"`
	TunnelIpv6Pools            VpnSslSettingsTunnelIpv6PoolArrayOutput     `pulumi:"tunnelIpv6Pools"`
	TunnelUserSessionTimeout   pulumi.IntOutput                            `pulumi:"tunnelUserSessionTimeout"`
	UnsafeLegacyRenegotiation  pulumi.StringOutput                         `pulumi:"unsafeLegacyRenegotiation"`
	UrlObscuration             pulumi.StringOutput                         `pulumi:"urlObscuration"`
	UserPeer                   pulumi.StringOutput                         `pulumi:"userPeer"`
	Vdomparam                  pulumi.StringPtrOutput                      `pulumi:"vdomparam"`
	WebModeSnat                pulumi.StringOutput                         `pulumi:"webModeSnat"`
	WinsServer1                pulumi.StringOutput                         `pulumi:"winsServer1"`
	WinsServer2                pulumi.StringOutput                         `pulumi:"winsServer2"`
	XContentTypeOptions        pulumi.StringOutput                         `pulumi:"xContentTypeOptions"`
	ZtnaTrustedClient          pulumi.StringOutput                         `pulumi:"ztnaTrustedClient"`
}

// NewVpnSslSettings registers a new resource with the given unique name, arguments, and options.
func NewVpnSslSettings(ctx *pulumi.Context,
	name string, args *VpnSslSettingsArgs, opts ...pulumi.ResourceOption) (*VpnSslSettings, error) {
	if args == nil {
		args = &VpnSslSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnSslSettings
	err := ctx.RegisterResource("fortios:index/vpnSslSettings:VpnSslSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnSslSettings gets an existing VpnSslSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnSslSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnSslSettingsState, opts ...pulumi.ResourceOption) (*VpnSslSettings, error) {
	var resource VpnSslSettings
	err := ctx.ReadResource("fortios:index/vpnSslSettings:VpnSslSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnSslSettings resources.
type vpnSslSettingsState struct {
	Algorithm                  *string                            `pulumi:"algorithm"`
	AuthSessionCheckSourceIp   *string                            `pulumi:"authSessionCheckSourceIp"`
	AuthTimeout                *int                               `pulumi:"authTimeout"`
	AuthenticationRules        []VpnSslSettingsAuthenticationRule `pulumi:"authenticationRules"`
	AutoTunnelStaticRoute      *string                            `pulumi:"autoTunnelStaticRoute"`
	BannedCipher               *string                            `pulumi:"bannedCipher"`
	BrowserLanguageDetection   *string                            `pulumi:"browserLanguageDetection"`
	CheckReferer               *string                            `pulumi:"checkReferer"`
	Ciphersuite                *string                            `pulumi:"ciphersuite"`
	ClientSigalgs              *string                            `pulumi:"clientSigalgs"`
	DefaultPortal              *string                            `pulumi:"defaultPortal"`
	DeflateCompressionLevel    *int                               `pulumi:"deflateCompressionLevel"`
	DeflateMinDataSize         *int                               `pulumi:"deflateMinDataSize"`
	DnsServer1                 *string                            `pulumi:"dnsServer1"`
	DnsServer2                 *string                            `pulumi:"dnsServer2"`
	DnsSuffix                  *string                            `pulumi:"dnsSuffix"`
	DtlsHeartbeatFailCount     *int                               `pulumi:"dtlsHeartbeatFailCount"`
	DtlsHeartbeatIdleTimeout   *int                               `pulumi:"dtlsHeartbeatIdleTimeout"`
	DtlsHeartbeatInterval      *int                               `pulumi:"dtlsHeartbeatInterval"`
	DtlsHelloTimeout           *int                               `pulumi:"dtlsHelloTimeout"`
	DtlsMaxProtoVer            *string                            `pulumi:"dtlsMaxProtoVer"`
	DtlsMinProtoVer            *string                            `pulumi:"dtlsMinProtoVer"`
	DtlsTunnel                 *string                            `pulumi:"dtlsTunnel"`
	DualStackMode              *string                            `pulumi:"dualStackMode"`
	DynamicSortSubtable        *string                            `pulumi:"dynamicSortSubtable"`
	Encode2fSequence           *string                            `pulumi:"encode2fSequence"`
	EncryptAndStorePassword    *string                            `pulumi:"encryptAndStorePassword"`
	ForceTwoFactorAuth         *string                            `pulumi:"forceTwoFactorAuth"`
	GetAllTables               *string                            `pulumi:"getAllTables"`
	HeaderXForwardedFor        *string                            `pulumi:"headerXForwardedFor"`
	HstsIncludeSubdomains      *string                            `pulumi:"hstsIncludeSubdomains"`
	HttpCompression            *string                            `pulumi:"httpCompression"`
	HttpOnlyCookie             *string                            `pulumi:"httpOnlyCookie"`
	HttpRequestBodyTimeout     *int                               `pulumi:"httpRequestBodyTimeout"`
	HttpRequestHeaderTimeout   *int                               `pulumi:"httpRequestHeaderTimeout"`
	HttpsRedirect              *string                            `pulumi:"httpsRedirect"`
	IdleTimeout                *int                               `pulumi:"idleTimeout"`
	Ipv6DnsServer1             *string                            `pulumi:"ipv6DnsServer1"`
	Ipv6DnsServer2             *string                            `pulumi:"ipv6DnsServer2"`
	Ipv6WinsServer1            *string                            `pulumi:"ipv6WinsServer1"`
	Ipv6WinsServer2            *string                            `pulumi:"ipv6WinsServer2"`
	LoginAttemptLimit          *int                               `pulumi:"loginAttemptLimit"`
	LoginBlockTime             *int                               `pulumi:"loginBlockTime"`
	LoginTimeout               *int                               `pulumi:"loginTimeout"`
	Port                       *int                               `pulumi:"port"`
	PortPrecedence             *string                            `pulumi:"portPrecedence"`
	Reqclientcert              *string                            `pulumi:"reqclientcert"`
	RouteSourceInterface       *string                            `pulumi:"routeSourceInterface"`
	SamlRedirectPort           *int                               `pulumi:"samlRedirectPort"`
	ServerHostname             *string                            `pulumi:"serverHostname"`
	Servercert                 *string                            `pulumi:"servercert"`
	SourceAddress6Negate       *string                            `pulumi:"sourceAddress6Negate"`
	SourceAddress6s            []VpnSslSettingsSourceAddress6     `pulumi:"sourceAddress6s"`
	SourceAddressNegate        *string                            `pulumi:"sourceAddressNegate"`
	SourceAddresses            []VpnSslSettingsSourceAddress      `pulumi:"sourceAddresses"`
	SourceInterfaces           []VpnSslSettingsSourceInterface    `pulumi:"sourceInterfaces"`
	SslClientRenegotiation     *string                            `pulumi:"sslClientRenegotiation"`
	SslInsertEmptyFragment     *string                            `pulumi:"sslInsertEmptyFragment"`
	SslMaxProtoVer             *string                            `pulumi:"sslMaxProtoVer"`
	SslMinProtoVer             *string                            `pulumi:"sslMinProtoVer"`
	Status                     *string                            `pulumi:"status"`
	Tlsv10                     *string                            `pulumi:"tlsv10"`
	Tlsv11                     *string                            `pulumi:"tlsv11"`
	Tlsv12                     *string                            `pulumi:"tlsv12"`
	Tlsv13                     *string                            `pulumi:"tlsv13"`
	TransformBackwardSlashes   *string                            `pulumi:"transformBackwardSlashes"`
	TunnelAddrAssignedMethod   *string                            `pulumi:"tunnelAddrAssignedMethod"`
	TunnelConnectWithoutReauth *string                            `pulumi:"tunnelConnectWithoutReauth"`
	TunnelIpPools              []VpnSslSettingsTunnelIpPool       `pulumi:"tunnelIpPools"`
	TunnelIpv6Pools            []VpnSslSettingsTunnelIpv6Pool     `pulumi:"tunnelIpv6Pools"`
	TunnelUserSessionTimeout   *int                               `pulumi:"tunnelUserSessionTimeout"`
	UnsafeLegacyRenegotiation  *string                            `pulumi:"unsafeLegacyRenegotiation"`
	UrlObscuration             *string                            `pulumi:"urlObscuration"`
	UserPeer                   *string                            `pulumi:"userPeer"`
	Vdomparam                  *string                            `pulumi:"vdomparam"`
	WebModeSnat                *string                            `pulumi:"webModeSnat"`
	WinsServer1                *string                            `pulumi:"winsServer1"`
	WinsServer2                *string                            `pulumi:"winsServer2"`
	XContentTypeOptions        *string                            `pulumi:"xContentTypeOptions"`
	ZtnaTrustedClient          *string                            `pulumi:"ztnaTrustedClient"`
}

type VpnSslSettingsState struct {
	Algorithm                  pulumi.StringPtrInput
	AuthSessionCheckSourceIp   pulumi.StringPtrInput
	AuthTimeout                pulumi.IntPtrInput
	AuthenticationRules        VpnSslSettingsAuthenticationRuleArrayInput
	AutoTunnelStaticRoute      pulumi.StringPtrInput
	BannedCipher               pulumi.StringPtrInput
	BrowserLanguageDetection   pulumi.StringPtrInput
	CheckReferer               pulumi.StringPtrInput
	Ciphersuite                pulumi.StringPtrInput
	ClientSigalgs              pulumi.StringPtrInput
	DefaultPortal              pulumi.StringPtrInput
	DeflateCompressionLevel    pulumi.IntPtrInput
	DeflateMinDataSize         pulumi.IntPtrInput
	DnsServer1                 pulumi.StringPtrInput
	DnsServer2                 pulumi.StringPtrInput
	DnsSuffix                  pulumi.StringPtrInput
	DtlsHeartbeatFailCount     pulumi.IntPtrInput
	DtlsHeartbeatIdleTimeout   pulumi.IntPtrInput
	DtlsHeartbeatInterval      pulumi.IntPtrInput
	DtlsHelloTimeout           pulumi.IntPtrInput
	DtlsMaxProtoVer            pulumi.StringPtrInput
	DtlsMinProtoVer            pulumi.StringPtrInput
	DtlsTunnel                 pulumi.StringPtrInput
	DualStackMode              pulumi.StringPtrInput
	DynamicSortSubtable        pulumi.StringPtrInput
	Encode2fSequence           pulumi.StringPtrInput
	EncryptAndStorePassword    pulumi.StringPtrInput
	ForceTwoFactorAuth         pulumi.StringPtrInput
	GetAllTables               pulumi.StringPtrInput
	HeaderXForwardedFor        pulumi.StringPtrInput
	HstsIncludeSubdomains      pulumi.StringPtrInput
	HttpCompression            pulumi.StringPtrInput
	HttpOnlyCookie             pulumi.StringPtrInput
	HttpRequestBodyTimeout     pulumi.IntPtrInput
	HttpRequestHeaderTimeout   pulumi.IntPtrInput
	HttpsRedirect              pulumi.StringPtrInput
	IdleTimeout                pulumi.IntPtrInput
	Ipv6DnsServer1             pulumi.StringPtrInput
	Ipv6DnsServer2             pulumi.StringPtrInput
	Ipv6WinsServer1            pulumi.StringPtrInput
	Ipv6WinsServer2            pulumi.StringPtrInput
	LoginAttemptLimit          pulumi.IntPtrInput
	LoginBlockTime             pulumi.IntPtrInput
	LoginTimeout               pulumi.IntPtrInput
	Port                       pulumi.IntPtrInput
	PortPrecedence             pulumi.StringPtrInput
	Reqclientcert              pulumi.StringPtrInput
	RouteSourceInterface       pulumi.StringPtrInput
	SamlRedirectPort           pulumi.IntPtrInput
	ServerHostname             pulumi.StringPtrInput
	Servercert                 pulumi.StringPtrInput
	SourceAddress6Negate       pulumi.StringPtrInput
	SourceAddress6s            VpnSslSettingsSourceAddress6ArrayInput
	SourceAddressNegate        pulumi.StringPtrInput
	SourceAddresses            VpnSslSettingsSourceAddressArrayInput
	SourceInterfaces           VpnSslSettingsSourceInterfaceArrayInput
	SslClientRenegotiation     pulumi.StringPtrInput
	SslInsertEmptyFragment     pulumi.StringPtrInput
	SslMaxProtoVer             pulumi.StringPtrInput
	SslMinProtoVer             pulumi.StringPtrInput
	Status                     pulumi.StringPtrInput
	Tlsv10                     pulumi.StringPtrInput
	Tlsv11                     pulumi.StringPtrInput
	Tlsv12                     pulumi.StringPtrInput
	Tlsv13                     pulumi.StringPtrInput
	TransformBackwardSlashes   pulumi.StringPtrInput
	TunnelAddrAssignedMethod   pulumi.StringPtrInput
	TunnelConnectWithoutReauth pulumi.StringPtrInput
	TunnelIpPools              VpnSslSettingsTunnelIpPoolArrayInput
	TunnelIpv6Pools            VpnSslSettingsTunnelIpv6PoolArrayInput
	TunnelUserSessionTimeout   pulumi.IntPtrInput
	UnsafeLegacyRenegotiation  pulumi.StringPtrInput
	UrlObscuration             pulumi.StringPtrInput
	UserPeer                   pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
	WebModeSnat                pulumi.StringPtrInput
	WinsServer1                pulumi.StringPtrInput
	WinsServer2                pulumi.StringPtrInput
	XContentTypeOptions        pulumi.StringPtrInput
	ZtnaTrustedClient          pulumi.StringPtrInput
}

func (VpnSslSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslSettingsState)(nil)).Elem()
}

type vpnSslSettingsArgs struct {
	Algorithm                  *string                            `pulumi:"algorithm"`
	AuthSessionCheckSourceIp   *string                            `pulumi:"authSessionCheckSourceIp"`
	AuthTimeout                *int                               `pulumi:"authTimeout"`
	AuthenticationRules        []VpnSslSettingsAuthenticationRule `pulumi:"authenticationRules"`
	AutoTunnelStaticRoute      *string                            `pulumi:"autoTunnelStaticRoute"`
	BannedCipher               *string                            `pulumi:"bannedCipher"`
	BrowserLanguageDetection   *string                            `pulumi:"browserLanguageDetection"`
	CheckReferer               *string                            `pulumi:"checkReferer"`
	Ciphersuite                *string                            `pulumi:"ciphersuite"`
	ClientSigalgs              *string                            `pulumi:"clientSigalgs"`
	DefaultPortal              *string                            `pulumi:"defaultPortal"`
	DeflateCompressionLevel    *int                               `pulumi:"deflateCompressionLevel"`
	DeflateMinDataSize         *int                               `pulumi:"deflateMinDataSize"`
	DnsServer1                 *string                            `pulumi:"dnsServer1"`
	DnsServer2                 *string                            `pulumi:"dnsServer2"`
	DnsSuffix                  *string                            `pulumi:"dnsSuffix"`
	DtlsHeartbeatFailCount     *int                               `pulumi:"dtlsHeartbeatFailCount"`
	DtlsHeartbeatIdleTimeout   *int                               `pulumi:"dtlsHeartbeatIdleTimeout"`
	DtlsHeartbeatInterval      *int                               `pulumi:"dtlsHeartbeatInterval"`
	DtlsHelloTimeout           *int                               `pulumi:"dtlsHelloTimeout"`
	DtlsMaxProtoVer            *string                            `pulumi:"dtlsMaxProtoVer"`
	DtlsMinProtoVer            *string                            `pulumi:"dtlsMinProtoVer"`
	DtlsTunnel                 *string                            `pulumi:"dtlsTunnel"`
	DualStackMode              *string                            `pulumi:"dualStackMode"`
	DynamicSortSubtable        *string                            `pulumi:"dynamicSortSubtable"`
	Encode2fSequence           *string                            `pulumi:"encode2fSequence"`
	EncryptAndStorePassword    *string                            `pulumi:"encryptAndStorePassword"`
	ForceTwoFactorAuth         *string                            `pulumi:"forceTwoFactorAuth"`
	GetAllTables               *string                            `pulumi:"getAllTables"`
	HeaderXForwardedFor        *string                            `pulumi:"headerXForwardedFor"`
	HstsIncludeSubdomains      *string                            `pulumi:"hstsIncludeSubdomains"`
	HttpCompression            *string                            `pulumi:"httpCompression"`
	HttpOnlyCookie             *string                            `pulumi:"httpOnlyCookie"`
	HttpRequestBodyTimeout     *int                               `pulumi:"httpRequestBodyTimeout"`
	HttpRequestHeaderTimeout   *int                               `pulumi:"httpRequestHeaderTimeout"`
	HttpsRedirect              *string                            `pulumi:"httpsRedirect"`
	IdleTimeout                *int                               `pulumi:"idleTimeout"`
	Ipv6DnsServer1             *string                            `pulumi:"ipv6DnsServer1"`
	Ipv6DnsServer2             *string                            `pulumi:"ipv6DnsServer2"`
	Ipv6WinsServer1            *string                            `pulumi:"ipv6WinsServer1"`
	Ipv6WinsServer2            *string                            `pulumi:"ipv6WinsServer2"`
	LoginAttemptLimit          *int                               `pulumi:"loginAttemptLimit"`
	LoginBlockTime             *int                               `pulumi:"loginBlockTime"`
	LoginTimeout               *int                               `pulumi:"loginTimeout"`
	Port                       *int                               `pulumi:"port"`
	PortPrecedence             *string                            `pulumi:"portPrecedence"`
	Reqclientcert              *string                            `pulumi:"reqclientcert"`
	RouteSourceInterface       *string                            `pulumi:"routeSourceInterface"`
	SamlRedirectPort           *int                               `pulumi:"samlRedirectPort"`
	ServerHostname             *string                            `pulumi:"serverHostname"`
	Servercert                 *string                            `pulumi:"servercert"`
	SourceAddress6Negate       *string                            `pulumi:"sourceAddress6Negate"`
	SourceAddress6s            []VpnSslSettingsSourceAddress6     `pulumi:"sourceAddress6s"`
	SourceAddressNegate        *string                            `pulumi:"sourceAddressNegate"`
	SourceAddresses            []VpnSslSettingsSourceAddress      `pulumi:"sourceAddresses"`
	SourceInterfaces           []VpnSslSettingsSourceInterface    `pulumi:"sourceInterfaces"`
	SslClientRenegotiation     *string                            `pulumi:"sslClientRenegotiation"`
	SslInsertEmptyFragment     *string                            `pulumi:"sslInsertEmptyFragment"`
	SslMaxProtoVer             *string                            `pulumi:"sslMaxProtoVer"`
	SslMinProtoVer             *string                            `pulumi:"sslMinProtoVer"`
	Status                     *string                            `pulumi:"status"`
	Tlsv10                     *string                            `pulumi:"tlsv10"`
	Tlsv11                     *string                            `pulumi:"tlsv11"`
	Tlsv12                     *string                            `pulumi:"tlsv12"`
	Tlsv13                     *string                            `pulumi:"tlsv13"`
	TransformBackwardSlashes   *string                            `pulumi:"transformBackwardSlashes"`
	TunnelAddrAssignedMethod   *string                            `pulumi:"tunnelAddrAssignedMethod"`
	TunnelConnectWithoutReauth *string                            `pulumi:"tunnelConnectWithoutReauth"`
	TunnelIpPools              []VpnSslSettingsTunnelIpPool       `pulumi:"tunnelIpPools"`
	TunnelIpv6Pools            []VpnSslSettingsTunnelIpv6Pool     `pulumi:"tunnelIpv6Pools"`
	TunnelUserSessionTimeout   *int                               `pulumi:"tunnelUserSessionTimeout"`
	UnsafeLegacyRenegotiation  *string                            `pulumi:"unsafeLegacyRenegotiation"`
	UrlObscuration             *string                            `pulumi:"urlObscuration"`
	UserPeer                   *string                            `pulumi:"userPeer"`
	Vdomparam                  *string                            `pulumi:"vdomparam"`
	WebModeSnat                *string                            `pulumi:"webModeSnat"`
	WinsServer1                *string                            `pulumi:"winsServer1"`
	WinsServer2                *string                            `pulumi:"winsServer2"`
	XContentTypeOptions        *string                            `pulumi:"xContentTypeOptions"`
	ZtnaTrustedClient          *string                            `pulumi:"ztnaTrustedClient"`
}

// The set of arguments for constructing a VpnSslSettings resource.
type VpnSslSettingsArgs struct {
	Algorithm                  pulumi.StringPtrInput
	AuthSessionCheckSourceIp   pulumi.StringPtrInput
	AuthTimeout                pulumi.IntPtrInput
	AuthenticationRules        VpnSslSettingsAuthenticationRuleArrayInput
	AutoTunnelStaticRoute      pulumi.StringPtrInput
	BannedCipher               pulumi.StringPtrInput
	BrowserLanguageDetection   pulumi.StringPtrInput
	CheckReferer               pulumi.StringPtrInput
	Ciphersuite                pulumi.StringPtrInput
	ClientSigalgs              pulumi.StringPtrInput
	DefaultPortal              pulumi.StringPtrInput
	DeflateCompressionLevel    pulumi.IntPtrInput
	DeflateMinDataSize         pulumi.IntPtrInput
	DnsServer1                 pulumi.StringPtrInput
	DnsServer2                 pulumi.StringPtrInput
	DnsSuffix                  pulumi.StringPtrInput
	DtlsHeartbeatFailCount     pulumi.IntPtrInput
	DtlsHeartbeatIdleTimeout   pulumi.IntPtrInput
	DtlsHeartbeatInterval      pulumi.IntPtrInput
	DtlsHelloTimeout           pulumi.IntPtrInput
	DtlsMaxProtoVer            pulumi.StringPtrInput
	DtlsMinProtoVer            pulumi.StringPtrInput
	DtlsTunnel                 pulumi.StringPtrInput
	DualStackMode              pulumi.StringPtrInput
	DynamicSortSubtable        pulumi.StringPtrInput
	Encode2fSequence           pulumi.StringPtrInput
	EncryptAndStorePassword    pulumi.StringPtrInput
	ForceTwoFactorAuth         pulumi.StringPtrInput
	GetAllTables               pulumi.StringPtrInput
	HeaderXForwardedFor        pulumi.StringPtrInput
	HstsIncludeSubdomains      pulumi.StringPtrInput
	HttpCompression            pulumi.StringPtrInput
	HttpOnlyCookie             pulumi.StringPtrInput
	HttpRequestBodyTimeout     pulumi.IntPtrInput
	HttpRequestHeaderTimeout   pulumi.IntPtrInput
	HttpsRedirect              pulumi.StringPtrInput
	IdleTimeout                pulumi.IntPtrInput
	Ipv6DnsServer1             pulumi.StringPtrInput
	Ipv6DnsServer2             pulumi.StringPtrInput
	Ipv6WinsServer1            pulumi.StringPtrInput
	Ipv6WinsServer2            pulumi.StringPtrInput
	LoginAttemptLimit          pulumi.IntPtrInput
	LoginBlockTime             pulumi.IntPtrInput
	LoginTimeout               pulumi.IntPtrInput
	Port                       pulumi.IntPtrInput
	PortPrecedence             pulumi.StringPtrInput
	Reqclientcert              pulumi.StringPtrInput
	RouteSourceInterface       pulumi.StringPtrInput
	SamlRedirectPort           pulumi.IntPtrInput
	ServerHostname             pulumi.StringPtrInput
	Servercert                 pulumi.StringPtrInput
	SourceAddress6Negate       pulumi.StringPtrInput
	SourceAddress6s            VpnSslSettingsSourceAddress6ArrayInput
	SourceAddressNegate        pulumi.StringPtrInput
	SourceAddresses            VpnSslSettingsSourceAddressArrayInput
	SourceInterfaces           VpnSslSettingsSourceInterfaceArrayInput
	SslClientRenegotiation     pulumi.StringPtrInput
	SslInsertEmptyFragment     pulumi.StringPtrInput
	SslMaxProtoVer             pulumi.StringPtrInput
	SslMinProtoVer             pulumi.StringPtrInput
	Status                     pulumi.StringPtrInput
	Tlsv10                     pulumi.StringPtrInput
	Tlsv11                     pulumi.StringPtrInput
	Tlsv12                     pulumi.StringPtrInput
	Tlsv13                     pulumi.StringPtrInput
	TransformBackwardSlashes   pulumi.StringPtrInput
	TunnelAddrAssignedMethod   pulumi.StringPtrInput
	TunnelConnectWithoutReauth pulumi.StringPtrInput
	TunnelIpPools              VpnSslSettingsTunnelIpPoolArrayInput
	TunnelIpv6Pools            VpnSslSettingsTunnelIpv6PoolArrayInput
	TunnelUserSessionTimeout   pulumi.IntPtrInput
	UnsafeLegacyRenegotiation  pulumi.StringPtrInput
	UrlObscuration             pulumi.StringPtrInput
	UserPeer                   pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
	WebModeSnat                pulumi.StringPtrInput
	WinsServer1                pulumi.StringPtrInput
	WinsServer2                pulumi.StringPtrInput
	XContentTypeOptions        pulumi.StringPtrInput
	ZtnaTrustedClient          pulumi.StringPtrInput
}

func (VpnSslSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslSettingsArgs)(nil)).Elem()
}

type VpnSslSettingsInput interface {
	pulumi.Input

	ToVpnSslSettingsOutput() VpnSslSettingsOutput
	ToVpnSslSettingsOutputWithContext(ctx context.Context) VpnSslSettingsOutput
}

func (*VpnSslSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslSettings)(nil)).Elem()
}

func (i *VpnSslSettings) ToVpnSslSettingsOutput() VpnSslSettingsOutput {
	return i.ToVpnSslSettingsOutputWithContext(context.Background())
}

func (i *VpnSslSettings) ToVpnSslSettingsOutputWithContext(ctx context.Context) VpnSslSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslSettingsOutput)
}

// VpnSslSettingsArrayInput is an input type that accepts VpnSslSettingsArray and VpnSslSettingsArrayOutput values.
// You can construct a concrete instance of `VpnSslSettingsArrayInput` via:
//
//	VpnSslSettingsArray{ VpnSslSettingsArgs{...} }
type VpnSslSettingsArrayInput interface {
	pulumi.Input

	ToVpnSslSettingsArrayOutput() VpnSslSettingsArrayOutput
	ToVpnSslSettingsArrayOutputWithContext(context.Context) VpnSslSettingsArrayOutput
}

type VpnSslSettingsArray []VpnSslSettingsInput

func (VpnSslSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslSettings)(nil)).Elem()
}

func (i VpnSslSettingsArray) ToVpnSslSettingsArrayOutput() VpnSslSettingsArrayOutput {
	return i.ToVpnSslSettingsArrayOutputWithContext(context.Background())
}

func (i VpnSslSettingsArray) ToVpnSslSettingsArrayOutputWithContext(ctx context.Context) VpnSslSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslSettingsArrayOutput)
}

// VpnSslSettingsMapInput is an input type that accepts VpnSslSettingsMap and VpnSslSettingsMapOutput values.
// You can construct a concrete instance of `VpnSslSettingsMapInput` via:
//
//	VpnSslSettingsMap{ "key": VpnSslSettingsArgs{...} }
type VpnSslSettingsMapInput interface {
	pulumi.Input

	ToVpnSslSettingsMapOutput() VpnSslSettingsMapOutput
	ToVpnSslSettingsMapOutputWithContext(context.Context) VpnSslSettingsMapOutput
}

type VpnSslSettingsMap map[string]VpnSslSettingsInput

func (VpnSslSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslSettings)(nil)).Elem()
}

func (i VpnSslSettingsMap) ToVpnSslSettingsMapOutput() VpnSslSettingsMapOutput {
	return i.ToVpnSslSettingsMapOutputWithContext(context.Background())
}

func (i VpnSslSettingsMap) ToVpnSslSettingsMapOutputWithContext(ctx context.Context) VpnSslSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslSettingsMapOutput)
}

type VpnSslSettingsOutput struct{ *pulumi.OutputState }

func (VpnSslSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslSettings)(nil)).Elem()
}

func (o VpnSslSettingsOutput) ToVpnSslSettingsOutput() VpnSslSettingsOutput {
	return o
}

func (o VpnSslSettingsOutput) ToVpnSslSettingsOutputWithContext(ctx context.Context) VpnSslSettingsOutput {
	return o
}

func (o VpnSslSettingsOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Algorithm }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) AuthSessionCheckSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.AuthSessionCheckSourceIp }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) AuthTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.AuthTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) AuthenticationRules() VpnSslSettingsAuthenticationRuleArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsAuthenticationRuleArrayOutput { return v.AuthenticationRules }).(VpnSslSettingsAuthenticationRuleArrayOutput)
}

func (o VpnSslSettingsOutput) AutoTunnelStaticRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.AutoTunnelStaticRoute }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) BannedCipher() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.BannedCipher }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) BrowserLanguageDetection() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.BrowserLanguageDetection }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) CheckReferer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.CheckReferer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Ciphersuite() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Ciphersuite }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) ClientSigalgs() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.ClientSigalgs }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DefaultPortal() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DefaultPortal }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DeflateCompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DeflateCompressionLevel }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DeflateMinDataSize() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DeflateMinDataSize }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DnsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DnsServer1 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DnsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DnsServer2 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringPtrOutput { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

func (o VpnSslSettingsOutput) DtlsHeartbeatFailCount() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DtlsHeartbeatFailCount }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DtlsHeartbeatIdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DtlsHeartbeatIdleTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DtlsHeartbeatInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DtlsHeartbeatInterval }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DtlsHelloTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.DtlsHelloTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) DtlsMaxProtoVer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DtlsMaxProtoVer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DtlsMinProtoVer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DtlsMinProtoVer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DtlsTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DtlsTunnel }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DualStackMode() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.DualStackMode }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o VpnSslSettingsOutput) Encode2fSequence() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Encode2fSequence }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) EncryptAndStorePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.EncryptAndStorePassword }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) ForceTwoFactorAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.ForceTwoFactorAuth }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o VpnSslSettingsOutput) HeaderXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.HeaderXForwardedFor }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) HstsIncludeSubdomains() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.HstsIncludeSubdomains }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) HttpCompression() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.HttpCompression }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) HttpOnlyCookie() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.HttpOnlyCookie }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) HttpRequestBodyTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.HttpRequestBodyTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) HttpRequestHeaderTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.HttpRequestHeaderTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) HttpsRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.HttpsRedirect }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.IdleTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) Ipv6DnsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Ipv6DnsServer1 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Ipv6DnsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Ipv6DnsServer2 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Ipv6WinsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Ipv6WinsServer1 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Ipv6WinsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Ipv6WinsServer2 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) LoginAttemptLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.LoginAttemptLimit }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) LoginBlockTime() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.LoginBlockTime }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) LoginTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.LoginTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) PortPrecedence() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.PortPrecedence }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Reqclientcert() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Reqclientcert }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) RouteSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.RouteSourceInterface }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SamlRedirectPort() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.SamlRedirectPort }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) ServerHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.ServerHostname }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Servercert() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Servercert }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SourceAddress6Negate() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SourceAddress6Negate }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SourceAddress6s() VpnSslSettingsSourceAddress6ArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsSourceAddress6ArrayOutput { return v.SourceAddress6s }).(VpnSslSettingsSourceAddress6ArrayOutput)
}

func (o VpnSslSettingsOutput) SourceAddressNegate() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SourceAddressNegate }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SourceAddresses() VpnSslSettingsSourceAddressArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsSourceAddressArrayOutput { return v.SourceAddresses }).(VpnSslSettingsSourceAddressArrayOutput)
}

func (o VpnSslSettingsOutput) SourceInterfaces() VpnSslSettingsSourceInterfaceArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsSourceInterfaceArrayOutput { return v.SourceInterfaces }).(VpnSslSettingsSourceInterfaceArrayOutput)
}

func (o VpnSslSettingsOutput) SslClientRenegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SslClientRenegotiation }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SslInsertEmptyFragment() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SslInsertEmptyFragment }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SslMaxProtoVer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SslMaxProtoVer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) SslMinProtoVer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.SslMinProtoVer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Tlsv10() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Tlsv10 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Tlsv11() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Tlsv11 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Tlsv12() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Tlsv12 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Tlsv13() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.Tlsv13 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) TransformBackwardSlashes() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.TransformBackwardSlashes }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) TunnelAddrAssignedMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.TunnelAddrAssignedMethod }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) TunnelConnectWithoutReauth() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.TunnelConnectWithoutReauth }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) TunnelIpPools() VpnSslSettingsTunnelIpPoolArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsTunnelIpPoolArrayOutput { return v.TunnelIpPools }).(VpnSslSettingsTunnelIpPoolArrayOutput)
}

func (o VpnSslSettingsOutput) TunnelIpv6Pools() VpnSslSettingsTunnelIpv6PoolArrayOutput {
	return o.ApplyT(func(v *VpnSslSettings) VpnSslSettingsTunnelIpv6PoolArrayOutput { return v.TunnelIpv6Pools }).(VpnSslSettingsTunnelIpv6PoolArrayOutput)
}

func (o VpnSslSettingsOutput) TunnelUserSessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.IntOutput { return v.TunnelUserSessionTimeout }).(pulumi.IntOutput)
}

func (o VpnSslSettingsOutput) UnsafeLegacyRenegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.UnsafeLegacyRenegotiation }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) UrlObscuration() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.UrlObscuration }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) UserPeer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.UserPeer }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o VpnSslSettingsOutput) WebModeSnat() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.WebModeSnat }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) WinsServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.WinsServer1 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) WinsServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.WinsServer2 }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) XContentTypeOptions() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.XContentTypeOptions }).(pulumi.StringOutput)
}

func (o VpnSslSettingsOutput) ZtnaTrustedClient() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslSettings) pulumi.StringOutput { return v.ZtnaTrustedClient }).(pulumi.StringOutput)
}

type VpnSslSettingsArrayOutput struct{ *pulumi.OutputState }

func (VpnSslSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslSettings)(nil)).Elem()
}

func (o VpnSslSettingsArrayOutput) ToVpnSslSettingsArrayOutput() VpnSslSettingsArrayOutput {
	return o
}

func (o VpnSslSettingsArrayOutput) ToVpnSslSettingsArrayOutputWithContext(ctx context.Context) VpnSslSettingsArrayOutput {
	return o
}

func (o VpnSslSettingsArrayOutput) Index(i pulumi.IntInput) VpnSslSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnSslSettings {
		return vs[0].([]*VpnSslSettings)[vs[1].(int)]
	}).(VpnSslSettingsOutput)
}

type VpnSslSettingsMapOutput struct{ *pulumi.OutputState }

func (VpnSslSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslSettings)(nil)).Elem()
}

func (o VpnSslSettingsMapOutput) ToVpnSslSettingsMapOutput() VpnSslSettingsMapOutput {
	return o
}

func (o VpnSslSettingsMapOutput) ToVpnSslSettingsMapOutputWithContext(ctx context.Context) VpnSslSettingsMapOutput {
	return o
}

func (o VpnSslSettingsMapOutput) MapIndex(k pulumi.StringInput) VpnSslSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnSslSettings {
		return vs[0].(map[string]*VpnSslSettings)[vs[1].(string)]
	}).(VpnSslSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslSettingsInput)(nil)).Elem(), &VpnSslSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslSettingsArrayInput)(nil)).Elem(), VpnSslSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslSettingsMapInput)(nil)).Elem(), VpnSslSettingsMap{})
	pulumi.RegisterOutputType(VpnSslSettingsOutput{})
	pulumi.RegisterOutputType(VpnSslSettingsArrayOutput{})
	pulumi.RegisterOutputType(VpnSslSettingsMapOutput{})
}
