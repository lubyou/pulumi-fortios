// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogThreatWeight struct {
	pulumi.CustomResourceState

	Applications             LogThreatWeightApplicationArrayOutput `pulumi:"applications"`
	BlockedConnection        pulumi.StringOutput                   `pulumi:"blockedConnection"`
	BotnetConnectionDetected pulumi.StringOutput                   `pulumi:"botnetConnectionDetected"`
	DynamicSortSubtable      pulumi.StringPtrOutput                `pulumi:"dynamicSortSubtable"`
	FailedConnection         pulumi.StringOutput                   `pulumi:"failedConnection"`
	Geolocations             LogThreatWeightGeolocationArrayOutput `pulumi:"geolocations"`
	Ips                      LogThreatWeightIpsOutput              `pulumi:"ips"`
	Level                    LogThreatWeightLevelOutput            `pulumi:"level"`
	Malware                  LogThreatWeightMalwareOutput          `pulumi:"malware"`
	Status                   pulumi.StringOutput                   `pulumi:"status"`
	UrlBlockDetected         pulumi.StringOutput                   `pulumi:"urlBlockDetected"`
	Vdomparam                pulumi.StringPtrOutput                `pulumi:"vdomparam"`
	Webs                     LogThreatWeightWebArrayOutput         `pulumi:"webs"`
}

// NewLogThreatWeight registers a new resource with the given unique name, arguments, and options.
func NewLogThreatWeight(ctx *pulumi.Context,
	name string, args *LogThreatWeightArgs, opts ...pulumi.ResourceOption) (*LogThreatWeight, error) {
	if args == nil {
		args = &LogThreatWeightArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogThreatWeight
	err := ctx.RegisterResource("fortios:index/logThreatWeight:LogThreatWeight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogThreatWeight gets an existing LogThreatWeight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogThreatWeight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogThreatWeightState, opts ...pulumi.ResourceOption) (*LogThreatWeight, error) {
	var resource LogThreatWeight
	err := ctx.ReadResource("fortios:index/logThreatWeight:LogThreatWeight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogThreatWeight resources.
type logThreatWeightState struct {
	Applications             []LogThreatWeightApplication `pulumi:"applications"`
	BlockedConnection        *string                      `pulumi:"blockedConnection"`
	BotnetConnectionDetected *string                      `pulumi:"botnetConnectionDetected"`
	DynamicSortSubtable      *string                      `pulumi:"dynamicSortSubtable"`
	FailedConnection         *string                      `pulumi:"failedConnection"`
	Geolocations             []LogThreatWeightGeolocation `pulumi:"geolocations"`
	Ips                      *LogThreatWeightIps          `pulumi:"ips"`
	Level                    *LogThreatWeightLevel        `pulumi:"level"`
	Malware                  *LogThreatWeightMalware      `pulumi:"malware"`
	Status                   *string                      `pulumi:"status"`
	UrlBlockDetected         *string                      `pulumi:"urlBlockDetected"`
	Vdomparam                *string                      `pulumi:"vdomparam"`
	Webs                     []LogThreatWeightWeb         `pulumi:"webs"`
}

type LogThreatWeightState struct {
	Applications             LogThreatWeightApplicationArrayInput
	BlockedConnection        pulumi.StringPtrInput
	BotnetConnectionDetected pulumi.StringPtrInput
	DynamicSortSubtable      pulumi.StringPtrInput
	FailedConnection         pulumi.StringPtrInput
	Geolocations             LogThreatWeightGeolocationArrayInput
	Ips                      LogThreatWeightIpsPtrInput
	Level                    LogThreatWeightLevelPtrInput
	Malware                  LogThreatWeightMalwarePtrInput
	Status                   pulumi.StringPtrInput
	UrlBlockDetected         pulumi.StringPtrInput
	Vdomparam                pulumi.StringPtrInput
	Webs                     LogThreatWeightWebArrayInput
}

func (LogThreatWeightState) ElementType() reflect.Type {
	return reflect.TypeOf((*logThreatWeightState)(nil)).Elem()
}

type logThreatWeightArgs struct {
	Applications             []LogThreatWeightApplication `pulumi:"applications"`
	BlockedConnection        *string                      `pulumi:"blockedConnection"`
	BotnetConnectionDetected *string                      `pulumi:"botnetConnectionDetected"`
	DynamicSortSubtable      *string                      `pulumi:"dynamicSortSubtable"`
	FailedConnection         *string                      `pulumi:"failedConnection"`
	Geolocations             []LogThreatWeightGeolocation `pulumi:"geolocations"`
	Ips                      *LogThreatWeightIps          `pulumi:"ips"`
	Level                    *LogThreatWeightLevel        `pulumi:"level"`
	Malware                  *LogThreatWeightMalware      `pulumi:"malware"`
	Status                   *string                      `pulumi:"status"`
	UrlBlockDetected         *string                      `pulumi:"urlBlockDetected"`
	Vdomparam                *string                      `pulumi:"vdomparam"`
	Webs                     []LogThreatWeightWeb         `pulumi:"webs"`
}

// The set of arguments for constructing a LogThreatWeight resource.
type LogThreatWeightArgs struct {
	Applications             LogThreatWeightApplicationArrayInput
	BlockedConnection        pulumi.StringPtrInput
	BotnetConnectionDetected pulumi.StringPtrInput
	DynamicSortSubtable      pulumi.StringPtrInput
	FailedConnection         pulumi.StringPtrInput
	Geolocations             LogThreatWeightGeolocationArrayInput
	Ips                      LogThreatWeightIpsPtrInput
	Level                    LogThreatWeightLevelPtrInput
	Malware                  LogThreatWeightMalwarePtrInput
	Status                   pulumi.StringPtrInput
	UrlBlockDetected         pulumi.StringPtrInput
	Vdomparam                pulumi.StringPtrInput
	Webs                     LogThreatWeightWebArrayInput
}

func (LogThreatWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logThreatWeightArgs)(nil)).Elem()
}

type LogThreatWeightInput interface {
	pulumi.Input

	ToLogThreatWeightOutput() LogThreatWeightOutput
	ToLogThreatWeightOutputWithContext(ctx context.Context) LogThreatWeightOutput
}

func (*LogThreatWeight) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeight)(nil)).Elem()
}

func (i *LogThreatWeight) ToLogThreatWeightOutput() LogThreatWeightOutput {
	return i.ToLogThreatWeightOutputWithContext(context.Background())
}

func (i *LogThreatWeight) ToLogThreatWeightOutputWithContext(ctx context.Context) LogThreatWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightOutput)
}

// LogThreatWeightArrayInput is an input type that accepts LogThreatWeightArray and LogThreatWeightArrayOutput values.
// You can construct a concrete instance of `LogThreatWeightArrayInput` via:
//
//	LogThreatWeightArray{ LogThreatWeightArgs{...} }
type LogThreatWeightArrayInput interface {
	pulumi.Input

	ToLogThreatWeightArrayOutput() LogThreatWeightArrayOutput
	ToLogThreatWeightArrayOutputWithContext(context.Context) LogThreatWeightArrayOutput
}

type LogThreatWeightArray []LogThreatWeightInput

func (LogThreatWeightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogThreatWeight)(nil)).Elem()
}

func (i LogThreatWeightArray) ToLogThreatWeightArrayOutput() LogThreatWeightArrayOutput {
	return i.ToLogThreatWeightArrayOutputWithContext(context.Background())
}

func (i LogThreatWeightArray) ToLogThreatWeightArrayOutputWithContext(ctx context.Context) LogThreatWeightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightArrayOutput)
}

// LogThreatWeightMapInput is an input type that accepts LogThreatWeightMap and LogThreatWeightMapOutput values.
// You can construct a concrete instance of `LogThreatWeightMapInput` via:
//
//	LogThreatWeightMap{ "key": LogThreatWeightArgs{...} }
type LogThreatWeightMapInput interface {
	pulumi.Input

	ToLogThreatWeightMapOutput() LogThreatWeightMapOutput
	ToLogThreatWeightMapOutputWithContext(context.Context) LogThreatWeightMapOutput
}

type LogThreatWeightMap map[string]LogThreatWeightInput

func (LogThreatWeightMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogThreatWeight)(nil)).Elem()
}

func (i LogThreatWeightMap) ToLogThreatWeightMapOutput() LogThreatWeightMapOutput {
	return i.ToLogThreatWeightMapOutputWithContext(context.Background())
}

func (i LogThreatWeightMap) ToLogThreatWeightMapOutputWithContext(ctx context.Context) LogThreatWeightMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightMapOutput)
}

type LogThreatWeightOutput struct{ *pulumi.OutputState }

func (LogThreatWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeight)(nil)).Elem()
}

func (o LogThreatWeightOutput) ToLogThreatWeightOutput() LogThreatWeightOutput {
	return o
}

func (o LogThreatWeightOutput) ToLogThreatWeightOutputWithContext(ctx context.Context) LogThreatWeightOutput {
	return o
}

func (o LogThreatWeightOutput) Applications() LogThreatWeightApplicationArrayOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightApplicationArrayOutput { return v.Applications }).(LogThreatWeightApplicationArrayOutput)
}

func (o LogThreatWeightOutput) BlockedConnection() pulumi.StringOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringOutput { return v.BlockedConnection }).(pulumi.StringOutput)
}

func (o LogThreatWeightOutput) BotnetConnectionDetected() pulumi.StringOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringOutput { return v.BotnetConnectionDetected }).(pulumi.StringOutput)
}

func (o LogThreatWeightOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightOutput) FailedConnection() pulumi.StringOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringOutput { return v.FailedConnection }).(pulumi.StringOutput)
}

func (o LogThreatWeightOutput) Geolocations() LogThreatWeightGeolocationArrayOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightGeolocationArrayOutput { return v.Geolocations }).(LogThreatWeightGeolocationArrayOutput)
}

func (o LogThreatWeightOutput) Ips() LogThreatWeightIpsOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightIpsOutput { return v.Ips }).(LogThreatWeightIpsOutput)
}

func (o LogThreatWeightOutput) Level() LogThreatWeightLevelOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightLevelOutput { return v.Level }).(LogThreatWeightLevelOutput)
}

func (o LogThreatWeightOutput) Malware() LogThreatWeightMalwareOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightMalwareOutput { return v.Malware }).(LogThreatWeightMalwareOutput)
}

func (o LogThreatWeightOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LogThreatWeightOutput) UrlBlockDetected() pulumi.StringOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringOutput { return v.UrlBlockDetected }).(pulumi.StringOutput)
}

func (o LogThreatWeightOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeight) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightOutput) Webs() LogThreatWeightWebArrayOutput {
	return o.ApplyT(func(v *LogThreatWeight) LogThreatWeightWebArrayOutput { return v.Webs }).(LogThreatWeightWebArrayOutput)
}

type LogThreatWeightArrayOutput struct{ *pulumi.OutputState }

func (LogThreatWeightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogThreatWeight)(nil)).Elem()
}

func (o LogThreatWeightArrayOutput) ToLogThreatWeightArrayOutput() LogThreatWeightArrayOutput {
	return o
}

func (o LogThreatWeightArrayOutput) ToLogThreatWeightArrayOutputWithContext(ctx context.Context) LogThreatWeightArrayOutput {
	return o
}

func (o LogThreatWeightArrayOutput) Index(i pulumi.IntInput) LogThreatWeightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogThreatWeight {
		return vs[0].([]*LogThreatWeight)[vs[1].(int)]
	}).(LogThreatWeightOutput)
}

type LogThreatWeightMapOutput struct{ *pulumi.OutputState }

func (LogThreatWeightMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogThreatWeight)(nil)).Elem()
}

func (o LogThreatWeightMapOutput) ToLogThreatWeightMapOutput() LogThreatWeightMapOutput {
	return o
}

func (o LogThreatWeightMapOutput) ToLogThreatWeightMapOutputWithContext(ctx context.Context) LogThreatWeightMapOutput {
	return o
}

func (o LogThreatWeightMapOutput) MapIndex(k pulumi.StringInput) LogThreatWeightOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogThreatWeight {
		return vs[0].(map[string]*LogThreatWeight)[vs[1].(string)]
	}).(LogThreatWeightOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightInput)(nil)).Elem(), &LogThreatWeight{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightArrayInput)(nil)).Elem(), LogThreatWeightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightMapInput)(nil)).Elem(), LogThreatWeightMap{})
	pulumi.RegisterOutputType(LogThreatWeightOutput{})
	pulumi.RegisterOutputType(LogThreatWeightArrayOutput{})
	pulumi.RegisterOutputType(LogThreatWeightMapOutput{})
}
