// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WirelessControllerSyslogProfile struct {
	pulumi.CustomResourceState

	Comment        pulumi.StringPtrOutput `pulumi:"comment"`
	LogLevel       pulumi.StringOutput    `pulumi:"logLevel"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	ServerAddrType pulumi.StringOutput    `pulumi:"serverAddrType"`
	ServerFqdn     pulumi.StringOutput    `pulumi:"serverFqdn"`
	ServerIp       pulumi.StringOutput    `pulumi:"serverIp"`
	ServerPort     pulumi.IntOutput       `pulumi:"serverPort"`
	ServerStatus   pulumi.StringOutput    `pulumi:"serverStatus"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerSyslogProfile registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerSyslogProfile(ctx *pulumi.Context,
	name string, args *WirelessControllerSyslogProfileArgs, opts ...pulumi.ResourceOption) (*WirelessControllerSyslogProfile, error) {
	if args == nil {
		args = &WirelessControllerSyslogProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessControllerSyslogProfile
	err := ctx.RegisterResource("fortios:index/wirelessControllerSyslogProfile:WirelessControllerSyslogProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerSyslogProfile gets an existing WirelessControllerSyslogProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerSyslogProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerSyslogProfileState, opts ...pulumi.ResourceOption) (*WirelessControllerSyslogProfile, error) {
	var resource WirelessControllerSyslogProfile
	err := ctx.ReadResource("fortios:index/wirelessControllerSyslogProfile:WirelessControllerSyslogProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerSyslogProfile resources.
type wirelessControllerSyslogProfileState struct {
	Comment        *string `pulumi:"comment"`
	LogLevel       *string `pulumi:"logLevel"`
	Name           *string `pulumi:"name"`
	ServerAddrType *string `pulumi:"serverAddrType"`
	ServerFqdn     *string `pulumi:"serverFqdn"`
	ServerIp       *string `pulumi:"serverIp"`
	ServerPort     *int    `pulumi:"serverPort"`
	ServerStatus   *string `pulumi:"serverStatus"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

type WirelessControllerSyslogProfileState struct {
	Comment        pulumi.StringPtrInput
	LogLevel       pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	ServerAddrType pulumi.StringPtrInput
	ServerFqdn     pulumi.StringPtrInput
	ServerIp       pulumi.StringPtrInput
	ServerPort     pulumi.IntPtrInput
	ServerStatus   pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (WirelessControllerSyslogProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerSyslogProfileState)(nil)).Elem()
}

type wirelessControllerSyslogProfileArgs struct {
	Comment        *string `pulumi:"comment"`
	LogLevel       *string `pulumi:"logLevel"`
	Name           *string `pulumi:"name"`
	ServerAddrType *string `pulumi:"serverAddrType"`
	ServerFqdn     *string `pulumi:"serverFqdn"`
	ServerIp       *string `pulumi:"serverIp"`
	ServerPort     *int    `pulumi:"serverPort"`
	ServerStatus   *string `pulumi:"serverStatus"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerSyslogProfile resource.
type WirelessControllerSyslogProfileArgs struct {
	Comment        pulumi.StringPtrInput
	LogLevel       pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	ServerAddrType pulumi.StringPtrInput
	ServerFqdn     pulumi.StringPtrInput
	ServerIp       pulumi.StringPtrInput
	ServerPort     pulumi.IntPtrInput
	ServerStatus   pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (WirelessControllerSyslogProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerSyslogProfileArgs)(nil)).Elem()
}

type WirelessControllerSyslogProfileInput interface {
	pulumi.Input

	ToWirelessControllerSyslogProfileOutput() WirelessControllerSyslogProfileOutput
	ToWirelessControllerSyslogProfileOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileOutput
}

func (*WirelessControllerSyslogProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerSyslogProfile)(nil)).Elem()
}

func (i *WirelessControllerSyslogProfile) ToWirelessControllerSyslogProfileOutput() WirelessControllerSyslogProfileOutput {
	return i.ToWirelessControllerSyslogProfileOutputWithContext(context.Background())
}

func (i *WirelessControllerSyslogProfile) ToWirelessControllerSyslogProfileOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerSyslogProfileOutput)
}

func (i *WirelessControllerSyslogProfile) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerSyslogProfile] {
	return pulumix.Output[*WirelessControllerSyslogProfile]{
		OutputState: i.ToWirelessControllerSyslogProfileOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerSyslogProfileArrayInput is an input type that accepts WirelessControllerSyslogProfileArray and WirelessControllerSyslogProfileArrayOutput values.
// You can construct a concrete instance of `WirelessControllerSyslogProfileArrayInput` via:
//
//	WirelessControllerSyslogProfileArray{ WirelessControllerSyslogProfileArgs{...} }
type WirelessControllerSyslogProfileArrayInput interface {
	pulumi.Input

	ToWirelessControllerSyslogProfileArrayOutput() WirelessControllerSyslogProfileArrayOutput
	ToWirelessControllerSyslogProfileArrayOutputWithContext(context.Context) WirelessControllerSyslogProfileArrayOutput
}

type WirelessControllerSyslogProfileArray []WirelessControllerSyslogProfileInput

func (WirelessControllerSyslogProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerSyslogProfile)(nil)).Elem()
}

func (i WirelessControllerSyslogProfileArray) ToWirelessControllerSyslogProfileArrayOutput() WirelessControllerSyslogProfileArrayOutput {
	return i.ToWirelessControllerSyslogProfileArrayOutputWithContext(context.Background())
}

func (i WirelessControllerSyslogProfileArray) ToWirelessControllerSyslogProfileArrayOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerSyslogProfileArrayOutput)
}

func (i WirelessControllerSyslogProfileArray) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerSyslogProfile] {
	return pulumix.Output[[]*WirelessControllerSyslogProfile]{
		OutputState: i.ToWirelessControllerSyslogProfileArrayOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerSyslogProfileMapInput is an input type that accepts WirelessControllerSyslogProfileMap and WirelessControllerSyslogProfileMapOutput values.
// You can construct a concrete instance of `WirelessControllerSyslogProfileMapInput` via:
//
//	WirelessControllerSyslogProfileMap{ "key": WirelessControllerSyslogProfileArgs{...} }
type WirelessControllerSyslogProfileMapInput interface {
	pulumi.Input

	ToWirelessControllerSyslogProfileMapOutput() WirelessControllerSyslogProfileMapOutput
	ToWirelessControllerSyslogProfileMapOutputWithContext(context.Context) WirelessControllerSyslogProfileMapOutput
}

type WirelessControllerSyslogProfileMap map[string]WirelessControllerSyslogProfileInput

func (WirelessControllerSyslogProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerSyslogProfile)(nil)).Elem()
}

func (i WirelessControllerSyslogProfileMap) ToWirelessControllerSyslogProfileMapOutput() WirelessControllerSyslogProfileMapOutput {
	return i.ToWirelessControllerSyslogProfileMapOutputWithContext(context.Background())
}

func (i WirelessControllerSyslogProfileMap) ToWirelessControllerSyslogProfileMapOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerSyslogProfileMapOutput)
}

func (i WirelessControllerSyslogProfileMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerSyslogProfile] {
	return pulumix.Output[map[string]*WirelessControllerSyslogProfile]{
		OutputState: i.ToWirelessControllerSyslogProfileMapOutputWithContext(ctx).OutputState,
	}
}

type WirelessControllerSyslogProfileOutput struct{ *pulumi.OutputState }

func (WirelessControllerSyslogProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerSyslogProfile)(nil)).Elem()
}

func (o WirelessControllerSyslogProfileOutput) ToWirelessControllerSyslogProfileOutput() WirelessControllerSyslogProfileOutput {
	return o
}

func (o WirelessControllerSyslogProfileOutput) ToWirelessControllerSyslogProfileOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileOutput {
	return o
}

func (o WirelessControllerSyslogProfileOutput) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerSyslogProfile] {
	return pulumix.Output[*WirelessControllerSyslogProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerSyslogProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerSyslogProfileOutput) LogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.LogLevel }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) ServerAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.ServerAddrType }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) ServerFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.ServerFqdn }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) ServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.ServerIp }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.IntOutput { return v.ServerPort }).(pulumi.IntOutput)
}

func (o WirelessControllerSyslogProfileOutput) ServerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringOutput { return v.ServerStatus }).(pulumi.StringOutput)
}

func (o WirelessControllerSyslogProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerSyslogProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WirelessControllerSyslogProfileArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerSyslogProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerSyslogProfile)(nil)).Elem()
}

func (o WirelessControllerSyslogProfileArrayOutput) ToWirelessControllerSyslogProfileArrayOutput() WirelessControllerSyslogProfileArrayOutput {
	return o
}

func (o WirelessControllerSyslogProfileArrayOutput) ToWirelessControllerSyslogProfileArrayOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileArrayOutput {
	return o
}

func (o WirelessControllerSyslogProfileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerSyslogProfile] {
	return pulumix.Output[[]*WirelessControllerSyslogProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerSyslogProfileArrayOutput) Index(i pulumi.IntInput) WirelessControllerSyslogProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerSyslogProfile {
		return vs[0].([]*WirelessControllerSyslogProfile)[vs[1].(int)]
	}).(WirelessControllerSyslogProfileOutput)
}

type WirelessControllerSyslogProfileMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerSyslogProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerSyslogProfile)(nil)).Elem()
}

func (o WirelessControllerSyslogProfileMapOutput) ToWirelessControllerSyslogProfileMapOutput() WirelessControllerSyslogProfileMapOutput {
	return o
}

func (o WirelessControllerSyslogProfileMapOutput) ToWirelessControllerSyslogProfileMapOutputWithContext(ctx context.Context) WirelessControllerSyslogProfileMapOutput {
	return o
}

func (o WirelessControllerSyslogProfileMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerSyslogProfile] {
	return pulumix.Output[map[string]*WirelessControllerSyslogProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerSyslogProfileMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerSyslogProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerSyslogProfile {
		return vs[0].(map[string]*WirelessControllerSyslogProfile)[vs[1].(string)]
	}).(WirelessControllerSyslogProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerSyslogProfileInput)(nil)).Elem(), &WirelessControllerSyslogProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerSyslogProfileArrayInput)(nil)).Elem(), WirelessControllerSyslogProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerSyslogProfileMapInput)(nil)).Elem(), WirelessControllerSyslogProfileMap{})
	pulumi.RegisterOutputType(WirelessControllerSyslogProfileOutput{})
	pulumi.RegisterOutputType(WirelessControllerSyslogProfileArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerSyslogProfileMapOutput{})
}
