// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure authentication setting.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewAuthenticationSetting(ctx, "trname", &fortios.AuthenticationSettingArgs{
// 			AuthHttps:            pulumi.String("enable"),
// 			CaptivePortalIp:      pulumi.String("0.0.0.0"),
// 			CaptivePortalIp6:     pulumi.String("::"),
// 			CaptivePortalPort:    pulumi.Int(7830),
// 			CaptivePortalSslPort: pulumi.Int(7831),
// 			CaptivePortalType:    pulumi.String("fqdn"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Authentication Setting can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/authenticationSetting:AuthenticationSetting labelname AuthenticationSetting
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type AuthenticationSetting struct {
	pulumi.CustomResourceState

	// Active authentication method (scheme name).
	ActiveAuthScheme pulumi.StringOutput `pulumi:"activeAuthScheme"`
	// Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
	AuthHttps pulumi.StringOutput `pulumi:"authHttps"`
	// Captive portal host name.
	CaptivePortal pulumi.StringOutput `pulumi:"captivePortal"`
	// IPv6 captive portal host name.
	CaptivePortal6 pulumi.StringOutput `pulumi:"captivePortal6"`
	// Captive portal IP address.
	CaptivePortalIp pulumi.StringOutput `pulumi:"captivePortalIp"`
	// Captive portal IPv6 address.
	CaptivePortalIp6 pulumi.StringOutput `pulumi:"captivePortalIp6"`
	// Captive portal port number (1 - 65535, default = 7830).
	CaptivePortalPort pulumi.IntOutput `pulumi:"captivePortalPort"`
	// Captive portal SSL port number (1 - 65535, default = 7831).
	CaptivePortalSslPort pulumi.IntOutput `pulumi:"captivePortalSslPort"`
	// Captive portal type. Valid values: `fqdn`, `ip`.
	CaptivePortalType pulumi.StringOutput `pulumi:"captivePortalType"`
	// Single-Sign-On authentication method (scheme name).
	SsoAuthScheme pulumi.StringOutput `pulumi:"ssoAuthScheme"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAuthenticationSetting registers a new resource with the given unique name, arguments, and options.
func NewAuthenticationSetting(ctx *pulumi.Context,
	name string, args *AuthenticationSettingArgs, opts ...pulumi.ResourceOption) (*AuthenticationSetting, error) {
	if args == nil {
		args = &AuthenticationSettingArgs{}
	}

	var resource AuthenticationSetting
	err := ctx.RegisterResource("fortios:index/authenticationSetting:AuthenticationSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticationSetting gets an existing AuthenticationSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticationSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticationSettingState, opts ...pulumi.ResourceOption) (*AuthenticationSetting, error) {
	var resource AuthenticationSetting
	err := ctx.ReadResource("fortios:index/authenticationSetting:AuthenticationSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticationSetting resources.
type authenticationSettingState struct {
	// Active authentication method (scheme name).
	ActiveAuthScheme *string `pulumi:"activeAuthScheme"`
	// Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
	AuthHttps *string `pulumi:"authHttps"`
	// Captive portal host name.
	CaptivePortal *string `pulumi:"captivePortal"`
	// IPv6 captive portal host name.
	CaptivePortal6 *string `pulumi:"captivePortal6"`
	// Captive portal IP address.
	CaptivePortalIp *string `pulumi:"captivePortalIp"`
	// Captive portal IPv6 address.
	CaptivePortalIp6 *string `pulumi:"captivePortalIp6"`
	// Captive portal port number (1 - 65535, default = 7830).
	CaptivePortalPort *int `pulumi:"captivePortalPort"`
	// Captive portal SSL port number (1 - 65535, default = 7831).
	CaptivePortalSslPort *int `pulumi:"captivePortalSslPort"`
	// Captive portal type. Valid values: `fqdn`, `ip`.
	CaptivePortalType *string `pulumi:"captivePortalType"`
	// Single-Sign-On authentication method (scheme name).
	SsoAuthScheme *string `pulumi:"ssoAuthScheme"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AuthenticationSettingState struct {
	// Active authentication method (scheme name).
	ActiveAuthScheme pulumi.StringPtrInput
	// Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
	AuthHttps pulumi.StringPtrInput
	// Captive portal host name.
	CaptivePortal pulumi.StringPtrInput
	// IPv6 captive portal host name.
	CaptivePortal6 pulumi.StringPtrInput
	// Captive portal IP address.
	CaptivePortalIp pulumi.StringPtrInput
	// Captive portal IPv6 address.
	CaptivePortalIp6 pulumi.StringPtrInput
	// Captive portal port number (1 - 65535, default = 7830).
	CaptivePortalPort pulumi.IntPtrInput
	// Captive portal SSL port number (1 - 65535, default = 7831).
	CaptivePortalSslPort pulumi.IntPtrInput
	// Captive portal type. Valid values: `fqdn`, `ip`.
	CaptivePortalType pulumi.StringPtrInput
	// Single-Sign-On authentication method (scheme name).
	SsoAuthScheme pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthenticationSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSettingState)(nil)).Elem()
}

type authenticationSettingArgs struct {
	// Active authentication method (scheme name).
	ActiveAuthScheme *string `pulumi:"activeAuthScheme"`
	// Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
	AuthHttps *string `pulumi:"authHttps"`
	// Captive portal host name.
	CaptivePortal *string `pulumi:"captivePortal"`
	// IPv6 captive portal host name.
	CaptivePortal6 *string `pulumi:"captivePortal6"`
	// Captive portal IP address.
	CaptivePortalIp *string `pulumi:"captivePortalIp"`
	// Captive portal IPv6 address.
	CaptivePortalIp6 *string `pulumi:"captivePortalIp6"`
	// Captive portal port number (1 - 65535, default = 7830).
	CaptivePortalPort *int `pulumi:"captivePortalPort"`
	// Captive portal SSL port number (1 - 65535, default = 7831).
	CaptivePortalSslPort *int `pulumi:"captivePortalSslPort"`
	// Captive portal type. Valid values: `fqdn`, `ip`.
	CaptivePortalType *string `pulumi:"captivePortalType"`
	// Single-Sign-On authentication method (scheme name).
	SsoAuthScheme *string `pulumi:"ssoAuthScheme"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AuthenticationSetting resource.
type AuthenticationSettingArgs struct {
	// Active authentication method (scheme name).
	ActiveAuthScheme pulumi.StringPtrInput
	// Enable/disable redirecting HTTP user authentication to HTTPS. Valid values: `enable`, `disable`.
	AuthHttps pulumi.StringPtrInput
	// Captive portal host name.
	CaptivePortal pulumi.StringPtrInput
	// IPv6 captive portal host name.
	CaptivePortal6 pulumi.StringPtrInput
	// Captive portal IP address.
	CaptivePortalIp pulumi.StringPtrInput
	// Captive portal IPv6 address.
	CaptivePortalIp6 pulumi.StringPtrInput
	// Captive portal port number (1 - 65535, default = 7830).
	CaptivePortalPort pulumi.IntPtrInput
	// Captive portal SSL port number (1 - 65535, default = 7831).
	CaptivePortalSslPort pulumi.IntPtrInput
	// Captive portal type. Valid values: `fqdn`, `ip`.
	CaptivePortalType pulumi.StringPtrInput
	// Single-Sign-On authentication method (scheme name).
	SsoAuthScheme pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AuthenticationSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSettingArgs)(nil)).Elem()
}

type AuthenticationSettingInput interface {
	pulumi.Input

	ToAuthenticationSettingOutput() AuthenticationSettingOutput
	ToAuthenticationSettingOutputWithContext(ctx context.Context) AuthenticationSettingOutput
}

func (*AuthenticationSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSetting)(nil))
}

func (i *AuthenticationSetting) ToAuthenticationSettingOutput() AuthenticationSettingOutput {
	return i.ToAuthenticationSettingOutputWithContext(context.Background())
}

func (i *AuthenticationSetting) ToAuthenticationSettingOutputWithContext(ctx context.Context) AuthenticationSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingOutput)
}

func (i *AuthenticationSetting) ToAuthenticationSettingPtrOutput() AuthenticationSettingPtrOutput {
	return i.ToAuthenticationSettingPtrOutputWithContext(context.Background())
}

func (i *AuthenticationSetting) ToAuthenticationSettingPtrOutputWithContext(ctx context.Context) AuthenticationSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingPtrOutput)
}

type AuthenticationSettingPtrInput interface {
	pulumi.Input

	ToAuthenticationSettingPtrOutput() AuthenticationSettingPtrOutput
	ToAuthenticationSettingPtrOutputWithContext(ctx context.Context) AuthenticationSettingPtrOutput
}

type authenticationSettingPtrType AuthenticationSettingArgs

func (*authenticationSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSetting)(nil))
}

func (i *authenticationSettingPtrType) ToAuthenticationSettingPtrOutput() AuthenticationSettingPtrOutput {
	return i.ToAuthenticationSettingPtrOutputWithContext(context.Background())
}

func (i *authenticationSettingPtrType) ToAuthenticationSettingPtrOutputWithContext(ctx context.Context) AuthenticationSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingPtrOutput)
}

// AuthenticationSettingArrayInput is an input type that accepts AuthenticationSettingArray and AuthenticationSettingArrayOutput values.
// You can construct a concrete instance of `AuthenticationSettingArrayInput` via:
//
//          AuthenticationSettingArray{ AuthenticationSettingArgs{...} }
type AuthenticationSettingArrayInput interface {
	pulumi.Input

	ToAuthenticationSettingArrayOutput() AuthenticationSettingArrayOutput
	ToAuthenticationSettingArrayOutputWithContext(context.Context) AuthenticationSettingArrayOutput
}

type AuthenticationSettingArray []AuthenticationSettingInput

func (AuthenticationSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AuthenticationSetting)(nil))
}

func (i AuthenticationSettingArray) ToAuthenticationSettingArrayOutput() AuthenticationSettingArrayOutput {
	return i.ToAuthenticationSettingArrayOutputWithContext(context.Background())
}

func (i AuthenticationSettingArray) ToAuthenticationSettingArrayOutputWithContext(ctx context.Context) AuthenticationSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingArrayOutput)
}

// AuthenticationSettingMapInput is an input type that accepts AuthenticationSettingMap and AuthenticationSettingMapOutput values.
// You can construct a concrete instance of `AuthenticationSettingMapInput` via:
//
//          AuthenticationSettingMap{ "key": AuthenticationSettingArgs{...} }
type AuthenticationSettingMapInput interface {
	pulumi.Input

	ToAuthenticationSettingMapOutput() AuthenticationSettingMapOutput
	ToAuthenticationSettingMapOutputWithContext(context.Context) AuthenticationSettingMapOutput
}

type AuthenticationSettingMap map[string]AuthenticationSettingInput

func (AuthenticationSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AuthenticationSetting)(nil))
}

func (i AuthenticationSettingMap) ToAuthenticationSettingMapOutput() AuthenticationSettingMapOutput {
	return i.ToAuthenticationSettingMapOutputWithContext(context.Background())
}

func (i AuthenticationSettingMap) ToAuthenticationSettingMapOutputWithContext(ctx context.Context) AuthenticationSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingMapOutput)
}

type AuthenticationSettingOutput struct {
	*pulumi.OutputState
}

func (AuthenticationSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSetting)(nil))
}

func (o AuthenticationSettingOutput) ToAuthenticationSettingOutput() AuthenticationSettingOutput {
	return o
}

func (o AuthenticationSettingOutput) ToAuthenticationSettingOutputWithContext(ctx context.Context) AuthenticationSettingOutput {
	return o
}

func (o AuthenticationSettingOutput) ToAuthenticationSettingPtrOutput() AuthenticationSettingPtrOutput {
	return o.ToAuthenticationSettingPtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingOutput) ToAuthenticationSettingPtrOutputWithContext(ctx context.Context) AuthenticationSettingPtrOutput {
	return o.ApplyT(func(v AuthenticationSetting) *AuthenticationSetting {
		return &v
	}).(AuthenticationSettingPtrOutput)
}

type AuthenticationSettingPtrOutput struct {
	*pulumi.OutputState
}

func (AuthenticationSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSetting)(nil))
}

func (o AuthenticationSettingPtrOutput) ToAuthenticationSettingPtrOutput() AuthenticationSettingPtrOutput {
	return o
}

func (o AuthenticationSettingPtrOutput) ToAuthenticationSettingPtrOutputWithContext(ctx context.Context) AuthenticationSettingPtrOutput {
	return o
}

type AuthenticationSettingArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationSetting)(nil))
}

func (o AuthenticationSettingArrayOutput) ToAuthenticationSettingArrayOutput() AuthenticationSettingArrayOutput {
	return o
}

func (o AuthenticationSettingArrayOutput) ToAuthenticationSettingArrayOutputWithContext(ctx context.Context) AuthenticationSettingArrayOutput {
	return o
}

func (o AuthenticationSettingArrayOutput) Index(i pulumi.IntInput) AuthenticationSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationSetting {
		return vs[0].([]AuthenticationSetting)[vs[1].(int)]
	}).(AuthenticationSettingOutput)
}

type AuthenticationSettingMapOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AuthenticationSetting)(nil))
}

func (o AuthenticationSettingMapOutput) ToAuthenticationSettingMapOutput() AuthenticationSettingMapOutput {
	return o
}

func (o AuthenticationSettingMapOutput) ToAuthenticationSettingMapOutputWithContext(ctx context.Context) AuthenticationSettingMapOutput {
	return o
}

func (o AuthenticationSettingMapOutput) MapIndex(k pulumi.StringInput) AuthenticationSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AuthenticationSetting {
		return vs[0].(map[string]AuthenticationSetting)[vs[1].(string)]
	}).(AuthenticationSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationSettingOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingMapOutput{})
}
