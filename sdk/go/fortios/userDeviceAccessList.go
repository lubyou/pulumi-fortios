// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UserDeviceAccessList struct {
	pulumi.CustomResourceState

	DefaultAction       pulumi.StringOutput                       `pulumi:"defaultAction"`
	DeviceLists         UserDeviceAccessListDeviceListArrayOutput `pulumi:"deviceLists"`
	DynamicSortSubtable pulumi.StringPtrOutput                    `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                    `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                       `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewUserDeviceAccessList registers a new resource with the given unique name, arguments, and options.
func NewUserDeviceAccessList(ctx *pulumi.Context,
	name string, args *UserDeviceAccessListArgs, opts ...pulumi.ResourceOption) (*UserDeviceAccessList, error) {
	if args == nil {
		args = &UserDeviceAccessListArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserDeviceAccessList
	err := ctx.RegisterResource("fortios:index/userDeviceAccessList:UserDeviceAccessList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserDeviceAccessList gets an existing UserDeviceAccessList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserDeviceAccessList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserDeviceAccessListState, opts ...pulumi.ResourceOption) (*UserDeviceAccessList, error) {
	var resource UserDeviceAccessList
	err := ctx.ReadResource("fortios:index/userDeviceAccessList:UserDeviceAccessList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserDeviceAccessList resources.
type userDeviceAccessListState struct {
	DefaultAction       *string                          `pulumi:"defaultAction"`
	DeviceLists         []UserDeviceAccessListDeviceList `pulumi:"deviceLists"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

type UserDeviceAccessListState struct {
	DefaultAction       pulumi.StringPtrInput
	DeviceLists         UserDeviceAccessListDeviceListArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (UserDeviceAccessListState) ElementType() reflect.Type {
	return reflect.TypeOf((*userDeviceAccessListState)(nil)).Elem()
}

type userDeviceAccessListArgs struct {
	DefaultAction       *string                          `pulumi:"defaultAction"`
	DeviceLists         []UserDeviceAccessListDeviceList `pulumi:"deviceLists"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserDeviceAccessList resource.
type UserDeviceAccessListArgs struct {
	DefaultAction       pulumi.StringPtrInput
	DeviceLists         UserDeviceAccessListDeviceListArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (UserDeviceAccessListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userDeviceAccessListArgs)(nil)).Elem()
}

type UserDeviceAccessListInput interface {
	pulumi.Input

	ToUserDeviceAccessListOutput() UserDeviceAccessListOutput
	ToUserDeviceAccessListOutputWithContext(ctx context.Context) UserDeviceAccessListOutput
}

func (*UserDeviceAccessList) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDeviceAccessList)(nil)).Elem()
}

func (i *UserDeviceAccessList) ToUserDeviceAccessListOutput() UserDeviceAccessListOutput {
	return i.ToUserDeviceAccessListOutputWithContext(context.Background())
}

func (i *UserDeviceAccessList) ToUserDeviceAccessListOutputWithContext(ctx context.Context) UserDeviceAccessListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceAccessListOutput)
}

// UserDeviceAccessListArrayInput is an input type that accepts UserDeviceAccessListArray and UserDeviceAccessListArrayOutput values.
// You can construct a concrete instance of `UserDeviceAccessListArrayInput` via:
//
//	UserDeviceAccessListArray{ UserDeviceAccessListArgs{...} }
type UserDeviceAccessListArrayInput interface {
	pulumi.Input

	ToUserDeviceAccessListArrayOutput() UserDeviceAccessListArrayOutput
	ToUserDeviceAccessListArrayOutputWithContext(context.Context) UserDeviceAccessListArrayOutput
}

type UserDeviceAccessListArray []UserDeviceAccessListInput

func (UserDeviceAccessListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserDeviceAccessList)(nil)).Elem()
}

func (i UserDeviceAccessListArray) ToUserDeviceAccessListArrayOutput() UserDeviceAccessListArrayOutput {
	return i.ToUserDeviceAccessListArrayOutputWithContext(context.Background())
}

func (i UserDeviceAccessListArray) ToUserDeviceAccessListArrayOutputWithContext(ctx context.Context) UserDeviceAccessListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceAccessListArrayOutput)
}

// UserDeviceAccessListMapInput is an input type that accepts UserDeviceAccessListMap and UserDeviceAccessListMapOutput values.
// You can construct a concrete instance of `UserDeviceAccessListMapInput` via:
//
//	UserDeviceAccessListMap{ "key": UserDeviceAccessListArgs{...} }
type UserDeviceAccessListMapInput interface {
	pulumi.Input

	ToUserDeviceAccessListMapOutput() UserDeviceAccessListMapOutput
	ToUserDeviceAccessListMapOutputWithContext(context.Context) UserDeviceAccessListMapOutput
}

type UserDeviceAccessListMap map[string]UserDeviceAccessListInput

func (UserDeviceAccessListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserDeviceAccessList)(nil)).Elem()
}

func (i UserDeviceAccessListMap) ToUserDeviceAccessListMapOutput() UserDeviceAccessListMapOutput {
	return i.ToUserDeviceAccessListMapOutputWithContext(context.Background())
}

func (i UserDeviceAccessListMap) ToUserDeviceAccessListMapOutputWithContext(ctx context.Context) UserDeviceAccessListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDeviceAccessListMapOutput)
}

type UserDeviceAccessListOutput struct{ *pulumi.OutputState }

func (UserDeviceAccessListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDeviceAccessList)(nil)).Elem()
}

func (o UserDeviceAccessListOutput) ToUserDeviceAccessListOutput() UserDeviceAccessListOutput {
	return o
}

func (o UserDeviceAccessListOutput) ToUserDeviceAccessListOutputWithContext(ctx context.Context) UserDeviceAccessListOutput {
	return o
}

func (o UserDeviceAccessListOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) pulumi.StringOutput { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o UserDeviceAccessListOutput) DeviceLists() UserDeviceAccessListDeviceListArrayOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) UserDeviceAccessListDeviceListArrayOutput { return v.DeviceLists }).(UserDeviceAccessListDeviceListArrayOutput)
}

func (o UserDeviceAccessListOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o UserDeviceAccessListOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o UserDeviceAccessListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserDeviceAccessListOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDeviceAccessList) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserDeviceAccessListArrayOutput struct{ *pulumi.OutputState }

func (UserDeviceAccessListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserDeviceAccessList)(nil)).Elem()
}

func (o UserDeviceAccessListArrayOutput) ToUserDeviceAccessListArrayOutput() UserDeviceAccessListArrayOutput {
	return o
}

func (o UserDeviceAccessListArrayOutput) ToUserDeviceAccessListArrayOutputWithContext(ctx context.Context) UserDeviceAccessListArrayOutput {
	return o
}

func (o UserDeviceAccessListArrayOutput) Index(i pulumi.IntInput) UserDeviceAccessListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserDeviceAccessList {
		return vs[0].([]*UserDeviceAccessList)[vs[1].(int)]
	}).(UserDeviceAccessListOutput)
}

type UserDeviceAccessListMapOutput struct{ *pulumi.OutputState }

func (UserDeviceAccessListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserDeviceAccessList)(nil)).Elem()
}

func (o UserDeviceAccessListMapOutput) ToUserDeviceAccessListMapOutput() UserDeviceAccessListMapOutput {
	return o
}

func (o UserDeviceAccessListMapOutput) ToUserDeviceAccessListMapOutputWithContext(ctx context.Context) UserDeviceAccessListMapOutput {
	return o
}

func (o UserDeviceAccessListMapOutput) MapIndex(k pulumi.StringInput) UserDeviceAccessListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserDeviceAccessList {
		return vs[0].(map[string]*UserDeviceAccessList)[vs[1].(string)]
	}).(UserDeviceAccessListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceAccessListInput)(nil)).Elem(), &UserDeviceAccessList{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceAccessListArrayInput)(nil)).Elem(), UserDeviceAccessListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDeviceAccessListMapInput)(nil)).Elem(), UserDeviceAccessListMap{})
	pulumi.RegisterOutputType(UserDeviceAccessListOutput{})
	pulumi.RegisterOutputType(UserDeviceAccessListArrayOutput{})
	pulumi.RegisterOutputType(UserDeviceAccessListMapOutput{})
}
