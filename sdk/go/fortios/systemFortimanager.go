// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemFortimanager struct {
	pulumi.CustomResourceState

	CentralManagement                pulumi.StringOutput    `pulumi:"centralManagement"`
	CentralMgmtAutoBackup            pulumi.StringOutput    `pulumi:"centralMgmtAutoBackup"`
	CentralMgmtScheduleConfigRestore pulumi.StringOutput    `pulumi:"centralMgmtScheduleConfigRestore"`
	CentralMgmtScheduleScriptRestore pulumi.StringOutput    `pulumi:"centralMgmtScheduleScriptRestore"`
	Ip                               pulumi.StringOutput    `pulumi:"ip"`
	Ipsec                            pulumi.StringOutput    `pulumi:"ipsec"`
	Vdom                             pulumi.StringOutput    `pulumi:"vdom"`
	Vdomparam                        pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemFortimanager registers a new resource with the given unique name, arguments, and options.
func NewSystemFortimanager(ctx *pulumi.Context,
	name string, args *SystemFortimanagerArgs, opts ...pulumi.ResourceOption) (*SystemFortimanager, error) {
	if args == nil {
		args = &SystemFortimanagerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemFortimanager
	err := ctx.RegisterResource("fortios:index/systemFortimanager:SystemFortimanager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFortimanager gets an existing SystemFortimanager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFortimanager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFortimanagerState, opts ...pulumi.ResourceOption) (*SystemFortimanager, error) {
	var resource SystemFortimanager
	err := ctx.ReadResource("fortios:index/systemFortimanager:SystemFortimanager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFortimanager resources.
type systemFortimanagerState struct {
	CentralManagement                *string `pulumi:"centralManagement"`
	CentralMgmtAutoBackup            *string `pulumi:"centralMgmtAutoBackup"`
	CentralMgmtScheduleConfigRestore *string `pulumi:"centralMgmtScheduleConfigRestore"`
	CentralMgmtScheduleScriptRestore *string `pulumi:"centralMgmtScheduleScriptRestore"`
	Ip                               *string `pulumi:"ip"`
	Ipsec                            *string `pulumi:"ipsec"`
	Vdom                             *string `pulumi:"vdom"`
	Vdomparam                        *string `pulumi:"vdomparam"`
}

type SystemFortimanagerState struct {
	CentralManagement                pulumi.StringPtrInput
	CentralMgmtAutoBackup            pulumi.StringPtrInput
	CentralMgmtScheduleConfigRestore pulumi.StringPtrInput
	CentralMgmtScheduleScriptRestore pulumi.StringPtrInput
	Ip                               pulumi.StringPtrInput
	Ipsec                            pulumi.StringPtrInput
	Vdom                             pulumi.StringPtrInput
	Vdomparam                        pulumi.StringPtrInput
}

func (SystemFortimanagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortimanagerState)(nil)).Elem()
}

type systemFortimanagerArgs struct {
	CentralManagement                *string `pulumi:"centralManagement"`
	CentralMgmtAutoBackup            *string `pulumi:"centralMgmtAutoBackup"`
	CentralMgmtScheduleConfigRestore *string `pulumi:"centralMgmtScheduleConfigRestore"`
	CentralMgmtScheduleScriptRestore *string `pulumi:"centralMgmtScheduleScriptRestore"`
	Ip                               *string `pulumi:"ip"`
	Ipsec                            *string `pulumi:"ipsec"`
	Vdom                             *string `pulumi:"vdom"`
	Vdomparam                        *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemFortimanager resource.
type SystemFortimanagerArgs struct {
	CentralManagement                pulumi.StringPtrInput
	CentralMgmtAutoBackup            pulumi.StringPtrInput
	CentralMgmtScheduleConfigRestore pulumi.StringPtrInput
	CentralMgmtScheduleScriptRestore pulumi.StringPtrInput
	Ip                               pulumi.StringPtrInput
	Ipsec                            pulumi.StringPtrInput
	Vdom                             pulumi.StringPtrInput
	Vdomparam                        pulumi.StringPtrInput
}

func (SystemFortimanagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortimanagerArgs)(nil)).Elem()
}

type SystemFortimanagerInput interface {
	pulumi.Input

	ToSystemFortimanagerOutput() SystemFortimanagerOutput
	ToSystemFortimanagerOutputWithContext(ctx context.Context) SystemFortimanagerOutput
}

func (*SystemFortimanager) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortimanager)(nil)).Elem()
}

func (i *SystemFortimanager) ToSystemFortimanagerOutput() SystemFortimanagerOutput {
	return i.ToSystemFortimanagerOutputWithContext(context.Background())
}

func (i *SystemFortimanager) ToSystemFortimanagerOutputWithContext(ctx context.Context) SystemFortimanagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortimanagerOutput)
}

func (i *SystemFortimanager) ToOutput(ctx context.Context) pulumix.Output[*SystemFortimanager] {
	return pulumix.Output[*SystemFortimanager]{
		OutputState: i.ToSystemFortimanagerOutputWithContext(ctx).OutputState,
	}
}

// SystemFortimanagerArrayInput is an input type that accepts SystemFortimanagerArray and SystemFortimanagerArrayOutput values.
// You can construct a concrete instance of `SystemFortimanagerArrayInput` via:
//
//	SystemFortimanagerArray{ SystemFortimanagerArgs{...} }
type SystemFortimanagerArrayInput interface {
	pulumi.Input

	ToSystemFortimanagerArrayOutput() SystemFortimanagerArrayOutput
	ToSystemFortimanagerArrayOutputWithContext(context.Context) SystemFortimanagerArrayOutput
}

type SystemFortimanagerArray []SystemFortimanagerInput

func (SystemFortimanagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFortimanager)(nil)).Elem()
}

func (i SystemFortimanagerArray) ToSystemFortimanagerArrayOutput() SystemFortimanagerArrayOutput {
	return i.ToSystemFortimanagerArrayOutputWithContext(context.Background())
}

func (i SystemFortimanagerArray) ToSystemFortimanagerArrayOutputWithContext(ctx context.Context) SystemFortimanagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortimanagerArrayOutput)
}

func (i SystemFortimanagerArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemFortimanager] {
	return pulumix.Output[[]*SystemFortimanager]{
		OutputState: i.ToSystemFortimanagerArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemFortimanagerMapInput is an input type that accepts SystemFortimanagerMap and SystemFortimanagerMapOutput values.
// You can construct a concrete instance of `SystemFortimanagerMapInput` via:
//
//	SystemFortimanagerMap{ "key": SystemFortimanagerArgs{...} }
type SystemFortimanagerMapInput interface {
	pulumi.Input

	ToSystemFortimanagerMapOutput() SystemFortimanagerMapOutput
	ToSystemFortimanagerMapOutputWithContext(context.Context) SystemFortimanagerMapOutput
}

type SystemFortimanagerMap map[string]SystemFortimanagerInput

func (SystemFortimanagerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFortimanager)(nil)).Elem()
}

func (i SystemFortimanagerMap) ToSystemFortimanagerMapOutput() SystemFortimanagerMapOutput {
	return i.ToSystemFortimanagerMapOutputWithContext(context.Background())
}

func (i SystemFortimanagerMap) ToSystemFortimanagerMapOutputWithContext(ctx context.Context) SystemFortimanagerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortimanagerMapOutput)
}

func (i SystemFortimanagerMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemFortimanager] {
	return pulumix.Output[map[string]*SystemFortimanager]{
		OutputState: i.ToSystemFortimanagerMapOutputWithContext(ctx).OutputState,
	}
}

type SystemFortimanagerOutput struct{ *pulumi.OutputState }

func (SystemFortimanagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortimanager)(nil)).Elem()
}

func (o SystemFortimanagerOutput) ToSystemFortimanagerOutput() SystemFortimanagerOutput {
	return o
}

func (o SystemFortimanagerOutput) ToSystemFortimanagerOutputWithContext(ctx context.Context) SystemFortimanagerOutput {
	return o
}

func (o SystemFortimanagerOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemFortimanager] {
	return pulumix.Output[*SystemFortimanager]{
		OutputState: o.OutputState,
	}
}

func (o SystemFortimanagerOutput) CentralManagement() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.CentralManagement }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) CentralMgmtAutoBackup() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.CentralMgmtAutoBackup }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) CentralMgmtScheduleConfigRestore() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.CentralMgmtScheduleConfigRestore }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) CentralMgmtScheduleScriptRestore() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.CentralMgmtScheduleScriptRestore }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) Ipsec() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.Ipsec }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringOutput { return v.Vdom }).(pulumi.StringOutput)
}

func (o SystemFortimanagerOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemFortimanager) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemFortimanagerArrayOutput struct{ *pulumi.OutputState }

func (SystemFortimanagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFortimanager)(nil)).Elem()
}

func (o SystemFortimanagerArrayOutput) ToSystemFortimanagerArrayOutput() SystemFortimanagerArrayOutput {
	return o
}

func (o SystemFortimanagerArrayOutput) ToSystemFortimanagerArrayOutputWithContext(ctx context.Context) SystemFortimanagerArrayOutput {
	return o
}

func (o SystemFortimanagerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemFortimanager] {
	return pulumix.Output[[]*SystemFortimanager]{
		OutputState: o.OutputState,
	}
}

func (o SystemFortimanagerArrayOutput) Index(i pulumi.IntInput) SystemFortimanagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemFortimanager {
		return vs[0].([]*SystemFortimanager)[vs[1].(int)]
	}).(SystemFortimanagerOutput)
}

type SystemFortimanagerMapOutput struct{ *pulumi.OutputState }

func (SystemFortimanagerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFortimanager)(nil)).Elem()
}

func (o SystemFortimanagerMapOutput) ToSystemFortimanagerMapOutput() SystemFortimanagerMapOutput {
	return o
}

func (o SystemFortimanagerMapOutput) ToSystemFortimanagerMapOutputWithContext(ctx context.Context) SystemFortimanagerMapOutput {
	return o
}

func (o SystemFortimanagerMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemFortimanager] {
	return pulumix.Output[map[string]*SystemFortimanager]{
		OutputState: o.OutputState,
	}
}

func (o SystemFortimanagerMapOutput) MapIndex(k pulumi.StringInput) SystemFortimanagerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemFortimanager {
		return vs[0].(map[string]*SystemFortimanager)[vs[1].(string)]
	}).(SystemFortimanagerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortimanagerInput)(nil)).Elem(), &SystemFortimanager{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortimanagerArrayInput)(nil)).Elem(), SystemFortimanagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFortimanagerMapInput)(nil)).Elem(), SystemFortimanagerMap{})
	pulumi.RegisterOutputType(SystemFortimanagerOutput{})
	pulumi.RegisterOutputType(SystemFortimanagerArrayOutput{})
	pulumi.RegisterOutputType(SystemFortimanagerMapOutput{})
}
