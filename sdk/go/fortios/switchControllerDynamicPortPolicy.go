// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerDynamicPortPolicy struct {
	pulumi.CustomResourceState

	Description         pulumi.StringOutput                                `pulumi:"description"`
	DynamicSortSubtable pulumi.StringPtrOutput                             `pulumi:"dynamicSortSubtable"`
	Fortilink           pulumi.StringOutput                                `pulumi:"fortilink"`
	Name                pulumi.StringOutput                                `pulumi:"name"`
	Policies            SwitchControllerDynamicPortPolicyPolicyArrayOutput `pulumi:"policies"`
	Vdomparam           pulumi.StringPtrOutput                             `pulumi:"vdomparam"`
}

// NewSwitchControllerDynamicPortPolicy registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerDynamicPortPolicy(ctx *pulumi.Context,
	name string, args *SwitchControllerDynamicPortPolicyArgs, opts ...pulumi.ResourceOption) (*SwitchControllerDynamicPortPolicy, error) {
	if args == nil {
		args = &SwitchControllerDynamicPortPolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerDynamicPortPolicy
	err := ctx.RegisterResource("fortios:index/switchControllerDynamicPortPolicy:SwitchControllerDynamicPortPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerDynamicPortPolicy gets an existing SwitchControllerDynamicPortPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerDynamicPortPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerDynamicPortPolicyState, opts ...pulumi.ResourceOption) (*SwitchControllerDynamicPortPolicy, error) {
	var resource SwitchControllerDynamicPortPolicy
	err := ctx.ReadResource("fortios:index/switchControllerDynamicPortPolicy:SwitchControllerDynamicPortPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerDynamicPortPolicy resources.
type switchControllerDynamicPortPolicyState struct {
	Description         *string                                   `pulumi:"description"`
	DynamicSortSubtable *string                                   `pulumi:"dynamicSortSubtable"`
	Fortilink           *string                                   `pulumi:"fortilink"`
	Name                *string                                   `pulumi:"name"`
	Policies            []SwitchControllerDynamicPortPolicyPolicy `pulumi:"policies"`
	Vdomparam           *string                                   `pulumi:"vdomparam"`
}

type SwitchControllerDynamicPortPolicyState struct {
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fortilink           pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Policies            SwitchControllerDynamicPortPolicyPolicyArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerDynamicPortPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerDynamicPortPolicyState)(nil)).Elem()
}

type switchControllerDynamicPortPolicyArgs struct {
	Description         *string                                   `pulumi:"description"`
	DynamicSortSubtable *string                                   `pulumi:"dynamicSortSubtable"`
	Fortilink           *string                                   `pulumi:"fortilink"`
	Name                *string                                   `pulumi:"name"`
	Policies            []SwitchControllerDynamicPortPolicyPolicy `pulumi:"policies"`
	Vdomparam           *string                                   `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerDynamicPortPolicy resource.
type SwitchControllerDynamicPortPolicyArgs struct {
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fortilink           pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Policies            SwitchControllerDynamicPortPolicyPolicyArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerDynamicPortPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerDynamicPortPolicyArgs)(nil)).Elem()
}

type SwitchControllerDynamicPortPolicyInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyOutput() SwitchControllerDynamicPortPolicyOutput
	ToSwitchControllerDynamicPortPolicyOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyOutput
}

func (*SwitchControllerDynamicPortPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (i *SwitchControllerDynamicPortPolicy) ToSwitchControllerDynamicPortPolicyOutput() SwitchControllerDynamicPortPolicyOutput {
	return i.ToSwitchControllerDynamicPortPolicyOutputWithContext(context.Background())
}

func (i *SwitchControllerDynamicPortPolicy) ToSwitchControllerDynamicPortPolicyOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyOutput)
}

// SwitchControllerDynamicPortPolicyArrayInput is an input type that accepts SwitchControllerDynamicPortPolicyArray and SwitchControllerDynamicPortPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyArrayInput` via:
//
//	SwitchControllerDynamicPortPolicyArray{ SwitchControllerDynamicPortPolicyArgs{...} }
type SwitchControllerDynamicPortPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyArrayOutput() SwitchControllerDynamicPortPolicyArrayOutput
	ToSwitchControllerDynamicPortPolicyArrayOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyArrayOutput
}

type SwitchControllerDynamicPortPolicyArray []SwitchControllerDynamicPortPolicyInput

func (SwitchControllerDynamicPortPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyArray) ToSwitchControllerDynamicPortPolicyArrayOutput() SwitchControllerDynamicPortPolicyArrayOutput {
	return i.ToSwitchControllerDynamicPortPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyArray) ToSwitchControllerDynamicPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyArrayOutput)
}

// SwitchControllerDynamicPortPolicyMapInput is an input type that accepts SwitchControllerDynamicPortPolicyMap and SwitchControllerDynamicPortPolicyMapOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyMapInput` via:
//
//	SwitchControllerDynamicPortPolicyMap{ "key": SwitchControllerDynamicPortPolicyArgs{...} }
type SwitchControllerDynamicPortPolicyMapInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyMapOutput() SwitchControllerDynamicPortPolicyMapOutput
	ToSwitchControllerDynamicPortPolicyMapOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyMapOutput
}

type SwitchControllerDynamicPortPolicyMap map[string]SwitchControllerDynamicPortPolicyInput

func (SwitchControllerDynamicPortPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyMap) ToSwitchControllerDynamicPortPolicyMapOutput() SwitchControllerDynamicPortPolicyMapOutput {
	return i.ToSwitchControllerDynamicPortPolicyMapOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyMap) ToSwitchControllerDynamicPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyMapOutput)
}

type SwitchControllerDynamicPortPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyOutput) ToSwitchControllerDynamicPortPolicyOutput() SwitchControllerDynamicPortPolicyOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyOutput) ToSwitchControllerDynamicPortPolicyOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SwitchControllerDynamicPortPolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyOutput) Fortilink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) pulumi.StringOutput { return v.Fortilink }).(pulumi.StringOutput)
}

func (o SwitchControllerDynamicPortPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerDynamicPortPolicyOutput) Policies() SwitchControllerDynamicPortPolicyPolicyArrayOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) SwitchControllerDynamicPortPolicyPolicyArrayOutput {
		return v.Policies
	}).(SwitchControllerDynamicPortPolicyPolicyArrayOutput)
}

func (o SwitchControllerDynamicPortPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerDynamicPortPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerDynamicPortPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyArrayOutput) ToSwitchControllerDynamicPortPolicyArrayOutput() SwitchControllerDynamicPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyArrayOutput) ToSwitchControllerDynamicPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerDynamicPortPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerDynamicPortPolicy {
		return vs[0].([]*SwitchControllerDynamicPortPolicy)[vs[1].(int)]
	}).(SwitchControllerDynamicPortPolicyOutput)
}

type SwitchControllerDynamicPortPolicyMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerDynamicPortPolicy)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyMapOutput) ToSwitchControllerDynamicPortPolicyMapOutput() SwitchControllerDynamicPortPolicyMapOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyMapOutput) ToSwitchControllerDynamicPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyMapOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerDynamicPortPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerDynamicPortPolicy {
		return vs[0].(map[string]*SwitchControllerDynamicPortPolicy)[vs[1].(string)]
	}).(SwitchControllerDynamicPortPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyInput)(nil)).Elem(), &SwitchControllerDynamicPortPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyArrayInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyMapInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyMap{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyMapOutput{})
}
