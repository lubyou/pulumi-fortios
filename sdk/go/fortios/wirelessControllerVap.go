// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure Virtual Access Points (VAPs).
//
// ## Import
//
// WirelessController Vap can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerVap:WirelessControllerVap labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerVap struct {
	pulumi.CustomResourceState

	// access-control-list profile name.
	AccessControlList pulumi.StringOutput `pulumi:"accessControlList"`
	// WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
	AcctInterimInterval pulumi.IntOutput `pulumi:"acctInterimInterval"`
	// Additional AKMs. Valid values: `akm6`.
	AdditionalAkms pulumi.StringOutput `pulumi:"additionalAkms"`
	// Address group ID.
	AddressGroup pulumi.StringOutput `pulumi:"addressGroup"`
	// Alias.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// Airtime weight in percentage (default = 20).
	AtfWeight pulumi.IntOutput `pulumi:"atfWeight"`
	// Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
	Auth pulumi.StringOutput `pulumi:"auth"`
	// Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
	BroadcastSsid pulumi.StringOutput `pulumi:"broadcastSsid"`
	// Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
	BroadcastSuppression pulumi.StringOutput `pulumi:"broadcastSuppression"`
	// Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
	BssColorPartial pulumi.StringOutput `pulumi:"bssColorPartial"`
	// Local-bridging captive portal ac-name.
	CaptivePortalAcName pulumi.StringOutput `pulumi:"captivePortalAcName"`
	// Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
	CaptivePortalAuthTimeout pulumi.IntOutput `pulumi:"captivePortalAuthTimeout"`
	// Secret key to access the macauth RADIUS server.
	CaptivePortalMacauthRadiusSecret pulumi.StringPtrOutput `pulumi:"captivePortalMacauthRadiusSecret"`
	// Captive portal external RADIUS server domain name or IP address.
	CaptivePortalMacauthRadiusServer pulumi.StringOutput `pulumi:"captivePortalMacauthRadiusServer"`
	// Secret key to access the RADIUS server.
	CaptivePortalRadiusSecret pulumi.StringPtrOutput `pulumi:"captivePortalRadiusSecret"`
	// Captive portal RADIUS server domain name or IP address.
	CaptivePortalRadiusServer pulumi.StringOutput `pulumi:"captivePortalRadiusServer"`
	// Session timeout interval (0 - 864000 sec, default = 0).
	CaptivePortalSessionTimeoutInterval pulumi.IntOutput `pulumi:"captivePortalSessionTimeoutInterval"`
	// DHCP lease time in seconds for NAT IP address.
	DhcpLeaseTime pulumi.IntOutput `pulumi:"dhcpLeaseTime"`
	// Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
	DhcpOption43Insertion pulumi.StringOutput `pulumi:"dhcpOption43Insertion"`
	// Enable/disable DHCP option 82 circuit-id insert (default = disable).
	DhcpOption82CircuitIdInsertion pulumi.StringOutput `pulumi:"dhcpOption82CircuitIdInsertion"`
	// Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
	DhcpOption82Insertion pulumi.StringOutput `pulumi:"dhcpOption82Insertion"`
	// Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
	DhcpOption82RemoteIdInsertion pulumi.StringOutput `pulumi:"dhcpOption82RemoteIdInsertion"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
	DynamicVlan pulumi.StringOutput `pulumi:"dynamicVlan"`
	// Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
	EapReauth pulumi.StringOutput `pulumi:"eapReauth"`
	// EAP re-authentication interval (1800 - 864000 sec, default = 86400).
	EapReauthIntv pulumi.IntOutput `pulumi:"eapReauthIntv"`
	// Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
	EapolKeyRetries pulumi.StringOutput `pulumi:"eapolKeyRetries"`
	// Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
	Encrypt pulumi.StringOutput `pulumi:"encrypt"`
	// Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
	ExternalFastRoaming pulumi.StringOutput `pulumi:"externalFastRoaming"`
	// URL of external authentication logout server.
	ExternalLogout pulumi.StringOutput `pulumi:"externalLogout"`
	// URL of external authentication web server.
	ExternalWeb pulumi.StringOutput `pulumi:"externalWeb"`
	// URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
	ExternalWebFormat pulumi.StringOutput `pulumi:"externalWebFormat"`
	// Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
	FastBssTransition pulumi.StringOutput `pulumi:"fastBssTransition"`
	// Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
	FastRoaming pulumi.StringOutput `pulumi:"fastRoaming"`
	// Mobility domain identifier in FT (1 - 65535, default = 1000).
	FtMobilityDomain pulumi.IntOutput `pulumi:"ftMobilityDomain"`
	// Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
	FtOverDs pulumi.StringOutput `pulumi:"ftOverDs"`
	// Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
	FtR0KeyLifetime pulumi.IntOutput `pulumi:"ftR0KeyLifetime"`
	// Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
	GtkRekey pulumi.StringOutput `pulumi:"gtkRekey"`
	// GTK rekey interval (1800 - 864000 sec, default = 86400).
	GtkRekeyIntv pulumi.IntOutput `pulumi:"gtkRekeyIntv"`
	// Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
	HighEfficiency pulumi.StringOutput `pulumi:"highEfficiency"`
	// Hotspot 2.0 profile name.
	Hotspot20Profile pulumi.StringOutput `pulumi:"hotspot20Profile"`
	// Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
	IgmpSnooping pulumi.StringOutput `pulumi:"igmpSnooping"`
	// Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
	IntraVapPrivacy pulumi.StringOutput `pulumi:"intraVapPrivacy"`
	// IP address and subnet mask for the local standalone NAT subnet.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
	Ipv6Rules pulumi.StringOutput `pulumi:"ipv6Rules"`
	// WEP Key.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// WEP key index (1 - 4).
	Keyindex pulumi.IntOutput `pulumi:"keyindex"`
	// VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
	Ldpc pulumi.StringOutput `pulumi:"ldpc"`
	// Enable/disable AP local authentication. Valid values: `enable`, `disable`.
	LocalAuthentication pulumi.StringOutput `pulumi:"localAuthentication"`
	// Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
	LocalBridging pulumi.StringOutput `pulumi:"localBridging"`
	// Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
	LocalLan pulumi.StringOutput `pulumi:"localLan"`
	// Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
	LocalStandalone pulumi.StringOutput `pulumi:"localStandalone"`
	// Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
	LocalStandaloneNat pulumi.StringOutput `pulumi:"localStandaloneNat"`
	// Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
	MacAuthBypass pulumi.StringOutput `pulumi:"macAuthBypass"`
	// Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
	MacFilter pulumi.StringOutput `pulumi:"macFilter"`
	// Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
	MacFilterLists WirelessControllerVapMacFilterListArrayOutput `pulumi:"macFilterLists"`
	// Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
	MacFilterPolicyOther pulumi.StringOutput `pulumi:"macFilterPolicyOther"`
	// Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
	MaxClients pulumi.IntOutput `pulumi:"maxClients"`
	// Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
	MaxClientsAp pulumi.IntOutput `pulumi:"maxClientsAp"`
	// Disable multicast enhancement when this many clients are receiving multicast traffic.
	MeDisableThresh pulumi.IntOutput `pulumi:"meDisableThresh"`
	// Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
	MeshBackhaul pulumi.StringOutput `pulumi:"meshBackhaul"`
	// Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
	Mpsk pulumi.StringOutput `pulumi:"mpsk"`
	// Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
	MpskConcurrentClients pulumi.IntOutput `pulumi:"mpskConcurrentClients"`
	// Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
	MpskKeys WirelessControllerVapMpskKeyArrayOutput `pulumi:"mpskKeys"`
	// MPSK profile name.
	MpskProfile pulumi.StringOutput `pulumi:"mpskProfile"`
	// Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
	MuMimo pulumi.StringOutput `pulumi:"muMimo"`
	// Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
	MulticastEnhance pulumi.StringOutput `pulumi:"multicastEnhance"`
	// Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
	MulticastRate pulumi.StringOutput `pulumi:"multicastRate"`
	// Schedule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
	Okc pulumi.StringOutput `pulumi:"okc"`
	// OWE-Groups. Valid values: `19`, `20`, `21`.
	OweGroups pulumi.StringOutput `pulumi:"oweGroups"`
	// Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
	OweTransition pulumi.StringOutput `pulumi:"oweTransition"`
	// OWE transition mode peer SSID.
	OweTransitionSsid pulumi.StringOutput `pulumi:"oweTransitionSsid"`
	// WPA Pre-shared key.
	Passphrase pulumi.StringPtrOutput `pulumi:"passphrase"`
	// Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
	Pmf pulumi.StringOutput `pulumi:"pmf"`
	// Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
	PmfAssocComebackTimeout pulumi.IntOutput `pulumi:"pmfAssocComebackTimeout"`
	// Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
	PmfSaQueryRetryTimeout pulumi.IntOutput `pulumi:"pmfSaQueryRetryTimeout"`
	// Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
	PortMacauth pulumi.StringOutput `pulumi:"portMacauth"`
	// LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
	PortMacauthReauthTimeout pulumi.IntOutput `pulumi:"portMacauthReauthTimeout"`
	// LAN port MAC authentication idle timeout value (default = 600 sec).
	PortMacauthTimeout pulumi.IntOutput `pulumi:"portMacauthTimeout"`
	// Replacement message group for this VAP (only available when security is set to a captive portal type).
	PortalMessageOverrideGroup pulumi.StringOutput `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides WirelessControllerVapPortalMessageOverridesPtrOutput `pulumi:"portalMessageOverrides"`
	// Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
	PortalType pulumi.StringOutput `pulumi:"portalType"`
	// Primary wireless access gateway profile name.
	PrimaryWagProfile pulumi.StringOutput `pulumi:"primaryWagProfile"`
	// Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	ProbeRespSuppression pulumi.StringOutput `pulumi:"probeRespSuppression"`
	// Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
	ProbeRespThreshold pulumi.StringOutput `pulumi:"probeRespThreshold"`
	// Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
	PtkRekey pulumi.StringOutput `pulumi:"ptkRekey"`
	// PTK rekey interval (1800 - 864000 sec, default = 86400).
	PtkRekeyIntv pulumi.IntOutput `pulumi:"ptkRekeyIntv"`
	// Quality of service profile name.
	QosProfile pulumi.StringOutput `pulumi:"qosProfile"`
	// Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
	Quarantine pulumi.StringOutput `pulumi:"quarantine"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
	Radio2gThreshold pulumi.StringOutput `pulumi:"radio2gThreshold"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
	Radio5gThreshold pulumi.StringOutput `pulumi:"radio5gThreshold"`
	// Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	RadioSensitivity pulumi.StringOutput `pulumi:"radioSensitivity"`
	// Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
	RadiusMacAuth pulumi.StringOutput `pulumi:"radiusMacAuth"`
	// RADIUS-based MAC authentication server.
	RadiusMacAuthServer pulumi.StringOutput `pulumi:"radiusMacAuthServer"`
	// Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
	RadiusMacAuthUsergroups WirelessControllerVapRadiusMacAuthUsergroupArrayOutput `pulumi:"radiusMacAuthUsergroups"`
	// RADIUS server to be used to authenticate WiFi users.
	RadiusServer pulumi.StringOutput `pulumi:"radiusServer"`
	// Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11a pulumi.StringOutput `pulumi:"rates11a"`
	// Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
	Rates11acSs12 pulumi.StringOutput `pulumi:"rates11acSs12"`
	// Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
	Rates11acSs34 pulumi.StringOutput `pulumi:"rates11acSs34"`
	// Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11bg pulumi.StringOutput `pulumi:"rates11bg"`
	// Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
	Rates11nSs12 pulumi.StringOutput `pulumi:"rates11nSs12"`
	// Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
	Rates11nSs34 pulumi.StringOutput `pulumi:"rates11nSs34"`
	// SAE-Groups. Valid values: `19`, `20`, `21`.
	SaeGroups pulumi.StringOutput `pulumi:"saeGroups"`
	// WPA3 SAE password to be used to authenticate WiFi users.
	SaePassword pulumi.StringPtrOutput `pulumi:"saePassword"`
	// VAP schedule name.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Secondary wireless access gateway profile name.
	SecondaryWagProfile pulumi.StringOutput `pulumi:"secondaryWagProfile"`
	// Security mode for the wireless interface (default = wpa2-only-personal).
	Security pulumi.StringOutput `pulumi:"security"`
	// Optional security exempt list for captive portal authentication.
	SecurityExemptList pulumi.StringOutput `pulumi:"securityExemptList"`
	// Enable/disable obsolete security options. Valid values: `enable`, `disable`.
	SecurityObsoleteOption pulumi.StringOutput `pulumi:"securityObsoleteOption"`
	// Optional URL for redirecting users after they pass captive portal authentication.
	SecurityRedirectUrl pulumi.StringOutput `pulumi:"securityRedirectUrl"`
	// Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups WirelessControllerVapSelectedUsergroupArrayOutput `pulumi:"selectedUsergroups"`
	// Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringOutput `pulumi:"splitTunneling"`
	// IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
	Ssid pulumi.StringOutput `pulumi:"ssid"`
	// Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
	StickyClientRemove pulumi.StringOutput `pulumi:"stickyClientRemove"`
	// Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
	StickyClientThreshold2g pulumi.StringOutput `pulumi:"stickyClientThreshold2g"`
	// Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
	StickyClientThreshold5g pulumi.StringOutput `pulumi:"stickyClientThreshold5g"`
	// Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
	TargetWakeTime pulumi.StringOutput `pulumi:"targetWakeTime"`
	// Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
	TkipCounterMeasure pulumi.StringOutput `pulumi:"tkipCounterMeasure"`
	// The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
	TunnelEchoInterval pulumi.IntOutput `pulumi:"tunnelEchoInterval"`
	// The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
	TunnelFallbackInterval pulumi.IntOutput `pulumi:"tunnelFallbackInterval"`
	// Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
	Usergroups WirelessControllerVapUsergroupArrayOutput `pulumi:"usergroups"`
	// UTM profile name.
	UtmProfile pulumi.StringOutput `pulumi:"utmProfile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
	VlanAuto pulumi.StringOutput `pulumi:"vlanAuto"`
	// Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
	VlanPooling pulumi.StringOutput `pulumi:"vlanPooling"`
	// VLAN pool. The structure of `vlanPool` block is documented below.
	VlanPools WirelessControllerVapVlanPoolArrayOutput `pulumi:"vlanPools"`
	// Optional VLAN ID.
	Vlanid pulumi.IntOutput `pulumi:"vlanid"`
	// Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
	VoiceEnterprise pulumi.StringOutput `pulumi:"voiceEnterprise"`
}

// NewWirelessControllerVap registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerVap(ctx *pulumi.Context,
	name string, args *WirelessControllerVapArgs, opts ...pulumi.ResourceOption) (*WirelessControllerVap, error) {
	if args == nil {
		args = &WirelessControllerVapArgs{}
	}

	var resource WirelessControllerVap
	err := ctx.RegisterResource("fortios:index/wirelessControllerVap:WirelessControllerVap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerVap gets an existing WirelessControllerVap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerVap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerVapState, opts ...pulumi.ResourceOption) (*WirelessControllerVap, error) {
	var resource WirelessControllerVap
	err := ctx.ReadResource("fortios:index/wirelessControllerVap:WirelessControllerVap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerVap resources.
type wirelessControllerVapState struct {
	// access-control-list profile name.
	AccessControlList *string `pulumi:"accessControlList"`
	// WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
	AcctInterimInterval *int `pulumi:"acctInterimInterval"`
	// Additional AKMs. Valid values: `akm6`.
	AdditionalAkms *string `pulumi:"additionalAkms"`
	// Address group ID.
	AddressGroup *string `pulumi:"addressGroup"`
	// Alias.
	Alias *string `pulumi:"alias"`
	// Airtime weight in percentage (default = 20).
	AtfWeight *int `pulumi:"atfWeight"`
	// Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
	Auth *string `pulumi:"auth"`
	// Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
	BroadcastSsid *string `pulumi:"broadcastSsid"`
	// Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
	BroadcastSuppression *string `pulumi:"broadcastSuppression"`
	// Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
	BssColorPartial *string `pulumi:"bssColorPartial"`
	// Local-bridging captive portal ac-name.
	CaptivePortalAcName *string `pulumi:"captivePortalAcName"`
	// Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
	CaptivePortalAuthTimeout *int `pulumi:"captivePortalAuthTimeout"`
	// Secret key to access the macauth RADIUS server.
	CaptivePortalMacauthRadiusSecret *string `pulumi:"captivePortalMacauthRadiusSecret"`
	// Captive portal external RADIUS server domain name or IP address.
	CaptivePortalMacauthRadiusServer *string `pulumi:"captivePortalMacauthRadiusServer"`
	// Secret key to access the RADIUS server.
	CaptivePortalRadiusSecret *string `pulumi:"captivePortalRadiusSecret"`
	// Captive portal RADIUS server domain name or IP address.
	CaptivePortalRadiusServer *string `pulumi:"captivePortalRadiusServer"`
	// Session timeout interval (0 - 864000 sec, default = 0).
	CaptivePortalSessionTimeoutInterval *int `pulumi:"captivePortalSessionTimeoutInterval"`
	// DHCP lease time in seconds for NAT IP address.
	DhcpLeaseTime *int `pulumi:"dhcpLeaseTime"`
	// Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
	DhcpOption43Insertion *string `pulumi:"dhcpOption43Insertion"`
	// Enable/disable DHCP option 82 circuit-id insert (default = disable).
	DhcpOption82CircuitIdInsertion *string `pulumi:"dhcpOption82CircuitIdInsertion"`
	// Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
	DhcpOption82Insertion *string `pulumi:"dhcpOption82Insertion"`
	// Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
	DhcpOption82RemoteIdInsertion *string `pulumi:"dhcpOption82RemoteIdInsertion"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
	DynamicVlan *string `pulumi:"dynamicVlan"`
	// Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
	EapReauth *string `pulumi:"eapReauth"`
	// EAP re-authentication interval (1800 - 864000 sec, default = 86400).
	EapReauthIntv *int `pulumi:"eapReauthIntv"`
	// Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
	EapolKeyRetries *string `pulumi:"eapolKeyRetries"`
	// Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
	Encrypt *string `pulumi:"encrypt"`
	// Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
	ExternalFastRoaming *string `pulumi:"externalFastRoaming"`
	// URL of external authentication logout server.
	ExternalLogout *string `pulumi:"externalLogout"`
	// URL of external authentication web server.
	ExternalWeb *string `pulumi:"externalWeb"`
	// URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
	ExternalWebFormat *string `pulumi:"externalWebFormat"`
	// Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
	FastBssTransition *string `pulumi:"fastBssTransition"`
	// Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
	FastRoaming *string `pulumi:"fastRoaming"`
	// Mobility domain identifier in FT (1 - 65535, default = 1000).
	FtMobilityDomain *int `pulumi:"ftMobilityDomain"`
	// Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
	FtOverDs *string `pulumi:"ftOverDs"`
	// Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
	FtR0KeyLifetime *int `pulumi:"ftR0KeyLifetime"`
	// Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
	GtkRekey *string `pulumi:"gtkRekey"`
	// GTK rekey interval (1800 - 864000 sec, default = 86400).
	GtkRekeyIntv *int `pulumi:"gtkRekeyIntv"`
	// Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
	HighEfficiency *string `pulumi:"highEfficiency"`
	// Hotspot 2.0 profile name.
	Hotspot20Profile *string `pulumi:"hotspot20Profile"`
	// Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
	IgmpSnooping *string `pulumi:"igmpSnooping"`
	// Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
	IntraVapPrivacy *string `pulumi:"intraVapPrivacy"`
	// IP address and subnet mask for the local standalone NAT subnet.
	Ip *string `pulumi:"ip"`
	// Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
	Ipv6Rules *string `pulumi:"ipv6Rules"`
	// WEP Key.
	Key *string `pulumi:"key"`
	// WEP key index (1 - 4).
	Keyindex *int `pulumi:"keyindex"`
	// VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
	Ldpc *string `pulumi:"ldpc"`
	// Enable/disable AP local authentication. Valid values: `enable`, `disable`.
	LocalAuthentication *string `pulumi:"localAuthentication"`
	// Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
	LocalBridging *string `pulumi:"localBridging"`
	// Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
	LocalLan *string `pulumi:"localLan"`
	// Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
	LocalStandalone *string `pulumi:"localStandalone"`
	// Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
	LocalStandaloneNat *string `pulumi:"localStandaloneNat"`
	// Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
	MacAuthBypass *string `pulumi:"macAuthBypass"`
	// Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
	MacFilter *string `pulumi:"macFilter"`
	// Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
	MacFilterLists []WirelessControllerVapMacFilterList `pulumi:"macFilterLists"`
	// Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
	MacFilterPolicyOther *string `pulumi:"macFilterPolicyOther"`
	// Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
	MaxClientsAp *int `pulumi:"maxClientsAp"`
	// Disable multicast enhancement when this many clients are receiving multicast traffic.
	MeDisableThresh *int `pulumi:"meDisableThresh"`
	// Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
	MeshBackhaul *string `pulumi:"meshBackhaul"`
	// Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
	Mpsk *string `pulumi:"mpsk"`
	// Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
	MpskConcurrentClients *int `pulumi:"mpskConcurrentClients"`
	// Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
	MpskKeys []WirelessControllerVapMpskKey `pulumi:"mpskKeys"`
	// MPSK profile name.
	MpskProfile *string `pulumi:"mpskProfile"`
	// Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
	MuMimo *string `pulumi:"muMimo"`
	// Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
	MulticastEnhance *string `pulumi:"multicastEnhance"`
	// Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
	MulticastRate *string `pulumi:"multicastRate"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
	Okc *string `pulumi:"okc"`
	// OWE-Groups. Valid values: `19`, `20`, `21`.
	OweGroups *string `pulumi:"oweGroups"`
	// Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
	OweTransition *string `pulumi:"oweTransition"`
	// OWE transition mode peer SSID.
	OweTransitionSsid *string `pulumi:"oweTransitionSsid"`
	// WPA Pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
	// Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
	Pmf *string `pulumi:"pmf"`
	// Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
	PmfAssocComebackTimeout *int `pulumi:"pmfAssocComebackTimeout"`
	// Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
	PmfSaQueryRetryTimeout *int `pulumi:"pmfSaQueryRetryTimeout"`
	// Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
	PortMacauth *string `pulumi:"portMacauth"`
	// LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
	PortMacauthReauthTimeout *int `pulumi:"portMacauthReauthTimeout"`
	// LAN port MAC authentication idle timeout value (default = 600 sec).
	PortMacauthTimeout *int `pulumi:"portMacauthTimeout"`
	// Replacement message group for this VAP (only available when security is set to a captive portal type).
	PortalMessageOverrideGroup *string `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides *WirelessControllerVapPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	// Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
	PortalType *string `pulumi:"portalType"`
	// Primary wireless access gateway profile name.
	PrimaryWagProfile *string `pulumi:"primaryWagProfile"`
	// Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	ProbeRespSuppression *string `pulumi:"probeRespSuppression"`
	// Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
	ProbeRespThreshold *string `pulumi:"probeRespThreshold"`
	// Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
	PtkRekey *string `pulumi:"ptkRekey"`
	// PTK rekey interval (1800 - 864000 sec, default = 86400).
	PtkRekeyIntv *int `pulumi:"ptkRekeyIntv"`
	// Quality of service profile name.
	QosProfile *string `pulumi:"qosProfile"`
	// Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
	Quarantine *string `pulumi:"quarantine"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
	Radio2gThreshold *string `pulumi:"radio2gThreshold"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
	Radio5gThreshold *string `pulumi:"radio5gThreshold"`
	// Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	RadioSensitivity *string `pulumi:"radioSensitivity"`
	// Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
	RadiusMacAuth *string `pulumi:"radiusMacAuth"`
	// RADIUS-based MAC authentication server.
	RadiusMacAuthServer *string `pulumi:"radiusMacAuthServer"`
	// Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
	RadiusMacAuthUsergroups []WirelessControllerVapRadiusMacAuthUsergroup `pulumi:"radiusMacAuthUsergroups"`
	// RADIUS server to be used to authenticate WiFi users.
	RadiusServer *string `pulumi:"radiusServer"`
	// Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11a *string `pulumi:"rates11a"`
	// Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
	Rates11acSs12 *string `pulumi:"rates11acSs12"`
	// Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
	Rates11acSs34 *string `pulumi:"rates11acSs34"`
	// Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11bg *string `pulumi:"rates11bg"`
	// Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
	Rates11nSs12 *string `pulumi:"rates11nSs12"`
	// Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
	Rates11nSs34 *string `pulumi:"rates11nSs34"`
	// SAE-Groups. Valid values: `19`, `20`, `21`.
	SaeGroups *string `pulumi:"saeGroups"`
	// WPA3 SAE password to be used to authenticate WiFi users.
	SaePassword *string `pulumi:"saePassword"`
	// VAP schedule name.
	Schedule *string `pulumi:"schedule"`
	// Secondary wireless access gateway profile name.
	SecondaryWagProfile *string `pulumi:"secondaryWagProfile"`
	// Security mode for the wireless interface (default = wpa2-only-personal).
	Security *string `pulumi:"security"`
	// Optional security exempt list for captive portal authentication.
	SecurityExemptList *string `pulumi:"securityExemptList"`
	// Enable/disable obsolete security options. Valid values: `enable`, `disable`.
	SecurityObsoleteOption *string `pulumi:"securityObsoleteOption"`
	// Optional URL for redirecting users after they pass captive portal authentication.
	SecurityRedirectUrl *string `pulumi:"securityRedirectUrl"`
	// Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups []WirelessControllerVapSelectedUsergroup `pulumi:"selectedUsergroups"`
	// Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
	SplitTunneling *string `pulumi:"splitTunneling"`
	// IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
	Ssid *string `pulumi:"ssid"`
	// Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
	StickyClientRemove *string `pulumi:"stickyClientRemove"`
	// Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
	StickyClientThreshold2g *string `pulumi:"stickyClientThreshold2g"`
	// Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
	StickyClientThreshold5g *string `pulumi:"stickyClientThreshold5g"`
	// Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
	TargetWakeTime *string `pulumi:"targetWakeTime"`
	// Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
	TkipCounterMeasure *string `pulumi:"tkipCounterMeasure"`
	// The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
	TunnelEchoInterval *int `pulumi:"tunnelEchoInterval"`
	// The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
	TunnelFallbackInterval *int `pulumi:"tunnelFallbackInterval"`
	// Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
	Usergroups []WirelessControllerVapUsergroup `pulumi:"usergroups"`
	// UTM profile name.
	UtmProfile *string `pulumi:"utmProfile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
	VlanAuto *string `pulumi:"vlanAuto"`
	// Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
	VlanPooling *string `pulumi:"vlanPooling"`
	// VLAN pool. The structure of `vlanPool` block is documented below.
	VlanPools []WirelessControllerVapVlanPool `pulumi:"vlanPools"`
	// Optional VLAN ID.
	Vlanid *int `pulumi:"vlanid"`
	// Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
	VoiceEnterprise *string `pulumi:"voiceEnterprise"`
}

type WirelessControllerVapState struct {
	// access-control-list profile name.
	AccessControlList pulumi.StringPtrInput
	// WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
	AcctInterimInterval pulumi.IntPtrInput
	// Additional AKMs. Valid values: `akm6`.
	AdditionalAkms pulumi.StringPtrInput
	// Address group ID.
	AddressGroup pulumi.StringPtrInput
	// Alias.
	Alias pulumi.StringPtrInput
	// Airtime weight in percentage (default = 20).
	AtfWeight pulumi.IntPtrInput
	// Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
	Auth pulumi.StringPtrInput
	// Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
	BroadcastSsid pulumi.StringPtrInput
	// Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
	BroadcastSuppression pulumi.StringPtrInput
	// Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
	BssColorPartial pulumi.StringPtrInput
	// Local-bridging captive portal ac-name.
	CaptivePortalAcName pulumi.StringPtrInput
	// Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
	CaptivePortalAuthTimeout pulumi.IntPtrInput
	// Secret key to access the macauth RADIUS server.
	CaptivePortalMacauthRadiusSecret pulumi.StringPtrInput
	// Captive portal external RADIUS server domain name or IP address.
	CaptivePortalMacauthRadiusServer pulumi.StringPtrInput
	// Secret key to access the RADIUS server.
	CaptivePortalRadiusSecret pulumi.StringPtrInput
	// Captive portal RADIUS server domain name or IP address.
	CaptivePortalRadiusServer pulumi.StringPtrInput
	// Session timeout interval (0 - 864000 sec, default = 0).
	CaptivePortalSessionTimeoutInterval pulumi.IntPtrInput
	// DHCP lease time in seconds for NAT IP address.
	DhcpLeaseTime pulumi.IntPtrInput
	// Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
	DhcpOption43Insertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 circuit-id insert (default = disable).
	DhcpOption82CircuitIdInsertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
	DhcpOption82Insertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
	DhcpOption82RemoteIdInsertion pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
	DynamicVlan pulumi.StringPtrInput
	// Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
	EapReauth pulumi.StringPtrInput
	// EAP re-authentication interval (1800 - 864000 sec, default = 86400).
	EapReauthIntv pulumi.IntPtrInput
	// Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
	EapolKeyRetries pulumi.StringPtrInput
	// Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
	Encrypt pulumi.StringPtrInput
	// Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
	ExternalFastRoaming pulumi.StringPtrInput
	// URL of external authentication logout server.
	ExternalLogout pulumi.StringPtrInput
	// URL of external authentication web server.
	ExternalWeb pulumi.StringPtrInput
	// URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
	ExternalWebFormat pulumi.StringPtrInput
	// Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
	FastBssTransition pulumi.StringPtrInput
	// Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
	FastRoaming pulumi.StringPtrInput
	// Mobility domain identifier in FT (1 - 65535, default = 1000).
	FtMobilityDomain pulumi.IntPtrInput
	// Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
	FtOverDs pulumi.StringPtrInput
	// Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
	FtR0KeyLifetime pulumi.IntPtrInput
	// Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
	GtkRekey pulumi.StringPtrInput
	// GTK rekey interval (1800 - 864000 sec, default = 86400).
	GtkRekeyIntv pulumi.IntPtrInput
	// Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
	HighEfficiency pulumi.StringPtrInput
	// Hotspot 2.0 profile name.
	Hotspot20Profile pulumi.StringPtrInput
	// Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
	IgmpSnooping pulumi.StringPtrInput
	// Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
	IntraVapPrivacy pulumi.StringPtrInput
	// IP address and subnet mask for the local standalone NAT subnet.
	Ip pulumi.StringPtrInput
	// Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
	Ipv6Rules pulumi.StringPtrInput
	// WEP Key.
	Key pulumi.StringPtrInput
	// WEP key index (1 - 4).
	Keyindex pulumi.IntPtrInput
	// VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
	Ldpc pulumi.StringPtrInput
	// Enable/disable AP local authentication. Valid values: `enable`, `disable`.
	LocalAuthentication pulumi.StringPtrInput
	// Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
	LocalBridging pulumi.StringPtrInput
	// Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
	LocalLan pulumi.StringPtrInput
	// Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
	LocalStandalone pulumi.StringPtrInput
	// Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
	LocalStandaloneNat pulumi.StringPtrInput
	// Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
	MacAuthBypass pulumi.StringPtrInput
	// Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
	MacFilter pulumi.StringPtrInput
	// Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
	MacFilterLists WirelessControllerVapMacFilterListArrayInput
	// Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
	MacFilterPolicyOther pulumi.StringPtrInput
	// Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
	MaxClients pulumi.IntPtrInput
	// Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
	MaxClientsAp pulumi.IntPtrInput
	// Disable multicast enhancement when this many clients are receiving multicast traffic.
	MeDisableThresh pulumi.IntPtrInput
	// Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
	MeshBackhaul pulumi.StringPtrInput
	// Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
	Mpsk pulumi.StringPtrInput
	// Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
	MpskConcurrentClients pulumi.IntPtrInput
	// Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
	MpskKeys WirelessControllerVapMpskKeyArrayInput
	// MPSK profile name.
	MpskProfile pulumi.StringPtrInput
	// Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
	MuMimo pulumi.StringPtrInput
	// Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
	MulticastEnhance pulumi.StringPtrInput
	// Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
	MulticastRate pulumi.StringPtrInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
	Okc pulumi.StringPtrInput
	// OWE-Groups. Valid values: `19`, `20`, `21`.
	OweGroups pulumi.StringPtrInput
	// Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
	OweTransition pulumi.StringPtrInput
	// OWE transition mode peer SSID.
	OweTransitionSsid pulumi.StringPtrInput
	// WPA Pre-shared key.
	Passphrase pulumi.StringPtrInput
	// Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
	Pmf pulumi.StringPtrInput
	// Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
	PmfAssocComebackTimeout pulumi.IntPtrInput
	// Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
	PmfSaQueryRetryTimeout pulumi.IntPtrInput
	// Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
	PortMacauth pulumi.StringPtrInput
	// LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
	PortMacauthReauthTimeout pulumi.IntPtrInput
	// LAN port MAC authentication idle timeout value (default = 600 sec).
	PortMacauthTimeout pulumi.IntPtrInput
	// Replacement message group for this VAP (only available when security is set to a captive portal type).
	PortalMessageOverrideGroup pulumi.StringPtrInput
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides WirelessControllerVapPortalMessageOverridesPtrInput
	// Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
	PortalType pulumi.StringPtrInput
	// Primary wireless access gateway profile name.
	PrimaryWagProfile pulumi.StringPtrInput
	// Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	ProbeRespSuppression pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
	ProbeRespThreshold pulumi.StringPtrInput
	// Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
	PtkRekey pulumi.StringPtrInput
	// PTK rekey interval (1800 - 864000 sec, default = 86400).
	PtkRekeyIntv pulumi.IntPtrInput
	// Quality of service profile name.
	QosProfile pulumi.StringPtrInput
	// Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
	Quarantine pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
	Radio2gThreshold pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
	Radio5gThreshold pulumi.StringPtrInput
	// Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	RadioSensitivity pulumi.StringPtrInput
	// Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
	RadiusMacAuth pulumi.StringPtrInput
	// RADIUS-based MAC authentication server.
	RadiusMacAuthServer pulumi.StringPtrInput
	// Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
	RadiusMacAuthUsergroups WirelessControllerVapRadiusMacAuthUsergroupArrayInput
	// RADIUS server to be used to authenticate WiFi users.
	RadiusServer pulumi.StringPtrInput
	// Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11a pulumi.StringPtrInput
	// Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
	Rates11acSs12 pulumi.StringPtrInput
	// Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
	Rates11acSs34 pulumi.StringPtrInput
	// Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11bg pulumi.StringPtrInput
	// Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
	Rates11nSs12 pulumi.StringPtrInput
	// Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
	Rates11nSs34 pulumi.StringPtrInput
	// SAE-Groups. Valid values: `19`, `20`, `21`.
	SaeGroups pulumi.StringPtrInput
	// WPA3 SAE password to be used to authenticate WiFi users.
	SaePassword pulumi.StringPtrInput
	// VAP schedule name.
	Schedule pulumi.StringPtrInput
	// Secondary wireless access gateway profile name.
	SecondaryWagProfile pulumi.StringPtrInput
	// Security mode for the wireless interface (default = wpa2-only-personal).
	Security pulumi.StringPtrInput
	// Optional security exempt list for captive portal authentication.
	SecurityExemptList pulumi.StringPtrInput
	// Enable/disable obsolete security options. Valid values: `enable`, `disable`.
	SecurityObsoleteOption pulumi.StringPtrInput
	// Optional URL for redirecting users after they pass captive portal authentication.
	SecurityRedirectUrl pulumi.StringPtrInput
	// Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups WirelessControllerVapSelectedUsergroupArrayInput
	// Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringPtrInput
	// IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
	Ssid pulumi.StringPtrInput
	// Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
	StickyClientRemove pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
	StickyClientThreshold2g pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
	StickyClientThreshold5g pulumi.StringPtrInput
	// Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
	TargetWakeTime pulumi.StringPtrInput
	// Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
	TkipCounterMeasure pulumi.StringPtrInput
	// The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
	TunnelEchoInterval pulumi.IntPtrInput
	// The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
	TunnelFallbackInterval pulumi.IntPtrInput
	// Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
	Usergroups WirelessControllerVapUsergroupArrayInput
	// UTM profile name.
	UtmProfile pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
	VlanAuto pulumi.StringPtrInput
	// Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
	VlanPooling pulumi.StringPtrInput
	// VLAN pool. The structure of `vlanPool` block is documented below.
	VlanPools WirelessControllerVapVlanPoolArrayInput
	// Optional VLAN ID.
	Vlanid pulumi.IntPtrInput
	// Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
	VoiceEnterprise pulumi.StringPtrInput
}

func (WirelessControllerVapState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerVapState)(nil)).Elem()
}

type wirelessControllerVapArgs struct {
	// access-control-list profile name.
	AccessControlList *string `pulumi:"accessControlList"`
	// WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
	AcctInterimInterval *int `pulumi:"acctInterimInterval"`
	// Additional AKMs. Valid values: `akm6`.
	AdditionalAkms *string `pulumi:"additionalAkms"`
	// Address group ID.
	AddressGroup *string `pulumi:"addressGroup"`
	// Alias.
	Alias *string `pulumi:"alias"`
	// Airtime weight in percentage (default = 20).
	AtfWeight *int `pulumi:"atfWeight"`
	// Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
	Auth *string `pulumi:"auth"`
	// Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
	BroadcastSsid *string `pulumi:"broadcastSsid"`
	// Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
	BroadcastSuppression *string `pulumi:"broadcastSuppression"`
	// Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
	BssColorPartial *string `pulumi:"bssColorPartial"`
	// Local-bridging captive portal ac-name.
	CaptivePortalAcName *string `pulumi:"captivePortalAcName"`
	// Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
	CaptivePortalAuthTimeout *int `pulumi:"captivePortalAuthTimeout"`
	// Secret key to access the macauth RADIUS server.
	CaptivePortalMacauthRadiusSecret *string `pulumi:"captivePortalMacauthRadiusSecret"`
	// Captive portal external RADIUS server domain name or IP address.
	CaptivePortalMacauthRadiusServer *string `pulumi:"captivePortalMacauthRadiusServer"`
	// Secret key to access the RADIUS server.
	CaptivePortalRadiusSecret *string `pulumi:"captivePortalRadiusSecret"`
	// Captive portal RADIUS server domain name or IP address.
	CaptivePortalRadiusServer *string `pulumi:"captivePortalRadiusServer"`
	// Session timeout interval (0 - 864000 sec, default = 0).
	CaptivePortalSessionTimeoutInterval *int `pulumi:"captivePortalSessionTimeoutInterval"`
	// DHCP lease time in seconds for NAT IP address.
	DhcpLeaseTime *int `pulumi:"dhcpLeaseTime"`
	// Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
	DhcpOption43Insertion *string `pulumi:"dhcpOption43Insertion"`
	// Enable/disable DHCP option 82 circuit-id insert (default = disable).
	DhcpOption82CircuitIdInsertion *string `pulumi:"dhcpOption82CircuitIdInsertion"`
	// Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
	DhcpOption82Insertion *string `pulumi:"dhcpOption82Insertion"`
	// Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
	DhcpOption82RemoteIdInsertion *string `pulumi:"dhcpOption82RemoteIdInsertion"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
	DynamicVlan *string `pulumi:"dynamicVlan"`
	// Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
	EapReauth *string `pulumi:"eapReauth"`
	// EAP re-authentication interval (1800 - 864000 sec, default = 86400).
	EapReauthIntv *int `pulumi:"eapReauthIntv"`
	// Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
	EapolKeyRetries *string `pulumi:"eapolKeyRetries"`
	// Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
	Encrypt *string `pulumi:"encrypt"`
	// Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
	ExternalFastRoaming *string `pulumi:"externalFastRoaming"`
	// URL of external authentication logout server.
	ExternalLogout *string `pulumi:"externalLogout"`
	// URL of external authentication web server.
	ExternalWeb *string `pulumi:"externalWeb"`
	// URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
	ExternalWebFormat *string `pulumi:"externalWebFormat"`
	// Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
	FastBssTransition *string `pulumi:"fastBssTransition"`
	// Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
	FastRoaming *string `pulumi:"fastRoaming"`
	// Mobility domain identifier in FT (1 - 65535, default = 1000).
	FtMobilityDomain *int `pulumi:"ftMobilityDomain"`
	// Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
	FtOverDs *string `pulumi:"ftOverDs"`
	// Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
	FtR0KeyLifetime *int `pulumi:"ftR0KeyLifetime"`
	// Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
	GtkRekey *string `pulumi:"gtkRekey"`
	// GTK rekey interval (1800 - 864000 sec, default = 86400).
	GtkRekeyIntv *int `pulumi:"gtkRekeyIntv"`
	// Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
	HighEfficiency *string `pulumi:"highEfficiency"`
	// Hotspot 2.0 profile name.
	Hotspot20Profile *string `pulumi:"hotspot20Profile"`
	// Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
	IgmpSnooping *string `pulumi:"igmpSnooping"`
	// Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
	IntraVapPrivacy *string `pulumi:"intraVapPrivacy"`
	// IP address and subnet mask for the local standalone NAT subnet.
	Ip *string `pulumi:"ip"`
	// Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
	Ipv6Rules *string `pulumi:"ipv6Rules"`
	// WEP Key.
	Key *string `pulumi:"key"`
	// WEP key index (1 - 4).
	Keyindex *int `pulumi:"keyindex"`
	// VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
	Ldpc *string `pulumi:"ldpc"`
	// Enable/disable AP local authentication. Valid values: `enable`, `disable`.
	LocalAuthentication *string `pulumi:"localAuthentication"`
	// Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
	LocalBridging *string `pulumi:"localBridging"`
	// Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
	LocalLan *string `pulumi:"localLan"`
	// Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
	LocalStandalone *string `pulumi:"localStandalone"`
	// Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
	LocalStandaloneNat *string `pulumi:"localStandaloneNat"`
	// Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
	MacAuthBypass *string `pulumi:"macAuthBypass"`
	// Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
	MacFilter *string `pulumi:"macFilter"`
	// Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
	MacFilterLists []WirelessControllerVapMacFilterList `pulumi:"macFilterLists"`
	// Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
	MacFilterPolicyOther *string `pulumi:"macFilterPolicyOther"`
	// Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
	MaxClients *int `pulumi:"maxClients"`
	// Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
	MaxClientsAp *int `pulumi:"maxClientsAp"`
	// Disable multicast enhancement when this many clients are receiving multicast traffic.
	MeDisableThresh *int `pulumi:"meDisableThresh"`
	// Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
	MeshBackhaul *string `pulumi:"meshBackhaul"`
	// Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
	Mpsk *string `pulumi:"mpsk"`
	// Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
	MpskConcurrentClients *int `pulumi:"mpskConcurrentClients"`
	// Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
	MpskKeys []WirelessControllerVapMpskKey `pulumi:"mpskKeys"`
	// MPSK profile name.
	MpskProfile *string `pulumi:"mpskProfile"`
	// Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
	MuMimo *string `pulumi:"muMimo"`
	// Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
	MulticastEnhance *string `pulumi:"multicastEnhance"`
	// Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
	MulticastRate *string `pulumi:"multicastRate"`
	// Schedule name.
	Name *string `pulumi:"name"`
	// Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
	Okc *string `pulumi:"okc"`
	// OWE-Groups. Valid values: `19`, `20`, `21`.
	OweGroups *string `pulumi:"oweGroups"`
	// Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
	OweTransition *string `pulumi:"oweTransition"`
	// OWE transition mode peer SSID.
	OweTransitionSsid *string `pulumi:"oweTransitionSsid"`
	// WPA Pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
	// Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
	Pmf *string `pulumi:"pmf"`
	// Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
	PmfAssocComebackTimeout *int `pulumi:"pmfAssocComebackTimeout"`
	// Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
	PmfSaQueryRetryTimeout *int `pulumi:"pmfSaQueryRetryTimeout"`
	// Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
	PortMacauth *string `pulumi:"portMacauth"`
	// LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
	PortMacauthReauthTimeout *int `pulumi:"portMacauthReauthTimeout"`
	// LAN port MAC authentication idle timeout value (default = 600 sec).
	PortMacauthTimeout *int `pulumi:"portMacauthTimeout"`
	// Replacement message group for this VAP (only available when security is set to a captive portal type).
	PortalMessageOverrideGroup *string `pulumi:"portalMessageOverrideGroup"`
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides *WirelessControllerVapPortalMessageOverrides `pulumi:"portalMessageOverrides"`
	// Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
	PortalType *string `pulumi:"portalType"`
	// Primary wireless access gateway profile name.
	PrimaryWagProfile *string `pulumi:"primaryWagProfile"`
	// Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	ProbeRespSuppression *string `pulumi:"probeRespSuppression"`
	// Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
	ProbeRespThreshold *string `pulumi:"probeRespThreshold"`
	// Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
	PtkRekey *string `pulumi:"ptkRekey"`
	// PTK rekey interval (1800 - 864000 sec, default = 86400).
	PtkRekeyIntv *int `pulumi:"ptkRekeyIntv"`
	// Quality of service profile name.
	QosProfile *string `pulumi:"qosProfile"`
	// Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
	Quarantine *string `pulumi:"quarantine"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
	Radio2gThreshold *string `pulumi:"radio2gThreshold"`
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
	Radio5gThreshold *string `pulumi:"radio5gThreshold"`
	// Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	RadioSensitivity *string `pulumi:"radioSensitivity"`
	// Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
	RadiusMacAuth *string `pulumi:"radiusMacAuth"`
	// RADIUS-based MAC authentication server.
	RadiusMacAuthServer *string `pulumi:"radiusMacAuthServer"`
	// Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
	RadiusMacAuthUsergroups []WirelessControllerVapRadiusMacAuthUsergroup `pulumi:"radiusMacAuthUsergroups"`
	// RADIUS server to be used to authenticate WiFi users.
	RadiusServer *string `pulumi:"radiusServer"`
	// Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11a *string `pulumi:"rates11a"`
	// Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
	Rates11acSs12 *string `pulumi:"rates11acSs12"`
	// Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
	Rates11acSs34 *string `pulumi:"rates11acSs34"`
	// Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11bg *string `pulumi:"rates11bg"`
	// Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
	Rates11nSs12 *string `pulumi:"rates11nSs12"`
	// Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
	Rates11nSs34 *string `pulumi:"rates11nSs34"`
	// SAE-Groups. Valid values: `19`, `20`, `21`.
	SaeGroups *string `pulumi:"saeGroups"`
	// WPA3 SAE password to be used to authenticate WiFi users.
	SaePassword *string `pulumi:"saePassword"`
	// VAP schedule name.
	Schedule *string `pulumi:"schedule"`
	// Secondary wireless access gateway profile name.
	SecondaryWagProfile *string `pulumi:"secondaryWagProfile"`
	// Security mode for the wireless interface (default = wpa2-only-personal).
	Security *string `pulumi:"security"`
	// Optional security exempt list for captive portal authentication.
	SecurityExemptList *string `pulumi:"securityExemptList"`
	// Enable/disable obsolete security options. Valid values: `enable`, `disable`.
	SecurityObsoleteOption *string `pulumi:"securityObsoleteOption"`
	// Optional URL for redirecting users after they pass captive portal authentication.
	SecurityRedirectUrl *string `pulumi:"securityRedirectUrl"`
	// Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups []WirelessControllerVapSelectedUsergroup `pulumi:"selectedUsergroups"`
	// Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
	SplitTunneling *string `pulumi:"splitTunneling"`
	// IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
	Ssid *string `pulumi:"ssid"`
	// Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
	StickyClientRemove *string `pulumi:"stickyClientRemove"`
	// Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
	StickyClientThreshold2g *string `pulumi:"stickyClientThreshold2g"`
	// Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
	StickyClientThreshold5g *string `pulumi:"stickyClientThreshold5g"`
	// Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
	TargetWakeTime *string `pulumi:"targetWakeTime"`
	// Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
	TkipCounterMeasure *string `pulumi:"tkipCounterMeasure"`
	// The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
	TunnelEchoInterval *int `pulumi:"tunnelEchoInterval"`
	// The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
	TunnelFallbackInterval *int `pulumi:"tunnelFallbackInterval"`
	// Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
	Usergroups []WirelessControllerVapUsergroup `pulumi:"usergroups"`
	// UTM profile name.
	UtmProfile *string `pulumi:"utmProfile"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
	VlanAuto *string `pulumi:"vlanAuto"`
	// Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
	VlanPooling *string `pulumi:"vlanPooling"`
	// VLAN pool. The structure of `vlanPool` block is documented below.
	VlanPools []WirelessControllerVapVlanPool `pulumi:"vlanPools"`
	// Optional VLAN ID.
	Vlanid *int `pulumi:"vlanid"`
	// Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
	VoiceEnterprise *string `pulumi:"voiceEnterprise"`
}

// The set of arguments for constructing a WirelessControllerVap resource.
type WirelessControllerVapArgs struct {
	// access-control-list profile name.
	AccessControlList pulumi.StringPtrInput
	// WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
	AcctInterimInterval pulumi.IntPtrInput
	// Additional AKMs. Valid values: `akm6`.
	AdditionalAkms pulumi.StringPtrInput
	// Address group ID.
	AddressGroup pulumi.StringPtrInput
	// Alias.
	Alias pulumi.StringPtrInput
	// Airtime weight in percentage (default = 20).
	AtfWeight pulumi.IntPtrInput
	// Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
	Auth pulumi.StringPtrInput
	// Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
	BroadcastSsid pulumi.StringPtrInput
	// Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
	BroadcastSuppression pulumi.StringPtrInput
	// Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
	BssColorPartial pulumi.StringPtrInput
	// Local-bridging captive portal ac-name.
	CaptivePortalAcName pulumi.StringPtrInput
	// Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
	CaptivePortalAuthTimeout pulumi.IntPtrInput
	// Secret key to access the macauth RADIUS server.
	CaptivePortalMacauthRadiusSecret pulumi.StringPtrInput
	// Captive portal external RADIUS server domain name or IP address.
	CaptivePortalMacauthRadiusServer pulumi.StringPtrInput
	// Secret key to access the RADIUS server.
	CaptivePortalRadiusSecret pulumi.StringPtrInput
	// Captive portal RADIUS server domain name or IP address.
	CaptivePortalRadiusServer pulumi.StringPtrInput
	// Session timeout interval (0 - 864000 sec, default = 0).
	CaptivePortalSessionTimeoutInterval pulumi.IntPtrInput
	// DHCP lease time in seconds for NAT IP address.
	DhcpLeaseTime pulumi.IntPtrInput
	// Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
	DhcpOption43Insertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 circuit-id insert (default = disable).
	DhcpOption82CircuitIdInsertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
	DhcpOption82Insertion pulumi.StringPtrInput
	// Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
	DhcpOption82RemoteIdInsertion pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
	DynamicVlan pulumi.StringPtrInput
	// Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
	EapReauth pulumi.StringPtrInput
	// EAP re-authentication interval (1800 - 864000 sec, default = 86400).
	EapReauthIntv pulumi.IntPtrInput
	// Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
	EapolKeyRetries pulumi.StringPtrInput
	// Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
	Encrypt pulumi.StringPtrInput
	// Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
	ExternalFastRoaming pulumi.StringPtrInput
	// URL of external authentication logout server.
	ExternalLogout pulumi.StringPtrInput
	// URL of external authentication web server.
	ExternalWeb pulumi.StringPtrInput
	// URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
	ExternalWebFormat pulumi.StringPtrInput
	// Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
	FastBssTransition pulumi.StringPtrInput
	// Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
	FastRoaming pulumi.StringPtrInput
	// Mobility domain identifier in FT (1 - 65535, default = 1000).
	FtMobilityDomain pulumi.IntPtrInput
	// Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
	FtOverDs pulumi.StringPtrInput
	// Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
	FtR0KeyLifetime pulumi.IntPtrInput
	// Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
	GtkRekey pulumi.StringPtrInput
	// GTK rekey interval (1800 - 864000 sec, default = 86400).
	GtkRekeyIntv pulumi.IntPtrInput
	// Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
	HighEfficiency pulumi.StringPtrInput
	// Hotspot 2.0 profile name.
	Hotspot20Profile pulumi.StringPtrInput
	// Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
	IgmpSnooping pulumi.StringPtrInput
	// Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
	IntraVapPrivacy pulumi.StringPtrInput
	// IP address and subnet mask for the local standalone NAT subnet.
	Ip pulumi.StringPtrInput
	// Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
	Ipv6Rules pulumi.StringPtrInput
	// WEP Key.
	Key pulumi.StringPtrInput
	// WEP key index (1 - 4).
	Keyindex pulumi.IntPtrInput
	// VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
	Ldpc pulumi.StringPtrInput
	// Enable/disable AP local authentication. Valid values: `enable`, `disable`.
	LocalAuthentication pulumi.StringPtrInput
	// Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
	LocalBridging pulumi.StringPtrInput
	// Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
	LocalLan pulumi.StringPtrInput
	// Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
	LocalStandalone pulumi.StringPtrInput
	// Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
	LocalStandaloneNat pulumi.StringPtrInput
	// Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
	MacAuthBypass pulumi.StringPtrInput
	// Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
	MacFilter pulumi.StringPtrInput
	// Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
	MacFilterLists WirelessControllerVapMacFilterListArrayInput
	// Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
	MacFilterPolicyOther pulumi.StringPtrInput
	// Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
	MaxClients pulumi.IntPtrInput
	// Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
	MaxClientsAp pulumi.IntPtrInput
	// Disable multicast enhancement when this many clients are receiving multicast traffic.
	MeDisableThresh pulumi.IntPtrInput
	// Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
	MeshBackhaul pulumi.StringPtrInput
	// Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
	Mpsk pulumi.StringPtrInput
	// Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
	MpskConcurrentClients pulumi.IntPtrInput
	// Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
	MpskKeys WirelessControllerVapMpskKeyArrayInput
	// MPSK profile name.
	MpskProfile pulumi.StringPtrInput
	// Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
	MuMimo pulumi.StringPtrInput
	// Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
	MulticastEnhance pulumi.StringPtrInput
	// Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
	MulticastRate pulumi.StringPtrInput
	// Schedule name.
	Name pulumi.StringPtrInput
	// Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
	Okc pulumi.StringPtrInput
	// OWE-Groups. Valid values: `19`, `20`, `21`.
	OweGroups pulumi.StringPtrInput
	// Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
	OweTransition pulumi.StringPtrInput
	// OWE transition mode peer SSID.
	OweTransitionSsid pulumi.StringPtrInput
	// WPA Pre-shared key.
	Passphrase pulumi.StringPtrInput
	// Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
	Pmf pulumi.StringPtrInput
	// Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
	PmfAssocComebackTimeout pulumi.IntPtrInput
	// Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
	PmfSaQueryRetryTimeout pulumi.IntPtrInput
	// Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
	PortMacauth pulumi.StringPtrInput
	// LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
	PortMacauthReauthTimeout pulumi.IntPtrInput
	// LAN port MAC authentication idle timeout value (default = 600 sec).
	PortMacauthTimeout pulumi.IntPtrInput
	// Replacement message group for this VAP (only available when security is set to a captive portal type).
	PortalMessageOverrideGroup pulumi.StringPtrInput
	// Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
	PortalMessageOverrides WirelessControllerVapPortalMessageOverridesPtrInput
	// Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
	PortalType pulumi.StringPtrInput
	// Primary wireless access gateway profile name.
	PrimaryWagProfile pulumi.StringPtrInput
	// Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	ProbeRespSuppression pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
	ProbeRespThreshold pulumi.StringPtrInput
	// Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
	PtkRekey pulumi.StringPtrInput
	// PTK rekey interval (1800 - 864000 sec, default = 86400).
	PtkRekeyIntv pulumi.IntPtrInput
	// Quality of service profile name.
	QosProfile pulumi.StringPtrInput
	// Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
	Quarantine pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
	Radio2gThreshold pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
	Radio5gThreshold pulumi.StringPtrInput
	// Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
	RadioSensitivity pulumi.StringPtrInput
	// Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
	RadiusMacAuth pulumi.StringPtrInput
	// RADIUS-based MAC authentication server.
	RadiusMacAuthServer pulumi.StringPtrInput
	// Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
	RadiusMacAuthUsergroups WirelessControllerVapRadiusMacAuthUsergroupArrayInput
	// RADIUS server to be used to authenticate WiFi users.
	RadiusServer pulumi.StringPtrInput
	// Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11a pulumi.StringPtrInput
	// Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
	Rates11acSs12 pulumi.StringPtrInput
	// Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
	Rates11acSs34 pulumi.StringPtrInput
	// Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
	Rates11bg pulumi.StringPtrInput
	// Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
	Rates11nSs12 pulumi.StringPtrInput
	// Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
	Rates11nSs34 pulumi.StringPtrInput
	// SAE-Groups. Valid values: `19`, `20`, `21`.
	SaeGroups pulumi.StringPtrInput
	// WPA3 SAE password to be used to authenticate WiFi users.
	SaePassword pulumi.StringPtrInput
	// VAP schedule name.
	Schedule pulumi.StringPtrInput
	// Secondary wireless access gateway profile name.
	SecondaryWagProfile pulumi.StringPtrInput
	// Security mode for the wireless interface (default = wpa2-only-personal).
	Security pulumi.StringPtrInput
	// Optional security exempt list for captive portal authentication.
	SecurityExemptList pulumi.StringPtrInput
	// Enable/disable obsolete security options. Valid values: `enable`, `disable`.
	SecurityObsoleteOption pulumi.StringPtrInput
	// Optional URL for redirecting users after they pass captive portal authentication.
	SecurityRedirectUrl pulumi.StringPtrInput
	// Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
	SelectedUsergroups WirelessControllerVapSelectedUsergroupArrayInput
	// Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
	SplitTunneling pulumi.StringPtrInput
	// IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
	Ssid pulumi.StringPtrInput
	// Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
	StickyClientRemove pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
	StickyClientThreshold2g pulumi.StringPtrInput
	// Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
	StickyClientThreshold5g pulumi.StringPtrInput
	// Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
	TargetWakeTime pulumi.StringPtrInput
	// Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
	TkipCounterMeasure pulumi.StringPtrInput
	// The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
	TunnelEchoInterval pulumi.IntPtrInput
	// The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
	TunnelFallbackInterval pulumi.IntPtrInput
	// Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
	Usergroups WirelessControllerVapUsergroupArrayInput
	// UTM profile name.
	UtmProfile pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
	VlanAuto pulumi.StringPtrInput
	// Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
	VlanPooling pulumi.StringPtrInput
	// VLAN pool. The structure of `vlanPool` block is documented below.
	VlanPools WirelessControllerVapVlanPoolArrayInput
	// Optional VLAN ID.
	Vlanid pulumi.IntPtrInput
	// Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
	VoiceEnterprise pulumi.StringPtrInput
}

func (WirelessControllerVapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerVapArgs)(nil)).Elem()
}

type WirelessControllerVapInput interface {
	pulumi.Input

	ToWirelessControllerVapOutput() WirelessControllerVapOutput
	ToWirelessControllerVapOutputWithContext(ctx context.Context) WirelessControllerVapOutput
}

func (*WirelessControllerVap) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessControllerVap)(nil))
}

func (i *WirelessControllerVap) ToWirelessControllerVapOutput() WirelessControllerVapOutput {
	return i.ToWirelessControllerVapOutputWithContext(context.Background())
}

func (i *WirelessControllerVap) ToWirelessControllerVapOutputWithContext(ctx context.Context) WirelessControllerVapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerVapOutput)
}

func (i *WirelessControllerVap) ToWirelessControllerVapPtrOutput() WirelessControllerVapPtrOutput {
	return i.ToWirelessControllerVapPtrOutputWithContext(context.Background())
}

func (i *WirelessControllerVap) ToWirelessControllerVapPtrOutputWithContext(ctx context.Context) WirelessControllerVapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerVapPtrOutput)
}

type WirelessControllerVapPtrInput interface {
	pulumi.Input

	ToWirelessControllerVapPtrOutput() WirelessControllerVapPtrOutput
	ToWirelessControllerVapPtrOutputWithContext(ctx context.Context) WirelessControllerVapPtrOutput
}

type wirelessControllerVapPtrType WirelessControllerVapArgs

func (*wirelessControllerVapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerVap)(nil))
}

func (i *wirelessControllerVapPtrType) ToWirelessControllerVapPtrOutput() WirelessControllerVapPtrOutput {
	return i.ToWirelessControllerVapPtrOutputWithContext(context.Background())
}

func (i *wirelessControllerVapPtrType) ToWirelessControllerVapPtrOutputWithContext(ctx context.Context) WirelessControllerVapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerVapPtrOutput)
}

// WirelessControllerVapArrayInput is an input type that accepts WirelessControllerVapArray and WirelessControllerVapArrayOutput values.
// You can construct a concrete instance of `WirelessControllerVapArrayInput` via:
//
//          WirelessControllerVapArray{ WirelessControllerVapArgs{...} }
type WirelessControllerVapArrayInput interface {
	pulumi.Input

	ToWirelessControllerVapArrayOutput() WirelessControllerVapArrayOutput
	ToWirelessControllerVapArrayOutputWithContext(context.Context) WirelessControllerVapArrayOutput
}

type WirelessControllerVapArray []WirelessControllerVapInput

func (WirelessControllerVapArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WirelessControllerVap)(nil))
}

func (i WirelessControllerVapArray) ToWirelessControllerVapArrayOutput() WirelessControllerVapArrayOutput {
	return i.ToWirelessControllerVapArrayOutputWithContext(context.Background())
}

func (i WirelessControllerVapArray) ToWirelessControllerVapArrayOutputWithContext(ctx context.Context) WirelessControllerVapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerVapArrayOutput)
}

// WirelessControllerVapMapInput is an input type that accepts WirelessControllerVapMap and WirelessControllerVapMapOutput values.
// You can construct a concrete instance of `WirelessControllerVapMapInput` via:
//
//          WirelessControllerVapMap{ "key": WirelessControllerVapArgs{...} }
type WirelessControllerVapMapInput interface {
	pulumi.Input

	ToWirelessControllerVapMapOutput() WirelessControllerVapMapOutput
	ToWirelessControllerVapMapOutputWithContext(context.Context) WirelessControllerVapMapOutput
}

type WirelessControllerVapMap map[string]WirelessControllerVapInput

func (WirelessControllerVapMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WirelessControllerVap)(nil))
}

func (i WirelessControllerVapMap) ToWirelessControllerVapMapOutput() WirelessControllerVapMapOutput {
	return i.ToWirelessControllerVapMapOutputWithContext(context.Background())
}

func (i WirelessControllerVapMap) ToWirelessControllerVapMapOutputWithContext(ctx context.Context) WirelessControllerVapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerVapMapOutput)
}

type WirelessControllerVapOutput struct {
	*pulumi.OutputState
}

func (WirelessControllerVapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessControllerVap)(nil))
}

func (o WirelessControllerVapOutput) ToWirelessControllerVapOutput() WirelessControllerVapOutput {
	return o
}

func (o WirelessControllerVapOutput) ToWirelessControllerVapOutputWithContext(ctx context.Context) WirelessControllerVapOutput {
	return o
}

func (o WirelessControllerVapOutput) ToWirelessControllerVapPtrOutput() WirelessControllerVapPtrOutput {
	return o.ToWirelessControllerVapPtrOutputWithContext(context.Background())
}

func (o WirelessControllerVapOutput) ToWirelessControllerVapPtrOutputWithContext(ctx context.Context) WirelessControllerVapPtrOutput {
	return o.ApplyT(func(v WirelessControllerVap) *WirelessControllerVap {
		return &v
	}).(WirelessControllerVapPtrOutput)
}

type WirelessControllerVapPtrOutput struct {
	*pulumi.OutputState
}

func (WirelessControllerVapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerVap)(nil))
}

func (o WirelessControllerVapPtrOutput) ToWirelessControllerVapPtrOutput() WirelessControllerVapPtrOutput {
	return o
}

func (o WirelessControllerVapPtrOutput) ToWirelessControllerVapPtrOutputWithContext(ctx context.Context) WirelessControllerVapPtrOutput {
	return o
}

type WirelessControllerVapArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerVapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WirelessControllerVap)(nil))
}

func (o WirelessControllerVapArrayOutput) ToWirelessControllerVapArrayOutput() WirelessControllerVapArrayOutput {
	return o
}

func (o WirelessControllerVapArrayOutput) ToWirelessControllerVapArrayOutputWithContext(ctx context.Context) WirelessControllerVapArrayOutput {
	return o
}

func (o WirelessControllerVapArrayOutput) Index(i pulumi.IntInput) WirelessControllerVapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WirelessControllerVap {
		return vs[0].([]WirelessControllerVap)[vs[1].(int)]
	}).(WirelessControllerVapOutput)
}

type WirelessControllerVapMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerVapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WirelessControllerVap)(nil))
}

func (o WirelessControllerVapMapOutput) ToWirelessControllerVapMapOutput() WirelessControllerVapMapOutput {
	return o
}

func (o WirelessControllerVapMapOutput) ToWirelessControllerVapMapOutputWithContext(ctx context.Context) WirelessControllerVapMapOutput {
	return o
}

func (o WirelessControllerVapMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerVapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WirelessControllerVap {
		return vs[0].(map[string]WirelessControllerVap)[vs[1].(string)]
	}).(WirelessControllerVapOutput)
}

func init() {
	pulumi.RegisterOutputType(WirelessControllerVapOutput{})
	pulumi.RegisterOutputType(WirelessControllerVapPtrOutput{})
	pulumi.RegisterOutputType(WirelessControllerVapArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerVapMapOutput{})
}
