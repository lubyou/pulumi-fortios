// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupRouterPrefixList(ctx *pulumi.Context, args *LookupRouterPrefixListArgs, opts ...pulumi.InvokeOption) (*LookupRouterPrefixListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouterPrefixListResult
	err := ctx.Invoke("fortios:index/getRouterPrefixList:GetRouterPrefixList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetRouterPrefixList.
type LookupRouterPrefixListArgs struct {
	Name      string  `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetRouterPrefixList.
type LookupRouterPrefixListResult struct {
	Comments string `pulumi:"comments"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                    `pulumi:"id"`
	Name      string                    `pulumi:"name"`
	Rules     []GetRouterPrefixListRule `pulumi:"rules"`
	Vdomparam *string                   `pulumi:"vdomparam"`
}

func LookupRouterPrefixListOutput(ctx *pulumi.Context, args LookupRouterPrefixListOutputArgs, opts ...pulumi.InvokeOption) LookupRouterPrefixListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouterPrefixListResult, error) {
			args := v.(LookupRouterPrefixListArgs)
			r, err := LookupRouterPrefixList(ctx, &args, opts...)
			var s LookupRouterPrefixListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouterPrefixListResultOutput)
}

// A collection of arguments for invoking GetRouterPrefixList.
type LookupRouterPrefixListOutputArgs struct {
	Name      pulumi.StringInput    `pulumi:"name"`
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupRouterPrefixListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterPrefixListArgs)(nil)).Elem()
}

// A collection of values returned by GetRouterPrefixList.
type LookupRouterPrefixListResultOutput struct{ *pulumi.OutputState }

func (LookupRouterPrefixListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouterPrefixListResult)(nil)).Elem()
}

func (o LookupRouterPrefixListResultOutput) ToLookupRouterPrefixListResultOutput() LookupRouterPrefixListResultOutput {
	return o
}

func (o LookupRouterPrefixListResultOutput) ToLookupRouterPrefixListResultOutputWithContext(ctx context.Context) LookupRouterPrefixListResultOutput {
	return o
}

func (o LookupRouterPrefixListResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRouterPrefixListResult] {
	return pulumix.Output[LookupRouterPrefixListResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupRouterPrefixListResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterPrefixListResult) string { return v.Comments }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouterPrefixListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterPrefixListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouterPrefixListResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouterPrefixListResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRouterPrefixListResultOutput) Rules() GetRouterPrefixListRuleArrayOutput {
	return o.ApplyT(func(v LookupRouterPrefixListResult) []GetRouterPrefixListRule { return v.Rules }).(GetRouterPrefixListRuleArrayOutput)
}

func (o LookupRouterPrefixListResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouterPrefixListResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouterPrefixListResultOutput{})
}
