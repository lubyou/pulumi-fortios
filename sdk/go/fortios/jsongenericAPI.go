// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type JSONGenericAPI struct {
	pulumi.CustomResourceState

	ForceRecreate pulumi.StringPtrOutput `pulumi:"forceRecreate"`
	Json          pulumi.StringPtrOutput `pulumi:"json"`
	Method        pulumi.StringOutput    `pulumi:"method"`
	Path          pulumi.StringOutput    `pulumi:"path"`
	Response      pulumi.StringOutput    `pulumi:"response"`
	Specialparams pulumi.StringPtrOutput `pulumi:"specialparams"`
	Vdomparam     pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewJSONGenericAPI registers a new resource with the given unique name, arguments, and options.
func NewJSONGenericAPI(ctx *pulumi.Context,
	name string, args *JSONGenericAPIArgs, opts ...pulumi.ResourceOption) (*JSONGenericAPI, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JSONGenericAPI
	err := ctx.RegisterResource("fortios:index/jSONGenericAPI:JSONGenericAPI", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJSONGenericAPI gets an existing JSONGenericAPI resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJSONGenericAPI(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JSONGenericAPIState, opts ...pulumi.ResourceOption) (*JSONGenericAPI, error) {
	var resource JSONGenericAPI
	err := ctx.ReadResource("fortios:index/jSONGenericAPI:JSONGenericAPI", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JSONGenericAPI resources.
type jsongenericAPIState struct {
	ForceRecreate *string `pulumi:"forceRecreate"`
	Json          *string `pulumi:"json"`
	Method        *string `pulumi:"method"`
	Path          *string `pulumi:"path"`
	Response      *string `pulumi:"response"`
	Specialparams *string `pulumi:"specialparams"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

type JSONGenericAPIState struct {
	ForceRecreate pulumi.StringPtrInput
	Json          pulumi.StringPtrInput
	Method        pulumi.StringPtrInput
	Path          pulumi.StringPtrInput
	Response      pulumi.StringPtrInput
	Specialparams pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (JSONGenericAPIState) ElementType() reflect.Type {
	return reflect.TypeOf((*jsongenericAPIState)(nil)).Elem()
}

type jsongenericAPIArgs struct {
	ForceRecreate *string `pulumi:"forceRecreate"`
	Json          *string `pulumi:"json"`
	Method        string  `pulumi:"method"`
	Path          string  `pulumi:"path"`
	Specialparams *string `pulumi:"specialparams"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a JSONGenericAPI resource.
type JSONGenericAPIArgs struct {
	ForceRecreate pulumi.StringPtrInput
	Json          pulumi.StringPtrInput
	Method        pulumi.StringInput
	Path          pulumi.StringInput
	Specialparams pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (JSONGenericAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jsongenericAPIArgs)(nil)).Elem()
}

type JSONGenericAPIInput interface {
	pulumi.Input

	ToJSONGenericAPIOutput() JSONGenericAPIOutput
	ToJSONGenericAPIOutputWithContext(ctx context.Context) JSONGenericAPIOutput
}

func (*JSONGenericAPI) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONGenericAPI)(nil)).Elem()
}

func (i *JSONGenericAPI) ToJSONGenericAPIOutput() JSONGenericAPIOutput {
	return i.ToJSONGenericAPIOutputWithContext(context.Background())
}

func (i *JSONGenericAPI) ToJSONGenericAPIOutputWithContext(ctx context.Context) JSONGenericAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONGenericAPIOutput)
}

// JSONGenericAPIArrayInput is an input type that accepts JSONGenericAPIArray and JSONGenericAPIArrayOutput values.
// You can construct a concrete instance of `JSONGenericAPIArrayInput` via:
//
//	JSONGenericAPIArray{ JSONGenericAPIArgs{...} }
type JSONGenericAPIArrayInput interface {
	pulumi.Input

	ToJSONGenericAPIArrayOutput() JSONGenericAPIArrayOutput
	ToJSONGenericAPIArrayOutputWithContext(context.Context) JSONGenericAPIArrayOutput
}

type JSONGenericAPIArray []JSONGenericAPIInput

func (JSONGenericAPIArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JSONGenericAPI)(nil)).Elem()
}

func (i JSONGenericAPIArray) ToJSONGenericAPIArrayOutput() JSONGenericAPIArrayOutput {
	return i.ToJSONGenericAPIArrayOutputWithContext(context.Background())
}

func (i JSONGenericAPIArray) ToJSONGenericAPIArrayOutputWithContext(ctx context.Context) JSONGenericAPIArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONGenericAPIArrayOutput)
}

// JSONGenericAPIMapInput is an input type that accepts JSONGenericAPIMap and JSONGenericAPIMapOutput values.
// You can construct a concrete instance of `JSONGenericAPIMapInput` via:
//
//	JSONGenericAPIMap{ "key": JSONGenericAPIArgs{...} }
type JSONGenericAPIMapInput interface {
	pulumi.Input

	ToJSONGenericAPIMapOutput() JSONGenericAPIMapOutput
	ToJSONGenericAPIMapOutputWithContext(context.Context) JSONGenericAPIMapOutput
}

type JSONGenericAPIMap map[string]JSONGenericAPIInput

func (JSONGenericAPIMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JSONGenericAPI)(nil)).Elem()
}

func (i JSONGenericAPIMap) ToJSONGenericAPIMapOutput() JSONGenericAPIMapOutput {
	return i.ToJSONGenericAPIMapOutputWithContext(context.Background())
}

func (i JSONGenericAPIMap) ToJSONGenericAPIMapOutputWithContext(ctx context.Context) JSONGenericAPIMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONGenericAPIMapOutput)
}

type JSONGenericAPIOutput struct{ *pulumi.OutputState }

func (JSONGenericAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONGenericAPI)(nil)).Elem()
}

func (o JSONGenericAPIOutput) ToJSONGenericAPIOutput() JSONGenericAPIOutput {
	return o
}

func (o JSONGenericAPIOutput) ToJSONGenericAPIOutputWithContext(ctx context.Context) JSONGenericAPIOutput {
	return o
}

func (o JSONGenericAPIOutput) ForceRecreate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringPtrOutput { return v.ForceRecreate }).(pulumi.StringPtrOutput)
}

func (o JSONGenericAPIOutput) Json() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringPtrOutput { return v.Json }).(pulumi.StringPtrOutput)
}

func (o JSONGenericAPIOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

func (o JSONGenericAPIOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

func (o JSONGenericAPIOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringOutput { return v.Response }).(pulumi.StringOutput)
}

func (o JSONGenericAPIOutput) Specialparams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringPtrOutput { return v.Specialparams }).(pulumi.StringPtrOutput)
}

func (o JSONGenericAPIOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONGenericAPI) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type JSONGenericAPIArrayOutput struct{ *pulumi.OutputState }

func (JSONGenericAPIArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JSONGenericAPI)(nil)).Elem()
}

func (o JSONGenericAPIArrayOutput) ToJSONGenericAPIArrayOutput() JSONGenericAPIArrayOutput {
	return o
}

func (o JSONGenericAPIArrayOutput) ToJSONGenericAPIArrayOutputWithContext(ctx context.Context) JSONGenericAPIArrayOutput {
	return o
}

func (o JSONGenericAPIArrayOutput) Index(i pulumi.IntInput) JSONGenericAPIOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JSONGenericAPI {
		return vs[0].([]*JSONGenericAPI)[vs[1].(int)]
	}).(JSONGenericAPIOutput)
}

type JSONGenericAPIMapOutput struct{ *pulumi.OutputState }

func (JSONGenericAPIMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JSONGenericAPI)(nil)).Elem()
}

func (o JSONGenericAPIMapOutput) ToJSONGenericAPIMapOutput() JSONGenericAPIMapOutput {
	return o
}

func (o JSONGenericAPIMapOutput) ToJSONGenericAPIMapOutputWithContext(ctx context.Context) JSONGenericAPIMapOutput {
	return o
}

func (o JSONGenericAPIMapOutput) MapIndex(k pulumi.StringInput) JSONGenericAPIOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JSONGenericAPI {
		return vs[0].(map[string]*JSONGenericAPI)[vs[1].(string)]
	}).(JSONGenericAPIOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JSONGenericAPIInput)(nil)).Elem(), &JSONGenericAPI{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONGenericAPIArrayInput)(nil)).Elem(), JSONGenericAPIArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONGenericAPIMapInput)(nil)).Elem(), JSONGenericAPIMap{})
	pulumi.RegisterOutputType(JSONGenericAPIOutput{})
	pulumi.RegisterOutputType(JSONGenericAPIArrayOutput{})
	pulumi.RegisterOutputType(JSONGenericAPIMapOutput{})
}
