// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemLinkMonitor struct {
	pulumi.CustomResourceState

	AddrMode               pulumi.StringOutput                    `pulumi:"addrMode"`
	ClassId                pulumi.IntOutput                       `pulumi:"classId"`
	Diffservcode           pulumi.StringOutput                    `pulumi:"diffservcode"`
	DynamicSortSubtable    pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	FailWeight             pulumi.IntOutput                       `pulumi:"failWeight"`
	Failtime               pulumi.IntOutput                       `pulumi:"failtime"`
	GatewayIp              pulumi.StringOutput                    `pulumi:"gatewayIp"`
	GatewayIp6             pulumi.StringOutput                    `pulumi:"gatewayIp6"`
	HaPriority             pulumi.IntOutput                       `pulumi:"haPriority"`
	HttpAgent              pulumi.StringOutput                    `pulumi:"httpAgent"`
	HttpGet                pulumi.StringOutput                    `pulumi:"httpGet"`
	HttpMatch              pulumi.StringOutput                    `pulumi:"httpMatch"`
	Interval               pulumi.IntOutput                       `pulumi:"interval"`
	Name                   pulumi.StringOutput                    `pulumi:"name"`
	PacketSize             pulumi.IntOutput                       `pulumi:"packetSize"`
	Password               pulumi.StringPtrOutput                 `pulumi:"password"`
	Port                   pulumi.IntOutput                       `pulumi:"port"`
	ProbeCount             pulumi.IntOutput                       `pulumi:"probeCount"`
	ProbeTimeout           pulumi.IntOutput                       `pulumi:"probeTimeout"`
	Protocol               pulumi.StringOutput                    `pulumi:"protocol"`
	Recoverytime           pulumi.IntOutput                       `pulumi:"recoverytime"`
	Routes                 SystemLinkMonitorRouteArrayOutput      `pulumi:"routes"`
	SecurityMode           pulumi.StringOutput                    `pulumi:"securityMode"`
	ServerConfig           pulumi.StringOutput                    `pulumi:"serverConfig"`
	ServerLists            SystemLinkMonitorServerListArrayOutput `pulumi:"serverLists"`
	ServerType             pulumi.StringOutput                    `pulumi:"serverType"`
	Servers                SystemLinkMonitorServerArrayOutput     `pulumi:"servers"`
	ServiceDetection       pulumi.StringOutput                    `pulumi:"serviceDetection"`
	SourceIp               pulumi.StringOutput                    `pulumi:"sourceIp"`
	SourceIp6              pulumi.StringOutput                    `pulumi:"sourceIp6"`
	Srcintf                pulumi.StringOutput                    `pulumi:"srcintf"`
	Status                 pulumi.StringOutput                    `pulumi:"status"`
	UpdateCascadeInterface pulumi.StringOutput                    `pulumi:"updateCascadeInterface"`
	UpdatePolicyRoute      pulumi.StringOutput                    `pulumi:"updatePolicyRoute"`
	UpdateStaticRoute      pulumi.StringOutput                    `pulumi:"updateStaticRoute"`
	Vdomparam              pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewSystemLinkMonitor registers a new resource with the given unique name, arguments, and options.
func NewSystemLinkMonitor(ctx *pulumi.Context,
	name string, args *SystemLinkMonitorArgs, opts ...pulumi.ResourceOption) (*SystemLinkMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Servers == nil {
		return nil, errors.New("invalid value for required argument 'Servers'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemLinkMonitor
	err := ctx.RegisterResource("fortios:index/systemLinkMonitor:SystemLinkMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemLinkMonitor gets an existing SystemLinkMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemLinkMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemLinkMonitorState, opts ...pulumi.ResourceOption) (*SystemLinkMonitor, error) {
	var resource SystemLinkMonitor
	err := ctx.ReadResource("fortios:index/systemLinkMonitor:SystemLinkMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemLinkMonitor resources.
type systemLinkMonitorState struct {
	AddrMode               *string                       `pulumi:"addrMode"`
	ClassId                *int                          `pulumi:"classId"`
	Diffservcode           *string                       `pulumi:"diffservcode"`
	DynamicSortSubtable    *string                       `pulumi:"dynamicSortSubtable"`
	FailWeight             *int                          `pulumi:"failWeight"`
	Failtime               *int                          `pulumi:"failtime"`
	GatewayIp              *string                       `pulumi:"gatewayIp"`
	GatewayIp6             *string                       `pulumi:"gatewayIp6"`
	HaPriority             *int                          `pulumi:"haPriority"`
	HttpAgent              *string                       `pulumi:"httpAgent"`
	HttpGet                *string                       `pulumi:"httpGet"`
	HttpMatch              *string                       `pulumi:"httpMatch"`
	Interval               *int                          `pulumi:"interval"`
	Name                   *string                       `pulumi:"name"`
	PacketSize             *int                          `pulumi:"packetSize"`
	Password               *string                       `pulumi:"password"`
	Port                   *int                          `pulumi:"port"`
	ProbeCount             *int                          `pulumi:"probeCount"`
	ProbeTimeout           *int                          `pulumi:"probeTimeout"`
	Protocol               *string                       `pulumi:"protocol"`
	Recoverytime           *int                          `pulumi:"recoverytime"`
	Routes                 []SystemLinkMonitorRoute      `pulumi:"routes"`
	SecurityMode           *string                       `pulumi:"securityMode"`
	ServerConfig           *string                       `pulumi:"serverConfig"`
	ServerLists            []SystemLinkMonitorServerList `pulumi:"serverLists"`
	ServerType             *string                       `pulumi:"serverType"`
	Servers                []SystemLinkMonitorServer     `pulumi:"servers"`
	ServiceDetection       *string                       `pulumi:"serviceDetection"`
	SourceIp               *string                       `pulumi:"sourceIp"`
	SourceIp6              *string                       `pulumi:"sourceIp6"`
	Srcintf                *string                       `pulumi:"srcintf"`
	Status                 *string                       `pulumi:"status"`
	UpdateCascadeInterface *string                       `pulumi:"updateCascadeInterface"`
	UpdatePolicyRoute      *string                       `pulumi:"updatePolicyRoute"`
	UpdateStaticRoute      *string                       `pulumi:"updateStaticRoute"`
	Vdomparam              *string                       `pulumi:"vdomparam"`
}

type SystemLinkMonitorState struct {
	AddrMode               pulumi.StringPtrInput
	ClassId                pulumi.IntPtrInput
	Diffservcode           pulumi.StringPtrInput
	DynamicSortSubtable    pulumi.StringPtrInput
	FailWeight             pulumi.IntPtrInput
	Failtime               pulumi.IntPtrInput
	GatewayIp              pulumi.StringPtrInput
	GatewayIp6             pulumi.StringPtrInput
	HaPriority             pulumi.IntPtrInput
	HttpAgent              pulumi.StringPtrInput
	HttpGet                pulumi.StringPtrInput
	HttpMatch              pulumi.StringPtrInput
	Interval               pulumi.IntPtrInput
	Name                   pulumi.StringPtrInput
	PacketSize             pulumi.IntPtrInput
	Password               pulumi.StringPtrInput
	Port                   pulumi.IntPtrInput
	ProbeCount             pulumi.IntPtrInput
	ProbeTimeout           pulumi.IntPtrInput
	Protocol               pulumi.StringPtrInput
	Recoverytime           pulumi.IntPtrInput
	Routes                 SystemLinkMonitorRouteArrayInput
	SecurityMode           pulumi.StringPtrInput
	ServerConfig           pulumi.StringPtrInput
	ServerLists            SystemLinkMonitorServerListArrayInput
	ServerType             pulumi.StringPtrInput
	Servers                SystemLinkMonitorServerArrayInput
	ServiceDetection       pulumi.StringPtrInput
	SourceIp               pulumi.StringPtrInput
	SourceIp6              pulumi.StringPtrInput
	Srcintf                pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	UpdateCascadeInterface pulumi.StringPtrInput
	UpdatePolicyRoute      pulumi.StringPtrInput
	UpdateStaticRoute      pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemLinkMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemLinkMonitorState)(nil)).Elem()
}

type systemLinkMonitorArgs struct {
	AddrMode               *string                       `pulumi:"addrMode"`
	ClassId                *int                          `pulumi:"classId"`
	Diffservcode           *string                       `pulumi:"diffservcode"`
	DynamicSortSubtable    *string                       `pulumi:"dynamicSortSubtable"`
	FailWeight             *int                          `pulumi:"failWeight"`
	Failtime               *int                          `pulumi:"failtime"`
	GatewayIp              *string                       `pulumi:"gatewayIp"`
	GatewayIp6             *string                       `pulumi:"gatewayIp6"`
	HaPriority             *int                          `pulumi:"haPriority"`
	HttpAgent              *string                       `pulumi:"httpAgent"`
	HttpGet                *string                       `pulumi:"httpGet"`
	HttpMatch              *string                       `pulumi:"httpMatch"`
	Interval               *int                          `pulumi:"interval"`
	Name                   *string                       `pulumi:"name"`
	PacketSize             *int                          `pulumi:"packetSize"`
	Password               *string                       `pulumi:"password"`
	Port                   *int                          `pulumi:"port"`
	ProbeCount             *int                          `pulumi:"probeCount"`
	ProbeTimeout           *int                          `pulumi:"probeTimeout"`
	Protocol               *string                       `pulumi:"protocol"`
	Recoverytime           *int                          `pulumi:"recoverytime"`
	Routes                 []SystemLinkMonitorRoute      `pulumi:"routes"`
	SecurityMode           *string                       `pulumi:"securityMode"`
	ServerConfig           *string                       `pulumi:"serverConfig"`
	ServerLists            []SystemLinkMonitorServerList `pulumi:"serverLists"`
	ServerType             *string                       `pulumi:"serverType"`
	Servers                []SystemLinkMonitorServer     `pulumi:"servers"`
	ServiceDetection       *string                       `pulumi:"serviceDetection"`
	SourceIp               *string                       `pulumi:"sourceIp"`
	SourceIp6              *string                       `pulumi:"sourceIp6"`
	Srcintf                *string                       `pulumi:"srcintf"`
	Status                 *string                       `pulumi:"status"`
	UpdateCascadeInterface *string                       `pulumi:"updateCascadeInterface"`
	UpdatePolicyRoute      *string                       `pulumi:"updatePolicyRoute"`
	UpdateStaticRoute      *string                       `pulumi:"updateStaticRoute"`
	Vdomparam              *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemLinkMonitor resource.
type SystemLinkMonitorArgs struct {
	AddrMode               pulumi.StringPtrInput
	ClassId                pulumi.IntPtrInput
	Diffservcode           pulumi.StringPtrInput
	DynamicSortSubtable    pulumi.StringPtrInput
	FailWeight             pulumi.IntPtrInput
	Failtime               pulumi.IntPtrInput
	GatewayIp              pulumi.StringPtrInput
	GatewayIp6             pulumi.StringPtrInput
	HaPriority             pulumi.IntPtrInput
	HttpAgent              pulumi.StringPtrInput
	HttpGet                pulumi.StringPtrInput
	HttpMatch              pulumi.StringPtrInput
	Interval               pulumi.IntPtrInput
	Name                   pulumi.StringPtrInput
	PacketSize             pulumi.IntPtrInput
	Password               pulumi.StringPtrInput
	Port                   pulumi.IntPtrInput
	ProbeCount             pulumi.IntPtrInput
	ProbeTimeout           pulumi.IntPtrInput
	Protocol               pulumi.StringPtrInput
	Recoverytime           pulumi.IntPtrInput
	Routes                 SystemLinkMonitorRouteArrayInput
	SecurityMode           pulumi.StringPtrInput
	ServerConfig           pulumi.StringPtrInput
	ServerLists            SystemLinkMonitorServerListArrayInput
	ServerType             pulumi.StringPtrInput
	Servers                SystemLinkMonitorServerArrayInput
	ServiceDetection       pulumi.StringPtrInput
	SourceIp               pulumi.StringPtrInput
	SourceIp6              pulumi.StringPtrInput
	Srcintf                pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	UpdateCascadeInterface pulumi.StringPtrInput
	UpdatePolicyRoute      pulumi.StringPtrInput
	UpdateStaticRoute      pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemLinkMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemLinkMonitorArgs)(nil)).Elem()
}

type SystemLinkMonitorInput interface {
	pulumi.Input

	ToSystemLinkMonitorOutput() SystemLinkMonitorOutput
	ToSystemLinkMonitorOutputWithContext(ctx context.Context) SystemLinkMonitorOutput
}

func (*SystemLinkMonitor) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLinkMonitor)(nil)).Elem()
}

func (i *SystemLinkMonitor) ToSystemLinkMonitorOutput() SystemLinkMonitorOutput {
	return i.ToSystemLinkMonitorOutputWithContext(context.Background())
}

func (i *SystemLinkMonitor) ToSystemLinkMonitorOutputWithContext(ctx context.Context) SystemLinkMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorOutput)
}

// SystemLinkMonitorArrayInput is an input type that accepts SystemLinkMonitorArray and SystemLinkMonitorArrayOutput values.
// You can construct a concrete instance of `SystemLinkMonitorArrayInput` via:
//
//	SystemLinkMonitorArray{ SystemLinkMonitorArgs{...} }
type SystemLinkMonitorArrayInput interface {
	pulumi.Input

	ToSystemLinkMonitorArrayOutput() SystemLinkMonitorArrayOutput
	ToSystemLinkMonitorArrayOutputWithContext(context.Context) SystemLinkMonitorArrayOutput
}

type SystemLinkMonitorArray []SystemLinkMonitorInput

func (SystemLinkMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemLinkMonitor)(nil)).Elem()
}

func (i SystemLinkMonitorArray) ToSystemLinkMonitorArrayOutput() SystemLinkMonitorArrayOutput {
	return i.ToSystemLinkMonitorArrayOutputWithContext(context.Background())
}

func (i SystemLinkMonitorArray) ToSystemLinkMonitorArrayOutputWithContext(ctx context.Context) SystemLinkMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorArrayOutput)
}

// SystemLinkMonitorMapInput is an input type that accepts SystemLinkMonitorMap and SystemLinkMonitorMapOutput values.
// You can construct a concrete instance of `SystemLinkMonitorMapInput` via:
//
//	SystemLinkMonitorMap{ "key": SystemLinkMonitorArgs{...} }
type SystemLinkMonitorMapInput interface {
	pulumi.Input

	ToSystemLinkMonitorMapOutput() SystemLinkMonitorMapOutput
	ToSystemLinkMonitorMapOutputWithContext(context.Context) SystemLinkMonitorMapOutput
}

type SystemLinkMonitorMap map[string]SystemLinkMonitorInput

func (SystemLinkMonitorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemLinkMonitor)(nil)).Elem()
}

func (i SystemLinkMonitorMap) ToSystemLinkMonitorMapOutput() SystemLinkMonitorMapOutput {
	return i.ToSystemLinkMonitorMapOutputWithContext(context.Background())
}

func (i SystemLinkMonitorMap) ToSystemLinkMonitorMapOutputWithContext(ctx context.Context) SystemLinkMonitorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorMapOutput)
}

type SystemLinkMonitorOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLinkMonitor)(nil)).Elem()
}

func (o SystemLinkMonitorOutput) ToSystemLinkMonitorOutput() SystemLinkMonitorOutput {
	return o
}

func (o SystemLinkMonitorOutput) ToSystemLinkMonitorOutputWithContext(ctx context.Context) SystemLinkMonitorOutput {
	return o
}

func (o SystemLinkMonitorOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.AddrMode }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) ClassId() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.ClassId }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Diffservcode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.Diffservcode }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemLinkMonitorOutput) FailWeight() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.FailWeight }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Failtime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.Failtime }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) GatewayIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.GatewayIp6 }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) HaPriority() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.HaPriority }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) HttpAgent() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.HttpAgent }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) HttpGet() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.HttpGet }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) HttpMatch() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.HttpMatch }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.Interval }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) PacketSize() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.PacketSize }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemLinkMonitorOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) ProbeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.ProbeCount }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) ProbeTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.ProbeTimeout }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Recoverytime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.IntOutput { return v.Recoverytime }).(pulumi.IntOutput)
}

func (o SystemLinkMonitorOutput) Routes() SystemLinkMonitorRouteArrayOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) SystemLinkMonitorRouteArrayOutput { return v.Routes }).(SystemLinkMonitorRouteArrayOutput)
}

func (o SystemLinkMonitorOutput) SecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.SecurityMode }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) ServerConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.ServerConfig }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) ServerLists() SystemLinkMonitorServerListArrayOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) SystemLinkMonitorServerListArrayOutput { return v.ServerLists }).(SystemLinkMonitorServerListArrayOutput)
}

func (o SystemLinkMonitorOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.ServerType }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Servers() SystemLinkMonitorServerArrayOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) SystemLinkMonitorServerArrayOutput { return v.Servers }).(SystemLinkMonitorServerArrayOutput)
}

func (o SystemLinkMonitorOutput) ServiceDetection() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.ServiceDetection }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) SourceIp6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.SourceIp6 }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Srcintf() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.Srcintf }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) UpdateCascadeInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.UpdateCascadeInterface }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) UpdatePolicyRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.UpdatePolicyRoute }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) UpdateStaticRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringOutput { return v.UpdateStaticRoute }).(pulumi.StringOutput)
}

func (o SystemLinkMonitorOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLinkMonitor) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemLinkMonitorArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemLinkMonitor)(nil)).Elem()
}

func (o SystemLinkMonitorArrayOutput) ToSystemLinkMonitorArrayOutput() SystemLinkMonitorArrayOutput {
	return o
}

func (o SystemLinkMonitorArrayOutput) ToSystemLinkMonitorArrayOutputWithContext(ctx context.Context) SystemLinkMonitorArrayOutput {
	return o
}

func (o SystemLinkMonitorArrayOutput) Index(i pulumi.IntInput) SystemLinkMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemLinkMonitor {
		return vs[0].([]*SystemLinkMonitor)[vs[1].(int)]
	}).(SystemLinkMonitorOutput)
}

type SystemLinkMonitorMapOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemLinkMonitor)(nil)).Elem()
}

func (o SystemLinkMonitorMapOutput) ToSystemLinkMonitorMapOutput() SystemLinkMonitorMapOutput {
	return o
}

func (o SystemLinkMonitorMapOutput) ToSystemLinkMonitorMapOutputWithContext(ctx context.Context) SystemLinkMonitorMapOutput {
	return o
}

func (o SystemLinkMonitorMapOutput) MapIndex(k pulumi.StringInput) SystemLinkMonitorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemLinkMonitor {
		return vs[0].(map[string]*SystemLinkMonitor)[vs[1].(string)]
	}).(SystemLinkMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorInput)(nil)).Elem(), &SystemLinkMonitor{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorArrayInput)(nil)).Elem(), SystemLinkMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorMapInput)(nil)).Elem(), SystemLinkMonitorMap{})
	pulumi.RegisterOutputType(SystemLinkMonitorOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorMapOutput{})
}
