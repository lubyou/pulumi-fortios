// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallObjectAddress struct {
	pulumi.CustomResourceState

	AssociatedInterface  pulumi.StringOutput    `pulumi:"associatedInterface"`
	Comment              pulumi.StringPtrOutput `pulumi:"comment"`
	Country              pulumi.StringOutput    `pulumi:"country"`
	EndIp                pulumi.StringOutput    `pulumi:"endIp"`
	Fqdn                 pulumi.StringOutput    `pulumi:"fqdn"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	ShowInAddressList    pulumi.StringOutput    `pulumi:"showInAddressList"`
	StartIp              pulumi.StringOutput    `pulumi:"startIp"`
	StaticRouteConfigure pulumi.StringOutput    `pulumi:"staticRouteConfigure"`
	Subnet               pulumi.StringOutput    `pulumi:"subnet"`
	Type                 pulumi.StringOutput    `pulumi:"type"`
}

// NewFirewallObjectAddress registers a new resource with the given unique name, arguments, and options.
func NewFirewallObjectAddress(ctx *pulumi.Context,
	name string, args *FirewallObjectAddressArgs, opts ...pulumi.ResourceOption) (*FirewallObjectAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallObjectAddress
	err := ctx.RegisterResource("fortios:index/firewallObjectAddress:FirewallObjectAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallObjectAddress gets an existing FirewallObjectAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallObjectAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallObjectAddressState, opts ...pulumi.ResourceOption) (*FirewallObjectAddress, error) {
	var resource FirewallObjectAddress
	err := ctx.ReadResource("fortios:index/firewallObjectAddress:FirewallObjectAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallObjectAddress resources.
type firewallObjectAddressState struct {
	AssociatedInterface  *string `pulumi:"associatedInterface"`
	Comment              *string `pulumi:"comment"`
	Country              *string `pulumi:"country"`
	EndIp                *string `pulumi:"endIp"`
	Fqdn                 *string `pulumi:"fqdn"`
	Name                 *string `pulumi:"name"`
	ShowInAddressList    *string `pulumi:"showInAddressList"`
	StartIp              *string `pulumi:"startIp"`
	StaticRouteConfigure *string `pulumi:"staticRouteConfigure"`
	Subnet               *string `pulumi:"subnet"`
	Type                 *string `pulumi:"type"`
}

type FirewallObjectAddressState struct {
	AssociatedInterface  pulumi.StringPtrInput
	Comment              pulumi.StringPtrInput
	Country              pulumi.StringPtrInput
	EndIp                pulumi.StringPtrInput
	Fqdn                 pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	ShowInAddressList    pulumi.StringPtrInput
	StartIp              pulumi.StringPtrInput
	StaticRouteConfigure pulumi.StringPtrInput
	Subnet               pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (FirewallObjectAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectAddressState)(nil)).Elem()
}

type firewallObjectAddressArgs struct {
	AssociatedInterface  *string `pulumi:"associatedInterface"`
	Comment              *string `pulumi:"comment"`
	Country              *string `pulumi:"country"`
	EndIp                *string `pulumi:"endIp"`
	Fqdn                 *string `pulumi:"fqdn"`
	Name                 *string `pulumi:"name"`
	ShowInAddressList    *string `pulumi:"showInAddressList"`
	StartIp              *string `pulumi:"startIp"`
	StaticRouteConfigure *string `pulumi:"staticRouteConfigure"`
	Subnet               *string `pulumi:"subnet"`
	Type                 string  `pulumi:"type"`
}

// The set of arguments for constructing a FirewallObjectAddress resource.
type FirewallObjectAddressArgs struct {
	AssociatedInterface  pulumi.StringPtrInput
	Comment              pulumi.StringPtrInput
	Country              pulumi.StringPtrInput
	EndIp                pulumi.StringPtrInput
	Fqdn                 pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	ShowInAddressList    pulumi.StringPtrInput
	StartIp              pulumi.StringPtrInput
	StaticRouteConfigure pulumi.StringPtrInput
	Subnet               pulumi.StringPtrInput
	Type                 pulumi.StringInput
}

func (FirewallObjectAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectAddressArgs)(nil)).Elem()
}

type FirewallObjectAddressInput interface {
	pulumi.Input

	ToFirewallObjectAddressOutput() FirewallObjectAddressOutput
	ToFirewallObjectAddressOutputWithContext(ctx context.Context) FirewallObjectAddressOutput
}

func (*FirewallObjectAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectAddress)(nil)).Elem()
}

func (i *FirewallObjectAddress) ToFirewallObjectAddressOutput() FirewallObjectAddressOutput {
	return i.ToFirewallObjectAddressOutputWithContext(context.Background())
}

func (i *FirewallObjectAddress) ToFirewallObjectAddressOutputWithContext(ctx context.Context) FirewallObjectAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectAddressOutput)
}

func (i *FirewallObjectAddress) ToOutput(ctx context.Context) pulumix.Output[*FirewallObjectAddress] {
	return pulumix.Output[*FirewallObjectAddress]{
		OutputState: i.ToFirewallObjectAddressOutputWithContext(ctx).OutputState,
	}
}

// FirewallObjectAddressArrayInput is an input type that accepts FirewallObjectAddressArray and FirewallObjectAddressArrayOutput values.
// You can construct a concrete instance of `FirewallObjectAddressArrayInput` via:
//
//	FirewallObjectAddressArray{ FirewallObjectAddressArgs{...} }
type FirewallObjectAddressArrayInput interface {
	pulumi.Input

	ToFirewallObjectAddressArrayOutput() FirewallObjectAddressArrayOutput
	ToFirewallObjectAddressArrayOutputWithContext(context.Context) FirewallObjectAddressArrayOutput
}

type FirewallObjectAddressArray []FirewallObjectAddressInput

func (FirewallObjectAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectAddress)(nil)).Elem()
}

func (i FirewallObjectAddressArray) ToFirewallObjectAddressArrayOutput() FirewallObjectAddressArrayOutput {
	return i.ToFirewallObjectAddressArrayOutputWithContext(context.Background())
}

func (i FirewallObjectAddressArray) ToFirewallObjectAddressArrayOutputWithContext(ctx context.Context) FirewallObjectAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectAddressArrayOutput)
}

func (i FirewallObjectAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallObjectAddress] {
	return pulumix.Output[[]*FirewallObjectAddress]{
		OutputState: i.ToFirewallObjectAddressArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallObjectAddressMapInput is an input type that accepts FirewallObjectAddressMap and FirewallObjectAddressMapOutput values.
// You can construct a concrete instance of `FirewallObjectAddressMapInput` via:
//
//	FirewallObjectAddressMap{ "key": FirewallObjectAddressArgs{...} }
type FirewallObjectAddressMapInput interface {
	pulumi.Input

	ToFirewallObjectAddressMapOutput() FirewallObjectAddressMapOutput
	ToFirewallObjectAddressMapOutputWithContext(context.Context) FirewallObjectAddressMapOutput
}

type FirewallObjectAddressMap map[string]FirewallObjectAddressInput

func (FirewallObjectAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectAddress)(nil)).Elem()
}

func (i FirewallObjectAddressMap) ToFirewallObjectAddressMapOutput() FirewallObjectAddressMapOutput {
	return i.ToFirewallObjectAddressMapOutputWithContext(context.Background())
}

func (i FirewallObjectAddressMap) ToFirewallObjectAddressMapOutputWithContext(ctx context.Context) FirewallObjectAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectAddressMapOutput)
}

func (i FirewallObjectAddressMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallObjectAddress] {
	return pulumix.Output[map[string]*FirewallObjectAddress]{
		OutputState: i.ToFirewallObjectAddressMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallObjectAddressOutput struct{ *pulumi.OutputState }

func (FirewallObjectAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectAddress)(nil)).Elem()
}

func (o FirewallObjectAddressOutput) ToFirewallObjectAddressOutput() FirewallObjectAddressOutput {
	return o
}

func (o FirewallObjectAddressOutput) ToFirewallObjectAddressOutputWithContext(ctx context.Context) FirewallObjectAddressOutput {
	return o
}

func (o FirewallObjectAddressOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallObjectAddress] {
	return pulumix.Output[*FirewallObjectAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectAddressOutput) AssociatedInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.AssociatedInterface }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallObjectAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.Country }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.EndIp }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) ShowInAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.ShowInAddressList }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.StartIp }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) StaticRouteConfigure() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.StaticRouteConfigure }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.Subnet }).(pulumi.StringOutput)
}

func (o FirewallObjectAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectAddress) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type FirewallObjectAddressArrayOutput struct{ *pulumi.OutputState }

func (FirewallObjectAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectAddress)(nil)).Elem()
}

func (o FirewallObjectAddressArrayOutput) ToFirewallObjectAddressArrayOutput() FirewallObjectAddressArrayOutput {
	return o
}

func (o FirewallObjectAddressArrayOutput) ToFirewallObjectAddressArrayOutputWithContext(ctx context.Context) FirewallObjectAddressArrayOutput {
	return o
}

func (o FirewallObjectAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallObjectAddress] {
	return pulumix.Output[[]*FirewallObjectAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectAddressArrayOutput) Index(i pulumi.IntInput) FirewallObjectAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallObjectAddress {
		return vs[0].([]*FirewallObjectAddress)[vs[1].(int)]
	}).(FirewallObjectAddressOutput)
}

type FirewallObjectAddressMapOutput struct{ *pulumi.OutputState }

func (FirewallObjectAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectAddress)(nil)).Elem()
}

func (o FirewallObjectAddressMapOutput) ToFirewallObjectAddressMapOutput() FirewallObjectAddressMapOutput {
	return o
}

func (o FirewallObjectAddressMapOutput) ToFirewallObjectAddressMapOutputWithContext(ctx context.Context) FirewallObjectAddressMapOutput {
	return o
}

func (o FirewallObjectAddressMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallObjectAddress] {
	return pulumix.Output[map[string]*FirewallObjectAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectAddressMapOutput) MapIndex(k pulumi.StringInput) FirewallObjectAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallObjectAddress {
		return vs[0].(map[string]*FirewallObjectAddress)[vs[1].(string)]
	}).(FirewallObjectAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectAddressInput)(nil)).Elem(), &FirewallObjectAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectAddressArrayInput)(nil)).Elem(), FirewallObjectAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectAddressMapInput)(nil)).Elem(), FirewallObjectAddressMap{})
	pulumi.RegisterOutputType(FirewallObjectAddressOutput{})
	pulumi.RegisterOutputType(FirewallObjectAddressArrayOutput{})
	pulumi.RegisterOutputType(FirewallObjectAddressMapOutput{})
}
