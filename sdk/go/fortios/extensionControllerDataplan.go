// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExtensionControllerDataplan struct {
	pulumi.CustomResourceState

	Apn             pulumi.StringOutput    `pulumi:"apn"`
	AuthType        pulumi.StringOutput    `pulumi:"authType"`
	BillingDate     pulumi.IntOutput       `pulumi:"billingDate"`
	Capacity        pulumi.IntOutput       `pulumi:"capacity"`
	Carrier         pulumi.StringOutput    `pulumi:"carrier"`
	Iccid           pulumi.StringOutput    `pulumi:"iccid"`
	ModemId         pulumi.StringOutput    `pulumi:"modemId"`
	MonthlyFee      pulumi.IntOutput       `pulumi:"monthlyFee"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	Overage         pulumi.StringOutput    `pulumi:"overage"`
	Password        pulumi.StringPtrOutput `pulumi:"password"`
	Pdn             pulumi.StringOutput    `pulumi:"pdn"`
	PreferredSubnet pulumi.IntOutput       `pulumi:"preferredSubnet"`
	PrivateNetwork  pulumi.StringOutput    `pulumi:"privateNetwork"`
	SignalPeriod    pulumi.IntOutput       `pulumi:"signalPeriod"`
	SignalThreshold pulumi.IntOutput       `pulumi:"signalThreshold"`
	Slot            pulumi.StringOutput    `pulumi:"slot"`
	Type            pulumi.StringOutput    `pulumi:"type"`
	Username        pulumi.StringOutput    `pulumi:"username"`
	Vdomparam       pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewExtensionControllerDataplan registers a new resource with the given unique name, arguments, and options.
func NewExtensionControllerDataplan(ctx *pulumi.Context,
	name string, args *ExtensionControllerDataplanArgs, opts ...pulumi.ResourceOption) (*ExtensionControllerDataplan, error) {
	if args == nil {
		args = &ExtensionControllerDataplanArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExtensionControllerDataplan
	err := ctx.RegisterResource("fortios:index/extensionControllerDataplan:ExtensionControllerDataplan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtensionControllerDataplan gets an existing ExtensionControllerDataplan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtensionControllerDataplan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensionControllerDataplanState, opts ...pulumi.ResourceOption) (*ExtensionControllerDataplan, error) {
	var resource ExtensionControllerDataplan
	err := ctx.ReadResource("fortios:index/extensionControllerDataplan:ExtensionControllerDataplan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtensionControllerDataplan resources.
type extensionControllerDataplanState struct {
	Apn             *string `pulumi:"apn"`
	AuthType        *string `pulumi:"authType"`
	BillingDate     *int    `pulumi:"billingDate"`
	Capacity        *int    `pulumi:"capacity"`
	Carrier         *string `pulumi:"carrier"`
	Iccid           *string `pulumi:"iccid"`
	ModemId         *string `pulumi:"modemId"`
	MonthlyFee      *int    `pulumi:"monthlyFee"`
	Name            *string `pulumi:"name"`
	Overage         *string `pulumi:"overage"`
	Password        *string `pulumi:"password"`
	Pdn             *string `pulumi:"pdn"`
	PreferredSubnet *int    `pulumi:"preferredSubnet"`
	PrivateNetwork  *string `pulumi:"privateNetwork"`
	SignalPeriod    *int    `pulumi:"signalPeriod"`
	SignalThreshold *int    `pulumi:"signalThreshold"`
	Slot            *string `pulumi:"slot"`
	Type            *string `pulumi:"type"`
	Username        *string `pulumi:"username"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

type ExtensionControllerDataplanState struct {
	Apn             pulumi.StringPtrInput
	AuthType        pulumi.StringPtrInput
	BillingDate     pulumi.IntPtrInput
	Capacity        pulumi.IntPtrInput
	Carrier         pulumi.StringPtrInput
	Iccid           pulumi.StringPtrInput
	ModemId         pulumi.StringPtrInput
	MonthlyFee      pulumi.IntPtrInput
	Name            pulumi.StringPtrInput
	Overage         pulumi.StringPtrInput
	Password        pulumi.StringPtrInput
	Pdn             pulumi.StringPtrInput
	PreferredSubnet pulumi.IntPtrInput
	PrivateNetwork  pulumi.StringPtrInput
	SignalPeriod    pulumi.IntPtrInput
	SignalThreshold pulumi.IntPtrInput
	Slot            pulumi.StringPtrInput
	Type            pulumi.StringPtrInput
	Username        pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (ExtensionControllerDataplanState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionControllerDataplanState)(nil)).Elem()
}

type extensionControllerDataplanArgs struct {
	Apn             *string `pulumi:"apn"`
	AuthType        *string `pulumi:"authType"`
	BillingDate     *int    `pulumi:"billingDate"`
	Capacity        *int    `pulumi:"capacity"`
	Carrier         *string `pulumi:"carrier"`
	Iccid           *string `pulumi:"iccid"`
	ModemId         *string `pulumi:"modemId"`
	MonthlyFee      *int    `pulumi:"monthlyFee"`
	Name            *string `pulumi:"name"`
	Overage         *string `pulumi:"overage"`
	Password        *string `pulumi:"password"`
	Pdn             *string `pulumi:"pdn"`
	PreferredSubnet *int    `pulumi:"preferredSubnet"`
	PrivateNetwork  *string `pulumi:"privateNetwork"`
	SignalPeriod    *int    `pulumi:"signalPeriod"`
	SignalThreshold *int    `pulumi:"signalThreshold"`
	Slot            *string `pulumi:"slot"`
	Type            *string `pulumi:"type"`
	Username        *string `pulumi:"username"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ExtensionControllerDataplan resource.
type ExtensionControllerDataplanArgs struct {
	Apn             pulumi.StringPtrInput
	AuthType        pulumi.StringPtrInput
	BillingDate     pulumi.IntPtrInput
	Capacity        pulumi.IntPtrInput
	Carrier         pulumi.StringPtrInput
	Iccid           pulumi.StringPtrInput
	ModemId         pulumi.StringPtrInput
	MonthlyFee      pulumi.IntPtrInput
	Name            pulumi.StringPtrInput
	Overage         pulumi.StringPtrInput
	Password        pulumi.StringPtrInput
	Pdn             pulumi.StringPtrInput
	PreferredSubnet pulumi.IntPtrInput
	PrivateNetwork  pulumi.StringPtrInput
	SignalPeriod    pulumi.IntPtrInput
	SignalThreshold pulumi.IntPtrInput
	Slot            pulumi.StringPtrInput
	Type            pulumi.StringPtrInput
	Username        pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (ExtensionControllerDataplanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionControllerDataplanArgs)(nil)).Elem()
}

type ExtensionControllerDataplanInput interface {
	pulumi.Input

	ToExtensionControllerDataplanOutput() ExtensionControllerDataplanOutput
	ToExtensionControllerDataplanOutputWithContext(ctx context.Context) ExtensionControllerDataplanOutput
}

func (*ExtensionControllerDataplan) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionControllerDataplan)(nil)).Elem()
}

func (i *ExtensionControllerDataplan) ToExtensionControllerDataplanOutput() ExtensionControllerDataplanOutput {
	return i.ToExtensionControllerDataplanOutputWithContext(context.Background())
}

func (i *ExtensionControllerDataplan) ToExtensionControllerDataplanOutputWithContext(ctx context.Context) ExtensionControllerDataplanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerDataplanOutput)
}

// ExtensionControllerDataplanArrayInput is an input type that accepts ExtensionControllerDataplanArray and ExtensionControllerDataplanArrayOutput values.
// You can construct a concrete instance of `ExtensionControllerDataplanArrayInput` via:
//
//	ExtensionControllerDataplanArray{ ExtensionControllerDataplanArgs{...} }
type ExtensionControllerDataplanArrayInput interface {
	pulumi.Input

	ToExtensionControllerDataplanArrayOutput() ExtensionControllerDataplanArrayOutput
	ToExtensionControllerDataplanArrayOutputWithContext(context.Context) ExtensionControllerDataplanArrayOutput
}

type ExtensionControllerDataplanArray []ExtensionControllerDataplanInput

func (ExtensionControllerDataplanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensionControllerDataplan)(nil)).Elem()
}

func (i ExtensionControllerDataplanArray) ToExtensionControllerDataplanArrayOutput() ExtensionControllerDataplanArrayOutput {
	return i.ToExtensionControllerDataplanArrayOutputWithContext(context.Background())
}

func (i ExtensionControllerDataplanArray) ToExtensionControllerDataplanArrayOutputWithContext(ctx context.Context) ExtensionControllerDataplanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerDataplanArrayOutput)
}

// ExtensionControllerDataplanMapInput is an input type that accepts ExtensionControllerDataplanMap and ExtensionControllerDataplanMapOutput values.
// You can construct a concrete instance of `ExtensionControllerDataplanMapInput` via:
//
//	ExtensionControllerDataplanMap{ "key": ExtensionControllerDataplanArgs{...} }
type ExtensionControllerDataplanMapInput interface {
	pulumi.Input

	ToExtensionControllerDataplanMapOutput() ExtensionControllerDataplanMapOutput
	ToExtensionControllerDataplanMapOutputWithContext(context.Context) ExtensionControllerDataplanMapOutput
}

type ExtensionControllerDataplanMap map[string]ExtensionControllerDataplanInput

func (ExtensionControllerDataplanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensionControllerDataplan)(nil)).Elem()
}

func (i ExtensionControllerDataplanMap) ToExtensionControllerDataplanMapOutput() ExtensionControllerDataplanMapOutput {
	return i.ToExtensionControllerDataplanMapOutputWithContext(context.Background())
}

func (i ExtensionControllerDataplanMap) ToExtensionControllerDataplanMapOutputWithContext(ctx context.Context) ExtensionControllerDataplanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionControllerDataplanMapOutput)
}

type ExtensionControllerDataplanOutput struct{ *pulumi.OutputState }

func (ExtensionControllerDataplanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionControllerDataplan)(nil)).Elem()
}

func (o ExtensionControllerDataplanOutput) ToExtensionControllerDataplanOutput() ExtensionControllerDataplanOutput {
	return o
}

func (o ExtensionControllerDataplanOutput) ToExtensionControllerDataplanOutputWithContext(ctx context.Context) ExtensionControllerDataplanOutput {
	return o
}

func (o ExtensionControllerDataplanOutput) Apn() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Apn }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.AuthType }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) BillingDate() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.BillingDate }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.Capacity }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) Carrier() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Carrier }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Iccid() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Iccid }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) ModemId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.ModemId }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) MonthlyFee() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.MonthlyFee }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Overage() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Overage }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ExtensionControllerDataplanOutput) Pdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Pdn }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) PreferredSubnet() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.PreferredSubnet }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) PrivateNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.PrivateNetwork }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) SignalPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.SignalPeriod }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) SignalThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.IntOutput { return v.SignalThreshold }).(pulumi.IntOutput)
}

func (o ExtensionControllerDataplanOutput) Slot() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Slot }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

func (o ExtensionControllerDataplanOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionControllerDataplan) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ExtensionControllerDataplanArrayOutput struct{ *pulumi.OutputState }

func (ExtensionControllerDataplanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtensionControllerDataplan)(nil)).Elem()
}

func (o ExtensionControllerDataplanArrayOutput) ToExtensionControllerDataplanArrayOutput() ExtensionControllerDataplanArrayOutput {
	return o
}

func (o ExtensionControllerDataplanArrayOutput) ToExtensionControllerDataplanArrayOutputWithContext(ctx context.Context) ExtensionControllerDataplanArrayOutput {
	return o
}

func (o ExtensionControllerDataplanArrayOutput) Index(i pulumi.IntInput) ExtensionControllerDataplanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtensionControllerDataplan {
		return vs[0].([]*ExtensionControllerDataplan)[vs[1].(int)]
	}).(ExtensionControllerDataplanOutput)
}

type ExtensionControllerDataplanMapOutput struct{ *pulumi.OutputState }

func (ExtensionControllerDataplanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtensionControllerDataplan)(nil)).Elem()
}

func (o ExtensionControllerDataplanMapOutput) ToExtensionControllerDataplanMapOutput() ExtensionControllerDataplanMapOutput {
	return o
}

func (o ExtensionControllerDataplanMapOutput) ToExtensionControllerDataplanMapOutputWithContext(ctx context.Context) ExtensionControllerDataplanMapOutput {
	return o
}

func (o ExtensionControllerDataplanMapOutput) MapIndex(k pulumi.StringInput) ExtensionControllerDataplanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtensionControllerDataplan {
		return vs[0].(map[string]*ExtensionControllerDataplan)[vs[1].(string)]
	}).(ExtensionControllerDataplanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerDataplanInput)(nil)).Elem(), &ExtensionControllerDataplan{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerDataplanArrayInput)(nil)).Elem(), ExtensionControllerDataplanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionControllerDataplanMapInput)(nil)).Elem(), ExtensionControllerDataplanMap{})
	pulumi.RegisterOutputType(ExtensionControllerDataplanOutput{})
	pulumi.RegisterOutputType(ExtensionControllerDataplanArrayOutput{})
	pulumi.RegisterOutputType(ExtensionControllerDataplanMapOutput{})
}
