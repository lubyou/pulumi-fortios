// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemGeoipOverride struct {
	pulumi.CustomResourceState

	CountryId           pulumi.StringOutput                    `pulumi:"countryId"`
	Description         pulumi.StringOutput                    `pulumi:"description"`
	DynamicSortSubtable pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                 `pulumi:"getAllTables"`
	Ip6Ranges           SystemGeoipOverrideIp6RangeArrayOutput `pulumi:"ip6Ranges"`
	IpRanges            SystemGeoipOverrideIpRangeArrayOutput  `pulumi:"ipRanges"`
	Name                pulumi.StringOutput                    `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
}

// NewSystemGeoipOverride registers a new resource with the given unique name, arguments, and options.
func NewSystemGeoipOverride(ctx *pulumi.Context,
	name string, args *SystemGeoipOverrideArgs, opts ...pulumi.ResourceOption) (*SystemGeoipOverride, error) {
	if args == nil {
		args = &SystemGeoipOverrideArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemGeoipOverride
	err := ctx.RegisterResource("fortios:index/systemGeoipOverride:SystemGeoipOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemGeoipOverride gets an existing SystemGeoipOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemGeoipOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemGeoipOverrideState, opts ...pulumi.ResourceOption) (*SystemGeoipOverride, error) {
	var resource SystemGeoipOverride
	err := ctx.ReadResource("fortios:index/systemGeoipOverride:SystemGeoipOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemGeoipOverride resources.
type systemGeoipOverrideState struct {
	CountryId           *string                       `pulumi:"countryId"`
	Description         *string                       `pulumi:"description"`
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                       `pulumi:"getAllTables"`
	Ip6Ranges           []SystemGeoipOverrideIp6Range `pulumi:"ip6Ranges"`
	IpRanges            []SystemGeoipOverrideIpRange  `pulumi:"ipRanges"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
}

type SystemGeoipOverrideState struct {
	CountryId           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Ip6Ranges           SystemGeoipOverrideIp6RangeArrayInput
	IpRanges            SystemGeoipOverrideIpRangeArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemGeoipOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGeoipOverrideState)(nil)).Elem()
}

type systemGeoipOverrideArgs struct {
	CountryId           *string                       `pulumi:"countryId"`
	Description         *string                       `pulumi:"description"`
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                       `pulumi:"getAllTables"`
	Ip6Ranges           []SystemGeoipOverrideIp6Range `pulumi:"ip6Ranges"`
	IpRanges            []SystemGeoipOverrideIpRange  `pulumi:"ipRanges"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemGeoipOverride resource.
type SystemGeoipOverrideArgs struct {
	CountryId           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Ip6Ranges           SystemGeoipOverrideIp6RangeArrayInput
	IpRanges            SystemGeoipOverrideIpRangeArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemGeoipOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemGeoipOverrideArgs)(nil)).Elem()
}

type SystemGeoipOverrideInput interface {
	pulumi.Input

	ToSystemGeoipOverrideOutput() SystemGeoipOverrideOutput
	ToSystemGeoipOverrideOutputWithContext(ctx context.Context) SystemGeoipOverrideOutput
}

func (*SystemGeoipOverride) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGeoipOverride)(nil)).Elem()
}

func (i *SystemGeoipOverride) ToSystemGeoipOverrideOutput() SystemGeoipOverrideOutput {
	return i.ToSystemGeoipOverrideOutputWithContext(context.Background())
}

func (i *SystemGeoipOverride) ToSystemGeoipOverrideOutputWithContext(ctx context.Context) SystemGeoipOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideOutput)
}

// SystemGeoipOverrideArrayInput is an input type that accepts SystemGeoipOverrideArray and SystemGeoipOverrideArrayOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideArrayInput` via:
//
//	SystemGeoipOverrideArray{ SystemGeoipOverrideArgs{...} }
type SystemGeoipOverrideArrayInput interface {
	pulumi.Input

	ToSystemGeoipOverrideArrayOutput() SystemGeoipOverrideArrayOutput
	ToSystemGeoipOverrideArrayOutputWithContext(context.Context) SystemGeoipOverrideArrayOutput
}

type SystemGeoipOverrideArray []SystemGeoipOverrideInput

func (SystemGeoipOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGeoipOverride)(nil)).Elem()
}

func (i SystemGeoipOverrideArray) ToSystemGeoipOverrideArrayOutput() SystemGeoipOverrideArrayOutput {
	return i.ToSystemGeoipOverrideArrayOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideArray) ToSystemGeoipOverrideArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideArrayOutput)
}

// SystemGeoipOverrideMapInput is an input type that accepts SystemGeoipOverrideMap and SystemGeoipOverrideMapOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideMapInput` via:
//
//	SystemGeoipOverrideMap{ "key": SystemGeoipOverrideArgs{...} }
type SystemGeoipOverrideMapInput interface {
	pulumi.Input

	ToSystemGeoipOverrideMapOutput() SystemGeoipOverrideMapOutput
	ToSystemGeoipOverrideMapOutputWithContext(context.Context) SystemGeoipOverrideMapOutput
}

type SystemGeoipOverrideMap map[string]SystemGeoipOverrideInput

func (SystemGeoipOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGeoipOverride)(nil)).Elem()
}

func (i SystemGeoipOverrideMap) ToSystemGeoipOverrideMapOutput() SystemGeoipOverrideMapOutput {
	return i.ToSystemGeoipOverrideMapOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideMap) ToSystemGeoipOverrideMapOutputWithContext(ctx context.Context) SystemGeoipOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideMapOutput)
}

type SystemGeoipOverrideOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemGeoipOverride)(nil)).Elem()
}

func (o SystemGeoipOverrideOutput) ToSystemGeoipOverrideOutput() SystemGeoipOverrideOutput {
	return o
}

func (o SystemGeoipOverrideOutput) ToSystemGeoipOverrideOutputWithContext(ctx context.Context) SystemGeoipOverrideOutput {
	return o
}

func (o SystemGeoipOverrideOutput) CountryId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringOutput { return v.CountryId }).(pulumi.StringOutput)
}

func (o SystemGeoipOverrideOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SystemGeoipOverrideOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemGeoipOverrideOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemGeoipOverrideOutput) Ip6Ranges() SystemGeoipOverrideIp6RangeArrayOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) SystemGeoipOverrideIp6RangeArrayOutput { return v.Ip6Ranges }).(SystemGeoipOverrideIp6RangeArrayOutput)
}

func (o SystemGeoipOverrideOutput) IpRanges() SystemGeoipOverrideIpRangeArrayOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) SystemGeoipOverrideIpRangeArrayOutput { return v.IpRanges }).(SystemGeoipOverrideIpRangeArrayOutput)
}

func (o SystemGeoipOverrideOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemGeoipOverrideOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemGeoipOverride) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemGeoipOverrideArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemGeoipOverride)(nil)).Elem()
}

func (o SystemGeoipOverrideArrayOutput) ToSystemGeoipOverrideArrayOutput() SystemGeoipOverrideArrayOutput {
	return o
}

func (o SystemGeoipOverrideArrayOutput) ToSystemGeoipOverrideArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideArrayOutput {
	return o
}

func (o SystemGeoipOverrideArrayOutput) Index(i pulumi.IntInput) SystemGeoipOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemGeoipOverride {
		return vs[0].([]*SystemGeoipOverride)[vs[1].(int)]
	}).(SystemGeoipOverrideOutput)
}

type SystemGeoipOverrideMapOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemGeoipOverride)(nil)).Elem()
}

func (o SystemGeoipOverrideMapOutput) ToSystemGeoipOverrideMapOutput() SystemGeoipOverrideMapOutput {
	return o
}

func (o SystemGeoipOverrideMapOutput) ToSystemGeoipOverrideMapOutputWithContext(ctx context.Context) SystemGeoipOverrideMapOutput {
	return o
}

func (o SystemGeoipOverrideMapOutput) MapIndex(k pulumi.StringInput) SystemGeoipOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemGeoipOverride {
		return vs[0].(map[string]*SystemGeoipOverride)[vs[1].(string)]
	}).(SystemGeoipOverrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideInput)(nil)).Elem(), &SystemGeoipOverride{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideArrayInput)(nil)).Elem(), SystemGeoipOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideMapInput)(nil)).Elem(), SystemGeoipOverrideMap{})
	pulumi.RegisterOutputType(SystemGeoipOverrideOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideMapOutput{})
}
