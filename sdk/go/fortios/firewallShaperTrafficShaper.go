// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure shared traffic shaper.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallShaperTrafficShaper(ctx, "trname", &fortios.FirewallShaperTrafficShaperArgs{
// 			BandwidthUnit:       pulumi.String("kbps"),
// 			Diffserv:            pulumi.String("disable"),
// 			Diffservcode:        pulumi.String("000000"),
// 			GuaranteedBandwidth: pulumi.Int(0),
// 			MaximumBandwidth:    pulumi.Int(1024),
// 			PerPolicy:           pulumi.String("disable"),
// 			Priority:            pulumi.String("low"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// FirewallShaper TrafficShaper can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallShaperTrafficShaper struct {
	pulumi.CustomResourceState

	// Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringOutput `pulumi:"bandwidthUnit"`
	// Enable/disable changing the DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	Diffserv pulumi.StringOutput `pulumi:"diffserv"`
	// DiffServ setting to be applied to traffic accepted by this shaper.
	Diffservcode pulumi.StringOutput `pulumi:"diffservcode"`
	// Select DSCP marking method. Valid values: `multi-stage`, `static`.
	DscpMarkingMethod pulumi.StringOutput `pulumi:"dscpMarkingMethod"`
	// Exceed bandwidth used for DSCP multi-stage marking. Units depend on the bandwidth-unit setting.
	ExceedBandwidth pulumi.IntOutput `pulumi:"exceedBandwidth"`
	// Class ID for traffic in [guaranteed-bandwidth, maximum-bandwidth].
	ExceedClassId pulumi.IntOutput `pulumi:"exceedClassId"`
	// DSCP mark for traffic in [guaranteed-bandwidth, exceed-bandwidth].
	ExceedDscp pulumi.StringOutput `pulumi:"exceedDscp"`
	// Amount of bandwidth guaranteed for this shaper (0 - 16776000). Units depend on the bandwidth-unit setting.
	GuaranteedBandwidth pulumi.IntOutput `pulumi:"guaranteedBandwidth"`
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaximumBandwidth pulumi.IntOutput `pulumi:"maximumBandwidth"`
	// DSCP mark for traffic in [exceed-bandwidth, maximum-bandwidth].
	MaximumDscp pulumi.StringOutput `pulumi:"maximumDscp"`
	// Traffic shaper name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Per-packet size overhead used in rate computations.
	Overhead pulumi.IntOutput `pulumi:"overhead"`
	// Enable/disable applying a separate shaper for each policy. For example, if enabled the guaranteed bandwidth is applied separately for each policy. Valid values: `disable`, `enable`.
	PerPolicy pulumi.StringOutput `pulumi:"perPolicy"`
	// Higher priority traffic is more likely to be forwarded without delays and without compromising the guaranteed bandwidth. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringOutput `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallShaperTrafficShaper registers a new resource with the given unique name, arguments, and options.
func NewFirewallShaperTrafficShaper(ctx *pulumi.Context,
	name string, args *FirewallShaperTrafficShaperArgs, opts ...pulumi.ResourceOption) (*FirewallShaperTrafficShaper, error) {
	if args == nil {
		args = &FirewallShaperTrafficShaperArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallShaperTrafficShaper
	err := ctx.RegisterResource("fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallShaperTrafficShaper gets an existing FirewallShaperTrafficShaper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallShaperTrafficShaper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallShaperTrafficShaperState, opts ...pulumi.ResourceOption) (*FirewallShaperTrafficShaper, error) {
	var resource FirewallShaperTrafficShaper
	err := ctx.ReadResource("fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallShaperTrafficShaper resources.
type firewallShaperTrafficShaperState struct {
	// Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit *string `pulumi:"bandwidthUnit"`
	// Enable/disable changing the DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	Diffserv *string `pulumi:"diffserv"`
	// DiffServ setting to be applied to traffic accepted by this shaper.
	Diffservcode *string `pulumi:"diffservcode"`
	// Select DSCP marking method. Valid values: `multi-stage`, `static`.
	DscpMarkingMethod *string `pulumi:"dscpMarkingMethod"`
	// Exceed bandwidth used for DSCP multi-stage marking. Units depend on the bandwidth-unit setting.
	ExceedBandwidth *int `pulumi:"exceedBandwidth"`
	// Class ID for traffic in [guaranteed-bandwidth, maximum-bandwidth].
	ExceedClassId *int `pulumi:"exceedClassId"`
	// DSCP mark for traffic in [guaranteed-bandwidth, exceed-bandwidth].
	ExceedDscp *string `pulumi:"exceedDscp"`
	// Amount of bandwidth guaranteed for this shaper (0 - 16776000). Units depend on the bandwidth-unit setting.
	GuaranteedBandwidth *int `pulumi:"guaranteedBandwidth"`
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaximumBandwidth *int `pulumi:"maximumBandwidth"`
	// DSCP mark for traffic in [exceed-bandwidth, maximum-bandwidth].
	MaximumDscp *string `pulumi:"maximumDscp"`
	// Traffic shaper name.
	Name *string `pulumi:"name"`
	// Per-packet size overhead used in rate computations.
	Overhead *int `pulumi:"overhead"`
	// Enable/disable applying a separate shaper for each policy. For example, if enabled the guaranteed bandwidth is applied separately for each policy. Valid values: `disable`, `enable`.
	PerPolicy *string `pulumi:"perPolicy"`
	// Higher priority traffic is more likely to be forwarded without delays and without compromising the guaranteed bandwidth. Valid values: `low`, `medium`, `high`.
	Priority *string `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallShaperTrafficShaperState struct {
	// Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringPtrInput
	// Enable/disable changing the DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	Diffserv pulumi.StringPtrInput
	// DiffServ setting to be applied to traffic accepted by this shaper.
	Diffservcode pulumi.StringPtrInput
	// Select DSCP marking method. Valid values: `multi-stage`, `static`.
	DscpMarkingMethod pulumi.StringPtrInput
	// Exceed bandwidth used for DSCP multi-stage marking. Units depend on the bandwidth-unit setting.
	ExceedBandwidth pulumi.IntPtrInput
	// Class ID for traffic in [guaranteed-bandwidth, maximum-bandwidth].
	ExceedClassId pulumi.IntPtrInput
	// DSCP mark for traffic in [guaranteed-bandwidth, exceed-bandwidth].
	ExceedDscp pulumi.StringPtrInput
	// Amount of bandwidth guaranteed for this shaper (0 - 16776000). Units depend on the bandwidth-unit setting.
	GuaranteedBandwidth pulumi.IntPtrInput
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaximumBandwidth pulumi.IntPtrInput
	// DSCP mark for traffic in [exceed-bandwidth, maximum-bandwidth].
	MaximumDscp pulumi.StringPtrInput
	// Traffic shaper name.
	Name pulumi.StringPtrInput
	// Per-packet size overhead used in rate computations.
	Overhead pulumi.IntPtrInput
	// Enable/disable applying a separate shaper for each policy. For example, if enabled the guaranteed bandwidth is applied separately for each policy. Valid values: `disable`, `enable`.
	PerPolicy pulumi.StringPtrInput
	// Higher priority traffic is more likely to be forwarded without delays and without compromising the guaranteed bandwidth. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallShaperTrafficShaperState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallShaperTrafficShaperState)(nil)).Elem()
}

type firewallShaperTrafficShaperArgs struct {
	// Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit *string `pulumi:"bandwidthUnit"`
	// Enable/disable changing the DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	Diffserv *string `pulumi:"diffserv"`
	// DiffServ setting to be applied to traffic accepted by this shaper.
	Diffservcode *string `pulumi:"diffservcode"`
	// Select DSCP marking method. Valid values: `multi-stage`, `static`.
	DscpMarkingMethod *string `pulumi:"dscpMarkingMethod"`
	// Exceed bandwidth used for DSCP multi-stage marking. Units depend on the bandwidth-unit setting.
	ExceedBandwidth *int `pulumi:"exceedBandwidth"`
	// Class ID for traffic in [guaranteed-bandwidth, maximum-bandwidth].
	ExceedClassId *int `pulumi:"exceedClassId"`
	// DSCP mark for traffic in [guaranteed-bandwidth, exceed-bandwidth].
	ExceedDscp *string `pulumi:"exceedDscp"`
	// Amount of bandwidth guaranteed for this shaper (0 - 16776000). Units depend on the bandwidth-unit setting.
	GuaranteedBandwidth *int `pulumi:"guaranteedBandwidth"`
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaximumBandwidth *int `pulumi:"maximumBandwidth"`
	// DSCP mark for traffic in [exceed-bandwidth, maximum-bandwidth].
	MaximumDscp *string `pulumi:"maximumDscp"`
	// Traffic shaper name.
	Name *string `pulumi:"name"`
	// Per-packet size overhead used in rate computations.
	Overhead *int `pulumi:"overhead"`
	// Enable/disable applying a separate shaper for each policy. For example, if enabled the guaranteed bandwidth is applied separately for each policy. Valid values: `disable`, `enable`.
	PerPolicy *string `pulumi:"perPolicy"`
	// Higher priority traffic is more likely to be forwarded without delays and without compromising the guaranteed bandwidth. Valid values: `low`, `medium`, `high`.
	Priority *string `pulumi:"priority"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallShaperTrafficShaper resource.
type FirewallShaperTrafficShaperArgs struct {
	// Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps). Valid values: `kbps`, `mbps`, `gbps`.
	BandwidthUnit pulumi.StringPtrInput
	// Enable/disable changing the DiffServ setting applied to traffic accepted by this shaper. Valid values: `enable`, `disable`.
	Diffserv pulumi.StringPtrInput
	// DiffServ setting to be applied to traffic accepted by this shaper.
	Diffservcode pulumi.StringPtrInput
	// Select DSCP marking method. Valid values: `multi-stage`, `static`.
	DscpMarkingMethod pulumi.StringPtrInput
	// Exceed bandwidth used for DSCP multi-stage marking. Units depend on the bandwidth-unit setting.
	ExceedBandwidth pulumi.IntPtrInput
	// Class ID for traffic in [guaranteed-bandwidth, maximum-bandwidth].
	ExceedClassId pulumi.IntPtrInput
	// DSCP mark for traffic in [guaranteed-bandwidth, exceed-bandwidth].
	ExceedDscp pulumi.StringPtrInput
	// Amount of bandwidth guaranteed for this shaper (0 - 16776000). Units depend on the bandwidth-unit setting.
	GuaranteedBandwidth pulumi.IntPtrInput
	// Upper bandwidth limit enforced by this shaper (0 - 16776000). 0 means no limit. Units depend on the bandwidth-unit setting.
	MaximumBandwidth pulumi.IntPtrInput
	// DSCP mark for traffic in [exceed-bandwidth, maximum-bandwidth].
	MaximumDscp pulumi.StringPtrInput
	// Traffic shaper name.
	Name pulumi.StringPtrInput
	// Per-packet size overhead used in rate computations.
	Overhead pulumi.IntPtrInput
	// Enable/disable applying a separate shaper for each policy. For example, if enabled the guaranteed bandwidth is applied separately for each policy. Valid values: `disable`, `enable`.
	PerPolicy pulumi.StringPtrInput
	// Higher priority traffic is more likely to be forwarded without delays and without compromising the guaranteed bandwidth. Valid values: `low`, `medium`, `high`.
	Priority pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallShaperTrafficShaperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallShaperTrafficShaperArgs)(nil)).Elem()
}

type FirewallShaperTrafficShaperInput interface {
	pulumi.Input

	ToFirewallShaperTrafficShaperOutput() FirewallShaperTrafficShaperOutput
	ToFirewallShaperTrafficShaperOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperOutput
}

func (*FirewallShaperTrafficShaper) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallShaperTrafficShaper)(nil)).Elem()
}

func (i *FirewallShaperTrafficShaper) ToFirewallShaperTrafficShaperOutput() FirewallShaperTrafficShaperOutput {
	return i.ToFirewallShaperTrafficShaperOutputWithContext(context.Background())
}

func (i *FirewallShaperTrafficShaper) ToFirewallShaperTrafficShaperOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShaperTrafficShaperOutput)
}

// FirewallShaperTrafficShaperArrayInput is an input type that accepts FirewallShaperTrafficShaperArray and FirewallShaperTrafficShaperArrayOutput values.
// You can construct a concrete instance of `FirewallShaperTrafficShaperArrayInput` via:
//
//          FirewallShaperTrafficShaperArray{ FirewallShaperTrafficShaperArgs{...} }
type FirewallShaperTrafficShaperArrayInput interface {
	pulumi.Input

	ToFirewallShaperTrafficShaperArrayOutput() FirewallShaperTrafficShaperArrayOutput
	ToFirewallShaperTrafficShaperArrayOutputWithContext(context.Context) FirewallShaperTrafficShaperArrayOutput
}

type FirewallShaperTrafficShaperArray []FirewallShaperTrafficShaperInput

func (FirewallShaperTrafficShaperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallShaperTrafficShaper)(nil)).Elem()
}

func (i FirewallShaperTrafficShaperArray) ToFirewallShaperTrafficShaperArrayOutput() FirewallShaperTrafficShaperArrayOutput {
	return i.ToFirewallShaperTrafficShaperArrayOutputWithContext(context.Background())
}

func (i FirewallShaperTrafficShaperArray) ToFirewallShaperTrafficShaperArrayOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShaperTrafficShaperArrayOutput)
}

// FirewallShaperTrafficShaperMapInput is an input type that accepts FirewallShaperTrafficShaperMap and FirewallShaperTrafficShaperMapOutput values.
// You can construct a concrete instance of `FirewallShaperTrafficShaperMapInput` via:
//
//          FirewallShaperTrafficShaperMap{ "key": FirewallShaperTrafficShaperArgs{...} }
type FirewallShaperTrafficShaperMapInput interface {
	pulumi.Input

	ToFirewallShaperTrafficShaperMapOutput() FirewallShaperTrafficShaperMapOutput
	ToFirewallShaperTrafficShaperMapOutputWithContext(context.Context) FirewallShaperTrafficShaperMapOutput
}

type FirewallShaperTrafficShaperMap map[string]FirewallShaperTrafficShaperInput

func (FirewallShaperTrafficShaperMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallShaperTrafficShaper)(nil)).Elem()
}

func (i FirewallShaperTrafficShaperMap) ToFirewallShaperTrafficShaperMapOutput() FirewallShaperTrafficShaperMapOutput {
	return i.ToFirewallShaperTrafficShaperMapOutputWithContext(context.Background())
}

func (i FirewallShaperTrafficShaperMap) ToFirewallShaperTrafficShaperMapOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallShaperTrafficShaperMapOutput)
}

type FirewallShaperTrafficShaperOutput struct{ *pulumi.OutputState }

func (FirewallShaperTrafficShaperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallShaperTrafficShaper)(nil)).Elem()
}

func (o FirewallShaperTrafficShaperOutput) ToFirewallShaperTrafficShaperOutput() FirewallShaperTrafficShaperOutput {
	return o
}

func (o FirewallShaperTrafficShaperOutput) ToFirewallShaperTrafficShaperOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperOutput {
	return o
}

type FirewallShaperTrafficShaperArrayOutput struct{ *pulumi.OutputState }

func (FirewallShaperTrafficShaperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallShaperTrafficShaper)(nil)).Elem()
}

func (o FirewallShaperTrafficShaperArrayOutput) ToFirewallShaperTrafficShaperArrayOutput() FirewallShaperTrafficShaperArrayOutput {
	return o
}

func (o FirewallShaperTrafficShaperArrayOutput) ToFirewallShaperTrafficShaperArrayOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperArrayOutput {
	return o
}

func (o FirewallShaperTrafficShaperArrayOutput) Index(i pulumi.IntInput) FirewallShaperTrafficShaperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallShaperTrafficShaper {
		return vs[0].([]*FirewallShaperTrafficShaper)[vs[1].(int)]
	}).(FirewallShaperTrafficShaperOutput)
}

type FirewallShaperTrafficShaperMapOutput struct{ *pulumi.OutputState }

func (FirewallShaperTrafficShaperMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallShaperTrafficShaper)(nil)).Elem()
}

func (o FirewallShaperTrafficShaperMapOutput) ToFirewallShaperTrafficShaperMapOutput() FirewallShaperTrafficShaperMapOutput {
	return o
}

func (o FirewallShaperTrafficShaperMapOutput) ToFirewallShaperTrafficShaperMapOutputWithContext(ctx context.Context) FirewallShaperTrafficShaperMapOutput {
	return o
}

func (o FirewallShaperTrafficShaperMapOutput) MapIndex(k pulumi.StringInput) FirewallShaperTrafficShaperOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallShaperTrafficShaper {
		return vs[0].(map[string]*FirewallShaperTrafficShaper)[vs[1].(string)]
	}).(FirewallShaperTrafficShaperOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShaperTrafficShaperInput)(nil)).Elem(), &FirewallShaperTrafficShaper{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShaperTrafficShaperArrayInput)(nil)).Elem(), FirewallShaperTrafficShaperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallShaperTrafficShaperMapInput)(nil)).Elem(), FirewallShaperTrafficShaperMap{})
	pulumi.RegisterOutputType(FirewallShaperTrafficShaperOutput{})
	pulumi.RegisterOutputType(FirewallShaperTrafficShaperArrayOutput{})
	pulumi.RegisterOutputType(FirewallShaperTrafficShaperMapOutput{})
}
