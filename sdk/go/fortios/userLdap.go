// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UserLdap struct {
	pulumi.CustomResourceState

	AccountKeyFilter        pulumi.StringOutput    `pulumi:"accountKeyFilter"`
	AccountKeyProcessing    pulumi.StringOutput    `pulumi:"accountKeyProcessing"`
	AccountKeyUpnSan        pulumi.StringOutput    `pulumi:"accountKeyUpnSan"`
	Antiphish               pulumi.StringOutput    `pulumi:"antiphish"`
	CaCert                  pulumi.StringOutput    `pulumi:"caCert"`
	ClientCert              pulumi.StringOutput    `pulumi:"clientCert"`
	ClientCertAuth          pulumi.StringOutput    `pulumi:"clientCertAuth"`
	Cnid                    pulumi.StringOutput    `pulumi:"cnid"`
	Dn                      pulumi.StringOutput    `pulumi:"dn"`
	GroupFilter             pulumi.StringOutput    `pulumi:"groupFilter"`
	GroupMemberCheck        pulumi.StringOutput    `pulumi:"groupMemberCheck"`
	GroupObjectFilter       pulumi.StringOutput    `pulumi:"groupObjectFilter"`
	GroupSearchBase         pulumi.StringOutput    `pulumi:"groupSearchBase"`
	Interface               pulumi.StringOutput    `pulumi:"interface"`
	InterfaceSelectMethod   pulumi.StringOutput    `pulumi:"interfaceSelectMethod"`
	MemberAttr              pulumi.StringOutput    `pulumi:"memberAttr"`
	Name                    pulumi.StringOutput    `pulumi:"name"`
	ObtainUserInfo          pulumi.StringOutput    `pulumi:"obtainUserInfo"`
	Password                pulumi.StringPtrOutput `pulumi:"password"`
	PasswordAttr            pulumi.StringOutput    `pulumi:"passwordAttr"`
	PasswordExpiryWarning   pulumi.StringOutput    `pulumi:"passwordExpiryWarning"`
	PasswordRenewal         pulumi.StringOutput    `pulumi:"passwordRenewal"`
	Port                    pulumi.IntOutput       `pulumi:"port"`
	SearchType              pulumi.StringOutput    `pulumi:"searchType"`
	SecondaryServer         pulumi.StringOutput    `pulumi:"secondaryServer"`
	Secure                  pulumi.StringOutput    `pulumi:"secure"`
	Server                  pulumi.StringOutput    `pulumi:"server"`
	ServerIdentityCheck     pulumi.StringOutput    `pulumi:"serverIdentityCheck"`
	SourceIp                pulumi.StringOutput    `pulumi:"sourceIp"`
	SourcePort              pulumi.IntOutput       `pulumi:"sourcePort"`
	SslMinProtoVersion      pulumi.StringOutput    `pulumi:"sslMinProtoVersion"`
	TertiaryServer          pulumi.StringOutput    `pulumi:"tertiaryServer"`
	TwoFactor               pulumi.StringOutput    `pulumi:"twoFactor"`
	TwoFactorAuthentication pulumi.StringOutput    `pulumi:"twoFactorAuthentication"`
	TwoFactorFilter         pulumi.StringOutput    `pulumi:"twoFactorFilter"`
	TwoFactorNotification   pulumi.StringOutput    `pulumi:"twoFactorNotification"`
	Type                    pulumi.StringOutput    `pulumi:"type"`
	UserInfoExchangeServer  pulumi.StringOutput    `pulumi:"userInfoExchangeServer"`
	Username                pulumi.StringOutput    `pulumi:"username"`
	Vdomparam               pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewUserLdap registers a new resource with the given unique name, arguments, and options.
func NewUserLdap(ctx *pulumi.Context,
	name string, args *UserLdapArgs, opts ...pulumi.ResourceOption) (*UserLdap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dn == nil {
		return nil, errors.New("invalid value for required argument 'Dn'")
	}
	if args.Server == nil {
		return nil, errors.New("invalid value for required argument 'Server'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserLdap
	err := ctx.RegisterResource("fortios:index/userLdap:UserLdap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserLdap gets an existing UserLdap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserLdap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserLdapState, opts ...pulumi.ResourceOption) (*UserLdap, error) {
	var resource UserLdap
	err := ctx.ReadResource("fortios:index/userLdap:UserLdap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserLdap resources.
type userLdapState struct {
	AccountKeyFilter        *string `pulumi:"accountKeyFilter"`
	AccountKeyProcessing    *string `pulumi:"accountKeyProcessing"`
	AccountKeyUpnSan        *string `pulumi:"accountKeyUpnSan"`
	Antiphish               *string `pulumi:"antiphish"`
	CaCert                  *string `pulumi:"caCert"`
	ClientCert              *string `pulumi:"clientCert"`
	ClientCertAuth          *string `pulumi:"clientCertAuth"`
	Cnid                    *string `pulumi:"cnid"`
	Dn                      *string `pulumi:"dn"`
	GroupFilter             *string `pulumi:"groupFilter"`
	GroupMemberCheck        *string `pulumi:"groupMemberCheck"`
	GroupObjectFilter       *string `pulumi:"groupObjectFilter"`
	GroupSearchBase         *string `pulumi:"groupSearchBase"`
	Interface               *string `pulumi:"interface"`
	InterfaceSelectMethod   *string `pulumi:"interfaceSelectMethod"`
	MemberAttr              *string `pulumi:"memberAttr"`
	Name                    *string `pulumi:"name"`
	ObtainUserInfo          *string `pulumi:"obtainUserInfo"`
	Password                *string `pulumi:"password"`
	PasswordAttr            *string `pulumi:"passwordAttr"`
	PasswordExpiryWarning   *string `pulumi:"passwordExpiryWarning"`
	PasswordRenewal         *string `pulumi:"passwordRenewal"`
	Port                    *int    `pulumi:"port"`
	SearchType              *string `pulumi:"searchType"`
	SecondaryServer         *string `pulumi:"secondaryServer"`
	Secure                  *string `pulumi:"secure"`
	Server                  *string `pulumi:"server"`
	ServerIdentityCheck     *string `pulumi:"serverIdentityCheck"`
	SourceIp                *string `pulumi:"sourceIp"`
	SourcePort              *int    `pulumi:"sourcePort"`
	SslMinProtoVersion      *string `pulumi:"sslMinProtoVersion"`
	TertiaryServer          *string `pulumi:"tertiaryServer"`
	TwoFactor               *string `pulumi:"twoFactor"`
	TwoFactorAuthentication *string `pulumi:"twoFactorAuthentication"`
	TwoFactorFilter         *string `pulumi:"twoFactorFilter"`
	TwoFactorNotification   *string `pulumi:"twoFactorNotification"`
	Type                    *string `pulumi:"type"`
	UserInfoExchangeServer  *string `pulumi:"userInfoExchangeServer"`
	Username                *string `pulumi:"username"`
	Vdomparam               *string `pulumi:"vdomparam"`
}

type UserLdapState struct {
	AccountKeyFilter        pulumi.StringPtrInput
	AccountKeyProcessing    pulumi.StringPtrInput
	AccountKeyUpnSan        pulumi.StringPtrInput
	Antiphish               pulumi.StringPtrInput
	CaCert                  pulumi.StringPtrInput
	ClientCert              pulumi.StringPtrInput
	ClientCertAuth          pulumi.StringPtrInput
	Cnid                    pulumi.StringPtrInput
	Dn                      pulumi.StringPtrInput
	GroupFilter             pulumi.StringPtrInput
	GroupMemberCheck        pulumi.StringPtrInput
	GroupObjectFilter       pulumi.StringPtrInput
	GroupSearchBase         pulumi.StringPtrInput
	Interface               pulumi.StringPtrInput
	InterfaceSelectMethod   pulumi.StringPtrInput
	MemberAttr              pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	ObtainUserInfo          pulumi.StringPtrInput
	Password                pulumi.StringPtrInput
	PasswordAttr            pulumi.StringPtrInput
	PasswordExpiryWarning   pulumi.StringPtrInput
	PasswordRenewal         pulumi.StringPtrInput
	Port                    pulumi.IntPtrInput
	SearchType              pulumi.StringPtrInput
	SecondaryServer         pulumi.StringPtrInput
	Secure                  pulumi.StringPtrInput
	Server                  pulumi.StringPtrInput
	ServerIdentityCheck     pulumi.StringPtrInput
	SourceIp                pulumi.StringPtrInput
	SourcePort              pulumi.IntPtrInput
	SslMinProtoVersion      pulumi.StringPtrInput
	TertiaryServer          pulumi.StringPtrInput
	TwoFactor               pulumi.StringPtrInput
	TwoFactorAuthentication pulumi.StringPtrInput
	TwoFactorFilter         pulumi.StringPtrInput
	TwoFactorNotification   pulumi.StringPtrInput
	Type                    pulumi.StringPtrInput
	UserInfoExchangeServer  pulumi.StringPtrInput
	Username                pulumi.StringPtrInput
	Vdomparam               pulumi.StringPtrInput
}

func (UserLdapState) ElementType() reflect.Type {
	return reflect.TypeOf((*userLdapState)(nil)).Elem()
}

type userLdapArgs struct {
	AccountKeyFilter        *string `pulumi:"accountKeyFilter"`
	AccountKeyProcessing    *string `pulumi:"accountKeyProcessing"`
	AccountKeyUpnSan        *string `pulumi:"accountKeyUpnSan"`
	Antiphish               *string `pulumi:"antiphish"`
	CaCert                  *string `pulumi:"caCert"`
	ClientCert              *string `pulumi:"clientCert"`
	ClientCertAuth          *string `pulumi:"clientCertAuth"`
	Cnid                    *string `pulumi:"cnid"`
	Dn                      string  `pulumi:"dn"`
	GroupFilter             *string `pulumi:"groupFilter"`
	GroupMemberCheck        *string `pulumi:"groupMemberCheck"`
	GroupObjectFilter       *string `pulumi:"groupObjectFilter"`
	GroupSearchBase         *string `pulumi:"groupSearchBase"`
	Interface               *string `pulumi:"interface"`
	InterfaceSelectMethod   *string `pulumi:"interfaceSelectMethod"`
	MemberAttr              *string `pulumi:"memberAttr"`
	Name                    *string `pulumi:"name"`
	ObtainUserInfo          *string `pulumi:"obtainUserInfo"`
	Password                *string `pulumi:"password"`
	PasswordAttr            *string `pulumi:"passwordAttr"`
	PasswordExpiryWarning   *string `pulumi:"passwordExpiryWarning"`
	PasswordRenewal         *string `pulumi:"passwordRenewal"`
	Port                    *int    `pulumi:"port"`
	SearchType              *string `pulumi:"searchType"`
	SecondaryServer         *string `pulumi:"secondaryServer"`
	Secure                  *string `pulumi:"secure"`
	Server                  string  `pulumi:"server"`
	ServerIdentityCheck     *string `pulumi:"serverIdentityCheck"`
	SourceIp                *string `pulumi:"sourceIp"`
	SourcePort              *int    `pulumi:"sourcePort"`
	SslMinProtoVersion      *string `pulumi:"sslMinProtoVersion"`
	TertiaryServer          *string `pulumi:"tertiaryServer"`
	TwoFactor               *string `pulumi:"twoFactor"`
	TwoFactorAuthentication *string `pulumi:"twoFactorAuthentication"`
	TwoFactorFilter         *string `pulumi:"twoFactorFilter"`
	TwoFactorNotification   *string `pulumi:"twoFactorNotification"`
	Type                    *string `pulumi:"type"`
	UserInfoExchangeServer  *string `pulumi:"userInfoExchangeServer"`
	Username                *string `pulumi:"username"`
	Vdomparam               *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserLdap resource.
type UserLdapArgs struct {
	AccountKeyFilter        pulumi.StringPtrInput
	AccountKeyProcessing    pulumi.StringPtrInput
	AccountKeyUpnSan        pulumi.StringPtrInput
	Antiphish               pulumi.StringPtrInput
	CaCert                  pulumi.StringPtrInput
	ClientCert              pulumi.StringPtrInput
	ClientCertAuth          pulumi.StringPtrInput
	Cnid                    pulumi.StringPtrInput
	Dn                      pulumi.StringInput
	GroupFilter             pulumi.StringPtrInput
	GroupMemberCheck        pulumi.StringPtrInput
	GroupObjectFilter       pulumi.StringPtrInput
	GroupSearchBase         pulumi.StringPtrInput
	Interface               pulumi.StringPtrInput
	InterfaceSelectMethod   pulumi.StringPtrInput
	MemberAttr              pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	ObtainUserInfo          pulumi.StringPtrInput
	Password                pulumi.StringPtrInput
	PasswordAttr            pulumi.StringPtrInput
	PasswordExpiryWarning   pulumi.StringPtrInput
	PasswordRenewal         pulumi.StringPtrInput
	Port                    pulumi.IntPtrInput
	SearchType              pulumi.StringPtrInput
	SecondaryServer         pulumi.StringPtrInput
	Secure                  pulumi.StringPtrInput
	Server                  pulumi.StringInput
	ServerIdentityCheck     pulumi.StringPtrInput
	SourceIp                pulumi.StringPtrInput
	SourcePort              pulumi.IntPtrInput
	SslMinProtoVersion      pulumi.StringPtrInput
	TertiaryServer          pulumi.StringPtrInput
	TwoFactor               pulumi.StringPtrInput
	TwoFactorAuthentication pulumi.StringPtrInput
	TwoFactorFilter         pulumi.StringPtrInput
	TwoFactorNotification   pulumi.StringPtrInput
	Type                    pulumi.StringPtrInput
	UserInfoExchangeServer  pulumi.StringPtrInput
	Username                pulumi.StringPtrInput
	Vdomparam               pulumi.StringPtrInput
}

func (UserLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userLdapArgs)(nil)).Elem()
}

type UserLdapInput interface {
	pulumi.Input

	ToUserLdapOutput() UserLdapOutput
	ToUserLdapOutputWithContext(ctx context.Context) UserLdapOutput
}

func (*UserLdap) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLdap)(nil)).Elem()
}

func (i *UserLdap) ToUserLdapOutput() UserLdapOutput {
	return i.ToUserLdapOutputWithContext(context.Background())
}

func (i *UserLdap) ToUserLdapOutputWithContext(ctx context.Context) UserLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLdapOutput)
}

// UserLdapArrayInput is an input type that accepts UserLdapArray and UserLdapArrayOutput values.
// You can construct a concrete instance of `UserLdapArrayInput` via:
//
//	UserLdapArray{ UserLdapArgs{...} }
type UserLdapArrayInput interface {
	pulumi.Input

	ToUserLdapArrayOutput() UserLdapArrayOutput
	ToUserLdapArrayOutputWithContext(context.Context) UserLdapArrayOutput
}

type UserLdapArray []UserLdapInput

func (UserLdapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLdap)(nil)).Elem()
}

func (i UserLdapArray) ToUserLdapArrayOutput() UserLdapArrayOutput {
	return i.ToUserLdapArrayOutputWithContext(context.Background())
}

func (i UserLdapArray) ToUserLdapArrayOutputWithContext(ctx context.Context) UserLdapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLdapArrayOutput)
}

// UserLdapMapInput is an input type that accepts UserLdapMap and UserLdapMapOutput values.
// You can construct a concrete instance of `UserLdapMapInput` via:
//
//	UserLdapMap{ "key": UserLdapArgs{...} }
type UserLdapMapInput interface {
	pulumi.Input

	ToUserLdapMapOutput() UserLdapMapOutput
	ToUserLdapMapOutputWithContext(context.Context) UserLdapMapOutput
}

type UserLdapMap map[string]UserLdapInput

func (UserLdapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLdap)(nil)).Elem()
}

func (i UserLdapMap) ToUserLdapMapOutput() UserLdapMapOutput {
	return i.ToUserLdapMapOutputWithContext(context.Background())
}

func (i UserLdapMap) ToUserLdapMapOutputWithContext(ctx context.Context) UserLdapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLdapMapOutput)
}

type UserLdapOutput struct{ *pulumi.OutputState }

func (UserLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLdap)(nil)).Elem()
}

func (o UserLdapOutput) ToUserLdapOutput() UserLdapOutput {
	return o
}

func (o UserLdapOutput) ToUserLdapOutputWithContext(ctx context.Context) UserLdapOutput {
	return o
}

func (o UserLdapOutput) AccountKeyFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.AccountKeyFilter }).(pulumi.StringOutput)
}

func (o UserLdapOutput) AccountKeyProcessing() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.AccountKeyProcessing }).(pulumi.StringOutput)
}

func (o UserLdapOutput) AccountKeyUpnSan() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.AccountKeyUpnSan }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Antiphish() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Antiphish }).(pulumi.StringOutput)
}

func (o UserLdapOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.CaCert }).(pulumi.StringOutput)
}

func (o UserLdapOutput) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

func (o UserLdapOutput) ClientCertAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.ClientCertAuth }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Cnid() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Cnid }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Dn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Dn }).(pulumi.StringOutput)
}

func (o UserLdapOutput) GroupFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.GroupFilter }).(pulumi.StringOutput)
}

func (o UserLdapOutput) GroupMemberCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.GroupMemberCheck }).(pulumi.StringOutput)
}

func (o UserLdapOutput) GroupObjectFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.GroupObjectFilter }).(pulumi.StringOutput)
}

func (o UserLdapOutput) GroupSearchBase() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.GroupSearchBase }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o UserLdapOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o UserLdapOutput) MemberAttr() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.MemberAttr }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserLdapOutput) ObtainUserInfo() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.ObtainUserInfo }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o UserLdapOutput) PasswordAttr() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.PasswordAttr }).(pulumi.StringOutput)
}

func (o UserLdapOutput) PasswordExpiryWarning() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.PasswordExpiryWarning }).(pulumi.StringOutput)
}

func (o UserLdapOutput) PasswordRenewal() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.PasswordRenewal }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o UserLdapOutput) SearchType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.SearchType }).(pulumi.StringOutput)
}

func (o UserLdapOutput) SecondaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.SecondaryServer }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Secure() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Secure }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o UserLdapOutput) ServerIdentityCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.ServerIdentityCheck }).(pulumi.StringOutput)
}

func (o UserLdapOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o UserLdapOutput) SourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.IntOutput { return v.SourcePort }).(pulumi.IntOutput)
}

func (o UserLdapOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

func (o UserLdapOutput) TertiaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.TertiaryServer }).(pulumi.StringOutput)
}

func (o UserLdapOutput) TwoFactor() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.TwoFactor }).(pulumi.StringOutput)
}

func (o UserLdapOutput) TwoFactorAuthentication() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.TwoFactorAuthentication }).(pulumi.StringOutput)
}

func (o UserLdapOutput) TwoFactorFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.TwoFactorFilter }).(pulumi.StringOutput)
}

func (o UserLdapOutput) TwoFactorNotification() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.TwoFactorNotification }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o UserLdapOutput) UserInfoExchangeServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.UserInfoExchangeServer }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

func (o UserLdapOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLdap) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserLdapArrayOutput struct{ *pulumi.OutputState }

func (UserLdapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLdap)(nil)).Elem()
}

func (o UserLdapArrayOutput) ToUserLdapArrayOutput() UserLdapArrayOutput {
	return o
}

func (o UserLdapArrayOutput) ToUserLdapArrayOutputWithContext(ctx context.Context) UserLdapArrayOutput {
	return o
}

func (o UserLdapArrayOutput) Index(i pulumi.IntInput) UserLdapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserLdap {
		return vs[0].([]*UserLdap)[vs[1].(int)]
	}).(UserLdapOutput)
}

type UserLdapMapOutput struct{ *pulumi.OutputState }

func (UserLdapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLdap)(nil)).Elem()
}

func (o UserLdapMapOutput) ToUserLdapMapOutput() UserLdapMapOutput {
	return o
}

func (o UserLdapMapOutput) ToUserLdapMapOutputWithContext(ctx context.Context) UserLdapMapOutput {
	return o
}

func (o UserLdapMapOutput) MapIndex(k pulumi.StringInput) UserLdapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserLdap {
		return vs[0].(map[string]*UserLdap)[vs[1].(string)]
	}).(UserLdapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserLdapInput)(nil)).Elem(), &UserLdap{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLdapArrayInput)(nil)).Elem(), UserLdapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLdapMapInput)(nil)).Elem(), UserLdapMap{})
	pulumi.RegisterOutputType(UserLdapOutput{})
	pulumi.RegisterOutputType(UserLdapArrayOutput{})
	pulumi.RegisterOutputType(UserLdapMapOutput{})
}
