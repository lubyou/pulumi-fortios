// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallPolicyMove struct {
	pulumi.CustomResourceState

	Comment              pulumi.StringPtrOutput `pulumi:"comment"`
	Move                 pulumi.StringOutput    `pulumi:"move"`
	PolicyidDst          pulumi.IntOutput       `pulumi:"policyidDst"`
	PolicyidSrc          pulumi.IntOutput       `pulumi:"policyidSrc"`
	StatePolicySrcdstPos pulumi.StringPtrOutput `pulumi:"statePolicySrcdstPos"`
	Vdomparam            pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallPolicyMove registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicyMove(ctx *pulumi.Context,
	name string, args *FirewallPolicyMoveArgs, opts ...pulumi.ResourceOption) (*FirewallPolicyMove, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Move == nil {
		return nil, errors.New("invalid value for required argument 'Move'")
	}
	if args.PolicyidDst == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidDst'")
	}
	if args.PolicyidSrc == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidSrc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicyMove
	err := ctx.RegisterResource("fortios:index/firewallPolicyMove:FirewallPolicyMove", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicyMove gets an existing FirewallPolicyMove resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicyMove(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyMoveState, opts ...pulumi.ResourceOption) (*FirewallPolicyMove, error) {
	var resource FirewallPolicyMove
	err := ctx.ReadResource("fortios:index/firewallPolicyMove:FirewallPolicyMove", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicyMove resources.
type firewallPolicyMoveState struct {
	Comment              *string `pulumi:"comment"`
	Move                 *string `pulumi:"move"`
	PolicyidDst          *int    `pulumi:"policyidDst"`
	PolicyidSrc          *int    `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

type FirewallPolicyMoveState struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringPtrInput
	PolicyidDst          pulumi.IntPtrInput
	PolicyidSrc          pulumi.IntPtrInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicyMoveState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyMoveState)(nil)).Elem()
}

type firewallPolicyMoveArgs struct {
	Comment              *string `pulumi:"comment"`
	Move                 string  `pulumi:"move"`
	PolicyidDst          int     `pulumi:"policyidDst"`
	PolicyidSrc          int     `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallPolicyMove resource.
type FirewallPolicyMoveArgs struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringInput
	PolicyidDst          pulumi.IntInput
	PolicyidSrc          pulumi.IntInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicyMoveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyMoveArgs)(nil)).Elem()
}

type FirewallPolicyMoveInput interface {
	pulumi.Input

	ToFirewallPolicyMoveOutput() FirewallPolicyMoveOutput
	ToFirewallPolicyMoveOutputWithContext(ctx context.Context) FirewallPolicyMoveOutput
}

func (*FirewallPolicyMove) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyMove)(nil)).Elem()
}

func (i *FirewallPolicyMove) ToFirewallPolicyMoveOutput() FirewallPolicyMoveOutput {
	return i.ToFirewallPolicyMoveOutputWithContext(context.Background())
}

func (i *FirewallPolicyMove) ToFirewallPolicyMoveOutputWithContext(ctx context.Context) FirewallPolicyMoveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyMoveOutput)
}

func (i *FirewallPolicyMove) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyMove] {
	return pulumix.Output[*FirewallPolicyMove]{
		OutputState: i.ToFirewallPolicyMoveOutputWithContext(ctx).OutputState,
	}
}

// FirewallPolicyMoveArrayInput is an input type that accepts FirewallPolicyMoveArray and FirewallPolicyMoveArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyMoveArrayInput` via:
//
//	FirewallPolicyMoveArray{ FirewallPolicyMoveArgs{...} }
type FirewallPolicyMoveArrayInput interface {
	pulumi.Input

	ToFirewallPolicyMoveArrayOutput() FirewallPolicyMoveArrayOutput
	ToFirewallPolicyMoveArrayOutputWithContext(context.Context) FirewallPolicyMoveArrayOutput
}

type FirewallPolicyMoveArray []FirewallPolicyMoveInput

func (FirewallPolicyMoveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicyMove)(nil)).Elem()
}

func (i FirewallPolicyMoveArray) ToFirewallPolicyMoveArrayOutput() FirewallPolicyMoveArrayOutput {
	return i.ToFirewallPolicyMoveArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyMoveArray) ToFirewallPolicyMoveArrayOutputWithContext(ctx context.Context) FirewallPolicyMoveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyMoveArrayOutput)
}

func (i FirewallPolicyMoveArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallPolicyMove] {
	return pulumix.Output[[]*FirewallPolicyMove]{
		OutputState: i.ToFirewallPolicyMoveArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallPolicyMoveMapInput is an input type that accepts FirewallPolicyMoveMap and FirewallPolicyMoveMapOutput values.
// You can construct a concrete instance of `FirewallPolicyMoveMapInput` via:
//
//	FirewallPolicyMoveMap{ "key": FirewallPolicyMoveArgs{...} }
type FirewallPolicyMoveMapInput interface {
	pulumi.Input

	ToFirewallPolicyMoveMapOutput() FirewallPolicyMoveMapOutput
	ToFirewallPolicyMoveMapOutputWithContext(context.Context) FirewallPolicyMoveMapOutput
}

type FirewallPolicyMoveMap map[string]FirewallPolicyMoveInput

func (FirewallPolicyMoveMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicyMove)(nil)).Elem()
}

func (i FirewallPolicyMoveMap) ToFirewallPolicyMoveMapOutput() FirewallPolicyMoveMapOutput {
	return i.ToFirewallPolicyMoveMapOutputWithContext(context.Background())
}

func (i FirewallPolicyMoveMap) ToFirewallPolicyMoveMapOutputWithContext(ctx context.Context) FirewallPolicyMoveMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyMoveMapOutput)
}

func (i FirewallPolicyMoveMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallPolicyMove] {
	return pulumix.Output[map[string]*FirewallPolicyMove]{
		OutputState: i.ToFirewallPolicyMoveMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallPolicyMoveOutput struct{ *pulumi.OutputState }

func (FirewallPolicyMoveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyMove)(nil)).Elem()
}

func (o FirewallPolicyMoveOutput) ToFirewallPolicyMoveOutput() FirewallPolicyMoveOutput {
	return o
}

func (o FirewallPolicyMoveOutput) ToFirewallPolicyMoveOutputWithContext(ctx context.Context) FirewallPolicyMoveOutput {
	return o
}

func (o FirewallPolicyMoveOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyMove] {
	return pulumix.Output[*FirewallPolicyMove]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyMoveOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyMoveOutput) Move() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.StringOutput { return v.Move }).(pulumi.StringOutput)
}

func (o FirewallPolicyMoveOutput) PolicyidDst() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.IntOutput { return v.PolicyidDst }).(pulumi.IntOutput)
}

func (o FirewallPolicyMoveOutput) PolicyidSrc() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.IntOutput { return v.PolicyidSrc }).(pulumi.IntOutput)
}

func (o FirewallPolicyMoveOutput) StatePolicySrcdstPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.StringPtrOutput { return v.StatePolicySrcdstPos }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyMoveOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyMove) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallPolicyMoveArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyMoveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicyMove)(nil)).Elem()
}

func (o FirewallPolicyMoveArrayOutput) ToFirewallPolicyMoveArrayOutput() FirewallPolicyMoveArrayOutput {
	return o
}

func (o FirewallPolicyMoveArrayOutput) ToFirewallPolicyMoveArrayOutputWithContext(ctx context.Context) FirewallPolicyMoveArrayOutput {
	return o
}

func (o FirewallPolicyMoveArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallPolicyMove] {
	return pulumix.Output[[]*FirewallPolicyMove]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyMoveArrayOutput) Index(i pulumi.IntInput) FirewallPolicyMoveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallPolicyMove {
		return vs[0].([]*FirewallPolicyMove)[vs[1].(int)]
	}).(FirewallPolicyMoveOutput)
}

type FirewallPolicyMoveMapOutput struct{ *pulumi.OutputState }

func (FirewallPolicyMoveMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicyMove)(nil)).Elem()
}

func (o FirewallPolicyMoveMapOutput) ToFirewallPolicyMoveMapOutput() FirewallPolicyMoveMapOutput {
	return o
}

func (o FirewallPolicyMoveMapOutput) ToFirewallPolicyMoveMapOutputWithContext(ctx context.Context) FirewallPolicyMoveMapOutput {
	return o
}

func (o FirewallPolicyMoveMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallPolicyMove] {
	return pulumix.Output[map[string]*FirewallPolicyMove]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyMoveMapOutput) MapIndex(k pulumi.StringInput) FirewallPolicyMoveOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallPolicyMove {
		return vs[0].(map[string]*FirewallPolicyMove)[vs[1].(string)]
	}).(FirewallPolicyMoveOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyMoveInput)(nil)).Elem(), &FirewallPolicyMove{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyMoveArrayInput)(nil)).Elem(), FirewallPolicyMoveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyMoveMapInput)(nil)).Elem(), FirewallPolicyMoveMap{})
	pulumi.RegisterOutputType(FirewallPolicyMoveOutput{})
	pulumi.RegisterOutputType(FirewallPolicyMoveArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyMoveMapOutput{})
}
