// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type EmailfilterBlockAllowList struct {
	pulumi.CustomResourceState

	Comment             pulumi.StringPtrOutput                    `pulumi:"comment"`
	DynamicSortSubtable pulumi.StringPtrOutput                    `pulumi:"dynamicSortSubtable"`
	Entries             EmailfilterBlockAllowListEntryArrayOutput `pulumi:"entries"`
	Fosid               pulumi.IntOutput                          `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput                    `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                       `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewEmailfilterBlockAllowList registers a new resource with the given unique name, arguments, and options.
func NewEmailfilterBlockAllowList(ctx *pulumi.Context,
	name string, args *EmailfilterBlockAllowListArgs, opts ...pulumi.ResourceOption) (*EmailfilterBlockAllowList, error) {
	if args == nil {
		args = &EmailfilterBlockAllowListArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailfilterBlockAllowList
	err := ctx.RegisterResource("fortios:index/emailfilterBlockAllowList:EmailfilterBlockAllowList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailfilterBlockAllowList gets an existing EmailfilterBlockAllowList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailfilterBlockAllowList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailfilterBlockAllowListState, opts ...pulumi.ResourceOption) (*EmailfilterBlockAllowList, error) {
	var resource EmailfilterBlockAllowList
	err := ctx.ReadResource("fortios:index/emailfilterBlockAllowList:EmailfilterBlockAllowList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailfilterBlockAllowList resources.
type emailfilterBlockAllowListState struct {
	Comment             *string                          `pulumi:"comment"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	Entries             []EmailfilterBlockAllowListEntry `pulumi:"entries"`
	Fosid               *int                             `pulumi:"fosid"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

type EmailfilterBlockAllowListState struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Entries             EmailfilterBlockAllowListEntryArrayInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (EmailfilterBlockAllowListState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailfilterBlockAllowListState)(nil)).Elem()
}

type emailfilterBlockAllowListArgs struct {
	Comment             *string                          `pulumi:"comment"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	Entries             []EmailfilterBlockAllowListEntry `pulumi:"entries"`
	Fosid               *int                             `pulumi:"fosid"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

// The set of arguments for constructing a EmailfilterBlockAllowList resource.
type EmailfilterBlockAllowListArgs struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Entries             EmailfilterBlockAllowListEntryArrayInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (EmailfilterBlockAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailfilterBlockAllowListArgs)(nil)).Elem()
}

type EmailfilterBlockAllowListInput interface {
	pulumi.Input

	ToEmailfilterBlockAllowListOutput() EmailfilterBlockAllowListOutput
	ToEmailfilterBlockAllowListOutputWithContext(ctx context.Context) EmailfilterBlockAllowListOutput
}

func (*EmailfilterBlockAllowList) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterBlockAllowList)(nil)).Elem()
}

func (i *EmailfilterBlockAllowList) ToEmailfilterBlockAllowListOutput() EmailfilterBlockAllowListOutput {
	return i.ToEmailfilterBlockAllowListOutputWithContext(context.Background())
}

func (i *EmailfilterBlockAllowList) ToEmailfilterBlockAllowListOutputWithContext(ctx context.Context) EmailfilterBlockAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBlockAllowListOutput)
}

func (i *EmailfilterBlockAllowList) ToOutput(ctx context.Context) pulumix.Output[*EmailfilterBlockAllowList] {
	return pulumix.Output[*EmailfilterBlockAllowList]{
		OutputState: i.ToEmailfilterBlockAllowListOutputWithContext(ctx).OutputState,
	}
}

// EmailfilterBlockAllowListArrayInput is an input type that accepts EmailfilterBlockAllowListArray and EmailfilterBlockAllowListArrayOutput values.
// You can construct a concrete instance of `EmailfilterBlockAllowListArrayInput` via:
//
//	EmailfilterBlockAllowListArray{ EmailfilterBlockAllowListArgs{...} }
type EmailfilterBlockAllowListArrayInput interface {
	pulumi.Input

	ToEmailfilterBlockAllowListArrayOutput() EmailfilterBlockAllowListArrayOutput
	ToEmailfilterBlockAllowListArrayOutputWithContext(context.Context) EmailfilterBlockAllowListArrayOutput
}

type EmailfilterBlockAllowListArray []EmailfilterBlockAllowListInput

func (EmailfilterBlockAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailfilterBlockAllowList)(nil)).Elem()
}

func (i EmailfilterBlockAllowListArray) ToEmailfilterBlockAllowListArrayOutput() EmailfilterBlockAllowListArrayOutput {
	return i.ToEmailfilterBlockAllowListArrayOutputWithContext(context.Background())
}

func (i EmailfilterBlockAllowListArray) ToEmailfilterBlockAllowListArrayOutputWithContext(ctx context.Context) EmailfilterBlockAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBlockAllowListArrayOutput)
}

func (i EmailfilterBlockAllowListArray) ToOutput(ctx context.Context) pulumix.Output[[]*EmailfilterBlockAllowList] {
	return pulumix.Output[[]*EmailfilterBlockAllowList]{
		OutputState: i.ToEmailfilterBlockAllowListArrayOutputWithContext(ctx).OutputState,
	}
}

// EmailfilterBlockAllowListMapInput is an input type that accepts EmailfilterBlockAllowListMap and EmailfilterBlockAllowListMapOutput values.
// You can construct a concrete instance of `EmailfilterBlockAllowListMapInput` via:
//
//	EmailfilterBlockAllowListMap{ "key": EmailfilterBlockAllowListArgs{...} }
type EmailfilterBlockAllowListMapInput interface {
	pulumi.Input

	ToEmailfilterBlockAllowListMapOutput() EmailfilterBlockAllowListMapOutput
	ToEmailfilterBlockAllowListMapOutputWithContext(context.Context) EmailfilterBlockAllowListMapOutput
}

type EmailfilterBlockAllowListMap map[string]EmailfilterBlockAllowListInput

func (EmailfilterBlockAllowListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailfilterBlockAllowList)(nil)).Elem()
}

func (i EmailfilterBlockAllowListMap) ToEmailfilterBlockAllowListMapOutput() EmailfilterBlockAllowListMapOutput {
	return i.ToEmailfilterBlockAllowListMapOutputWithContext(context.Background())
}

func (i EmailfilterBlockAllowListMap) ToEmailfilterBlockAllowListMapOutputWithContext(ctx context.Context) EmailfilterBlockAllowListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailfilterBlockAllowListMapOutput)
}

func (i EmailfilterBlockAllowListMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailfilterBlockAllowList] {
	return pulumix.Output[map[string]*EmailfilterBlockAllowList]{
		OutputState: i.ToEmailfilterBlockAllowListMapOutputWithContext(ctx).OutputState,
	}
}

type EmailfilterBlockAllowListOutput struct{ *pulumi.OutputState }

func (EmailfilterBlockAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailfilterBlockAllowList)(nil)).Elem()
}

func (o EmailfilterBlockAllowListOutput) ToEmailfilterBlockAllowListOutput() EmailfilterBlockAllowListOutput {
	return o
}

func (o EmailfilterBlockAllowListOutput) ToEmailfilterBlockAllowListOutputWithContext(ctx context.Context) EmailfilterBlockAllowListOutput {
	return o
}

func (o EmailfilterBlockAllowListOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailfilterBlockAllowList] {
	return pulumix.Output[*EmailfilterBlockAllowList]{
		OutputState: o.OutputState,
	}
}

func (o EmailfilterBlockAllowListOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o EmailfilterBlockAllowListOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o EmailfilterBlockAllowListOutput) Entries() EmailfilterBlockAllowListEntryArrayOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) EmailfilterBlockAllowListEntryArrayOutput { return v.Entries }).(EmailfilterBlockAllowListEntryArrayOutput)
}

func (o EmailfilterBlockAllowListOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o EmailfilterBlockAllowListOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o EmailfilterBlockAllowListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EmailfilterBlockAllowListOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailfilterBlockAllowList) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type EmailfilterBlockAllowListArrayOutput struct{ *pulumi.OutputState }

func (EmailfilterBlockAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailfilterBlockAllowList)(nil)).Elem()
}

func (o EmailfilterBlockAllowListArrayOutput) ToEmailfilterBlockAllowListArrayOutput() EmailfilterBlockAllowListArrayOutput {
	return o
}

func (o EmailfilterBlockAllowListArrayOutput) ToEmailfilterBlockAllowListArrayOutputWithContext(ctx context.Context) EmailfilterBlockAllowListArrayOutput {
	return o
}

func (o EmailfilterBlockAllowListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*EmailfilterBlockAllowList] {
	return pulumix.Output[[]*EmailfilterBlockAllowList]{
		OutputState: o.OutputState,
	}
}

func (o EmailfilterBlockAllowListArrayOutput) Index(i pulumi.IntInput) EmailfilterBlockAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailfilterBlockAllowList {
		return vs[0].([]*EmailfilterBlockAllowList)[vs[1].(int)]
	}).(EmailfilterBlockAllowListOutput)
}

type EmailfilterBlockAllowListMapOutput struct{ *pulumi.OutputState }

func (EmailfilterBlockAllowListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailfilterBlockAllowList)(nil)).Elem()
}

func (o EmailfilterBlockAllowListMapOutput) ToEmailfilterBlockAllowListMapOutput() EmailfilterBlockAllowListMapOutput {
	return o
}

func (o EmailfilterBlockAllowListMapOutput) ToEmailfilterBlockAllowListMapOutputWithContext(ctx context.Context) EmailfilterBlockAllowListMapOutput {
	return o
}

func (o EmailfilterBlockAllowListMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*EmailfilterBlockAllowList] {
	return pulumix.Output[map[string]*EmailfilterBlockAllowList]{
		OutputState: o.OutputState,
	}
}

func (o EmailfilterBlockAllowListMapOutput) MapIndex(k pulumi.StringInput) EmailfilterBlockAllowListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailfilterBlockAllowList {
		return vs[0].(map[string]*EmailfilterBlockAllowList)[vs[1].(string)]
	}).(EmailfilterBlockAllowListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBlockAllowListInput)(nil)).Elem(), &EmailfilterBlockAllowList{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBlockAllowListArrayInput)(nil)).Elem(), EmailfilterBlockAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailfilterBlockAllowListMapInput)(nil)).Elem(), EmailfilterBlockAllowListMap{})
	pulumi.RegisterOutputType(EmailfilterBlockAllowListOutput{})
	pulumi.RegisterOutputType(EmailfilterBlockAllowListArrayOutput{})
	pulumi.RegisterOutputType(EmailfilterBlockAllowListMapOutput{})
}
