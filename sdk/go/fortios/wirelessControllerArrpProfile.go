// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WirelessControllerArrpProfile struct {
	pulumi.CustomResourceState

	Comment                pulumi.StringPtrOutput                                        `pulumi:"comment"`
	DarrpOptimize          pulumi.IntOutput                                              `pulumi:"darrpOptimize"`
	DarrpOptimizeSchedules WirelessControllerArrpProfileDarrpOptimizeScheduleArrayOutput `pulumi:"darrpOptimizeSchedules"`
	DynamicSortSubtable    pulumi.StringPtrOutput                                        `pulumi:"dynamicSortSubtable"`
	GetAllTables           pulumi.StringPtrOutput                                        `pulumi:"getAllTables"`
	IncludeDfsChannel      pulumi.StringOutput                                           `pulumi:"includeDfsChannel"`
	IncludeWeatherChannel  pulumi.StringOutput                                           `pulumi:"includeWeatherChannel"`
	MonitorPeriod          pulumi.IntOutput                                              `pulumi:"monitorPeriod"`
	Name                   pulumi.StringOutput                                           `pulumi:"name"`
	OverrideDarrpOptimize  pulumi.StringOutput                                           `pulumi:"overrideDarrpOptimize"`
	SelectionPeriod        pulumi.IntOutput                                              `pulumi:"selectionPeriod"`
	ThresholdAp            pulumi.IntOutput                                              `pulumi:"thresholdAp"`
	ThresholdChannelLoad   pulumi.IntOutput                                              `pulumi:"thresholdChannelLoad"`
	ThresholdNoiseFloor    pulumi.StringOutput                                           `pulumi:"thresholdNoiseFloor"`
	ThresholdRxErrors      pulumi.IntOutput                                              `pulumi:"thresholdRxErrors"`
	ThresholdSpectralRssi  pulumi.StringOutput                                           `pulumi:"thresholdSpectralRssi"`
	ThresholdTxRetries     pulumi.IntOutput                                              `pulumi:"thresholdTxRetries"`
	Vdomparam              pulumi.StringPtrOutput                                        `pulumi:"vdomparam"`
	WeightChannelLoad      pulumi.IntOutput                                              `pulumi:"weightChannelLoad"`
	WeightDfsChannel       pulumi.IntOutput                                              `pulumi:"weightDfsChannel"`
	WeightManagedAp        pulumi.IntOutput                                              `pulumi:"weightManagedAp"`
	WeightNoiseFloor       pulumi.IntOutput                                              `pulumi:"weightNoiseFloor"`
	WeightRogueAp          pulumi.IntOutput                                              `pulumi:"weightRogueAp"`
	WeightSpectralRssi     pulumi.IntOutput                                              `pulumi:"weightSpectralRssi"`
	WeightWeatherChannel   pulumi.IntOutput                                              `pulumi:"weightWeatherChannel"`
}

// NewWirelessControllerArrpProfile registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerArrpProfile(ctx *pulumi.Context,
	name string, args *WirelessControllerArrpProfileArgs, opts ...pulumi.ResourceOption) (*WirelessControllerArrpProfile, error) {
	if args == nil {
		args = &WirelessControllerArrpProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessControllerArrpProfile
	err := ctx.RegisterResource("fortios:index/wirelessControllerArrpProfile:WirelessControllerArrpProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerArrpProfile gets an existing WirelessControllerArrpProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerArrpProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerArrpProfileState, opts ...pulumi.ResourceOption) (*WirelessControllerArrpProfile, error) {
	var resource WirelessControllerArrpProfile
	err := ctx.ReadResource("fortios:index/wirelessControllerArrpProfile:WirelessControllerArrpProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerArrpProfile resources.
type wirelessControllerArrpProfileState struct {
	Comment                *string                                              `pulumi:"comment"`
	DarrpOptimize          *int                                                 `pulumi:"darrpOptimize"`
	DarrpOptimizeSchedules []WirelessControllerArrpProfileDarrpOptimizeSchedule `pulumi:"darrpOptimizeSchedules"`
	DynamicSortSubtable    *string                                              `pulumi:"dynamicSortSubtable"`
	GetAllTables           *string                                              `pulumi:"getAllTables"`
	IncludeDfsChannel      *string                                              `pulumi:"includeDfsChannel"`
	IncludeWeatherChannel  *string                                              `pulumi:"includeWeatherChannel"`
	MonitorPeriod          *int                                                 `pulumi:"monitorPeriod"`
	Name                   *string                                              `pulumi:"name"`
	OverrideDarrpOptimize  *string                                              `pulumi:"overrideDarrpOptimize"`
	SelectionPeriod        *int                                                 `pulumi:"selectionPeriod"`
	ThresholdAp            *int                                                 `pulumi:"thresholdAp"`
	ThresholdChannelLoad   *int                                                 `pulumi:"thresholdChannelLoad"`
	ThresholdNoiseFloor    *string                                              `pulumi:"thresholdNoiseFloor"`
	ThresholdRxErrors      *int                                                 `pulumi:"thresholdRxErrors"`
	ThresholdSpectralRssi  *string                                              `pulumi:"thresholdSpectralRssi"`
	ThresholdTxRetries     *int                                                 `pulumi:"thresholdTxRetries"`
	Vdomparam              *string                                              `pulumi:"vdomparam"`
	WeightChannelLoad      *int                                                 `pulumi:"weightChannelLoad"`
	WeightDfsChannel       *int                                                 `pulumi:"weightDfsChannel"`
	WeightManagedAp        *int                                                 `pulumi:"weightManagedAp"`
	WeightNoiseFloor       *int                                                 `pulumi:"weightNoiseFloor"`
	WeightRogueAp          *int                                                 `pulumi:"weightRogueAp"`
	WeightSpectralRssi     *int                                                 `pulumi:"weightSpectralRssi"`
	WeightWeatherChannel   *int                                                 `pulumi:"weightWeatherChannel"`
}

type WirelessControllerArrpProfileState struct {
	Comment                pulumi.StringPtrInput
	DarrpOptimize          pulumi.IntPtrInput
	DarrpOptimizeSchedules WirelessControllerArrpProfileDarrpOptimizeScheduleArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	GetAllTables           pulumi.StringPtrInput
	IncludeDfsChannel      pulumi.StringPtrInput
	IncludeWeatherChannel  pulumi.StringPtrInput
	MonitorPeriod          pulumi.IntPtrInput
	Name                   pulumi.StringPtrInput
	OverrideDarrpOptimize  pulumi.StringPtrInput
	SelectionPeriod        pulumi.IntPtrInput
	ThresholdAp            pulumi.IntPtrInput
	ThresholdChannelLoad   pulumi.IntPtrInput
	ThresholdNoiseFloor    pulumi.StringPtrInput
	ThresholdRxErrors      pulumi.IntPtrInput
	ThresholdSpectralRssi  pulumi.StringPtrInput
	ThresholdTxRetries     pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
	WeightChannelLoad      pulumi.IntPtrInput
	WeightDfsChannel       pulumi.IntPtrInput
	WeightManagedAp        pulumi.IntPtrInput
	WeightNoiseFloor       pulumi.IntPtrInput
	WeightRogueAp          pulumi.IntPtrInput
	WeightSpectralRssi     pulumi.IntPtrInput
	WeightWeatherChannel   pulumi.IntPtrInput
}

func (WirelessControllerArrpProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerArrpProfileState)(nil)).Elem()
}

type wirelessControllerArrpProfileArgs struct {
	Comment                *string                                              `pulumi:"comment"`
	DarrpOptimize          *int                                                 `pulumi:"darrpOptimize"`
	DarrpOptimizeSchedules []WirelessControllerArrpProfileDarrpOptimizeSchedule `pulumi:"darrpOptimizeSchedules"`
	DynamicSortSubtable    *string                                              `pulumi:"dynamicSortSubtable"`
	GetAllTables           *string                                              `pulumi:"getAllTables"`
	IncludeDfsChannel      *string                                              `pulumi:"includeDfsChannel"`
	IncludeWeatherChannel  *string                                              `pulumi:"includeWeatherChannel"`
	MonitorPeriod          *int                                                 `pulumi:"monitorPeriod"`
	Name                   *string                                              `pulumi:"name"`
	OverrideDarrpOptimize  *string                                              `pulumi:"overrideDarrpOptimize"`
	SelectionPeriod        *int                                                 `pulumi:"selectionPeriod"`
	ThresholdAp            *int                                                 `pulumi:"thresholdAp"`
	ThresholdChannelLoad   *int                                                 `pulumi:"thresholdChannelLoad"`
	ThresholdNoiseFloor    *string                                              `pulumi:"thresholdNoiseFloor"`
	ThresholdRxErrors      *int                                                 `pulumi:"thresholdRxErrors"`
	ThresholdSpectralRssi  *string                                              `pulumi:"thresholdSpectralRssi"`
	ThresholdTxRetries     *int                                                 `pulumi:"thresholdTxRetries"`
	Vdomparam              *string                                              `pulumi:"vdomparam"`
	WeightChannelLoad      *int                                                 `pulumi:"weightChannelLoad"`
	WeightDfsChannel       *int                                                 `pulumi:"weightDfsChannel"`
	WeightManagedAp        *int                                                 `pulumi:"weightManagedAp"`
	WeightNoiseFloor       *int                                                 `pulumi:"weightNoiseFloor"`
	WeightRogueAp          *int                                                 `pulumi:"weightRogueAp"`
	WeightSpectralRssi     *int                                                 `pulumi:"weightSpectralRssi"`
	WeightWeatherChannel   *int                                                 `pulumi:"weightWeatherChannel"`
}

// The set of arguments for constructing a WirelessControllerArrpProfile resource.
type WirelessControllerArrpProfileArgs struct {
	Comment                pulumi.StringPtrInput
	DarrpOptimize          pulumi.IntPtrInput
	DarrpOptimizeSchedules WirelessControllerArrpProfileDarrpOptimizeScheduleArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	GetAllTables           pulumi.StringPtrInput
	IncludeDfsChannel      pulumi.StringPtrInput
	IncludeWeatherChannel  pulumi.StringPtrInput
	MonitorPeriod          pulumi.IntPtrInput
	Name                   pulumi.StringPtrInput
	OverrideDarrpOptimize  pulumi.StringPtrInput
	SelectionPeriod        pulumi.IntPtrInput
	ThresholdAp            pulumi.IntPtrInput
	ThresholdChannelLoad   pulumi.IntPtrInput
	ThresholdNoiseFloor    pulumi.StringPtrInput
	ThresholdRxErrors      pulumi.IntPtrInput
	ThresholdSpectralRssi  pulumi.StringPtrInput
	ThresholdTxRetries     pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
	WeightChannelLoad      pulumi.IntPtrInput
	WeightDfsChannel       pulumi.IntPtrInput
	WeightManagedAp        pulumi.IntPtrInput
	WeightNoiseFloor       pulumi.IntPtrInput
	WeightRogueAp          pulumi.IntPtrInput
	WeightSpectralRssi     pulumi.IntPtrInput
	WeightWeatherChannel   pulumi.IntPtrInput
}

func (WirelessControllerArrpProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerArrpProfileArgs)(nil)).Elem()
}

type WirelessControllerArrpProfileInput interface {
	pulumi.Input

	ToWirelessControllerArrpProfileOutput() WirelessControllerArrpProfileOutput
	ToWirelessControllerArrpProfileOutputWithContext(ctx context.Context) WirelessControllerArrpProfileOutput
}

func (*WirelessControllerArrpProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerArrpProfile)(nil)).Elem()
}

func (i *WirelessControllerArrpProfile) ToWirelessControllerArrpProfileOutput() WirelessControllerArrpProfileOutput {
	return i.ToWirelessControllerArrpProfileOutputWithContext(context.Background())
}

func (i *WirelessControllerArrpProfile) ToWirelessControllerArrpProfileOutputWithContext(ctx context.Context) WirelessControllerArrpProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerArrpProfileOutput)
}

// WirelessControllerArrpProfileArrayInput is an input type that accepts WirelessControllerArrpProfileArray and WirelessControllerArrpProfileArrayOutput values.
// You can construct a concrete instance of `WirelessControllerArrpProfileArrayInput` via:
//
//	WirelessControllerArrpProfileArray{ WirelessControllerArrpProfileArgs{...} }
type WirelessControllerArrpProfileArrayInput interface {
	pulumi.Input

	ToWirelessControllerArrpProfileArrayOutput() WirelessControllerArrpProfileArrayOutput
	ToWirelessControllerArrpProfileArrayOutputWithContext(context.Context) WirelessControllerArrpProfileArrayOutput
}

type WirelessControllerArrpProfileArray []WirelessControllerArrpProfileInput

func (WirelessControllerArrpProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerArrpProfile)(nil)).Elem()
}

func (i WirelessControllerArrpProfileArray) ToWirelessControllerArrpProfileArrayOutput() WirelessControllerArrpProfileArrayOutput {
	return i.ToWirelessControllerArrpProfileArrayOutputWithContext(context.Background())
}

func (i WirelessControllerArrpProfileArray) ToWirelessControllerArrpProfileArrayOutputWithContext(ctx context.Context) WirelessControllerArrpProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerArrpProfileArrayOutput)
}

// WirelessControllerArrpProfileMapInput is an input type that accepts WirelessControllerArrpProfileMap and WirelessControllerArrpProfileMapOutput values.
// You can construct a concrete instance of `WirelessControllerArrpProfileMapInput` via:
//
//	WirelessControllerArrpProfileMap{ "key": WirelessControllerArrpProfileArgs{...} }
type WirelessControllerArrpProfileMapInput interface {
	pulumi.Input

	ToWirelessControllerArrpProfileMapOutput() WirelessControllerArrpProfileMapOutput
	ToWirelessControllerArrpProfileMapOutputWithContext(context.Context) WirelessControllerArrpProfileMapOutput
}

type WirelessControllerArrpProfileMap map[string]WirelessControllerArrpProfileInput

func (WirelessControllerArrpProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerArrpProfile)(nil)).Elem()
}

func (i WirelessControllerArrpProfileMap) ToWirelessControllerArrpProfileMapOutput() WirelessControllerArrpProfileMapOutput {
	return i.ToWirelessControllerArrpProfileMapOutputWithContext(context.Background())
}

func (i WirelessControllerArrpProfileMap) ToWirelessControllerArrpProfileMapOutputWithContext(ctx context.Context) WirelessControllerArrpProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerArrpProfileMapOutput)
}

type WirelessControllerArrpProfileOutput struct{ *pulumi.OutputState }

func (WirelessControllerArrpProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerArrpProfile)(nil)).Elem()
}

func (o WirelessControllerArrpProfileOutput) ToWirelessControllerArrpProfileOutput() WirelessControllerArrpProfileOutput {
	return o
}

func (o WirelessControllerArrpProfileOutput) ToWirelessControllerArrpProfileOutputWithContext(ctx context.Context) WirelessControllerArrpProfileOutput {
	return o
}

func (o WirelessControllerArrpProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerArrpProfileOutput) DarrpOptimize() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.DarrpOptimize }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) DarrpOptimizeSchedules() WirelessControllerArrpProfileDarrpOptimizeScheduleArrayOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) WirelessControllerArrpProfileDarrpOptimizeScheduleArrayOutput {
		return v.DarrpOptimizeSchedules
	}).(WirelessControllerArrpProfileDarrpOptimizeScheduleArrayOutput)
}

func (o WirelessControllerArrpProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerArrpProfileOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerArrpProfileOutput) IncludeDfsChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.IncludeDfsChannel }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) IncludeWeatherChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.IncludeWeatherChannel }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) MonitorPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.MonitorPeriod }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) OverrideDarrpOptimize() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.OverrideDarrpOptimize }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) SelectionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.SelectionPeriod }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdAp() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.ThresholdAp }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdChannelLoad() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.ThresholdChannelLoad }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdNoiseFloor() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.ThresholdNoiseFloor }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdRxErrors() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.ThresholdRxErrors }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdSpectralRssi() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringOutput { return v.ThresholdSpectralRssi }).(pulumi.StringOutput)
}

func (o WirelessControllerArrpProfileOutput) ThresholdTxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.ThresholdTxRetries }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightChannelLoad() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightChannelLoad }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightDfsChannel() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightDfsChannel }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightManagedAp() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightManagedAp }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightNoiseFloor() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightNoiseFloor }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightRogueAp() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightRogueAp }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightSpectralRssi() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightSpectralRssi }).(pulumi.IntOutput)
}

func (o WirelessControllerArrpProfileOutput) WeightWeatherChannel() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessControllerArrpProfile) pulumi.IntOutput { return v.WeightWeatherChannel }).(pulumi.IntOutput)
}

type WirelessControllerArrpProfileArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerArrpProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerArrpProfile)(nil)).Elem()
}

func (o WirelessControllerArrpProfileArrayOutput) ToWirelessControllerArrpProfileArrayOutput() WirelessControllerArrpProfileArrayOutput {
	return o
}

func (o WirelessControllerArrpProfileArrayOutput) ToWirelessControllerArrpProfileArrayOutputWithContext(ctx context.Context) WirelessControllerArrpProfileArrayOutput {
	return o
}

func (o WirelessControllerArrpProfileArrayOutput) Index(i pulumi.IntInput) WirelessControllerArrpProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerArrpProfile {
		return vs[0].([]*WirelessControllerArrpProfile)[vs[1].(int)]
	}).(WirelessControllerArrpProfileOutput)
}

type WirelessControllerArrpProfileMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerArrpProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerArrpProfile)(nil)).Elem()
}

func (o WirelessControllerArrpProfileMapOutput) ToWirelessControllerArrpProfileMapOutput() WirelessControllerArrpProfileMapOutput {
	return o
}

func (o WirelessControllerArrpProfileMapOutput) ToWirelessControllerArrpProfileMapOutputWithContext(ctx context.Context) WirelessControllerArrpProfileMapOutput {
	return o
}

func (o WirelessControllerArrpProfileMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerArrpProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerArrpProfile {
		return vs[0].(map[string]*WirelessControllerArrpProfile)[vs[1].(string)]
	}).(WirelessControllerArrpProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerArrpProfileInput)(nil)).Elem(), &WirelessControllerArrpProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerArrpProfileArrayInput)(nil)).Elem(), WirelessControllerArrpProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerArrpProfileMapInput)(nil)).Elem(), WirelessControllerArrpProfileMap{})
	pulumi.RegisterOutputType(WirelessControllerArrpProfileOutput{})
	pulumi.RegisterOutputType(WirelessControllerArrpProfileArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerArrpProfileMapOutput{})
}
