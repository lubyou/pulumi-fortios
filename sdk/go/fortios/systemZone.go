// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemZone struct {
	pulumi.CustomResourceState

	Description         pulumi.StringOutput            `pulumi:"description"`
	DynamicSortSubtable pulumi.StringPtrOutput         `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput         `pulumi:"getAllTables"`
	Interfaces          SystemZoneInterfaceArrayOutput `pulumi:"interfaces"`
	Intrazone           pulumi.StringOutput            `pulumi:"intrazone"`
	Name                pulumi.StringOutput            `pulumi:"name"`
	Taggings            SystemZoneTaggingArrayOutput   `pulumi:"taggings"`
	Vdomparam           pulumi.StringPtrOutput         `pulumi:"vdomparam"`
}

// NewSystemZone registers a new resource with the given unique name, arguments, and options.
func NewSystemZone(ctx *pulumi.Context,
	name string, args *SystemZoneArgs, opts ...pulumi.ResourceOption) (*SystemZone, error) {
	if args == nil {
		args = &SystemZoneArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemZone
	err := ctx.RegisterResource("fortios:index/systemZone:SystemZone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemZone gets an existing SystemZone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemZoneState, opts ...pulumi.ResourceOption) (*SystemZone, error) {
	var resource SystemZone
	err := ctx.ReadResource("fortios:index/systemZone:SystemZone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemZone resources.
type systemZoneState struct {
	Description         *string               `pulumi:"description"`
	DynamicSortSubtable *string               `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string               `pulumi:"getAllTables"`
	Interfaces          []SystemZoneInterface `pulumi:"interfaces"`
	Intrazone           *string               `pulumi:"intrazone"`
	Name                *string               `pulumi:"name"`
	Taggings            []SystemZoneTagging   `pulumi:"taggings"`
	Vdomparam           *string               `pulumi:"vdomparam"`
}

type SystemZoneState struct {
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Interfaces          SystemZoneInterfaceArrayInput
	Intrazone           pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Taggings            SystemZoneTaggingArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemZoneState)(nil)).Elem()
}

type systemZoneArgs struct {
	Description         *string               `pulumi:"description"`
	DynamicSortSubtable *string               `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string               `pulumi:"getAllTables"`
	Interfaces          []SystemZoneInterface `pulumi:"interfaces"`
	Intrazone           *string               `pulumi:"intrazone"`
	Name                *string               `pulumi:"name"`
	Taggings            []SystemZoneTagging   `pulumi:"taggings"`
	Vdomparam           *string               `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemZone resource.
type SystemZoneArgs struct {
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Interfaces          SystemZoneInterfaceArrayInput
	Intrazone           pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Taggings            SystemZoneTaggingArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemZoneArgs)(nil)).Elem()
}

type SystemZoneInput interface {
	pulumi.Input

	ToSystemZoneOutput() SystemZoneOutput
	ToSystemZoneOutputWithContext(ctx context.Context) SystemZoneOutput
}

func (*SystemZone) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemZone)(nil)).Elem()
}

func (i *SystemZone) ToSystemZoneOutput() SystemZoneOutput {
	return i.ToSystemZoneOutputWithContext(context.Background())
}

func (i *SystemZone) ToSystemZoneOutputWithContext(ctx context.Context) SystemZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneOutput)
}

// SystemZoneArrayInput is an input type that accepts SystemZoneArray and SystemZoneArrayOutput values.
// You can construct a concrete instance of `SystemZoneArrayInput` via:
//
//	SystemZoneArray{ SystemZoneArgs{...} }
type SystemZoneArrayInput interface {
	pulumi.Input

	ToSystemZoneArrayOutput() SystemZoneArrayOutput
	ToSystemZoneArrayOutputWithContext(context.Context) SystemZoneArrayOutput
}

type SystemZoneArray []SystemZoneInput

func (SystemZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemZone)(nil)).Elem()
}

func (i SystemZoneArray) ToSystemZoneArrayOutput() SystemZoneArrayOutput {
	return i.ToSystemZoneArrayOutputWithContext(context.Background())
}

func (i SystemZoneArray) ToSystemZoneArrayOutputWithContext(ctx context.Context) SystemZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneArrayOutput)
}

// SystemZoneMapInput is an input type that accepts SystemZoneMap and SystemZoneMapOutput values.
// You can construct a concrete instance of `SystemZoneMapInput` via:
//
//	SystemZoneMap{ "key": SystemZoneArgs{...} }
type SystemZoneMapInput interface {
	pulumi.Input

	ToSystemZoneMapOutput() SystemZoneMapOutput
	ToSystemZoneMapOutputWithContext(context.Context) SystemZoneMapOutput
}

type SystemZoneMap map[string]SystemZoneInput

func (SystemZoneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemZone)(nil)).Elem()
}

func (i SystemZoneMap) ToSystemZoneMapOutput() SystemZoneMapOutput {
	return i.ToSystemZoneMapOutputWithContext(context.Background())
}

func (i SystemZoneMap) ToSystemZoneMapOutputWithContext(ctx context.Context) SystemZoneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemZoneMapOutput)
}

type SystemZoneOutput struct{ *pulumi.OutputState }

func (SystemZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemZone)(nil)).Elem()
}

func (o SystemZoneOutput) ToSystemZoneOutput() SystemZoneOutput {
	return o
}

func (o SystemZoneOutput) ToSystemZoneOutputWithContext(ctx context.Context) SystemZoneOutput {
	return o
}

func (o SystemZoneOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SystemZoneOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemZoneOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemZoneOutput) Interfaces() SystemZoneInterfaceArrayOutput {
	return o.ApplyT(func(v *SystemZone) SystemZoneInterfaceArrayOutput { return v.Interfaces }).(SystemZoneInterfaceArrayOutput)
}

func (o SystemZoneOutput) Intrazone() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringOutput { return v.Intrazone }).(pulumi.StringOutput)
}

func (o SystemZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemZoneOutput) Taggings() SystemZoneTaggingArrayOutput {
	return o.ApplyT(func(v *SystemZone) SystemZoneTaggingArrayOutput { return v.Taggings }).(SystemZoneTaggingArrayOutput)
}

func (o SystemZoneOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemZone) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemZone)(nil)).Elem()
}

func (o SystemZoneArrayOutput) ToSystemZoneArrayOutput() SystemZoneArrayOutput {
	return o
}

func (o SystemZoneArrayOutput) ToSystemZoneArrayOutputWithContext(ctx context.Context) SystemZoneArrayOutput {
	return o
}

func (o SystemZoneArrayOutput) Index(i pulumi.IntInput) SystemZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemZone {
		return vs[0].([]*SystemZone)[vs[1].(int)]
	}).(SystemZoneOutput)
}

type SystemZoneMapOutput struct{ *pulumi.OutputState }

func (SystemZoneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemZone)(nil)).Elem()
}

func (o SystemZoneMapOutput) ToSystemZoneMapOutput() SystemZoneMapOutput {
	return o
}

func (o SystemZoneMapOutput) ToSystemZoneMapOutputWithContext(ctx context.Context) SystemZoneMapOutput {
	return o
}

func (o SystemZoneMapOutput) MapIndex(k pulumi.StringInput) SystemZoneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemZone {
		return vs[0].(map[string]*SystemZone)[vs[1].(string)]
	}).(SystemZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneInput)(nil)).Elem(), &SystemZone{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneArrayInput)(nil)).Elem(), SystemZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemZoneMapInput)(nil)).Elem(), SystemZoneMap{})
	pulumi.RegisterOutputType(SystemZoneOutput{})
	pulumi.RegisterOutputType(SystemZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemZoneMapOutput{})
}
