// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure network authentication type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWirelessControllerHotspot20AnqpNetworkAuthType(ctx, "trname", &fortios.WirelessControllerHotspot20AnqpNetworkAuthTypeArgs{
// 			AuthType: pulumi.String("acceptance-of-terms"),
// 			Url:      pulumi.String("www.example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// WirelessControllerHotspot20 AnqpNetworkAuthType can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20AnqpNetworkAuthType:WirelessControllerHotspot20AnqpNetworkAuthType labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20AnqpNetworkAuthType:WirelessControllerHotspot20AnqpNetworkAuthType labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerHotspot20AnqpNetworkAuthType struct {
	pulumi.CustomResourceState

	// Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
	AuthType pulumi.StringOutput `pulumi:"authType"`
	// Authentication type name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Redirect URL.
	Url pulumi.StringOutput `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerHotspot20AnqpNetworkAuthType registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20AnqpNetworkAuthType(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20AnqpNetworkAuthTypeArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20AnqpNetworkAuthType, error) {
	if args == nil {
		args = &WirelessControllerHotspot20AnqpNetworkAuthTypeArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20AnqpNetworkAuthType
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20AnqpNetworkAuthType:WirelessControllerHotspot20AnqpNetworkAuthType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20AnqpNetworkAuthType gets an existing WirelessControllerHotspot20AnqpNetworkAuthType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20AnqpNetworkAuthType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20AnqpNetworkAuthTypeState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20AnqpNetworkAuthType, error) {
	var resource WirelessControllerHotspot20AnqpNetworkAuthType
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20AnqpNetworkAuthType:WirelessControllerHotspot20AnqpNetworkAuthType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20AnqpNetworkAuthType resources.
type wirelessControllerHotspot20AnqpNetworkAuthTypeState struct {
	// Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
	AuthType *string `pulumi:"authType"`
	// Authentication type name.
	Name *string `pulumi:"name"`
	// Redirect URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeState struct {
	// Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
	AuthType pulumi.StringPtrInput
	// Authentication type name.
	Name pulumi.StringPtrInput
	// Redirect URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20AnqpNetworkAuthTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20AnqpNetworkAuthTypeState)(nil)).Elem()
}

type wirelessControllerHotspot20AnqpNetworkAuthTypeArgs struct {
	// Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
	AuthType *string `pulumi:"authType"`
	// Authentication type name.
	Name *string `pulumi:"name"`
	// Redirect URL.
	Url *string `pulumi:"url"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerHotspot20AnqpNetworkAuthType resource.
type WirelessControllerHotspot20AnqpNetworkAuthTypeArgs struct {
	// Network authentication type. Valid values: `acceptance-of-terms`, `online-enrollment`, `http-redirection`, `dns-redirection`.
	AuthType pulumi.StringPtrInput
	// Authentication type name.
	Name pulumi.StringPtrInput
	// Redirect URL.
	Url pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20AnqpNetworkAuthTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20AnqpNetworkAuthTypeArgs)(nil)).Elem()
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeOutput
	ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeOutput
}

func (*WirelessControllerHotspot20AnqpNetworkAuthType) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (i *WirelessControllerHotspot20AnqpNetworkAuthType) ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return i.ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20AnqpNetworkAuthType) ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20AnqpNetworkAuthTypeOutput)
}

// WirelessControllerHotspot20AnqpNetworkAuthTypeArrayInput is an input type that accepts WirelessControllerHotspot20AnqpNetworkAuthTypeArray and WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20AnqpNetworkAuthTypeArrayInput` via:
//
//          WirelessControllerHotspot20AnqpNetworkAuthTypeArray{ WirelessControllerHotspot20AnqpNetworkAuthTypeArgs{...} }
type WirelessControllerHotspot20AnqpNetworkAuthTypeArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput
	ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutputWithContext(context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeArray []WirelessControllerHotspot20AnqpNetworkAuthTypeInput

func (WirelessControllerHotspot20AnqpNetworkAuthTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (i WirelessControllerHotspot20AnqpNetworkAuthTypeArray) ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput {
	return i.ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20AnqpNetworkAuthTypeArray) ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput)
}

// WirelessControllerHotspot20AnqpNetworkAuthTypeMapInput is an input type that accepts WirelessControllerHotspot20AnqpNetworkAuthTypeMap and WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20AnqpNetworkAuthTypeMapInput` via:
//
//          WirelessControllerHotspot20AnqpNetworkAuthTypeMap{ "key": WirelessControllerHotspot20AnqpNetworkAuthTypeArgs{...} }
type WirelessControllerHotspot20AnqpNetworkAuthTypeMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput
	ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutputWithContext(context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeMap map[string]WirelessControllerHotspot20AnqpNetworkAuthTypeInput

func (WirelessControllerHotspot20AnqpNetworkAuthTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (i WirelessControllerHotspot20AnqpNetworkAuthTypeMap) ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput {
	return i.ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20AnqpNetworkAuthTypeMap) ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput)
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20AnqpNetworkAuthTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return o
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return o
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput {
	return o
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput {
	return o
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20AnqpNetworkAuthType {
		return vs[0].([]*WirelessControllerHotspot20AnqpNetworkAuthType)[vs[1].(int)]
	}).(WirelessControllerHotspot20AnqpNetworkAuthTypeOutput)
}

type WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20AnqpNetworkAuthType)(nil)).Elem()
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput() WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput {
	return o
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput) ToWirelessControllerHotspot20AnqpNetworkAuthTypeMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput {
	return o
}

func (o WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20AnqpNetworkAuthTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20AnqpNetworkAuthType {
		return vs[0].(map[string]*WirelessControllerHotspot20AnqpNetworkAuthType)[vs[1].(string)]
	}).(WirelessControllerHotspot20AnqpNetworkAuthTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20AnqpNetworkAuthTypeInput)(nil)).Elem(), &WirelessControllerHotspot20AnqpNetworkAuthType{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20AnqpNetworkAuthTypeArrayInput)(nil)).Elem(), WirelessControllerHotspot20AnqpNetworkAuthTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20AnqpNetworkAuthTypeMapInput)(nil)).Elem(), WirelessControllerHotspot20AnqpNetworkAuthTypeMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20AnqpNetworkAuthTypeOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20AnqpNetworkAuthTypeArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20AnqpNetworkAuthTypeMapOutput{})
}
