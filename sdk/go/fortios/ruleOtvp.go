// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RuleOtvp struct {
	pulumi.CustomResourceState

	Action              pulumi.StringOutput         `pulumi:"action"`
	Application         pulumi.StringOutput         `pulumi:"application"`
	Date                pulumi.IntOutput            `pulumi:"date"`
	DynamicSortSubtable pulumi.StringPtrOutput      `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput      `pulumi:"getAllTables"`
	Group               pulumi.StringOutput         `pulumi:"group"`
	Location            pulumi.StringOutput         `pulumi:"location"`
	Log                 pulumi.StringOutput         `pulumi:"log"`
	LogPacket           pulumi.StringOutput         `pulumi:"logPacket"`
	Metadatas           RuleOtvpMetadataArrayOutput `pulumi:"metadatas"`
	Name                pulumi.StringOutput         `pulumi:"name"`
	Os                  pulumi.StringOutput         `pulumi:"os"`
	Rev                 pulumi.IntOutput            `pulumi:"rev"`
	RuleId              pulumi.IntOutput            `pulumi:"ruleId"`
	Service             pulumi.StringOutput         `pulumi:"service"`
	Severity            pulumi.StringOutput         `pulumi:"severity"`
	Vdomparam           pulumi.StringPtrOutput      `pulumi:"vdomparam"`
}

// NewRuleOtvp registers a new resource with the given unique name, arguments, and options.
func NewRuleOtvp(ctx *pulumi.Context,
	name string, args *RuleOtvpArgs, opts ...pulumi.ResourceOption) (*RuleOtvp, error) {
	if args == nil {
		args = &RuleOtvpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleOtvp
	err := ctx.RegisterResource("fortios:index/ruleOtvp:RuleOtvp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleOtvp gets an existing RuleOtvp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleOtvp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleOtvpState, opts ...pulumi.ResourceOption) (*RuleOtvp, error) {
	var resource RuleOtvp
	err := ctx.ReadResource("fortios:index/ruleOtvp:RuleOtvp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleOtvp resources.
type ruleOtvpState struct {
	Action              *string            `pulumi:"action"`
	Application         *string            `pulumi:"application"`
	Date                *int               `pulumi:"date"`
	DynamicSortSubtable *string            `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string            `pulumi:"getAllTables"`
	Group               *string            `pulumi:"group"`
	Location            *string            `pulumi:"location"`
	Log                 *string            `pulumi:"log"`
	LogPacket           *string            `pulumi:"logPacket"`
	Metadatas           []RuleOtvpMetadata `pulumi:"metadatas"`
	Name                *string            `pulumi:"name"`
	Os                  *string            `pulumi:"os"`
	Rev                 *int               `pulumi:"rev"`
	RuleId              *int               `pulumi:"ruleId"`
	Service             *string            `pulumi:"service"`
	Severity            *string            `pulumi:"severity"`
	Vdomparam           *string            `pulumi:"vdomparam"`
}

type RuleOtvpState struct {
	Action              pulumi.StringPtrInput
	Application         pulumi.StringPtrInput
	Date                pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Group               pulumi.StringPtrInput
	Location            pulumi.StringPtrInput
	Log                 pulumi.StringPtrInput
	LogPacket           pulumi.StringPtrInput
	Metadatas           RuleOtvpMetadataArrayInput
	Name                pulumi.StringPtrInput
	Os                  pulumi.StringPtrInput
	Rev                 pulumi.IntPtrInput
	RuleId              pulumi.IntPtrInput
	Service             pulumi.StringPtrInput
	Severity            pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (RuleOtvpState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleOtvpState)(nil)).Elem()
}

type ruleOtvpArgs struct {
	Action              *string            `pulumi:"action"`
	Application         *string            `pulumi:"application"`
	Date                *int               `pulumi:"date"`
	DynamicSortSubtable *string            `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string            `pulumi:"getAllTables"`
	Group               *string            `pulumi:"group"`
	Location            *string            `pulumi:"location"`
	Log                 *string            `pulumi:"log"`
	LogPacket           *string            `pulumi:"logPacket"`
	Metadatas           []RuleOtvpMetadata `pulumi:"metadatas"`
	Name                *string            `pulumi:"name"`
	Os                  *string            `pulumi:"os"`
	Rev                 *int               `pulumi:"rev"`
	RuleId              *int               `pulumi:"ruleId"`
	Service             *string            `pulumi:"service"`
	Severity            *string            `pulumi:"severity"`
	Vdomparam           *string            `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RuleOtvp resource.
type RuleOtvpArgs struct {
	Action              pulumi.StringPtrInput
	Application         pulumi.StringPtrInput
	Date                pulumi.IntPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Group               pulumi.StringPtrInput
	Location            pulumi.StringPtrInput
	Log                 pulumi.StringPtrInput
	LogPacket           pulumi.StringPtrInput
	Metadatas           RuleOtvpMetadataArrayInput
	Name                pulumi.StringPtrInput
	Os                  pulumi.StringPtrInput
	Rev                 pulumi.IntPtrInput
	RuleId              pulumi.IntPtrInput
	Service             pulumi.StringPtrInput
	Severity            pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (RuleOtvpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleOtvpArgs)(nil)).Elem()
}

type RuleOtvpInput interface {
	pulumi.Input

	ToRuleOtvpOutput() RuleOtvpOutput
	ToRuleOtvpOutputWithContext(ctx context.Context) RuleOtvpOutput
}

func (*RuleOtvp) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleOtvp)(nil)).Elem()
}

func (i *RuleOtvp) ToRuleOtvpOutput() RuleOtvpOutput {
	return i.ToRuleOtvpOutputWithContext(context.Background())
}

func (i *RuleOtvp) ToRuleOtvpOutputWithContext(ctx context.Context) RuleOtvpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtvpOutput)
}

// RuleOtvpArrayInput is an input type that accepts RuleOtvpArray and RuleOtvpArrayOutput values.
// You can construct a concrete instance of `RuleOtvpArrayInput` via:
//
//	RuleOtvpArray{ RuleOtvpArgs{...} }
type RuleOtvpArrayInput interface {
	pulumi.Input

	ToRuleOtvpArrayOutput() RuleOtvpArrayOutput
	ToRuleOtvpArrayOutputWithContext(context.Context) RuleOtvpArrayOutput
}

type RuleOtvpArray []RuleOtvpInput

func (RuleOtvpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleOtvp)(nil)).Elem()
}

func (i RuleOtvpArray) ToRuleOtvpArrayOutput() RuleOtvpArrayOutput {
	return i.ToRuleOtvpArrayOutputWithContext(context.Background())
}

func (i RuleOtvpArray) ToRuleOtvpArrayOutputWithContext(ctx context.Context) RuleOtvpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtvpArrayOutput)
}

// RuleOtvpMapInput is an input type that accepts RuleOtvpMap and RuleOtvpMapOutput values.
// You can construct a concrete instance of `RuleOtvpMapInput` via:
//
//	RuleOtvpMap{ "key": RuleOtvpArgs{...} }
type RuleOtvpMapInput interface {
	pulumi.Input

	ToRuleOtvpMapOutput() RuleOtvpMapOutput
	ToRuleOtvpMapOutputWithContext(context.Context) RuleOtvpMapOutput
}

type RuleOtvpMap map[string]RuleOtvpInput

func (RuleOtvpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleOtvp)(nil)).Elem()
}

func (i RuleOtvpMap) ToRuleOtvpMapOutput() RuleOtvpMapOutput {
	return i.ToRuleOtvpMapOutputWithContext(context.Background())
}

func (i RuleOtvpMap) ToRuleOtvpMapOutputWithContext(ctx context.Context) RuleOtvpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtvpMapOutput)
}

type RuleOtvpOutput struct{ *pulumi.OutputState }

func (RuleOtvpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleOtvp)(nil)).Elem()
}

func (o RuleOtvpOutput) ToRuleOtvpOutput() RuleOtvpOutput {
	return o
}

func (o RuleOtvpOutput) ToRuleOtvpOutputWithContext(ctx context.Context) RuleOtvpOutput {
	return o
}

func (o RuleOtvpOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Date() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.IntOutput { return v.Date }).(pulumi.IntOutput)
}

func (o RuleOtvpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o RuleOtvpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o RuleOtvpOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) LogPacket() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.LogPacket }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Metadatas() RuleOtvpMetadataArrayOutput {
	return o.ApplyT(func(v *RuleOtvp) RuleOtvpMetadataArrayOutput { return v.Metadatas }).(RuleOtvpMetadataArrayOutput)
}

func (o RuleOtvpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Rev() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.IntOutput { return v.Rev }).(pulumi.IntOutput)
}

func (o RuleOtvpOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

func (o RuleOtvpOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o RuleOtvpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleOtvp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type RuleOtvpArrayOutput struct{ *pulumi.OutputState }

func (RuleOtvpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleOtvp)(nil)).Elem()
}

func (o RuleOtvpArrayOutput) ToRuleOtvpArrayOutput() RuleOtvpArrayOutput {
	return o
}

func (o RuleOtvpArrayOutput) ToRuleOtvpArrayOutputWithContext(ctx context.Context) RuleOtvpArrayOutput {
	return o
}

func (o RuleOtvpArrayOutput) Index(i pulumi.IntInput) RuleOtvpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleOtvp {
		return vs[0].([]*RuleOtvp)[vs[1].(int)]
	}).(RuleOtvpOutput)
}

type RuleOtvpMapOutput struct{ *pulumi.OutputState }

func (RuleOtvpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleOtvp)(nil)).Elem()
}

func (o RuleOtvpMapOutput) ToRuleOtvpMapOutput() RuleOtvpMapOutput {
	return o
}

func (o RuleOtvpMapOutput) ToRuleOtvpMapOutputWithContext(ctx context.Context) RuleOtvpMapOutput {
	return o
}

func (o RuleOtvpMapOutput) MapIndex(k pulumi.StringInput) RuleOtvpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleOtvp {
		return vs[0].(map[string]*RuleOtvp)[vs[1].(string)]
	}).(RuleOtvpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtvpInput)(nil)).Elem(), &RuleOtvp{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtvpArrayInput)(nil)).Elem(), RuleOtvpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtvpMapInput)(nil)).Elem(), RuleOtvpMap{})
	pulumi.RegisterOutputType(RuleOtvpOutput{})
	pulumi.RegisterOutputType(RuleOtvpArrayOutput{})
	pulumi.RegisterOutputType(RuleOtvpMapOutput{})
}
