// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Global FortiAnalyzer Cloud settings.
//
// ## Import
//
// LogFortianalyzerCloud Setting can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/logFortianalyzerCloudSetting:LogFortianalyzerCloudSetting labelname LogFortianalyzerCloudSetting
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type LogFortianalyzerCloudSetting struct {
	pulumi.CustomResourceState

	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringOutput `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntOutput `pulumi:"connTimeout"`
	// Configure the level of SSL protection for secure communication with FortiAnalyzer. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringOutput `pulumi:"encAlgorithm"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringOutput `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringOutput `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntOutput `pulumi:"maxLogRate"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntOutput `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntOutput `pulumi:"monitorKeepalivePeriod"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringOutput `pulumi:"priority"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringOutput `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringOutput `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringOutput `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringOutput `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringOutput `pulumi:"uploadTime"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLogFortianalyzerCloudSetting registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzerCloudSetting(ctx *pulumi.Context,
	name string, args *LogFortianalyzerCloudSettingArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudSetting, error) {
	if args == nil {
		args = &LogFortianalyzerCloudSettingArgs{}
	}

	var resource LogFortianalyzerCloudSetting
	err := ctx.RegisterResource("fortios:index/logFortianalyzerCloudSetting:LogFortianalyzerCloudSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzerCloudSetting gets an existing LogFortianalyzerCloudSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzerCloudSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzerCloudSettingState, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudSetting, error) {
	var resource LogFortianalyzerCloudSetting
	err := ctx.ReadResource("fortios:index/logFortianalyzerCloudSetting:LogFortianalyzerCloudSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzerCloudSetting resources.
type logFortianalyzerCloudSettingState struct {
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig *string `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate *string `pulumi:"certificate"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout *int `pulumi:"connTimeout"`
	// Configure the level of SSL protection for secure communication with FortiAnalyzer. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm *string `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive *string `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate *int `pulumi:"maxLogRate"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod *int `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod *int `pulumi:"monitorKeepalivePeriod"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority *string `pulumi:"priority"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay *string `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval *string `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption *string `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime *string `pulumi:"uploadTime"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type LogFortianalyzerCloudSettingState struct {
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringPtrInput
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringPtrInput
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntPtrInput
	// Configure the level of SSL protection for secure communication with FortiAnalyzer. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringPtrInput
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntPtrInput
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntPtrInput
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringPtrInput
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringPtrInput
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringPtrInput
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringPtrInput
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LogFortianalyzerCloudSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudSettingState)(nil)).Elem()
}

type logFortianalyzerCloudSettingArgs struct {
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig *string `pulumi:"accessConfig"`
	// Certificate used to communicate with FortiAnalyzer.
	Certificate *string `pulumi:"certificate"`
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout *int `pulumi:"connTimeout"`
	// Configure the level of SSL protection for secure communication with FortiAnalyzer. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm *string `pulumi:"hmacAlgorithm"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive *string `pulumi:"ipsArchive"`
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate *int `pulumi:"maxLogRate"`
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod *int `pulumi:"monitorFailureRetryPeriod"`
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod *int `pulumi:"monitorKeepalivePeriod"`
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority *string `pulumi:"priority"`
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Day of week (month) to upload logs.
	UploadDay *string `pulumi:"uploadDay"`
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval *string `pulumi:"uploadInterval"`
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption *string `pulumi:"uploadOption"`
	// Time to upload logs (hh:mm).
	UploadTime *string `pulumi:"uploadTime"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogFortianalyzerCloudSetting resource.
type LogFortianalyzerCloudSettingArgs struct {
	// Enable/disable FortiAnalyzer access to configuration and data. Valid values: `enable`, `disable`.
	AccessConfig pulumi.StringPtrInput
	// Certificate used to communicate with FortiAnalyzer.
	Certificate pulumi.StringPtrInput
	// FortiAnalyzer connection time-out in seconds (for status and log buffer).
	ConnTimeout pulumi.IntPtrInput
	// Configure the level of SSL protection for secure communication with FortiAnalyzer. Valid values: `high-medium`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// FortiAnalyzer IPsec tunnel HMAC algorithm. Valid values: `sha256`, `sha1`.
	HmacAlgorithm pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Enable/disable IPS packet archive logging. Valid values: `enable`, `disable`.
	IpsArchive pulumi.StringPtrInput
	// FortiAnalyzer maximum log rate in MBps (0 = unlimited).
	MaxLogRate pulumi.IntPtrInput
	// Time between FortiAnalyzer connection retries in seconds (for status and log buffer).
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	// Time between OFTP keepalives in seconds (for status and log buffer).
	MonitorKeepalivePeriod pulumi.IntPtrInput
	// Set log transmission priority. Valid values: `default`, `low`.
	Priority pulumi.StringPtrInput
	// Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable logging to FortiAnalyzer. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Day of week (month) to upload logs.
	UploadDay pulumi.StringPtrInput
	// Frequency to upload log files to FortiAnalyzer. Valid values: `daily`, `weekly`, `monthly`.
	UploadInterval pulumi.StringPtrInput
	// Enable/disable logging to hard disk and then uploading to FortiAnalyzer. Valid values: `store-and-upload`, `realtime`, `1-minute`, `5-minute`.
	UploadOption pulumi.StringPtrInput
	// Time to upload logs (hh:mm).
	UploadTime pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (LogFortianalyzerCloudSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudSettingArgs)(nil)).Elem()
}

type LogFortianalyzerCloudSettingInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudSettingOutput() LogFortianalyzerCloudSettingOutput
	ToLogFortianalyzerCloudSettingOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingOutput
}

func (*LogFortianalyzerCloudSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortianalyzerCloudSetting)(nil))
}

func (i *LogFortianalyzerCloudSetting) ToLogFortianalyzerCloudSettingOutput() LogFortianalyzerCloudSettingOutput {
	return i.ToLogFortianalyzerCloudSettingOutputWithContext(context.Background())
}

func (i *LogFortianalyzerCloudSetting) ToLogFortianalyzerCloudSettingOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudSettingOutput)
}

func (i *LogFortianalyzerCloudSetting) ToLogFortianalyzerCloudSettingPtrOutput() LogFortianalyzerCloudSettingPtrOutput {
	return i.ToLogFortianalyzerCloudSettingPtrOutputWithContext(context.Background())
}

func (i *LogFortianalyzerCloudSetting) ToLogFortianalyzerCloudSettingPtrOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudSettingPtrOutput)
}

type LogFortianalyzerCloudSettingPtrInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudSettingPtrOutput() LogFortianalyzerCloudSettingPtrOutput
	ToLogFortianalyzerCloudSettingPtrOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingPtrOutput
}

type logFortianalyzerCloudSettingPtrType LogFortianalyzerCloudSettingArgs

func (*logFortianalyzerCloudSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudSetting)(nil))
}

func (i *logFortianalyzerCloudSettingPtrType) ToLogFortianalyzerCloudSettingPtrOutput() LogFortianalyzerCloudSettingPtrOutput {
	return i.ToLogFortianalyzerCloudSettingPtrOutputWithContext(context.Background())
}

func (i *logFortianalyzerCloudSettingPtrType) ToLogFortianalyzerCloudSettingPtrOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudSettingPtrOutput)
}

// LogFortianalyzerCloudSettingArrayInput is an input type that accepts LogFortianalyzerCloudSettingArray and LogFortianalyzerCloudSettingArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudSettingArrayInput` via:
//
//          LogFortianalyzerCloudSettingArray{ LogFortianalyzerCloudSettingArgs{...} }
type LogFortianalyzerCloudSettingArrayInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudSettingArrayOutput() LogFortianalyzerCloudSettingArrayOutput
	ToLogFortianalyzerCloudSettingArrayOutputWithContext(context.Context) LogFortianalyzerCloudSettingArrayOutput
}

type LogFortianalyzerCloudSettingArray []LogFortianalyzerCloudSettingInput

func (LogFortianalyzerCloudSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*LogFortianalyzerCloudSetting)(nil))
}

func (i LogFortianalyzerCloudSettingArray) ToLogFortianalyzerCloudSettingArrayOutput() LogFortianalyzerCloudSettingArrayOutput {
	return i.ToLogFortianalyzerCloudSettingArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudSettingArray) ToLogFortianalyzerCloudSettingArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudSettingArrayOutput)
}

// LogFortianalyzerCloudSettingMapInput is an input type that accepts LogFortianalyzerCloudSettingMap and LogFortianalyzerCloudSettingMapOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudSettingMapInput` via:
//
//          LogFortianalyzerCloudSettingMap{ "key": LogFortianalyzerCloudSettingArgs{...} }
type LogFortianalyzerCloudSettingMapInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudSettingMapOutput() LogFortianalyzerCloudSettingMapOutput
	ToLogFortianalyzerCloudSettingMapOutputWithContext(context.Context) LogFortianalyzerCloudSettingMapOutput
}

type LogFortianalyzerCloudSettingMap map[string]LogFortianalyzerCloudSettingInput

func (LogFortianalyzerCloudSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*LogFortianalyzerCloudSetting)(nil))
}

func (i LogFortianalyzerCloudSettingMap) ToLogFortianalyzerCloudSettingMapOutput() LogFortianalyzerCloudSettingMapOutput {
	return i.ToLogFortianalyzerCloudSettingMapOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudSettingMap) ToLogFortianalyzerCloudSettingMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudSettingMapOutput)
}

type LogFortianalyzerCloudSettingOutput struct {
	*pulumi.OutputState
}

func (LogFortianalyzerCloudSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortianalyzerCloudSetting)(nil))
}

func (o LogFortianalyzerCloudSettingOutput) ToLogFortianalyzerCloudSettingOutput() LogFortianalyzerCloudSettingOutput {
	return o
}

func (o LogFortianalyzerCloudSettingOutput) ToLogFortianalyzerCloudSettingOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingOutput {
	return o
}

func (o LogFortianalyzerCloudSettingOutput) ToLogFortianalyzerCloudSettingPtrOutput() LogFortianalyzerCloudSettingPtrOutput {
	return o.ToLogFortianalyzerCloudSettingPtrOutputWithContext(context.Background())
}

func (o LogFortianalyzerCloudSettingOutput) ToLogFortianalyzerCloudSettingPtrOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingPtrOutput {
	return o.ApplyT(func(v LogFortianalyzerCloudSetting) *LogFortianalyzerCloudSetting {
		return &v
	}).(LogFortianalyzerCloudSettingPtrOutput)
}

type LogFortianalyzerCloudSettingPtrOutput struct {
	*pulumi.OutputState
}

func (LogFortianalyzerCloudSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudSetting)(nil))
}

func (o LogFortianalyzerCloudSettingPtrOutput) ToLogFortianalyzerCloudSettingPtrOutput() LogFortianalyzerCloudSettingPtrOutput {
	return o
}

func (o LogFortianalyzerCloudSettingPtrOutput) ToLogFortianalyzerCloudSettingPtrOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingPtrOutput {
	return o
}

type LogFortianalyzerCloudSettingArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortianalyzerCloudSetting)(nil))
}

func (o LogFortianalyzerCloudSettingArrayOutput) ToLogFortianalyzerCloudSettingArrayOutput() LogFortianalyzerCloudSettingArrayOutput {
	return o
}

func (o LogFortianalyzerCloudSettingArrayOutput) ToLogFortianalyzerCloudSettingArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingArrayOutput {
	return o
}

func (o LogFortianalyzerCloudSettingArrayOutput) Index(i pulumi.IntInput) LogFortianalyzerCloudSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogFortianalyzerCloudSetting {
		return vs[0].([]LogFortianalyzerCloudSetting)[vs[1].(int)]
	}).(LogFortianalyzerCloudSettingOutput)
}

type LogFortianalyzerCloudSettingMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LogFortianalyzerCloudSetting)(nil))
}

func (o LogFortianalyzerCloudSettingMapOutput) ToLogFortianalyzerCloudSettingMapOutput() LogFortianalyzerCloudSettingMapOutput {
	return o
}

func (o LogFortianalyzerCloudSettingMapOutput) ToLogFortianalyzerCloudSettingMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudSettingMapOutput {
	return o
}

func (o LogFortianalyzerCloudSettingMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzerCloudSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LogFortianalyzerCloudSetting {
		return vs[0].(map[string]LogFortianalyzerCloudSetting)[vs[1].(string)]
	}).(LogFortianalyzerCloudSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(LogFortianalyzerCloudSettingOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudSettingPtrOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudSettingArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudSettingMapOutput{})
}
