// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerStpSettings struct {
	pulumi.CustomResourceState

	ForwardTime  pulumi.IntOutput       `pulumi:"forwardTime"`
	HelloTime    pulumi.IntOutput       `pulumi:"helloTime"`
	MaxAge       pulumi.IntOutput       `pulumi:"maxAge"`
	MaxHops      pulumi.IntOutput       `pulumi:"maxHops"`
	Name         pulumi.StringOutput    `pulumi:"name"`
	PendingTimer pulumi.IntOutput       `pulumi:"pendingTimer"`
	Revision     pulumi.IntOutput       `pulumi:"revision"`
	Status       pulumi.StringOutput    `pulumi:"status"`
	Vdomparam    pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerStpSettings registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerStpSettings(ctx *pulumi.Context,
	name string, args *SwitchControllerStpSettingsArgs, opts ...pulumi.ResourceOption) (*SwitchControllerStpSettings, error) {
	if args == nil {
		args = &SwitchControllerStpSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerStpSettings
	err := ctx.RegisterResource("fortios:index/switchControllerStpSettings:SwitchControllerStpSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerStpSettings gets an existing SwitchControllerStpSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerStpSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerStpSettingsState, opts ...pulumi.ResourceOption) (*SwitchControllerStpSettings, error) {
	var resource SwitchControllerStpSettings
	err := ctx.ReadResource("fortios:index/switchControllerStpSettings:SwitchControllerStpSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerStpSettings resources.
type switchControllerStpSettingsState struct {
	ForwardTime  *int    `pulumi:"forwardTime"`
	HelloTime    *int    `pulumi:"helloTime"`
	MaxAge       *int    `pulumi:"maxAge"`
	MaxHops      *int    `pulumi:"maxHops"`
	Name         *string `pulumi:"name"`
	PendingTimer *int    `pulumi:"pendingTimer"`
	Revision     *int    `pulumi:"revision"`
	Status       *string `pulumi:"status"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

type SwitchControllerStpSettingsState struct {
	ForwardTime  pulumi.IntPtrInput
	HelloTime    pulumi.IntPtrInput
	MaxAge       pulumi.IntPtrInput
	MaxHops      pulumi.IntPtrInput
	Name         pulumi.StringPtrInput
	PendingTimer pulumi.IntPtrInput
	Revision     pulumi.IntPtrInput
	Status       pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (SwitchControllerStpSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerStpSettingsState)(nil)).Elem()
}

type switchControllerStpSettingsArgs struct {
	ForwardTime  *int    `pulumi:"forwardTime"`
	HelloTime    *int    `pulumi:"helloTime"`
	MaxAge       *int    `pulumi:"maxAge"`
	MaxHops      *int    `pulumi:"maxHops"`
	Name         *string `pulumi:"name"`
	PendingTimer *int    `pulumi:"pendingTimer"`
	Revision     *int    `pulumi:"revision"`
	Status       *string `pulumi:"status"`
	Vdomparam    *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerStpSettings resource.
type SwitchControllerStpSettingsArgs struct {
	ForwardTime  pulumi.IntPtrInput
	HelloTime    pulumi.IntPtrInput
	MaxAge       pulumi.IntPtrInput
	MaxHops      pulumi.IntPtrInput
	Name         pulumi.StringPtrInput
	PendingTimer pulumi.IntPtrInput
	Revision     pulumi.IntPtrInput
	Status       pulumi.StringPtrInput
	Vdomparam    pulumi.StringPtrInput
}

func (SwitchControllerStpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerStpSettingsArgs)(nil)).Elem()
}

type SwitchControllerStpSettingsInput interface {
	pulumi.Input

	ToSwitchControllerStpSettingsOutput() SwitchControllerStpSettingsOutput
	ToSwitchControllerStpSettingsOutputWithContext(ctx context.Context) SwitchControllerStpSettingsOutput
}

func (*SwitchControllerStpSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerStpSettings)(nil)).Elem()
}

func (i *SwitchControllerStpSettings) ToSwitchControllerStpSettingsOutput() SwitchControllerStpSettingsOutput {
	return i.ToSwitchControllerStpSettingsOutputWithContext(context.Background())
}

func (i *SwitchControllerStpSettings) ToSwitchControllerStpSettingsOutputWithContext(ctx context.Context) SwitchControllerStpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerStpSettingsOutput)
}

// SwitchControllerStpSettingsArrayInput is an input type that accepts SwitchControllerStpSettingsArray and SwitchControllerStpSettingsArrayOutput values.
// You can construct a concrete instance of `SwitchControllerStpSettingsArrayInput` via:
//
//	SwitchControllerStpSettingsArray{ SwitchControllerStpSettingsArgs{...} }
type SwitchControllerStpSettingsArrayInput interface {
	pulumi.Input

	ToSwitchControllerStpSettingsArrayOutput() SwitchControllerStpSettingsArrayOutput
	ToSwitchControllerStpSettingsArrayOutputWithContext(context.Context) SwitchControllerStpSettingsArrayOutput
}

type SwitchControllerStpSettingsArray []SwitchControllerStpSettingsInput

func (SwitchControllerStpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerStpSettings)(nil)).Elem()
}

func (i SwitchControllerStpSettingsArray) ToSwitchControllerStpSettingsArrayOutput() SwitchControllerStpSettingsArrayOutput {
	return i.ToSwitchControllerStpSettingsArrayOutputWithContext(context.Background())
}

func (i SwitchControllerStpSettingsArray) ToSwitchControllerStpSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerStpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerStpSettingsArrayOutput)
}

// SwitchControllerStpSettingsMapInput is an input type that accepts SwitchControllerStpSettingsMap and SwitchControllerStpSettingsMapOutput values.
// You can construct a concrete instance of `SwitchControllerStpSettingsMapInput` via:
//
//	SwitchControllerStpSettingsMap{ "key": SwitchControllerStpSettingsArgs{...} }
type SwitchControllerStpSettingsMapInput interface {
	pulumi.Input

	ToSwitchControllerStpSettingsMapOutput() SwitchControllerStpSettingsMapOutput
	ToSwitchControllerStpSettingsMapOutputWithContext(context.Context) SwitchControllerStpSettingsMapOutput
}

type SwitchControllerStpSettingsMap map[string]SwitchControllerStpSettingsInput

func (SwitchControllerStpSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerStpSettings)(nil)).Elem()
}

func (i SwitchControllerStpSettingsMap) ToSwitchControllerStpSettingsMapOutput() SwitchControllerStpSettingsMapOutput {
	return i.ToSwitchControllerStpSettingsMapOutputWithContext(context.Background())
}

func (i SwitchControllerStpSettingsMap) ToSwitchControllerStpSettingsMapOutputWithContext(ctx context.Context) SwitchControllerStpSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerStpSettingsMapOutput)
}

type SwitchControllerStpSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerStpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerStpSettings)(nil)).Elem()
}

func (o SwitchControllerStpSettingsOutput) ToSwitchControllerStpSettingsOutput() SwitchControllerStpSettingsOutput {
	return o
}

func (o SwitchControllerStpSettingsOutput) ToSwitchControllerStpSettingsOutputWithContext(ctx context.Context) SwitchControllerStpSettingsOutput {
	return o
}

func (o SwitchControllerStpSettingsOutput) ForwardTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.ForwardTime }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) HelloTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.HelloTime }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) MaxAge() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.MaxAge }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) MaxHops() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.MaxHops }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerStpSettingsOutput) PendingTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.PendingTimer }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.IntOutput { return v.Revision }).(pulumi.IntOutput)
}

func (o SwitchControllerStpSettingsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SwitchControllerStpSettingsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerStpSettings) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerStpSettingsArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerStpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerStpSettings)(nil)).Elem()
}

func (o SwitchControllerStpSettingsArrayOutput) ToSwitchControllerStpSettingsArrayOutput() SwitchControllerStpSettingsArrayOutput {
	return o
}

func (o SwitchControllerStpSettingsArrayOutput) ToSwitchControllerStpSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerStpSettingsArrayOutput {
	return o
}

func (o SwitchControllerStpSettingsArrayOutput) Index(i pulumi.IntInput) SwitchControllerStpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerStpSettings {
		return vs[0].([]*SwitchControllerStpSettings)[vs[1].(int)]
	}).(SwitchControllerStpSettingsOutput)
}

type SwitchControllerStpSettingsMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerStpSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerStpSettings)(nil)).Elem()
}

func (o SwitchControllerStpSettingsMapOutput) ToSwitchControllerStpSettingsMapOutput() SwitchControllerStpSettingsMapOutput {
	return o
}

func (o SwitchControllerStpSettingsMapOutput) ToSwitchControllerStpSettingsMapOutputWithContext(ctx context.Context) SwitchControllerStpSettingsMapOutput {
	return o
}

func (o SwitchControllerStpSettingsMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerStpSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerStpSettings {
		return vs[0].(map[string]*SwitchControllerStpSettings)[vs[1].(string)]
	}).(SwitchControllerStpSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerStpSettingsInput)(nil)).Elem(), &SwitchControllerStpSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerStpSettingsArrayInput)(nil)).Elem(), SwitchControllerStpSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerStpSettingsMapInput)(nil)).Elem(), SwitchControllerStpSettingsMap{})
	pulumi.RegisterOutputType(SwitchControllerStpSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerStpSettingsArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerStpSettingsMapOutput{})
}
