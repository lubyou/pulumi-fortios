// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallPolicyOldvSeq struct {
	pulumi.CustomResourceState

	AlterPosition        pulumi.StringOutput                             `pulumi:"alterPosition"`
	Comment              pulumi.StringPtrOutput                          `pulumi:"comment"`
	EnableStateChecking  pulumi.BoolPtrOutput                            `pulumi:"enableStateChecking"`
	PolicyDstId          pulumi.IntOutput                                `pulumi:"policyDstId"`
	PolicySrcId          pulumi.IntOutput                                `pulumi:"policySrcId"`
	StatePolicyLists     FirewallPolicyOldvSeqStatePolicyListArrayOutput `pulumi:"statePolicyLists"`
	StatePolicySrcdstPos pulumi.StringPtrOutput                          `pulumi:"statePolicySrcdstPos"`
	Vdomparam            pulumi.StringPtrOutput                          `pulumi:"vdomparam"`
}

// NewFirewallPolicyOldvSeq registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicyOldvSeq(ctx *pulumi.Context,
	name string, args *FirewallPolicyOldvSeqArgs, opts ...pulumi.ResourceOption) (*FirewallPolicyOldvSeq, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlterPosition == nil {
		return nil, errors.New("invalid value for required argument 'AlterPosition'")
	}
	if args.PolicyDstId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDstId'")
	}
	if args.PolicySrcId == nil {
		return nil, errors.New("invalid value for required argument 'PolicySrcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicyOldvSeq
	err := ctx.RegisterResource("fortios:index/firewallPolicyOldvSeq:FirewallPolicyOldvSeq", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicyOldvSeq gets an existing FirewallPolicyOldvSeq resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicyOldvSeq(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyOldvSeqState, opts ...pulumi.ResourceOption) (*FirewallPolicyOldvSeq, error) {
	var resource FirewallPolicyOldvSeq
	err := ctx.ReadResource("fortios:index/firewallPolicyOldvSeq:FirewallPolicyOldvSeq", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicyOldvSeq resources.
type firewallPolicyOldvSeqState struct {
	AlterPosition        *string                                `pulumi:"alterPosition"`
	Comment              *string                                `pulumi:"comment"`
	EnableStateChecking  *bool                                  `pulumi:"enableStateChecking"`
	PolicyDstId          *int                                   `pulumi:"policyDstId"`
	PolicySrcId          *int                                   `pulumi:"policySrcId"`
	StatePolicyLists     []FirewallPolicyOldvSeqStatePolicyList `pulumi:"statePolicyLists"`
	StatePolicySrcdstPos *string                                `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string                                `pulumi:"vdomparam"`
}

type FirewallPolicyOldvSeqState struct {
	AlterPosition        pulumi.StringPtrInput
	Comment              pulumi.StringPtrInput
	EnableStateChecking  pulumi.BoolPtrInput
	PolicyDstId          pulumi.IntPtrInput
	PolicySrcId          pulumi.IntPtrInput
	StatePolicyLists     FirewallPolicyOldvSeqStatePolicyListArrayInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicyOldvSeqState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyOldvSeqState)(nil)).Elem()
}

type firewallPolicyOldvSeqArgs struct {
	AlterPosition        string  `pulumi:"alterPosition"`
	Comment              *string `pulumi:"comment"`
	EnableStateChecking  *bool   `pulumi:"enableStateChecking"`
	PolicyDstId          int     `pulumi:"policyDstId"`
	PolicySrcId          int     `pulumi:"policySrcId"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallPolicyOldvSeq resource.
type FirewallPolicyOldvSeqArgs struct {
	AlterPosition        pulumi.StringInput
	Comment              pulumi.StringPtrInput
	EnableStateChecking  pulumi.BoolPtrInput
	PolicyDstId          pulumi.IntInput
	PolicySrcId          pulumi.IntInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicyOldvSeqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyOldvSeqArgs)(nil)).Elem()
}

type FirewallPolicyOldvSeqInput interface {
	pulumi.Input

	ToFirewallPolicyOldvSeqOutput() FirewallPolicyOldvSeqOutput
	ToFirewallPolicyOldvSeqOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqOutput
}

func (*FirewallPolicyOldvSeq) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyOldvSeq)(nil)).Elem()
}

func (i *FirewallPolicyOldvSeq) ToFirewallPolicyOldvSeqOutput() FirewallPolicyOldvSeqOutput {
	return i.ToFirewallPolicyOldvSeqOutputWithContext(context.Background())
}

func (i *FirewallPolicyOldvSeq) ToFirewallPolicyOldvSeqOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyOldvSeqOutput)
}

// FirewallPolicyOldvSeqArrayInput is an input type that accepts FirewallPolicyOldvSeqArray and FirewallPolicyOldvSeqArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyOldvSeqArrayInput` via:
//
//	FirewallPolicyOldvSeqArray{ FirewallPolicyOldvSeqArgs{...} }
type FirewallPolicyOldvSeqArrayInput interface {
	pulumi.Input

	ToFirewallPolicyOldvSeqArrayOutput() FirewallPolicyOldvSeqArrayOutput
	ToFirewallPolicyOldvSeqArrayOutputWithContext(context.Context) FirewallPolicyOldvSeqArrayOutput
}

type FirewallPolicyOldvSeqArray []FirewallPolicyOldvSeqInput

func (FirewallPolicyOldvSeqArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicyOldvSeq)(nil)).Elem()
}

func (i FirewallPolicyOldvSeqArray) ToFirewallPolicyOldvSeqArrayOutput() FirewallPolicyOldvSeqArrayOutput {
	return i.ToFirewallPolicyOldvSeqArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyOldvSeqArray) ToFirewallPolicyOldvSeqArrayOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyOldvSeqArrayOutput)
}

// FirewallPolicyOldvSeqMapInput is an input type that accepts FirewallPolicyOldvSeqMap and FirewallPolicyOldvSeqMapOutput values.
// You can construct a concrete instance of `FirewallPolicyOldvSeqMapInput` via:
//
//	FirewallPolicyOldvSeqMap{ "key": FirewallPolicyOldvSeqArgs{...} }
type FirewallPolicyOldvSeqMapInput interface {
	pulumi.Input

	ToFirewallPolicyOldvSeqMapOutput() FirewallPolicyOldvSeqMapOutput
	ToFirewallPolicyOldvSeqMapOutputWithContext(context.Context) FirewallPolicyOldvSeqMapOutput
}

type FirewallPolicyOldvSeqMap map[string]FirewallPolicyOldvSeqInput

func (FirewallPolicyOldvSeqMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicyOldvSeq)(nil)).Elem()
}

func (i FirewallPolicyOldvSeqMap) ToFirewallPolicyOldvSeqMapOutput() FirewallPolicyOldvSeqMapOutput {
	return i.ToFirewallPolicyOldvSeqMapOutputWithContext(context.Background())
}

func (i FirewallPolicyOldvSeqMap) ToFirewallPolicyOldvSeqMapOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyOldvSeqMapOutput)
}

type FirewallPolicyOldvSeqOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOldvSeqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyOldvSeq)(nil)).Elem()
}

func (o FirewallPolicyOldvSeqOutput) ToFirewallPolicyOldvSeqOutput() FirewallPolicyOldvSeqOutput {
	return o
}

func (o FirewallPolicyOldvSeqOutput) ToFirewallPolicyOldvSeqOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqOutput {
	return o
}

func (o FirewallPolicyOldvSeqOutput) AlterPosition() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.StringOutput { return v.AlterPosition }).(pulumi.StringOutput)
}

func (o FirewallPolicyOldvSeqOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyOldvSeqOutput) EnableStateChecking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.BoolPtrOutput { return v.EnableStateChecking }).(pulumi.BoolPtrOutput)
}

func (o FirewallPolicyOldvSeqOutput) PolicyDstId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.IntOutput { return v.PolicyDstId }).(pulumi.IntOutput)
}

func (o FirewallPolicyOldvSeqOutput) PolicySrcId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.IntOutput { return v.PolicySrcId }).(pulumi.IntOutput)
}

func (o FirewallPolicyOldvSeqOutput) StatePolicyLists() FirewallPolicyOldvSeqStatePolicyListArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) FirewallPolicyOldvSeqStatePolicyListArrayOutput {
		return v.StatePolicyLists
	}).(FirewallPolicyOldvSeqStatePolicyListArrayOutput)
}

func (o FirewallPolicyOldvSeqOutput) StatePolicySrcdstPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.StringPtrOutput { return v.StatePolicySrcdstPos }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyOldvSeqOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyOldvSeq) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallPolicyOldvSeqArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOldvSeqArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicyOldvSeq)(nil)).Elem()
}

func (o FirewallPolicyOldvSeqArrayOutput) ToFirewallPolicyOldvSeqArrayOutput() FirewallPolicyOldvSeqArrayOutput {
	return o
}

func (o FirewallPolicyOldvSeqArrayOutput) ToFirewallPolicyOldvSeqArrayOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqArrayOutput {
	return o
}

func (o FirewallPolicyOldvSeqArrayOutput) Index(i pulumi.IntInput) FirewallPolicyOldvSeqOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallPolicyOldvSeq {
		return vs[0].([]*FirewallPolicyOldvSeq)[vs[1].(int)]
	}).(FirewallPolicyOldvSeqOutput)
}

type FirewallPolicyOldvSeqMapOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOldvSeqMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicyOldvSeq)(nil)).Elem()
}

func (o FirewallPolicyOldvSeqMapOutput) ToFirewallPolicyOldvSeqMapOutput() FirewallPolicyOldvSeqMapOutput {
	return o
}

func (o FirewallPolicyOldvSeqMapOutput) ToFirewallPolicyOldvSeqMapOutputWithContext(ctx context.Context) FirewallPolicyOldvSeqMapOutput {
	return o
}

func (o FirewallPolicyOldvSeqMapOutput) MapIndex(k pulumi.StringInput) FirewallPolicyOldvSeqOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallPolicyOldvSeq {
		return vs[0].(map[string]*FirewallPolicyOldvSeq)[vs[1].(string)]
	}).(FirewallPolicyOldvSeqOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyOldvSeqInput)(nil)).Elem(), &FirewallPolicyOldvSeq{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyOldvSeqArrayInput)(nil)).Elem(), FirewallPolicyOldvSeqArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyOldvSeqMapInput)(nil)).Elem(), FirewallPolicyOldvSeqMap{})
	pulumi.RegisterOutputType(FirewallPolicyOldvSeqOutput{})
	pulumi.RegisterOutputType(FirewallPolicyOldvSeqArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyOldvSeqMapOutput{})
}
