// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogMemorySetting struct {
	pulumi.CustomResourceState

	Diskfull  pulumi.StringOutput    `pulumi:"diskfull"`
	Status    pulumi.StringOutput    `pulumi:"status"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewLogMemorySetting registers a new resource with the given unique name, arguments, and options.
func NewLogMemorySetting(ctx *pulumi.Context,
	name string, args *LogMemorySettingArgs, opts ...pulumi.ResourceOption) (*LogMemorySetting, error) {
	if args == nil {
		args = &LogMemorySettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogMemorySetting
	err := ctx.RegisterResource("fortios:index/logMemorySetting:LogMemorySetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogMemorySetting gets an existing LogMemorySetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogMemorySetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogMemorySettingState, opts ...pulumi.ResourceOption) (*LogMemorySetting, error) {
	var resource LogMemorySetting
	err := ctx.ReadResource("fortios:index/logMemorySetting:LogMemorySetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogMemorySetting resources.
type logMemorySettingState struct {
	Diskfull  *string `pulumi:"diskfull"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type LogMemorySettingState struct {
	Diskfull  pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (LogMemorySettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logMemorySettingState)(nil)).Elem()
}

type logMemorySettingArgs struct {
	Diskfull  *string `pulumi:"diskfull"`
	Status    *string `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogMemorySetting resource.
type LogMemorySettingArgs struct {
	Diskfull  pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (LogMemorySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logMemorySettingArgs)(nil)).Elem()
}

type LogMemorySettingInput interface {
	pulumi.Input

	ToLogMemorySettingOutput() LogMemorySettingOutput
	ToLogMemorySettingOutputWithContext(ctx context.Context) LogMemorySettingOutput
}

func (*LogMemorySetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogMemorySetting)(nil)).Elem()
}

func (i *LogMemorySetting) ToLogMemorySettingOutput() LogMemorySettingOutput {
	return i.ToLogMemorySettingOutputWithContext(context.Background())
}

func (i *LogMemorySetting) ToLogMemorySettingOutputWithContext(ctx context.Context) LogMemorySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMemorySettingOutput)
}

// LogMemorySettingArrayInput is an input type that accepts LogMemorySettingArray and LogMemorySettingArrayOutput values.
// You can construct a concrete instance of `LogMemorySettingArrayInput` via:
//
//	LogMemorySettingArray{ LogMemorySettingArgs{...} }
type LogMemorySettingArrayInput interface {
	pulumi.Input

	ToLogMemorySettingArrayOutput() LogMemorySettingArrayOutput
	ToLogMemorySettingArrayOutputWithContext(context.Context) LogMemorySettingArrayOutput
}

type LogMemorySettingArray []LogMemorySettingInput

func (LogMemorySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogMemorySetting)(nil)).Elem()
}

func (i LogMemorySettingArray) ToLogMemorySettingArrayOutput() LogMemorySettingArrayOutput {
	return i.ToLogMemorySettingArrayOutputWithContext(context.Background())
}

func (i LogMemorySettingArray) ToLogMemorySettingArrayOutputWithContext(ctx context.Context) LogMemorySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMemorySettingArrayOutput)
}

// LogMemorySettingMapInput is an input type that accepts LogMemorySettingMap and LogMemorySettingMapOutput values.
// You can construct a concrete instance of `LogMemorySettingMapInput` via:
//
//	LogMemorySettingMap{ "key": LogMemorySettingArgs{...} }
type LogMemorySettingMapInput interface {
	pulumi.Input

	ToLogMemorySettingMapOutput() LogMemorySettingMapOutput
	ToLogMemorySettingMapOutputWithContext(context.Context) LogMemorySettingMapOutput
}

type LogMemorySettingMap map[string]LogMemorySettingInput

func (LogMemorySettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogMemorySetting)(nil)).Elem()
}

func (i LogMemorySettingMap) ToLogMemorySettingMapOutput() LogMemorySettingMapOutput {
	return i.ToLogMemorySettingMapOutputWithContext(context.Background())
}

func (i LogMemorySettingMap) ToLogMemorySettingMapOutputWithContext(ctx context.Context) LogMemorySettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMemorySettingMapOutput)
}

type LogMemorySettingOutput struct{ *pulumi.OutputState }

func (LogMemorySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogMemorySetting)(nil)).Elem()
}

func (o LogMemorySettingOutput) ToLogMemorySettingOutput() LogMemorySettingOutput {
	return o
}

func (o LogMemorySettingOutput) ToLogMemorySettingOutputWithContext(ctx context.Context) LogMemorySettingOutput {
	return o
}

func (o LogMemorySettingOutput) Diskfull() pulumi.StringOutput {
	return o.ApplyT(func(v *LogMemorySetting) pulumi.StringOutput { return v.Diskfull }).(pulumi.StringOutput)
}

func (o LogMemorySettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogMemorySetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LogMemorySettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMemorySetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogMemorySettingArrayOutput struct{ *pulumi.OutputState }

func (LogMemorySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogMemorySetting)(nil)).Elem()
}

func (o LogMemorySettingArrayOutput) ToLogMemorySettingArrayOutput() LogMemorySettingArrayOutput {
	return o
}

func (o LogMemorySettingArrayOutput) ToLogMemorySettingArrayOutputWithContext(ctx context.Context) LogMemorySettingArrayOutput {
	return o
}

func (o LogMemorySettingArrayOutput) Index(i pulumi.IntInput) LogMemorySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogMemorySetting {
		return vs[0].([]*LogMemorySetting)[vs[1].(int)]
	}).(LogMemorySettingOutput)
}

type LogMemorySettingMapOutput struct{ *pulumi.OutputState }

func (LogMemorySettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogMemorySetting)(nil)).Elem()
}

func (o LogMemorySettingMapOutput) ToLogMemorySettingMapOutput() LogMemorySettingMapOutput {
	return o
}

func (o LogMemorySettingMapOutput) ToLogMemorySettingMapOutputWithContext(ctx context.Context) LogMemorySettingMapOutput {
	return o
}

func (o LogMemorySettingMapOutput) MapIndex(k pulumi.StringInput) LogMemorySettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogMemorySetting {
		return vs[0].(map[string]*LogMemorySetting)[vs[1].(string)]
	}).(LogMemorySettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogMemorySettingInput)(nil)).Elem(), &LogMemorySetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMemorySettingArrayInput)(nil)).Elem(), LogMemorySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMemorySettingMapInput)(nil)).Elem(), LogMemorySettingMap{})
	pulumi.RegisterOutputType(LogMemorySettingOutput{})
	pulumi.RegisterOutputType(LogMemorySettingArrayOutput{})
	pulumi.RegisterOutputType(LogMemorySettingMapOutput{})
}
