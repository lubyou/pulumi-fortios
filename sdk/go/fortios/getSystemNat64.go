// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system nat64
func LookupSystemNat64(ctx *pulumi.Context, args *LookupSystemNat64Args, opts ...pulumi.InvokeOption) (*LookupSystemNat64Result, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSystemNat64Result
	err := ctx.Invoke("fortios:index/getSystemNat64:GetSystemNat64", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSystemNat64.
type LookupSystemNat64Args struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetSystemNat64.
type LookupSystemNat64Result struct {
	// Enable/disable AAAA record synthesis (default = enable).
	AlwaysSynthesizeAaaaRecord string `pulumi:"alwaysSynthesizeAaaaRecord"`
	// Enable/disable IPv6 fragment header generation.
	GenerateIpv6FragmentHeader string `pulumi:"generateIpv6FragmentHeader"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable/disable mandatory IPv4 packet forwarding in nat46.
	Nat46ForceIpv4PacketForwarding string `pulumi:"nat46ForceIpv4PacketForwarding"`
	// NAT64 prefix.
	Nat64Prefix string `pulumi:"nat64Prefix"`
	// Enable/disable secondary NAT64 prefix.
	SecondaryPrefixStatus string `pulumi:"secondaryPrefixStatus"`
	// Secondary NAT64 prefix. The structure of `secondaryPrefix` block is documented below.
	SecondaryPrefixes []GetSystemNat64SecondaryPrefix `pulumi:"secondaryPrefixes"`
	// Enable/disable NAT64 (default = disable).
	Status    string  `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupSystemNat64Output(ctx *pulumi.Context, args LookupSystemNat64OutputArgs, opts ...pulumi.InvokeOption) LookupSystemNat64ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemNat64Result, error) {
			args := v.(LookupSystemNat64Args)
			r, err := LookupSystemNat64(ctx, &args, opts...)
			var s LookupSystemNat64Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemNat64ResultOutput)
}

// A collection of arguments for invoking GetSystemNat64.
type LookupSystemNat64OutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSystemNat64OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemNat64Args)(nil)).Elem()
}

// A collection of values returned by GetSystemNat64.
type LookupSystemNat64ResultOutput struct{ *pulumi.OutputState }

func (LookupSystemNat64ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemNat64Result)(nil)).Elem()
}

func (o LookupSystemNat64ResultOutput) ToLookupSystemNat64ResultOutput() LookupSystemNat64ResultOutput {
	return o
}

func (o LookupSystemNat64ResultOutput) ToLookupSystemNat64ResultOutputWithContext(ctx context.Context) LookupSystemNat64ResultOutput {
	return o
}

// Enable/disable AAAA record synthesis (default = enable).
func (o LookupSystemNat64ResultOutput) AlwaysSynthesizeAaaaRecord() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.AlwaysSynthesizeAaaaRecord }).(pulumi.StringOutput)
}

// Enable/disable IPv6 fragment header generation.
func (o LookupSystemNat64ResultOutput) GenerateIpv6FragmentHeader() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.GenerateIpv6FragmentHeader }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSystemNat64ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.Id }).(pulumi.StringOutput)
}

// Enable/disable mandatory IPv4 packet forwarding in nat46.
func (o LookupSystemNat64ResultOutput) Nat46ForceIpv4PacketForwarding() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.Nat46ForceIpv4PacketForwarding }).(pulumi.StringOutput)
}

// NAT64 prefix.
func (o LookupSystemNat64ResultOutput) Nat64Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.Nat64Prefix }).(pulumi.StringOutput)
}

// Enable/disable secondary NAT64 prefix.
func (o LookupSystemNat64ResultOutput) SecondaryPrefixStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.SecondaryPrefixStatus }).(pulumi.StringOutput)
}

// Secondary NAT64 prefix. The structure of `secondaryPrefix` block is documented below.
func (o LookupSystemNat64ResultOutput) SecondaryPrefixes() GetSystemNat64SecondaryPrefixArrayOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) []GetSystemNat64SecondaryPrefix { return v.SecondaryPrefixes }).(GetSystemNat64SecondaryPrefixArrayOutput)
}

// Enable/disable NAT64 (default = disable).
func (o LookupSystemNat64ResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupSystemNat64ResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemNat64Result) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemNat64ResultOutput{})
}
