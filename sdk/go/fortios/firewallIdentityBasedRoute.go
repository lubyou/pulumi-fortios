// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallIdentityBasedRoute struct {
	pulumi.CustomResourceState

	Comments            pulumi.StringOutput                       `pulumi:"comments"`
	DynamicSortSubtable pulumi.StringPtrOutput                    `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                    `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                       `pulumi:"name"`
	Rules               FirewallIdentityBasedRouteRuleArrayOutput `pulumi:"rules"`
	Vdomparam           pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewFirewallIdentityBasedRoute registers a new resource with the given unique name, arguments, and options.
func NewFirewallIdentityBasedRoute(ctx *pulumi.Context,
	name string, args *FirewallIdentityBasedRouteArgs, opts ...pulumi.ResourceOption) (*FirewallIdentityBasedRoute, error) {
	if args == nil {
		args = &FirewallIdentityBasedRouteArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallIdentityBasedRoute
	err := ctx.RegisterResource("fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallIdentityBasedRoute gets an existing FirewallIdentityBasedRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallIdentityBasedRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallIdentityBasedRouteState, opts ...pulumi.ResourceOption) (*FirewallIdentityBasedRoute, error) {
	var resource FirewallIdentityBasedRoute
	err := ctx.ReadResource("fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallIdentityBasedRoute resources.
type firewallIdentityBasedRouteState struct {
	Comments            *string                          `pulumi:"comments"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Rules               []FirewallIdentityBasedRouteRule `pulumi:"rules"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

type FirewallIdentityBasedRouteState struct {
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Rules               FirewallIdentityBasedRouteRuleArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallIdentityBasedRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIdentityBasedRouteState)(nil)).Elem()
}

type firewallIdentityBasedRouteArgs struct {
	Comments            *string                          `pulumi:"comments"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                          `pulumi:"getAllTables"`
	Name                *string                          `pulumi:"name"`
	Rules               []FirewallIdentityBasedRouteRule `pulumi:"rules"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallIdentityBasedRoute resource.
type FirewallIdentityBasedRouteArgs struct {
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Rules               FirewallIdentityBasedRouteRuleArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallIdentityBasedRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIdentityBasedRouteArgs)(nil)).Elem()
}

type FirewallIdentityBasedRouteInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput
	ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput
}

func (*FirewallIdentityBasedRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i *FirewallIdentityBasedRoute) ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput {
	return i.ToFirewallIdentityBasedRouteOutputWithContext(context.Background())
}

func (i *FirewallIdentityBasedRoute) ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteOutput)
}

// FirewallIdentityBasedRouteArrayInput is an input type that accepts FirewallIdentityBasedRouteArray and FirewallIdentityBasedRouteArrayOutput values.
// You can construct a concrete instance of `FirewallIdentityBasedRouteArrayInput` via:
//
//	FirewallIdentityBasedRouteArray{ FirewallIdentityBasedRouteArgs{...} }
type FirewallIdentityBasedRouteArrayInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput
	ToFirewallIdentityBasedRouteArrayOutputWithContext(context.Context) FirewallIdentityBasedRouteArrayOutput
}

type FirewallIdentityBasedRouteArray []FirewallIdentityBasedRouteInput

func (FirewallIdentityBasedRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i FirewallIdentityBasedRouteArray) ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput {
	return i.ToFirewallIdentityBasedRouteArrayOutputWithContext(context.Background())
}

func (i FirewallIdentityBasedRouteArray) ToFirewallIdentityBasedRouteArrayOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteArrayOutput)
}

// FirewallIdentityBasedRouteMapInput is an input type that accepts FirewallIdentityBasedRouteMap and FirewallIdentityBasedRouteMapOutput values.
// You can construct a concrete instance of `FirewallIdentityBasedRouteMapInput` via:
//
//	FirewallIdentityBasedRouteMap{ "key": FirewallIdentityBasedRouteArgs{...} }
type FirewallIdentityBasedRouteMapInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput
	ToFirewallIdentityBasedRouteMapOutputWithContext(context.Context) FirewallIdentityBasedRouteMapOutput
}

type FirewallIdentityBasedRouteMap map[string]FirewallIdentityBasedRouteInput

func (FirewallIdentityBasedRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i FirewallIdentityBasedRouteMap) ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput {
	return i.ToFirewallIdentityBasedRouteMapOutputWithContext(context.Background())
}

func (i FirewallIdentityBasedRouteMap) ToFirewallIdentityBasedRouteMapOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteMapOutput)
}

type FirewallIdentityBasedRouteOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteOutput) ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput {
	return o
}

func (o FirewallIdentityBasedRouteOutput) ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput {
	return o
}

func (o FirewallIdentityBasedRouteOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

func (o FirewallIdentityBasedRouteOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallIdentityBasedRouteOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallIdentityBasedRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallIdentityBasedRouteOutput) Rules() FirewallIdentityBasedRouteRuleArrayOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) FirewallIdentityBasedRouteRuleArrayOutput { return v.Rules }).(FirewallIdentityBasedRouteRuleArrayOutput)
}

func (o FirewallIdentityBasedRouteOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIdentityBasedRoute) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallIdentityBasedRouteArrayOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteArrayOutput) ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput {
	return o
}

func (o FirewallIdentityBasedRouteArrayOutput) ToFirewallIdentityBasedRouteArrayOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteArrayOutput {
	return o
}

func (o FirewallIdentityBasedRouteArrayOutput) Index(i pulumi.IntInput) FirewallIdentityBasedRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallIdentityBasedRoute {
		return vs[0].([]*FirewallIdentityBasedRoute)[vs[1].(int)]
	}).(FirewallIdentityBasedRouteOutput)
}

type FirewallIdentityBasedRouteMapOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteMapOutput) ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput {
	return o
}

func (o FirewallIdentityBasedRouteMapOutput) ToFirewallIdentityBasedRouteMapOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteMapOutput {
	return o
}

func (o FirewallIdentityBasedRouteMapOutput) MapIndex(k pulumi.StringInput) FirewallIdentityBasedRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallIdentityBasedRoute {
		return vs[0].(map[string]*FirewallIdentityBasedRoute)[vs[1].(string)]
	}).(FirewallIdentityBasedRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteInput)(nil)).Elem(), &FirewallIdentityBasedRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteArrayInput)(nil)).Elem(), FirewallIdentityBasedRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteMapInput)(nil)).Elem(), FirewallIdentityBasedRouteMap{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteOutput{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteArrayOutput{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteMapOutput{})
}
