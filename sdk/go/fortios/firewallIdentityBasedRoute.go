// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure identity based routing.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallIdentityBasedRoute(ctx, "trname", &fortios.FirewallIdentityBasedRouteArgs{
// 			Comments: pulumi.String("test"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall IdentityBasedRoute can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallIdentityBasedRoute struct {
	pulumi.CustomResourceState

	// Comments.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules FirewallIdentityBasedRouteRuleArrayOutput `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallIdentityBasedRoute registers a new resource with the given unique name, arguments, and options.
func NewFirewallIdentityBasedRoute(ctx *pulumi.Context,
	name string, args *FirewallIdentityBasedRouteArgs, opts ...pulumi.ResourceOption) (*FirewallIdentityBasedRoute, error) {
	if args == nil {
		args = &FirewallIdentityBasedRouteArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallIdentityBasedRoute
	err := ctx.RegisterResource("fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallIdentityBasedRoute gets an existing FirewallIdentityBasedRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallIdentityBasedRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallIdentityBasedRouteState, opts ...pulumi.ResourceOption) (*FirewallIdentityBasedRoute, error) {
	var resource FirewallIdentityBasedRoute
	err := ctx.ReadResource("fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallIdentityBasedRoute resources.
type firewallIdentityBasedRouteState struct {
	// Comments.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Group name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []FirewallIdentityBasedRouteRule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallIdentityBasedRouteState struct {
	// Comments.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules FirewallIdentityBasedRouteRuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallIdentityBasedRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIdentityBasedRouteState)(nil)).Elem()
}

type firewallIdentityBasedRouteArgs struct {
	// Comments.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Group name.
	Name *string `pulumi:"name"`
	// Rule. The structure of `rule` block is documented below.
	Rules []FirewallIdentityBasedRouteRule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallIdentityBasedRoute resource.
type FirewallIdentityBasedRouteArgs struct {
	// Comments.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Group name.
	Name pulumi.StringPtrInput
	// Rule. The structure of `rule` block is documented below.
	Rules FirewallIdentityBasedRouteRuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallIdentityBasedRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIdentityBasedRouteArgs)(nil)).Elem()
}

type FirewallIdentityBasedRouteInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput
	ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput
}

func (*FirewallIdentityBasedRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i *FirewallIdentityBasedRoute) ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput {
	return i.ToFirewallIdentityBasedRouteOutputWithContext(context.Background())
}

func (i *FirewallIdentityBasedRoute) ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteOutput)
}

// FirewallIdentityBasedRouteArrayInput is an input type that accepts FirewallIdentityBasedRouteArray and FirewallIdentityBasedRouteArrayOutput values.
// You can construct a concrete instance of `FirewallIdentityBasedRouteArrayInput` via:
//
//          FirewallIdentityBasedRouteArray{ FirewallIdentityBasedRouteArgs{...} }
type FirewallIdentityBasedRouteArrayInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput
	ToFirewallIdentityBasedRouteArrayOutputWithContext(context.Context) FirewallIdentityBasedRouteArrayOutput
}

type FirewallIdentityBasedRouteArray []FirewallIdentityBasedRouteInput

func (FirewallIdentityBasedRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i FirewallIdentityBasedRouteArray) ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput {
	return i.ToFirewallIdentityBasedRouteArrayOutputWithContext(context.Background())
}

func (i FirewallIdentityBasedRouteArray) ToFirewallIdentityBasedRouteArrayOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteArrayOutput)
}

// FirewallIdentityBasedRouteMapInput is an input type that accepts FirewallIdentityBasedRouteMap and FirewallIdentityBasedRouteMapOutput values.
// You can construct a concrete instance of `FirewallIdentityBasedRouteMapInput` via:
//
//          FirewallIdentityBasedRouteMap{ "key": FirewallIdentityBasedRouteArgs{...} }
type FirewallIdentityBasedRouteMapInput interface {
	pulumi.Input

	ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput
	ToFirewallIdentityBasedRouteMapOutputWithContext(context.Context) FirewallIdentityBasedRouteMapOutput
}

type FirewallIdentityBasedRouteMap map[string]FirewallIdentityBasedRouteInput

func (FirewallIdentityBasedRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (i FirewallIdentityBasedRouteMap) ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput {
	return i.ToFirewallIdentityBasedRouteMapOutputWithContext(context.Background())
}

func (i FirewallIdentityBasedRouteMap) ToFirewallIdentityBasedRouteMapOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIdentityBasedRouteMapOutput)
}

type FirewallIdentityBasedRouteOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteOutput) ToFirewallIdentityBasedRouteOutput() FirewallIdentityBasedRouteOutput {
	return o
}

func (o FirewallIdentityBasedRouteOutput) ToFirewallIdentityBasedRouteOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteOutput {
	return o
}

type FirewallIdentityBasedRouteArrayOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteArrayOutput) ToFirewallIdentityBasedRouteArrayOutput() FirewallIdentityBasedRouteArrayOutput {
	return o
}

func (o FirewallIdentityBasedRouteArrayOutput) ToFirewallIdentityBasedRouteArrayOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteArrayOutput {
	return o
}

func (o FirewallIdentityBasedRouteArrayOutput) Index(i pulumi.IntInput) FirewallIdentityBasedRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallIdentityBasedRoute {
		return vs[0].([]*FirewallIdentityBasedRoute)[vs[1].(int)]
	}).(FirewallIdentityBasedRouteOutput)
}

type FirewallIdentityBasedRouteMapOutput struct{ *pulumi.OutputState }

func (FirewallIdentityBasedRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIdentityBasedRoute)(nil)).Elem()
}

func (o FirewallIdentityBasedRouteMapOutput) ToFirewallIdentityBasedRouteMapOutput() FirewallIdentityBasedRouteMapOutput {
	return o
}

func (o FirewallIdentityBasedRouteMapOutput) ToFirewallIdentityBasedRouteMapOutputWithContext(ctx context.Context) FirewallIdentityBasedRouteMapOutput {
	return o
}

func (o FirewallIdentityBasedRouteMapOutput) MapIndex(k pulumi.StringInput) FirewallIdentityBasedRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallIdentityBasedRoute {
		return vs[0].(map[string]*FirewallIdentityBasedRoute)[vs[1].(string)]
	}).(FirewallIdentityBasedRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteInput)(nil)).Elem(), &FirewallIdentityBasedRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteArrayInput)(nil)).Elem(), FirewallIdentityBasedRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIdentityBasedRouteMapInput)(nil)).Elem(), FirewallIdentityBasedRouteMap{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteOutput{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteArrayOutput{})
	pulumi.RegisterOutputType(FirewallIdentityBasedRouteMapOutput{})
}
