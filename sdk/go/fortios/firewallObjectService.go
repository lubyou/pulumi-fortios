// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure firewall service of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `FirewallServiceCustom`, we recommend that you use the new resource.
//
// ## Example Usage
// ### Fqdn Service
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallObjectService(ctx, "v11", &fortios.FirewallObjectServiceArgs{
// 			Category: pulumi.String("General"),
// 			Comment:  pulumi.String("comment"),
// 			Fqdn:     pulumi.String("abc.com"),
// 			Protocol: pulumi.String("TCP/UDP/SCTP"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Iprange Service
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallObjectService(ctx, "v13", &fortios.FirewallObjectServiceArgs{
// 			Category:      pulumi.String("General"),
// 			Comment:       pulumi.String("comment"),
// 			Iprange:       pulumi.String("1.1.1.1-2.2.2.2"),
// 			Protocol:      pulumi.String("TCP/UDP/SCTP"),
// 			SctpPortrange: pulumi.String("66-88"),
// 			TcpPortrange:  pulumi.String("22-33"),
// 			UdpPortrange:  pulumi.String("44-55"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### ICMP Service
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallObjectService(ctx, "iCMP", &fortios.FirewallObjectServiceArgs{
// 			Category:       pulumi.String("General"),
// 			Comment:        pulumi.String("comment"),
// 			Icmpcode:       pulumi.String("3"),
// 			Icmptype:       pulumi.String("2"),
// 			Protocol:       pulumi.String("ICMP"),
// 			ProtocolNumber: pulumi.String("1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type FirewallObjectService struct {
	pulumi.CustomResourceState

	// Service category.
	Category pulumi.StringOutput `pulumi:"category"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Fully qualified domain name.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// ICMP code.
	Icmpcode pulumi.StringOutput `pulumi:"icmpcode"`
	// ICMP type.
	Icmptype pulumi.StringOutput `pulumi:"icmptype"`
	// Start and end of the IP range associated with service.
	Iprange pulumi.StringOutput `pulumi:"iprange"`
	// Number of minutes before an idle administrator session time out.
	Name pulumi.StringOutput `pulumi:"name"`
	// Protocol type based on IANA numbers.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// IP protocol number.
	ProtocolNumber pulumi.StringOutput `pulumi:"protocolNumber"`
	// Multiple SCTP port ranges.
	SctpPortrange pulumi.StringOutput `pulumi:"sctpPortrange"`
	// Custom tcp session TTL.
	SessionTtl pulumi.StringOutput `pulumi:"sessionTtl"`
	// Multiple TCP port ranges.
	TcpPortrange pulumi.StringOutput `pulumi:"tcpPortrange"`
	// Multiple UDP port ranges.
	UdpPortrange pulumi.StringOutput `pulumi:"udpPortrange"`
}

// NewFirewallObjectService registers a new resource with the given unique name, arguments, and options.
func NewFirewallObjectService(ctx *pulumi.Context,
	name string, args *FirewallObjectServiceArgs, opts ...pulumi.ResourceOption) (*FirewallObjectService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	var resource FirewallObjectService
	err := ctx.RegisterResource("fortios:index/firewallObjectService:FirewallObjectService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallObjectService gets an existing FirewallObjectService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallObjectService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallObjectServiceState, opts ...pulumi.ResourceOption) (*FirewallObjectService, error) {
	var resource FirewallObjectService
	err := ctx.ReadResource("fortios:index/firewallObjectService:FirewallObjectService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallObjectService resources.
type firewallObjectServiceState struct {
	// Service category.
	Category *string `pulumi:"category"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Fully qualified domain name.
	Fqdn *string `pulumi:"fqdn"`
	// ICMP code.
	Icmpcode *string `pulumi:"icmpcode"`
	// ICMP type.
	Icmptype *string `pulumi:"icmptype"`
	// Start and end of the IP range associated with service.
	Iprange *string `pulumi:"iprange"`
	// Number of minutes before an idle administrator session time out.
	Name *string `pulumi:"name"`
	// Protocol type based on IANA numbers.
	Protocol *string `pulumi:"protocol"`
	// IP protocol number.
	ProtocolNumber *string `pulumi:"protocolNumber"`
	// Multiple SCTP port ranges.
	SctpPortrange *string `pulumi:"sctpPortrange"`
	// Custom tcp session TTL.
	SessionTtl *string `pulumi:"sessionTtl"`
	// Multiple TCP port ranges.
	TcpPortrange *string `pulumi:"tcpPortrange"`
	// Multiple UDP port ranges.
	UdpPortrange *string `pulumi:"udpPortrange"`
}

type FirewallObjectServiceState struct {
	// Service category.
	Category pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Fully qualified domain name.
	Fqdn pulumi.StringPtrInput
	// ICMP code.
	Icmpcode pulumi.StringPtrInput
	// ICMP type.
	Icmptype pulumi.StringPtrInput
	// Start and end of the IP range associated with service.
	Iprange pulumi.StringPtrInput
	// Number of minutes before an idle administrator session time out.
	Name pulumi.StringPtrInput
	// Protocol type based on IANA numbers.
	Protocol pulumi.StringPtrInput
	// IP protocol number.
	ProtocolNumber pulumi.StringPtrInput
	// Multiple SCTP port ranges.
	SctpPortrange pulumi.StringPtrInput
	// Custom tcp session TTL.
	SessionTtl pulumi.StringPtrInput
	// Multiple TCP port ranges.
	TcpPortrange pulumi.StringPtrInput
	// Multiple UDP port ranges.
	UdpPortrange pulumi.StringPtrInput
}

func (FirewallObjectServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectServiceState)(nil)).Elem()
}

type firewallObjectServiceArgs struct {
	// Service category.
	Category string `pulumi:"category"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Fully qualified domain name.
	Fqdn *string `pulumi:"fqdn"`
	// ICMP code.
	Icmpcode *string `pulumi:"icmpcode"`
	// ICMP type.
	Icmptype *string `pulumi:"icmptype"`
	// Start and end of the IP range associated with service.
	Iprange *string `pulumi:"iprange"`
	// Number of minutes before an idle administrator session time out.
	Name *string `pulumi:"name"`
	// Protocol type based on IANA numbers.
	Protocol string `pulumi:"protocol"`
	// IP protocol number.
	ProtocolNumber *string `pulumi:"protocolNumber"`
	// Multiple SCTP port ranges.
	SctpPortrange *string `pulumi:"sctpPortrange"`
	// Custom tcp session TTL.
	SessionTtl *string `pulumi:"sessionTtl"`
	// Multiple TCP port ranges.
	TcpPortrange *string `pulumi:"tcpPortrange"`
	// Multiple UDP port ranges.
	UdpPortrange *string `pulumi:"udpPortrange"`
}

// The set of arguments for constructing a FirewallObjectService resource.
type FirewallObjectServiceArgs struct {
	// Service category.
	Category pulumi.StringInput
	// Comment.
	Comment pulumi.StringPtrInput
	// Fully qualified domain name.
	Fqdn pulumi.StringPtrInput
	// ICMP code.
	Icmpcode pulumi.StringPtrInput
	// ICMP type.
	Icmptype pulumi.StringPtrInput
	// Start and end of the IP range associated with service.
	Iprange pulumi.StringPtrInput
	// Number of minutes before an idle administrator session time out.
	Name pulumi.StringPtrInput
	// Protocol type based on IANA numbers.
	Protocol pulumi.StringInput
	// IP protocol number.
	ProtocolNumber pulumi.StringPtrInput
	// Multiple SCTP port ranges.
	SctpPortrange pulumi.StringPtrInput
	// Custom tcp session TTL.
	SessionTtl pulumi.StringPtrInput
	// Multiple TCP port ranges.
	TcpPortrange pulumi.StringPtrInput
	// Multiple UDP port ranges.
	UdpPortrange pulumi.StringPtrInput
}

func (FirewallObjectServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectServiceArgs)(nil)).Elem()
}

type FirewallObjectServiceInput interface {
	pulumi.Input

	ToFirewallObjectServiceOutput() FirewallObjectServiceOutput
	ToFirewallObjectServiceOutputWithContext(ctx context.Context) FirewallObjectServiceOutput
}

func (*FirewallObjectService) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallObjectService)(nil))
}

func (i *FirewallObjectService) ToFirewallObjectServiceOutput() FirewallObjectServiceOutput {
	return i.ToFirewallObjectServiceOutputWithContext(context.Background())
}

func (i *FirewallObjectService) ToFirewallObjectServiceOutputWithContext(ctx context.Context) FirewallObjectServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectServiceOutput)
}

func (i *FirewallObjectService) ToFirewallObjectServicePtrOutput() FirewallObjectServicePtrOutput {
	return i.ToFirewallObjectServicePtrOutputWithContext(context.Background())
}

func (i *FirewallObjectService) ToFirewallObjectServicePtrOutputWithContext(ctx context.Context) FirewallObjectServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectServicePtrOutput)
}

type FirewallObjectServicePtrInput interface {
	pulumi.Input

	ToFirewallObjectServicePtrOutput() FirewallObjectServicePtrOutput
	ToFirewallObjectServicePtrOutputWithContext(ctx context.Context) FirewallObjectServicePtrOutput
}

type firewallObjectServicePtrType FirewallObjectServiceArgs

func (*firewallObjectServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectService)(nil))
}

func (i *firewallObjectServicePtrType) ToFirewallObjectServicePtrOutput() FirewallObjectServicePtrOutput {
	return i.ToFirewallObjectServicePtrOutputWithContext(context.Background())
}

func (i *firewallObjectServicePtrType) ToFirewallObjectServicePtrOutputWithContext(ctx context.Context) FirewallObjectServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectServicePtrOutput)
}

// FirewallObjectServiceArrayInput is an input type that accepts FirewallObjectServiceArray and FirewallObjectServiceArrayOutput values.
// You can construct a concrete instance of `FirewallObjectServiceArrayInput` via:
//
//          FirewallObjectServiceArray{ FirewallObjectServiceArgs{...} }
type FirewallObjectServiceArrayInput interface {
	pulumi.Input

	ToFirewallObjectServiceArrayOutput() FirewallObjectServiceArrayOutput
	ToFirewallObjectServiceArrayOutputWithContext(context.Context) FirewallObjectServiceArrayOutput
}

type FirewallObjectServiceArray []FirewallObjectServiceInput

func (FirewallObjectServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*FirewallObjectService)(nil))
}

func (i FirewallObjectServiceArray) ToFirewallObjectServiceArrayOutput() FirewallObjectServiceArrayOutput {
	return i.ToFirewallObjectServiceArrayOutputWithContext(context.Background())
}

func (i FirewallObjectServiceArray) ToFirewallObjectServiceArrayOutputWithContext(ctx context.Context) FirewallObjectServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectServiceArrayOutput)
}

// FirewallObjectServiceMapInput is an input type that accepts FirewallObjectServiceMap and FirewallObjectServiceMapOutput values.
// You can construct a concrete instance of `FirewallObjectServiceMapInput` via:
//
//          FirewallObjectServiceMap{ "key": FirewallObjectServiceArgs{...} }
type FirewallObjectServiceMapInput interface {
	pulumi.Input

	ToFirewallObjectServiceMapOutput() FirewallObjectServiceMapOutput
	ToFirewallObjectServiceMapOutputWithContext(context.Context) FirewallObjectServiceMapOutput
}

type FirewallObjectServiceMap map[string]FirewallObjectServiceInput

func (FirewallObjectServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*FirewallObjectService)(nil))
}

func (i FirewallObjectServiceMap) ToFirewallObjectServiceMapOutput() FirewallObjectServiceMapOutput {
	return i.ToFirewallObjectServiceMapOutputWithContext(context.Background())
}

func (i FirewallObjectServiceMap) ToFirewallObjectServiceMapOutputWithContext(ctx context.Context) FirewallObjectServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectServiceMapOutput)
}

type FirewallObjectServiceOutput struct {
	*pulumi.OutputState
}

func (FirewallObjectServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallObjectService)(nil))
}

func (o FirewallObjectServiceOutput) ToFirewallObjectServiceOutput() FirewallObjectServiceOutput {
	return o
}

func (o FirewallObjectServiceOutput) ToFirewallObjectServiceOutputWithContext(ctx context.Context) FirewallObjectServiceOutput {
	return o
}

func (o FirewallObjectServiceOutput) ToFirewallObjectServicePtrOutput() FirewallObjectServicePtrOutput {
	return o.ToFirewallObjectServicePtrOutputWithContext(context.Background())
}

func (o FirewallObjectServiceOutput) ToFirewallObjectServicePtrOutputWithContext(ctx context.Context) FirewallObjectServicePtrOutput {
	return o.ApplyT(func(v FirewallObjectService) *FirewallObjectService {
		return &v
	}).(FirewallObjectServicePtrOutput)
}

type FirewallObjectServicePtrOutput struct {
	*pulumi.OutputState
}

func (FirewallObjectServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectService)(nil))
}

func (o FirewallObjectServicePtrOutput) ToFirewallObjectServicePtrOutput() FirewallObjectServicePtrOutput {
	return o
}

func (o FirewallObjectServicePtrOutput) ToFirewallObjectServicePtrOutputWithContext(ctx context.Context) FirewallObjectServicePtrOutput {
	return o
}

type FirewallObjectServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallObjectServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallObjectService)(nil))
}

func (o FirewallObjectServiceArrayOutput) ToFirewallObjectServiceArrayOutput() FirewallObjectServiceArrayOutput {
	return o
}

func (o FirewallObjectServiceArrayOutput) ToFirewallObjectServiceArrayOutputWithContext(ctx context.Context) FirewallObjectServiceArrayOutput {
	return o
}

func (o FirewallObjectServiceArrayOutput) Index(i pulumi.IntInput) FirewallObjectServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallObjectService {
		return vs[0].([]FirewallObjectService)[vs[1].(int)]
	}).(FirewallObjectServiceOutput)
}

type FirewallObjectServiceMapOutput struct{ *pulumi.OutputState }

func (FirewallObjectServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FirewallObjectService)(nil))
}

func (o FirewallObjectServiceMapOutput) ToFirewallObjectServiceMapOutput() FirewallObjectServiceMapOutput {
	return o
}

func (o FirewallObjectServiceMapOutput) ToFirewallObjectServiceMapOutputWithContext(ctx context.Context) FirewallObjectServiceMapOutput {
	return o
}

func (o FirewallObjectServiceMapOutput) MapIndex(k pulumi.StringInput) FirewallObjectServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FirewallObjectService {
		return vs[0].(map[string]FirewallObjectService)[vs[1].(string)]
	}).(FirewallObjectServiceOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallObjectServiceOutput{})
	pulumi.RegisterOutputType(FirewallObjectServicePtrOutput{})
	pulumi.RegisterOutputType(FirewallObjectServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallObjectServiceMapOutput{})
}
