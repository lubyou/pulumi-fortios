// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure SSL VPN user bookmark.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewVpnSslWebUserBookmark(ctx, "trname", &fortios.VpnSslWebUserBookmarkArgs{
// 			CustomLang: pulumi.String("big5"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VpnSslWeb UserBookmark can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type VpnSslWebUserBookmark struct {
	pulumi.CustomResourceState

	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks VpnSslWebUserBookmarkBookmarkArrayOutput `pulumi:"bookmarks"`
	// Personal language.
	CustomLang pulumi.StringOutput `pulumi:"customLang"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVpnSslWebUserBookmark registers a new resource with the given unique name, arguments, and options.
func NewVpnSslWebUserBookmark(ctx *pulumi.Context,
	name string, args *VpnSslWebUserBookmarkArgs, opts ...pulumi.ResourceOption) (*VpnSslWebUserBookmark, error) {
	if args == nil {
		args = &VpnSslWebUserBookmarkArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource VpnSslWebUserBookmark
	err := ctx.RegisterResource("fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnSslWebUserBookmark gets an existing VpnSslWebUserBookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnSslWebUserBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnSslWebUserBookmarkState, opts ...pulumi.ResourceOption) (*VpnSslWebUserBookmark, error) {
	var resource VpnSslWebUserBookmark
	err := ctx.ReadResource("fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnSslWebUserBookmark resources.
type vpnSslWebUserBookmarkState struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks []VpnSslWebUserBookmarkBookmark `pulumi:"bookmarks"`
	// Personal language.
	CustomLang *string `pulumi:"customLang"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type VpnSslWebUserBookmarkState struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks VpnSslWebUserBookmarkBookmarkArrayInput
	// Personal language.
	CustomLang pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VpnSslWebUserBookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslWebUserBookmarkState)(nil)).Elem()
}

type vpnSslWebUserBookmarkArgs struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks []VpnSslWebUserBookmarkBookmark `pulumi:"bookmarks"`
	// Personal language.
	CustomLang *string `pulumi:"customLang"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a VpnSslWebUserBookmark resource.
type VpnSslWebUserBookmarkArgs struct {
	// Bookmark table. The structure of `bookmarks` block is documented below.
	Bookmarks VpnSslWebUserBookmarkBookmarkArrayInput
	// Personal language.
	CustomLang pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (VpnSslWebUserBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslWebUserBookmarkArgs)(nil)).Elem()
}

type VpnSslWebUserBookmarkInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput
	ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput
}

func (*VpnSslWebUserBookmark) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslWebUserBookmark)(nil)).Elem()
}

func (i *VpnSslWebUserBookmark) ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput {
	return i.ToVpnSslWebUserBookmarkOutputWithContext(context.Background())
}

func (i *VpnSslWebUserBookmark) ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkOutput)
}

// VpnSslWebUserBookmarkArrayInput is an input type that accepts VpnSslWebUserBookmarkArray and VpnSslWebUserBookmarkArrayOutput values.
// You can construct a concrete instance of `VpnSslWebUserBookmarkArrayInput` via:
//
//          VpnSslWebUserBookmarkArray{ VpnSslWebUserBookmarkArgs{...} }
type VpnSslWebUserBookmarkArrayInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput
	ToVpnSslWebUserBookmarkArrayOutputWithContext(context.Context) VpnSslWebUserBookmarkArrayOutput
}

type VpnSslWebUserBookmarkArray []VpnSslWebUserBookmarkInput

func (VpnSslWebUserBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (i VpnSslWebUserBookmarkArray) ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput {
	return i.ToVpnSslWebUserBookmarkArrayOutputWithContext(context.Background())
}

func (i VpnSslWebUserBookmarkArray) ToVpnSslWebUserBookmarkArrayOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkArrayOutput)
}

// VpnSslWebUserBookmarkMapInput is an input type that accepts VpnSslWebUserBookmarkMap and VpnSslWebUserBookmarkMapOutput values.
// You can construct a concrete instance of `VpnSslWebUserBookmarkMapInput` via:
//
//          VpnSslWebUserBookmarkMap{ "key": VpnSslWebUserBookmarkArgs{...} }
type VpnSslWebUserBookmarkMapInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput
	ToVpnSslWebUserBookmarkMapOutputWithContext(context.Context) VpnSslWebUserBookmarkMapOutput
}

type VpnSslWebUserBookmarkMap map[string]VpnSslWebUserBookmarkInput

func (VpnSslWebUserBookmarkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (i VpnSslWebUserBookmarkMap) ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput {
	return i.ToVpnSslWebUserBookmarkMapOutputWithContext(context.Background())
}

func (i VpnSslWebUserBookmarkMap) ToVpnSslWebUserBookmarkMapOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkMapOutput)
}

type VpnSslWebUserBookmarkOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkOutput) ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput {
	return o
}

func (o VpnSslWebUserBookmarkOutput) ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput {
	return o
}

type VpnSslWebUserBookmarkArrayOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkArrayOutput) ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput {
	return o
}

func (o VpnSslWebUserBookmarkArrayOutput) ToVpnSslWebUserBookmarkArrayOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkArrayOutput {
	return o
}

func (o VpnSslWebUserBookmarkArrayOutput) Index(i pulumi.IntInput) VpnSslWebUserBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnSslWebUserBookmark {
		return vs[0].([]*VpnSslWebUserBookmark)[vs[1].(int)]
	}).(VpnSslWebUserBookmarkOutput)
}

type VpnSslWebUserBookmarkMapOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkMapOutput) ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput {
	return o
}

func (o VpnSslWebUserBookmarkMapOutput) ToVpnSslWebUserBookmarkMapOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkMapOutput {
	return o
}

func (o VpnSslWebUserBookmarkMapOutput) MapIndex(k pulumi.StringInput) VpnSslWebUserBookmarkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnSslWebUserBookmark {
		return vs[0].(map[string]*VpnSslWebUserBookmark)[vs[1].(string)]
	}).(VpnSslWebUserBookmarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkInput)(nil)).Elem(), &VpnSslWebUserBookmark{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkArrayInput)(nil)).Elem(), VpnSslWebUserBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkMapInput)(nil)).Elem(), VpnSslWebUserBookmarkMap{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkOutput{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkArrayOutput{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkMapOutput{})
}
