// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpnSslWebUserBookmark struct {
	pulumi.CustomResourceState

	Bookmarks           VpnSslWebUserBookmarkBookmarkArrayOutput `pulumi:"bookmarks"`
	CustomLang          pulumi.StringOutput                      `pulumi:"customLang"`
	DynamicSortSubtable pulumi.StringPtrOutput                   `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                   `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                      `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                   `pulumi:"vdomparam"`
}

// NewVpnSslWebUserBookmark registers a new resource with the given unique name, arguments, and options.
func NewVpnSslWebUserBookmark(ctx *pulumi.Context,
	name string, args *VpnSslWebUserBookmarkArgs, opts ...pulumi.ResourceOption) (*VpnSslWebUserBookmark, error) {
	if args == nil {
		args = &VpnSslWebUserBookmarkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnSslWebUserBookmark
	err := ctx.RegisterResource("fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnSslWebUserBookmark gets an existing VpnSslWebUserBookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnSslWebUserBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnSslWebUserBookmarkState, opts ...pulumi.ResourceOption) (*VpnSslWebUserBookmark, error) {
	var resource VpnSslWebUserBookmark
	err := ctx.ReadResource("fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnSslWebUserBookmark resources.
type vpnSslWebUserBookmarkState struct {
	Bookmarks           []VpnSslWebUserBookmarkBookmark `pulumi:"bookmarks"`
	CustomLang          *string                         `pulumi:"customLang"`
	DynamicSortSubtable *string                         `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                         `pulumi:"getAllTables"`
	Name                *string                         `pulumi:"name"`
	Vdomparam           *string                         `pulumi:"vdomparam"`
}

type VpnSslWebUserBookmarkState struct {
	Bookmarks           VpnSslWebUserBookmarkBookmarkArrayInput
	CustomLang          pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (VpnSslWebUserBookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslWebUserBookmarkState)(nil)).Elem()
}

type vpnSslWebUserBookmarkArgs struct {
	Bookmarks           []VpnSslWebUserBookmarkBookmark `pulumi:"bookmarks"`
	CustomLang          *string                         `pulumi:"customLang"`
	DynamicSortSubtable *string                         `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                         `pulumi:"getAllTables"`
	Name                *string                         `pulumi:"name"`
	Vdomparam           *string                         `pulumi:"vdomparam"`
}

// The set of arguments for constructing a VpnSslWebUserBookmark resource.
type VpnSslWebUserBookmarkArgs struct {
	Bookmarks           VpnSslWebUserBookmarkBookmarkArrayInput
	CustomLang          pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (VpnSslWebUserBookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnSslWebUserBookmarkArgs)(nil)).Elem()
}

type VpnSslWebUserBookmarkInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput
	ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput
}

func (*VpnSslWebUserBookmark) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslWebUserBookmark)(nil)).Elem()
}

func (i *VpnSslWebUserBookmark) ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput {
	return i.ToVpnSslWebUserBookmarkOutputWithContext(context.Background())
}

func (i *VpnSslWebUserBookmark) ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkOutput)
}

// VpnSslWebUserBookmarkArrayInput is an input type that accepts VpnSslWebUserBookmarkArray and VpnSslWebUserBookmarkArrayOutput values.
// You can construct a concrete instance of `VpnSslWebUserBookmarkArrayInput` via:
//
//	VpnSslWebUserBookmarkArray{ VpnSslWebUserBookmarkArgs{...} }
type VpnSslWebUserBookmarkArrayInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput
	ToVpnSslWebUserBookmarkArrayOutputWithContext(context.Context) VpnSslWebUserBookmarkArrayOutput
}

type VpnSslWebUserBookmarkArray []VpnSslWebUserBookmarkInput

func (VpnSslWebUserBookmarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (i VpnSslWebUserBookmarkArray) ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput {
	return i.ToVpnSslWebUserBookmarkArrayOutputWithContext(context.Background())
}

func (i VpnSslWebUserBookmarkArray) ToVpnSslWebUserBookmarkArrayOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkArrayOutput)
}

// VpnSslWebUserBookmarkMapInput is an input type that accepts VpnSslWebUserBookmarkMap and VpnSslWebUserBookmarkMapOutput values.
// You can construct a concrete instance of `VpnSslWebUserBookmarkMapInput` via:
//
//	VpnSslWebUserBookmarkMap{ "key": VpnSslWebUserBookmarkArgs{...} }
type VpnSslWebUserBookmarkMapInput interface {
	pulumi.Input

	ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput
	ToVpnSslWebUserBookmarkMapOutputWithContext(context.Context) VpnSslWebUserBookmarkMapOutput
}

type VpnSslWebUserBookmarkMap map[string]VpnSslWebUserBookmarkInput

func (VpnSslWebUserBookmarkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (i VpnSslWebUserBookmarkMap) ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput {
	return i.ToVpnSslWebUserBookmarkMapOutputWithContext(context.Background())
}

func (i VpnSslWebUserBookmarkMap) ToVpnSslWebUserBookmarkMapOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSslWebUserBookmarkMapOutput)
}

type VpnSslWebUserBookmarkOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkOutput) ToVpnSslWebUserBookmarkOutput() VpnSslWebUserBookmarkOutput {
	return o
}

func (o VpnSslWebUserBookmarkOutput) ToVpnSslWebUserBookmarkOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkOutput {
	return o
}

func (o VpnSslWebUserBookmarkOutput) Bookmarks() VpnSslWebUserBookmarkBookmarkArrayOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) VpnSslWebUserBookmarkBookmarkArrayOutput { return v.Bookmarks }).(VpnSslWebUserBookmarkBookmarkArrayOutput)
}

func (o VpnSslWebUserBookmarkOutput) CustomLang() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) pulumi.StringOutput { return v.CustomLang }).(pulumi.StringOutput)
}

func (o VpnSslWebUserBookmarkOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o VpnSslWebUserBookmarkOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o VpnSslWebUserBookmarkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpnSslWebUserBookmarkOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSslWebUserBookmark) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type VpnSslWebUserBookmarkArrayOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkArrayOutput) ToVpnSslWebUserBookmarkArrayOutput() VpnSslWebUserBookmarkArrayOutput {
	return o
}

func (o VpnSslWebUserBookmarkArrayOutput) ToVpnSslWebUserBookmarkArrayOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkArrayOutput {
	return o
}

func (o VpnSslWebUserBookmarkArrayOutput) Index(i pulumi.IntInput) VpnSslWebUserBookmarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnSslWebUserBookmark {
		return vs[0].([]*VpnSslWebUserBookmark)[vs[1].(int)]
	}).(VpnSslWebUserBookmarkOutput)
}

type VpnSslWebUserBookmarkMapOutput struct{ *pulumi.OutputState }

func (VpnSslWebUserBookmarkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnSslWebUserBookmark)(nil)).Elem()
}

func (o VpnSslWebUserBookmarkMapOutput) ToVpnSslWebUserBookmarkMapOutput() VpnSslWebUserBookmarkMapOutput {
	return o
}

func (o VpnSslWebUserBookmarkMapOutput) ToVpnSslWebUserBookmarkMapOutputWithContext(ctx context.Context) VpnSslWebUserBookmarkMapOutput {
	return o
}

func (o VpnSslWebUserBookmarkMapOutput) MapIndex(k pulumi.StringInput) VpnSslWebUserBookmarkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnSslWebUserBookmark {
		return vs[0].(map[string]*VpnSslWebUserBookmark)[vs[1].(string)]
	}).(VpnSslWebUserBookmarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkInput)(nil)).Elem(), &VpnSslWebUserBookmark{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkArrayInput)(nil)).Elem(), VpnSslWebUserBookmarkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSslWebUserBookmarkMapInput)(nil)).Elem(), VpnSslWebUserBookmarkMap{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkOutput{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkArrayOutput{})
	pulumi.RegisterOutputType(VpnSslWebUserBookmarkMapOutput{})
}
