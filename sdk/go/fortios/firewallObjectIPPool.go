// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallObjectIPPool struct {
	pulumi.CustomResourceState

	ArpReply pulumi.StringOutput    `pulumi:"arpReply"`
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	Endip    pulumi.StringOutput    `pulumi:"endip"`
	Name     pulumi.StringOutput    `pulumi:"name"`
	Startip  pulumi.StringOutput    `pulumi:"startip"`
	Type     pulumi.StringOutput    `pulumi:"type"`
}

// NewFirewallObjectIPPool registers a new resource with the given unique name, arguments, and options.
func NewFirewallObjectIPPool(ctx *pulumi.Context,
	name string, args *FirewallObjectIPPoolArgs, opts ...pulumi.ResourceOption) (*FirewallObjectIPPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endip == nil {
		return nil, errors.New("invalid value for required argument 'Endip'")
	}
	if args.Startip == nil {
		return nil, errors.New("invalid value for required argument 'Startip'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallObjectIPPool
	err := ctx.RegisterResource("fortios:index/firewallObjectIPPool:FirewallObjectIPPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallObjectIPPool gets an existing FirewallObjectIPPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallObjectIPPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallObjectIPPoolState, opts ...pulumi.ResourceOption) (*FirewallObjectIPPool, error) {
	var resource FirewallObjectIPPool
	err := ctx.ReadResource("fortios:index/firewallObjectIPPool:FirewallObjectIPPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallObjectIPPool resources.
type firewallObjectIPPoolState struct {
	ArpReply *string `pulumi:"arpReply"`
	Comments *string `pulumi:"comments"`
	Endip    *string `pulumi:"endip"`
	Name     *string `pulumi:"name"`
	Startip  *string `pulumi:"startip"`
	Type     *string `pulumi:"type"`
}

type FirewallObjectIPPoolState struct {
	ArpReply pulumi.StringPtrInput
	Comments pulumi.StringPtrInput
	Endip    pulumi.StringPtrInput
	Name     pulumi.StringPtrInput
	Startip  pulumi.StringPtrInput
	Type     pulumi.StringPtrInput
}

func (FirewallObjectIPPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectIPPoolState)(nil)).Elem()
}

type firewallObjectIPPoolArgs struct {
	ArpReply *string `pulumi:"arpReply"`
	Comments *string `pulumi:"comments"`
	Endip    string  `pulumi:"endip"`
	Name     *string `pulumi:"name"`
	Startip  string  `pulumi:"startip"`
	Type     string  `pulumi:"type"`
}

// The set of arguments for constructing a FirewallObjectIPPool resource.
type FirewallObjectIPPoolArgs struct {
	ArpReply pulumi.StringPtrInput
	Comments pulumi.StringPtrInput
	Endip    pulumi.StringInput
	Name     pulumi.StringPtrInput
	Startip  pulumi.StringInput
	Type     pulumi.StringInput
}

func (FirewallObjectIPPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallObjectIPPoolArgs)(nil)).Elem()
}

type FirewallObjectIPPoolInput interface {
	pulumi.Input

	ToFirewallObjectIPPoolOutput() FirewallObjectIPPoolOutput
	ToFirewallObjectIPPoolOutputWithContext(ctx context.Context) FirewallObjectIPPoolOutput
}

func (*FirewallObjectIPPool) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectIPPool)(nil)).Elem()
}

func (i *FirewallObjectIPPool) ToFirewallObjectIPPoolOutput() FirewallObjectIPPoolOutput {
	return i.ToFirewallObjectIPPoolOutputWithContext(context.Background())
}

func (i *FirewallObjectIPPool) ToFirewallObjectIPPoolOutputWithContext(ctx context.Context) FirewallObjectIPPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectIPPoolOutput)
}

func (i *FirewallObjectIPPool) ToOutput(ctx context.Context) pulumix.Output[*FirewallObjectIPPool] {
	return pulumix.Output[*FirewallObjectIPPool]{
		OutputState: i.ToFirewallObjectIPPoolOutputWithContext(ctx).OutputState,
	}
}

// FirewallObjectIPPoolArrayInput is an input type that accepts FirewallObjectIPPoolArray and FirewallObjectIPPoolArrayOutput values.
// You can construct a concrete instance of `FirewallObjectIPPoolArrayInput` via:
//
//	FirewallObjectIPPoolArray{ FirewallObjectIPPoolArgs{...} }
type FirewallObjectIPPoolArrayInput interface {
	pulumi.Input

	ToFirewallObjectIPPoolArrayOutput() FirewallObjectIPPoolArrayOutput
	ToFirewallObjectIPPoolArrayOutputWithContext(context.Context) FirewallObjectIPPoolArrayOutput
}

type FirewallObjectIPPoolArray []FirewallObjectIPPoolInput

func (FirewallObjectIPPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectIPPool)(nil)).Elem()
}

func (i FirewallObjectIPPoolArray) ToFirewallObjectIPPoolArrayOutput() FirewallObjectIPPoolArrayOutput {
	return i.ToFirewallObjectIPPoolArrayOutputWithContext(context.Background())
}

func (i FirewallObjectIPPoolArray) ToFirewallObjectIPPoolArrayOutputWithContext(ctx context.Context) FirewallObjectIPPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectIPPoolArrayOutput)
}

func (i FirewallObjectIPPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallObjectIPPool] {
	return pulumix.Output[[]*FirewallObjectIPPool]{
		OutputState: i.ToFirewallObjectIPPoolArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallObjectIPPoolMapInput is an input type that accepts FirewallObjectIPPoolMap and FirewallObjectIPPoolMapOutput values.
// You can construct a concrete instance of `FirewallObjectIPPoolMapInput` via:
//
//	FirewallObjectIPPoolMap{ "key": FirewallObjectIPPoolArgs{...} }
type FirewallObjectIPPoolMapInput interface {
	pulumi.Input

	ToFirewallObjectIPPoolMapOutput() FirewallObjectIPPoolMapOutput
	ToFirewallObjectIPPoolMapOutputWithContext(context.Context) FirewallObjectIPPoolMapOutput
}

type FirewallObjectIPPoolMap map[string]FirewallObjectIPPoolInput

func (FirewallObjectIPPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectIPPool)(nil)).Elem()
}

func (i FirewallObjectIPPoolMap) ToFirewallObjectIPPoolMapOutput() FirewallObjectIPPoolMapOutput {
	return i.ToFirewallObjectIPPoolMapOutputWithContext(context.Background())
}

func (i FirewallObjectIPPoolMap) ToFirewallObjectIPPoolMapOutputWithContext(ctx context.Context) FirewallObjectIPPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallObjectIPPoolMapOutput)
}

func (i FirewallObjectIPPoolMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallObjectIPPool] {
	return pulumix.Output[map[string]*FirewallObjectIPPool]{
		OutputState: i.ToFirewallObjectIPPoolMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallObjectIPPoolOutput struct{ *pulumi.OutputState }

func (FirewallObjectIPPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallObjectIPPool)(nil)).Elem()
}

func (o FirewallObjectIPPoolOutput) ToFirewallObjectIPPoolOutput() FirewallObjectIPPoolOutput {
	return o
}

func (o FirewallObjectIPPoolOutput) ToFirewallObjectIPPoolOutputWithContext(ctx context.Context) FirewallObjectIPPoolOutput {
	return o
}

func (o FirewallObjectIPPoolOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallObjectIPPool] {
	return pulumix.Output[*FirewallObjectIPPool]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectIPPoolOutput) ArpReply() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringOutput { return v.ArpReply }).(pulumi.StringOutput)
}

func (o FirewallObjectIPPoolOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallObjectIPPoolOutput) Endip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringOutput { return v.Endip }).(pulumi.StringOutput)
}

func (o FirewallObjectIPPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallObjectIPPoolOutput) Startip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringOutput { return v.Startip }).(pulumi.StringOutput)
}

func (o FirewallObjectIPPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallObjectIPPool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type FirewallObjectIPPoolArrayOutput struct{ *pulumi.OutputState }

func (FirewallObjectIPPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallObjectIPPool)(nil)).Elem()
}

func (o FirewallObjectIPPoolArrayOutput) ToFirewallObjectIPPoolArrayOutput() FirewallObjectIPPoolArrayOutput {
	return o
}

func (o FirewallObjectIPPoolArrayOutput) ToFirewallObjectIPPoolArrayOutputWithContext(ctx context.Context) FirewallObjectIPPoolArrayOutput {
	return o
}

func (o FirewallObjectIPPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallObjectIPPool] {
	return pulumix.Output[[]*FirewallObjectIPPool]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectIPPoolArrayOutput) Index(i pulumi.IntInput) FirewallObjectIPPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallObjectIPPool {
		return vs[0].([]*FirewallObjectIPPool)[vs[1].(int)]
	}).(FirewallObjectIPPoolOutput)
}

type FirewallObjectIPPoolMapOutput struct{ *pulumi.OutputState }

func (FirewallObjectIPPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallObjectIPPool)(nil)).Elem()
}

func (o FirewallObjectIPPoolMapOutput) ToFirewallObjectIPPoolMapOutput() FirewallObjectIPPoolMapOutput {
	return o
}

func (o FirewallObjectIPPoolMapOutput) ToFirewallObjectIPPoolMapOutputWithContext(ctx context.Context) FirewallObjectIPPoolMapOutput {
	return o
}

func (o FirewallObjectIPPoolMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallObjectIPPool] {
	return pulumix.Output[map[string]*FirewallObjectIPPool]{
		OutputState: o.OutputState,
	}
}

func (o FirewallObjectIPPoolMapOutput) MapIndex(k pulumi.StringInput) FirewallObjectIPPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallObjectIPPool {
		return vs[0].(map[string]*FirewallObjectIPPool)[vs[1].(string)]
	}).(FirewallObjectIPPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectIPPoolInput)(nil)).Elem(), &FirewallObjectIPPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectIPPoolArrayInput)(nil)).Elem(), FirewallObjectIPPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallObjectIPPoolMapInput)(nil)).Elem(), FirewallObjectIPPoolMap{})
	pulumi.RegisterOutputType(FirewallObjectIPPoolOutput{})
	pulumi.RegisterOutputType(FirewallObjectIPPoolArrayOutput{})
	pulumi.RegisterOutputType(FirewallObjectIPPoolMapOutput{})
}
