// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure VPN remote gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewVpnIpsecPhase1(ctx, "trnamex1", &fortios.VpnIpsecPhase1Args{
// 			AcctVerify:             pulumi.String("disable"),
// 			AddGwRoute:             pulumi.String("disable"),
// 			AddRoute:               pulumi.String("disable"),
// 			AssignIp:               pulumi.String("enable"),
// 			AssignIpFrom:           pulumi.String("range"),
// 			Authmethod:             pulumi.String("psk"),
// 			AutoNegotiate:          pulumi.String("enable"),
// 			CertIdValidation:       pulumi.String("enable"),
// 			ChildlessIke:           pulumi.String("disable"),
// 			ClientAutoNegotiate:    pulumi.String("disable"),
// 			ClientKeepAlive:        pulumi.String("disable"),
// 			Dhgrp:                  pulumi.String("14 5"),
// 			DigitalSignatureAuth:   pulumi.String("disable"),
// 			Distance:               pulumi.Int(15),
// 			DnsMode:                pulumi.String("manual"),
// 			Dpd:                    pulumi.String("on-demand"),
// 			DpdRetrycount:          pulumi.Int(3),
// 			DpdRetryinterval:       pulumi.String("20"),
// 			Eap:                    pulumi.String("disable"),
// 			EapIdentity:            pulumi.String("use-id-payload"),
// 			EnforceUniqueId:        pulumi.String("disable"),
// 			ForticlientEnforcement: pulumi.String("disable"),
// 			Fragmentation:          pulumi.String("enable"),
// 			FragmentationMtu:       pulumi.Int(1200),
// 			GroupAuthentication:    pulumi.String("disable"),
// 			HaSyncEspSeqno:         pulumi.String("enable"),
// 			IdleTimeout:            pulumi.String("disable"),
// 			IdleTimeoutinterval:    pulumi.Int(15),
// 			IkeVersion:             pulumi.String("1"),
// 			IncludeLocalLan:        pulumi.String("disable"),
// 			Interface:              pulumi.String("port4"),
// 			Ipv4DnsServer1:         pulumi.String("0.0.0.0"),
// 			Ipv4DnsServer2:         pulumi.String("0.0.0.0"),
// 			Ipv4DnsServer3:         pulumi.String("0.0.0.0"),
// 			Ipv4EndIp:              pulumi.String("0.0.0.0"),
// 			Ipv4Netmask:            pulumi.String("255.255.255.255"),
// 			Ipv4StartIp:            pulumi.String("0.0.0.0"),
// 			Ipv4WinsServer1:        pulumi.String("0.0.0.0"),
// 			Ipv4WinsServer2:        pulumi.String("0.0.0.0"),
// 			Ipv6DnsServer1:         pulumi.String("::"),
// 			Ipv6DnsServer2:         pulumi.String("::"),
// 			Ipv6DnsServer3:         pulumi.String("::"),
// 			Ipv6EndIp:              pulumi.String("::"),
// 			Ipv6Prefix:             pulumi.Int(128),
// 			Ipv6StartIp:            pulumi.String("::"),
// 			Keepalive:              pulumi.Int(10),
// 			Keylife:                pulumi.Int(86400),
// 			LocalGw:                pulumi.String("0.0.0.0"),
// 			LocalidType:            pulumi.String("auto"),
// 			MeshSelectorType:       pulumi.String("disable"),
// 			Mode:                   pulumi.String("main"),
// 			ModeCfg:                pulumi.String("disable"),
// 			Nattraversal:           pulumi.String("enable"),
// 			NegotiateTimeout:       pulumi.Int(30),
// 			Peertype:               pulumi.String("any"),
// 			Ppk:                    pulumi.String("disable"),
// 			Priority:               pulumi.Int(0),
// 			Proposal:               pulumi.String("aes128-sha256 aes256-sha256 aes128-sha1 aes256-sha1"),
// 			Psksecret:              pulumi.String("dewcEde2112"),
// 			Reauth:                 pulumi.String("disable"),
// 			Rekey:                  pulumi.String("enable"),
// 			RemoteGw:               pulumi.String("1.1.1.1"),
// 			RsaSignatureFormat:     pulumi.String("pkcs1"),
// 			SavePassword:           pulumi.String("disable"),
// 			SendCertChain:          pulumi.String("enable"),
// 			SignatureHashAlg:       pulumi.String("sha2-512 sha2-384 sha2-256 sha1"),
// 			SuiteB:                 pulumi.String("disable"),
// 			Type:                   pulumi.String("static"),
// 			UnitySupport:           pulumi.String("enable"),
// 			WizardType:             pulumi.String("custom"),
// 			Xauthtype:              pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VpnIpsec Phase1 can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/vpnIpsecPhase1:VpnIpsecPhase1 labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/vpnIpsecPhase1:VpnIpsecPhase1 labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type VpnIpsecPhase1 struct {
	pulumi.CustomResourceState

	// Enable/disable verification of RADIUS accounting record. Valid values: `enable`, `disable`.
	AcctVerify pulumi.StringOutput `pulumi:"acctVerify"`
	// Enable/disable automatically add a route to the remote gateway. Valid values: `enable`, `disable`.
	AddGwRoute pulumi.StringOutput `pulumi:"addGwRoute"`
	// Enable/disable control addition of a route to peer destination selector. Valid values: `disable`, `enable`.
	AddRoute pulumi.StringOutput `pulumi:"addRoute"`
	// Enable/disable assignment of IP to IPsec interface via configuration method. Valid values: `disable`, `enable`.
	AssignIp pulumi.StringOutput `pulumi:"assignIp"`
	// Method by which the IP address will be assigned. Valid values: `range`, `usrgrp`, `dhcp`, `name`.
	AssignIpFrom pulumi.StringOutput `pulumi:"assignIpFrom"`
	// Authentication method. Valid values: `psk`, `signature`.
	Authmethod pulumi.StringOutput `pulumi:"authmethod"`
	// Authentication method (remote side). Valid values: `psk`, `signature`.
	AuthmethodRemote pulumi.StringOutput `pulumi:"authmethodRemote"`
	// XAuth password (max 35 characters).
	Authpasswd pulumi.StringPtrOutput `pulumi:"authpasswd"`
	// XAuth user name.
	Authusr pulumi.StringOutput `pulumi:"authusr"`
	// Authentication user group.
	Authusrgrp pulumi.StringOutput `pulumi:"authusrgrp"`
	// Enable/disable automatic initiation of IKE SA negotiation. Valid values: `enable`, `disable`.
	AutoNegotiate pulumi.StringOutput `pulumi:"autoNegotiate"`
	// Instruct unity clients about the backup gateway address(es). The structure of `backupGateway` block is documented below.
	BackupGateways VpnIpsecPhase1BackupGatewayArrayOutput `pulumi:"backupGateways"`
	// Message that unity client should display after connecting.
	Banner pulumi.StringPtrOutput `pulumi:"banner"`
	// Enable/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945. Valid values: `enable`, `disable`.
	CertIdValidation pulumi.StringOutput `pulumi:"certIdValidation"`
	// Names of up to 4 signed personal certificates. The structure of `certificate` block is documented below.
	Certificates VpnIpsecPhase1CertificateArrayOutput `pulumi:"certificates"`
	// Enable/disable childless IKEv2 initiation (RFC 6023). Valid values: `enable`, `disable`.
	ChildlessIke pulumi.StringOutput `pulumi:"childlessIke"`
	// Enable/disable allowing the VPN client to bring up the tunnel when there is no traffic. Valid values: `disable`, `enable`.
	ClientAutoNegotiate pulumi.StringOutput `pulumi:"clientAutoNegotiate"`
	// Enable/disable allowing the VPN client to keep the tunnel up when there is no traffic. Valid values: `disable`, `enable`.
	ClientKeepAlive pulumi.StringOutput `pulumi:"clientKeepAlive"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringOutput `pulumi:"dhcp6RaLinkaddr"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringOutput `pulumi:"dhcpRaGiaddr"`
	// DH group. Valid values: `1`, `2`, `5`, `14`, `15`, `16`, `17`, `18`, `19`, `20`, `21`, `27`, `28`, `29`, `30`, `31`, `32`.
	Dhgrp pulumi.StringOutput `pulumi:"dhgrp"`
	// Enable/disable IKEv2 Digital Signature Authentication (RFC 7427). Valid values: `enable`, `disable`.
	DigitalSignatureAuth pulumi.StringOutput `pulumi:"digitalSignatureAuth"`
	// Distance for routes added by IKE (1 - 255).
	Distance pulumi.IntOutput `pulumi:"distance"`
	// DNS server mode. Valid values: `manual`, `auto`.
	DnsMode pulumi.StringOutput `pulumi:"dnsMode"`
	// Instruct unity clients about the default DNS domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Dead Peer Detection mode. Valid values: `disable`, `on-idle`, `on-demand`.
	Dpd pulumi.StringOutput `pulumi:"dpd"`
	// Number of DPD retry attempts.
	DpdRetrycount pulumi.IntOutput `pulumi:"dpdRetrycount"`
	// DPD retry interval.
	DpdRetryinterval pulumi.StringOutput `pulumi:"dpdRetryinterval"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable IKEv2 EAP authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringOutput `pulumi:"eap"`
	// Peer group excluded from EAP authentication.
	EapExcludePeergrp pulumi.StringOutput `pulumi:"eapExcludePeergrp"`
	// IKEv2 EAP peer identity type. Valid values: `use-id-payload`, `send-request`.
	EapIdentity pulumi.StringOutput `pulumi:"eapIdentity"`
	// Enable/disable peer ID uniqueness check. Valid values: `disable`, `keep-new`, `keep-old`.
	EnforceUniqueId pulumi.StringOutput `pulumi:"enforceUniqueId"`
	// Extended sequence number (ESN) negotiation. Valid values: `require`, `allow`, `disable`.
	Esn pulumi.StringOutput `pulumi:"esn"`
	// Number of base Forward Error Correction packets (1 - 100).
	FecBase pulumi.IntOutput `pulumi:"fecBase"`
	// ipsec fec encoding/decoding algorithm (0: reed-solomon, 1: xor).
	FecCodec pulumi.IntOutput `pulumi:"fecCodec"`
	// Enable/disable Forward Error Correction for egress IPsec traffic. Valid values: `enable`, `disable`.
	FecEgress pulumi.StringOutput `pulumi:"fecEgress"`
	// SD-WAN health check.
	FecHealthCheck pulumi.StringOutput `pulumi:"fecHealthCheck"`
	// Enable/disable Forward Error Correction for ingress IPsec traffic. Valid values: `enable`, `disable`.
	FecIngress pulumi.StringOutput `pulumi:"fecIngress"`
	// Forward Error Correction (FEC) mapping profile.
	FecMappingProfile pulumi.StringOutput `pulumi:"fecMappingProfile"`
	// Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).
	FecReceiveTimeout pulumi.IntOutput `pulumi:"fecReceiveTimeout"`
	// Number of redundant Forward Error Correction packets (1 - 100).
	FecRedundant pulumi.IntOutput `pulumi:"fecRedundant"`
	// Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).
	FecSendTimeout pulumi.IntOutput `pulumi:"fecSendTimeout"`
	// Enable/disable FortiClient enforcement. Valid values: `enable`, `disable`.
	ForticlientEnforcement pulumi.StringOutput `pulumi:"forticlientEnforcement"`
	// Enable/disable fragment IKE message on re-transmission. Valid values: `enable`, `disable`.
	Fragmentation pulumi.StringOutput `pulumi:"fragmentation"`
	// IKE fragmentation MTU (500 - 16000).
	FragmentationMtu pulumi.IntOutput `pulumi:"fragmentationMtu"`
	// Enable/disable IKEv2 IDi group authentication. Valid values: `enable`, `disable`.
	GroupAuthentication pulumi.StringOutput `pulumi:"groupAuthentication"`
	// Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)
	GroupAuthenticationSecret pulumi.StringPtrOutput `pulumi:"groupAuthenticationSecret"`
	// Enable/disable sequence number jump ahead for IPsec HA. Valid values: `enable`, `disable`.
	HaSyncEspSeqno pulumi.StringOutput `pulumi:"haSyncEspSeqno"`
	// Enable/disable IPsec tunnel idle timeout. Valid values: `enable`, `disable`.
	IdleTimeout pulumi.StringOutput `pulumi:"idleTimeout"`
	// IPsec tunnel idle timeout in minutes (5 - 43200).
	IdleTimeoutinterval pulumi.IntOutput `pulumi:"idleTimeoutinterval"`
	// IKE protocol version. Valid values: `1`, `2`.
	IkeVersion pulumi.StringOutput `pulumi:"ikeVersion"`
	// Enable/disable allow local LAN access on unity clients. Valid values: `disable`, `enable`.
	IncludeLocalLan pulumi.StringOutput `pulumi:"includeLocalLan"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IP address reuse delay interval in seconds (0 - 28800).
	IpDelayInterval pulumi.IntOutput `pulumi:"ipDelayInterval"`
	// IPv4 DNS server 1.
	Ipv4DnsServer1 pulumi.StringOutput `pulumi:"ipv4DnsServer1"`
	// IPv4 DNS server 2.
	Ipv4DnsServer2 pulumi.StringOutput `pulumi:"ipv4DnsServer2"`
	// IPv4 DNS server 3.
	Ipv4DnsServer3 pulumi.StringOutput `pulumi:"ipv4DnsServer3"`
	// End of IPv4 range.
	Ipv4EndIp pulumi.StringOutput `pulumi:"ipv4EndIp"`
	// Configuration Method IPv4 exclude ranges. The structure of `ipv4ExcludeRange` block is documented below.
	Ipv4ExcludeRanges VpnIpsecPhase1Ipv4ExcludeRangeArrayOutput `pulumi:"ipv4ExcludeRanges"`
	// IPv4 address name.
	Ipv4Name pulumi.StringOutput `pulumi:"ipv4Name"`
	// IPv4 Netmask.
	Ipv4Netmask pulumi.StringOutput `pulumi:"ipv4Netmask"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringOutput `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringOutput `pulumi:"ipv4SplitInclude"`
	// Start of IPv4 range.
	Ipv4StartIp pulumi.StringOutput `pulumi:"ipv4StartIp"`
	// WINS server 1.
	Ipv4WinsServer1 pulumi.StringOutput `pulumi:"ipv4WinsServer1"`
	// WINS server 2.
	Ipv4WinsServer2 pulumi.StringOutput `pulumi:"ipv4WinsServer2"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringOutput `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringOutput `pulumi:"ipv6DnsServer2"`
	// IPv6 DNS server 3.
	Ipv6DnsServer3 pulumi.StringOutput `pulumi:"ipv6DnsServer3"`
	// End of IPv6 range.
	Ipv6EndIp pulumi.StringOutput `pulumi:"ipv6EndIp"`
	// Configuration method IPv6 exclude ranges. The structure of `ipv6ExcludeRange` block is documented below.
	Ipv6ExcludeRanges VpnIpsecPhase1Ipv6ExcludeRangeArrayOutput `pulumi:"ipv6ExcludeRanges"`
	// IPv6 address name.
	Ipv6Name pulumi.StringOutput `pulumi:"ipv6Name"`
	// IPv6 prefix.
	Ipv6Prefix pulumi.IntOutput `pulumi:"ipv6Prefix"`
	// IPv6 subnets that should not be sent over the IPsec tunnel.
	Ipv6SplitExclude pulumi.StringOutput `pulumi:"ipv6SplitExclude"`
	// IPv6 split-include subnets.
	Ipv6SplitInclude pulumi.StringOutput `pulumi:"ipv6SplitInclude"`
	// Start of IPv6 range.
	Ipv6StartIp pulumi.StringOutput `pulumi:"ipv6StartIp"`
	// NAT-T keep alive interval.
	Keepalive pulumi.IntOutput `pulumi:"keepalive"`
	// Time to wait in seconds before phase 1 encryption key expires.
	Keylife pulumi.IntOutput `pulumi:"keylife"`
	// Local VPN gateway.
	LocalGw pulumi.StringOutput `pulumi:"localGw"`
	// Local ID.
	Localid pulumi.StringOutput `pulumi:"localid"`
	// Local ID type. Valid values: `auto`, `fqdn`, `user-fqdn`, `keyid`, `address`, `asn1dn`.
	LocalidType pulumi.StringOutput `pulumi:"localidType"`
	// Enable/disable asymmetric routing for IKE traffic on loopback interface. Valid values: `enable`, `disable`.
	LoopbackAsymroute pulumi.StringOutput `pulumi:"loopbackAsymroute"`
	// Add selectors containing subsets of the configuration depending on traffic. Valid values: `disable`, `subnet`, `host`.
	MeshSelectorType pulumi.StringOutput `pulumi:"meshSelectorType"`
	// ID protection mode used to establish a secure channel. Valid values: `aggressive`, `main`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Enable/disable configuration method. Valid values: `disable`, `enable`.
	ModeCfg pulumi.StringOutput `pulumi:"modeCfg"`
	// Certificate name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable NAT traversal. Valid values: `enable`, `disable`, `forced`.
	Nattraversal pulumi.StringOutput `pulumi:"nattraversal"`
	// IKE SA negotiation timeout in seconds (1 - 300).
	NegotiateTimeout pulumi.IntOutput `pulumi:"negotiateTimeout"`
	// VPN gateway network ID.
	NetworkId pulumi.IntOutput `pulumi:"networkId"`
	// Enable/disable network overlays. Valid values: `disable`, `enable`.
	NetworkOverlay pulumi.StringOutput `pulumi:"networkOverlay"`
	// Enable/disable offloading NPU. Valid values: `enable`, `disable`.
	NpuOffload pulumi.StringOutput `pulumi:"npuOffload"`
	// Accept this peer certificate.
	Peer pulumi.StringOutput `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp pulumi.StringOutput `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid pulumi.StringOutput `pulumi:"peerid"`
	// Accept this peer type. Valid values: `any`, `one`, `dialup`, `peer`, `peergrp`.
	Peertype pulumi.StringOutput `pulumi:"peertype"`
	// Enable/disable IKEv2 Postquantum Preshared Key (PPK). Valid values: `disable`, `allow`, `require`.
	Ppk pulumi.StringOutput `pulumi:"ppk"`
	// IKEv2 Postquantum Preshared Key Identity.
	PpkIdentity pulumi.StringOutput `pulumi:"ppkIdentity"`
	// IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x).
	PpkSecret pulumi.StringPtrOutput `pulumi:"ppkSecret"`
	// Priority for routes added by IKE (0 - 4294967295).
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Phase1 proposal. Valid values: `des-md5`, `des-sha1`, `des-sha256`, `des-sha384`, `des-sha512`, `3des-md5`, `3des-sha1`, `3des-sha256`, `3des-sha384`, `3des-sha512`, `aes128-md5`, `aes128-sha1`, `aes128-sha256`, `aes128-sha384`, `aes128-sha512`, `aes128gcm-prfsha1`, `aes128gcm-prfsha256`, `aes128gcm-prfsha384`, `aes128gcm-prfsha512`, `aes192-md5`, `aes192-sha1`, `aes192-sha256`, `aes192-sha384`, `aes192-sha512`, `aes256-md5`, `aes256-sha1`, `aes256-sha256`, `aes256-sha384`, `aes256-sha512`, `aes256gcm-prfsha1`, `aes256gcm-prfsha256`, `aes256gcm-prfsha384`, `aes256gcm-prfsha512`, `chacha20poly1305-prfsha1`, `chacha20poly1305-prfsha256`, `chacha20poly1305-prfsha384`, `chacha20poly1305-prfsha512`, `aria128-md5`, `aria128-sha1`, `aria128-sha256`, `aria128-sha384`, `aria128-sha512`, `aria192-md5`, `aria192-sha1`, `aria192-sha256`, `aria192-sha384`, `aria192-sha512`, `aria256-md5`, `aria256-sha1`, `aria256-sha256`, `aria256-sha384`, `aria256-sha512`, `seed-md5`, `seed-sha1`, `seed-sha256`, `seed-sha384`, `seed-sha512`.
	Proposal pulumi.StringOutput `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringOutput `pulumi:"psksecret"`
	// Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	PsksecretRemote pulumi.StringPtrOutput `pulumi:"psksecretRemote"`
	// Enable/disable re-authentication upon IKE SA lifetime expiration. Valid values: `disable`, `enable`.
	Reauth pulumi.StringOutput `pulumi:"reauth"`
	// Enable/disable phase1 rekey. Valid values: `enable`, `disable`.
	Rekey pulumi.StringOutput `pulumi:"rekey"`
	// Remote VPN gateway.
	RemoteGw pulumi.StringOutput `pulumi:"remoteGw"`
	// Domain name of remote gateway (eg. name.DDNS.com).
	RemotegwDdns pulumi.StringOutput `pulumi:"remotegwDdns"`
	// Digital Signature Authentication RSA signature format. Valid values: `pkcs1`, `pss`.
	RsaSignatureFormat pulumi.StringOutput `pulumi:"rsaSignatureFormat"`
	// Enable/disable saving XAuth username and password on VPN clients. Valid values: `disable`, `enable`.
	SavePassword pulumi.StringOutput `pulumi:"savePassword"`
	// Enable/disable sending certificate chain. Valid values: `enable`, `disable`.
	SendCertChain pulumi.StringOutput `pulumi:"sendCertChain"`
	// Digital Signature Authentication hash algorithms. Valid values: `sha1`, `sha2-256`, `sha2-384`, `sha2-512`.
	SignatureHashAlg pulumi.StringOutput `pulumi:"signatureHashAlg"`
	// Split-include services.
	SplitIncludeService pulumi.StringOutput `pulumi:"splitIncludeService"`
	// Use Suite-B. Valid values: `disable`, `suite-b-gcm-128`, `suite-b-gcm-256`.
	SuiteB pulumi.StringOutput `pulumi:"suiteB"`
	// Remote gateway type. Valid values: `static`, `dynamic`, `ddns`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Enable/disable support for Cisco UNITY Configuration Method extensions. Valid values: `disable`, `enable`.
	UnitySupport pulumi.StringOutput `pulumi:"unitySupport"`
	// User group name for dialup peers.
	Usrgrp pulumi.StringOutput `pulumi:"usrgrp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// GUI VPN Wizard Type.
	WizardType pulumi.StringOutput `pulumi:"wizardType"`
	// XAuth type. Valid values: `disable`, `client`, `pap`, `chap`, `auto`.
	Xauthtype pulumi.StringOutput `pulumi:"xauthtype"`
}

// NewVpnIpsecPhase1 registers a new resource with the given unique name, arguments, and options.
func NewVpnIpsecPhase1(ctx *pulumi.Context,
	name string, args *VpnIpsecPhase1Args, opts ...pulumi.ResourceOption) (*VpnIpsecPhase1, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Proposal == nil {
		return nil, errors.New("invalid value for required argument 'Proposal'")
	}
	if args.Psksecret == nil {
		return nil, errors.New("invalid value for required argument 'Psksecret'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource VpnIpsecPhase1
	err := ctx.RegisterResource("fortios:index/vpnIpsecPhase1:VpnIpsecPhase1", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnIpsecPhase1 gets an existing VpnIpsecPhase1 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnIpsecPhase1(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnIpsecPhase1State, opts ...pulumi.ResourceOption) (*VpnIpsecPhase1, error) {
	var resource VpnIpsecPhase1
	err := ctx.ReadResource("fortios:index/vpnIpsecPhase1:VpnIpsecPhase1", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnIpsecPhase1 resources.
type vpnIpsecPhase1State struct {
	// Enable/disable verification of RADIUS accounting record. Valid values: `enable`, `disable`.
	AcctVerify *string `pulumi:"acctVerify"`
	// Enable/disable automatically add a route to the remote gateway. Valid values: `enable`, `disable`.
	AddGwRoute *string `pulumi:"addGwRoute"`
	// Enable/disable control addition of a route to peer destination selector. Valid values: `disable`, `enable`.
	AddRoute *string `pulumi:"addRoute"`
	// Enable/disable assignment of IP to IPsec interface via configuration method. Valid values: `disable`, `enable`.
	AssignIp *string `pulumi:"assignIp"`
	// Method by which the IP address will be assigned. Valid values: `range`, `usrgrp`, `dhcp`, `name`.
	AssignIpFrom *string `pulumi:"assignIpFrom"`
	// Authentication method. Valid values: `psk`, `signature`.
	Authmethod *string `pulumi:"authmethod"`
	// Authentication method (remote side). Valid values: `psk`, `signature`.
	AuthmethodRemote *string `pulumi:"authmethodRemote"`
	// XAuth password (max 35 characters).
	Authpasswd *string `pulumi:"authpasswd"`
	// XAuth user name.
	Authusr *string `pulumi:"authusr"`
	// Authentication user group.
	Authusrgrp *string `pulumi:"authusrgrp"`
	// Enable/disable automatic initiation of IKE SA negotiation. Valid values: `enable`, `disable`.
	AutoNegotiate *string `pulumi:"autoNegotiate"`
	// Instruct unity clients about the backup gateway address(es). The structure of `backupGateway` block is documented below.
	BackupGateways []VpnIpsecPhase1BackupGateway `pulumi:"backupGateways"`
	// Message that unity client should display after connecting.
	Banner *string `pulumi:"banner"`
	// Enable/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945. Valid values: `enable`, `disable`.
	CertIdValidation *string `pulumi:"certIdValidation"`
	// Names of up to 4 signed personal certificates. The structure of `certificate` block is documented below.
	Certificates []VpnIpsecPhase1Certificate `pulumi:"certificates"`
	// Enable/disable childless IKEv2 initiation (RFC 6023). Valid values: `enable`, `disable`.
	ChildlessIke *string `pulumi:"childlessIke"`
	// Enable/disable allowing the VPN client to bring up the tunnel when there is no traffic. Valid values: `disable`, `enable`.
	ClientAutoNegotiate *string `pulumi:"clientAutoNegotiate"`
	// Enable/disable allowing the VPN client to keep the tunnel up when there is no traffic. Valid values: `disable`, `enable`.
	ClientKeepAlive *string `pulumi:"clientKeepAlive"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr *string `pulumi:"dhcp6RaLinkaddr"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr *string `pulumi:"dhcpRaGiaddr"`
	// DH group. Valid values: `1`, `2`, `5`, `14`, `15`, `16`, `17`, `18`, `19`, `20`, `21`, `27`, `28`, `29`, `30`, `31`, `32`.
	Dhgrp *string `pulumi:"dhgrp"`
	// Enable/disable IKEv2 Digital Signature Authentication (RFC 7427). Valid values: `enable`, `disable`.
	DigitalSignatureAuth *string `pulumi:"digitalSignatureAuth"`
	// Distance for routes added by IKE (1 - 255).
	Distance *int `pulumi:"distance"`
	// DNS server mode. Valid values: `manual`, `auto`.
	DnsMode *string `pulumi:"dnsMode"`
	// Instruct unity clients about the default DNS domain.
	Domain *string `pulumi:"domain"`
	// Dead Peer Detection mode. Valid values: `disable`, `on-idle`, `on-demand`.
	Dpd *string `pulumi:"dpd"`
	// Number of DPD retry attempts.
	DpdRetrycount *int `pulumi:"dpdRetrycount"`
	// DPD retry interval.
	DpdRetryinterval *string `pulumi:"dpdRetryinterval"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable IKEv2 EAP authentication. Valid values: `enable`, `disable`.
	Eap *string `pulumi:"eap"`
	// Peer group excluded from EAP authentication.
	EapExcludePeergrp *string `pulumi:"eapExcludePeergrp"`
	// IKEv2 EAP peer identity type. Valid values: `use-id-payload`, `send-request`.
	EapIdentity *string `pulumi:"eapIdentity"`
	// Enable/disable peer ID uniqueness check. Valid values: `disable`, `keep-new`, `keep-old`.
	EnforceUniqueId *string `pulumi:"enforceUniqueId"`
	// Extended sequence number (ESN) negotiation. Valid values: `require`, `allow`, `disable`.
	Esn *string `pulumi:"esn"`
	// Number of base Forward Error Correction packets (1 - 100).
	FecBase *int `pulumi:"fecBase"`
	// ipsec fec encoding/decoding algorithm (0: reed-solomon, 1: xor).
	FecCodec *int `pulumi:"fecCodec"`
	// Enable/disable Forward Error Correction for egress IPsec traffic. Valid values: `enable`, `disable`.
	FecEgress *string `pulumi:"fecEgress"`
	// SD-WAN health check.
	FecHealthCheck *string `pulumi:"fecHealthCheck"`
	// Enable/disable Forward Error Correction for ingress IPsec traffic. Valid values: `enable`, `disable`.
	FecIngress *string `pulumi:"fecIngress"`
	// Forward Error Correction (FEC) mapping profile.
	FecMappingProfile *string `pulumi:"fecMappingProfile"`
	// Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).
	FecReceiveTimeout *int `pulumi:"fecReceiveTimeout"`
	// Number of redundant Forward Error Correction packets (1 - 100).
	FecRedundant *int `pulumi:"fecRedundant"`
	// Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).
	FecSendTimeout *int `pulumi:"fecSendTimeout"`
	// Enable/disable FortiClient enforcement. Valid values: `enable`, `disable`.
	ForticlientEnforcement *string `pulumi:"forticlientEnforcement"`
	// Enable/disable fragment IKE message on re-transmission. Valid values: `enable`, `disable`.
	Fragmentation *string `pulumi:"fragmentation"`
	// IKE fragmentation MTU (500 - 16000).
	FragmentationMtu *int `pulumi:"fragmentationMtu"`
	// Enable/disable IKEv2 IDi group authentication. Valid values: `enable`, `disable`.
	GroupAuthentication *string `pulumi:"groupAuthentication"`
	// Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)
	GroupAuthenticationSecret *string `pulumi:"groupAuthenticationSecret"`
	// Enable/disable sequence number jump ahead for IPsec HA. Valid values: `enable`, `disable`.
	HaSyncEspSeqno *string `pulumi:"haSyncEspSeqno"`
	// Enable/disable IPsec tunnel idle timeout. Valid values: `enable`, `disable`.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// IPsec tunnel idle timeout in minutes (5 - 43200).
	IdleTimeoutinterval *int `pulumi:"idleTimeoutinterval"`
	// IKE protocol version. Valid values: `1`, `2`.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Enable/disable allow local LAN access on unity clients. Valid values: `disable`, `enable`.
	IncludeLocalLan *string `pulumi:"includeLocalLan"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface *string `pulumi:"interface"`
	// IP address reuse delay interval in seconds (0 - 28800).
	IpDelayInterval *int `pulumi:"ipDelayInterval"`
	// IPv4 DNS server 1.
	Ipv4DnsServer1 *string `pulumi:"ipv4DnsServer1"`
	// IPv4 DNS server 2.
	Ipv4DnsServer2 *string `pulumi:"ipv4DnsServer2"`
	// IPv4 DNS server 3.
	Ipv4DnsServer3 *string `pulumi:"ipv4DnsServer3"`
	// End of IPv4 range.
	Ipv4EndIp *string `pulumi:"ipv4EndIp"`
	// Configuration Method IPv4 exclude ranges. The structure of `ipv4ExcludeRange` block is documented below.
	Ipv4ExcludeRanges []VpnIpsecPhase1Ipv4ExcludeRange `pulumi:"ipv4ExcludeRanges"`
	// IPv4 address name.
	Ipv4Name *string `pulumi:"ipv4Name"`
	// IPv4 Netmask.
	Ipv4Netmask *string `pulumi:"ipv4Netmask"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude *string `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude *string `pulumi:"ipv4SplitInclude"`
	// Start of IPv4 range.
	Ipv4StartIp *string `pulumi:"ipv4StartIp"`
	// WINS server 1.
	Ipv4WinsServer1 *string `pulumi:"ipv4WinsServer1"`
	// WINS server 2.
	Ipv4WinsServer2 *string `pulumi:"ipv4WinsServer2"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 *string `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 *string `pulumi:"ipv6DnsServer2"`
	// IPv6 DNS server 3.
	Ipv6DnsServer3 *string `pulumi:"ipv6DnsServer3"`
	// End of IPv6 range.
	Ipv6EndIp *string `pulumi:"ipv6EndIp"`
	// Configuration method IPv6 exclude ranges. The structure of `ipv6ExcludeRange` block is documented below.
	Ipv6ExcludeRanges []VpnIpsecPhase1Ipv6ExcludeRange `pulumi:"ipv6ExcludeRanges"`
	// IPv6 address name.
	Ipv6Name *string `pulumi:"ipv6Name"`
	// IPv6 prefix.
	Ipv6Prefix *int `pulumi:"ipv6Prefix"`
	// IPv6 subnets that should not be sent over the IPsec tunnel.
	Ipv6SplitExclude *string `pulumi:"ipv6SplitExclude"`
	// IPv6 split-include subnets.
	Ipv6SplitInclude *string `pulumi:"ipv6SplitInclude"`
	// Start of IPv6 range.
	Ipv6StartIp *string `pulumi:"ipv6StartIp"`
	// NAT-T keep alive interval.
	Keepalive *int `pulumi:"keepalive"`
	// Time to wait in seconds before phase 1 encryption key expires.
	Keylife *int `pulumi:"keylife"`
	// Local VPN gateway.
	LocalGw *string `pulumi:"localGw"`
	// Local ID.
	Localid *string `pulumi:"localid"`
	// Local ID type. Valid values: `auto`, `fqdn`, `user-fqdn`, `keyid`, `address`, `asn1dn`.
	LocalidType *string `pulumi:"localidType"`
	// Enable/disable asymmetric routing for IKE traffic on loopback interface. Valid values: `enable`, `disable`.
	LoopbackAsymroute *string `pulumi:"loopbackAsymroute"`
	// Add selectors containing subsets of the configuration depending on traffic. Valid values: `disable`, `subnet`, `host`.
	MeshSelectorType *string `pulumi:"meshSelectorType"`
	// ID protection mode used to establish a secure channel. Valid values: `aggressive`, `main`.
	Mode *string `pulumi:"mode"`
	// Enable/disable configuration method. Valid values: `disable`, `enable`.
	ModeCfg *string `pulumi:"modeCfg"`
	// Certificate name.
	Name *string `pulumi:"name"`
	// Enable/disable NAT traversal. Valid values: `enable`, `disable`, `forced`.
	Nattraversal *string `pulumi:"nattraversal"`
	// IKE SA negotiation timeout in seconds (1 - 300).
	NegotiateTimeout *int `pulumi:"negotiateTimeout"`
	// VPN gateway network ID.
	NetworkId *int `pulumi:"networkId"`
	// Enable/disable network overlays. Valid values: `disable`, `enable`.
	NetworkOverlay *string `pulumi:"networkOverlay"`
	// Enable/disable offloading NPU. Valid values: `enable`, `disable`.
	NpuOffload *string `pulumi:"npuOffload"`
	// Accept this peer certificate.
	Peer *string `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp *string `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid *string `pulumi:"peerid"`
	// Accept this peer type. Valid values: `any`, `one`, `dialup`, `peer`, `peergrp`.
	Peertype *string `pulumi:"peertype"`
	// Enable/disable IKEv2 Postquantum Preshared Key (PPK). Valid values: `disable`, `allow`, `require`.
	Ppk *string `pulumi:"ppk"`
	// IKEv2 Postquantum Preshared Key Identity.
	PpkIdentity *string `pulumi:"ppkIdentity"`
	// IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x).
	PpkSecret *string `pulumi:"ppkSecret"`
	// Priority for routes added by IKE (0 - 4294967295).
	Priority *int `pulumi:"priority"`
	// Phase1 proposal. Valid values: `des-md5`, `des-sha1`, `des-sha256`, `des-sha384`, `des-sha512`, `3des-md5`, `3des-sha1`, `3des-sha256`, `3des-sha384`, `3des-sha512`, `aes128-md5`, `aes128-sha1`, `aes128-sha256`, `aes128-sha384`, `aes128-sha512`, `aes128gcm-prfsha1`, `aes128gcm-prfsha256`, `aes128gcm-prfsha384`, `aes128gcm-prfsha512`, `aes192-md5`, `aes192-sha1`, `aes192-sha256`, `aes192-sha384`, `aes192-sha512`, `aes256-md5`, `aes256-sha1`, `aes256-sha256`, `aes256-sha384`, `aes256-sha512`, `aes256gcm-prfsha1`, `aes256gcm-prfsha256`, `aes256gcm-prfsha384`, `aes256gcm-prfsha512`, `chacha20poly1305-prfsha1`, `chacha20poly1305-prfsha256`, `chacha20poly1305-prfsha384`, `chacha20poly1305-prfsha512`, `aria128-md5`, `aria128-sha1`, `aria128-sha256`, `aria128-sha384`, `aria128-sha512`, `aria192-md5`, `aria192-sha1`, `aria192-sha256`, `aria192-sha384`, `aria192-sha512`, `aria256-md5`, `aria256-sha1`, `aria256-sha256`, `aria256-sha384`, `aria256-sha512`, `seed-md5`, `seed-sha1`, `seed-sha256`, `seed-sha384`, `seed-sha512`.
	Proposal *string `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret *string `pulumi:"psksecret"`
	// Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	PsksecretRemote *string `pulumi:"psksecretRemote"`
	// Enable/disable re-authentication upon IKE SA lifetime expiration. Valid values: `disable`, `enable`.
	Reauth *string `pulumi:"reauth"`
	// Enable/disable phase1 rekey. Valid values: `enable`, `disable`.
	Rekey *string `pulumi:"rekey"`
	// Remote VPN gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// Domain name of remote gateway (eg. name.DDNS.com).
	RemotegwDdns *string `pulumi:"remotegwDdns"`
	// Digital Signature Authentication RSA signature format. Valid values: `pkcs1`, `pss`.
	RsaSignatureFormat *string `pulumi:"rsaSignatureFormat"`
	// Enable/disable saving XAuth username and password on VPN clients. Valid values: `disable`, `enable`.
	SavePassword *string `pulumi:"savePassword"`
	// Enable/disable sending certificate chain. Valid values: `enable`, `disable`.
	SendCertChain *string `pulumi:"sendCertChain"`
	// Digital Signature Authentication hash algorithms. Valid values: `sha1`, `sha2-256`, `sha2-384`, `sha2-512`.
	SignatureHashAlg *string `pulumi:"signatureHashAlg"`
	// Split-include services.
	SplitIncludeService *string `pulumi:"splitIncludeService"`
	// Use Suite-B. Valid values: `disable`, `suite-b-gcm-128`, `suite-b-gcm-256`.
	SuiteB *string `pulumi:"suiteB"`
	// Remote gateway type. Valid values: `static`, `dynamic`, `ddns`.
	Type *string `pulumi:"type"`
	// Enable/disable support for Cisco UNITY Configuration Method extensions. Valid values: `disable`, `enable`.
	UnitySupport *string `pulumi:"unitySupport"`
	// User group name for dialup peers.
	Usrgrp *string `pulumi:"usrgrp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// GUI VPN Wizard Type.
	WizardType *string `pulumi:"wizardType"`
	// XAuth type. Valid values: `disable`, `client`, `pap`, `chap`, `auto`.
	Xauthtype *string `pulumi:"xauthtype"`
}

type VpnIpsecPhase1State struct {
	// Enable/disable verification of RADIUS accounting record. Valid values: `enable`, `disable`.
	AcctVerify pulumi.StringPtrInput
	// Enable/disable automatically add a route to the remote gateway. Valid values: `enable`, `disable`.
	AddGwRoute pulumi.StringPtrInput
	// Enable/disable control addition of a route to peer destination selector. Valid values: `disable`, `enable`.
	AddRoute pulumi.StringPtrInput
	// Enable/disable assignment of IP to IPsec interface via configuration method. Valid values: `disable`, `enable`.
	AssignIp pulumi.StringPtrInput
	// Method by which the IP address will be assigned. Valid values: `range`, `usrgrp`, `dhcp`, `name`.
	AssignIpFrom pulumi.StringPtrInput
	// Authentication method. Valid values: `psk`, `signature`.
	Authmethod pulumi.StringPtrInput
	// Authentication method (remote side). Valid values: `psk`, `signature`.
	AuthmethodRemote pulumi.StringPtrInput
	// XAuth password (max 35 characters).
	Authpasswd pulumi.StringPtrInput
	// XAuth user name.
	Authusr pulumi.StringPtrInput
	// Authentication user group.
	Authusrgrp pulumi.StringPtrInput
	// Enable/disable automatic initiation of IKE SA negotiation. Valid values: `enable`, `disable`.
	AutoNegotiate pulumi.StringPtrInput
	// Instruct unity clients about the backup gateway address(es). The structure of `backupGateway` block is documented below.
	BackupGateways VpnIpsecPhase1BackupGatewayArrayInput
	// Message that unity client should display after connecting.
	Banner pulumi.StringPtrInput
	// Enable/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945. Valid values: `enable`, `disable`.
	CertIdValidation pulumi.StringPtrInput
	// Names of up to 4 signed personal certificates. The structure of `certificate` block is documented below.
	Certificates VpnIpsecPhase1CertificateArrayInput
	// Enable/disable childless IKEv2 initiation (RFC 6023). Valid values: `enable`, `disable`.
	ChildlessIke pulumi.StringPtrInput
	// Enable/disable allowing the VPN client to bring up the tunnel when there is no traffic. Valid values: `disable`, `enable`.
	ClientAutoNegotiate pulumi.StringPtrInput
	// Enable/disable allowing the VPN client to keep the tunnel up when there is no traffic. Valid values: `disable`, `enable`.
	ClientKeepAlive pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringPtrInput
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringPtrInput
	// DH group. Valid values: `1`, `2`, `5`, `14`, `15`, `16`, `17`, `18`, `19`, `20`, `21`, `27`, `28`, `29`, `30`, `31`, `32`.
	Dhgrp pulumi.StringPtrInput
	// Enable/disable IKEv2 Digital Signature Authentication (RFC 7427). Valid values: `enable`, `disable`.
	DigitalSignatureAuth pulumi.StringPtrInput
	// Distance for routes added by IKE (1 - 255).
	Distance pulumi.IntPtrInput
	// DNS server mode. Valid values: `manual`, `auto`.
	DnsMode pulumi.StringPtrInput
	// Instruct unity clients about the default DNS domain.
	Domain pulumi.StringPtrInput
	// Dead Peer Detection mode. Valid values: `disable`, `on-idle`, `on-demand`.
	Dpd pulumi.StringPtrInput
	// Number of DPD retry attempts.
	DpdRetrycount pulumi.IntPtrInput
	// DPD retry interval.
	DpdRetryinterval pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable IKEv2 EAP authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringPtrInput
	// Peer group excluded from EAP authentication.
	EapExcludePeergrp pulumi.StringPtrInput
	// IKEv2 EAP peer identity type. Valid values: `use-id-payload`, `send-request`.
	EapIdentity pulumi.StringPtrInput
	// Enable/disable peer ID uniqueness check. Valid values: `disable`, `keep-new`, `keep-old`.
	EnforceUniqueId pulumi.StringPtrInput
	// Extended sequence number (ESN) negotiation. Valid values: `require`, `allow`, `disable`.
	Esn pulumi.StringPtrInput
	// Number of base Forward Error Correction packets (1 - 100).
	FecBase pulumi.IntPtrInput
	// ipsec fec encoding/decoding algorithm (0: reed-solomon, 1: xor).
	FecCodec pulumi.IntPtrInput
	// Enable/disable Forward Error Correction for egress IPsec traffic. Valid values: `enable`, `disable`.
	FecEgress pulumi.StringPtrInput
	// SD-WAN health check.
	FecHealthCheck pulumi.StringPtrInput
	// Enable/disable Forward Error Correction for ingress IPsec traffic. Valid values: `enable`, `disable`.
	FecIngress pulumi.StringPtrInput
	// Forward Error Correction (FEC) mapping profile.
	FecMappingProfile pulumi.StringPtrInput
	// Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).
	FecReceiveTimeout pulumi.IntPtrInput
	// Number of redundant Forward Error Correction packets (1 - 100).
	FecRedundant pulumi.IntPtrInput
	// Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).
	FecSendTimeout pulumi.IntPtrInput
	// Enable/disable FortiClient enforcement. Valid values: `enable`, `disable`.
	ForticlientEnforcement pulumi.StringPtrInput
	// Enable/disable fragment IKE message on re-transmission. Valid values: `enable`, `disable`.
	Fragmentation pulumi.StringPtrInput
	// IKE fragmentation MTU (500 - 16000).
	FragmentationMtu pulumi.IntPtrInput
	// Enable/disable IKEv2 IDi group authentication. Valid values: `enable`, `disable`.
	GroupAuthentication pulumi.StringPtrInput
	// Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)
	GroupAuthenticationSecret pulumi.StringPtrInput
	// Enable/disable sequence number jump ahead for IPsec HA. Valid values: `enable`, `disable`.
	HaSyncEspSeqno pulumi.StringPtrInput
	// Enable/disable IPsec tunnel idle timeout. Valid values: `enable`, `disable`.
	IdleTimeout pulumi.StringPtrInput
	// IPsec tunnel idle timeout in minutes (5 - 43200).
	IdleTimeoutinterval pulumi.IntPtrInput
	// IKE protocol version. Valid values: `1`, `2`.
	IkeVersion pulumi.StringPtrInput
	// Enable/disable allow local LAN access on unity clients. Valid values: `disable`, `enable`.
	IncludeLocalLan pulumi.StringPtrInput
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringPtrInput
	// IP address reuse delay interval in seconds (0 - 28800).
	IpDelayInterval pulumi.IntPtrInput
	// IPv4 DNS server 1.
	Ipv4DnsServer1 pulumi.StringPtrInput
	// IPv4 DNS server 2.
	Ipv4DnsServer2 pulumi.StringPtrInput
	// IPv4 DNS server 3.
	Ipv4DnsServer3 pulumi.StringPtrInput
	// End of IPv4 range.
	Ipv4EndIp pulumi.StringPtrInput
	// Configuration Method IPv4 exclude ranges. The structure of `ipv4ExcludeRange` block is documented below.
	Ipv4ExcludeRanges VpnIpsecPhase1Ipv4ExcludeRangeArrayInput
	// IPv4 address name.
	Ipv4Name pulumi.StringPtrInput
	// IPv4 Netmask.
	Ipv4Netmask pulumi.StringPtrInput
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringPtrInput
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringPtrInput
	// Start of IPv4 range.
	Ipv4StartIp pulumi.StringPtrInput
	// WINS server 1.
	Ipv4WinsServer1 pulumi.StringPtrInput
	// WINS server 2.
	Ipv4WinsServer2 pulumi.StringPtrInput
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringPtrInput
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringPtrInput
	// IPv6 DNS server 3.
	Ipv6DnsServer3 pulumi.StringPtrInput
	// End of IPv6 range.
	Ipv6EndIp pulumi.StringPtrInput
	// Configuration method IPv6 exclude ranges. The structure of `ipv6ExcludeRange` block is documented below.
	Ipv6ExcludeRanges VpnIpsecPhase1Ipv6ExcludeRangeArrayInput
	// IPv6 address name.
	Ipv6Name pulumi.StringPtrInput
	// IPv6 prefix.
	Ipv6Prefix pulumi.IntPtrInput
	// IPv6 subnets that should not be sent over the IPsec tunnel.
	Ipv6SplitExclude pulumi.StringPtrInput
	// IPv6 split-include subnets.
	Ipv6SplitInclude pulumi.StringPtrInput
	// Start of IPv6 range.
	Ipv6StartIp pulumi.StringPtrInput
	// NAT-T keep alive interval.
	Keepalive pulumi.IntPtrInput
	// Time to wait in seconds before phase 1 encryption key expires.
	Keylife pulumi.IntPtrInput
	// Local VPN gateway.
	LocalGw pulumi.StringPtrInput
	// Local ID.
	Localid pulumi.StringPtrInput
	// Local ID type. Valid values: `auto`, `fqdn`, `user-fqdn`, `keyid`, `address`, `asn1dn`.
	LocalidType pulumi.StringPtrInput
	// Enable/disable asymmetric routing for IKE traffic on loopback interface. Valid values: `enable`, `disable`.
	LoopbackAsymroute pulumi.StringPtrInput
	// Add selectors containing subsets of the configuration depending on traffic. Valid values: `disable`, `subnet`, `host`.
	MeshSelectorType pulumi.StringPtrInput
	// ID protection mode used to establish a secure channel. Valid values: `aggressive`, `main`.
	Mode pulumi.StringPtrInput
	// Enable/disable configuration method. Valid values: `disable`, `enable`.
	ModeCfg pulumi.StringPtrInput
	// Certificate name.
	Name pulumi.StringPtrInput
	// Enable/disable NAT traversal. Valid values: `enable`, `disable`, `forced`.
	Nattraversal pulumi.StringPtrInput
	// IKE SA negotiation timeout in seconds (1 - 300).
	NegotiateTimeout pulumi.IntPtrInput
	// VPN gateway network ID.
	NetworkId pulumi.IntPtrInput
	// Enable/disable network overlays. Valid values: `disable`, `enable`.
	NetworkOverlay pulumi.StringPtrInput
	// Enable/disable offloading NPU. Valid values: `enable`, `disable`.
	NpuOffload pulumi.StringPtrInput
	// Accept this peer certificate.
	Peer pulumi.StringPtrInput
	// Accept this peer certificate group.
	Peergrp pulumi.StringPtrInput
	// Accept this peer identity.
	Peerid pulumi.StringPtrInput
	// Accept this peer type. Valid values: `any`, `one`, `dialup`, `peer`, `peergrp`.
	Peertype pulumi.StringPtrInput
	// Enable/disable IKEv2 Postquantum Preshared Key (PPK). Valid values: `disable`, `allow`, `require`.
	Ppk pulumi.StringPtrInput
	// IKEv2 Postquantum Preshared Key Identity.
	PpkIdentity pulumi.StringPtrInput
	// IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x).
	PpkSecret pulumi.StringPtrInput
	// Priority for routes added by IKE (0 - 4294967295).
	Priority pulumi.IntPtrInput
	// Phase1 proposal. Valid values: `des-md5`, `des-sha1`, `des-sha256`, `des-sha384`, `des-sha512`, `3des-md5`, `3des-sha1`, `3des-sha256`, `3des-sha384`, `3des-sha512`, `aes128-md5`, `aes128-sha1`, `aes128-sha256`, `aes128-sha384`, `aes128-sha512`, `aes128gcm-prfsha1`, `aes128gcm-prfsha256`, `aes128gcm-prfsha384`, `aes128gcm-prfsha512`, `aes192-md5`, `aes192-sha1`, `aes192-sha256`, `aes192-sha384`, `aes192-sha512`, `aes256-md5`, `aes256-sha1`, `aes256-sha256`, `aes256-sha384`, `aes256-sha512`, `aes256gcm-prfsha1`, `aes256gcm-prfsha256`, `aes256gcm-prfsha384`, `aes256gcm-prfsha512`, `chacha20poly1305-prfsha1`, `chacha20poly1305-prfsha256`, `chacha20poly1305-prfsha384`, `chacha20poly1305-prfsha512`, `aria128-md5`, `aria128-sha1`, `aria128-sha256`, `aria128-sha384`, `aria128-sha512`, `aria192-md5`, `aria192-sha1`, `aria192-sha256`, `aria192-sha384`, `aria192-sha512`, `aria256-md5`, `aria256-sha1`, `aria256-sha256`, `aria256-sha384`, `aria256-sha512`, `seed-md5`, `seed-sha1`, `seed-sha256`, `seed-sha384`, `seed-sha512`.
	Proposal pulumi.StringPtrInput
	// Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringPtrInput
	// Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	PsksecretRemote pulumi.StringPtrInput
	// Enable/disable re-authentication upon IKE SA lifetime expiration. Valid values: `disable`, `enable`.
	Reauth pulumi.StringPtrInput
	// Enable/disable phase1 rekey. Valid values: `enable`, `disable`.
	Rekey pulumi.StringPtrInput
	// Remote VPN gateway.
	RemoteGw pulumi.StringPtrInput
	// Domain name of remote gateway (eg. name.DDNS.com).
	RemotegwDdns pulumi.StringPtrInput
	// Digital Signature Authentication RSA signature format. Valid values: `pkcs1`, `pss`.
	RsaSignatureFormat pulumi.StringPtrInput
	// Enable/disable saving XAuth username and password on VPN clients. Valid values: `disable`, `enable`.
	SavePassword pulumi.StringPtrInput
	// Enable/disable sending certificate chain. Valid values: `enable`, `disable`.
	SendCertChain pulumi.StringPtrInput
	// Digital Signature Authentication hash algorithms. Valid values: `sha1`, `sha2-256`, `sha2-384`, `sha2-512`.
	SignatureHashAlg pulumi.StringPtrInput
	// Split-include services.
	SplitIncludeService pulumi.StringPtrInput
	// Use Suite-B. Valid values: `disable`, `suite-b-gcm-128`, `suite-b-gcm-256`.
	SuiteB pulumi.StringPtrInput
	// Remote gateway type. Valid values: `static`, `dynamic`, `ddns`.
	Type pulumi.StringPtrInput
	// Enable/disable support for Cisco UNITY Configuration Method extensions. Valid values: `disable`, `enable`.
	UnitySupport pulumi.StringPtrInput
	// User group name for dialup peers.
	Usrgrp pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// GUI VPN Wizard Type.
	WizardType pulumi.StringPtrInput
	// XAuth type. Valid values: `disable`, `client`, `pap`, `chap`, `auto`.
	Xauthtype pulumi.StringPtrInput
}

func (VpnIpsecPhase1State) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecPhase1State)(nil)).Elem()
}

type vpnIpsecPhase1Args struct {
	// Enable/disable verification of RADIUS accounting record. Valid values: `enable`, `disable`.
	AcctVerify *string `pulumi:"acctVerify"`
	// Enable/disable automatically add a route to the remote gateway. Valid values: `enable`, `disable`.
	AddGwRoute *string `pulumi:"addGwRoute"`
	// Enable/disable control addition of a route to peer destination selector. Valid values: `disable`, `enable`.
	AddRoute *string `pulumi:"addRoute"`
	// Enable/disable assignment of IP to IPsec interface via configuration method. Valid values: `disable`, `enable`.
	AssignIp *string `pulumi:"assignIp"`
	// Method by which the IP address will be assigned. Valid values: `range`, `usrgrp`, `dhcp`, `name`.
	AssignIpFrom *string `pulumi:"assignIpFrom"`
	// Authentication method. Valid values: `psk`, `signature`.
	Authmethod *string `pulumi:"authmethod"`
	// Authentication method (remote side). Valid values: `psk`, `signature`.
	AuthmethodRemote *string `pulumi:"authmethodRemote"`
	// XAuth password (max 35 characters).
	Authpasswd *string `pulumi:"authpasswd"`
	// XAuth user name.
	Authusr *string `pulumi:"authusr"`
	// Authentication user group.
	Authusrgrp *string `pulumi:"authusrgrp"`
	// Enable/disable automatic initiation of IKE SA negotiation. Valid values: `enable`, `disable`.
	AutoNegotiate *string `pulumi:"autoNegotiate"`
	// Instruct unity clients about the backup gateway address(es). The structure of `backupGateway` block is documented below.
	BackupGateways []VpnIpsecPhase1BackupGateway `pulumi:"backupGateways"`
	// Message that unity client should display after connecting.
	Banner *string `pulumi:"banner"`
	// Enable/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945. Valid values: `enable`, `disable`.
	CertIdValidation *string `pulumi:"certIdValidation"`
	// Names of up to 4 signed personal certificates. The structure of `certificate` block is documented below.
	Certificates []VpnIpsecPhase1Certificate `pulumi:"certificates"`
	// Enable/disable childless IKEv2 initiation (RFC 6023). Valid values: `enable`, `disable`.
	ChildlessIke *string `pulumi:"childlessIke"`
	// Enable/disable allowing the VPN client to bring up the tunnel when there is no traffic. Valid values: `disable`, `enable`.
	ClientAutoNegotiate *string `pulumi:"clientAutoNegotiate"`
	// Enable/disable allowing the VPN client to keep the tunnel up when there is no traffic. Valid values: `disable`, `enable`.
	ClientKeepAlive *string `pulumi:"clientKeepAlive"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr *string `pulumi:"dhcp6RaLinkaddr"`
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr *string `pulumi:"dhcpRaGiaddr"`
	// DH group. Valid values: `1`, `2`, `5`, `14`, `15`, `16`, `17`, `18`, `19`, `20`, `21`, `27`, `28`, `29`, `30`, `31`, `32`.
	Dhgrp *string `pulumi:"dhgrp"`
	// Enable/disable IKEv2 Digital Signature Authentication (RFC 7427). Valid values: `enable`, `disable`.
	DigitalSignatureAuth *string `pulumi:"digitalSignatureAuth"`
	// Distance for routes added by IKE (1 - 255).
	Distance *int `pulumi:"distance"`
	// DNS server mode. Valid values: `manual`, `auto`.
	DnsMode *string `pulumi:"dnsMode"`
	// Instruct unity clients about the default DNS domain.
	Domain *string `pulumi:"domain"`
	// Dead Peer Detection mode. Valid values: `disable`, `on-idle`, `on-demand`.
	Dpd *string `pulumi:"dpd"`
	// Number of DPD retry attempts.
	DpdRetrycount *int `pulumi:"dpdRetrycount"`
	// DPD retry interval.
	DpdRetryinterval *string `pulumi:"dpdRetryinterval"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable IKEv2 EAP authentication. Valid values: `enable`, `disable`.
	Eap *string `pulumi:"eap"`
	// Peer group excluded from EAP authentication.
	EapExcludePeergrp *string `pulumi:"eapExcludePeergrp"`
	// IKEv2 EAP peer identity type. Valid values: `use-id-payload`, `send-request`.
	EapIdentity *string `pulumi:"eapIdentity"`
	// Enable/disable peer ID uniqueness check. Valid values: `disable`, `keep-new`, `keep-old`.
	EnforceUniqueId *string `pulumi:"enforceUniqueId"`
	// Extended sequence number (ESN) negotiation. Valid values: `require`, `allow`, `disable`.
	Esn *string `pulumi:"esn"`
	// Number of base Forward Error Correction packets (1 - 100).
	FecBase *int `pulumi:"fecBase"`
	// ipsec fec encoding/decoding algorithm (0: reed-solomon, 1: xor).
	FecCodec *int `pulumi:"fecCodec"`
	// Enable/disable Forward Error Correction for egress IPsec traffic. Valid values: `enable`, `disable`.
	FecEgress *string `pulumi:"fecEgress"`
	// SD-WAN health check.
	FecHealthCheck *string `pulumi:"fecHealthCheck"`
	// Enable/disable Forward Error Correction for ingress IPsec traffic. Valid values: `enable`, `disable`.
	FecIngress *string `pulumi:"fecIngress"`
	// Forward Error Correction (FEC) mapping profile.
	FecMappingProfile *string `pulumi:"fecMappingProfile"`
	// Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).
	FecReceiveTimeout *int `pulumi:"fecReceiveTimeout"`
	// Number of redundant Forward Error Correction packets (1 - 100).
	FecRedundant *int `pulumi:"fecRedundant"`
	// Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).
	FecSendTimeout *int `pulumi:"fecSendTimeout"`
	// Enable/disable FortiClient enforcement. Valid values: `enable`, `disable`.
	ForticlientEnforcement *string `pulumi:"forticlientEnforcement"`
	// Enable/disable fragment IKE message on re-transmission. Valid values: `enable`, `disable`.
	Fragmentation *string `pulumi:"fragmentation"`
	// IKE fragmentation MTU (500 - 16000).
	FragmentationMtu *int `pulumi:"fragmentationMtu"`
	// Enable/disable IKEv2 IDi group authentication. Valid values: `enable`, `disable`.
	GroupAuthentication *string `pulumi:"groupAuthentication"`
	// Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)
	GroupAuthenticationSecret *string `pulumi:"groupAuthenticationSecret"`
	// Enable/disable sequence number jump ahead for IPsec HA. Valid values: `enable`, `disable`.
	HaSyncEspSeqno *string `pulumi:"haSyncEspSeqno"`
	// Enable/disable IPsec tunnel idle timeout. Valid values: `enable`, `disable`.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// IPsec tunnel idle timeout in minutes (5 - 43200).
	IdleTimeoutinterval *int `pulumi:"idleTimeoutinterval"`
	// IKE protocol version. Valid values: `1`, `2`.
	IkeVersion *string `pulumi:"ikeVersion"`
	// Enable/disable allow local LAN access on unity clients. Valid values: `disable`, `enable`.
	IncludeLocalLan *string `pulumi:"includeLocalLan"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface string `pulumi:"interface"`
	// IP address reuse delay interval in seconds (0 - 28800).
	IpDelayInterval *int `pulumi:"ipDelayInterval"`
	// IPv4 DNS server 1.
	Ipv4DnsServer1 *string `pulumi:"ipv4DnsServer1"`
	// IPv4 DNS server 2.
	Ipv4DnsServer2 *string `pulumi:"ipv4DnsServer2"`
	// IPv4 DNS server 3.
	Ipv4DnsServer3 *string `pulumi:"ipv4DnsServer3"`
	// End of IPv4 range.
	Ipv4EndIp *string `pulumi:"ipv4EndIp"`
	// Configuration Method IPv4 exclude ranges. The structure of `ipv4ExcludeRange` block is documented below.
	Ipv4ExcludeRanges []VpnIpsecPhase1Ipv4ExcludeRange `pulumi:"ipv4ExcludeRanges"`
	// IPv4 address name.
	Ipv4Name *string `pulumi:"ipv4Name"`
	// IPv4 Netmask.
	Ipv4Netmask *string `pulumi:"ipv4Netmask"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude *string `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude *string `pulumi:"ipv4SplitInclude"`
	// Start of IPv4 range.
	Ipv4StartIp *string `pulumi:"ipv4StartIp"`
	// WINS server 1.
	Ipv4WinsServer1 *string `pulumi:"ipv4WinsServer1"`
	// WINS server 2.
	Ipv4WinsServer2 *string `pulumi:"ipv4WinsServer2"`
	// IPv6 DNS server 1.
	Ipv6DnsServer1 *string `pulumi:"ipv6DnsServer1"`
	// IPv6 DNS server 2.
	Ipv6DnsServer2 *string `pulumi:"ipv6DnsServer2"`
	// IPv6 DNS server 3.
	Ipv6DnsServer3 *string `pulumi:"ipv6DnsServer3"`
	// End of IPv6 range.
	Ipv6EndIp *string `pulumi:"ipv6EndIp"`
	// Configuration method IPv6 exclude ranges. The structure of `ipv6ExcludeRange` block is documented below.
	Ipv6ExcludeRanges []VpnIpsecPhase1Ipv6ExcludeRange `pulumi:"ipv6ExcludeRanges"`
	// IPv6 address name.
	Ipv6Name *string `pulumi:"ipv6Name"`
	// IPv6 prefix.
	Ipv6Prefix *int `pulumi:"ipv6Prefix"`
	// IPv6 subnets that should not be sent over the IPsec tunnel.
	Ipv6SplitExclude *string `pulumi:"ipv6SplitExclude"`
	// IPv6 split-include subnets.
	Ipv6SplitInclude *string `pulumi:"ipv6SplitInclude"`
	// Start of IPv6 range.
	Ipv6StartIp *string `pulumi:"ipv6StartIp"`
	// NAT-T keep alive interval.
	Keepalive *int `pulumi:"keepalive"`
	// Time to wait in seconds before phase 1 encryption key expires.
	Keylife *int `pulumi:"keylife"`
	// Local VPN gateway.
	LocalGw *string `pulumi:"localGw"`
	// Local ID.
	Localid *string `pulumi:"localid"`
	// Local ID type. Valid values: `auto`, `fqdn`, `user-fqdn`, `keyid`, `address`, `asn1dn`.
	LocalidType *string `pulumi:"localidType"`
	// Enable/disable asymmetric routing for IKE traffic on loopback interface. Valid values: `enable`, `disable`.
	LoopbackAsymroute *string `pulumi:"loopbackAsymroute"`
	// Add selectors containing subsets of the configuration depending on traffic. Valid values: `disable`, `subnet`, `host`.
	MeshSelectorType *string `pulumi:"meshSelectorType"`
	// ID protection mode used to establish a secure channel. Valid values: `aggressive`, `main`.
	Mode *string `pulumi:"mode"`
	// Enable/disable configuration method. Valid values: `disable`, `enable`.
	ModeCfg *string `pulumi:"modeCfg"`
	// Certificate name.
	Name *string `pulumi:"name"`
	// Enable/disable NAT traversal. Valid values: `enable`, `disable`, `forced`.
	Nattraversal *string `pulumi:"nattraversal"`
	// IKE SA negotiation timeout in seconds (1 - 300).
	NegotiateTimeout *int `pulumi:"negotiateTimeout"`
	// VPN gateway network ID.
	NetworkId *int `pulumi:"networkId"`
	// Enable/disable network overlays. Valid values: `disable`, `enable`.
	NetworkOverlay *string `pulumi:"networkOverlay"`
	// Enable/disable offloading NPU. Valid values: `enable`, `disable`.
	NpuOffload *string `pulumi:"npuOffload"`
	// Accept this peer certificate.
	Peer *string `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp *string `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid *string `pulumi:"peerid"`
	// Accept this peer type. Valid values: `any`, `one`, `dialup`, `peer`, `peergrp`.
	Peertype *string `pulumi:"peertype"`
	// Enable/disable IKEv2 Postquantum Preshared Key (PPK). Valid values: `disable`, `allow`, `require`.
	Ppk *string `pulumi:"ppk"`
	// IKEv2 Postquantum Preshared Key Identity.
	PpkIdentity *string `pulumi:"ppkIdentity"`
	// IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x).
	PpkSecret *string `pulumi:"ppkSecret"`
	// Priority for routes added by IKE (0 - 4294967295).
	Priority *int `pulumi:"priority"`
	// Phase1 proposal. Valid values: `des-md5`, `des-sha1`, `des-sha256`, `des-sha384`, `des-sha512`, `3des-md5`, `3des-sha1`, `3des-sha256`, `3des-sha384`, `3des-sha512`, `aes128-md5`, `aes128-sha1`, `aes128-sha256`, `aes128-sha384`, `aes128-sha512`, `aes128gcm-prfsha1`, `aes128gcm-prfsha256`, `aes128gcm-prfsha384`, `aes128gcm-prfsha512`, `aes192-md5`, `aes192-sha1`, `aes192-sha256`, `aes192-sha384`, `aes192-sha512`, `aes256-md5`, `aes256-sha1`, `aes256-sha256`, `aes256-sha384`, `aes256-sha512`, `aes256gcm-prfsha1`, `aes256gcm-prfsha256`, `aes256gcm-prfsha384`, `aes256gcm-prfsha512`, `chacha20poly1305-prfsha1`, `chacha20poly1305-prfsha256`, `chacha20poly1305-prfsha384`, `chacha20poly1305-prfsha512`, `aria128-md5`, `aria128-sha1`, `aria128-sha256`, `aria128-sha384`, `aria128-sha512`, `aria192-md5`, `aria192-sha1`, `aria192-sha256`, `aria192-sha384`, `aria192-sha512`, `aria256-md5`, `aria256-sha1`, `aria256-sha256`, `aria256-sha384`, `aria256-sha512`, `seed-md5`, `seed-sha1`, `seed-sha256`, `seed-sha384`, `seed-sha512`.
	Proposal string `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret string `pulumi:"psksecret"`
	// Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	PsksecretRemote *string `pulumi:"psksecretRemote"`
	// Enable/disable re-authentication upon IKE SA lifetime expiration. Valid values: `disable`, `enable`.
	Reauth *string `pulumi:"reauth"`
	// Enable/disable phase1 rekey. Valid values: `enable`, `disable`.
	Rekey *string `pulumi:"rekey"`
	// Remote VPN gateway.
	RemoteGw *string `pulumi:"remoteGw"`
	// Domain name of remote gateway (eg. name.DDNS.com).
	RemotegwDdns *string `pulumi:"remotegwDdns"`
	// Digital Signature Authentication RSA signature format. Valid values: `pkcs1`, `pss`.
	RsaSignatureFormat *string `pulumi:"rsaSignatureFormat"`
	// Enable/disable saving XAuth username and password on VPN clients. Valid values: `disable`, `enable`.
	SavePassword *string `pulumi:"savePassword"`
	// Enable/disable sending certificate chain. Valid values: `enable`, `disable`.
	SendCertChain *string `pulumi:"sendCertChain"`
	// Digital Signature Authentication hash algorithms. Valid values: `sha1`, `sha2-256`, `sha2-384`, `sha2-512`.
	SignatureHashAlg *string `pulumi:"signatureHashAlg"`
	// Split-include services.
	SplitIncludeService *string `pulumi:"splitIncludeService"`
	// Use Suite-B. Valid values: `disable`, `suite-b-gcm-128`, `suite-b-gcm-256`.
	SuiteB *string `pulumi:"suiteB"`
	// Remote gateway type. Valid values: `static`, `dynamic`, `ddns`.
	Type *string `pulumi:"type"`
	// Enable/disable support for Cisco UNITY Configuration Method extensions. Valid values: `disable`, `enable`.
	UnitySupport *string `pulumi:"unitySupport"`
	// User group name for dialup peers.
	Usrgrp *string `pulumi:"usrgrp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// GUI VPN Wizard Type.
	WizardType *string `pulumi:"wizardType"`
	// XAuth type. Valid values: `disable`, `client`, `pap`, `chap`, `auto`.
	Xauthtype *string `pulumi:"xauthtype"`
}

// The set of arguments for constructing a VpnIpsecPhase1 resource.
type VpnIpsecPhase1Args struct {
	// Enable/disable verification of RADIUS accounting record. Valid values: `enable`, `disable`.
	AcctVerify pulumi.StringPtrInput
	// Enable/disable automatically add a route to the remote gateway. Valid values: `enable`, `disable`.
	AddGwRoute pulumi.StringPtrInput
	// Enable/disable control addition of a route to peer destination selector. Valid values: `disable`, `enable`.
	AddRoute pulumi.StringPtrInput
	// Enable/disable assignment of IP to IPsec interface via configuration method. Valid values: `disable`, `enable`.
	AssignIp pulumi.StringPtrInput
	// Method by which the IP address will be assigned. Valid values: `range`, `usrgrp`, `dhcp`, `name`.
	AssignIpFrom pulumi.StringPtrInput
	// Authentication method. Valid values: `psk`, `signature`.
	Authmethod pulumi.StringPtrInput
	// Authentication method (remote side). Valid values: `psk`, `signature`.
	AuthmethodRemote pulumi.StringPtrInput
	// XAuth password (max 35 characters).
	Authpasswd pulumi.StringPtrInput
	// XAuth user name.
	Authusr pulumi.StringPtrInput
	// Authentication user group.
	Authusrgrp pulumi.StringPtrInput
	// Enable/disable automatic initiation of IKE SA negotiation. Valid values: `enable`, `disable`.
	AutoNegotiate pulumi.StringPtrInput
	// Instruct unity clients about the backup gateway address(es). The structure of `backupGateway` block is documented below.
	BackupGateways VpnIpsecPhase1BackupGatewayArrayInput
	// Message that unity client should display after connecting.
	Banner pulumi.StringPtrInput
	// Enable/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945. Valid values: `enable`, `disable`.
	CertIdValidation pulumi.StringPtrInput
	// Names of up to 4 signed personal certificates. The structure of `certificate` block is documented below.
	Certificates VpnIpsecPhase1CertificateArrayInput
	// Enable/disable childless IKEv2 initiation (RFC 6023). Valid values: `enable`, `disable`.
	ChildlessIke pulumi.StringPtrInput
	// Enable/disable allowing the VPN client to bring up the tunnel when there is no traffic. Valid values: `disable`, `enable`.
	ClientAutoNegotiate pulumi.StringPtrInput
	// Enable/disable allowing the VPN client to keep the tunnel up when there is no traffic. Valid values: `disable`, `enable`.
	ClientKeepAlive pulumi.StringPtrInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Relay agent IPv6 link address to use in DHCP6 requests.
	Dhcp6RaLinkaddr pulumi.StringPtrInput
	// Relay agent gateway IP address to use in the giaddr field of DHCP requests.
	DhcpRaGiaddr pulumi.StringPtrInput
	// DH group. Valid values: `1`, `2`, `5`, `14`, `15`, `16`, `17`, `18`, `19`, `20`, `21`, `27`, `28`, `29`, `30`, `31`, `32`.
	Dhgrp pulumi.StringPtrInput
	// Enable/disable IKEv2 Digital Signature Authentication (RFC 7427). Valid values: `enable`, `disable`.
	DigitalSignatureAuth pulumi.StringPtrInput
	// Distance for routes added by IKE (1 - 255).
	Distance pulumi.IntPtrInput
	// DNS server mode. Valid values: `manual`, `auto`.
	DnsMode pulumi.StringPtrInput
	// Instruct unity clients about the default DNS domain.
	Domain pulumi.StringPtrInput
	// Dead Peer Detection mode. Valid values: `disable`, `on-idle`, `on-demand`.
	Dpd pulumi.StringPtrInput
	// Number of DPD retry attempts.
	DpdRetrycount pulumi.IntPtrInput
	// DPD retry interval.
	DpdRetryinterval pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable IKEv2 EAP authentication. Valid values: `enable`, `disable`.
	Eap pulumi.StringPtrInput
	// Peer group excluded from EAP authentication.
	EapExcludePeergrp pulumi.StringPtrInput
	// IKEv2 EAP peer identity type. Valid values: `use-id-payload`, `send-request`.
	EapIdentity pulumi.StringPtrInput
	// Enable/disable peer ID uniqueness check. Valid values: `disable`, `keep-new`, `keep-old`.
	EnforceUniqueId pulumi.StringPtrInput
	// Extended sequence number (ESN) negotiation. Valid values: `require`, `allow`, `disable`.
	Esn pulumi.StringPtrInput
	// Number of base Forward Error Correction packets (1 - 100).
	FecBase pulumi.IntPtrInput
	// ipsec fec encoding/decoding algorithm (0: reed-solomon, 1: xor).
	FecCodec pulumi.IntPtrInput
	// Enable/disable Forward Error Correction for egress IPsec traffic. Valid values: `enable`, `disable`.
	FecEgress pulumi.StringPtrInput
	// SD-WAN health check.
	FecHealthCheck pulumi.StringPtrInput
	// Enable/disable Forward Error Correction for ingress IPsec traffic. Valid values: `enable`, `disable`.
	FecIngress pulumi.StringPtrInput
	// Forward Error Correction (FEC) mapping profile.
	FecMappingProfile pulumi.StringPtrInput
	// Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).
	FecReceiveTimeout pulumi.IntPtrInput
	// Number of redundant Forward Error Correction packets (1 - 100).
	FecRedundant pulumi.IntPtrInput
	// Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).
	FecSendTimeout pulumi.IntPtrInput
	// Enable/disable FortiClient enforcement. Valid values: `enable`, `disable`.
	ForticlientEnforcement pulumi.StringPtrInput
	// Enable/disable fragment IKE message on re-transmission. Valid values: `enable`, `disable`.
	Fragmentation pulumi.StringPtrInput
	// IKE fragmentation MTU (500 - 16000).
	FragmentationMtu pulumi.IntPtrInput
	// Enable/disable IKEv2 IDi group authentication. Valid values: `enable`, `disable`.
	GroupAuthentication pulumi.StringPtrInput
	// Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)
	GroupAuthenticationSecret pulumi.StringPtrInput
	// Enable/disable sequence number jump ahead for IPsec HA. Valid values: `enable`, `disable`.
	HaSyncEspSeqno pulumi.StringPtrInput
	// Enable/disable IPsec tunnel idle timeout. Valid values: `enable`, `disable`.
	IdleTimeout pulumi.StringPtrInput
	// IPsec tunnel idle timeout in minutes (5 - 43200).
	IdleTimeoutinterval pulumi.IntPtrInput
	// IKE protocol version. Valid values: `1`, `2`.
	IkeVersion pulumi.StringPtrInput
	// Enable/disable allow local LAN access on unity clients. Valid values: `disable`, `enable`.
	IncludeLocalLan pulumi.StringPtrInput
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringInput
	// IP address reuse delay interval in seconds (0 - 28800).
	IpDelayInterval pulumi.IntPtrInput
	// IPv4 DNS server 1.
	Ipv4DnsServer1 pulumi.StringPtrInput
	// IPv4 DNS server 2.
	Ipv4DnsServer2 pulumi.StringPtrInput
	// IPv4 DNS server 3.
	Ipv4DnsServer3 pulumi.StringPtrInput
	// End of IPv4 range.
	Ipv4EndIp pulumi.StringPtrInput
	// Configuration Method IPv4 exclude ranges. The structure of `ipv4ExcludeRange` block is documented below.
	Ipv4ExcludeRanges VpnIpsecPhase1Ipv4ExcludeRangeArrayInput
	// IPv4 address name.
	Ipv4Name pulumi.StringPtrInput
	// IPv4 Netmask.
	Ipv4Netmask pulumi.StringPtrInput
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringPtrInput
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringPtrInput
	// Start of IPv4 range.
	Ipv4StartIp pulumi.StringPtrInput
	// WINS server 1.
	Ipv4WinsServer1 pulumi.StringPtrInput
	// WINS server 2.
	Ipv4WinsServer2 pulumi.StringPtrInput
	// IPv6 DNS server 1.
	Ipv6DnsServer1 pulumi.StringPtrInput
	// IPv6 DNS server 2.
	Ipv6DnsServer2 pulumi.StringPtrInput
	// IPv6 DNS server 3.
	Ipv6DnsServer3 pulumi.StringPtrInput
	// End of IPv6 range.
	Ipv6EndIp pulumi.StringPtrInput
	// Configuration method IPv6 exclude ranges. The structure of `ipv6ExcludeRange` block is documented below.
	Ipv6ExcludeRanges VpnIpsecPhase1Ipv6ExcludeRangeArrayInput
	// IPv6 address name.
	Ipv6Name pulumi.StringPtrInput
	// IPv6 prefix.
	Ipv6Prefix pulumi.IntPtrInput
	// IPv6 subnets that should not be sent over the IPsec tunnel.
	Ipv6SplitExclude pulumi.StringPtrInput
	// IPv6 split-include subnets.
	Ipv6SplitInclude pulumi.StringPtrInput
	// Start of IPv6 range.
	Ipv6StartIp pulumi.StringPtrInput
	// NAT-T keep alive interval.
	Keepalive pulumi.IntPtrInput
	// Time to wait in seconds before phase 1 encryption key expires.
	Keylife pulumi.IntPtrInput
	// Local VPN gateway.
	LocalGw pulumi.StringPtrInput
	// Local ID.
	Localid pulumi.StringPtrInput
	// Local ID type. Valid values: `auto`, `fqdn`, `user-fqdn`, `keyid`, `address`, `asn1dn`.
	LocalidType pulumi.StringPtrInput
	// Enable/disable asymmetric routing for IKE traffic on loopback interface. Valid values: `enable`, `disable`.
	LoopbackAsymroute pulumi.StringPtrInput
	// Add selectors containing subsets of the configuration depending on traffic. Valid values: `disable`, `subnet`, `host`.
	MeshSelectorType pulumi.StringPtrInput
	// ID protection mode used to establish a secure channel. Valid values: `aggressive`, `main`.
	Mode pulumi.StringPtrInput
	// Enable/disable configuration method. Valid values: `disable`, `enable`.
	ModeCfg pulumi.StringPtrInput
	// Certificate name.
	Name pulumi.StringPtrInput
	// Enable/disable NAT traversal. Valid values: `enable`, `disable`, `forced`.
	Nattraversal pulumi.StringPtrInput
	// IKE SA negotiation timeout in seconds (1 - 300).
	NegotiateTimeout pulumi.IntPtrInput
	// VPN gateway network ID.
	NetworkId pulumi.IntPtrInput
	// Enable/disable network overlays. Valid values: `disable`, `enable`.
	NetworkOverlay pulumi.StringPtrInput
	// Enable/disable offloading NPU. Valid values: `enable`, `disable`.
	NpuOffload pulumi.StringPtrInput
	// Accept this peer certificate.
	Peer pulumi.StringPtrInput
	// Accept this peer certificate group.
	Peergrp pulumi.StringPtrInput
	// Accept this peer identity.
	Peerid pulumi.StringPtrInput
	// Accept this peer type. Valid values: `any`, `one`, `dialup`, `peer`, `peergrp`.
	Peertype pulumi.StringPtrInput
	// Enable/disable IKEv2 Postquantum Preshared Key (PPK). Valid values: `disable`, `allow`, `require`.
	Ppk pulumi.StringPtrInput
	// IKEv2 Postquantum Preshared Key Identity.
	PpkIdentity pulumi.StringPtrInput
	// IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x).
	PpkSecret pulumi.StringPtrInput
	// Priority for routes added by IKE (0 - 4294967295).
	Priority pulumi.IntPtrInput
	// Phase1 proposal. Valid values: `des-md5`, `des-sha1`, `des-sha256`, `des-sha384`, `des-sha512`, `3des-md5`, `3des-sha1`, `3des-sha256`, `3des-sha384`, `3des-sha512`, `aes128-md5`, `aes128-sha1`, `aes128-sha256`, `aes128-sha384`, `aes128-sha512`, `aes128gcm-prfsha1`, `aes128gcm-prfsha256`, `aes128gcm-prfsha384`, `aes128gcm-prfsha512`, `aes192-md5`, `aes192-sha1`, `aes192-sha256`, `aes192-sha384`, `aes192-sha512`, `aes256-md5`, `aes256-sha1`, `aes256-sha256`, `aes256-sha384`, `aes256-sha512`, `aes256gcm-prfsha1`, `aes256gcm-prfsha256`, `aes256gcm-prfsha384`, `aes256gcm-prfsha512`, `chacha20poly1305-prfsha1`, `chacha20poly1305-prfsha256`, `chacha20poly1305-prfsha384`, `chacha20poly1305-prfsha512`, `aria128-md5`, `aria128-sha1`, `aria128-sha256`, `aria128-sha384`, `aria128-sha512`, `aria192-md5`, `aria192-sha1`, `aria192-sha256`, `aria192-sha384`, `aria192-sha512`, `aria256-md5`, `aria256-sha1`, `aria256-sha256`, `aria256-sha384`, `aria256-sha512`, `seed-md5`, `seed-sha1`, `seed-sha256`, `seed-sha384`, `seed-sha512`.
	Proposal pulumi.StringInput
	// Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	Psksecret pulumi.StringInput
	// Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x).
	PsksecretRemote pulumi.StringPtrInput
	// Enable/disable re-authentication upon IKE SA lifetime expiration. Valid values: `disable`, `enable`.
	Reauth pulumi.StringPtrInput
	// Enable/disable phase1 rekey. Valid values: `enable`, `disable`.
	Rekey pulumi.StringPtrInput
	// Remote VPN gateway.
	RemoteGw pulumi.StringPtrInput
	// Domain name of remote gateway (eg. name.DDNS.com).
	RemotegwDdns pulumi.StringPtrInput
	// Digital Signature Authentication RSA signature format. Valid values: `pkcs1`, `pss`.
	RsaSignatureFormat pulumi.StringPtrInput
	// Enable/disable saving XAuth username and password on VPN clients. Valid values: `disable`, `enable`.
	SavePassword pulumi.StringPtrInput
	// Enable/disable sending certificate chain. Valid values: `enable`, `disable`.
	SendCertChain pulumi.StringPtrInput
	// Digital Signature Authentication hash algorithms. Valid values: `sha1`, `sha2-256`, `sha2-384`, `sha2-512`.
	SignatureHashAlg pulumi.StringPtrInput
	// Split-include services.
	SplitIncludeService pulumi.StringPtrInput
	// Use Suite-B. Valid values: `disable`, `suite-b-gcm-128`, `suite-b-gcm-256`.
	SuiteB pulumi.StringPtrInput
	// Remote gateway type. Valid values: `static`, `dynamic`, `ddns`.
	Type pulumi.StringPtrInput
	// Enable/disable support for Cisco UNITY Configuration Method extensions. Valid values: `disable`, `enable`.
	UnitySupport pulumi.StringPtrInput
	// User group name for dialup peers.
	Usrgrp pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// GUI VPN Wizard Type.
	WizardType pulumi.StringPtrInput
	// XAuth type. Valid values: `disable`, `client`, `pap`, `chap`, `auto`.
	Xauthtype pulumi.StringPtrInput
}

func (VpnIpsecPhase1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecPhase1Args)(nil)).Elem()
}

type VpnIpsecPhase1Input interface {
	pulumi.Input

	ToVpnIpsecPhase1Output() VpnIpsecPhase1Output
	ToVpnIpsecPhase1OutputWithContext(ctx context.Context) VpnIpsecPhase1Output
}

func (*VpnIpsecPhase1) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecPhase1)(nil)).Elem()
}

func (i *VpnIpsecPhase1) ToVpnIpsecPhase1Output() VpnIpsecPhase1Output {
	return i.ToVpnIpsecPhase1OutputWithContext(context.Background())
}

func (i *VpnIpsecPhase1) ToVpnIpsecPhase1OutputWithContext(ctx context.Context) VpnIpsecPhase1Output {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecPhase1Output)
}

// VpnIpsecPhase1ArrayInput is an input type that accepts VpnIpsecPhase1Array and VpnIpsecPhase1ArrayOutput values.
// You can construct a concrete instance of `VpnIpsecPhase1ArrayInput` via:
//
//          VpnIpsecPhase1Array{ VpnIpsecPhase1Args{...} }
type VpnIpsecPhase1ArrayInput interface {
	pulumi.Input

	ToVpnIpsecPhase1ArrayOutput() VpnIpsecPhase1ArrayOutput
	ToVpnIpsecPhase1ArrayOutputWithContext(context.Context) VpnIpsecPhase1ArrayOutput
}

type VpnIpsecPhase1Array []VpnIpsecPhase1Input

func (VpnIpsecPhase1Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecPhase1)(nil)).Elem()
}

func (i VpnIpsecPhase1Array) ToVpnIpsecPhase1ArrayOutput() VpnIpsecPhase1ArrayOutput {
	return i.ToVpnIpsecPhase1ArrayOutputWithContext(context.Background())
}

func (i VpnIpsecPhase1Array) ToVpnIpsecPhase1ArrayOutputWithContext(ctx context.Context) VpnIpsecPhase1ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecPhase1ArrayOutput)
}

// VpnIpsecPhase1MapInput is an input type that accepts VpnIpsecPhase1Map and VpnIpsecPhase1MapOutput values.
// You can construct a concrete instance of `VpnIpsecPhase1MapInput` via:
//
//          VpnIpsecPhase1Map{ "key": VpnIpsecPhase1Args{...} }
type VpnIpsecPhase1MapInput interface {
	pulumi.Input

	ToVpnIpsecPhase1MapOutput() VpnIpsecPhase1MapOutput
	ToVpnIpsecPhase1MapOutputWithContext(context.Context) VpnIpsecPhase1MapOutput
}

type VpnIpsecPhase1Map map[string]VpnIpsecPhase1Input

func (VpnIpsecPhase1Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecPhase1)(nil)).Elem()
}

func (i VpnIpsecPhase1Map) ToVpnIpsecPhase1MapOutput() VpnIpsecPhase1MapOutput {
	return i.ToVpnIpsecPhase1MapOutputWithContext(context.Background())
}

func (i VpnIpsecPhase1Map) ToVpnIpsecPhase1MapOutputWithContext(ctx context.Context) VpnIpsecPhase1MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecPhase1MapOutput)
}

type VpnIpsecPhase1Output struct{ *pulumi.OutputState }

func (VpnIpsecPhase1Output) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecPhase1)(nil)).Elem()
}

func (o VpnIpsecPhase1Output) ToVpnIpsecPhase1Output() VpnIpsecPhase1Output {
	return o
}

func (o VpnIpsecPhase1Output) ToVpnIpsecPhase1OutputWithContext(ctx context.Context) VpnIpsecPhase1Output {
	return o
}

type VpnIpsecPhase1ArrayOutput struct{ *pulumi.OutputState }

func (VpnIpsecPhase1ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecPhase1)(nil)).Elem()
}

func (o VpnIpsecPhase1ArrayOutput) ToVpnIpsecPhase1ArrayOutput() VpnIpsecPhase1ArrayOutput {
	return o
}

func (o VpnIpsecPhase1ArrayOutput) ToVpnIpsecPhase1ArrayOutputWithContext(ctx context.Context) VpnIpsecPhase1ArrayOutput {
	return o
}

func (o VpnIpsecPhase1ArrayOutput) Index(i pulumi.IntInput) VpnIpsecPhase1Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnIpsecPhase1 {
		return vs[0].([]*VpnIpsecPhase1)[vs[1].(int)]
	}).(VpnIpsecPhase1Output)
}

type VpnIpsecPhase1MapOutput struct{ *pulumi.OutputState }

func (VpnIpsecPhase1MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecPhase1)(nil)).Elem()
}

func (o VpnIpsecPhase1MapOutput) ToVpnIpsecPhase1MapOutput() VpnIpsecPhase1MapOutput {
	return o
}

func (o VpnIpsecPhase1MapOutput) ToVpnIpsecPhase1MapOutputWithContext(ctx context.Context) VpnIpsecPhase1MapOutput {
	return o
}

func (o VpnIpsecPhase1MapOutput) MapIndex(k pulumi.StringInput) VpnIpsecPhase1Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnIpsecPhase1 {
		return vs[0].(map[string]*VpnIpsecPhase1)[vs[1].(string)]
	}).(VpnIpsecPhase1Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecPhase1Input)(nil)).Elem(), &VpnIpsecPhase1{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecPhase1ArrayInput)(nil)).Elem(), VpnIpsecPhase1Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecPhase1MapInput)(nil)).Elem(), VpnIpsecPhase1Map{})
	pulumi.RegisterOutputType(VpnIpsecPhase1Output{})
	pulumi.RegisterOutputType(VpnIpsecPhase1ArrayOutput{})
	pulumi.RegisterOutputType(VpnIpsecPhase1MapOutput{})
}
