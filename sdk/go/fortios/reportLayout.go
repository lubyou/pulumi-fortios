// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Report layout configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewReportLayout(ctx, "trname", &fortios.ReportLayoutArgs{
// 			CutoffOption: pulumi.String("run-time"),
// 			CutoffTime:   pulumi.String("00:00"),
// 			Day:          pulumi.String("sunday"),
// 			EmailSend:    pulumi.String("disable"),
// 			Format:       pulumi.String("pdf"),
// 			MaxPdfReport: pulumi.Int(31),
// 			Options:      pulumi.String("include-table-of-content view-chart-as-heading"),
// 			ScheduleType: pulumi.String("daily"),
// 			StyleTheme:   pulumi.String("default-report"),
// 			Time:         pulumi.String("00:00"),
// 			Title:        pulumi.String("FortiGate System Analysis Report"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Report Layout can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/reportLayout:ReportLayout labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type ReportLayout struct {
	pulumi.CustomResourceState

	// Configure report body item. The structure of `bodyItem` block is documented below.
	BodyItems ReportLayoutBodyItemArrayOutput `pulumi:"bodyItems"`
	// Cutoff-option is either run-time or custom. Valid values: `run-time`, `custom`.
	CutoffOption pulumi.StringOutput `pulumi:"cutoffOption"`
	// Custom cutoff time to generate report [hh:mm].
	CutoffTime pulumi.StringOutput `pulumi:"cutoffTime"`
	// Schedule days of week to generate report. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	Day pulumi.StringOutput `pulumi:"day"`
	// Description.
	Description pulumi.StringOutput `pulumi:"description"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Email recipients for generated reports.
	EmailRecipients pulumi.StringOutput `pulumi:"emailRecipients"`
	// Enable/disable sending emails after reports are generated. Valid values: `enable`, `disable`.
	EmailSend pulumi.StringOutput `pulumi:"emailSend"`
	// Report format. Valid values: `pdf`.
	Format pulumi.StringOutput `pulumi:"format"`
	// Maximum number of PDF reports to keep at one time (oldest report is overwritten).
	MaxPdfReport pulumi.IntOutput `pulumi:"maxPdfReport"`
	// Field name that match field of parameters defined in dataset.
	Name pulumi.StringOutput `pulumi:"name"`
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options pulumi.StringOutput `pulumi:"options"`
	// Configure report page. The structure of `page` block is documented below.
	Page ReportLayoutPagePtrOutput `pulumi:"page"`
	// Report schedule type. Valid values: `demand`, `daily`, `weekly`.
	ScheduleType pulumi.StringOutput `pulumi:"scheduleType"`
	// Report style theme.
	StyleTheme pulumi.StringOutput `pulumi:"styleTheme"`
	// Report subtitle.
	Subtitle pulumi.StringOutput `pulumi:"subtitle"`
	// Schedule time to generate report [hh:mm].
	Time pulumi.StringOutput `pulumi:"time"`
	// Report section title.
	Title pulumi.StringOutput `pulumi:"title"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewReportLayout registers a new resource with the given unique name, arguments, and options.
func NewReportLayout(ctx *pulumi.Context,
	name string, args *ReportLayoutArgs, opts ...pulumi.ResourceOption) (*ReportLayout, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StyleTheme == nil {
		return nil, errors.New("invalid value for required argument 'StyleTheme'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ReportLayout
	err := ctx.RegisterResource("fortios:index/reportLayout:ReportLayout", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportLayout gets an existing ReportLayout resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportLayout(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportLayoutState, opts ...pulumi.ResourceOption) (*ReportLayout, error) {
	var resource ReportLayout
	err := ctx.ReadResource("fortios:index/reportLayout:ReportLayout", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportLayout resources.
type reportLayoutState struct {
	// Configure report body item. The structure of `bodyItem` block is documented below.
	BodyItems []ReportLayoutBodyItem `pulumi:"bodyItems"`
	// Cutoff-option is either run-time or custom. Valid values: `run-time`, `custom`.
	CutoffOption *string `pulumi:"cutoffOption"`
	// Custom cutoff time to generate report [hh:mm].
	CutoffTime *string `pulumi:"cutoffTime"`
	// Schedule days of week to generate report. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	Day *string `pulumi:"day"`
	// Description.
	Description *string `pulumi:"description"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Email recipients for generated reports.
	EmailRecipients *string `pulumi:"emailRecipients"`
	// Enable/disable sending emails after reports are generated. Valid values: `enable`, `disable`.
	EmailSend *string `pulumi:"emailSend"`
	// Report format. Valid values: `pdf`.
	Format *string `pulumi:"format"`
	// Maximum number of PDF reports to keep at one time (oldest report is overwritten).
	MaxPdfReport *int `pulumi:"maxPdfReport"`
	// Field name that match field of parameters defined in dataset.
	Name *string `pulumi:"name"`
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options *string `pulumi:"options"`
	// Configure report page. The structure of `page` block is documented below.
	Page *ReportLayoutPage `pulumi:"page"`
	// Report schedule type. Valid values: `demand`, `daily`, `weekly`.
	ScheduleType *string `pulumi:"scheduleType"`
	// Report style theme.
	StyleTheme *string `pulumi:"styleTheme"`
	// Report subtitle.
	Subtitle *string `pulumi:"subtitle"`
	// Schedule time to generate report [hh:mm].
	Time *string `pulumi:"time"`
	// Report section title.
	Title *string `pulumi:"title"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ReportLayoutState struct {
	// Configure report body item. The structure of `bodyItem` block is documented below.
	BodyItems ReportLayoutBodyItemArrayInput
	// Cutoff-option is either run-time or custom. Valid values: `run-time`, `custom`.
	CutoffOption pulumi.StringPtrInput
	// Custom cutoff time to generate report [hh:mm].
	CutoffTime pulumi.StringPtrInput
	// Schedule days of week to generate report. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	Day pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Email recipients for generated reports.
	EmailRecipients pulumi.StringPtrInput
	// Enable/disable sending emails after reports are generated. Valid values: `enable`, `disable`.
	EmailSend pulumi.StringPtrInput
	// Report format. Valid values: `pdf`.
	Format pulumi.StringPtrInput
	// Maximum number of PDF reports to keep at one time (oldest report is overwritten).
	MaxPdfReport pulumi.IntPtrInput
	// Field name that match field of parameters defined in dataset.
	Name pulumi.StringPtrInput
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options pulumi.StringPtrInput
	// Configure report page. The structure of `page` block is documented below.
	Page ReportLayoutPagePtrInput
	// Report schedule type. Valid values: `demand`, `daily`, `weekly`.
	ScheduleType pulumi.StringPtrInput
	// Report style theme.
	StyleTheme pulumi.StringPtrInput
	// Report subtitle.
	Subtitle pulumi.StringPtrInput
	// Schedule time to generate report [hh:mm].
	Time pulumi.StringPtrInput
	// Report section title.
	Title pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ReportLayoutState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportLayoutState)(nil)).Elem()
}

type reportLayoutArgs struct {
	// Configure report body item. The structure of `bodyItem` block is documented below.
	BodyItems []ReportLayoutBodyItem `pulumi:"bodyItems"`
	// Cutoff-option is either run-time or custom. Valid values: `run-time`, `custom`.
	CutoffOption *string `pulumi:"cutoffOption"`
	// Custom cutoff time to generate report [hh:mm].
	CutoffTime *string `pulumi:"cutoffTime"`
	// Schedule days of week to generate report. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	Day *string `pulumi:"day"`
	// Description.
	Description *string `pulumi:"description"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Email recipients for generated reports.
	EmailRecipients *string `pulumi:"emailRecipients"`
	// Enable/disable sending emails after reports are generated. Valid values: `enable`, `disable`.
	EmailSend *string `pulumi:"emailSend"`
	// Report format. Valid values: `pdf`.
	Format *string `pulumi:"format"`
	// Maximum number of PDF reports to keep at one time (oldest report is overwritten).
	MaxPdfReport *int `pulumi:"maxPdfReport"`
	// Field name that match field of parameters defined in dataset.
	Name *string `pulumi:"name"`
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options *string `pulumi:"options"`
	// Configure report page. The structure of `page` block is documented below.
	Page *ReportLayoutPage `pulumi:"page"`
	// Report schedule type. Valid values: `demand`, `daily`, `weekly`.
	ScheduleType *string `pulumi:"scheduleType"`
	// Report style theme.
	StyleTheme string `pulumi:"styleTheme"`
	// Report subtitle.
	Subtitle *string `pulumi:"subtitle"`
	// Schedule time to generate report [hh:mm].
	Time *string `pulumi:"time"`
	// Report section title.
	Title *string `pulumi:"title"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ReportLayout resource.
type ReportLayoutArgs struct {
	// Configure report body item. The structure of `bodyItem` block is documented below.
	BodyItems ReportLayoutBodyItemArrayInput
	// Cutoff-option is either run-time or custom. Valid values: `run-time`, `custom`.
	CutoffOption pulumi.StringPtrInput
	// Custom cutoff time to generate report [hh:mm].
	CutoffTime pulumi.StringPtrInput
	// Schedule days of week to generate report. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
	Day pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Email recipients for generated reports.
	EmailRecipients pulumi.StringPtrInput
	// Enable/disable sending emails after reports are generated. Valid values: `enable`, `disable`.
	EmailSend pulumi.StringPtrInput
	// Report format. Valid values: `pdf`.
	Format pulumi.StringPtrInput
	// Maximum number of PDF reports to keep at one time (oldest report is overwritten).
	MaxPdfReport pulumi.IntPtrInput
	// Field name that match field of parameters defined in dataset.
	Name pulumi.StringPtrInput
	// Report page options. Valid values: `header-on-first-page`, `footer-on-first-page`.
	Options pulumi.StringPtrInput
	// Configure report page. The structure of `page` block is documented below.
	Page ReportLayoutPagePtrInput
	// Report schedule type. Valid values: `demand`, `daily`, `weekly`.
	ScheduleType pulumi.StringPtrInput
	// Report style theme.
	StyleTheme pulumi.StringInput
	// Report subtitle.
	Subtitle pulumi.StringPtrInput
	// Schedule time to generate report [hh:mm].
	Time pulumi.StringPtrInput
	// Report section title.
	Title pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ReportLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportLayoutArgs)(nil)).Elem()
}

type ReportLayoutInput interface {
	pulumi.Input

	ToReportLayoutOutput() ReportLayoutOutput
	ToReportLayoutOutputWithContext(ctx context.Context) ReportLayoutOutput
}

func (*ReportLayout) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayout)(nil)).Elem()
}

func (i *ReportLayout) ToReportLayoutOutput() ReportLayoutOutput {
	return i.ToReportLayoutOutputWithContext(context.Background())
}

func (i *ReportLayout) ToReportLayoutOutputWithContext(ctx context.Context) ReportLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutOutput)
}

// ReportLayoutArrayInput is an input type that accepts ReportLayoutArray and ReportLayoutArrayOutput values.
// You can construct a concrete instance of `ReportLayoutArrayInput` via:
//
//          ReportLayoutArray{ ReportLayoutArgs{...} }
type ReportLayoutArrayInput interface {
	pulumi.Input

	ToReportLayoutArrayOutput() ReportLayoutArrayOutput
	ToReportLayoutArrayOutputWithContext(context.Context) ReportLayoutArrayOutput
}

type ReportLayoutArray []ReportLayoutInput

func (ReportLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportLayout)(nil)).Elem()
}

func (i ReportLayoutArray) ToReportLayoutArrayOutput() ReportLayoutArrayOutput {
	return i.ToReportLayoutArrayOutputWithContext(context.Background())
}

func (i ReportLayoutArray) ToReportLayoutArrayOutputWithContext(ctx context.Context) ReportLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutArrayOutput)
}

// ReportLayoutMapInput is an input type that accepts ReportLayoutMap and ReportLayoutMapOutput values.
// You can construct a concrete instance of `ReportLayoutMapInput` via:
//
//          ReportLayoutMap{ "key": ReportLayoutArgs{...} }
type ReportLayoutMapInput interface {
	pulumi.Input

	ToReportLayoutMapOutput() ReportLayoutMapOutput
	ToReportLayoutMapOutputWithContext(context.Context) ReportLayoutMapOutput
}

type ReportLayoutMap map[string]ReportLayoutInput

func (ReportLayoutMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportLayout)(nil)).Elem()
}

func (i ReportLayoutMap) ToReportLayoutMapOutput() ReportLayoutMapOutput {
	return i.ToReportLayoutMapOutputWithContext(context.Background())
}

func (i ReportLayoutMap) ToReportLayoutMapOutputWithContext(ctx context.Context) ReportLayoutMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutMapOutput)
}

type ReportLayoutOutput struct{ *pulumi.OutputState }

func (ReportLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayout)(nil)).Elem()
}

func (o ReportLayoutOutput) ToReportLayoutOutput() ReportLayoutOutput {
	return o
}

func (o ReportLayoutOutput) ToReportLayoutOutputWithContext(ctx context.Context) ReportLayoutOutput {
	return o
}

type ReportLayoutArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportLayout)(nil)).Elem()
}

func (o ReportLayoutArrayOutput) ToReportLayoutArrayOutput() ReportLayoutArrayOutput {
	return o
}

func (o ReportLayoutArrayOutput) ToReportLayoutArrayOutputWithContext(ctx context.Context) ReportLayoutArrayOutput {
	return o
}

func (o ReportLayoutArrayOutput) Index(i pulumi.IntInput) ReportLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportLayout {
		return vs[0].([]*ReportLayout)[vs[1].(int)]
	}).(ReportLayoutOutput)
}

type ReportLayoutMapOutput struct{ *pulumi.OutputState }

func (ReportLayoutMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportLayout)(nil)).Elem()
}

func (o ReportLayoutMapOutput) ToReportLayoutMapOutput() ReportLayoutMapOutput {
	return o
}

func (o ReportLayoutMapOutput) ToReportLayoutMapOutputWithContext(ctx context.Context) ReportLayoutMapOutput {
	return o
}

func (o ReportLayoutMapOutput) MapIndex(k pulumi.StringInput) ReportLayoutOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportLayout {
		return vs[0].(map[string]*ReportLayout)[vs[1].(string)]
	}).(ReportLayoutOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutInput)(nil)).Elem(), &ReportLayout{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutArrayInput)(nil)).Elem(), ReportLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutMapInput)(nil)).Elem(), ReportLayoutMap{})
	pulumi.RegisterOutputType(ReportLayoutOutput{})
	pulumi.RegisterOutputType(ReportLayoutArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutMapOutput{})
}
