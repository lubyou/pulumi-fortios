// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to configure Network Time Protocol (NTP) servers of FortiOS.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `SystemNtp`, we recommend that you use the new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemSettingNTP(ctx, "test2", &fortios.SystemSettingNTPArgs{
// 			Ntpservers: pulumi.StringArray{
// 				pulumi.String("1.1.1.1"),
// 				pulumi.String("3.3.3.3"),
// 			},
// 			Ntpsync: pulumi.String("disable"),
// 			Type:    pulumi.String("custom"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type SystemSettingNTP struct {
	pulumi.CustomResourceState

	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayOutput `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringOutput `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSystemSettingNTP registers a new resource with the given unique name, arguments, and options.
func NewSystemSettingNTP(ctx *pulumi.Context,
	name string, args *SystemSettingNTPArgs, opts ...pulumi.ResourceOption) (*SystemSettingNTP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSettingNTP
	err := ctx.RegisterResource("fortios:index/systemSettingNTP:SystemSettingNTP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSettingNTP gets an existing SystemSettingNTP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSettingNTP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSettingNTPState, opts ...pulumi.ResourceOption) (*SystemSettingNTP, error) {
	var resource SystemSettingNTP
	err := ctx.ReadResource("fortios:index/systemSettingNTP:SystemSettingNTP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSettingNTP resources.
type systemSettingNTPState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type *string `pulumi:"type"`
}

type SystemSettingNTPState struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringPtrInput
}

func (SystemSettingNTPState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingNTPState)(nil)).Elem()
}

type systemSettingNTPArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers []string `pulumi:"ntpservers"`
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync *string `pulumi:"ntpsync"`
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a SystemSettingNTP resource.
type SystemSettingNTPArgs struct {
	// Configure the FortiGate to connect to any available third-party NTP server.
	Ntpservers pulumi.StringArrayInput
	// Enable/disable setting the FortiGate system time by synchronizing with an NTP Server.
	Ntpsync pulumi.StringPtrInput
	// Use the FortiGuard NTP server or any other available NTP Server.
	Type pulumi.StringInput
}

func (SystemSettingNTPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSettingNTPArgs)(nil)).Elem()
}

type SystemSettingNTPInput interface {
	pulumi.Input

	ToSystemSettingNTPOutput() SystemSettingNTPOutput
	ToSystemSettingNTPOutputWithContext(ctx context.Context) SystemSettingNTPOutput
}

func (*SystemSettingNTP) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingNTP)(nil)).Elem()
}

func (i *SystemSettingNTP) ToSystemSettingNTPOutput() SystemSettingNTPOutput {
	return i.ToSystemSettingNTPOutputWithContext(context.Background())
}

func (i *SystemSettingNTP) ToSystemSettingNTPOutputWithContext(ctx context.Context) SystemSettingNTPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNTPOutput)
}

// SystemSettingNTPArrayInput is an input type that accepts SystemSettingNTPArray and SystemSettingNTPArrayOutput values.
// You can construct a concrete instance of `SystemSettingNTPArrayInput` via:
//
//          SystemSettingNTPArray{ SystemSettingNTPArgs{...} }
type SystemSettingNTPArrayInput interface {
	pulumi.Input

	ToSystemSettingNTPArrayOutput() SystemSettingNTPArrayOutput
	ToSystemSettingNTPArrayOutputWithContext(context.Context) SystemSettingNTPArrayOutput
}

type SystemSettingNTPArray []SystemSettingNTPInput

func (SystemSettingNTPArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingNTP)(nil)).Elem()
}

func (i SystemSettingNTPArray) ToSystemSettingNTPArrayOutput() SystemSettingNTPArrayOutput {
	return i.ToSystemSettingNTPArrayOutputWithContext(context.Background())
}

func (i SystemSettingNTPArray) ToSystemSettingNTPArrayOutputWithContext(ctx context.Context) SystemSettingNTPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNTPArrayOutput)
}

// SystemSettingNTPMapInput is an input type that accepts SystemSettingNTPMap and SystemSettingNTPMapOutput values.
// You can construct a concrete instance of `SystemSettingNTPMapInput` via:
//
//          SystemSettingNTPMap{ "key": SystemSettingNTPArgs{...} }
type SystemSettingNTPMapInput interface {
	pulumi.Input

	ToSystemSettingNTPMapOutput() SystemSettingNTPMapOutput
	ToSystemSettingNTPMapOutputWithContext(context.Context) SystemSettingNTPMapOutput
}

type SystemSettingNTPMap map[string]SystemSettingNTPInput

func (SystemSettingNTPMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingNTP)(nil)).Elem()
}

func (i SystemSettingNTPMap) ToSystemSettingNTPMapOutput() SystemSettingNTPMapOutput {
	return i.ToSystemSettingNTPMapOutputWithContext(context.Background())
}

func (i SystemSettingNTPMap) ToSystemSettingNTPMapOutputWithContext(ctx context.Context) SystemSettingNTPMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingNTPMapOutput)
}

type SystemSettingNTPOutput struct{ *pulumi.OutputState }

func (SystemSettingNTPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSettingNTP)(nil)).Elem()
}

func (o SystemSettingNTPOutput) ToSystemSettingNTPOutput() SystemSettingNTPOutput {
	return o
}

func (o SystemSettingNTPOutput) ToSystemSettingNTPOutputWithContext(ctx context.Context) SystemSettingNTPOutput {
	return o
}

type SystemSettingNTPArrayOutput struct{ *pulumi.OutputState }

func (SystemSettingNTPArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSettingNTP)(nil)).Elem()
}

func (o SystemSettingNTPArrayOutput) ToSystemSettingNTPArrayOutput() SystemSettingNTPArrayOutput {
	return o
}

func (o SystemSettingNTPArrayOutput) ToSystemSettingNTPArrayOutputWithContext(ctx context.Context) SystemSettingNTPArrayOutput {
	return o
}

func (o SystemSettingNTPArrayOutput) Index(i pulumi.IntInput) SystemSettingNTPOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSettingNTP {
		return vs[0].([]*SystemSettingNTP)[vs[1].(int)]
	}).(SystemSettingNTPOutput)
}

type SystemSettingNTPMapOutput struct{ *pulumi.OutputState }

func (SystemSettingNTPMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSettingNTP)(nil)).Elem()
}

func (o SystemSettingNTPMapOutput) ToSystemSettingNTPMapOutput() SystemSettingNTPMapOutput {
	return o
}

func (o SystemSettingNTPMapOutput) ToSystemSettingNTPMapOutputWithContext(ctx context.Context) SystemSettingNTPMapOutput {
	return o
}

func (o SystemSettingNTPMapOutput) MapIndex(k pulumi.StringInput) SystemSettingNTPOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSettingNTP {
		return vs[0].(map[string]*SystemSettingNTP)[vs[1].(string)]
	}).(SystemSettingNTPOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNTPInput)(nil)).Elem(), &SystemSettingNTP{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNTPArrayInput)(nil)).Elem(), SystemSettingNTPArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingNTPMapInput)(nil)).Elem(), SystemSettingNTPMap{})
	pulumi.RegisterOutputType(SystemSettingNTPOutput{})
	pulumi.RegisterOutputType(SystemSettingNTPArrayOutput{})
	pulumi.RegisterOutputType(SystemSettingNTPMapOutput{})
}
