// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogFortiguardFilter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                     `pulumi:"anomaly"`
	DlpArchive           pulumi.StringOutput                     `pulumi:"dlpArchive"`
	Dns                  pulumi.StringOutput                     `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                  `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                     `pulumi:"filter"`
	FilterType           pulumi.StringOutput                     `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                     `pulumi:"forwardTraffic"`
	FreeStyles           LogFortiguardFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables         pulumi.StringPtrOutput                  `pulumi:"getAllTables"`
	Gtp                  pulumi.StringOutput                     `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                     `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                     `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                     `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                     `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                     `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                     `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                     `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                  `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                     `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                     `pulumi:"ztnaTraffic"`
}

// NewLogFortiguardFilter registers a new resource with the given unique name, arguments, and options.
func NewLogFortiguardFilter(ctx *pulumi.Context,
	name string, args *LogFortiguardFilterArgs, opts ...pulumi.ResourceOption) (*LogFortiguardFilter, error) {
	if args == nil {
		args = &LogFortiguardFilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogFortiguardFilter
	err := ctx.RegisterResource("fortios:index/logFortiguardFilter:LogFortiguardFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortiguardFilter gets an existing LogFortiguardFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortiguardFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortiguardFilterState, opts ...pulumi.ResourceOption) (*LogFortiguardFilter, error) {
	var resource LogFortiguardFilter
	err := ctx.ReadResource("fortios:index/logFortiguardFilter:LogFortiguardFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortiguardFilter resources.
type logFortiguardFilterState struct {
	Anomaly              *string                        `pulumi:"anomaly"`
	DlpArchive           *string                        `pulumi:"dlpArchive"`
	Dns                  *string                        `pulumi:"dns"`
	DynamicSortSubtable  *string                        `pulumi:"dynamicSortSubtable"`
	Filter               *string                        `pulumi:"filter"`
	FilterType           *string                        `pulumi:"filterType"`
	ForwardTraffic       *string                        `pulumi:"forwardTraffic"`
	FreeStyles           []LogFortiguardFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                        `pulumi:"getAllTables"`
	Gtp                  *string                        `pulumi:"gtp"`
	LocalTraffic         *string                        `pulumi:"localTraffic"`
	MulticastTraffic     *string                        `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                        `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                        `pulumi:"netscanVulnerability"`
	Severity             *string                        `pulumi:"severity"`
	SnifferTraffic       *string                        `pulumi:"snifferTraffic"`
	Ssh                  *string                        `pulumi:"ssh"`
	Vdomparam            *string                        `pulumi:"vdomparam"`
	Voip                 *string                        `pulumi:"voip"`
	ZtnaTraffic          *string                        `pulumi:"ztnaTraffic"`
}

type LogFortiguardFilterState struct {
	Anomaly              pulumi.StringPtrInput
	DlpArchive           pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogFortiguardFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogFortiguardFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortiguardFilterState)(nil)).Elem()
}

type logFortiguardFilterArgs struct {
	Anomaly              *string                        `pulumi:"anomaly"`
	DlpArchive           *string                        `pulumi:"dlpArchive"`
	Dns                  *string                        `pulumi:"dns"`
	DynamicSortSubtable  *string                        `pulumi:"dynamicSortSubtable"`
	Filter               *string                        `pulumi:"filter"`
	FilterType           *string                        `pulumi:"filterType"`
	ForwardTraffic       *string                        `pulumi:"forwardTraffic"`
	FreeStyles           []LogFortiguardFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                        `pulumi:"getAllTables"`
	Gtp                  *string                        `pulumi:"gtp"`
	LocalTraffic         *string                        `pulumi:"localTraffic"`
	MulticastTraffic     *string                        `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                        `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                        `pulumi:"netscanVulnerability"`
	Severity             *string                        `pulumi:"severity"`
	SnifferTraffic       *string                        `pulumi:"snifferTraffic"`
	Ssh                  *string                        `pulumi:"ssh"`
	Vdomparam            *string                        `pulumi:"vdomparam"`
	Voip                 *string                        `pulumi:"voip"`
	ZtnaTraffic          *string                        `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogFortiguardFilter resource.
type LogFortiguardFilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	DlpArchive           pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogFortiguardFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogFortiguardFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortiguardFilterArgs)(nil)).Elem()
}

type LogFortiguardFilterInput interface {
	pulumi.Input

	ToLogFortiguardFilterOutput() LogFortiguardFilterOutput
	ToLogFortiguardFilterOutputWithContext(ctx context.Context) LogFortiguardFilterOutput
}

func (*LogFortiguardFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortiguardFilter)(nil)).Elem()
}

func (i *LogFortiguardFilter) ToLogFortiguardFilterOutput() LogFortiguardFilterOutput {
	return i.ToLogFortiguardFilterOutputWithContext(context.Background())
}

func (i *LogFortiguardFilter) ToLogFortiguardFilterOutputWithContext(ctx context.Context) LogFortiguardFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardFilterOutput)
}

// LogFortiguardFilterArrayInput is an input type that accepts LogFortiguardFilterArray and LogFortiguardFilterArrayOutput values.
// You can construct a concrete instance of `LogFortiguardFilterArrayInput` via:
//
//	LogFortiguardFilterArray{ LogFortiguardFilterArgs{...} }
type LogFortiguardFilterArrayInput interface {
	pulumi.Input

	ToLogFortiguardFilterArrayOutput() LogFortiguardFilterArrayOutput
	ToLogFortiguardFilterArrayOutputWithContext(context.Context) LogFortiguardFilterArrayOutput
}

type LogFortiguardFilterArray []LogFortiguardFilterInput

func (LogFortiguardFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortiguardFilter)(nil)).Elem()
}

func (i LogFortiguardFilterArray) ToLogFortiguardFilterArrayOutput() LogFortiguardFilterArrayOutput {
	return i.ToLogFortiguardFilterArrayOutputWithContext(context.Background())
}

func (i LogFortiguardFilterArray) ToLogFortiguardFilterArrayOutputWithContext(ctx context.Context) LogFortiguardFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardFilterArrayOutput)
}

// LogFortiguardFilterMapInput is an input type that accepts LogFortiguardFilterMap and LogFortiguardFilterMapOutput values.
// You can construct a concrete instance of `LogFortiguardFilterMapInput` via:
//
//	LogFortiguardFilterMap{ "key": LogFortiguardFilterArgs{...} }
type LogFortiguardFilterMapInput interface {
	pulumi.Input

	ToLogFortiguardFilterMapOutput() LogFortiguardFilterMapOutput
	ToLogFortiguardFilterMapOutputWithContext(context.Context) LogFortiguardFilterMapOutput
}

type LogFortiguardFilterMap map[string]LogFortiguardFilterInput

func (LogFortiguardFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortiguardFilter)(nil)).Elem()
}

func (i LogFortiguardFilterMap) ToLogFortiguardFilterMapOutput() LogFortiguardFilterMapOutput {
	return i.ToLogFortiguardFilterMapOutputWithContext(context.Background())
}

func (i LogFortiguardFilterMap) ToLogFortiguardFilterMapOutputWithContext(ctx context.Context) LogFortiguardFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardFilterMapOutput)
}

type LogFortiguardFilterOutput struct{ *pulumi.OutputState }

func (LogFortiguardFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortiguardFilter)(nil)).Elem()
}

func (o LogFortiguardFilterOutput) ToLogFortiguardFilterOutput() LogFortiguardFilterOutput {
	return o
}

func (o LogFortiguardFilterOutput) ToLogFortiguardFilterOutputWithContext(ctx context.Context) LogFortiguardFilterOutput {
	return o
}

func (o LogFortiguardFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) DlpArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.DlpArchive }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) FreeStyles() LogFortiguardFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) LogFortiguardFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogFortiguardFilterFreeStyleArrayOutput)
}

func (o LogFortiguardFilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogFortiguardFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortiguardFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogFortiguardFilterArrayOutput struct{ *pulumi.OutputState }

func (LogFortiguardFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortiguardFilter)(nil)).Elem()
}

func (o LogFortiguardFilterArrayOutput) ToLogFortiguardFilterArrayOutput() LogFortiguardFilterArrayOutput {
	return o
}

func (o LogFortiguardFilterArrayOutput) ToLogFortiguardFilterArrayOutputWithContext(ctx context.Context) LogFortiguardFilterArrayOutput {
	return o
}

func (o LogFortiguardFilterArrayOutput) Index(i pulumi.IntInput) LogFortiguardFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortiguardFilter {
		return vs[0].([]*LogFortiguardFilter)[vs[1].(int)]
	}).(LogFortiguardFilterOutput)
}

type LogFortiguardFilterMapOutput struct{ *pulumi.OutputState }

func (LogFortiguardFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortiguardFilter)(nil)).Elem()
}

func (o LogFortiguardFilterMapOutput) ToLogFortiguardFilterMapOutput() LogFortiguardFilterMapOutput {
	return o
}

func (o LogFortiguardFilterMapOutput) ToLogFortiguardFilterMapOutputWithContext(ctx context.Context) LogFortiguardFilterMapOutput {
	return o
}

func (o LogFortiguardFilterMapOutput) MapIndex(k pulumi.StringInput) LogFortiguardFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortiguardFilter {
		return vs[0].(map[string]*LogFortiguardFilter)[vs[1].(string)]
	}).(LogFortiguardFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardFilterInput)(nil)).Elem(), &LogFortiguardFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardFilterArrayInput)(nil)).Elem(), LogFortiguardFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardFilterMapInput)(nil)).Elem(), LogFortiguardFilterMap{})
	pulumi.RegisterOutputType(LogFortiguardFilterOutput{})
	pulumi.RegisterOutputType(LogFortiguardFilterArrayOutput{})
	pulumi.RegisterOutputType(LogFortiguardFilterMapOutput{})
}
