// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages.
//
// ## Import
//
// SystemReplacemsg Ftp can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemReplacemsgFtp:SystemReplacemsgFtp labelname {{msg_type}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemReplacemsgFtp struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemReplacemsgFtp registers a new resource with the given unique name, arguments, and options.
func NewSystemReplacemsgFtp(ctx *pulumi.Context,
	name string, args *SystemReplacemsgFtpArgs, opts ...pulumi.ResourceOption) (*SystemReplacemsgFtp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	var resource SystemReplacemsgFtp
	err := ctx.RegisterResource("fortios:index/systemReplacemsgFtp:SystemReplacemsgFtp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemReplacemsgFtp gets an existing SystemReplacemsgFtp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemReplacemsgFtp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemReplacemsgFtpState, opts ...pulumi.ResourceOption) (*SystemReplacemsgFtp, error) {
	var resource SystemReplacemsgFtp
	err := ctx.ReadResource("fortios:index/systemReplacemsgFtp:SystemReplacemsgFtp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemReplacemsgFtp resources.
type systemReplacemsgFtpState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemReplacemsgFtpState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgFtpState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgFtpState)(nil)).Elem()
}

type systemReplacemsgFtpArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemReplacemsgFtp resource.
type SystemReplacemsgFtpArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgFtpArgs)(nil)).Elem()
}

type SystemReplacemsgFtpInput interface {
	pulumi.Input

	ToSystemReplacemsgFtpOutput() SystemReplacemsgFtpOutput
	ToSystemReplacemsgFtpOutputWithContext(ctx context.Context) SystemReplacemsgFtpOutput
}

func (*SystemReplacemsgFtp) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgFtp)(nil))
}

func (i *SystemReplacemsgFtp) ToSystemReplacemsgFtpOutput() SystemReplacemsgFtpOutput {
	return i.ToSystemReplacemsgFtpOutputWithContext(context.Background())
}

func (i *SystemReplacemsgFtp) ToSystemReplacemsgFtpOutputWithContext(ctx context.Context) SystemReplacemsgFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgFtpOutput)
}

func (i *SystemReplacemsgFtp) ToSystemReplacemsgFtpPtrOutput() SystemReplacemsgFtpPtrOutput {
	return i.ToSystemReplacemsgFtpPtrOutputWithContext(context.Background())
}

func (i *SystemReplacemsgFtp) ToSystemReplacemsgFtpPtrOutputWithContext(ctx context.Context) SystemReplacemsgFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgFtpPtrOutput)
}

type SystemReplacemsgFtpPtrInput interface {
	pulumi.Input

	ToSystemReplacemsgFtpPtrOutput() SystemReplacemsgFtpPtrOutput
	ToSystemReplacemsgFtpPtrOutputWithContext(ctx context.Context) SystemReplacemsgFtpPtrOutput
}

type systemReplacemsgFtpPtrType SystemReplacemsgFtpArgs

func (*systemReplacemsgFtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgFtp)(nil))
}

func (i *systemReplacemsgFtpPtrType) ToSystemReplacemsgFtpPtrOutput() SystemReplacemsgFtpPtrOutput {
	return i.ToSystemReplacemsgFtpPtrOutputWithContext(context.Background())
}

func (i *systemReplacemsgFtpPtrType) ToSystemReplacemsgFtpPtrOutputWithContext(ctx context.Context) SystemReplacemsgFtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgFtpPtrOutput)
}

// SystemReplacemsgFtpArrayInput is an input type that accepts SystemReplacemsgFtpArray and SystemReplacemsgFtpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgFtpArrayInput` via:
//
//          SystemReplacemsgFtpArray{ SystemReplacemsgFtpArgs{...} }
type SystemReplacemsgFtpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgFtpArrayOutput() SystemReplacemsgFtpArrayOutput
	ToSystemReplacemsgFtpArrayOutputWithContext(context.Context) SystemReplacemsgFtpArrayOutput
}

type SystemReplacemsgFtpArray []SystemReplacemsgFtpInput

func (SystemReplacemsgFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemReplacemsgFtp)(nil))
}

func (i SystemReplacemsgFtpArray) ToSystemReplacemsgFtpArrayOutput() SystemReplacemsgFtpArrayOutput {
	return i.ToSystemReplacemsgFtpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgFtpArray) ToSystemReplacemsgFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsgFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgFtpArrayOutput)
}

// SystemReplacemsgFtpMapInput is an input type that accepts SystemReplacemsgFtpMap and SystemReplacemsgFtpMapOutput values.
// You can construct a concrete instance of `SystemReplacemsgFtpMapInput` via:
//
//          SystemReplacemsgFtpMap{ "key": SystemReplacemsgFtpArgs{...} }
type SystemReplacemsgFtpMapInput interface {
	pulumi.Input

	ToSystemReplacemsgFtpMapOutput() SystemReplacemsgFtpMapOutput
	ToSystemReplacemsgFtpMapOutputWithContext(context.Context) SystemReplacemsgFtpMapOutput
}

type SystemReplacemsgFtpMap map[string]SystemReplacemsgFtpInput

func (SystemReplacemsgFtpMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemReplacemsgFtp)(nil))
}

func (i SystemReplacemsgFtpMap) ToSystemReplacemsgFtpMapOutput() SystemReplacemsgFtpMapOutput {
	return i.ToSystemReplacemsgFtpMapOutputWithContext(context.Background())
}

func (i SystemReplacemsgFtpMap) ToSystemReplacemsgFtpMapOutputWithContext(ctx context.Context) SystemReplacemsgFtpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgFtpMapOutput)
}

type SystemReplacemsgFtpOutput struct {
	*pulumi.OutputState
}

func (SystemReplacemsgFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgFtp)(nil))
}

func (o SystemReplacemsgFtpOutput) ToSystemReplacemsgFtpOutput() SystemReplacemsgFtpOutput {
	return o
}

func (o SystemReplacemsgFtpOutput) ToSystemReplacemsgFtpOutputWithContext(ctx context.Context) SystemReplacemsgFtpOutput {
	return o
}

func (o SystemReplacemsgFtpOutput) ToSystemReplacemsgFtpPtrOutput() SystemReplacemsgFtpPtrOutput {
	return o.ToSystemReplacemsgFtpPtrOutputWithContext(context.Background())
}

func (o SystemReplacemsgFtpOutput) ToSystemReplacemsgFtpPtrOutputWithContext(ctx context.Context) SystemReplacemsgFtpPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgFtp) *SystemReplacemsgFtp {
		return &v
	}).(SystemReplacemsgFtpPtrOutput)
}

type SystemReplacemsgFtpPtrOutput struct {
	*pulumi.OutputState
}

func (SystemReplacemsgFtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgFtp)(nil))
}

func (o SystemReplacemsgFtpPtrOutput) ToSystemReplacemsgFtpPtrOutput() SystemReplacemsgFtpPtrOutput {
	return o
}

func (o SystemReplacemsgFtpPtrOutput) ToSystemReplacemsgFtpPtrOutputWithContext(ctx context.Context) SystemReplacemsgFtpPtrOutput {
	return o
}

type SystemReplacemsgFtpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgFtp)(nil))
}

func (o SystemReplacemsgFtpArrayOutput) ToSystemReplacemsgFtpArrayOutput() SystemReplacemsgFtpArrayOutput {
	return o
}

func (o SystemReplacemsgFtpArrayOutput) ToSystemReplacemsgFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsgFtpArrayOutput {
	return o
}

func (o SystemReplacemsgFtpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgFtp {
		return vs[0].([]SystemReplacemsgFtp)[vs[1].(int)]
	}).(SystemReplacemsgFtpOutput)
}

type SystemReplacemsgFtpMapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgFtpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemReplacemsgFtp)(nil))
}

func (o SystemReplacemsgFtpMapOutput) ToSystemReplacemsgFtpMapOutput() SystemReplacemsgFtpMapOutput {
	return o
}

func (o SystemReplacemsgFtpMapOutput) ToSystemReplacemsgFtpMapOutputWithContext(ctx context.Context) SystemReplacemsgFtpMapOutput {
	return o
}

func (o SystemReplacemsgFtpMapOutput) MapIndex(k pulumi.StringInput) SystemReplacemsgFtpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemReplacemsgFtp {
		return vs[0].(map[string]SystemReplacemsgFtp)[vs[1].(string)]
	}).(SystemReplacemsgFtpOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemReplacemsgFtpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgFtpPtrOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgFtpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgFtpMapOutput{})
}
