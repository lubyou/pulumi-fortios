// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 tunnel over IPv4.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemSitTunnel(ctx, "trname", &fortios.SystemSitTunnelArgs{
// 			Destination: pulumi.String("1.1.1.1"),
// 			Interface:   pulumi.String("port2"),
// 			Ip6:         pulumi.String("::/0"),
// 			Source:      pulumi.String("2.2.2.2"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System SitTunnel can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemSitTunnel:SystemSitTunnel labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemSitTunnel struct {
	pulumi.CustomResourceState

	// Destination IP address of the tunnel.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// Interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IPv6 address of the tunnel.
	Ip6 pulumi.StringOutput `pulumi:"ip6"`
	// Tunnel name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Source IP address of the tunnel.
	Source pulumi.StringOutput `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSitTunnel registers a new resource with the given unique name, arguments, and options.
func NewSystemSitTunnel(ctx *pulumi.Context,
	name string, args *SystemSitTunnelArgs, opts ...pulumi.ResourceOption) (*SystemSitTunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	var resource SystemSitTunnel
	err := ctx.RegisterResource("fortios:index/systemSitTunnel:SystemSitTunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSitTunnel gets an existing SystemSitTunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSitTunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSitTunnelState, opts ...pulumi.ResourceOption) (*SystemSitTunnel, error) {
	var resource SystemSitTunnel
	err := ctx.ReadResource("fortios:index/systemSitTunnel:SystemSitTunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSitTunnel resources.
type systemSitTunnelState struct {
	// Destination IP address of the tunnel.
	Destination *string `pulumi:"destination"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv6 address of the tunnel.
	Ip6 *string `pulumi:"ip6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// Source IP address of the tunnel.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemSitTunnelState struct {
	// Destination IP address of the tunnel.
	Destination pulumi.StringPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IPv6 address of the tunnel.
	Ip6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// Source IP address of the tunnel.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSitTunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSitTunnelState)(nil)).Elem()
}

type systemSitTunnelArgs struct {
	// Destination IP address of the tunnel.
	Destination string `pulumi:"destination"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// IPv6 address of the tunnel.
	Ip6 *string `pulumi:"ip6"`
	// Tunnel name.
	Name *string `pulumi:"name"`
	// Source IP address of the tunnel.
	Source *string `pulumi:"source"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSitTunnel resource.
type SystemSitTunnelArgs struct {
	// Destination IP address of the tunnel.
	Destination pulumi.StringInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// IPv6 address of the tunnel.
	Ip6 pulumi.StringPtrInput
	// Tunnel name.
	Name pulumi.StringPtrInput
	// Source IP address of the tunnel.
	Source pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSitTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSitTunnelArgs)(nil)).Elem()
}

type SystemSitTunnelInput interface {
	pulumi.Input

	ToSystemSitTunnelOutput() SystemSitTunnelOutput
	ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput
}

func (*SystemSitTunnel) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSitTunnel)(nil))
}

func (i *SystemSitTunnel) ToSystemSitTunnelOutput() SystemSitTunnelOutput {
	return i.ToSystemSitTunnelOutputWithContext(context.Background())
}

func (i *SystemSitTunnel) ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelOutput)
}

func (i *SystemSitTunnel) ToSystemSitTunnelPtrOutput() SystemSitTunnelPtrOutput {
	return i.ToSystemSitTunnelPtrOutputWithContext(context.Background())
}

func (i *SystemSitTunnel) ToSystemSitTunnelPtrOutputWithContext(ctx context.Context) SystemSitTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelPtrOutput)
}

type SystemSitTunnelPtrInput interface {
	pulumi.Input

	ToSystemSitTunnelPtrOutput() SystemSitTunnelPtrOutput
	ToSystemSitTunnelPtrOutputWithContext(ctx context.Context) SystemSitTunnelPtrOutput
}

type systemSitTunnelPtrType SystemSitTunnelArgs

func (*systemSitTunnelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSitTunnel)(nil))
}

func (i *systemSitTunnelPtrType) ToSystemSitTunnelPtrOutput() SystemSitTunnelPtrOutput {
	return i.ToSystemSitTunnelPtrOutputWithContext(context.Background())
}

func (i *systemSitTunnelPtrType) ToSystemSitTunnelPtrOutputWithContext(ctx context.Context) SystemSitTunnelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelPtrOutput)
}

// SystemSitTunnelArrayInput is an input type that accepts SystemSitTunnelArray and SystemSitTunnelArrayOutput values.
// You can construct a concrete instance of `SystemSitTunnelArrayInput` via:
//
//          SystemSitTunnelArray{ SystemSitTunnelArgs{...} }
type SystemSitTunnelArrayInput interface {
	pulumi.Input

	ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput
	ToSystemSitTunnelArrayOutputWithContext(context.Context) SystemSitTunnelArrayOutput
}

type SystemSitTunnelArray []SystemSitTunnelInput

func (SystemSitTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemSitTunnel)(nil))
}

func (i SystemSitTunnelArray) ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput {
	return i.ToSystemSitTunnelArrayOutputWithContext(context.Background())
}

func (i SystemSitTunnelArray) ToSystemSitTunnelArrayOutputWithContext(ctx context.Context) SystemSitTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelArrayOutput)
}

// SystemSitTunnelMapInput is an input type that accepts SystemSitTunnelMap and SystemSitTunnelMapOutput values.
// You can construct a concrete instance of `SystemSitTunnelMapInput` via:
//
//          SystemSitTunnelMap{ "key": SystemSitTunnelArgs{...} }
type SystemSitTunnelMapInput interface {
	pulumi.Input

	ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput
	ToSystemSitTunnelMapOutputWithContext(context.Context) SystemSitTunnelMapOutput
}

type SystemSitTunnelMap map[string]SystemSitTunnelInput

func (SystemSitTunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemSitTunnel)(nil))
}

func (i SystemSitTunnelMap) ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput {
	return i.ToSystemSitTunnelMapOutputWithContext(context.Background())
}

func (i SystemSitTunnelMap) ToSystemSitTunnelMapOutputWithContext(ctx context.Context) SystemSitTunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelMapOutput)
}

type SystemSitTunnelOutput struct {
	*pulumi.OutputState
}

func (SystemSitTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSitTunnel)(nil))
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelOutput() SystemSitTunnelOutput {
	return o
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput {
	return o
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelPtrOutput() SystemSitTunnelPtrOutput {
	return o.ToSystemSitTunnelPtrOutputWithContext(context.Background())
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelPtrOutputWithContext(ctx context.Context) SystemSitTunnelPtrOutput {
	return o.ApplyT(func(v SystemSitTunnel) *SystemSitTunnel {
		return &v
	}).(SystemSitTunnelPtrOutput)
}

type SystemSitTunnelPtrOutput struct {
	*pulumi.OutputState
}

func (SystemSitTunnelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSitTunnel)(nil))
}

func (o SystemSitTunnelPtrOutput) ToSystemSitTunnelPtrOutput() SystemSitTunnelPtrOutput {
	return o
}

func (o SystemSitTunnelPtrOutput) ToSystemSitTunnelPtrOutputWithContext(ctx context.Context) SystemSitTunnelPtrOutput {
	return o
}

type SystemSitTunnelArrayOutput struct{ *pulumi.OutputState }

func (SystemSitTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSitTunnel)(nil))
}

func (o SystemSitTunnelArrayOutput) ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput {
	return o
}

func (o SystemSitTunnelArrayOutput) ToSystemSitTunnelArrayOutputWithContext(ctx context.Context) SystemSitTunnelArrayOutput {
	return o
}

func (o SystemSitTunnelArrayOutput) Index(i pulumi.IntInput) SystemSitTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSitTunnel {
		return vs[0].([]SystemSitTunnel)[vs[1].(int)]
	}).(SystemSitTunnelOutput)
}

type SystemSitTunnelMapOutput struct{ *pulumi.OutputState }

func (SystemSitTunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemSitTunnel)(nil))
}

func (o SystemSitTunnelMapOutput) ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput {
	return o
}

func (o SystemSitTunnelMapOutput) ToSystemSitTunnelMapOutputWithContext(ctx context.Context) SystemSitTunnelMapOutput {
	return o
}

func (o SystemSitTunnelMapOutput) MapIndex(k pulumi.StringInput) SystemSitTunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemSitTunnel {
		return vs[0].(map[string]SystemSitTunnel)[vs[1].(string)]
	}).(SystemSitTunnelOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemSitTunnelOutput{})
	pulumi.RegisterOutputType(SystemSitTunnelPtrOutput{})
	pulumi.RegisterOutputType(SystemSitTunnelArrayOutput{})
	pulumi.RegisterOutputType(SystemSitTunnelMapOutput{})
}
