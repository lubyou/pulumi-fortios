// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemSitTunnel struct {
	pulumi.CustomResourceState

	AutoAsicOffload pulumi.StringOutput    `pulumi:"autoAsicOffload"`
	Destination     pulumi.StringOutput    `pulumi:"destination"`
	Interface       pulumi.StringOutput    `pulumi:"interface"`
	Ip6             pulumi.StringOutput    `pulumi:"ip6"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	Source          pulumi.StringOutput    `pulumi:"source"`
	UseSdwan        pulumi.StringOutput    `pulumi:"useSdwan"`
	Vdomparam       pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSitTunnel registers a new resource with the given unique name, arguments, and options.
func NewSystemSitTunnel(ctx *pulumi.Context,
	name string, args *SystemSitTunnelArgs, opts ...pulumi.ResourceOption) (*SystemSitTunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSitTunnel
	err := ctx.RegisterResource("fortios:index/systemSitTunnel:SystemSitTunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSitTunnel gets an existing SystemSitTunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSitTunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSitTunnelState, opts ...pulumi.ResourceOption) (*SystemSitTunnel, error) {
	var resource SystemSitTunnel
	err := ctx.ReadResource("fortios:index/systemSitTunnel:SystemSitTunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSitTunnel resources.
type systemSitTunnelState struct {
	AutoAsicOffload *string `pulumi:"autoAsicOffload"`
	Destination     *string `pulumi:"destination"`
	Interface       *string `pulumi:"interface"`
	Ip6             *string `pulumi:"ip6"`
	Name            *string `pulumi:"name"`
	Source          *string `pulumi:"source"`
	UseSdwan        *string `pulumi:"useSdwan"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

type SystemSitTunnelState struct {
	AutoAsicOffload pulumi.StringPtrInput
	Destination     pulumi.StringPtrInput
	Interface       pulumi.StringPtrInput
	Ip6             pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Source          pulumi.StringPtrInput
	UseSdwan        pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (SystemSitTunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSitTunnelState)(nil)).Elem()
}

type systemSitTunnelArgs struct {
	AutoAsicOffload *string `pulumi:"autoAsicOffload"`
	Destination     string  `pulumi:"destination"`
	Interface       *string `pulumi:"interface"`
	Ip6             *string `pulumi:"ip6"`
	Name            *string `pulumi:"name"`
	Source          *string `pulumi:"source"`
	UseSdwan        *string `pulumi:"useSdwan"`
	Vdomparam       *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSitTunnel resource.
type SystemSitTunnelArgs struct {
	AutoAsicOffload pulumi.StringPtrInput
	Destination     pulumi.StringInput
	Interface       pulumi.StringPtrInput
	Ip6             pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Source          pulumi.StringPtrInput
	UseSdwan        pulumi.StringPtrInput
	Vdomparam       pulumi.StringPtrInput
}

func (SystemSitTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSitTunnelArgs)(nil)).Elem()
}

type SystemSitTunnelInput interface {
	pulumi.Input

	ToSystemSitTunnelOutput() SystemSitTunnelOutput
	ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput
}

func (*SystemSitTunnel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSitTunnel)(nil)).Elem()
}

func (i *SystemSitTunnel) ToSystemSitTunnelOutput() SystemSitTunnelOutput {
	return i.ToSystemSitTunnelOutputWithContext(context.Background())
}

func (i *SystemSitTunnel) ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelOutput)
}

// SystemSitTunnelArrayInput is an input type that accepts SystemSitTunnelArray and SystemSitTunnelArrayOutput values.
// You can construct a concrete instance of `SystemSitTunnelArrayInput` via:
//
//	SystemSitTunnelArray{ SystemSitTunnelArgs{...} }
type SystemSitTunnelArrayInput interface {
	pulumi.Input

	ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput
	ToSystemSitTunnelArrayOutputWithContext(context.Context) SystemSitTunnelArrayOutput
}

type SystemSitTunnelArray []SystemSitTunnelInput

func (SystemSitTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSitTunnel)(nil)).Elem()
}

func (i SystemSitTunnelArray) ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput {
	return i.ToSystemSitTunnelArrayOutputWithContext(context.Background())
}

func (i SystemSitTunnelArray) ToSystemSitTunnelArrayOutputWithContext(ctx context.Context) SystemSitTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelArrayOutput)
}

// SystemSitTunnelMapInput is an input type that accepts SystemSitTunnelMap and SystemSitTunnelMapOutput values.
// You can construct a concrete instance of `SystemSitTunnelMapInput` via:
//
//	SystemSitTunnelMap{ "key": SystemSitTunnelArgs{...} }
type SystemSitTunnelMapInput interface {
	pulumi.Input

	ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput
	ToSystemSitTunnelMapOutputWithContext(context.Context) SystemSitTunnelMapOutput
}

type SystemSitTunnelMap map[string]SystemSitTunnelInput

func (SystemSitTunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSitTunnel)(nil)).Elem()
}

func (i SystemSitTunnelMap) ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput {
	return i.ToSystemSitTunnelMapOutputWithContext(context.Background())
}

func (i SystemSitTunnelMap) ToSystemSitTunnelMapOutputWithContext(ctx context.Context) SystemSitTunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSitTunnelMapOutput)
}

type SystemSitTunnelOutput struct{ *pulumi.OutputState }

func (SystemSitTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSitTunnel)(nil)).Elem()
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelOutput() SystemSitTunnelOutput {
	return o
}

func (o SystemSitTunnelOutput) ToSystemSitTunnelOutputWithContext(ctx context.Context) SystemSitTunnelOutput {
	return o
}

func (o SystemSitTunnelOutput) AutoAsicOffload() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.AutoAsicOffload }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Ip6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.Ip6 }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) UseSdwan() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringOutput { return v.UseSdwan }).(pulumi.StringOutput)
}

func (o SystemSitTunnelOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSitTunnel) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemSitTunnelArrayOutput struct{ *pulumi.OutputState }

func (SystemSitTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSitTunnel)(nil)).Elem()
}

func (o SystemSitTunnelArrayOutput) ToSystemSitTunnelArrayOutput() SystemSitTunnelArrayOutput {
	return o
}

func (o SystemSitTunnelArrayOutput) ToSystemSitTunnelArrayOutputWithContext(ctx context.Context) SystemSitTunnelArrayOutput {
	return o
}

func (o SystemSitTunnelArrayOutput) Index(i pulumi.IntInput) SystemSitTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSitTunnel {
		return vs[0].([]*SystemSitTunnel)[vs[1].(int)]
	}).(SystemSitTunnelOutput)
}

type SystemSitTunnelMapOutput struct{ *pulumi.OutputState }

func (SystemSitTunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSitTunnel)(nil)).Elem()
}

func (o SystemSitTunnelMapOutput) ToSystemSitTunnelMapOutput() SystemSitTunnelMapOutput {
	return o
}

func (o SystemSitTunnelMapOutput) ToSystemSitTunnelMapOutputWithContext(ctx context.Context) SystemSitTunnelMapOutput {
	return o
}

func (o SystemSitTunnelMapOutput) MapIndex(k pulumi.StringInput) SystemSitTunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSitTunnel {
		return vs[0].(map[string]*SystemSitTunnel)[vs[1].(string)]
	}).(SystemSitTunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSitTunnelInput)(nil)).Elem(), &SystemSitTunnel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSitTunnelArrayInput)(nil)).Elem(), SystemSitTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSitTunnelMapInput)(nil)).Elem(), SystemSitTunnelMap{})
	pulumi.RegisterOutputType(SystemSitTunnelOutput{})
	pulumi.RegisterOutputType(SystemSitTunnelArrayOutput{})
	pulumi.RegisterOutputType(SystemSitTunnelMapOutput{})
}
