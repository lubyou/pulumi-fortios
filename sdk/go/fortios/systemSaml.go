// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemSaml struct {
	pulumi.CustomResourceState

	BindingProtocol     pulumi.StringOutput                  `pulumi:"bindingProtocol"`
	Cert                pulumi.StringOutput                  `pulumi:"cert"`
	DefaultLoginPage    pulumi.StringOutput                  `pulumi:"defaultLoginPage"`
	DefaultProfile      pulumi.StringOutput                  `pulumi:"defaultProfile"`
	DynamicSortSubtable pulumi.StringPtrOutput               `pulumi:"dynamicSortSubtable"`
	EntityId            pulumi.StringOutput                  `pulumi:"entityId"`
	GetAllTables        pulumi.StringPtrOutput               `pulumi:"getAllTables"`
	IdpCert             pulumi.StringOutput                  `pulumi:"idpCert"`
	IdpEntityId         pulumi.StringOutput                  `pulumi:"idpEntityId"`
	IdpSingleLogoutUrl  pulumi.StringOutput                  `pulumi:"idpSingleLogoutUrl"`
	IdpSingleSignOnUrl  pulumi.StringOutput                  `pulumi:"idpSingleSignOnUrl"`
	Life                pulumi.IntOutput                     `pulumi:"life"`
	PortalUrl           pulumi.StringOutput                  `pulumi:"portalUrl"`
	Role                pulumi.StringOutput                  `pulumi:"role"`
	ServerAddress       pulumi.StringOutput                  `pulumi:"serverAddress"`
	ServiceProviders    SystemSamlServiceProviderArrayOutput `pulumi:"serviceProviders"`
	SingleLogoutUrl     pulumi.StringOutput                  `pulumi:"singleLogoutUrl"`
	SingleSignOnUrl     pulumi.StringOutput                  `pulumi:"singleSignOnUrl"`
	Status              pulumi.StringOutput                  `pulumi:"status"`
	Tolerance           pulumi.IntOutput                     `pulumi:"tolerance"`
	Vdomparam           pulumi.StringPtrOutput               `pulumi:"vdomparam"`
}

// NewSystemSaml registers a new resource with the given unique name, arguments, and options.
func NewSystemSaml(ctx *pulumi.Context,
	name string, args *SystemSamlArgs, opts ...pulumi.ResourceOption) (*SystemSaml, error) {
	if args == nil {
		args = &SystemSamlArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSaml
	err := ctx.RegisterResource("fortios:index/systemSaml:SystemSaml", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSaml gets an existing SystemSaml resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSaml(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSamlState, opts ...pulumi.ResourceOption) (*SystemSaml, error) {
	var resource SystemSaml
	err := ctx.ReadResource("fortios:index/systemSaml:SystemSaml", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSaml resources.
type systemSamlState struct {
	BindingProtocol     *string                     `pulumi:"bindingProtocol"`
	Cert                *string                     `pulumi:"cert"`
	DefaultLoginPage    *string                     `pulumi:"defaultLoginPage"`
	DefaultProfile      *string                     `pulumi:"defaultProfile"`
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	EntityId            *string                     `pulumi:"entityId"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	IdpCert             *string                     `pulumi:"idpCert"`
	IdpEntityId         *string                     `pulumi:"idpEntityId"`
	IdpSingleLogoutUrl  *string                     `pulumi:"idpSingleLogoutUrl"`
	IdpSingleSignOnUrl  *string                     `pulumi:"idpSingleSignOnUrl"`
	Life                *int                        `pulumi:"life"`
	PortalUrl           *string                     `pulumi:"portalUrl"`
	Role                *string                     `pulumi:"role"`
	ServerAddress       *string                     `pulumi:"serverAddress"`
	ServiceProviders    []SystemSamlServiceProvider `pulumi:"serviceProviders"`
	SingleLogoutUrl     *string                     `pulumi:"singleLogoutUrl"`
	SingleSignOnUrl     *string                     `pulumi:"singleSignOnUrl"`
	Status              *string                     `pulumi:"status"`
	Tolerance           *int                        `pulumi:"tolerance"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
}

type SystemSamlState struct {
	BindingProtocol     pulumi.StringPtrInput
	Cert                pulumi.StringPtrInput
	DefaultLoginPage    pulumi.StringPtrInput
	DefaultProfile      pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EntityId            pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	IdpCert             pulumi.StringPtrInput
	IdpEntityId         pulumi.StringPtrInput
	IdpSingleLogoutUrl  pulumi.StringPtrInput
	IdpSingleSignOnUrl  pulumi.StringPtrInput
	Life                pulumi.IntPtrInput
	PortalUrl           pulumi.StringPtrInput
	Role                pulumi.StringPtrInput
	ServerAddress       pulumi.StringPtrInput
	ServiceProviders    SystemSamlServiceProviderArrayInput
	SingleLogoutUrl     pulumi.StringPtrInput
	SingleSignOnUrl     pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Tolerance           pulumi.IntPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemSamlState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSamlState)(nil)).Elem()
}

type systemSamlArgs struct {
	BindingProtocol     *string                     `pulumi:"bindingProtocol"`
	Cert                *string                     `pulumi:"cert"`
	DefaultLoginPage    *string                     `pulumi:"defaultLoginPage"`
	DefaultProfile      *string                     `pulumi:"defaultProfile"`
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	EntityId            *string                     `pulumi:"entityId"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	IdpCert             *string                     `pulumi:"idpCert"`
	IdpEntityId         *string                     `pulumi:"idpEntityId"`
	IdpSingleLogoutUrl  *string                     `pulumi:"idpSingleLogoutUrl"`
	IdpSingleSignOnUrl  *string                     `pulumi:"idpSingleSignOnUrl"`
	Life                *int                        `pulumi:"life"`
	PortalUrl           *string                     `pulumi:"portalUrl"`
	Role                *string                     `pulumi:"role"`
	ServerAddress       *string                     `pulumi:"serverAddress"`
	ServiceProviders    []SystemSamlServiceProvider `pulumi:"serviceProviders"`
	SingleLogoutUrl     *string                     `pulumi:"singleLogoutUrl"`
	SingleSignOnUrl     *string                     `pulumi:"singleSignOnUrl"`
	Status              *string                     `pulumi:"status"`
	Tolerance           *int                        `pulumi:"tolerance"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSaml resource.
type SystemSamlArgs struct {
	BindingProtocol     pulumi.StringPtrInput
	Cert                pulumi.StringPtrInput
	DefaultLoginPage    pulumi.StringPtrInput
	DefaultProfile      pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EntityId            pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	IdpCert             pulumi.StringPtrInput
	IdpEntityId         pulumi.StringPtrInput
	IdpSingleLogoutUrl  pulumi.StringPtrInput
	IdpSingleSignOnUrl  pulumi.StringPtrInput
	Life                pulumi.IntPtrInput
	PortalUrl           pulumi.StringPtrInput
	Role                pulumi.StringPtrInput
	ServerAddress       pulumi.StringPtrInput
	ServiceProviders    SystemSamlServiceProviderArrayInput
	SingleLogoutUrl     pulumi.StringPtrInput
	SingleSignOnUrl     pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Tolerance           pulumi.IntPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSamlArgs)(nil)).Elem()
}

type SystemSamlInput interface {
	pulumi.Input

	ToSystemSamlOutput() SystemSamlOutput
	ToSystemSamlOutputWithContext(ctx context.Context) SystemSamlOutput
}

func (*SystemSaml) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSaml)(nil)).Elem()
}

func (i *SystemSaml) ToSystemSamlOutput() SystemSamlOutput {
	return i.ToSystemSamlOutputWithContext(context.Background())
}

func (i *SystemSaml) ToSystemSamlOutputWithContext(ctx context.Context) SystemSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlOutput)
}

func (i *SystemSaml) ToOutput(ctx context.Context) pulumix.Output[*SystemSaml] {
	return pulumix.Output[*SystemSaml]{
		OutputState: i.ToSystemSamlOutputWithContext(ctx).OutputState,
	}
}

// SystemSamlArrayInput is an input type that accepts SystemSamlArray and SystemSamlArrayOutput values.
// You can construct a concrete instance of `SystemSamlArrayInput` via:
//
//	SystemSamlArray{ SystemSamlArgs{...} }
type SystemSamlArrayInput interface {
	pulumi.Input

	ToSystemSamlArrayOutput() SystemSamlArrayOutput
	ToSystemSamlArrayOutputWithContext(context.Context) SystemSamlArrayOutput
}

type SystemSamlArray []SystemSamlInput

func (SystemSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSaml)(nil)).Elem()
}

func (i SystemSamlArray) ToSystemSamlArrayOutput() SystemSamlArrayOutput {
	return i.ToSystemSamlArrayOutputWithContext(context.Background())
}

func (i SystemSamlArray) ToSystemSamlArrayOutputWithContext(ctx context.Context) SystemSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlArrayOutput)
}

func (i SystemSamlArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSaml] {
	return pulumix.Output[[]*SystemSaml]{
		OutputState: i.ToSystemSamlArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemSamlMapInput is an input type that accepts SystemSamlMap and SystemSamlMapOutput values.
// You can construct a concrete instance of `SystemSamlMapInput` via:
//
//	SystemSamlMap{ "key": SystemSamlArgs{...} }
type SystemSamlMapInput interface {
	pulumi.Input

	ToSystemSamlMapOutput() SystemSamlMapOutput
	ToSystemSamlMapOutputWithContext(context.Context) SystemSamlMapOutput
}

type SystemSamlMap map[string]SystemSamlInput

func (SystemSamlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSaml)(nil)).Elem()
}

func (i SystemSamlMap) ToSystemSamlMapOutput() SystemSamlMapOutput {
	return i.ToSystemSamlMapOutputWithContext(context.Background())
}

func (i SystemSamlMap) ToSystemSamlMapOutputWithContext(ctx context.Context) SystemSamlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlMapOutput)
}

func (i SystemSamlMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSaml] {
	return pulumix.Output[map[string]*SystemSaml]{
		OutputState: i.ToSystemSamlMapOutputWithContext(ctx).OutputState,
	}
}

type SystemSamlOutput struct{ *pulumi.OutputState }

func (SystemSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSaml)(nil)).Elem()
}

func (o SystemSamlOutput) ToSystemSamlOutput() SystemSamlOutput {
	return o
}

func (o SystemSamlOutput) ToSystemSamlOutputWithContext(ctx context.Context) SystemSamlOutput {
	return o
}

func (o SystemSamlOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemSaml] {
	return pulumix.Output[*SystemSaml]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlOutput) BindingProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.BindingProtocol }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.Cert }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) DefaultLoginPage() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.DefaultLoginPage }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) DefaultProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.DefaultProfile }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemSamlOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.EntityId }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemSamlOutput) IdpCert() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.IdpCert }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.IdpEntityId }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) IdpSingleLogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.IdpSingleLogoutUrl }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) IdpSingleSignOnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.IdpSingleSignOnUrl }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) Life() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.IntOutput { return v.Life }).(pulumi.IntOutput)
}

func (o SystemSamlOutput) PortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.PortalUrl }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.ServerAddress }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) ServiceProviders() SystemSamlServiceProviderArrayOutput {
	return o.ApplyT(func(v *SystemSaml) SystemSamlServiceProviderArrayOutput { return v.ServiceProviders }).(SystemSamlServiceProviderArrayOutput)
}

func (o SystemSamlOutput) SingleLogoutUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.SingleLogoutUrl }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) SingleSignOnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.SingleSignOnUrl }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemSamlOutput) Tolerance() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.IntOutput { return v.Tolerance }).(pulumi.IntOutput)
}

func (o SystemSamlOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSaml) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemSamlArrayOutput struct{ *pulumi.OutputState }

func (SystemSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSaml)(nil)).Elem()
}

func (o SystemSamlArrayOutput) ToSystemSamlArrayOutput() SystemSamlArrayOutput {
	return o
}

func (o SystemSamlArrayOutput) ToSystemSamlArrayOutputWithContext(ctx context.Context) SystemSamlArrayOutput {
	return o
}

func (o SystemSamlArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSaml] {
	return pulumix.Output[[]*SystemSaml]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlArrayOutput) Index(i pulumi.IntInput) SystemSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSaml {
		return vs[0].([]*SystemSaml)[vs[1].(int)]
	}).(SystemSamlOutput)
}

type SystemSamlMapOutput struct{ *pulumi.OutputState }

func (SystemSamlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSaml)(nil)).Elem()
}

func (o SystemSamlMapOutput) ToSystemSamlMapOutput() SystemSamlMapOutput {
	return o
}

func (o SystemSamlMapOutput) ToSystemSamlMapOutputWithContext(ctx context.Context) SystemSamlMapOutput {
	return o
}

func (o SystemSamlMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSaml] {
	return pulumix.Output[map[string]*SystemSaml]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlMapOutput) MapIndex(k pulumi.StringInput) SystemSamlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSaml {
		return vs[0].(map[string]*SystemSaml)[vs[1].(string)]
	}).(SystemSamlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlInput)(nil)).Elem(), &SystemSaml{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlArrayInput)(nil)).Elem(), SystemSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlMapInput)(nil)).Elem(), SystemSamlMap{})
	pulumi.RegisterOutputType(SystemSamlOutput{})
	pulumi.RegisterOutputType(SystemSamlArrayOutput{})
	pulumi.RegisterOutputType(SystemSamlMapOutput{})
}
