// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure SSO admin users. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemSsoAdmin(ctx, "trname", &fortios.SystemSsoAdminArgs{
// 			Accprofile: pulumi.String("super_admin"),
// 			Vdoms: SystemSsoAdminVdomArray{
// 				&SystemSsoAdminVdomArgs{
// 					Name: pulumi.String("root"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System SsoAdmin can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemSsoAdmin:SystemSsoAdmin labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemSsoAdmin:SystemSsoAdmin labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemSsoAdmin struct {
	pulumi.CustomResourceState

	// SSO admin user access profile.
	Accprofile pulumi.StringOutput `pulumi:"accprofile"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringOutput `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// Virtual domain name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemSsoAdminVdomArrayOutput `pulumi:"vdoms"`
}

// NewSystemSsoAdmin registers a new resource with the given unique name, arguments, and options.
func NewSystemSsoAdmin(ctx *pulumi.Context,
	name string, args *SystemSsoAdminArgs, opts ...pulumi.ResourceOption) (*SystemSsoAdmin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Accprofile == nil {
		return nil, errors.New("invalid value for required argument 'Accprofile'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSsoAdmin
	err := ctx.RegisterResource("fortios:index/systemSsoAdmin:SystemSsoAdmin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSsoAdmin gets an existing SystemSsoAdmin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSsoAdmin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSsoAdminState, opts ...pulumi.ResourceOption) (*SystemSsoAdmin, error) {
	var resource SystemSsoAdmin
	err := ctx.ReadResource("fortios:index/systemSsoAdmin:SystemSsoAdmin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSsoAdmin resources.
type systemSsoAdminState struct {
	// SSO admin user access profile.
	Accprofile *string `pulumi:"accprofile"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion *string `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// Virtual domain name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SystemSsoAdminVdom `pulumi:"vdoms"`
}

type SystemSsoAdminState struct {
	// SSO admin user access profile.
	Accprofile pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringPtrInput
	// Virtual domain name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemSsoAdminVdomArrayInput
}

func (SystemSsoAdminState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSsoAdminState)(nil)).Elem()
}

type systemSsoAdminArgs struct {
	// SSO admin user access profile.
	Accprofile string `pulumi:"accprofile"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion *string `pulumi:"guiIgnoreReleaseOverviewVersion"`
	// Virtual domain name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms []SystemSsoAdminVdom `pulumi:"vdoms"`
}

// The set of arguments for constructing a SystemSsoAdmin resource.
type SystemSsoAdminArgs struct {
	// SSO admin user access profile.
	Accprofile pulumi.StringInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// The FortiOS version to ignore release overview prompt for.
	GuiIgnoreReleaseOverviewVersion pulumi.StringPtrInput
	// Virtual domain name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
	Vdoms SystemSsoAdminVdomArrayInput
}

func (SystemSsoAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSsoAdminArgs)(nil)).Elem()
}

type SystemSsoAdminInput interface {
	pulumi.Input

	ToSystemSsoAdminOutput() SystemSsoAdminOutput
	ToSystemSsoAdminOutputWithContext(ctx context.Context) SystemSsoAdminOutput
}

func (*SystemSsoAdmin) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSsoAdmin)(nil)).Elem()
}

func (i *SystemSsoAdmin) ToSystemSsoAdminOutput() SystemSsoAdminOutput {
	return i.ToSystemSsoAdminOutputWithContext(context.Background())
}

func (i *SystemSsoAdmin) ToSystemSsoAdminOutputWithContext(ctx context.Context) SystemSsoAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoAdminOutput)
}

// SystemSsoAdminArrayInput is an input type that accepts SystemSsoAdminArray and SystemSsoAdminArrayOutput values.
// You can construct a concrete instance of `SystemSsoAdminArrayInput` via:
//
//          SystemSsoAdminArray{ SystemSsoAdminArgs{...} }
type SystemSsoAdminArrayInput interface {
	pulumi.Input

	ToSystemSsoAdminArrayOutput() SystemSsoAdminArrayOutput
	ToSystemSsoAdminArrayOutputWithContext(context.Context) SystemSsoAdminArrayOutput
}

type SystemSsoAdminArray []SystemSsoAdminInput

func (SystemSsoAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSsoAdmin)(nil)).Elem()
}

func (i SystemSsoAdminArray) ToSystemSsoAdminArrayOutput() SystemSsoAdminArrayOutput {
	return i.ToSystemSsoAdminArrayOutputWithContext(context.Background())
}

func (i SystemSsoAdminArray) ToSystemSsoAdminArrayOutputWithContext(ctx context.Context) SystemSsoAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoAdminArrayOutput)
}

// SystemSsoAdminMapInput is an input type that accepts SystemSsoAdminMap and SystemSsoAdminMapOutput values.
// You can construct a concrete instance of `SystemSsoAdminMapInput` via:
//
//          SystemSsoAdminMap{ "key": SystemSsoAdminArgs{...} }
type SystemSsoAdminMapInput interface {
	pulumi.Input

	ToSystemSsoAdminMapOutput() SystemSsoAdminMapOutput
	ToSystemSsoAdminMapOutputWithContext(context.Context) SystemSsoAdminMapOutput
}

type SystemSsoAdminMap map[string]SystemSsoAdminInput

func (SystemSsoAdminMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSsoAdmin)(nil)).Elem()
}

func (i SystemSsoAdminMap) ToSystemSsoAdminMapOutput() SystemSsoAdminMapOutput {
	return i.ToSystemSsoAdminMapOutputWithContext(context.Background())
}

func (i SystemSsoAdminMap) ToSystemSsoAdminMapOutputWithContext(ctx context.Context) SystemSsoAdminMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoAdminMapOutput)
}

type SystemSsoAdminOutput struct{ *pulumi.OutputState }

func (SystemSsoAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSsoAdmin)(nil)).Elem()
}

func (o SystemSsoAdminOutput) ToSystemSsoAdminOutput() SystemSsoAdminOutput {
	return o
}

func (o SystemSsoAdminOutput) ToSystemSsoAdminOutputWithContext(ctx context.Context) SystemSsoAdminOutput {
	return o
}

type SystemSsoAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSsoAdmin)(nil)).Elem()
}

func (o SystemSsoAdminArrayOutput) ToSystemSsoAdminArrayOutput() SystemSsoAdminArrayOutput {
	return o
}

func (o SystemSsoAdminArrayOutput) ToSystemSsoAdminArrayOutputWithContext(ctx context.Context) SystemSsoAdminArrayOutput {
	return o
}

func (o SystemSsoAdminArrayOutput) Index(i pulumi.IntInput) SystemSsoAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSsoAdmin {
		return vs[0].([]*SystemSsoAdmin)[vs[1].(int)]
	}).(SystemSsoAdminOutput)
}

type SystemSsoAdminMapOutput struct{ *pulumi.OutputState }

func (SystemSsoAdminMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSsoAdmin)(nil)).Elem()
}

func (o SystemSsoAdminMapOutput) ToSystemSsoAdminMapOutput() SystemSsoAdminMapOutput {
	return o
}

func (o SystemSsoAdminMapOutput) ToSystemSsoAdminMapOutputWithContext(ctx context.Context) SystemSsoAdminMapOutput {
	return o
}

func (o SystemSsoAdminMapOutput) MapIndex(k pulumi.StringInput) SystemSsoAdminOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSsoAdmin {
		return vs[0].(map[string]*SystemSsoAdmin)[vs[1].(string)]
	}).(SystemSsoAdminOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoAdminInput)(nil)).Elem(), &SystemSsoAdmin{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoAdminArrayInput)(nil)).Elem(), SystemSsoAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoAdminMapInput)(nil)).Elem(), SystemSsoAdminMap{})
	pulumi.RegisterOutputType(SystemSsoAdminOutput{})
	pulumi.RegisterOutputType(SystemSsoAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoAdminMapOutput{})
}
