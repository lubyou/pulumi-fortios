// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type VPNIPsecPhase2InterfaceLegacy struct {
	pulumi.CustomResourceState

	Comments    pulumi.StringPtrOutput `pulumi:"comments"`
	DstAddrType pulumi.StringOutput    `pulumi:"dstAddrType"`
	DstEndIp    pulumi.StringOutput    `pulumi:"dstEndIp"`
	DstName     pulumi.StringOutput    `pulumi:"dstName"`
	DstStartIp  pulumi.StringOutput    `pulumi:"dstStartIp"`
	DstSubnet   pulumi.StringOutput    `pulumi:"dstSubnet"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Phase1name  pulumi.StringOutput    `pulumi:"phase1name"`
	Proposal    pulumi.StringOutput    `pulumi:"proposal"`
	SrcAddrType pulumi.StringOutput    `pulumi:"srcAddrType"`
	SrcEndIp    pulumi.StringOutput    `pulumi:"srcEndIp"`
	SrcName     pulumi.StringOutput    `pulumi:"srcName"`
	SrcStartIp  pulumi.StringOutput    `pulumi:"srcStartIp"`
	SrcSubnet   pulumi.StringOutput    `pulumi:"srcSubnet"`
}

// NewVPNIPsecPhase2InterfaceLegacy registers a new resource with the given unique name, arguments, and options.
func NewVPNIPsecPhase2InterfaceLegacy(ctx *pulumi.Context,
	name string, args *VPNIPsecPhase2InterfaceLegacyArgs, opts ...pulumi.ResourceOption) (*VPNIPsecPhase2InterfaceLegacy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Phase1name == nil {
		return nil, errors.New("invalid value for required argument 'Phase1name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VPNIPsecPhase2InterfaceLegacy
	err := ctx.RegisterResource("fortios:index/vPNIPsecPhase2InterfaceLegacy:VPNIPsecPhase2InterfaceLegacy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNIPsecPhase2InterfaceLegacy gets an existing VPNIPsecPhase2InterfaceLegacy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNIPsecPhase2InterfaceLegacy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNIPsecPhase2InterfaceLegacyState, opts ...pulumi.ResourceOption) (*VPNIPsecPhase2InterfaceLegacy, error) {
	var resource VPNIPsecPhase2InterfaceLegacy
	err := ctx.ReadResource("fortios:index/vPNIPsecPhase2InterfaceLegacy:VPNIPsecPhase2InterfaceLegacy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNIPsecPhase2InterfaceLegacy resources.
type vpnipsecPhase2InterfaceLegacyState struct {
	Comments    *string `pulumi:"comments"`
	DstAddrType *string `pulumi:"dstAddrType"`
	DstEndIp    *string `pulumi:"dstEndIp"`
	DstName     *string `pulumi:"dstName"`
	DstStartIp  *string `pulumi:"dstStartIp"`
	DstSubnet   *string `pulumi:"dstSubnet"`
	Name        *string `pulumi:"name"`
	Phase1name  *string `pulumi:"phase1name"`
	Proposal    *string `pulumi:"proposal"`
	SrcAddrType *string `pulumi:"srcAddrType"`
	SrcEndIp    *string `pulumi:"srcEndIp"`
	SrcName     *string `pulumi:"srcName"`
	SrcStartIp  *string `pulumi:"srcStartIp"`
	SrcSubnet   *string `pulumi:"srcSubnet"`
}

type VPNIPsecPhase2InterfaceLegacyState struct {
	Comments    pulumi.StringPtrInput
	DstAddrType pulumi.StringPtrInput
	DstEndIp    pulumi.StringPtrInput
	DstName     pulumi.StringPtrInput
	DstStartIp  pulumi.StringPtrInput
	DstSubnet   pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Phase1name  pulumi.StringPtrInput
	Proposal    pulumi.StringPtrInput
	SrcAddrType pulumi.StringPtrInput
	SrcEndIp    pulumi.StringPtrInput
	SrcName     pulumi.StringPtrInput
	SrcStartIp  pulumi.StringPtrInput
	SrcSubnet   pulumi.StringPtrInput
}

func (VPNIPsecPhase2InterfaceLegacyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase2InterfaceLegacyState)(nil)).Elem()
}

type vpnipsecPhase2InterfaceLegacyArgs struct {
	Comments    *string `pulumi:"comments"`
	DstAddrType *string `pulumi:"dstAddrType"`
	DstEndIp    *string `pulumi:"dstEndIp"`
	DstName     *string `pulumi:"dstName"`
	DstStartIp  *string `pulumi:"dstStartIp"`
	DstSubnet   *string `pulumi:"dstSubnet"`
	Name        *string `pulumi:"name"`
	Phase1name  string  `pulumi:"phase1name"`
	Proposal    *string `pulumi:"proposal"`
	SrcAddrType *string `pulumi:"srcAddrType"`
	SrcEndIp    *string `pulumi:"srcEndIp"`
	SrcName     *string `pulumi:"srcName"`
	SrcStartIp  *string `pulumi:"srcStartIp"`
	SrcSubnet   *string `pulumi:"srcSubnet"`
}

// The set of arguments for constructing a VPNIPsecPhase2InterfaceLegacy resource.
type VPNIPsecPhase2InterfaceLegacyArgs struct {
	Comments    pulumi.StringPtrInput
	DstAddrType pulumi.StringPtrInput
	DstEndIp    pulumi.StringPtrInput
	DstName     pulumi.StringPtrInput
	DstStartIp  pulumi.StringPtrInput
	DstSubnet   pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Phase1name  pulumi.StringInput
	Proposal    pulumi.StringPtrInput
	SrcAddrType pulumi.StringPtrInput
	SrcEndIp    pulumi.StringPtrInput
	SrcName     pulumi.StringPtrInput
	SrcStartIp  pulumi.StringPtrInput
	SrcSubnet   pulumi.StringPtrInput
}

func (VPNIPsecPhase2InterfaceLegacyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase2InterfaceLegacyArgs)(nil)).Elem()
}

type VPNIPsecPhase2InterfaceLegacyInput interface {
	pulumi.Input

	ToVPNIPsecPhase2InterfaceLegacyOutput() VPNIPsecPhase2InterfaceLegacyOutput
	ToVPNIPsecPhase2InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyOutput
}

func (*VPNIPsecPhase2InterfaceLegacy) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (i *VPNIPsecPhase2InterfaceLegacy) ToVPNIPsecPhase2InterfaceLegacyOutput() VPNIPsecPhase2InterfaceLegacyOutput {
	return i.ToVPNIPsecPhase2InterfaceLegacyOutputWithContext(context.Background())
}

func (i *VPNIPsecPhase2InterfaceLegacy) ToVPNIPsecPhase2InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase2InterfaceLegacyOutput)
}

func (i *VPNIPsecPhase2InterfaceLegacy) ToOutput(ctx context.Context) pulumix.Output[*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase2InterfaceLegacyOutputWithContext(ctx).OutputState,
	}
}

// VPNIPsecPhase2InterfaceLegacyArrayInput is an input type that accepts VPNIPsecPhase2InterfaceLegacyArray and VPNIPsecPhase2InterfaceLegacyArrayOutput values.
// You can construct a concrete instance of `VPNIPsecPhase2InterfaceLegacyArrayInput` via:
//
//	VPNIPsecPhase2InterfaceLegacyArray{ VPNIPsecPhase2InterfaceLegacyArgs{...} }
type VPNIPsecPhase2InterfaceLegacyArrayInput interface {
	pulumi.Input

	ToVPNIPsecPhase2InterfaceLegacyArrayOutput() VPNIPsecPhase2InterfaceLegacyArrayOutput
	ToVPNIPsecPhase2InterfaceLegacyArrayOutputWithContext(context.Context) VPNIPsecPhase2InterfaceLegacyArrayOutput
}

type VPNIPsecPhase2InterfaceLegacyArray []VPNIPsecPhase2InterfaceLegacyInput

func (VPNIPsecPhase2InterfaceLegacyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase2InterfaceLegacyArray) ToVPNIPsecPhase2InterfaceLegacyArrayOutput() VPNIPsecPhase2InterfaceLegacyArrayOutput {
	return i.ToVPNIPsecPhase2InterfaceLegacyArrayOutputWithContext(context.Background())
}

func (i VPNIPsecPhase2InterfaceLegacyArray) ToVPNIPsecPhase2InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase2InterfaceLegacyArrayOutput)
}

func (i VPNIPsecPhase2InterfaceLegacyArray) ToOutput(ctx context.Context) pulumix.Output[[]*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[[]*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase2InterfaceLegacyArrayOutputWithContext(ctx).OutputState,
	}
}

// VPNIPsecPhase2InterfaceLegacyMapInput is an input type that accepts VPNIPsecPhase2InterfaceLegacyMap and VPNIPsecPhase2InterfaceLegacyMapOutput values.
// You can construct a concrete instance of `VPNIPsecPhase2InterfaceLegacyMapInput` via:
//
//	VPNIPsecPhase2InterfaceLegacyMap{ "key": VPNIPsecPhase2InterfaceLegacyArgs{...} }
type VPNIPsecPhase2InterfaceLegacyMapInput interface {
	pulumi.Input

	ToVPNIPsecPhase2InterfaceLegacyMapOutput() VPNIPsecPhase2InterfaceLegacyMapOutput
	ToVPNIPsecPhase2InterfaceLegacyMapOutputWithContext(context.Context) VPNIPsecPhase2InterfaceLegacyMapOutput
}

type VPNIPsecPhase2InterfaceLegacyMap map[string]VPNIPsecPhase2InterfaceLegacyInput

func (VPNIPsecPhase2InterfaceLegacyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase2InterfaceLegacyMap) ToVPNIPsecPhase2InterfaceLegacyMapOutput() VPNIPsecPhase2InterfaceLegacyMapOutput {
	return i.ToVPNIPsecPhase2InterfaceLegacyMapOutputWithContext(context.Background())
}

func (i VPNIPsecPhase2InterfaceLegacyMap) ToVPNIPsecPhase2InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase2InterfaceLegacyMapOutput)
}

func (i VPNIPsecPhase2InterfaceLegacyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[map[string]*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase2InterfaceLegacyMapOutputWithContext(ctx).OutputState,
	}
}

type VPNIPsecPhase2InterfaceLegacyOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase2InterfaceLegacyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) ToVPNIPsecPhase2InterfaceLegacyOutput() VPNIPsecPhase2InterfaceLegacyOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) ToVPNIPsecPhase2InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) ToOutput(ctx context.Context) pulumix.Output[*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) DstAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.DstAddrType }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) DstEndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.DstEndIp }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) DstName() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.DstName }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) DstStartIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.DstStartIp }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) DstSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.DstSubnet }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) Phase1name() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.Phase1name }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) Proposal() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.Proposal }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) SrcAddrType() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.SrcAddrType }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) SrcEndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.SrcEndIp }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) SrcName() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.SrcName }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) SrcStartIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.SrcStartIp }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase2InterfaceLegacyOutput) SrcSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase2InterfaceLegacy) pulumi.StringOutput { return v.SrcSubnet }).(pulumi.StringOutput)
}

type VPNIPsecPhase2InterfaceLegacyArrayOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase2InterfaceLegacyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase2InterfaceLegacyArrayOutput) ToVPNIPsecPhase2InterfaceLegacyArrayOutput() VPNIPsecPhase2InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyArrayOutput) ToVPNIPsecPhase2InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[[]*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase2InterfaceLegacyArrayOutput) Index(i pulumi.IntInput) VPNIPsecPhase2InterfaceLegacyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VPNIPsecPhase2InterfaceLegacy {
		return vs[0].([]*VPNIPsecPhase2InterfaceLegacy)[vs[1].(int)]
	}).(VPNIPsecPhase2InterfaceLegacyOutput)
}

type VPNIPsecPhase2InterfaceLegacyMapOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase2InterfaceLegacyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase2InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase2InterfaceLegacyMapOutput) ToVPNIPsecPhase2InterfaceLegacyMapOutput() VPNIPsecPhase2InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyMapOutput) ToVPNIPsecPhase2InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase2InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase2InterfaceLegacyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*VPNIPsecPhase2InterfaceLegacy] {
	return pulumix.Output[map[string]*VPNIPsecPhase2InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase2InterfaceLegacyMapOutput) MapIndex(k pulumi.StringInput) VPNIPsecPhase2InterfaceLegacyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VPNIPsecPhase2InterfaceLegacy {
		return vs[0].(map[string]*VPNIPsecPhase2InterfaceLegacy)[vs[1].(string)]
	}).(VPNIPsecPhase2InterfaceLegacyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase2InterfaceLegacyInput)(nil)).Elem(), &VPNIPsecPhase2InterfaceLegacy{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase2InterfaceLegacyArrayInput)(nil)).Elem(), VPNIPsecPhase2InterfaceLegacyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase2InterfaceLegacyMapInput)(nil)).Elem(), VPNIPsecPhase2InterfaceLegacyMap{})
	pulumi.RegisterOutputType(VPNIPsecPhase2InterfaceLegacyOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase2InterfaceLegacyArrayOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase2InterfaceLegacyMapOutput{})
}
