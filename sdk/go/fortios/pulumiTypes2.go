// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type LogFortianalyzerSettingSerial struct {
	Name *string `pulumi:"name"`
}

// LogFortianalyzerSettingSerialInput is an input type that accepts LogFortianalyzerSettingSerialArgs and LogFortianalyzerSettingSerialOutput values.
// You can construct a concrete instance of `LogFortianalyzerSettingSerialInput` via:
//
//	LogFortianalyzerSettingSerialArgs{...}
type LogFortianalyzerSettingSerialInput interface {
	pulumi.Input

	ToLogFortianalyzerSettingSerialOutput() LogFortianalyzerSettingSerialOutput
	ToLogFortianalyzerSettingSerialOutputWithContext(context.Context) LogFortianalyzerSettingSerialOutput
}

type LogFortianalyzerSettingSerialArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LogFortianalyzerSettingSerialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortianalyzerSettingSerial)(nil)).Elem()
}

func (i LogFortianalyzerSettingSerialArgs) ToLogFortianalyzerSettingSerialOutput() LogFortianalyzerSettingSerialOutput {
	return i.ToLogFortianalyzerSettingSerialOutputWithContext(context.Background())
}

func (i LogFortianalyzerSettingSerialArgs) ToLogFortianalyzerSettingSerialOutputWithContext(ctx context.Context) LogFortianalyzerSettingSerialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerSettingSerialOutput)
}

func (i LogFortianalyzerSettingSerialArgs) ToOutput(ctx context.Context) pulumix.Output[LogFortianalyzerSettingSerial] {
	return pulumix.Output[LogFortianalyzerSettingSerial]{
		OutputState: i.ToLogFortianalyzerSettingSerialOutputWithContext(ctx).OutputState,
	}
}

// LogFortianalyzerSettingSerialArrayInput is an input type that accepts LogFortianalyzerSettingSerialArray and LogFortianalyzerSettingSerialArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzerSettingSerialArrayInput` via:
//
//	LogFortianalyzerSettingSerialArray{ LogFortianalyzerSettingSerialArgs{...} }
type LogFortianalyzerSettingSerialArrayInput interface {
	pulumi.Input

	ToLogFortianalyzerSettingSerialArrayOutput() LogFortianalyzerSettingSerialArrayOutput
	ToLogFortianalyzerSettingSerialArrayOutputWithContext(context.Context) LogFortianalyzerSettingSerialArrayOutput
}

type LogFortianalyzerSettingSerialArray []LogFortianalyzerSettingSerialInput

func (LogFortianalyzerSettingSerialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortianalyzerSettingSerial)(nil)).Elem()
}

func (i LogFortianalyzerSettingSerialArray) ToLogFortianalyzerSettingSerialArrayOutput() LogFortianalyzerSettingSerialArrayOutput {
	return i.ToLogFortianalyzerSettingSerialArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzerSettingSerialArray) ToLogFortianalyzerSettingSerialArrayOutputWithContext(ctx context.Context) LogFortianalyzerSettingSerialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerSettingSerialArrayOutput)
}

func (i LogFortianalyzerSettingSerialArray) ToOutput(ctx context.Context) pulumix.Output[[]LogFortianalyzerSettingSerial] {
	return pulumix.Output[[]LogFortianalyzerSettingSerial]{
		OutputState: i.ToLogFortianalyzerSettingSerialArrayOutputWithContext(ctx).OutputState,
	}
}

type LogFortianalyzerSettingSerialOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerSettingSerialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortianalyzerSettingSerial)(nil)).Elem()
}

func (o LogFortianalyzerSettingSerialOutput) ToLogFortianalyzerSettingSerialOutput() LogFortianalyzerSettingSerialOutput {
	return o
}

func (o LogFortianalyzerSettingSerialOutput) ToLogFortianalyzerSettingSerialOutputWithContext(ctx context.Context) LogFortianalyzerSettingSerialOutput {
	return o
}

func (o LogFortianalyzerSettingSerialOutput) ToOutput(ctx context.Context) pulumix.Output[LogFortianalyzerSettingSerial] {
	return pulumix.Output[LogFortianalyzerSettingSerial]{
		OutputState: o.OutputState,
	}
}

func (o LogFortianalyzerSettingSerialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortianalyzerSettingSerial) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogFortianalyzerSettingSerialArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerSettingSerialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortianalyzerSettingSerial)(nil)).Elem()
}

func (o LogFortianalyzerSettingSerialArrayOutput) ToLogFortianalyzerSettingSerialArrayOutput() LogFortianalyzerSettingSerialArrayOutput {
	return o
}

func (o LogFortianalyzerSettingSerialArrayOutput) ToLogFortianalyzerSettingSerialArrayOutputWithContext(ctx context.Context) LogFortianalyzerSettingSerialArrayOutput {
	return o
}

func (o LogFortianalyzerSettingSerialArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogFortianalyzerSettingSerial] {
	return pulumix.Output[[]LogFortianalyzerSettingSerial]{
		OutputState: o.OutputState,
	}
}

func (o LogFortianalyzerSettingSerialArrayOutput) Index(i pulumi.IntInput) LogFortianalyzerSettingSerialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogFortianalyzerSettingSerial {
		return vs[0].([]LogFortianalyzerSettingSerial)[vs[1].(int)]
	}).(LogFortianalyzerSettingSerialOutput)
}

type LogFortiguardFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogFortiguardFilterFreeStyleInput is an input type that accepts LogFortiguardFilterFreeStyleArgs and LogFortiguardFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogFortiguardFilterFreeStyleInput` via:
//
//	LogFortiguardFilterFreeStyleArgs{...}
type LogFortiguardFilterFreeStyleInput interface {
	pulumi.Input

	ToLogFortiguardFilterFreeStyleOutput() LogFortiguardFilterFreeStyleOutput
	ToLogFortiguardFilterFreeStyleOutputWithContext(context.Context) LogFortiguardFilterFreeStyleOutput
}

type LogFortiguardFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogFortiguardFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortiguardFilterFreeStyle)(nil)).Elem()
}

func (i LogFortiguardFilterFreeStyleArgs) ToLogFortiguardFilterFreeStyleOutput() LogFortiguardFilterFreeStyleOutput {
	return i.ToLogFortiguardFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogFortiguardFilterFreeStyleArgs) ToLogFortiguardFilterFreeStyleOutputWithContext(ctx context.Context) LogFortiguardFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardFilterFreeStyleOutput)
}

func (i LogFortiguardFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogFortiguardFilterFreeStyle] {
	return pulumix.Output[LogFortiguardFilterFreeStyle]{
		OutputState: i.ToLogFortiguardFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogFortiguardFilterFreeStyleArrayInput is an input type that accepts LogFortiguardFilterFreeStyleArray and LogFortiguardFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogFortiguardFilterFreeStyleArrayInput` via:
//
//	LogFortiguardFilterFreeStyleArray{ LogFortiguardFilterFreeStyleArgs{...} }
type LogFortiguardFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogFortiguardFilterFreeStyleArrayOutput() LogFortiguardFilterFreeStyleArrayOutput
	ToLogFortiguardFilterFreeStyleArrayOutputWithContext(context.Context) LogFortiguardFilterFreeStyleArrayOutput
}

type LogFortiguardFilterFreeStyleArray []LogFortiguardFilterFreeStyleInput

func (LogFortiguardFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortiguardFilterFreeStyle)(nil)).Elem()
}

func (i LogFortiguardFilterFreeStyleArray) ToLogFortiguardFilterFreeStyleArrayOutput() LogFortiguardFilterFreeStyleArrayOutput {
	return i.ToLogFortiguardFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogFortiguardFilterFreeStyleArray) ToLogFortiguardFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogFortiguardFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardFilterFreeStyleArrayOutput)
}

func (i LogFortiguardFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogFortiguardFilterFreeStyle] {
	return pulumix.Output[[]LogFortiguardFilterFreeStyle]{
		OutputState: i.ToLogFortiguardFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogFortiguardFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogFortiguardFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortiguardFilterFreeStyle)(nil)).Elem()
}

func (o LogFortiguardFilterFreeStyleOutput) ToLogFortiguardFilterFreeStyleOutput() LogFortiguardFilterFreeStyleOutput {
	return o
}

func (o LogFortiguardFilterFreeStyleOutput) ToLogFortiguardFilterFreeStyleOutputWithContext(ctx context.Context) LogFortiguardFilterFreeStyleOutput {
	return o
}

func (o LogFortiguardFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogFortiguardFilterFreeStyle] {
	return pulumix.Output[LogFortiguardFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogFortiguardFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogFortiguardFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogFortiguardFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogFortiguardFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortiguardFilterFreeStyle)(nil)).Elem()
}

func (o LogFortiguardFilterFreeStyleArrayOutput) ToLogFortiguardFilterFreeStyleArrayOutput() LogFortiguardFilterFreeStyleArrayOutput {
	return o
}

func (o LogFortiguardFilterFreeStyleArrayOutput) ToLogFortiguardFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogFortiguardFilterFreeStyleArrayOutput {
	return o
}

func (o LogFortiguardFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogFortiguardFilterFreeStyle] {
	return pulumix.Output[[]LogFortiguardFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogFortiguardFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogFortiguardFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogFortiguardFilterFreeStyle {
		return vs[0].([]LogFortiguardFilterFreeStyle)[vs[1].(int)]
	}).(LogFortiguardFilterFreeStyleOutput)
}

type LogFortiguardOverrideFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogFortiguardOverrideFilterFreeStyleInput is an input type that accepts LogFortiguardOverrideFilterFreeStyleArgs and LogFortiguardOverrideFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogFortiguardOverrideFilterFreeStyleInput` via:
//
//	LogFortiguardOverrideFilterFreeStyleArgs{...}
type LogFortiguardOverrideFilterFreeStyleInput interface {
	pulumi.Input

	ToLogFortiguardOverrideFilterFreeStyleOutput() LogFortiguardOverrideFilterFreeStyleOutput
	ToLogFortiguardOverrideFilterFreeStyleOutputWithContext(context.Context) LogFortiguardOverrideFilterFreeStyleOutput
}

type LogFortiguardOverrideFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogFortiguardOverrideFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortiguardOverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogFortiguardOverrideFilterFreeStyleArgs) ToLogFortiguardOverrideFilterFreeStyleOutput() LogFortiguardOverrideFilterFreeStyleOutput {
	return i.ToLogFortiguardOverrideFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogFortiguardOverrideFilterFreeStyleArgs) ToLogFortiguardOverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogFortiguardOverrideFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardOverrideFilterFreeStyleOutput)
}

func (i LogFortiguardOverrideFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogFortiguardOverrideFilterFreeStyle] {
	return pulumix.Output[LogFortiguardOverrideFilterFreeStyle]{
		OutputState: i.ToLogFortiguardOverrideFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogFortiguardOverrideFilterFreeStyleArrayInput is an input type that accepts LogFortiguardOverrideFilterFreeStyleArray and LogFortiguardOverrideFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogFortiguardOverrideFilterFreeStyleArrayInput` via:
//
//	LogFortiguardOverrideFilterFreeStyleArray{ LogFortiguardOverrideFilterFreeStyleArgs{...} }
type LogFortiguardOverrideFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogFortiguardOverrideFilterFreeStyleArrayOutput() LogFortiguardOverrideFilterFreeStyleArrayOutput
	ToLogFortiguardOverrideFilterFreeStyleArrayOutputWithContext(context.Context) LogFortiguardOverrideFilterFreeStyleArrayOutput
}

type LogFortiguardOverrideFilterFreeStyleArray []LogFortiguardOverrideFilterFreeStyleInput

func (LogFortiguardOverrideFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortiguardOverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogFortiguardOverrideFilterFreeStyleArray) ToLogFortiguardOverrideFilterFreeStyleArrayOutput() LogFortiguardOverrideFilterFreeStyleArrayOutput {
	return i.ToLogFortiguardOverrideFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogFortiguardOverrideFilterFreeStyleArray) ToLogFortiguardOverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogFortiguardOverrideFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortiguardOverrideFilterFreeStyleArrayOutput)
}

func (i LogFortiguardOverrideFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogFortiguardOverrideFilterFreeStyle] {
	return pulumix.Output[[]LogFortiguardOverrideFilterFreeStyle]{
		OutputState: i.ToLogFortiguardOverrideFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogFortiguardOverrideFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogFortiguardOverrideFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogFortiguardOverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) ToLogFortiguardOverrideFilterFreeStyleOutput() LogFortiguardOverrideFilterFreeStyleOutput {
	return o
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) ToLogFortiguardOverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogFortiguardOverrideFilterFreeStyleOutput {
	return o
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogFortiguardOverrideFilterFreeStyle] {
	return pulumix.Output[LogFortiguardOverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardOverrideFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardOverrideFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogFortiguardOverrideFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogFortiguardOverrideFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogFortiguardOverrideFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogFortiguardOverrideFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogFortiguardOverrideFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogFortiguardOverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogFortiguardOverrideFilterFreeStyleArrayOutput) ToLogFortiguardOverrideFilterFreeStyleArrayOutput() LogFortiguardOverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogFortiguardOverrideFilterFreeStyleArrayOutput) ToLogFortiguardOverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogFortiguardOverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogFortiguardOverrideFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogFortiguardOverrideFilterFreeStyle] {
	return pulumix.Output[[]LogFortiguardOverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogFortiguardOverrideFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogFortiguardOverrideFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogFortiguardOverrideFilterFreeStyle {
		return vs[0].([]LogFortiguardOverrideFilterFreeStyle)[vs[1].(int)]
	}).(LogFortiguardOverrideFilterFreeStyleOutput)
}

type LogMemoryFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogMemoryFilterFreeStyleInput is an input type that accepts LogMemoryFilterFreeStyleArgs and LogMemoryFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogMemoryFilterFreeStyleInput` via:
//
//	LogMemoryFilterFreeStyleArgs{...}
type LogMemoryFilterFreeStyleInput interface {
	pulumi.Input

	ToLogMemoryFilterFreeStyleOutput() LogMemoryFilterFreeStyleOutput
	ToLogMemoryFilterFreeStyleOutputWithContext(context.Context) LogMemoryFilterFreeStyleOutput
}

type LogMemoryFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogMemoryFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogMemoryFilterFreeStyle)(nil)).Elem()
}

func (i LogMemoryFilterFreeStyleArgs) ToLogMemoryFilterFreeStyleOutput() LogMemoryFilterFreeStyleOutput {
	return i.ToLogMemoryFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogMemoryFilterFreeStyleArgs) ToLogMemoryFilterFreeStyleOutputWithContext(ctx context.Context) LogMemoryFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMemoryFilterFreeStyleOutput)
}

func (i LogMemoryFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogMemoryFilterFreeStyle] {
	return pulumix.Output[LogMemoryFilterFreeStyle]{
		OutputState: i.ToLogMemoryFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogMemoryFilterFreeStyleArrayInput is an input type that accepts LogMemoryFilterFreeStyleArray and LogMemoryFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogMemoryFilterFreeStyleArrayInput` via:
//
//	LogMemoryFilterFreeStyleArray{ LogMemoryFilterFreeStyleArgs{...} }
type LogMemoryFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogMemoryFilterFreeStyleArrayOutput() LogMemoryFilterFreeStyleArrayOutput
	ToLogMemoryFilterFreeStyleArrayOutputWithContext(context.Context) LogMemoryFilterFreeStyleArrayOutput
}

type LogMemoryFilterFreeStyleArray []LogMemoryFilterFreeStyleInput

func (LogMemoryFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogMemoryFilterFreeStyle)(nil)).Elem()
}

func (i LogMemoryFilterFreeStyleArray) ToLogMemoryFilterFreeStyleArrayOutput() LogMemoryFilterFreeStyleArrayOutput {
	return i.ToLogMemoryFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogMemoryFilterFreeStyleArray) ToLogMemoryFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogMemoryFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMemoryFilterFreeStyleArrayOutput)
}

func (i LogMemoryFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogMemoryFilterFreeStyle] {
	return pulumix.Output[[]LogMemoryFilterFreeStyle]{
		OutputState: i.ToLogMemoryFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogMemoryFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogMemoryFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogMemoryFilterFreeStyle)(nil)).Elem()
}

func (o LogMemoryFilterFreeStyleOutput) ToLogMemoryFilterFreeStyleOutput() LogMemoryFilterFreeStyleOutput {
	return o
}

func (o LogMemoryFilterFreeStyleOutput) ToLogMemoryFilterFreeStyleOutputWithContext(ctx context.Context) LogMemoryFilterFreeStyleOutput {
	return o
}

func (o LogMemoryFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogMemoryFilterFreeStyle] {
	return pulumix.Output[LogMemoryFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogMemoryFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogMemoryFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogMemoryFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogMemoryFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogMemoryFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogMemoryFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogMemoryFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogMemoryFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogMemoryFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogMemoryFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogMemoryFilterFreeStyle)(nil)).Elem()
}

func (o LogMemoryFilterFreeStyleArrayOutput) ToLogMemoryFilterFreeStyleArrayOutput() LogMemoryFilterFreeStyleArrayOutput {
	return o
}

func (o LogMemoryFilterFreeStyleArrayOutput) ToLogMemoryFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogMemoryFilterFreeStyleArrayOutput {
	return o
}

func (o LogMemoryFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogMemoryFilterFreeStyle] {
	return pulumix.Output[[]LogMemoryFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogMemoryFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogMemoryFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogMemoryFilterFreeStyle {
		return vs[0].([]LogMemoryFilterFreeStyle)[vs[1].(int)]
	}).(LogMemoryFilterFreeStyleOutput)
}

type LogNullDeviceFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogNullDeviceFilterFreeStyleInput is an input type that accepts LogNullDeviceFilterFreeStyleArgs and LogNullDeviceFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogNullDeviceFilterFreeStyleInput` via:
//
//	LogNullDeviceFilterFreeStyleArgs{...}
type LogNullDeviceFilterFreeStyleInput interface {
	pulumi.Input

	ToLogNullDeviceFilterFreeStyleOutput() LogNullDeviceFilterFreeStyleOutput
	ToLogNullDeviceFilterFreeStyleOutputWithContext(context.Context) LogNullDeviceFilterFreeStyleOutput
}

type LogNullDeviceFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogNullDeviceFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogNullDeviceFilterFreeStyle)(nil)).Elem()
}

func (i LogNullDeviceFilterFreeStyleArgs) ToLogNullDeviceFilterFreeStyleOutput() LogNullDeviceFilterFreeStyleOutput {
	return i.ToLogNullDeviceFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogNullDeviceFilterFreeStyleArgs) ToLogNullDeviceFilterFreeStyleOutputWithContext(ctx context.Context) LogNullDeviceFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogNullDeviceFilterFreeStyleOutput)
}

func (i LogNullDeviceFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogNullDeviceFilterFreeStyle] {
	return pulumix.Output[LogNullDeviceFilterFreeStyle]{
		OutputState: i.ToLogNullDeviceFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogNullDeviceFilterFreeStyleArrayInput is an input type that accepts LogNullDeviceFilterFreeStyleArray and LogNullDeviceFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogNullDeviceFilterFreeStyleArrayInput` via:
//
//	LogNullDeviceFilterFreeStyleArray{ LogNullDeviceFilterFreeStyleArgs{...} }
type LogNullDeviceFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogNullDeviceFilterFreeStyleArrayOutput() LogNullDeviceFilterFreeStyleArrayOutput
	ToLogNullDeviceFilterFreeStyleArrayOutputWithContext(context.Context) LogNullDeviceFilterFreeStyleArrayOutput
}

type LogNullDeviceFilterFreeStyleArray []LogNullDeviceFilterFreeStyleInput

func (LogNullDeviceFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogNullDeviceFilterFreeStyle)(nil)).Elem()
}

func (i LogNullDeviceFilterFreeStyleArray) ToLogNullDeviceFilterFreeStyleArrayOutput() LogNullDeviceFilterFreeStyleArrayOutput {
	return i.ToLogNullDeviceFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogNullDeviceFilterFreeStyleArray) ToLogNullDeviceFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogNullDeviceFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogNullDeviceFilterFreeStyleArrayOutput)
}

func (i LogNullDeviceFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogNullDeviceFilterFreeStyle] {
	return pulumix.Output[[]LogNullDeviceFilterFreeStyle]{
		OutputState: i.ToLogNullDeviceFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogNullDeviceFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogNullDeviceFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogNullDeviceFilterFreeStyle)(nil)).Elem()
}

func (o LogNullDeviceFilterFreeStyleOutput) ToLogNullDeviceFilterFreeStyleOutput() LogNullDeviceFilterFreeStyleOutput {
	return o
}

func (o LogNullDeviceFilterFreeStyleOutput) ToLogNullDeviceFilterFreeStyleOutputWithContext(ctx context.Context) LogNullDeviceFilterFreeStyleOutput {
	return o
}

func (o LogNullDeviceFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogNullDeviceFilterFreeStyle] {
	return pulumix.Output[LogNullDeviceFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogNullDeviceFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogNullDeviceFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogNullDeviceFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogNullDeviceFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogNullDeviceFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogNullDeviceFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogNullDeviceFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogNullDeviceFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogNullDeviceFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogNullDeviceFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogNullDeviceFilterFreeStyle)(nil)).Elem()
}

func (o LogNullDeviceFilterFreeStyleArrayOutput) ToLogNullDeviceFilterFreeStyleArrayOutput() LogNullDeviceFilterFreeStyleArrayOutput {
	return o
}

func (o LogNullDeviceFilterFreeStyleArrayOutput) ToLogNullDeviceFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogNullDeviceFilterFreeStyleArrayOutput {
	return o
}

func (o LogNullDeviceFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogNullDeviceFilterFreeStyle] {
	return pulumix.Output[[]LogNullDeviceFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogNullDeviceFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogNullDeviceFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogNullDeviceFilterFreeStyle {
		return vs[0].([]LogNullDeviceFilterFreeStyle)[vs[1].(int)]
	}).(LogNullDeviceFilterFreeStyleOutput)
}

type LogSettingCustomLogField struct {
	FieldId *string `pulumi:"fieldId"`
}

// LogSettingCustomLogFieldInput is an input type that accepts LogSettingCustomLogFieldArgs and LogSettingCustomLogFieldOutput values.
// You can construct a concrete instance of `LogSettingCustomLogFieldInput` via:
//
//	LogSettingCustomLogFieldArgs{...}
type LogSettingCustomLogFieldInput interface {
	pulumi.Input

	ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput
	ToLogSettingCustomLogFieldOutputWithContext(context.Context) LogSettingCustomLogFieldOutput
}

type LogSettingCustomLogFieldArgs struct {
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (LogSettingCustomLogFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSettingCustomLogField)(nil)).Elem()
}

func (i LogSettingCustomLogFieldArgs) ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput {
	return i.ToLogSettingCustomLogFieldOutputWithContext(context.Background())
}

func (i LogSettingCustomLogFieldArgs) ToLogSettingCustomLogFieldOutputWithContext(ctx context.Context) LogSettingCustomLogFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingCustomLogFieldOutput)
}

func (i LogSettingCustomLogFieldArgs) ToOutput(ctx context.Context) pulumix.Output[LogSettingCustomLogField] {
	return pulumix.Output[LogSettingCustomLogField]{
		OutputState: i.ToLogSettingCustomLogFieldOutputWithContext(ctx).OutputState,
	}
}

// LogSettingCustomLogFieldArrayInput is an input type that accepts LogSettingCustomLogFieldArray and LogSettingCustomLogFieldArrayOutput values.
// You can construct a concrete instance of `LogSettingCustomLogFieldArrayInput` via:
//
//	LogSettingCustomLogFieldArray{ LogSettingCustomLogFieldArgs{...} }
type LogSettingCustomLogFieldArrayInput interface {
	pulumi.Input

	ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput
	ToLogSettingCustomLogFieldArrayOutputWithContext(context.Context) LogSettingCustomLogFieldArrayOutput
}

type LogSettingCustomLogFieldArray []LogSettingCustomLogFieldInput

func (LogSettingCustomLogFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSettingCustomLogField)(nil)).Elem()
}

func (i LogSettingCustomLogFieldArray) ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput {
	return i.ToLogSettingCustomLogFieldArrayOutputWithContext(context.Background())
}

func (i LogSettingCustomLogFieldArray) ToLogSettingCustomLogFieldArrayOutputWithContext(ctx context.Context) LogSettingCustomLogFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSettingCustomLogFieldArrayOutput)
}

func (i LogSettingCustomLogFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSettingCustomLogField] {
	return pulumix.Output[[]LogSettingCustomLogField]{
		OutputState: i.ToLogSettingCustomLogFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSettingCustomLogFieldOutput struct{ *pulumi.OutputState }

func (LogSettingCustomLogFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSettingCustomLogField)(nil)).Elem()
}

func (o LogSettingCustomLogFieldOutput) ToLogSettingCustomLogFieldOutput() LogSettingCustomLogFieldOutput {
	return o
}

func (o LogSettingCustomLogFieldOutput) ToLogSettingCustomLogFieldOutputWithContext(ctx context.Context) LogSettingCustomLogFieldOutput {
	return o
}

func (o LogSettingCustomLogFieldOutput) ToOutput(ctx context.Context) pulumix.Output[LogSettingCustomLogField] {
	return pulumix.Output[LogSettingCustomLogField]{
		OutputState: o.OutputState,
	}
}

func (o LogSettingCustomLogFieldOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSettingCustomLogField) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type LogSettingCustomLogFieldArrayOutput struct{ *pulumi.OutputState }

func (LogSettingCustomLogFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSettingCustomLogField)(nil)).Elem()
}

func (o LogSettingCustomLogFieldArrayOutput) ToLogSettingCustomLogFieldArrayOutput() LogSettingCustomLogFieldArrayOutput {
	return o
}

func (o LogSettingCustomLogFieldArrayOutput) ToLogSettingCustomLogFieldArrayOutputWithContext(ctx context.Context) LogSettingCustomLogFieldArrayOutput {
	return o
}

func (o LogSettingCustomLogFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSettingCustomLogField] {
	return pulumix.Output[[]LogSettingCustomLogField]{
		OutputState: o.OutputState,
	}
}

func (o LogSettingCustomLogFieldArrayOutput) Index(i pulumi.IntInput) LogSettingCustomLogFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSettingCustomLogField {
		return vs[0].([]LogSettingCustomLogField)[vs[1].(int)]
	}).(LogSettingCustomLogFieldOutput)
}

type LogSyslogd2FilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd2FilterFreeStyleInput is an input type that accepts LogSyslogd2FilterFreeStyleArgs and LogSyslogd2FilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd2FilterFreeStyleInput` via:
//
//	LogSyslogd2FilterFreeStyleArgs{...}
type LogSyslogd2FilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd2FilterFreeStyleOutput() LogSyslogd2FilterFreeStyleOutput
	ToLogSyslogd2FilterFreeStyleOutputWithContext(context.Context) LogSyslogd2FilterFreeStyleOutput
}

type LogSyslogd2FilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd2FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd2FilterFreeStyleArgs) ToLogSyslogd2FilterFreeStyleOutput() LogSyslogd2FilterFreeStyleOutput {
	return i.ToLogSyslogd2FilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd2FilterFreeStyleArgs) ToLogSyslogd2FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd2FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2FilterFreeStyleOutput)
}

func (i LogSyslogd2FilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2FilterFreeStyle] {
	return pulumix.Output[LogSyslogd2FilterFreeStyle]{
		OutputState: i.ToLogSyslogd2FilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2FilterFreeStyleArrayInput is an input type that accepts LogSyslogd2FilterFreeStyleArray and LogSyslogd2FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd2FilterFreeStyleArrayInput` via:
//
//	LogSyslogd2FilterFreeStyleArray{ LogSyslogd2FilterFreeStyleArgs{...} }
type LogSyslogd2FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd2FilterFreeStyleArrayOutput() LogSyslogd2FilterFreeStyleArrayOutput
	ToLogSyslogd2FilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd2FilterFreeStyleArrayOutput
}

type LogSyslogd2FilterFreeStyleArray []LogSyslogd2FilterFreeStyleInput

func (LogSyslogd2FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd2FilterFreeStyleArray) ToLogSyslogd2FilterFreeStyleArrayOutput() LogSyslogd2FilterFreeStyleArrayOutput {
	return i.ToLogSyslogd2FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd2FilterFreeStyleArray) ToLogSyslogd2FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd2FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2FilterFreeStyleArrayOutput)
}

func (i LogSyslogd2FilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd2FilterFreeStyle]{
		OutputState: i.ToLogSyslogd2FilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd2FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd2FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd2FilterFreeStyleOutput) ToLogSyslogd2FilterFreeStyleOutput() LogSyslogd2FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd2FilterFreeStyleOutput) ToLogSyslogd2FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd2FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd2FilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2FilterFreeStyle] {
	return pulumix.Output[LogSyslogd2FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd2FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd2FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd2FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd2FilterFreeStyleArrayOutput) ToLogSyslogd2FilterFreeStyleArrayOutput() LogSyslogd2FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd2FilterFreeStyleArrayOutput) ToLogSyslogd2FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd2FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd2FilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd2FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd2FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd2FilterFreeStyle {
		return vs[0].([]LogSyslogd2FilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd2FilterFreeStyleOutput)
}

type LogSyslogd2OverrideFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd2OverrideFilterFreeStyleInput is an input type that accepts LogSyslogd2OverrideFilterFreeStyleArgs and LogSyslogd2OverrideFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideFilterFreeStyleInput` via:
//
//	LogSyslogd2OverrideFilterFreeStyleArgs{...}
type LogSyslogd2OverrideFilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideFilterFreeStyleOutput() LogSyslogd2OverrideFilterFreeStyleOutput
	ToLogSyslogd2OverrideFilterFreeStyleOutputWithContext(context.Context) LogSyslogd2OverrideFilterFreeStyleOutput
}

type LogSyslogd2OverrideFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd2OverrideFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd2OverrideFilterFreeStyleArgs) ToLogSyslogd2OverrideFilterFreeStyleOutput() LogSyslogd2OverrideFilterFreeStyleOutput {
	return i.ToLogSyslogd2OverrideFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideFilterFreeStyleArgs) ToLogSyslogd2OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideFilterFreeStyleOutput)
}

func (i LogSyslogd2OverrideFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd2OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd2OverrideFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2OverrideFilterFreeStyleArrayInput is an input type that accepts LogSyslogd2OverrideFilterFreeStyleArray and LogSyslogd2OverrideFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideFilterFreeStyleArrayInput` via:
//
//	LogSyslogd2OverrideFilterFreeStyleArray{ LogSyslogd2OverrideFilterFreeStyleArgs{...} }
type LogSyslogd2OverrideFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideFilterFreeStyleArrayOutput() LogSyslogd2OverrideFilterFreeStyleArrayOutput
	ToLogSyslogd2OverrideFilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd2OverrideFilterFreeStyleArrayOutput
}

type LogSyslogd2OverrideFilterFreeStyleArray []LogSyslogd2OverrideFilterFreeStyleInput

func (LogSyslogd2OverrideFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd2OverrideFilterFreeStyleArray) ToLogSyslogd2OverrideFilterFreeStyleArrayOutput() LogSyslogd2OverrideFilterFreeStyleArrayOutput {
	return i.ToLogSyslogd2OverrideFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideFilterFreeStyleArray) ToLogSyslogd2OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideFilterFreeStyleArrayOutput)
}

func (i LogSyslogd2OverrideFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd2OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd2OverrideFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd2OverrideFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) ToLogSyslogd2OverrideFilterFreeStyleOutput() LogSyslogd2OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) ToLogSyslogd2OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd2OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd2OverrideFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd2OverrideFilterFreeStyleArrayOutput) ToLogSyslogd2OverrideFilterFreeStyleArrayOutput() LogSyslogd2OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd2OverrideFilterFreeStyleArrayOutput) ToLogSyslogd2OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd2OverrideFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd2OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd2OverrideFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd2OverrideFilterFreeStyle {
		return vs[0].([]LogSyslogd2OverrideFilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd2OverrideFilterFreeStyleOutput)
}

type LogSyslogd2OverrideSettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd2OverrideSettingCustomFieldNameInput is an input type that accepts LogSyslogd2OverrideSettingCustomFieldNameArgs and LogSyslogd2OverrideSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideSettingCustomFieldNameInput` via:
//
//	LogSyslogd2OverrideSettingCustomFieldNameArgs{...}
type LogSyslogd2OverrideSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideSettingCustomFieldNameOutput() LogSyslogd2OverrideSettingCustomFieldNameOutput
	ToLogSyslogd2OverrideSettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd2OverrideSettingCustomFieldNameOutput
}

type LogSyslogd2OverrideSettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd2OverrideSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArgs) ToLogSyslogd2OverrideSettingCustomFieldNameOutput() LogSyslogd2OverrideSettingCustomFieldNameOutput {
	return i.ToLogSyslogd2OverrideSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArgs) ToLogSyslogd2OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd2OverrideSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideSettingCustomFieldNameOutput)
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd2OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd2OverrideSettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2OverrideSettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd2OverrideSettingCustomFieldNameArray and LogSyslogd2OverrideSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideSettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd2OverrideSettingCustomFieldNameArray{ LogSyslogd2OverrideSettingCustomFieldNameArgs{...} }
type LogSyslogd2OverrideSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutput() LogSyslogd2OverrideSettingCustomFieldNameArrayOutput
	ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd2OverrideSettingCustomFieldNameArrayOutput
}

type LogSyslogd2OverrideSettingCustomFieldNameArray []LogSyslogd2OverrideSettingCustomFieldNameInput

func (LogSyslogd2OverrideSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArray) ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutput() LogSyslogd2OverrideSettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArray) ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideSettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd2OverrideSettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd2OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd2OverrideSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) ToLogSyslogd2OverrideSettingCustomFieldNameOutput() LogSyslogd2OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) ToLogSyslogd2OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd2OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd2OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd2OverrideSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2OverrideSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd2OverrideSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd2OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutput() LogSyslogd2OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd2OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd2OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd2OverrideSettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd2OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd2OverrideSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd2OverrideSettingCustomFieldName {
		return vs[0].([]LogSyslogd2OverrideSettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd2OverrideSettingCustomFieldNameOutput)
}

type LogSyslogd2SettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd2SettingCustomFieldNameInput is an input type that accepts LogSyslogd2SettingCustomFieldNameArgs and LogSyslogd2SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd2SettingCustomFieldNameInput` via:
//
//	LogSyslogd2SettingCustomFieldNameArgs{...}
type LogSyslogd2SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd2SettingCustomFieldNameOutput() LogSyslogd2SettingCustomFieldNameOutput
	ToLogSyslogd2SettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd2SettingCustomFieldNameOutput
}

type LogSyslogd2SettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd2SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd2SettingCustomFieldNameArgs) ToLogSyslogd2SettingCustomFieldNameOutput() LogSyslogd2SettingCustomFieldNameOutput {
	return i.ToLogSyslogd2SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd2SettingCustomFieldNameArgs) ToLogSyslogd2SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd2SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2SettingCustomFieldNameOutput)
}

func (i LogSyslogd2SettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd2SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd2SettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2SettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd2SettingCustomFieldNameArray and LogSyslogd2SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd2SettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd2SettingCustomFieldNameArray{ LogSyslogd2SettingCustomFieldNameArgs{...} }
type LogSyslogd2SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd2SettingCustomFieldNameArrayOutput() LogSyslogd2SettingCustomFieldNameArrayOutput
	ToLogSyslogd2SettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd2SettingCustomFieldNameArrayOutput
}

type LogSyslogd2SettingCustomFieldNameArray []LogSyslogd2SettingCustomFieldNameInput

func (LogSyslogd2SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd2SettingCustomFieldNameArray) ToLogSyslogd2SettingCustomFieldNameArrayOutput() LogSyslogd2SettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd2SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd2SettingCustomFieldNameArray) ToLogSyslogd2SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd2SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2SettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd2SettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd2SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd2SettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd2SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd2SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd2SettingCustomFieldNameOutput) ToLogSyslogd2SettingCustomFieldNameOutput() LogSyslogd2SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd2SettingCustomFieldNameOutput) ToLogSyslogd2SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd2SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd2SettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd2SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd2SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd2SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd2SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd2SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd2SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd2SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd2SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd2SettingCustomFieldNameArrayOutput) ToLogSyslogd2SettingCustomFieldNameArrayOutput() LogSyslogd2SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd2SettingCustomFieldNameArrayOutput) ToLogSyslogd2SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd2SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd2SettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd2SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd2SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd2SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd2SettingCustomFieldName {
		return vs[0].([]LogSyslogd2SettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd2SettingCustomFieldNameOutput)
}

type LogSyslogd3FilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd3FilterFreeStyleInput is an input type that accepts LogSyslogd3FilterFreeStyleArgs and LogSyslogd3FilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd3FilterFreeStyleInput` via:
//
//	LogSyslogd3FilterFreeStyleArgs{...}
type LogSyslogd3FilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd3FilterFreeStyleOutput() LogSyslogd3FilterFreeStyleOutput
	ToLogSyslogd3FilterFreeStyleOutputWithContext(context.Context) LogSyslogd3FilterFreeStyleOutput
}

type LogSyslogd3FilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd3FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd3FilterFreeStyleArgs) ToLogSyslogd3FilterFreeStyleOutput() LogSyslogd3FilterFreeStyleOutput {
	return i.ToLogSyslogd3FilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd3FilterFreeStyleArgs) ToLogSyslogd3FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd3FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3FilterFreeStyleOutput)
}

func (i LogSyslogd3FilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3FilterFreeStyle] {
	return pulumix.Output[LogSyslogd3FilterFreeStyle]{
		OutputState: i.ToLogSyslogd3FilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd3FilterFreeStyleArrayInput is an input type that accepts LogSyslogd3FilterFreeStyleArray and LogSyslogd3FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3FilterFreeStyleArrayInput` via:
//
//	LogSyslogd3FilterFreeStyleArray{ LogSyslogd3FilterFreeStyleArgs{...} }
type LogSyslogd3FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd3FilterFreeStyleArrayOutput() LogSyslogd3FilterFreeStyleArrayOutput
	ToLogSyslogd3FilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd3FilterFreeStyleArrayOutput
}

type LogSyslogd3FilterFreeStyleArray []LogSyslogd3FilterFreeStyleInput

func (LogSyslogd3FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd3FilterFreeStyleArray) ToLogSyslogd3FilterFreeStyleArrayOutput() LogSyslogd3FilterFreeStyleArrayOutput {
	return i.ToLogSyslogd3FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3FilterFreeStyleArray) ToLogSyslogd3FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd3FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3FilterFreeStyleArrayOutput)
}

func (i LogSyslogd3FilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd3FilterFreeStyle]{
		OutputState: i.ToLogSyslogd3FilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd3FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd3FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd3FilterFreeStyleOutput) ToLogSyslogd3FilterFreeStyleOutput() LogSyslogd3FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd3FilterFreeStyleOutput) ToLogSyslogd3FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd3FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd3FilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3FilterFreeStyle] {
	return pulumix.Output[LogSyslogd3FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd3FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd3FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd3FilterFreeStyleArrayOutput) ToLogSyslogd3FilterFreeStyleArrayOutput() LogSyslogd3FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd3FilterFreeStyleArrayOutput) ToLogSyslogd3FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd3FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd3FilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd3FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd3FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd3FilterFreeStyle {
		return vs[0].([]LogSyslogd3FilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd3FilterFreeStyleOutput)
}

type LogSyslogd3OverrideFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd3OverrideFilterFreeStyleInput is an input type that accepts LogSyslogd3OverrideFilterFreeStyleArgs and LogSyslogd3OverrideFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideFilterFreeStyleInput` via:
//
//	LogSyslogd3OverrideFilterFreeStyleArgs{...}
type LogSyslogd3OverrideFilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideFilterFreeStyleOutput() LogSyslogd3OverrideFilterFreeStyleOutput
	ToLogSyslogd3OverrideFilterFreeStyleOutputWithContext(context.Context) LogSyslogd3OverrideFilterFreeStyleOutput
}

type LogSyslogd3OverrideFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd3OverrideFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd3OverrideFilterFreeStyleArgs) ToLogSyslogd3OverrideFilterFreeStyleOutput() LogSyslogd3OverrideFilterFreeStyleOutput {
	return i.ToLogSyslogd3OverrideFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideFilterFreeStyleArgs) ToLogSyslogd3OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideFilterFreeStyleOutput)
}

func (i LogSyslogd3OverrideFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd3OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd3OverrideFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd3OverrideFilterFreeStyleArrayInput is an input type that accepts LogSyslogd3OverrideFilterFreeStyleArray and LogSyslogd3OverrideFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideFilterFreeStyleArrayInput` via:
//
//	LogSyslogd3OverrideFilterFreeStyleArray{ LogSyslogd3OverrideFilterFreeStyleArgs{...} }
type LogSyslogd3OverrideFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideFilterFreeStyleArrayOutput() LogSyslogd3OverrideFilterFreeStyleArrayOutput
	ToLogSyslogd3OverrideFilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd3OverrideFilterFreeStyleArrayOutput
}

type LogSyslogd3OverrideFilterFreeStyleArray []LogSyslogd3OverrideFilterFreeStyleInput

func (LogSyslogd3OverrideFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd3OverrideFilterFreeStyleArray) ToLogSyslogd3OverrideFilterFreeStyleArrayOutput() LogSyslogd3OverrideFilterFreeStyleArrayOutput {
	return i.ToLogSyslogd3OverrideFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideFilterFreeStyleArray) ToLogSyslogd3OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideFilterFreeStyleArrayOutput)
}

func (i LogSyslogd3OverrideFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd3OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd3OverrideFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd3OverrideFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) ToLogSyslogd3OverrideFilterFreeStyleOutput() LogSyslogd3OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) ToLogSyslogd3OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd3OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3OverrideFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd3OverrideFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd3OverrideFilterFreeStyleArrayOutput) ToLogSyslogd3OverrideFilterFreeStyleArrayOutput() LogSyslogd3OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd3OverrideFilterFreeStyleArrayOutput) ToLogSyslogd3OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd3OverrideFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd3OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3OverrideFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd3OverrideFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd3OverrideFilterFreeStyle {
		return vs[0].([]LogSyslogd3OverrideFilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd3OverrideFilterFreeStyleOutput)
}

type LogSyslogd3OverrideSettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd3OverrideSettingCustomFieldNameInput is an input type that accepts LogSyslogd3OverrideSettingCustomFieldNameArgs and LogSyslogd3OverrideSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideSettingCustomFieldNameInput` via:
//
//	LogSyslogd3OverrideSettingCustomFieldNameArgs{...}
type LogSyslogd3OverrideSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideSettingCustomFieldNameOutput() LogSyslogd3OverrideSettingCustomFieldNameOutput
	ToLogSyslogd3OverrideSettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd3OverrideSettingCustomFieldNameOutput
}

type LogSyslogd3OverrideSettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd3OverrideSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArgs) ToLogSyslogd3OverrideSettingCustomFieldNameOutput() LogSyslogd3OverrideSettingCustomFieldNameOutput {
	return i.ToLogSyslogd3OverrideSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArgs) ToLogSyslogd3OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd3OverrideSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideSettingCustomFieldNameOutput)
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd3OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd3OverrideSettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd3OverrideSettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd3OverrideSettingCustomFieldNameArray and LogSyslogd3OverrideSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideSettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd3OverrideSettingCustomFieldNameArray{ LogSyslogd3OverrideSettingCustomFieldNameArgs{...} }
type LogSyslogd3OverrideSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutput() LogSyslogd3OverrideSettingCustomFieldNameArrayOutput
	ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd3OverrideSettingCustomFieldNameArrayOutput
}

type LogSyslogd3OverrideSettingCustomFieldNameArray []LogSyslogd3OverrideSettingCustomFieldNameInput

func (LogSyslogd3OverrideSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArray) ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutput() LogSyslogd3OverrideSettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArray) ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideSettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd3OverrideSettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd3OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd3OverrideSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) ToLogSyslogd3OverrideSettingCustomFieldNameOutput() LogSyslogd3OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) ToLogSyslogd3OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd3OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd3OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd3OverrideSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3OverrideSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd3OverrideSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd3OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutput() LogSyslogd3OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd3OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd3OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd3OverrideSettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd3OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3OverrideSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd3OverrideSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd3OverrideSettingCustomFieldName {
		return vs[0].([]LogSyslogd3OverrideSettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd3OverrideSettingCustomFieldNameOutput)
}

type LogSyslogd3SettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd3SettingCustomFieldNameInput is an input type that accepts LogSyslogd3SettingCustomFieldNameArgs and LogSyslogd3SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd3SettingCustomFieldNameInput` via:
//
//	LogSyslogd3SettingCustomFieldNameArgs{...}
type LogSyslogd3SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd3SettingCustomFieldNameOutput() LogSyslogd3SettingCustomFieldNameOutput
	ToLogSyslogd3SettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd3SettingCustomFieldNameOutput
}

type LogSyslogd3SettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd3SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd3SettingCustomFieldNameArgs) ToLogSyslogd3SettingCustomFieldNameOutput() LogSyslogd3SettingCustomFieldNameOutput {
	return i.ToLogSyslogd3SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd3SettingCustomFieldNameArgs) ToLogSyslogd3SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd3SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3SettingCustomFieldNameOutput)
}

func (i LogSyslogd3SettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd3SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd3SettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd3SettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd3SettingCustomFieldNameArray and LogSyslogd3SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3SettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd3SettingCustomFieldNameArray{ LogSyslogd3SettingCustomFieldNameArgs{...} }
type LogSyslogd3SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd3SettingCustomFieldNameArrayOutput() LogSyslogd3SettingCustomFieldNameArrayOutput
	ToLogSyslogd3SettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd3SettingCustomFieldNameArrayOutput
}

type LogSyslogd3SettingCustomFieldNameArray []LogSyslogd3SettingCustomFieldNameInput

func (LogSyslogd3SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd3SettingCustomFieldNameArray) ToLogSyslogd3SettingCustomFieldNameArrayOutput() LogSyslogd3SettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd3SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3SettingCustomFieldNameArray) ToLogSyslogd3SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd3SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3SettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd3SettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd3SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd3SettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd3SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd3SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd3SettingCustomFieldNameOutput) ToLogSyslogd3SettingCustomFieldNameOutput() LogSyslogd3SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd3SettingCustomFieldNameOutput) ToLogSyslogd3SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd3SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd3SettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd3SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd3SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd3SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd3SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd3SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd3SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd3SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd3SettingCustomFieldNameArrayOutput) ToLogSyslogd3SettingCustomFieldNameArrayOutput() LogSyslogd3SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd3SettingCustomFieldNameArrayOutput) ToLogSyslogd3SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd3SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd3SettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd3SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd3SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd3SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd3SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd3SettingCustomFieldName {
		return vs[0].([]LogSyslogd3SettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd3SettingCustomFieldNameOutput)
}

type LogSyslogd4FilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd4FilterFreeStyleInput is an input type that accepts LogSyslogd4FilterFreeStyleArgs and LogSyslogd4FilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd4FilterFreeStyleInput` via:
//
//	LogSyslogd4FilterFreeStyleArgs{...}
type LogSyslogd4FilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd4FilterFreeStyleOutput() LogSyslogd4FilterFreeStyleOutput
	ToLogSyslogd4FilterFreeStyleOutputWithContext(context.Context) LogSyslogd4FilterFreeStyleOutput
}

type LogSyslogd4FilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd4FilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd4FilterFreeStyleArgs) ToLogSyslogd4FilterFreeStyleOutput() LogSyslogd4FilterFreeStyleOutput {
	return i.ToLogSyslogd4FilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd4FilterFreeStyleArgs) ToLogSyslogd4FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd4FilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4FilterFreeStyleOutput)
}

func (i LogSyslogd4FilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4FilterFreeStyle] {
	return pulumix.Output[LogSyslogd4FilterFreeStyle]{
		OutputState: i.ToLogSyslogd4FilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd4FilterFreeStyleArrayInput is an input type that accepts LogSyslogd4FilterFreeStyleArray and LogSyslogd4FilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd4FilterFreeStyleArrayInput` via:
//
//	LogSyslogd4FilterFreeStyleArray{ LogSyslogd4FilterFreeStyleArgs{...} }
type LogSyslogd4FilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd4FilterFreeStyleArrayOutput() LogSyslogd4FilterFreeStyleArrayOutput
	ToLogSyslogd4FilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd4FilterFreeStyleArrayOutput
}

type LogSyslogd4FilterFreeStyleArray []LogSyslogd4FilterFreeStyleInput

func (LogSyslogd4FilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4FilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd4FilterFreeStyleArray) ToLogSyslogd4FilterFreeStyleArrayOutput() LogSyslogd4FilterFreeStyleArrayOutput {
	return i.ToLogSyslogd4FilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd4FilterFreeStyleArray) ToLogSyslogd4FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd4FilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4FilterFreeStyleArrayOutput)
}

func (i LogSyslogd4FilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd4FilterFreeStyle]{
		OutputState: i.ToLogSyslogd4FilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd4FilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd4FilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd4FilterFreeStyleOutput) ToLogSyslogd4FilterFreeStyleOutput() LogSyslogd4FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd4FilterFreeStyleOutput) ToLogSyslogd4FilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd4FilterFreeStyleOutput {
	return o
}

func (o LogSyslogd4FilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4FilterFreeStyle] {
	return pulumix.Output[LogSyslogd4FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4FilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4FilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4FilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4FilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4FilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4FilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4FilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd4FilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd4FilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd4FilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4FilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd4FilterFreeStyleArrayOutput) ToLogSyslogd4FilterFreeStyleArrayOutput() LogSyslogd4FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd4FilterFreeStyleArrayOutput) ToLogSyslogd4FilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd4FilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd4FilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4FilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd4FilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4FilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd4FilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd4FilterFreeStyle {
		return vs[0].([]LogSyslogd4FilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd4FilterFreeStyleOutput)
}

type LogSyslogd4OverrideFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogd4OverrideFilterFreeStyleInput is an input type that accepts LogSyslogd4OverrideFilterFreeStyleArgs and LogSyslogd4OverrideFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideFilterFreeStyleInput` via:
//
//	LogSyslogd4OverrideFilterFreeStyleArgs{...}
type LogSyslogd4OverrideFilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideFilterFreeStyleOutput() LogSyslogd4OverrideFilterFreeStyleOutput
	ToLogSyslogd4OverrideFilterFreeStyleOutputWithContext(context.Context) LogSyslogd4OverrideFilterFreeStyleOutput
}

type LogSyslogd4OverrideFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogd4OverrideFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd4OverrideFilterFreeStyleArgs) ToLogSyslogd4OverrideFilterFreeStyleOutput() LogSyslogd4OverrideFilterFreeStyleOutput {
	return i.ToLogSyslogd4OverrideFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideFilterFreeStyleArgs) ToLogSyslogd4OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideFilterFreeStyleOutput)
}

func (i LogSyslogd4OverrideFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd4OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd4OverrideFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd4OverrideFilterFreeStyleArrayInput is an input type that accepts LogSyslogd4OverrideFilterFreeStyleArray and LogSyslogd4OverrideFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideFilterFreeStyleArrayInput` via:
//
//	LogSyslogd4OverrideFilterFreeStyleArray{ LogSyslogd4OverrideFilterFreeStyleArgs{...} }
type LogSyslogd4OverrideFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideFilterFreeStyleArrayOutput() LogSyslogd4OverrideFilterFreeStyleArrayOutput
	ToLogSyslogd4OverrideFilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogd4OverrideFilterFreeStyleArrayOutput
}

type LogSyslogd4OverrideFilterFreeStyleArray []LogSyslogd4OverrideFilterFreeStyleInput

func (LogSyslogd4OverrideFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4OverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogd4OverrideFilterFreeStyleArray) ToLogSyslogd4OverrideFilterFreeStyleArrayOutput() LogSyslogd4OverrideFilterFreeStyleArrayOutput {
	return i.ToLogSyslogd4OverrideFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideFilterFreeStyleArray) ToLogSyslogd4OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideFilterFreeStyleArrayOutput)
}

func (i LogSyslogd4OverrideFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd4OverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogd4OverrideFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd4OverrideFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) ToLogSyslogd4OverrideFilterFreeStyleOutput() LogSyslogd4OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) ToLogSyslogd4OverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4OverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogd4OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogd4OverrideFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4OverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogd4OverrideFilterFreeStyleArrayOutput) ToLogSyslogd4OverrideFilterFreeStyleArrayOutput() LogSyslogd4OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd4OverrideFilterFreeStyleArrayOutput) ToLogSyslogd4OverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogd4OverrideFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4OverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogd4OverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4OverrideFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogd4OverrideFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd4OverrideFilterFreeStyle {
		return vs[0].([]LogSyslogd4OverrideFilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogd4OverrideFilterFreeStyleOutput)
}

type LogSyslogd4OverrideSettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd4OverrideSettingCustomFieldNameInput is an input type that accepts LogSyslogd4OverrideSettingCustomFieldNameArgs and LogSyslogd4OverrideSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideSettingCustomFieldNameInput` via:
//
//	LogSyslogd4OverrideSettingCustomFieldNameArgs{...}
type LogSyslogd4OverrideSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideSettingCustomFieldNameOutput() LogSyslogd4OverrideSettingCustomFieldNameOutput
	ToLogSyslogd4OverrideSettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd4OverrideSettingCustomFieldNameOutput
}

type LogSyslogd4OverrideSettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd4OverrideSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArgs) ToLogSyslogd4OverrideSettingCustomFieldNameOutput() LogSyslogd4OverrideSettingCustomFieldNameOutput {
	return i.ToLogSyslogd4OverrideSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArgs) ToLogSyslogd4OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd4OverrideSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideSettingCustomFieldNameOutput)
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd4OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd4OverrideSettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd4OverrideSettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd4OverrideSettingCustomFieldNameArray and LogSyslogd4OverrideSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideSettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd4OverrideSettingCustomFieldNameArray{ LogSyslogd4OverrideSettingCustomFieldNameArgs{...} }
type LogSyslogd4OverrideSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutput() LogSyslogd4OverrideSettingCustomFieldNameArrayOutput
	ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd4OverrideSettingCustomFieldNameArrayOutput
}

type LogSyslogd4OverrideSettingCustomFieldNameArray []LogSyslogd4OverrideSettingCustomFieldNameInput

func (LogSyslogd4OverrideSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4OverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArray) ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutput() LogSyslogd4OverrideSettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArray) ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideSettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd4OverrideSettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd4OverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd4OverrideSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) ToLogSyslogd4OverrideSettingCustomFieldNameOutput() LogSyslogd4OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) ToLogSyslogd4OverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd4OverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4OverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogd4OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd4OverrideSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4OverrideSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd4OverrideSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4OverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd4OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutput() LogSyslogd4OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd4OverrideSettingCustomFieldNameArrayOutput) ToLogSyslogd4OverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd4OverrideSettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4OverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd4OverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4OverrideSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd4OverrideSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd4OverrideSettingCustomFieldName {
		return vs[0].([]LogSyslogd4OverrideSettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd4OverrideSettingCustomFieldNameOutput)
}

type LogSyslogd4SettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogd4SettingCustomFieldNameInput is an input type that accepts LogSyslogd4SettingCustomFieldNameArgs and LogSyslogd4SettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogd4SettingCustomFieldNameInput` via:
//
//	LogSyslogd4SettingCustomFieldNameArgs{...}
type LogSyslogd4SettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogd4SettingCustomFieldNameOutput() LogSyslogd4SettingCustomFieldNameOutput
	ToLogSyslogd4SettingCustomFieldNameOutputWithContext(context.Context) LogSyslogd4SettingCustomFieldNameOutput
}

type LogSyslogd4SettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogd4SettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd4SettingCustomFieldNameArgs) ToLogSyslogd4SettingCustomFieldNameOutput() LogSyslogd4SettingCustomFieldNameOutput {
	return i.ToLogSyslogd4SettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogd4SettingCustomFieldNameArgs) ToLogSyslogd4SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd4SettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4SettingCustomFieldNameOutput)
}

func (i LogSyslogd4SettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd4SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd4SettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd4SettingCustomFieldNameArrayInput is an input type that accepts LogSyslogd4SettingCustomFieldNameArray and LogSyslogd4SettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogd4SettingCustomFieldNameArrayInput` via:
//
//	LogSyslogd4SettingCustomFieldNameArray{ LogSyslogd4SettingCustomFieldNameArgs{...} }
type LogSyslogd4SettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogd4SettingCustomFieldNameArrayOutput() LogSyslogd4SettingCustomFieldNameArrayOutput
	ToLogSyslogd4SettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogd4SettingCustomFieldNameArrayOutput
}

type LogSyslogd4SettingCustomFieldNameArray []LogSyslogd4SettingCustomFieldNameInput

func (LogSyslogd4SettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogd4SettingCustomFieldNameArray) ToLogSyslogd4SettingCustomFieldNameArrayOutput() LogSyslogd4SettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogd4SettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogd4SettingCustomFieldNameArray) ToLogSyslogd4SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd4SettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4SettingCustomFieldNameArrayOutput)
}

func (i LogSyslogd4SettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd4SettingCustomFieldName]{
		OutputState: i.ToLogSyslogd4SettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd4SettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogd4SettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd4SettingCustomFieldNameOutput) ToLogSyslogd4SettingCustomFieldNameOutput() LogSyslogd4SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd4SettingCustomFieldNameOutput) ToLogSyslogd4SettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogd4SettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogd4SettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogd4SettingCustomFieldName] {
	return pulumix.Output[LogSyslogd4SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4SettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4SettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4SettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogd4SettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogd4SettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogd4SettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogd4SettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd4SettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogd4SettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogd4SettingCustomFieldNameArrayOutput) ToLogSyslogd4SettingCustomFieldNameArrayOutput() LogSyslogd4SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd4SettingCustomFieldNameArrayOutput) ToLogSyslogd4SettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogd4SettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogd4SettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogd4SettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogd4SettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd4SettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogd4SettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogd4SettingCustomFieldName {
		return vs[0].([]LogSyslogd4SettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogd4SettingCustomFieldNameOutput)
}

type LogSyslogdFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogdFilterFreeStyleInput is an input type that accepts LogSyslogdFilterFreeStyleArgs and LogSyslogdFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogdFilterFreeStyleInput` via:
//
//	LogSyslogdFilterFreeStyleArgs{...}
type LogSyslogdFilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogdFilterFreeStyleOutput() LogSyslogdFilterFreeStyleOutput
	ToLogSyslogdFilterFreeStyleOutputWithContext(context.Context) LogSyslogdFilterFreeStyleOutput
}

type LogSyslogdFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogdFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogdFilterFreeStyleArgs) ToLogSyslogdFilterFreeStyleOutput() LogSyslogdFilterFreeStyleOutput {
	return i.ToLogSyslogdFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogdFilterFreeStyleArgs) ToLogSyslogdFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogdFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdFilterFreeStyleOutput)
}

func (i LogSyslogdFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdFilterFreeStyle] {
	return pulumix.Output[LogSyslogdFilterFreeStyle]{
		OutputState: i.ToLogSyslogdFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogdFilterFreeStyleArrayInput is an input type that accepts LogSyslogdFilterFreeStyleArray and LogSyslogdFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogdFilterFreeStyleArrayInput` via:
//
//	LogSyslogdFilterFreeStyleArray{ LogSyslogdFilterFreeStyleArgs{...} }
type LogSyslogdFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogdFilterFreeStyleArrayOutput() LogSyslogdFilterFreeStyleArrayOutput
	ToLogSyslogdFilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogdFilterFreeStyleArrayOutput
}

type LogSyslogdFilterFreeStyleArray []LogSyslogdFilterFreeStyleInput

func (LogSyslogdFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogdFilterFreeStyleArray) ToLogSyslogdFilterFreeStyleArrayOutput() LogSyslogdFilterFreeStyleArrayOutput {
	return i.ToLogSyslogdFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogdFilterFreeStyleArray) ToLogSyslogdFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogdFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdFilterFreeStyleArrayOutput)
}

func (i LogSyslogdFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogdFilterFreeStyle]{
		OutputState: i.ToLogSyslogdFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogdFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogdFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogdFilterFreeStyleOutput) ToLogSyslogdFilterFreeStyleOutput() LogSyslogdFilterFreeStyleOutput {
	return o
}

func (o LogSyslogdFilterFreeStyleOutput) ToLogSyslogdFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogdFilterFreeStyleOutput {
	return o
}

func (o LogSyslogdFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdFilterFreeStyle] {
	return pulumix.Output[LogSyslogdFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogdFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogdFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogdFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogdFilterFreeStyleArrayOutput) ToLogSyslogdFilterFreeStyleArrayOutput() LogSyslogdFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogdFilterFreeStyleArrayOutput) ToLogSyslogdFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogdFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogdFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogdFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogdFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogdFilterFreeStyle {
		return vs[0].([]LogSyslogdFilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogdFilterFreeStyleOutput)
}

type LogSyslogdOverrideFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogSyslogdOverrideFilterFreeStyleInput is an input type that accepts LogSyslogdOverrideFilterFreeStyleArgs and LogSyslogdOverrideFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogSyslogdOverrideFilterFreeStyleInput` via:
//
//	LogSyslogdOverrideFilterFreeStyleArgs{...}
type LogSyslogdOverrideFilterFreeStyleInput interface {
	pulumi.Input

	ToLogSyslogdOverrideFilterFreeStyleOutput() LogSyslogdOverrideFilterFreeStyleOutput
	ToLogSyslogdOverrideFilterFreeStyleOutputWithContext(context.Context) LogSyslogdOverrideFilterFreeStyleOutput
}

type LogSyslogdOverrideFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogSyslogdOverrideFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdOverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogdOverrideFilterFreeStyleArgs) ToLogSyslogdOverrideFilterFreeStyleOutput() LogSyslogdOverrideFilterFreeStyleOutput {
	return i.ToLogSyslogdOverrideFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogSyslogdOverrideFilterFreeStyleArgs) ToLogSyslogdOverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogdOverrideFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdOverrideFilterFreeStyleOutput)
}

func (i LogSyslogdOverrideFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdOverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogdOverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogdOverrideFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogdOverrideFilterFreeStyleArrayInput is an input type that accepts LogSyslogdOverrideFilterFreeStyleArray and LogSyslogdOverrideFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogSyslogdOverrideFilterFreeStyleArrayInput` via:
//
//	LogSyslogdOverrideFilterFreeStyleArray{ LogSyslogdOverrideFilterFreeStyleArgs{...} }
type LogSyslogdOverrideFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogSyslogdOverrideFilterFreeStyleArrayOutput() LogSyslogdOverrideFilterFreeStyleArrayOutput
	ToLogSyslogdOverrideFilterFreeStyleArrayOutputWithContext(context.Context) LogSyslogdOverrideFilterFreeStyleArrayOutput
}

type LogSyslogdOverrideFilterFreeStyleArray []LogSyslogdOverrideFilterFreeStyleInput

func (LogSyslogdOverrideFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdOverrideFilterFreeStyle)(nil)).Elem()
}

func (i LogSyslogdOverrideFilterFreeStyleArray) ToLogSyslogdOverrideFilterFreeStyleArrayOutput() LogSyslogdOverrideFilterFreeStyleArrayOutput {
	return i.ToLogSyslogdOverrideFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogSyslogdOverrideFilterFreeStyleArray) ToLogSyslogdOverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogdOverrideFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdOverrideFilterFreeStyleArrayOutput)
}

func (i LogSyslogdOverrideFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdOverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogdOverrideFilterFreeStyle]{
		OutputState: i.ToLogSyslogdOverrideFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogdOverrideFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogSyslogdOverrideFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdOverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) ToLogSyslogdOverrideFilterFreeStyleOutput() LogSyslogdOverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) ToLogSyslogdOverrideFilterFreeStyleOutputWithContext(ctx context.Context) LogSyslogdOverrideFilterFreeStyleOutput {
	return o
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdOverrideFilterFreeStyle] {
	return pulumix.Output[LogSyslogdOverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdOverrideFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogSyslogdOverrideFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogdOverrideFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdOverrideFilterFreeStyle)(nil)).Elem()
}

func (o LogSyslogdOverrideFilterFreeStyleArrayOutput) ToLogSyslogdOverrideFilterFreeStyleArrayOutput() LogSyslogdOverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogdOverrideFilterFreeStyleArrayOutput) ToLogSyslogdOverrideFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogSyslogdOverrideFilterFreeStyleArrayOutput {
	return o
}

func (o LogSyslogdOverrideFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdOverrideFilterFreeStyle] {
	return pulumix.Output[[]LogSyslogdOverrideFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdOverrideFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogSyslogdOverrideFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogdOverrideFilterFreeStyle {
		return vs[0].([]LogSyslogdOverrideFilterFreeStyle)[vs[1].(int)]
	}).(LogSyslogdOverrideFilterFreeStyleOutput)
}

type LogSyslogdOverrideSettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogdOverrideSettingCustomFieldNameInput is an input type that accepts LogSyslogdOverrideSettingCustomFieldNameArgs and LogSyslogdOverrideSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogdOverrideSettingCustomFieldNameInput` via:
//
//	LogSyslogdOverrideSettingCustomFieldNameArgs{...}
type LogSyslogdOverrideSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogdOverrideSettingCustomFieldNameOutput() LogSyslogdOverrideSettingCustomFieldNameOutput
	ToLogSyslogdOverrideSettingCustomFieldNameOutputWithContext(context.Context) LogSyslogdOverrideSettingCustomFieldNameOutput
}

type LogSyslogdOverrideSettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogdOverrideSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdOverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogdOverrideSettingCustomFieldNameArgs) ToLogSyslogdOverrideSettingCustomFieldNameOutput() LogSyslogdOverrideSettingCustomFieldNameOutput {
	return i.ToLogSyslogdOverrideSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogdOverrideSettingCustomFieldNameArgs) ToLogSyslogdOverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogdOverrideSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdOverrideSettingCustomFieldNameOutput)
}

func (i LogSyslogdOverrideSettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdOverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogdOverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogdOverrideSettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogdOverrideSettingCustomFieldNameArrayInput is an input type that accepts LogSyslogdOverrideSettingCustomFieldNameArray and LogSyslogdOverrideSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogdOverrideSettingCustomFieldNameArrayInput` via:
//
//	LogSyslogdOverrideSettingCustomFieldNameArray{ LogSyslogdOverrideSettingCustomFieldNameArgs{...} }
type LogSyslogdOverrideSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogdOverrideSettingCustomFieldNameArrayOutput() LogSyslogdOverrideSettingCustomFieldNameArrayOutput
	ToLogSyslogdOverrideSettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogdOverrideSettingCustomFieldNameArrayOutput
}

type LogSyslogdOverrideSettingCustomFieldNameArray []LogSyslogdOverrideSettingCustomFieldNameInput

func (LogSyslogdOverrideSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdOverrideSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogdOverrideSettingCustomFieldNameArray) ToLogSyslogdOverrideSettingCustomFieldNameArrayOutput() LogSyslogdOverrideSettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogdOverrideSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogdOverrideSettingCustomFieldNameArray) ToLogSyslogdOverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogdOverrideSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdOverrideSettingCustomFieldNameArrayOutput)
}

func (i LogSyslogdOverrideSettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdOverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogdOverrideSettingCustomFieldName]{
		OutputState: i.ToLogSyslogdOverrideSettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogdOverrideSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogdOverrideSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdOverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) ToLogSyslogdOverrideSettingCustomFieldNameOutput() LogSyslogdOverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) ToLogSyslogdOverrideSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogdOverrideSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdOverrideSettingCustomFieldName] {
	return pulumix.Output[LogSyslogdOverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogdOverrideSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdOverrideSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogdOverrideSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogdOverrideSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdOverrideSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogdOverrideSettingCustomFieldNameArrayOutput) ToLogSyslogdOverrideSettingCustomFieldNameArrayOutput() LogSyslogdOverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogdOverrideSettingCustomFieldNameArrayOutput) ToLogSyslogdOverrideSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogdOverrideSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogdOverrideSettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdOverrideSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogdOverrideSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdOverrideSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogdOverrideSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogdOverrideSettingCustomFieldName {
		return vs[0].([]LogSyslogdOverrideSettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogdOverrideSettingCustomFieldNameOutput)
}

type LogSyslogdSettingCustomFieldName struct {
	Custom *string `pulumi:"custom"`
	Id     *int    `pulumi:"id"`
	Name   *string `pulumi:"name"`
}

// LogSyslogdSettingCustomFieldNameInput is an input type that accepts LogSyslogdSettingCustomFieldNameArgs and LogSyslogdSettingCustomFieldNameOutput values.
// You can construct a concrete instance of `LogSyslogdSettingCustomFieldNameInput` via:
//
//	LogSyslogdSettingCustomFieldNameArgs{...}
type LogSyslogdSettingCustomFieldNameInput interface {
	pulumi.Input

	ToLogSyslogdSettingCustomFieldNameOutput() LogSyslogdSettingCustomFieldNameOutput
	ToLogSyslogdSettingCustomFieldNameOutputWithContext(context.Context) LogSyslogdSettingCustomFieldNameOutput
}

type LogSyslogdSettingCustomFieldNameArgs struct {
	Custom pulumi.StringPtrInput `pulumi:"custom"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (LogSyslogdSettingCustomFieldNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogdSettingCustomFieldNameArgs) ToLogSyslogdSettingCustomFieldNameOutput() LogSyslogdSettingCustomFieldNameOutput {
	return i.ToLogSyslogdSettingCustomFieldNameOutputWithContext(context.Background())
}

func (i LogSyslogdSettingCustomFieldNameArgs) ToLogSyslogdSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogdSettingCustomFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdSettingCustomFieldNameOutput)
}

func (i LogSyslogdSettingCustomFieldNameArgs) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdSettingCustomFieldName] {
	return pulumix.Output[LogSyslogdSettingCustomFieldName]{
		OutputState: i.ToLogSyslogdSettingCustomFieldNameOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogdSettingCustomFieldNameArrayInput is an input type that accepts LogSyslogdSettingCustomFieldNameArray and LogSyslogdSettingCustomFieldNameArrayOutput values.
// You can construct a concrete instance of `LogSyslogdSettingCustomFieldNameArrayInput` via:
//
//	LogSyslogdSettingCustomFieldNameArray{ LogSyslogdSettingCustomFieldNameArgs{...} }
type LogSyslogdSettingCustomFieldNameArrayInput interface {
	pulumi.Input

	ToLogSyslogdSettingCustomFieldNameArrayOutput() LogSyslogdSettingCustomFieldNameArrayOutput
	ToLogSyslogdSettingCustomFieldNameArrayOutputWithContext(context.Context) LogSyslogdSettingCustomFieldNameArrayOutput
}

type LogSyslogdSettingCustomFieldNameArray []LogSyslogdSettingCustomFieldNameInput

func (LogSyslogdSettingCustomFieldNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdSettingCustomFieldName)(nil)).Elem()
}

func (i LogSyslogdSettingCustomFieldNameArray) ToLogSyslogdSettingCustomFieldNameArrayOutput() LogSyslogdSettingCustomFieldNameArrayOutput {
	return i.ToLogSyslogdSettingCustomFieldNameArrayOutputWithContext(context.Background())
}

func (i LogSyslogdSettingCustomFieldNameArray) ToLogSyslogdSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogdSettingCustomFieldNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogdSettingCustomFieldNameArrayOutput)
}

func (i LogSyslogdSettingCustomFieldNameArray) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogdSettingCustomFieldName]{
		OutputState: i.ToLogSyslogdSettingCustomFieldNameArrayOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogdSettingCustomFieldNameOutput struct{ *pulumi.OutputState }

func (LogSyslogdSettingCustomFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSyslogdSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogdSettingCustomFieldNameOutput) ToLogSyslogdSettingCustomFieldNameOutput() LogSyslogdSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogdSettingCustomFieldNameOutput) ToLogSyslogdSettingCustomFieldNameOutputWithContext(ctx context.Context) LogSyslogdSettingCustomFieldNameOutput {
	return o
}

func (o LogSyslogdSettingCustomFieldNameOutput) ToOutput(ctx context.Context) pulumix.Output[LogSyslogdSettingCustomFieldName] {
	return pulumix.Output[LogSyslogdSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdSettingCustomFieldNameOutput) Custom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdSettingCustomFieldName) *string { return v.Custom }).(pulumi.StringPtrOutput)
}

func (o LogSyslogdSettingCustomFieldNameOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSyslogdSettingCustomFieldName) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogSyslogdSettingCustomFieldNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSyslogdSettingCustomFieldName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LogSyslogdSettingCustomFieldNameArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogdSettingCustomFieldNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSyslogdSettingCustomFieldName)(nil)).Elem()
}

func (o LogSyslogdSettingCustomFieldNameArrayOutput) ToLogSyslogdSettingCustomFieldNameArrayOutput() LogSyslogdSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogdSettingCustomFieldNameArrayOutput) ToLogSyslogdSettingCustomFieldNameArrayOutputWithContext(ctx context.Context) LogSyslogdSettingCustomFieldNameArrayOutput {
	return o
}

func (o LogSyslogdSettingCustomFieldNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogSyslogdSettingCustomFieldName] {
	return pulumix.Output[[]LogSyslogdSettingCustomFieldName]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogdSettingCustomFieldNameArrayOutput) Index(i pulumi.IntInput) LogSyslogdSettingCustomFieldNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSyslogdSettingCustomFieldName {
		return vs[0].([]LogSyslogdSettingCustomFieldName)[vs[1].(int)]
	}).(LogSyslogdSettingCustomFieldNameOutput)
}

type LogThreatWeightApplication struct {
	Category *int    `pulumi:"category"`
	Id       *int    `pulumi:"id"`
	Level    *string `pulumi:"level"`
}

// LogThreatWeightApplicationInput is an input type that accepts LogThreatWeightApplicationArgs and LogThreatWeightApplicationOutput values.
// You can construct a concrete instance of `LogThreatWeightApplicationInput` via:
//
//	LogThreatWeightApplicationArgs{...}
type LogThreatWeightApplicationInput interface {
	pulumi.Input

	ToLogThreatWeightApplicationOutput() LogThreatWeightApplicationOutput
	ToLogThreatWeightApplicationOutputWithContext(context.Context) LogThreatWeightApplicationOutput
}

type LogThreatWeightApplicationArgs struct {
	Category pulumi.IntPtrInput    `pulumi:"category"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Level    pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatWeightApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightApplication)(nil)).Elem()
}

func (i LogThreatWeightApplicationArgs) ToLogThreatWeightApplicationOutput() LogThreatWeightApplicationOutput {
	return i.ToLogThreatWeightApplicationOutputWithContext(context.Background())
}

func (i LogThreatWeightApplicationArgs) ToLogThreatWeightApplicationOutputWithContext(ctx context.Context) LogThreatWeightApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightApplicationOutput)
}

func (i LogThreatWeightApplicationArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightApplication] {
	return pulumix.Output[LogThreatWeightApplication]{
		OutputState: i.ToLogThreatWeightApplicationOutputWithContext(ctx).OutputState,
	}
}

// LogThreatWeightApplicationArrayInput is an input type that accepts LogThreatWeightApplicationArray and LogThreatWeightApplicationArrayOutput values.
// You can construct a concrete instance of `LogThreatWeightApplicationArrayInput` via:
//
//	LogThreatWeightApplicationArray{ LogThreatWeightApplicationArgs{...} }
type LogThreatWeightApplicationArrayInput interface {
	pulumi.Input

	ToLogThreatWeightApplicationArrayOutput() LogThreatWeightApplicationArrayOutput
	ToLogThreatWeightApplicationArrayOutputWithContext(context.Context) LogThreatWeightApplicationArrayOutput
}

type LogThreatWeightApplicationArray []LogThreatWeightApplicationInput

func (LogThreatWeightApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightApplication)(nil)).Elem()
}

func (i LogThreatWeightApplicationArray) ToLogThreatWeightApplicationArrayOutput() LogThreatWeightApplicationArrayOutput {
	return i.ToLogThreatWeightApplicationArrayOutputWithContext(context.Background())
}

func (i LogThreatWeightApplicationArray) ToLogThreatWeightApplicationArrayOutputWithContext(ctx context.Context) LogThreatWeightApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightApplicationArrayOutput)
}

func (i LogThreatWeightApplicationArray) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightApplication] {
	return pulumix.Output[[]LogThreatWeightApplication]{
		OutputState: i.ToLogThreatWeightApplicationArrayOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightApplicationOutput struct{ *pulumi.OutputState }

func (LogThreatWeightApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightApplication)(nil)).Elem()
}

func (o LogThreatWeightApplicationOutput) ToLogThreatWeightApplicationOutput() LogThreatWeightApplicationOutput {
	return o
}

func (o LogThreatWeightApplicationOutput) ToLogThreatWeightApplicationOutputWithContext(ctx context.Context) LogThreatWeightApplicationOutput {
	return o
}

func (o LogThreatWeightApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightApplication] {
	return pulumix.Output[LogThreatWeightApplication]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightApplicationOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightApplication) *int { return v.Category }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightApplicationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightApplication) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatWeightApplicationArrayOutput struct{ *pulumi.OutputState }

func (LogThreatWeightApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightApplication)(nil)).Elem()
}

func (o LogThreatWeightApplicationArrayOutput) ToLogThreatWeightApplicationArrayOutput() LogThreatWeightApplicationArrayOutput {
	return o
}

func (o LogThreatWeightApplicationArrayOutput) ToLogThreatWeightApplicationArrayOutputWithContext(ctx context.Context) LogThreatWeightApplicationArrayOutput {
	return o
}

func (o LogThreatWeightApplicationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightApplication] {
	return pulumix.Output[[]LogThreatWeightApplication]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightApplicationArrayOutput) Index(i pulumi.IntInput) LogThreatWeightApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatWeightApplication {
		return vs[0].([]LogThreatWeightApplication)[vs[1].(int)]
	}).(LogThreatWeightApplicationOutput)
}

type LogThreatWeightGeolocation struct {
	Country *string `pulumi:"country"`
	Id      *int    `pulumi:"id"`
	Level   *string `pulumi:"level"`
}

// LogThreatWeightGeolocationInput is an input type that accepts LogThreatWeightGeolocationArgs and LogThreatWeightGeolocationOutput values.
// You can construct a concrete instance of `LogThreatWeightGeolocationInput` via:
//
//	LogThreatWeightGeolocationArgs{...}
type LogThreatWeightGeolocationInput interface {
	pulumi.Input

	ToLogThreatWeightGeolocationOutput() LogThreatWeightGeolocationOutput
	ToLogThreatWeightGeolocationOutputWithContext(context.Context) LogThreatWeightGeolocationOutput
}

type LogThreatWeightGeolocationArgs struct {
	Country pulumi.StringPtrInput `pulumi:"country"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	Level   pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatWeightGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightGeolocation)(nil)).Elem()
}

func (i LogThreatWeightGeolocationArgs) ToLogThreatWeightGeolocationOutput() LogThreatWeightGeolocationOutput {
	return i.ToLogThreatWeightGeolocationOutputWithContext(context.Background())
}

func (i LogThreatWeightGeolocationArgs) ToLogThreatWeightGeolocationOutputWithContext(ctx context.Context) LogThreatWeightGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightGeolocationOutput)
}

func (i LogThreatWeightGeolocationArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightGeolocation] {
	return pulumix.Output[LogThreatWeightGeolocation]{
		OutputState: i.ToLogThreatWeightGeolocationOutputWithContext(ctx).OutputState,
	}
}

// LogThreatWeightGeolocationArrayInput is an input type that accepts LogThreatWeightGeolocationArray and LogThreatWeightGeolocationArrayOutput values.
// You can construct a concrete instance of `LogThreatWeightGeolocationArrayInput` via:
//
//	LogThreatWeightGeolocationArray{ LogThreatWeightGeolocationArgs{...} }
type LogThreatWeightGeolocationArrayInput interface {
	pulumi.Input

	ToLogThreatWeightGeolocationArrayOutput() LogThreatWeightGeolocationArrayOutput
	ToLogThreatWeightGeolocationArrayOutputWithContext(context.Context) LogThreatWeightGeolocationArrayOutput
}

type LogThreatWeightGeolocationArray []LogThreatWeightGeolocationInput

func (LogThreatWeightGeolocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightGeolocation)(nil)).Elem()
}

func (i LogThreatWeightGeolocationArray) ToLogThreatWeightGeolocationArrayOutput() LogThreatWeightGeolocationArrayOutput {
	return i.ToLogThreatWeightGeolocationArrayOutputWithContext(context.Background())
}

func (i LogThreatWeightGeolocationArray) ToLogThreatWeightGeolocationArrayOutputWithContext(ctx context.Context) LogThreatWeightGeolocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightGeolocationArrayOutput)
}

func (i LogThreatWeightGeolocationArray) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightGeolocation] {
	return pulumix.Output[[]LogThreatWeightGeolocation]{
		OutputState: i.ToLogThreatWeightGeolocationArrayOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightGeolocationOutput struct{ *pulumi.OutputState }

func (LogThreatWeightGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightGeolocation)(nil)).Elem()
}

func (o LogThreatWeightGeolocationOutput) ToLogThreatWeightGeolocationOutput() LogThreatWeightGeolocationOutput {
	return o
}

func (o LogThreatWeightGeolocationOutput) ToLogThreatWeightGeolocationOutputWithContext(ctx context.Context) LogThreatWeightGeolocationOutput {
	return o
}

func (o LogThreatWeightGeolocationOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightGeolocation] {
	return pulumix.Output[LogThreatWeightGeolocation]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightGeolocationOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightGeolocation) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightGeolocationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightGeolocation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightGeolocationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightGeolocation) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatWeightGeolocationArrayOutput struct{ *pulumi.OutputState }

func (LogThreatWeightGeolocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightGeolocation)(nil)).Elem()
}

func (o LogThreatWeightGeolocationArrayOutput) ToLogThreatWeightGeolocationArrayOutput() LogThreatWeightGeolocationArrayOutput {
	return o
}

func (o LogThreatWeightGeolocationArrayOutput) ToLogThreatWeightGeolocationArrayOutputWithContext(ctx context.Context) LogThreatWeightGeolocationArrayOutput {
	return o
}

func (o LogThreatWeightGeolocationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightGeolocation] {
	return pulumix.Output[[]LogThreatWeightGeolocation]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightGeolocationArrayOutput) Index(i pulumi.IntInput) LogThreatWeightGeolocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatWeightGeolocation {
		return vs[0].([]LogThreatWeightGeolocation)[vs[1].(int)]
	}).(LogThreatWeightGeolocationOutput)
}

type LogThreatWeightIps struct {
	CriticalSeverity *string `pulumi:"criticalSeverity"`
	HighSeverity     *string `pulumi:"highSeverity"`
	InfoSeverity     *string `pulumi:"infoSeverity"`
	LowSeverity      *string `pulumi:"lowSeverity"`
	MediumSeverity   *string `pulumi:"mediumSeverity"`
}

// LogThreatWeightIpsInput is an input type that accepts LogThreatWeightIpsArgs and LogThreatWeightIpsOutput values.
// You can construct a concrete instance of `LogThreatWeightIpsInput` via:
//
//	LogThreatWeightIpsArgs{...}
type LogThreatWeightIpsInput interface {
	pulumi.Input

	ToLogThreatWeightIpsOutput() LogThreatWeightIpsOutput
	ToLogThreatWeightIpsOutputWithContext(context.Context) LogThreatWeightIpsOutput
}

type LogThreatWeightIpsArgs struct {
	CriticalSeverity pulumi.StringPtrInput `pulumi:"criticalSeverity"`
	HighSeverity     pulumi.StringPtrInput `pulumi:"highSeverity"`
	InfoSeverity     pulumi.StringPtrInput `pulumi:"infoSeverity"`
	LowSeverity      pulumi.StringPtrInput `pulumi:"lowSeverity"`
	MediumSeverity   pulumi.StringPtrInput `pulumi:"mediumSeverity"`
}

func (LogThreatWeightIpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightIps)(nil)).Elem()
}

func (i LogThreatWeightIpsArgs) ToLogThreatWeightIpsOutput() LogThreatWeightIpsOutput {
	return i.ToLogThreatWeightIpsOutputWithContext(context.Background())
}

func (i LogThreatWeightIpsArgs) ToLogThreatWeightIpsOutputWithContext(ctx context.Context) LogThreatWeightIpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightIpsOutput)
}

func (i LogThreatWeightIpsArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightIps] {
	return pulumix.Output[LogThreatWeightIps]{
		OutputState: i.ToLogThreatWeightIpsOutputWithContext(ctx).OutputState,
	}
}

func (i LogThreatWeightIpsArgs) ToLogThreatWeightIpsPtrOutput() LogThreatWeightIpsPtrOutput {
	return i.ToLogThreatWeightIpsPtrOutputWithContext(context.Background())
}

func (i LogThreatWeightIpsArgs) ToLogThreatWeightIpsPtrOutputWithContext(ctx context.Context) LogThreatWeightIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightIpsOutput).ToLogThreatWeightIpsPtrOutputWithContext(ctx)
}

// LogThreatWeightIpsPtrInput is an input type that accepts LogThreatWeightIpsArgs, LogThreatWeightIpsPtr and LogThreatWeightIpsPtrOutput values.
// You can construct a concrete instance of `LogThreatWeightIpsPtrInput` via:
//
//	        LogThreatWeightIpsArgs{...}
//
//	or:
//
//	        nil
type LogThreatWeightIpsPtrInput interface {
	pulumi.Input

	ToLogThreatWeightIpsPtrOutput() LogThreatWeightIpsPtrOutput
	ToLogThreatWeightIpsPtrOutputWithContext(context.Context) LogThreatWeightIpsPtrOutput
}

type logThreatWeightIpsPtrType LogThreatWeightIpsArgs

func LogThreatWeightIpsPtr(v *LogThreatWeightIpsArgs) LogThreatWeightIpsPtrInput {
	return (*logThreatWeightIpsPtrType)(v)
}

func (*logThreatWeightIpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightIps)(nil)).Elem()
}

func (i *logThreatWeightIpsPtrType) ToLogThreatWeightIpsPtrOutput() LogThreatWeightIpsPtrOutput {
	return i.ToLogThreatWeightIpsPtrOutputWithContext(context.Background())
}

func (i *logThreatWeightIpsPtrType) ToLogThreatWeightIpsPtrOutputWithContext(ctx context.Context) LogThreatWeightIpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightIpsPtrOutput)
}

func (i *logThreatWeightIpsPtrType) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightIps] {
	return pulumix.Output[*LogThreatWeightIps]{
		OutputState: i.ToLogThreatWeightIpsPtrOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightIpsOutput struct{ *pulumi.OutputState }

func (LogThreatWeightIpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightIps)(nil)).Elem()
}

func (o LogThreatWeightIpsOutput) ToLogThreatWeightIpsOutput() LogThreatWeightIpsOutput {
	return o
}

func (o LogThreatWeightIpsOutput) ToLogThreatWeightIpsOutputWithContext(ctx context.Context) LogThreatWeightIpsOutput {
	return o
}

func (o LogThreatWeightIpsOutput) ToLogThreatWeightIpsPtrOutput() LogThreatWeightIpsPtrOutput {
	return o.ToLogThreatWeightIpsPtrOutputWithContext(context.Background())
}

func (o LogThreatWeightIpsOutput) ToLogThreatWeightIpsPtrOutputWithContext(ctx context.Context) LogThreatWeightIpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatWeightIps) *LogThreatWeightIps {
		return &v
	}).(LogThreatWeightIpsPtrOutput)
}

func (o LogThreatWeightIpsOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightIps] {
	return pulumix.Output[LogThreatWeightIps]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightIpsOutput) CriticalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightIps) *string { return v.CriticalSeverity }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsOutput) HighSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightIps) *string { return v.HighSeverity }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsOutput) InfoSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightIps) *string { return v.InfoSeverity }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsOutput) LowSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightIps) *string { return v.LowSeverity }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsOutput) MediumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightIps) *string { return v.MediumSeverity }).(pulumi.StringPtrOutput)
}

type LogThreatWeightIpsPtrOutput struct{ *pulumi.OutputState }

func (LogThreatWeightIpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightIps)(nil)).Elem()
}

func (o LogThreatWeightIpsPtrOutput) ToLogThreatWeightIpsPtrOutput() LogThreatWeightIpsPtrOutput {
	return o
}

func (o LogThreatWeightIpsPtrOutput) ToLogThreatWeightIpsPtrOutputWithContext(ctx context.Context) LogThreatWeightIpsPtrOutput {
	return o
}

func (o LogThreatWeightIpsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightIps] {
	return pulumix.Output[*LogThreatWeightIps]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightIpsPtrOutput) Elem() LogThreatWeightIpsOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) LogThreatWeightIps {
		if v != nil {
			return *v
		}
		var ret LogThreatWeightIps
		return ret
	}).(LogThreatWeightIpsOutput)
}

func (o LogThreatWeightIpsPtrOutput) CriticalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) *string {
		if v == nil {
			return nil
		}
		return v.CriticalSeverity
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsPtrOutput) HighSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) *string {
		if v == nil {
			return nil
		}
		return v.HighSeverity
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsPtrOutput) InfoSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) *string {
		if v == nil {
			return nil
		}
		return v.InfoSeverity
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsPtrOutput) LowSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) *string {
		if v == nil {
			return nil
		}
		return v.LowSeverity
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightIpsPtrOutput) MediumSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightIps) *string {
		if v == nil {
			return nil
		}
		return v.MediumSeverity
	}).(pulumi.StringPtrOutput)
}

type LogThreatWeightLevel struct {
	Critical *int `pulumi:"critical"`
	High     *int `pulumi:"high"`
	Low      *int `pulumi:"low"`
	Medium   *int `pulumi:"medium"`
}

// LogThreatWeightLevelInput is an input type that accepts LogThreatWeightLevelArgs and LogThreatWeightLevelOutput values.
// You can construct a concrete instance of `LogThreatWeightLevelInput` via:
//
//	LogThreatWeightLevelArgs{...}
type LogThreatWeightLevelInput interface {
	pulumi.Input

	ToLogThreatWeightLevelOutput() LogThreatWeightLevelOutput
	ToLogThreatWeightLevelOutputWithContext(context.Context) LogThreatWeightLevelOutput
}

type LogThreatWeightLevelArgs struct {
	Critical pulumi.IntPtrInput `pulumi:"critical"`
	High     pulumi.IntPtrInput `pulumi:"high"`
	Low      pulumi.IntPtrInput `pulumi:"low"`
	Medium   pulumi.IntPtrInput `pulumi:"medium"`
}

func (LogThreatWeightLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightLevel)(nil)).Elem()
}

func (i LogThreatWeightLevelArgs) ToLogThreatWeightLevelOutput() LogThreatWeightLevelOutput {
	return i.ToLogThreatWeightLevelOutputWithContext(context.Background())
}

func (i LogThreatWeightLevelArgs) ToLogThreatWeightLevelOutputWithContext(ctx context.Context) LogThreatWeightLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightLevelOutput)
}

func (i LogThreatWeightLevelArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightLevel] {
	return pulumix.Output[LogThreatWeightLevel]{
		OutputState: i.ToLogThreatWeightLevelOutputWithContext(ctx).OutputState,
	}
}

func (i LogThreatWeightLevelArgs) ToLogThreatWeightLevelPtrOutput() LogThreatWeightLevelPtrOutput {
	return i.ToLogThreatWeightLevelPtrOutputWithContext(context.Background())
}

func (i LogThreatWeightLevelArgs) ToLogThreatWeightLevelPtrOutputWithContext(ctx context.Context) LogThreatWeightLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightLevelOutput).ToLogThreatWeightLevelPtrOutputWithContext(ctx)
}

// LogThreatWeightLevelPtrInput is an input type that accepts LogThreatWeightLevelArgs, LogThreatWeightLevelPtr and LogThreatWeightLevelPtrOutput values.
// You can construct a concrete instance of `LogThreatWeightLevelPtrInput` via:
//
//	        LogThreatWeightLevelArgs{...}
//
//	or:
//
//	        nil
type LogThreatWeightLevelPtrInput interface {
	pulumi.Input

	ToLogThreatWeightLevelPtrOutput() LogThreatWeightLevelPtrOutput
	ToLogThreatWeightLevelPtrOutputWithContext(context.Context) LogThreatWeightLevelPtrOutput
}

type logThreatWeightLevelPtrType LogThreatWeightLevelArgs

func LogThreatWeightLevelPtr(v *LogThreatWeightLevelArgs) LogThreatWeightLevelPtrInput {
	return (*logThreatWeightLevelPtrType)(v)
}

func (*logThreatWeightLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightLevel)(nil)).Elem()
}

func (i *logThreatWeightLevelPtrType) ToLogThreatWeightLevelPtrOutput() LogThreatWeightLevelPtrOutput {
	return i.ToLogThreatWeightLevelPtrOutputWithContext(context.Background())
}

func (i *logThreatWeightLevelPtrType) ToLogThreatWeightLevelPtrOutputWithContext(ctx context.Context) LogThreatWeightLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightLevelPtrOutput)
}

func (i *logThreatWeightLevelPtrType) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightLevel] {
	return pulumix.Output[*LogThreatWeightLevel]{
		OutputState: i.ToLogThreatWeightLevelPtrOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightLevelOutput struct{ *pulumi.OutputState }

func (LogThreatWeightLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightLevel)(nil)).Elem()
}

func (o LogThreatWeightLevelOutput) ToLogThreatWeightLevelOutput() LogThreatWeightLevelOutput {
	return o
}

func (o LogThreatWeightLevelOutput) ToLogThreatWeightLevelOutputWithContext(ctx context.Context) LogThreatWeightLevelOutput {
	return o
}

func (o LogThreatWeightLevelOutput) ToLogThreatWeightLevelPtrOutput() LogThreatWeightLevelPtrOutput {
	return o.ToLogThreatWeightLevelPtrOutputWithContext(context.Background())
}

func (o LogThreatWeightLevelOutput) ToLogThreatWeightLevelPtrOutputWithContext(ctx context.Context) LogThreatWeightLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatWeightLevel) *LogThreatWeightLevel {
		return &v
	}).(LogThreatWeightLevelPtrOutput)
}

func (o LogThreatWeightLevelOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightLevel] {
	return pulumix.Output[LogThreatWeightLevel]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightLevelOutput) Critical() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightLevel) *int { return v.Critical }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightLevel) *int { return v.High }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightLevel) *int { return v.Low }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelOutput) Medium() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightLevel) *int { return v.Medium }).(pulumi.IntPtrOutput)
}

type LogThreatWeightLevelPtrOutput struct{ *pulumi.OutputState }

func (LogThreatWeightLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightLevel)(nil)).Elem()
}

func (o LogThreatWeightLevelPtrOutput) ToLogThreatWeightLevelPtrOutput() LogThreatWeightLevelPtrOutput {
	return o
}

func (o LogThreatWeightLevelPtrOutput) ToLogThreatWeightLevelPtrOutputWithContext(ctx context.Context) LogThreatWeightLevelPtrOutput {
	return o
}

func (o LogThreatWeightLevelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightLevel] {
	return pulumix.Output[*LogThreatWeightLevel]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightLevelPtrOutput) Elem() LogThreatWeightLevelOutput {
	return o.ApplyT(func(v *LogThreatWeightLevel) LogThreatWeightLevel {
		if v != nil {
			return *v
		}
		var ret LogThreatWeightLevel
		return ret
	}).(LogThreatWeightLevelOutput)
}

func (o LogThreatWeightLevelPtrOutput) Critical() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelPtrOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightLevel) *int {
		if v == nil {
			return nil
		}
		return v.High
	}).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelPtrOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Low
	}).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightLevelPtrOutput) Medium() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightLevel) *int {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.IntPtrOutput)
}

type LogThreatWeightMalware struct {
	BotnetConnection        *string `pulumi:"botnetConnection"`
	CommandBlocked          *string `pulumi:"commandBlocked"`
	ContentDisarm           *string `pulumi:"contentDisarm"`
	EmsThreatFeed           *string `pulumi:"emsThreatFeed"`
	FileBlocked             *string `pulumi:"fileBlocked"`
	Fortiai                 *string `pulumi:"fortiai"`
	Fortindr                *string `pulumi:"fortindr"`
	Fortisandbox            *string `pulumi:"fortisandbox"`
	FsaHighRisk             *string `pulumi:"fsaHighRisk"`
	FsaMalicious            *string `pulumi:"fsaMalicious"`
	FsaMediumRisk           *string `pulumi:"fsaMediumRisk"`
	InlineBlock             *string `pulumi:"inlineBlock"`
	MalwareList             *string `pulumi:"malwareList"`
	Mimefragmented          *string `pulumi:"mimefragmented"`
	Oversized               *string `pulumi:"oversized"`
	SwitchProto             *string `pulumi:"switchProto"`
	VirusFileTypeExecutable *string `pulumi:"virusFileTypeExecutable"`
	VirusInfected           *string `pulumi:"virusInfected"`
	VirusOutbreakPrevention *string `pulumi:"virusOutbreakPrevention"`
	VirusScanError          *string `pulumi:"virusScanError"`
}

// LogThreatWeightMalwareInput is an input type that accepts LogThreatWeightMalwareArgs and LogThreatWeightMalwareOutput values.
// You can construct a concrete instance of `LogThreatWeightMalwareInput` via:
//
//	LogThreatWeightMalwareArgs{...}
type LogThreatWeightMalwareInput interface {
	pulumi.Input

	ToLogThreatWeightMalwareOutput() LogThreatWeightMalwareOutput
	ToLogThreatWeightMalwareOutputWithContext(context.Context) LogThreatWeightMalwareOutput
}

type LogThreatWeightMalwareArgs struct {
	BotnetConnection        pulumi.StringPtrInput `pulumi:"botnetConnection"`
	CommandBlocked          pulumi.StringPtrInput `pulumi:"commandBlocked"`
	ContentDisarm           pulumi.StringPtrInput `pulumi:"contentDisarm"`
	EmsThreatFeed           pulumi.StringPtrInput `pulumi:"emsThreatFeed"`
	FileBlocked             pulumi.StringPtrInput `pulumi:"fileBlocked"`
	Fortiai                 pulumi.StringPtrInput `pulumi:"fortiai"`
	Fortindr                pulumi.StringPtrInput `pulumi:"fortindr"`
	Fortisandbox            pulumi.StringPtrInput `pulumi:"fortisandbox"`
	FsaHighRisk             pulumi.StringPtrInput `pulumi:"fsaHighRisk"`
	FsaMalicious            pulumi.StringPtrInput `pulumi:"fsaMalicious"`
	FsaMediumRisk           pulumi.StringPtrInput `pulumi:"fsaMediumRisk"`
	InlineBlock             pulumi.StringPtrInput `pulumi:"inlineBlock"`
	MalwareList             pulumi.StringPtrInput `pulumi:"malwareList"`
	Mimefragmented          pulumi.StringPtrInput `pulumi:"mimefragmented"`
	Oversized               pulumi.StringPtrInput `pulumi:"oversized"`
	SwitchProto             pulumi.StringPtrInput `pulumi:"switchProto"`
	VirusFileTypeExecutable pulumi.StringPtrInput `pulumi:"virusFileTypeExecutable"`
	VirusInfected           pulumi.StringPtrInput `pulumi:"virusInfected"`
	VirusOutbreakPrevention pulumi.StringPtrInput `pulumi:"virusOutbreakPrevention"`
	VirusScanError          pulumi.StringPtrInput `pulumi:"virusScanError"`
}

func (LogThreatWeightMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightMalware)(nil)).Elem()
}

func (i LogThreatWeightMalwareArgs) ToLogThreatWeightMalwareOutput() LogThreatWeightMalwareOutput {
	return i.ToLogThreatWeightMalwareOutputWithContext(context.Background())
}

func (i LogThreatWeightMalwareArgs) ToLogThreatWeightMalwareOutputWithContext(ctx context.Context) LogThreatWeightMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightMalwareOutput)
}

func (i LogThreatWeightMalwareArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightMalware] {
	return pulumix.Output[LogThreatWeightMalware]{
		OutputState: i.ToLogThreatWeightMalwareOutputWithContext(ctx).OutputState,
	}
}

func (i LogThreatWeightMalwareArgs) ToLogThreatWeightMalwarePtrOutput() LogThreatWeightMalwarePtrOutput {
	return i.ToLogThreatWeightMalwarePtrOutputWithContext(context.Background())
}

func (i LogThreatWeightMalwareArgs) ToLogThreatWeightMalwarePtrOutputWithContext(ctx context.Context) LogThreatWeightMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightMalwareOutput).ToLogThreatWeightMalwarePtrOutputWithContext(ctx)
}

// LogThreatWeightMalwarePtrInput is an input type that accepts LogThreatWeightMalwareArgs, LogThreatWeightMalwarePtr and LogThreatWeightMalwarePtrOutput values.
// You can construct a concrete instance of `LogThreatWeightMalwarePtrInput` via:
//
//	        LogThreatWeightMalwareArgs{...}
//
//	or:
//
//	        nil
type LogThreatWeightMalwarePtrInput interface {
	pulumi.Input

	ToLogThreatWeightMalwarePtrOutput() LogThreatWeightMalwarePtrOutput
	ToLogThreatWeightMalwarePtrOutputWithContext(context.Context) LogThreatWeightMalwarePtrOutput
}

type logThreatWeightMalwarePtrType LogThreatWeightMalwareArgs

func LogThreatWeightMalwarePtr(v *LogThreatWeightMalwareArgs) LogThreatWeightMalwarePtrInput {
	return (*logThreatWeightMalwarePtrType)(v)
}

func (*logThreatWeightMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightMalware)(nil)).Elem()
}

func (i *logThreatWeightMalwarePtrType) ToLogThreatWeightMalwarePtrOutput() LogThreatWeightMalwarePtrOutput {
	return i.ToLogThreatWeightMalwarePtrOutputWithContext(context.Background())
}

func (i *logThreatWeightMalwarePtrType) ToLogThreatWeightMalwarePtrOutputWithContext(ctx context.Context) LogThreatWeightMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightMalwarePtrOutput)
}

func (i *logThreatWeightMalwarePtrType) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightMalware] {
	return pulumix.Output[*LogThreatWeightMalware]{
		OutputState: i.ToLogThreatWeightMalwarePtrOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightMalwareOutput struct{ *pulumi.OutputState }

func (LogThreatWeightMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightMalware)(nil)).Elem()
}

func (o LogThreatWeightMalwareOutput) ToLogThreatWeightMalwareOutput() LogThreatWeightMalwareOutput {
	return o
}

func (o LogThreatWeightMalwareOutput) ToLogThreatWeightMalwareOutputWithContext(ctx context.Context) LogThreatWeightMalwareOutput {
	return o
}

func (o LogThreatWeightMalwareOutput) ToLogThreatWeightMalwarePtrOutput() LogThreatWeightMalwarePtrOutput {
	return o.ToLogThreatWeightMalwarePtrOutputWithContext(context.Background())
}

func (o LogThreatWeightMalwareOutput) ToLogThreatWeightMalwarePtrOutputWithContext(ctx context.Context) LogThreatWeightMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogThreatWeightMalware) *LogThreatWeightMalware {
		return &v
	}).(LogThreatWeightMalwarePtrOutput)
}

func (o LogThreatWeightMalwareOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightMalware] {
	return pulumix.Output[LogThreatWeightMalware]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightMalwareOutput) BotnetConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.BotnetConnection }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) CommandBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.CommandBlocked }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.ContentDisarm }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) EmsThreatFeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.EmsThreatFeed }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) FileBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.FileBlocked }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.Fortiai }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.Fortindr }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.Fortisandbox }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) FsaHighRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.FsaHighRisk }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) FsaMalicious() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.FsaMalicious }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) FsaMediumRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.FsaMediumRisk }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) InlineBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.InlineBlock }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) MalwareList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.MalwareList }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) Mimefragmented() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.Mimefragmented }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) Oversized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.Oversized }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) SwitchProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.SwitchProto }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) VirusFileTypeExecutable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.VirusFileTypeExecutable }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) VirusInfected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.VirusInfected }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) VirusOutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.VirusOutbreakPrevention }).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwareOutput) VirusScanError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightMalware) *string { return v.VirusScanError }).(pulumi.StringPtrOutput)
}

type LogThreatWeightMalwarePtrOutput struct{ *pulumi.OutputState }

func (LogThreatWeightMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogThreatWeightMalware)(nil)).Elem()
}

func (o LogThreatWeightMalwarePtrOutput) ToLogThreatWeightMalwarePtrOutput() LogThreatWeightMalwarePtrOutput {
	return o
}

func (o LogThreatWeightMalwarePtrOutput) ToLogThreatWeightMalwarePtrOutputWithContext(ctx context.Context) LogThreatWeightMalwarePtrOutput {
	return o
}

func (o LogThreatWeightMalwarePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LogThreatWeightMalware] {
	return pulumix.Output[*LogThreatWeightMalware]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightMalwarePtrOutput) Elem() LogThreatWeightMalwareOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) LogThreatWeightMalware {
		if v != nil {
			return *v
		}
		var ret LogThreatWeightMalware
		return ret
	}).(LogThreatWeightMalwareOutput)
}

func (o LogThreatWeightMalwarePtrOutput) BotnetConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.BotnetConnection
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) CommandBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.CommandBlocked
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) ContentDisarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.ContentDisarm
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) EmsThreatFeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.EmsThreatFeed
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) FileBlocked() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FileBlocked
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) Fortiai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortiai
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) Fortindr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortindr
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) Fortisandbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Fortisandbox
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) FsaHighRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaHighRisk
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) FsaMalicious() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaMalicious
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) FsaMediumRisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.FsaMediumRisk
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) InlineBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.InlineBlock
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) MalwareList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.MalwareList
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) Mimefragmented() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Mimefragmented
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) Oversized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.Oversized
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) SwitchProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.SwitchProto
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) VirusFileTypeExecutable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusFileTypeExecutable
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) VirusInfected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusInfected
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) VirusOutbreakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusOutbreakPrevention
	}).(pulumi.StringPtrOutput)
}

func (o LogThreatWeightMalwarePtrOutput) VirusScanError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogThreatWeightMalware) *string {
		if v == nil {
			return nil
		}
		return v.VirusScanError
	}).(pulumi.StringPtrOutput)
}

type LogThreatWeightWeb struct {
	Category *int    `pulumi:"category"`
	Id       *int    `pulumi:"id"`
	Level    *string `pulumi:"level"`
}

// LogThreatWeightWebInput is an input type that accepts LogThreatWeightWebArgs and LogThreatWeightWebOutput values.
// You can construct a concrete instance of `LogThreatWeightWebInput` via:
//
//	LogThreatWeightWebArgs{...}
type LogThreatWeightWebInput interface {
	pulumi.Input

	ToLogThreatWeightWebOutput() LogThreatWeightWebOutput
	ToLogThreatWeightWebOutputWithContext(context.Context) LogThreatWeightWebOutput
}

type LogThreatWeightWebArgs struct {
	Category pulumi.IntPtrInput    `pulumi:"category"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Level    pulumi.StringPtrInput `pulumi:"level"`
}

func (LogThreatWeightWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightWeb)(nil)).Elem()
}

func (i LogThreatWeightWebArgs) ToLogThreatWeightWebOutput() LogThreatWeightWebOutput {
	return i.ToLogThreatWeightWebOutputWithContext(context.Background())
}

func (i LogThreatWeightWebArgs) ToLogThreatWeightWebOutputWithContext(ctx context.Context) LogThreatWeightWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightWebOutput)
}

func (i LogThreatWeightWebArgs) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightWeb] {
	return pulumix.Output[LogThreatWeightWeb]{
		OutputState: i.ToLogThreatWeightWebOutputWithContext(ctx).OutputState,
	}
}

// LogThreatWeightWebArrayInput is an input type that accepts LogThreatWeightWebArray and LogThreatWeightWebArrayOutput values.
// You can construct a concrete instance of `LogThreatWeightWebArrayInput` via:
//
//	LogThreatWeightWebArray{ LogThreatWeightWebArgs{...} }
type LogThreatWeightWebArrayInput interface {
	pulumi.Input

	ToLogThreatWeightWebArrayOutput() LogThreatWeightWebArrayOutput
	ToLogThreatWeightWebArrayOutputWithContext(context.Context) LogThreatWeightWebArrayOutput
}

type LogThreatWeightWebArray []LogThreatWeightWebInput

func (LogThreatWeightWebArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightWeb)(nil)).Elem()
}

func (i LogThreatWeightWebArray) ToLogThreatWeightWebArrayOutput() LogThreatWeightWebArrayOutput {
	return i.ToLogThreatWeightWebArrayOutputWithContext(context.Background())
}

func (i LogThreatWeightWebArray) ToLogThreatWeightWebArrayOutputWithContext(ctx context.Context) LogThreatWeightWebArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogThreatWeightWebArrayOutput)
}

func (i LogThreatWeightWebArray) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightWeb] {
	return pulumix.Output[[]LogThreatWeightWeb]{
		OutputState: i.ToLogThreatWeightWebArrayOutputWithContext(ctx).OutputState,
	}
}

type LogThreatWeightWebOutput struct{ *pulumi.OutputState }

func (LogThreatWeightWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogThreatWeightWeb)(nil)).Elem()
}

func (o LogThreatWeightWebOutput) ToLogThreatWeightWebOutput() LogThreatWeightWebOutput {
	return o
}

func (o LogThreatWeightWebOutput) ToLogThreatWeightWebOutputWithContext(ctx context.Context) LogThreatWeightWebOutput {
	return o
}

func (o LogThreatWeightWebOutput) ToOutput(ctx context.Context) pulumix.Output[LogThreatWeightWeb] {
	return pulumix.Output[LogThreatWeightWeb]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightWebOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightWeb) *int { return v.Category }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightWebOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogThreatWeightWeb) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o LogThreatWeightWebOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogThreatWeightWeb) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LogThreatWeightWebArrayOutput struct{ *pulumi.OutputState }

func (LogThreatWeightWebArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogThreatWeightWeb)(nil)).Elem()
}

func (o LogThreatWeightWebArrayOutput) ToLogThreatWeightWebArrayOutput() LogThreatWeightWebArrayOutput {
	return o
}

func (o LogThreatWeightWebArrayOutput) ToLogThreatWeightWebArrayOutputWithContext(ctx context.Context) LogThreatWeightWebArrayOutput {
	return o
}

func (o LogThreatWeightWebArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogThreatWeightWeb] {
	return pulumix.Output[[]LogThreatWeightWeb]{
		OutputState: o.OutputState,
	}
}

func (o LogThreatWeightWebArrayOutput) Index(i pulumi.IntInput) LogThreatWeightWebOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogThreatWeightWeb {
		return vs[0].([]LogThreatWeightWeb)[vs[1].(int)]
	}).(LogThreatWeightWebOutput)
}

type LogWebtrendsFilterFreeStyle struct {
	Category   *string `pulumi:"category"`
	Filter     *string `pulumi:"filter"`
	FilterType *string `pulumi:"filterType"`
	Id         *int    `pulumi:"id"`
}

// LogWebtrendsFilterFreeStyleInput is an input type that accepts LogWebtrendsFilterFreeStyleArgs and LogWebtrendsFilterFreeStyleOutput values.
// You can construct a concrete instance of `LogWebtrendsFilterFreeStyleInput` via:
//
//	LogWebtrendsFilterFreeStyleArgs{...}
type LogWebtrendsFilterFreeStyleInput interface {
	pulumi.Input

	ToLogWebtrendsFilterFreeStyleOutput() LogWebtrendsFilterFreeStyleOutput
	ToLogWebtrendsFilterFreeStyleOutputWithContext(context.Context) LogWebtrendsFilterFreeStyleOutput
}

type LogWebtrendsFilterFreeStyleArgs struct {
	Category   pulumi.StringPtrInput `pulumi:"category"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	FilterType pulumi.StringPtrInput `pulumi:"filterType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
}

func (LogWebtrendsFilterFreeStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogWebtrendsFilterFreeStyle)(nil)).Elem()
}

func (i LogWebtrendsFilterFreeStyleArgs) ToLogWebtrendsFilterFreeStyleOutput() LogWebtrendsFilterFreeStyleOutput {
	return i.ToLogWebtrendsFilterFreeStyleOutputWithContext(context.Background())
}

func (i LogWebtrendsFilterFreeStyleArgs) ToLogWebtrendsFilterFreeStyleOutputWithContext(ctx context.Context) LogWebtrendsFilterFreeStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsFilterFreeStyleOutput)
}

func (i LogWebtrendsFilterFreeStyleArgs) ToOutput(ctx context.Context) pulumix.Output[LogWebtrendsFilterFreeStyle] {
	return pulumix.Output[LogWebtrendsFilterFreeStyle]{
		OutputState: i.ToLogWebtrendsFilterFreeStyleOutputWithContext(ctx).OutputState,
	}
}

// LogWebtrendsFilterFreeStyleArrayInput is an input type that accepts LogWebtrendsFilterFreeStyleArray and LogWebtrendsFilterFreeStyleArrayOutput values.
// You can construct a concrete instance of `LogWebtrendsFilterFreeStyleArrayInput` via:
//
//	LogWebtrendsFilterFreeStyleArray{ LogWebtrendsFilterFreeStyleArgs{...} }
type LogWebtrendsFilterFreeStyleArrayInput interface {
	pulumi.Input

	ToLogWebtrendsFilterFreeStyleArrayOutput() LogWebtrendsFilterFreeStyleArrayOutput
	ToLogWebtrendsFilterFreeStyleArrayOutputWithContext(context.Context) LogWebtrendsFilterFreeStyleArrayOutput
}

type LogWebtrendsFilterFreeStyleArray []LogWebtrendsFilterFreeStyleInput

func (LogWebtrendsFilterFreeStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogWebtrendsFilterFreeStyle)(nil)).Elem()
}

func (i LogWebtrendsFilterFreeStyleArray) ToLogWebtrendsFilterFreeStyleArrayOutput() LogWebtrendsFilterFreeStyleArrayOutput {
	return i.ToLogWebtrendsFilterFreeStyleArrayOutputWithContext(context.Background())
}

func (i LogWebtrendsFilterFreeStyleArray) ToLogWebtrendsFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogWebtrendsFilterFreeStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsFilterFreeStyleArrayOutput)
}

func (i LogWebtrendsFilterFreeStyleArray) ToOutput(ctx context.Context) pulumix.Output[[]LogWebtrendsFilterFreeStyle] {
	return pulumix.Output[[]LogWebtrendsFilterFreeStyle]{
		OutputState: i.ToLogWebtrendsFilterFreeStyleArrayOutputWithContext(ctx).OutputState,
	}
}

type LogWebtrendsFilterFreeStyleOutput struct{ *pulumi.OutputState }

func (LogWebtrendsFilterFreeStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogWebtrendsFilterFreeStyle)(nil)).Elem()
}

func (o LogWebtrendsFilterFreeStyleOutput) ToLogWebtrendsFilterFreeStyleOutput() LogWebtrendsFilterFreeStyleOutput {
	return o
}

func (o LogWebtrendsFilterFreeStyleOutput) ToLogWebtrendsFilterFreeStyleOutputWithContext(ctx context.Context) LogWebtrendsFilterFreeStyleOutput {
	return o
}

func (o LogWebtrendsFilterFreeStyleOutput) ToOutput(ctx context.Context) pulumix.Output[LogWebtrendsFilterFreeStyle] {
	return pulumix.Output[LogWebtrendsFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogWebtrendsFilterFreeStyleOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogWebtrendsFilterFreeStyle) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterFreeStyleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogWebtrendsFilterFreeStyle) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterFreeStyleOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogWebtrendsFilterFreeStyle) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterFreeStyleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogWebtrendsFilterFreeStyle) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type LogWebtrendsFilterFreeStyleArrayOutput struct{ *pulumi.OutputState }

func (LogWebtrendsFilterFreeStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogWebtrendsFilterFreeStyle)(nil)).Elem()
}

func (o LogWebtrendsFilterFreeStyleArrayOutput) ToLogWebtrendsFilterFreeStyleArrayOutput() LogWebtrendsFilterFreeStyleArrayOutput {
	return o
}

func (o LogWebtrendsFilterFreeStyleArrayOutput) ToLogWebtrendsFilterFreeStyleArrayOutputWithContext(ctx context.Context) LogWebtrendsFilterFreeStyleArrayOutput {
	return o
}

func (o LogWebtrendsFilterFreeStyleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LogWebtrendsFilterFreeStyle] {
	return pulumix.Output[[]LogWebtrendsFilterFreeStyle]{
		OutputState: o.OutputState,
	}
}

func (o LogWebtrendsFilterFreeStyleArrayOutput) Index(i pulumi.IntInput) LogWebtrendsFilterFreeStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogWebtrendsFilterFreeStyle {
		return vs[0].([]LogWebtrendsFilterFreeStyle)[vs[1].(int)]
	}).(LogWebtrendsFilterFreeStyleOutput)
}

type NsxtServiceChainServiceIndex struct {
	Id           *int    `pulumi:"id"`
	Name         *string `pulumi:"name"`
	ReverseIndex *int    `pulumi:"reverseIndex"`
	Vd           *string `pulumi:"vd"`
}

// NsxtServiceChainServiceIndexInput is an input type that accepts NsxtServiceChainServiceIndexArgs and NsxtServiceChainServiceIndexOutput values.
// You can construct a concrete instance of `NsxtServiceChainServiceIndexInput` via:
//
//	NsxtServiceChainServiceIndexArgs{...}
type NsxtServiceChainServiceIndexInput interface {
	pulumi.Input

	ToNsxtServiceChainServiceIndexOutput() NsxtServiceChainServiceIndexOutput
	ToNsxtServiceChainServiceIndexOutputWithContext(context.Context) NsxtServiceChainServiceIndexOutput
}

type NsxtServiceChainServiceIndexArgs struct {
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	ReverseIndex pulumi.IntPtrInput    `pulumi:"reverseIndex"`
	Vd           pulumi.StringPtrInput `pulumi:"vd"`
}

func (NsxtServiceChainServiceIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtServiceChainServiceIndex)(nil)).Elem()
}

func (i NsxtServiceChainServiceIndexArgs) ToNsxtServiceChainServiceIndexOutput() NsxtServiceChainServiceIndexOutput {
	return i.ToNsxtServiceChainServiceIndexOutputWithContext(context.Background())
}

func (i NsxtServiceChainServiceIndexArgs) ToNsxtServiceChainServiceIndexOutputWithContext(ctx context.Context) NsxtServiceChainServiceIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtServiceChainServiceIndexOutput)
}

func (i NsxtServiceChainServiceIndexArgs) ToOutput(ctx context.Context) pulumix.Output[NsxtServiceChainServiceIndex] {
	return pulumix.Output[NsxtServiceChainServiceIndex]{
		OutputState: i.ToNsxtServiceChainServiceIndexOutputWithContext(ctx).OutputState,
	}
}

// NsxtServiceChainServiceIndexArrayInput is an input type that accepts NsxtServiceChainServiceIndexArray and NsxtServiceChainServiceIndexArrayOutput values.
// You can construct a concrete instance of `NsxtServiceChainServiceIndexArrayInput` via:
//
//	NsxtServiceChainServiceIndexArray{ NsxtServiceChainServiceIndexArgs{...} }
type NsxtServiceChainServiceIndexArrayInput interface {
	pulumi.Input

	ToNsxtServiceChainServiceIndexArrayOutput() NsxtServiceChainServiceIndexArrayOutput
	ToNsxtServiceChainServiceIndexArrayOutputWithContext(context.Context) NsxtServiceChainServiceIndexArrayOutput
}

type NsxtServiceChainServiceIndexArray []NsxtServiceChainServiceIndexInput

func (NsxtServiceChainServiceIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtServiceChainServiceIndex)(nil)).Elem()
}

func (i NsxtServiceChainServiceIndexArray) ToNsxtServiceChainServiceIndexArrayOutput() NsxtServiceChainServiceIndexArrayOutput {
	return i.ToNsxtServiceChainServiceIndexArrayOutputWithContext(context.Background())
}

func (i NsxtServiceChainServiceIndexArray) ToNsxtServiceChainServiceIndexArrayOutputWithContext(ctx context.Context) NsxtServiceChainServiceIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtServiceChainServiceIndexArrayOutput)
}

func (i NsxtServiceChainServiceIndexArray) ToOutput(ctx context.Context) pulumix.Output[[]NsxtServiceChainServiceIndex] {
	return pulumix.Output[[]NsxtServiceChainServiceIndex]{
		OutputState: i.ToNsxtServiceChainServiceIndexArrayOutputWithContext(ctx).OutputState,
	}
}

type NsxtServiceChainServiceIndexOutput struct{ *pulumi.OutputState }

func (NsxtServiceChainServiceIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsxtServiceChainServiceIndex)(nil)).Elem()
}

func (o NsxtServiceChainServiceIndexOutput) ToNsxtServiceChainServiceIndexOutput() NsxtServiceChainServiceIndexOutput {
	return o
}

func (o NsxtServiceChainServiceIndexOutput) ToNsxtServiceChainServiceIndexOutputWithContext(ctx context.Context) NsxtServiceChainServiceIndexOutput {
	return o
}

func (o NsxtServiceChainServiceIndexOutput) ToOutput(ctx context.Context) pulumix.Output[NsxtServiceChainServiceIndex] {
	return pulumix.Output[NsxtServiceChainServiceIndex]{
		OutputState: o.OutputState,
	}
}

func (o NsxtServiceChainServiceIndexOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtServiceChainServiceIndex) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o NsxtServiceChainServiceIndexOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtServiceChainServiceIndex) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NsxtServiceChainServiceIndexOutput) ReverseIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsxtServiceChainServiceIndex) *int { return v.ReverseIndex }).(pulumi.IntPtrOutput)
}

func (o NsxtServiceChainServiceIndexOutput) Vd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsxtServiceChainServiceIndex) *string { return v.Vd }).(pulumi.StringPtrOutput)
}

type NsxtServiceChainServiceIndexArrayOutput struct{ *pulumi.OutputState }

func (NsxtServiceChainServiceIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsxtServiceChainServiceIndex)(nil)).Elem()
}

func (o NsxtServiceChainServiceIndexArrayOutput) ToNsxtServiceChainServiceIndexArrayOutput() NsxtServiceChainServiceIndexArrayOutput {
	return o
}

func (o NsxtServiceChainServiceIndexArrayOutput) ToNsxtServiceChainServiceIndexArrayOutputWithContext(ctx context.Context) NsxtServiceChainServiceIndexArrayOutput {
	return o
}

func (o NsxtServiceChainServiceIndexArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NsxtServiceChainServiceIndex] {
	return pulumix.Output[[]NsxtServiceChainServiceIndex]{
		OutputState: o.OutputState,
	}
}

func (o NsxtServiceChainServiceIndexArrayOutput) Index(i pulumi.IntInput) NsxtServiceChainServiceIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsxtServiceChainServiceIndex {
		return vs[0].([]NsxtServiceChainServiceIndex)[vs[1].(int)]
	}).(NsxtServiceChainServiceIndexOutput)
}

type ReportChartCategorySeries struct {
	Databind *string `pulumi:"databind"`
	FontSize *int    `pulumi:"fontSize"`
}

// ReportChartCategorySeriesInput is an input type that accepts ReportChartCategorySeriesArgs and ReportChartCategorySeriesOutput values.
// You can construct a concrete instance of `ReportChartCategorySeriesInput` via:
//
//	ReportChartCategorySeriesArgs{...}
type ReportChartCategorySeriesInput interface {
	pulumi.Input

	ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput
	ToReportChartCategorySeriesOutputWithContext(context.Context) ReportChartCategorySeriesOutput
}

type ReportChartCategorySeriesArgs struct {
	Databind pulumi.StringPtrInput `pulumi:"databind"`
	FontSize pulumi.IntPtrInput    `pulumi:"fontSize"`
}

func (ReportChartCategorySeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartCategorySeries)(nil)).Elem()
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput {
	return i.ToReportChartCategorySeriesOutputWithContext(context.Background())
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesOutputWithContext(ctx context.Context) ReportChartCategorySeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesOutput)
}

func (i ReportChartCategorySeriesArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartCategorySeries] {
	return pulumix.Output[ReportChartCategorySeries]{
		OutputState: i.ToReportChartCategorySeriesOutputWithContext(ctx).OutputState,
	}
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return i.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartCategorySeriesArgs) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesOutput).ToReportChartCategorySeriesPtrOutputWithContext(ctx)
}

// ReportChartCategorySeriesPtrInput is an input type that accepts ReportChartCategorySeriesArgs, ReportChartCategorySeriesPtr and ReportChartCategorySeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartCategorySeriesPtrInput` via:
//
//	        ReportChartCategorySeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartCategorySeriesPtrInput interface {
	pulumi.Input

	ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput
	ToReportChartCategorySeriesPtrOutputWithContext(context.Context) ReportChartCategorySeriesPtrOutput
}

type reportChartCategorySeriesPtrType ReportChartCategorySeriesArgs

func ReportChartCategorySeriesPtr(v *ReportChartCategorySeriesArgs) ReportChartCategorySeriesPtrInput {
	return (*reportChartCategorySeriesPtrType)(v)
}

func (*reportChartCategorySeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartCategorySeries)(nil)).Elem()
}

func (i *reportChartCategorySeriesPtrType) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return i.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartCategorySeriesPtrType) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartCategorySeriesPtrOutput)
}

func (i *reportChartCategorySeriesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportChartCategorySeries] {
	return pulumix.Output[*ReportChartCategorySeries]{
		OutputState: i.ToReportChartCategorySeriesPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportChartCategorySeriesOutput struct{ *pulumi.OutputState }

func (ReportChartCategorySeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartCategorySeries)(nil)).Elem()
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesOutput() ReportChartCategorySeriesOutput {
	return o
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesOutputWithContext(ctx context.Context) ReportChartCategorySeriesOutput {
	return o
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return o.ToReportChartCategorySeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartCategorySeriesOutput) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartCategorySeries) *ReportChartCategorySeries {
		return &v
	}).(ReportChartCategorySeriesPtrOutput)
}

func (o ReportChartCategorySeriesOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartCategorySeries] {
	return pulumix.Output[ReportChartCategorySeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartCategorySeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartCategorySeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

func (o ReportChartCategorySeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartCategorySeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

type ReportChartCategorySeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartCategorySeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartCategorySeries)(nil)).Elem()
}

func (o ReportChartCategorySeriesPtrOutput) ToReportChartCategorySeriesPtrOutput() ReportChartCategorySeriesPtrOutput {
	return o
}

func (o ReportChartCategorySeriesPtrOutput) ToReportChartCategorySeriesPtrOutputWithContext(ctx context.Context) ReportChartCategorySeriesPtrOutput {
	return o
}

func (o ReportChartCategorySeriesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportChartCategorySeries] {
	return pulumix.Output[*ReportChartCategorySeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartCategorySeriesPtrOutput) Elem() ReportChartCategorySeriesOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) ReportChartCategorySeries {
		if v != nil {
			return *v
		}
		var ret ReportChartCategorySeries
		return ret
	}).(ReportChartCategorySeriesOutput)
}

func (o ReportChartCategorySeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartCategorySeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartCategorySeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

type ReportChartColumn struct {
	DetailUnit  *string                    `pulumi:"detailUnit"`
	DetailValue *string                    `pulumi:"detailValue"`
	FooterUnit  *string                    `pulumi:"footerUnit"`
	FooterValue *string                    `pulumi:"footerValue"`
	HeaderValue *string                    `pulumi:"headerValue"`
	Id          *int                       `pulumi:"id"`
	Mappings    []ReportChartColumnMapping `pulumi:"mappings"`
}

// ReportChartColumnInput is an input type that accepts ReportChartColumnArgs and ReportChartColumnOutput values.
// You can construct a concrete instance of `ReportChartColumnInput` via:
//
//	ReportChartColumnArgs{...}
type ReportChartColumnInput interface {
	pulumi.Input

	ToReportChartColumnOutput() ReportChartColumnOutput
	ToReportChartColumnOutputWithContext(context.Context) ReportChartColumnOutput
}

type ReportChartColumnArgs struct {
	DetailUnit  pulumi.StringPtrInput              `pulumi:"detailUnit"`
	DetailValue pulumi.StringPtrInput              `pulumi:"detailValue"`
	FooterUnit  pulumi.StringPtrInput              `pulumi:"footerUnit"`
	FooterValue pulumi.StringPtrInput              `pulumi:"footerValue"`
	HeaderValue pulumi.StringPtrInput              `pulumi:"headerValue"`
	Id          pulumi.IntPtrInput                 `pulumi:"id"`
	Mappings    ReportChartColumnMappingArrayInput `pulumi:"mappings"`
}

func (ReportChartColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumn)(nil)).Elem()
}

func (i ReportChartColumnArgs) ToReportChartColumnOutput() ReportChartColumnOutput {
	return i.ToReportChartColumnOutputWithContext(context.Background())
}

func (i ReportChartColumnArgs) ToReportChartColumnOutputWithContext(ctx context.Context) ReportChartColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnOutput)
}

func (i ReportChartColumnArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartColumn] {
	return pulumix.Output[ReportChartColumn]{
		OutputState: i.ToReportChartColumnOutputWithContext(ctx).OutputState,
	}
}

// ReportChartColumnArrayInput is an input type that accepts ReportChartColumnArray and ReportChartColumnArrayOutput values.
// You can construct a concrete instance of `ReportChartColumnArrayInput` via:
//
//	ReportChartColumnArray{ ReportChartColumnArgs{...} }
type ReportChartColumnArrayInput interface {
	pulumi.Input

	ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput
	ToReportChartColumnArrayOutputWithContext(context.Context) ReportChartColumnArrayOutput
}

type ReportChartColumnArray []ReportChartColumnInput

func (ReportChartColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumn)(nil)).Elem()
}

func (i ReportChartColumnArray) ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput {
	return i.ToReportChartColumnArrayOutputWithContext(context.Background())
}

func (i ReportChartColumnArray) ToReportChartColumnArrayOutputWithContext(ctx context.Context) ReportChartColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnArrayOutput)
}

func (i ReportChartColumnArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartColumn] {
	return pulumix.Output[[]ReportChartColumn]{
		OutputState: i.ToReportChartColumnArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportChartColumnOutput struct{ *pulumi.OutputState }

func (ReportChartColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumn)(nil)).Elem()
}

func (o ReportChartColumnOutput) ToReportChartColumnOutput() ReportChartColumnOutput {
	return o
}

func (o ReportChartColumnOutput) ToReportChartColumnOutputWithContext(ctx context.Context) ReportChartColumnOutput {
	return o
}

func (o ReportChartColumnOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartColumn] {
	return pulumix.Output[ReportChartColumn]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartColumnOutput) DetailUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.DetailUnit }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnOutput) DetailValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.DetailValue }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnOutput) FooterUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.FooterUnit }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnOutput) FooterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.FooterValue }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartColumn) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportChartColumnOutput) Mappings() ReportChartColumnMappingArrayOutput {
	return o.ApplyT(func(v ReportChartColumn) []ReportChartColumnMapping { return v.Mappings }).(ReportChartColumnMappingArrayOutput)
}

type ReportChartColumnArrayOutput struct{ *pulumi.OutputState }

func (ReportChartColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumn)(nil)).Elem()
}

func (o ReportChartColumnArrayOutput) ToReportChartColumnArrayOutput() ReportChartColumnArrayOutput {
	return o
}

func (o ReportChartColumnArrayOutput) ToReportChartColumnArrayOutputWithContext(ctx context.Context) ReportChartColumnArrayOutput {
	return o
}

func (o ReportChartColumnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartColumn] {
	return pulumix.Output[[]ReportChartColumn]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartColumnArrayOutput) Index(i pulumi.IntInput) ReportChartColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartColumn {
		return vs[0].([]ReportChartColumn)[vs[1].(int)]
	}).(ReportChartColumnOutput)
}

type ReportChartColumnMapping struct {
	Displayname *string `pulumi:"displayname"`
	Id          *int    `pulumi:"id"`
	Op          *string `pulumi:"op"`
	Value1      *string `pulumi:"value1"`
	Value2      *string `pulumi:"value2"`
	ValueType   *string `pulumi:"valueType"`
}

// ReportChartColumnMappingInput is an input type that accepts ReportChartColumnMappingArgs and ReportChartColumnMappingOutput values.
// You can construct a concrete instance of `ReportChartColumnMappingInput` via:
//
//	ReportChartColumnMappingArgs{...}
type ReportChartColumnMappingInput interface {
	pulumi.Input

	ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput
	ToReportChartColumnMappingOutputWithContext(context.Context) ReportChartColumnMappingOutput
}

type ReportChartColumnMappingArgs struct {
	Displayname pulumi.StringPtrInput `pulumi:"displayname"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Op          pulumi.StringPtrInput `pulumi:"op"`
	Value1      pulumi.StringPtrInput `pulumi:"value1"`
	Value2      pulumi.StringPtrInput `pulumi:"value2"`
	ValueType   pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ReportChartColumnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumnMapping)(nil)).Elem()
}

func (i ReportChartColumnMappingArgs) ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput {
	return i.ToReportChartColumnMappingOutputWithContext(context.Background())
}

func (i ReportChartColumnMappingArgs) ToReportChartColumnMappingOutputWithContext(ctx context.Context) ReportChartColumnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnMappingOutput)
}

func (i ReportChartColumnMappingArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartColumnMapping] {
	return pulumix.Output[ReportChartColumnMapping]{
		OutputState: i.ToReportChartColumnMappingOutputWithContext(ctx).OutputState,
	}
}

// ReportChartColumnMappingArrayInput is an input type that accepts ReportChartColumnMappingArray and ReportChartColumnMappingArrayOutput values.
// You can construct a concrete instance of `ReportChartColumnMappingArrayInput` via:
//
//	ReportChartColumnMappingArray{ ReportChartColumnMappingArgs{...} }
type ReportChartColumnMappingArrayInput interface {
	pulumi.Input

	ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput
	ToReportChartColumnMappingArrayOutputWithContext(context.Context) ReportChartColumnMappingArrayOutput
}

type ReportChartColumnMappingArray []ReportChartColumnMappingInput

func (ReportChartColumnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumnMapping)(nil)).Elem()
}

func (i ReportChartColumnMappingArray) ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput {
	return i.ToReportChartColumnMappingArrayOutputWithContext(context.Background())
}

func (i ReportChartColumnMappingArray) ToReportChartColumnMappingArrayOutputWithContext(ctx context.Context) ReportChartColumnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartColumnMappingArrayOutput)
}

func (i ReportChartColumnMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartColumnMapping] {
	return pulumix.Output[[]ReportChartColumnMapping]{
		OutputState: i.ToReportChartColumnMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportChartColumnMappingOutput struct{ *pulumi.OutputState }

func (ReportChartColumnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartColumnMapping)(nil)).Elem()
}

func (o ReportChartColumnMappingOutput) ToReportChartColumnMappingOutput() ReportChartColumnMappingOutput {
	return o
}

func (o ReportChartColumnMappingOutput) ToReportChartColumnMappingOutputWithContext(ctx context.Context) ReportChartColumnMappingOutput {
	return o
}

func (o ReportChartColumnMappingOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartColumnMapping] {
	return pulumix.Output[ReportChartColumnMapping]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartColumnMappingOutput) Displayname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Displayname }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnMappingOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportChartColumnMappingOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Op }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnMappingOutput) Value1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Value1 }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnMappingOutput) Value2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.Value2 }).(pulumi.StringPtrOutput)
}

func (o ReportChartColumnMappingOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartColumnMapping) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ReportChartColumnMappingArrayOutput struct{ *pulumi.OutputState }

func (ReportChartColumnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartColumnMapping)(nil)).Elem()
}

func (o ReportChartColumnMappingArrayOutput) ToReportChartColumnMappingArrayOutput() ReportChartColumnMappingArrayOutput {
	return o
}

func (o ReportChartColumnMappingArrayOutput) ToReportChartColumnMappingArrayOutputWithContext(ctx context.Context) ReportChartColumnMappingArrayOutput {
	return o
}

func (o ReportChartColumnMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartColumnMapping] {
	return pulumix.Output[[]ReportChartColumnMapping]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartColumnMappingArrayOutput) Index(i pulumi.IntInput) ReportChartColumnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartColumnMapping {
		return vs[0].([]ReportChartColumnMapping)[vs[1].(int)]
	}).(ReportChartColumnMappingOutput)
}

type ReportChartDrillDownChart struct {
	ChartName *string `pulumi:"chartName"`
	Id        *int    `pulumi:"id"`
	Status    *string `pulumi:"status"`
}

// ReportChartDrillDownChartInput is an input type that accepts ReportChartDrillDownChartArgs and ReportChartDrillDownChartOutput values.
// You can construct a concrete instance of `ReportChartDrillDownChartInput` via:
//
//	ReportChartDrillDownChartArgs{...}
type ReportChartDrillDownChartInput interface {
	pulumi.Input

	ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput
	ToReportChartDrillDownChartOutputWithContext(context.Context) ReportChartDrillDownChartOutput
}

type ReportChartDrillDownChartArgs struct {
	ChartName pulumi.StringPtrInput `pulumi:"chartName"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (ReportChartDrillDownChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartDrillDownChart)(nil)).Elem()
}

func (i ReportChartDrillDownChartArgs) ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput {
	return i.ToReportChartDrillDownChartOutputWithContext(context.Background())
}

func (i ReportChartDrillDownChartArgs) ToReportChartDrillDownChartOutputWithContext(ctx context.Context) ReportChartDrillDownChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartDrillDownChartOutput)
}

func (i ReportChartDrillDownChartArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartDrillDownChart] {
	return pulumix.Output[ReportChartDrillDownChart]{
		OutputState: i.ToReportChartDrillDownChartOutputWithContext(ctx).OutputState,
	}
}

// ReportChartDrillDownChartArrayInput is an input type that accepts ReportChartDrillDownChartArray and ReportChartDrillDownChartArrayOutput values.
// You can construct a concrete instance of `ReportChartDrillDownChartArrayInput` via:
//
//	ReportChartDrillDownChartArray{ ReportChartDrillDownChartArgs{...} }
type ReportChartDrillDownChartArrayInput interface {
	pulumi.Input

	ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput
	ToReportChartDrillDownChartArrayOutputWithContext(context.Context) ReportChartDrillDownChartArrayOutput
}

type ReportChartDrillDownChartArray []ReportChartDrillDownChartInput

func (ReportChartDrillDownChartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartDrillDownChart)(nil)).Elem()
}

func (i ReportChartDrillDownChartArray) ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput {
	return i.ToReportChartDrillDownChartArrayOutputWithContext(context.Background())
}

func (i ReportChartDrillDownChartArray) ToReportChartDrillDownChartArrayOutputWithContext(ctx context.Context) ReportChartDrillDownChartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartDrillDownChartArrayOutput)
}

func (i ReportChartDrillDownChartArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartDrillDownChart] {
	return pulumix.Output[[]ReportChartDrillDownChart]{
		OutputState: i.ToReportChartDrillDownChartArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportChartDrillDownChartOutput struct{ *pulumi.OutputState }

func (ReportChartDrillDownChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartDrillDownChart)(nil)).Elem()
}

func (o ReportChartDrillDownChartOutput) ToReportChartDrillDownChartOutput() ReportChartDrillDownChartOutput {
	return o
}

func (o ReportChartDrillDownChartOutput) ToReportChartDrillDownChartOutputWithContext(ctx context.Context) ReportChartDrillDownChartOutput {
	return o
}

func (o ReportChartDrillDownChartOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartDrillDownChart] {
	return pulumix.Output[ReportChartDrillDownChart]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartDrillDownChartOutput) ChartName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *string { return v.ChartName }).(pulumi.StringPtrOutput)
}

func (o ReportChartDrillDownChartOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportChartDrillDownChartOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartDrillDownChart) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReportChartDrillDownChartArrayOutput struct{ *pulumi.OutputState }

func (ReportChartDrillDownChartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportChartDrillDownChart)(nil)).Elem()
}

func (o ReportChartDrillDownChartArrayOutput) ToReportChartDrillDownChartArrayOutput() ReportChartDrillDownChartArrayOutput {
	return o
}

func (o ReportChartDrillDownChartArrayOutput) ToReportChartDrillDownChartArrayOutputWithContext(ctx context.Context) ReportChartDrillDownChartArrayOutput {
	return o
}

func (o ReportChartDrillDownChartArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportChartDrillDownChart] {
	return pulumix.Output[[]ReportChartDrillDownChart]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartDrillDownChartArrayOutput) Index(i pulumi.IntInput) ReportChartDrillDownChartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportChartDrillDownChart {
		return vs[0].([]ReportChartDrillDownChart)[vs[1].(int)]
	}).(ReportChartDrillDownChartOutput)
}

type ReportChartValueSeries struct {
	Databind *string `pulumi:"databind"`
}

// ReportChartValueSeriesInput is an input type that accepts ReportChartValueSeriesArgs and ReportChartValueSeriesOutput values.
// You can construct a concrete instance of `ReportChartValueSeriesInput` via:
//
//	ReportChartValueSeriesArgs{...}
type ReportChartValueSeriesInput interface {
	pulumi.Input

	ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput
	ToReportChartValueSeriesOutputWithContext(context.Context) ReportChartValueSeriesOutput
}

type ReportChartValueSeriesArgs struct {
	Databind pulumi.StringPtrInput `pulumi:"databind"`
}

func (ReportChartValueSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartValueSeries)(nil)).Elem()
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput {
	return i.ToReportChartValueSeriesOutputWithContext(context.Background())
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesOutputWithContext(ctx context.Context) ReportChartValueSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesOutput)
}

func (i ReportChartValueSeriesArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartValueSeries] {
	return pulumix.Output[ReportChartValueSeries]{
		OutputState: i.ToReportChartValueSeriesOutputWithContext(ctx).OutputState,
	}
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return i.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartValueSeriesArgs) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesOutput).ToReportChartValueSeriesPtrOutputWithContext(ctx)
}

// ReportChartValueSeriesPtrInput is an input type that accepts ReportChartValueSeriesArgs, ReportChartValueSeriesPtr and ReportChartValueSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartValueSeriesPtrInput` via:
//
//	        ReportChartValueSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartValueSeriesPtrInput interface {
	pulumi.Input

	ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput
	ToReportChartValueSeriesPtrOutputWithContext(context.Context) ReportChartValueSeriesPtrOutput
}

type reportChartValueSeriesPtrType ReportChartValueSeriesArgs

func ReportChartValueSeriesPtr(v *ReportChartValueSeriesArgs) ReportChartValueSeriesPtrInput {
	return (*reportChartValueSeriesPtrType)(v)
}

func (*reportChartValueSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartValueSeries)(nil)).Elem()
}

func (i *reportChartValueSeriesPtrType) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return i.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartValueSeriesPtrType) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartValueSeriesPtrOutput)
}

func (i *reportChartValueSeriesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportChartValueSeries] {
	return pulumix.Output[*ReportChartValueSeries]{
		OutputState: i.ToReportChartValueSeriesPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportChartValueSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartValueSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartValueSeries)(nil)).Elem()
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesOutput() ReportChartValueSeriesOutput {
	return o
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesOutputWithContext(ctx context.Context) ReportChartValueSeriesOutput {
	return o
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return o.ToReportChartValueSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartValueSeriesOutput) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartValueSeries) *ReportChartValueSeries {
		return &v
	}).(ReportChartValueSeriesPtrOutput)
}

func (o ReportChartValueSeriesOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartValueSeries] {
	return pulumix.Output[ReportChartValueSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartValueSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartValueSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

type ReportChartValueSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartValueSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartValueSeries)(nil)).Elem()
}

func (o ReportChartValueSeriesPtrOutput) ToReportChartValueSeriesPtrOutput() ReportChartValueSeriesPtrOutput {
	return o
}

func (o ReportChartValueSeriesPtrOutput) ToReportChartValueSeriesPtrOutputWithContext(ctx context.Context) ReportChartValueSeriesPtrOutput {
	return o
}

func (o ReportChartValueSeriesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportChartValueSeries] {
	return pulumix.Output[*ReportChartValueSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartValueSeriesPtrOutput) Elem() ReportChartValueSeriesOutput {
	return o.ApplyT(func(v *ReportChartValueSeries) ReportChartValueSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartValueSeries
		return ret
	}).(ReportChartValueSeriesOutput)
}

func (o ReportChartValueSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartValueSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

type ReportChartXSeries struct {
	Caption         *string `pulumi:"caption"`
	CaptionFontSize *int    `pulumi:"captionFontSize"`
	Databind        *string `pulumi:"databind"`
	FontSize        *int    `pulumi:"fontSize"`
	IsCategory      *string `pulumi:"isCategory"`
	LabelAngle      *string `pulumi:"labelAngle"`
	ScaleDirection  *string `pulumi:"scaleDirection"`
	ScaleFormat     *string `pulumi:"scaleFormat"`
	ScaleStep       *int    `pulumi:"scaleStep"`
	ScaleUnit       *string `pulumi:"scaleUnit"`
	Unit            *string `pulumi:"unit"`
}

// ReportChartXSeriesInput is an input type that accepts ReportChartXSeriesArgs and ReportChartXSeriesOutput values.
// You can construct a concrete instance of `ReportChartXSeriesInput` via:
//
//	ReportChartXSeriesArgs{...}
type ReportChartXSeriesInput interface {
	pulumi.Input

	ToReportChartXSeriesOutput() ReportChartXSeriesOutput
	ToReportChartXSeriesOutputWithContext(context.Context) ReportChartXSeriesOutput
}

type ReportChartXSeriesArgs struct {
	Caption         pulumi.StringPtrInput `pulumi:"caption"`
	CaptionFontSize pulumi.IntPtrInput    `pulumi:"captionFontSize"`
	Databind        pulumi.StringPtrInput `pulumi:"databind"`
	FontSize        pulumi.IntPtrInput    `pulumi:"fontSize"`
	IsCategory      pulumi.StringPtrInput `pulumi:"isCategory"`
	LabelAngle      pulumi.StringPtrInput `pulumi:"labelAngle"`
	ScaleDirection  pulumi.StringPtrInput `pulumi:"scaleDirection"`
	ScaleFormat     pulumi.StringPtrInput `pulumi:"scaleFormat"`
	ScaleStep       pulumi.IntPtrInput    `pulumi:"scaleStep"`
	ScaleUnit       pulumi.StringPtrInput `pulumi:"scaleUnit"`
	Unit            pulumi.StringPtrInput `pulumi:"unit"`
}

func (ReportChartXSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartXSeries)(nil)).Elem()
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesOutput() ReportChartXSeriesOutput {
	return i.ToReportChartXSeriesOutputWithContext(context.Background())
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesOutputWithContext(ctx context.Context) ReportChartXSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesOutput)
}

func (i ReportChartXSeriesArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartXSeries] {
	return pulumix.Output[ReportChartXSeries]{
		OutputState: i.ToReportChartXSeriesOutputWithContext(ctx).OutputState,
	}
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return i.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartXSeriesArgs) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesOutput).ToReportChartXSeriesPtrOutputWithContext(ctx)
}

// ReportChartXSeriesPtrInput is an input type that accepts ReportChartXSeriesArgs, ReportChartXSeriesPtr and ReportChartXSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartXSeriesPtrInput` via:
//
//	        ReportChartXSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartXSeriesPtrInput interface {
	pulumi.Input

	ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput
	ToReportChartXSeriesPtrOutputWithContext(context.Context) ReportChartXSeriesPtrOutput
}

type reportChartXSeriesPtrType ReportChartXSeriesArgs

func ReportChartXSeriesPtr(v *ReportChartXSeriesArgs) ReportChartXSeriesPtrInput {
	return (*reportChartXSeriesPtrType)(v)
}

func (*reportChartXSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartXSeries)(nil)).Elem()
}

func (i *reportChartXSeriesPtrType) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return i.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartXSeriesPtrType) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartXSeriesPtrOutput)
}

func (i *reportChartXSeriesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportChartXSeries] {
	return pulumix.Output[*ReportChartXSeries]{
		OutputState: i.ToReportChartXSeriesPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportChartXSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartXSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartXSeries)(nil)).Elem()
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesOutput() ReportChartXSeriesOutput {
	return o
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesOutputWithContext(ctx context.Context) ReportChartXSeriesOutput {
	return o
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return o.ToReportChartXSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartXSeriesOutput) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartXSeries) *ReportChartXSeries {
		return &v
	}).(ReportChartXSeriesPtrOutput)
}

func (o ReportChartXSeriesOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartXSeries] {
	return pulumix.Output[ReportChartXSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartXSeriesOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Caption }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.CaptionFontSize }).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesOutput) IsCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.IsCategory }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.LabelAngle }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) ScaleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleDirection }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) ScaleFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleFormat }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) ScaleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *int { return v.ScaleStep }).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesOutput) ScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.ScaleUnit }).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartXSeries) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ReportChartXSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartXSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartXSeries)(nil)).Elem()
}

func (o ReportChartXSeriesPtrOutput) ToReportChartXSeriesPtrOutput() ReportChartXSeriesPtrOutput {
	return o
}

func (o ReportChartXSeriesPtrOutput) ToReportChartXSeriesPtrOutputWithContext(ctx context.Context) ReportChartXSeriesPtrOutput {
	return o
}

func (o ReportChartXSeriesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportChartXSeries] {
	return pulumix.Output[*ReportChartXSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartXSeriesPtrOutput) Elem() ReportChartXSeriesOutput {
	return o.ApplyT(func(v *ReportChartXSeries) ReportChartXSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartXSeries
		return ret
	}).(ReportChartXSeriesOutput)
}

func (o ReportChartXSeriesPtrOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Caption
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.CaptionFontSize
	}).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) IsCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.IsCategory
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.LabelAngle
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) ScaleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDirection
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) ScaleFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleFormat
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) ScaleStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *int {
		if v == nil {
			return nil
		}
		return v.ScaleStep
	}).(pulumi.IntPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) ScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.ScaleUnit
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartXSeriesPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartXSeries) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type ReportChartYSeries struct {
	Caption         *string `pulumi:"caption"`
	CaptionFontSize *int    `pulumi:"captionFontSize"`
	Databind        *string `pulumi:"databind"`
	ExtraDatabind   *string `pulumi:"extraDatabind"`
	ExtraY          *string `pulumi:"extraY"`
	ExtraYLegend    *string `pulumi:"extraYLegend"`
	FontSize        *int    `pulumi:"fontSize"`
	Group           *string `pulumi:"group"`
	LabelAngle      *string `pulumi:"labelAngle"`
	Unit            *string `pulumi:"unit"`
	YLegend         *string `pulumi:"yLegend"`
}

// ReportChartYSeriesInput is an input type that accepts ReportChartYSeriesArgs and ReportChartYSeriesOutput values.
// You can construct a concrete instance of `ReportChartYSeriesInput` via:
//
//	ReportChartYSeriesArgs{...}
type ReportChartYSeriesInput interface {
	pulumi.Input

	ToReportChartYSeriesOutput() ReportChartYSeriesOutput
	ToReportChartYSeriesOutputWithContext(context.Context) ReportChartYSeriesOutput
}

type ReportChartYSeriesArgs struct {
	Caption         pulumi.StringPtrInput `pulumi:"caption"`
	CaptionFontSize pulumi.IntPtrInput    `pulumi:"captionFontSize"`
	Databind        pulumi.StringPtrInput `pulumi:"databind"`
	ExtraDatabind   pulumi.StringPtrInput `pulumi:"extraDatabind"`
	ExtraY          pulumi.StringPtrInput `pulumi:"extraY"`
	ExtraYLegend    pulumi.StringPtrInput `pulumi:"extraYLegend"`
	FontSize        pulumi.IntPtrInput    `pulumi:"fontSize"`
	Group           pulumi.StringPtrInput `pulumi:"group"`
	LabelAngle      pulumi.StringPtrInput `pulumi:"labelAngle"`
	Unit            pulumi.StringPtrInput `pulumi:"unit"`
	YLegend         pulumi.StringPtrInput `pulumi:"yLegend"`
}

func (ReportChartYSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartYSeries)(nil)).Elem()
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesOutput() ReportChartYSeriesOutput {
	return i.ToReportChartYSeriesOutputWithContext(context.Background())
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesOutputWithContext(ctx context.Context) ReportChartYSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesOutput)
}

func (i ReportChartYSeriesArgs) ToOutput(ctx context.Context) pulumix.Output[ReportChartYSeries] {
	return pulumix.Output[ReportChartYSeries]{
		OutputState: i.ToReportChartYSeriesOutputWithContext(ctx).OutputState,
	}
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return i.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (i ReportChartYSeriesArgs) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesOutput).ToReportChartYSeriesPtrOutputWithContext(ctx)
}

// ReportChartYSeriesPtrInput is an input type that accepts ReportChartYSeriesArgs, ReportChartYSeriesPtr and ReportChartYSeriesPtrOutput values.
// You can construct a concrete instance of `ReportChartYSeriesPtrInput` via:
//
//	        ReportChartYSeriesArgs{...}
//
//	or:
//
//	        nil
type ReportChartYSeriesPtrInput interface {
	pulumi.Input

	ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput
	ToReportChartYSeriesPtrOutputWithContext(context.Context) ReportChartYSeriesPtrOutput
}

type reportChartYSeriesPtrType ReportChartYSeriesArgs

func ReportChartYSeriesPtr(v *ReportChartYSeriesArgs) ReportChartYSeriesPtrInput {
	return (*reportChartYSeriesPtrType)(v)
}

func (*reportChartYSeriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartYSeries)(nil)).Elem()
}

func (i *reportChartYSeriesPtrType) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return i.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (i *reportChartYSeriesPtrType) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportChartYSeriesPtrOutput)
}

func (i *reportChartYSeriesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportChartYSeries] {
	return pulumix.Output[*ReportChartYSeries]{
		OutputState: i.ToReportChartYSeriesPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportChartYSeriesOutput struct{ *pulumi.OutputState }

func (ReportChartYSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportChartYSeries)(nil)).Elem()
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesOutput() ReportChartYSeriesOutput {
	return o
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesOutputWithContext(ctx context.Context) ReportChartYSeriesOutput {
	return o
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return o.ToReportChartYSeriesPtrOutputWithContext(context.Background())
}

func (o ReportChartYSeriesOutput) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportChartYSeries) *ReportChartYSeries {
		return &v
	}).(ReportChartYSeriesPtrOutput)
}

func (o ReportChartYSeriesOutput) ToOutput(ctx context.Context) pulumix.Output[ReportChartYSeries] {
	return pulumix.Output[ReportChartYSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartYSeriesOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Caption }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *int { return v.CaptionFontSize }).(pulumi.IntPtrOutput)
}

func (o ReportChartYSeriesOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Databind }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) ExtraDatabind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraDatabind }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) ExtraY() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraY }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) ExtraYLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.ExtraYLegend }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *int { return v.FontSize }).(pulumi.IntPtrOutput)
}

func (o ReportChartYSeriesOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.LabelAngle }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesOutput) YLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportChartYSeries) *string { return v.YLegend }).(pulumi.StringPtrOutput)
}

type ReportChartYSeriesPtrOutput struct{ *pulumi.OutputState }

func (ReportChartYSeriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportChartYSeries)(nil)).Elem()
}

func (o ReportChartYSeriesPtrOutput) ToReportChartYSeriesPtrOutput() ReportChartYSeriesPtrOutput {
	return o
}

func (o ReportChartYSeriesPtrOutput) ToReportChartYSeriesPtrOutputWithContext(ctx context.Context) ReportChartYSeriesPtrOutput {
	return o
}

func (o ReportChartYSeriesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportChartYSeries] {
	return pulumix.Output[*ReportChartYSeries]{
		OutputState: o.OutputState,
	}
}

func (o ReportChartYSeriesPtrOutput) Elem() ReportChartYSeriesOutput {
	return o.ApplyT(func(v *ReportChartYSeries) ReportChartYSeries {
		if v != nil {
			return *v
		}
		var ret ReportChartYSeries
		return ret
	}).(ReportChartYSeriesOutput)
}

func (o ReportChartYSeriesPtrOutput) Caption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Caption
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) CaptionFontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *int {
		if v == nil {
			return nil
		}
		return v.CaptionFontSize
	}).(pulumi.IntPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) Databind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Databind
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) ExtraDatabind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraDatabind
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) ExtraY() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraY
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) ExtraYLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.ExtraYLegend
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) FontSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *int {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.IntPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) LabelAngle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.LabelAngle
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o ReportChartYSeriesPtrOutput) YLegend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportChartYSeries) *string {
		if v == nil {
			return nil
		}
		return v.YLegend
	}).(pulumi.StringPtrOutput)
}

type ReportDatasetField struct {
	Displayname *string `pulumi:"displayname"`
	Id          *int    `pulumi:"id"`
	Name        *string `pulumi:"name"`
	Type        *string `pulumi:"type"`
}

// ReportDatasetFieldInput is an input type that accepts ReportDatasetFieldArgs and ReportDatasetFieldOutput values.
// You can construct a concrete instance of `ReportDatasetFieldInput` via:
//
//	ReportDatasetFieldArgs{...}
type ReportDatasetFieldInput interface {
	pulumi.Input

	ToReportDatasetFieldOutput() ReportDatasetFieldOutput
	ToReportDatasetFieldOutputWithContext(context.Context) ReportDatasetFieldOutput
}

type ReportDatasetFieldArgs struct {
	Displayname pulumi.StringPtrInput `pulumi:"displayname"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportDatasetFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetField)(nil)).Elem()
}

func (i ReportDatasetFieldArgs) ToReportDatasetFieldOutput() ReportDatasetFieldOutput {
	return i.ToReportDatasetFieldOutputWithContext(context.Background())
}

func (i ReportDatasetFieldArgs) ToReportDatasetFieldOutputWithContext(ctx context.Context) ReportDatasetFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetFieldOutput)
}

func (i ReportDatasetFieldArgs) ToOutput(ctx context.Context) pulumix.Output[ReportDatasetField] {
	return pulumix.Output[ReportDatasetField]{
		OutputState: i.ToReportDatasetFieldOutputWithContext(ctx).OutputState,
	}
}

// ReportDatasetFieldArrayInput is an input type that accepts ReportDatasetFieldArray and ReportDatasetFieldArrayOutput values.
// You can construct a concrete instance of `ReportDatasetFieldArrayInput` via:
//
//	ReportDatasetFieldArray{ ReportDatasetFieldArgs{...} }
type ReportDatasetFieldArrayInput interface {
	pulumi.Input

	ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput
	ToReportDatasetFieldArrayOutputWithContext(context.Context) ReportDatasetFieldArrayOutput
}

type ReportDatasetFieldArray []ReportDatasetFieldInput

func (ReportDatasetFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetField)(nil)).Elem()
}

func (i ReportDatasetFieldArray) ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput {
	return i.ToReportDatasetFieldArrayOutputWithContext(context.Background())
}

func (i ReportDatasetFieldArray) ToReportDatasetFieldArrayOutputWithContext(ctx context.Context) ReportDatasetFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetFieldArrayOutput)
}

func (i ReportDatasetFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportDatasetField] {
	return pulumix.Output[[]ReportDatasetField]{
		OutputState: i.ToReportDatasetFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportDatasetFieldOutput struct{ *pulumi.OutputState }

func (ReportDatasetFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetField)(nil)).Elem()
}

func (o ReportDatasetFieldOutput) ToReportDatasetFieldOutput() ReportDatasetFieldOutput {
	return o
}

func (o ReportDatasetFieldOutput) ToReportDatasetFieldOutputWithContext(ctx context.Context) ReportDatasetFieldOutput {
	return o
}

func (o ReportDatasetFieldOutput) ToOutput(ctx context.Context) pulumix.Output[ReportDatasetField] {
	return pulumix.Output[ReportDatasetField]{
		OutputState: o.OutputState,
	}
}

func (o ReportDatasetFieldOutput) Displayname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Displayname }).(pulumi.StringPtrOutput)
}

func (o ReportDatasetFieldOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportDatasetFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ReportDatasetFieldOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetField) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportDatasetFieldArrayOutput struct{ *pulumi.OutputState }

func (ReportDatasetFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetField)(nil)).Elem()
}

func (o ReportDatasetFieldArrayOutput) ToReportDatasetFieldArrayOutput() ReportDatasetFieldArrayOutput {
	return o
}

func (o ReportDatasetFieldArrayOutput) ToReportDatasetFieldArrayOutputWithContext(ctx context.Context) ReportDatasetFieldArrayOutput {
	return o
}

func (o ReportDatasetFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportDatasetField] {
	return pulumix.Output[[]ReportDatasetField]{
		OutputState: o.OutputState,
	}
}

func (o ReportDatasetFieldArrayOutput) Index(i pulumi.IntInput) ReportDatasetFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportDatasetField {
		return vs[0].([]ReportDatasetField)[vs[1].(int)]
	}).(ReportDatasetFieldOutput)
}

type ReportDatasetParameter struct {
	DataType    *string `pulumi:"dataType"`
	DisplayName *string `pulumi:"displayName"`
	Field       *string `pulumi:"field"`
	Id          *int    `pulumi:"id"`
}

// ReportDatasetParameterInput is an input type that accepts ReportDatasetParameterArgs and ReportDatasetParameterOutput values.
// You can construct a concrete instance of `ReportDatasetParameterInput` via:
//
//	ReportDatasetParameterArgs{...}
type ReportDatasetParameterInput interface {
	pulumi.Input

	ToReportDatasetParameterOutput() ReportDatasetParameterOutput
	ToReportDatasetParameterOutputWithContext(context.Context) ReportDatasetParameterOutput
}

type ReportDatasetParameterArgs struct {
	DataType    pulumi.StringPtrInput `pulumi:"dataType"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Field       pulumi.StringPtrInput `pulumi:"field"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
}

func (ReportDatasetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetParameter)(nil)).Elem()
}

func (i ReportDatasetParameterArgs) ToReportDatasetParameterOutput() ReportDatasetParameterOutput {
	return i.ToReportDatasetParameterOutputWithContext(context.Background())
}

func (i ReportDatasetParameterArgs) ToReportDatasetParameterOutputWithContext(ctx context.Context) ReportDatasetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetParameterOutput)
}

func (i ReportDatasetParameterArgs) ToOutput(ctx context.Context) pulumix.Output[ReportDatasetParameter] {
	return pulumix.Output[ReportDatasetParameter]{
		OutputState: i.ToReportDatasetParameterOutputWithContext(ctx).OutputState,
	}
}

// ReportDatasetParameterArrayInput is an input type that accepts ReportDatasetParameterArray and ReportDatasetParameterArrayOutput values.
// You can construct a concrete instance of `ReportDatasetParameterArrayInput` via:
//
//	ReportDatasetParameterArray{ ReportDatasetParameterArgs{...} }
type ReportDatasetParameterArrayInput interface {
	pulumi.Input

	ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput
	ToReportDatasetParameterArrayOutputWithContext(context.Context) ReportDatasetParameterArrayOutput
}

type ReportDatasetParameterArray []ReportDatasetParameterInput

func (ReportDatasetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetParameter)(nil)).Elem()
}

func (i ReportDatasetParameterArray) ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput {
	return i.ToReportDatasetParameterArrayOutputWithContext(context.Background())
}

func (i ReportDatasetParameterArray) ToReportDatasetParameterArrayOutputWithContext(ctx context.Context) ReportDatasetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDatasetParameterArrayOutput)
}

func (i ReportDatasetParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportDatasetParameter] {
	return pulumix.Output[[]ReportDatasetParameter]{
		OutputState: i.ToReportDatasetParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportDatasetParameterOutput struct{ *pulumi.OutputState }

func (ReportDatasetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDatasetParameter)(nil)).Elem()
}

func (o ReportDatasetParameterOutput) ToReportDatasetParameterOutput() ReportDatasetParameterOutput {
	return o
}

func (o ReportDatasetParameterOutput) ToReportDatasetParameterOutputWithContext(ctx context.Context) ReportDatasetParameterOutput {
	return o
}

func (o ReportDatasetParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ReportDatasetParameter] {
	return pulumix.Output[ReportDatasetParameter]{
		OutputState: o.OutputState,
	}
}

func (o ReportDatasetParameterOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

func (o ReportDatasetParameterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o ReportDatasetParameterOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o ReportDatasetParameterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportDatasetParameter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ReportDatasetParameterArrayOutput struct{ *pulumi.OutputState }

func (ReportDatasetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportDatasetParameter)(nil)).Elem()
}

func (o ReportDatasetParameterArrayOutput) ToReportDatasetParameterArrayOutput() ReportDatasetParameterArrayOutput {
	return o
}

func (o ReportDatasetParameterArrayOutput) ToReportDatasetParameterArrayOutputWithContext(ctx context.Context) ReportDatasetParameterArrayOutput {
	return o
}

func (o ReportDatasetParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportDatasetParameter] {
	return pulumix.Output[[]ReportDatasetParameter]{
		OutputState: o.OutputState,
	}
}

func (o ReportDatasetParameterArrayOutput) Index(i pulumi.IntInput) ReportDatasetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportDatasetParameter {
		return vs[0].([]ReportDatasetParameter)[vs[1].(int)]
	}).(ReportDatasetParameterOutput)
}

type ReportLayoutBodyItem struct {
	Chart             *string                         `pulumi:"chart"`
	ChartOptions      *string                         `pulumi:"chartOptions"`
	Column            *int                            `pulumi:"column"`
	Content           *string                         `pulumi:"content"`
	Description       *string                         `pulumi:"description"`
	DrillDownItems    *string                         `pulumi:"drillDownItems"`
	DrillDownTypes    *string                         `pulumi:"drillDownTypes"`
	Hide              *string                         `pulumi:"hide"`
	Id                *int                            `pulumi:"id"`
	ImgSrc            *string                         `pulumi:"imgSrc"`
	ListComponent     *string                         `pulumi:"listComponent"`
	Lists             []ReportLayoutBodyItemList      `pulumi:"lists"`
	MiscComponent     *string                         `pulumi:"miscComponent"`
	Parameters        []ReportLayoutBodyItemParameter `pulumi:"parameters"`
	Style             *string                         `pulumi:"style"`
	TableCaptionStyle *string                         `pulumi:"tableCaptionStyle"`
	TableColumnWidths *string                         `pulumi:"tableColumnWidths"`
	TableEvenRowStyle *string                         `pulumi:"tableEvenRowStyle"`
	TableHeadStyle    *string                         `pulumi:"tableHeadStyle"`
	TableOddRowStyle  *string                         `pulumi:"tableOddRowStyle"`
	TextComponent     *string                         `pulumi:"textComponent"`
	Title             *string                         `pulumi:"title"`
	TopN              *int                            `pulumi:"topN"`
	Type              *string                         `pulumi:"type"`
}

// ReportLayoutBodyItemInput is an input type that accepts ReportLayoutBodyItemArgs and ReportLayoutBodyItemOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemInput` via:
//
//	ReportLayoutBodyItemArgs{...}
type ReportLayoutBodyItemInput interface {
	pulumi.Input

	ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput
	ToReportLayoutBodyItemOutputWithContext(context.Context) ReportLayoutBodyItemOutput
}

type ReportLayoutBodyItemArgs struct {
	Chart             pulumi.StringPtrInput                   `pulumi:"chart"`
	ChartOptions      pulumi.StringPtrInput                   `pulumi:"chartOptions"`
	Column            pulumi.IntPtrInput                      `pulumi:"column"`
	Content           pulumi.StringPtrInput                   `pulumi:"content"`
	Description       pulumi.StringPtrInput                   `pulumi:"description"`
	DrillDownItems    pulumi.StringPtrInput                   `pulumi:"drillDownItems"`
	DrillDownTypes    pulumi.StringPtrInput                   `pulumi:"drillDownTypes"`
	Hide              pulumi.StringPtrInput                   `pulumi:"hide"`
	Id                pulumi.IntPtrInput                      `pulumi:"id"`
	ImgSrc            pulumi.StringPtrInput                   `pulumi:"imgSrc"`
	ListComponent     pulumi.StringPtrInput                   `pulumi:"listComponent"`
	Lists             ReportLayoutBodyItemListArrayInput      `pulumi:"lists"`
	MiscComponent     pulumi.StringPtrInput                   `pulumi:"miscComponent"`
	Parameters        ReportLayoutBodyItemParameterArrayInput `pulumi:"parameters"`
	Style             pulumi.StringPtrInput                   `pulumi:"style"`
	TableCaptionStyle pulumi.StringPtrInput                   `pulumi:"tableCaptionStyle"`
	TableColumnWidths pulumi.StringPtrInput                   `pulumi:"tableColumnWidths"`
	TableEvenRowStyle pulumi.StringPtrInput                   `pulumi:"tableEvenRowStyle"`
	TableHeadStyle    pulumi.StringPtrInput                   `pulumi:"tableHeadStyle"`
	TableOddRowStyle  pulumi.StringPtrInput                   `pulumi:"tableOddRowStyle"`
	TextComponent     pulumi.StringPtrInput                   `pulumi:"textComponent"`
	Title             pulumi.StringPtrInput                   `pulumi:"title"`
	TopN              pulumi.IntPtrInput                      `pulumi:"topN"`
	Type              pulumi.StringPtrInput                   `pulumi:"type"`
}

func (ReportLayoutBodyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItem)(nil)).Elem()
}

func (i ReportLayoutBodyItemArgs) ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput {
	return i.ToReportLayoutBodyItemOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemArgs) ToReportLayoutBodyItemOutputWithContext(ctx context.Context) ReportLayoutBodyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemOutput)
}

func (i ReportLayoutBodyItemArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItem] {
	return pulumix.Output[ReportLayoutBodyItem]{
		OutputState: i.ToReportLayoutBodyItemOutputWithContext(ctx).OutputState,
	}
}

// ReportLayoutBodyItemArrayInput is an input type that accepts ReportLayoutBodyItemArray and ReportLayoutBodyItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemArrayInput` via:
//
//	ReportLayoutBodyItemArray{ ReportLayoutBodyItemArgs{...} }
type ReportLayoutBodyItemArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput
	ToReportLayoutBodyItemArrayOutputWithContext(context.Context) ReportLayoutBodyItemArrayOutput
}

type ReportLayoutBodyItemArray []ReportLayoutBodyItemInput

func (ReportLayoutBodyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItem)(nil)).Elem()
}

func (i ReportLayoutBodyItemArray) ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput {
	return i.ToReportLayoutBodyItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemArray) ToReportLayoutBodyItemArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemArrayOutput)
}

func (i ReportLayoutBodyItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItem] {
	return pulumix.Output[[]ReportLayoutBodyItem]{
		OutputState: i.ToReportLayoutBodyItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutBodyItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItem)(nil)).Elem()
}

func (o ReportLayoutBodyItemOutput) ToReportLayoutBodyItemOutput() ReportLayoutBodyItemOutput {
	return o
}

func (o ReportLayoutBodyItemOutput) ToReportLayoutBodyItemOutputWithContext(ctx context.Context) ReportLayoutBodyItemOutput {
	return o
}

func (o ReportLayoutBodyItemOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItem] {
	return pulumix.Output[ReportLayoutBodyItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) ChartOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ChartOptions }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Column() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.Column }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) DrillDownItems() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.DrillDownItems }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) DrillDownTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.DrillDownTypes }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Hide() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Hide }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutBodyItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) ListComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.ListComponent }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Lists() ReportLayoutBodyItemListArrayOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) []ReportLayoutBodyItemList { return v.Lists }).(ReportLayoutBodyItemListArrayOutput)
}

func (o ReportLayoutBodyItemOutput) MiscComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.MiscComponent }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Parameters() ReportLayoutBodyItemParameterArrayOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) []ReportLayoutBodyItemParameter { return v.Parameters }).(ReportLayoutBodyItemParameterArrayOutput)
}

func (o ReportLayoutBodyItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TableCaptionStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableCaptionStyle }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TableColumnWidths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableColumnWidths }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TableEvenRowStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableEvenRowStyle }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TableHeadStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableHeadStyle }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TableOddRowStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TableOddRowStyle }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TextComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.TextComponent }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemOutput) TopN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *int { return v.TopN }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutBodyItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutBodyItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItem)(nil)).Elem()
}

func (o ReportLayoutBodyItemArrayOutput) ToReportLayoutBodyItemArrayOutput() ReportLayoutBodyItemArrayOutput {
	return o
}

func (o ReportLayoutBodyItemArrayOutput) ToReportLayoutBodyItemArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemArrayOutput {
	return o
}

func (o ReportLayoutBodyItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItem] {
	return pulumix.Output[[]ReportLayoutBodyItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItem {
		return vs[0].([]ReportLayoutBodyItem)[vs[1].(int)]
	}).(ReportLayoutBodyItemOutput)
}

type ReportLayoutBodyItemList struct {
	Content *string `pulumi:"content"`
	Id      *int    `pulumi:"id"`
}

// ReportLayoutBodyItemListInput is an input type that accepts ReportLayoutBodyItemListArgs and ReportLayoutBodyItemListOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemListInput` via:
//
//	ReportLayoutBodyItemListArgs{...}
type ReportLayoutBodyItemListInput interface {
	pulumi.Input

	ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput
	ToReportLayoutBodyItemListOutputWithContext(context.Context) ReportLayoutBodyItemListOutput
}

type ReportLayoutBodyItemListArgs struct {
	Content pulumi.StringPtrInput `pulumi:"content"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
}

func (ReportLayoutBodyItemListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemList)(nil)).Elem()
}

func (i ReportLayoutBodyItemListArgs) ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput {
	return i.ToReportLayoutBodyItemListOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemListArgs) ToReportLayoutBodyItemListOutputWithContext(ctx context.Context) ReportLayoutBodyItemListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemListOutput)
}

func (i ReportLayoutBodyItemListArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItemList] {
	return pulumix.Output[ReportLayoutBodyItemList]{
		OutputState: i.ToReportLayoutBodyItemListOutputWithContext(ctx).OutputState,
	}
}

// ReportLayoutBodyItemListArrayInput is an input type that accepts ReportLayoutBodyItemListArray and ReportLayoutBodyItemListArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemListArrayInput` via:
//
//	ReportLayoutBodyItemListArray{ ReportLayoutBodyItemListArgs{...} }
type ReportLayoutBodyItemListArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput
	ToReportLayoutBodyItemListArrayOutputWithContext(context.Context) ReportLayoutBodyItemListArrayOutput
}

type ReportLayoutBodyItemListArray []ReportLayoutBodyItemListInput

func (ReportLayoutBodyItemListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemList)(nil)).Elem()
}

func (i ReportLayoutBodyItemListArray) ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput {
	return i.ToReportLayoutBodyItemListArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemListArray) ToReportLayoutBodyItemListArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemListArrayOutput)
}

func (i ReportLayoutBodyItemListArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItemList] {
	return pulumix.Output[[]ReportLayoutBodyItemList]{
		OutputState: i.ToReportLayoutBodyItemListArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutBodyItemListOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemList)(nil)).Elem()
}

func (o ReportLayoutBodyItemListOutput) ToReportLayoutBodyItemListOutput() ReportLayoutBodyItemListOutput {
	return o
}

func (o ReportLayoutBodyItemListOutput) ToReportLayoutBodyItemListOutputWithContext(ctx context.Context) ReportLayoutBodyItemListOutput {
	return o
}

func (o ReportLayoutBodyItemListOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItemList] {
	return pulumix.Output[ReportLayoutBodyItemList]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemListOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemList) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ReportLayoutBodyItemListArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemList)(nil)).Elem()
}

func (o ReportLayoutBodyItemListArrayOutput) ToReportLayoutBodyItemListArrayOutput() ReportLayoutBodyItemListArrayOutput {
	return o
}

func (o ReportLayoutBodyItemListArrayOutput) ToReportLayoutBodyItemListArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemListArrayOutput {
	return o
}

func (o ReportLayoutBodyItemListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItemList] {
	return pulumix.Output[[]ReportLayoutBodyItemList]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemListArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItemList {
		return vs[0].([]ReportLayoutBodyItemList)[vs[1].(int)]
	}).(ReportLayoutBodyItemListOutput)
}

type ReportLayoutBodyItemParameter struct {
	Id    *int    `pulumi:"id"`
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// ReportLayoutBodyItemParameterInput is an input type that accepts ReportLayoutBodyItemParameterArgs and ReportLayoutBodyItemParameterOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemParameterInput` via:
//
//	ReportLayoutBodyItemParameterArgs{...}
type ReportLayoutBodyItemParameterInput interface {
	pulumi.Input

	ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput
	ToReportLayoutBodyItemParameterOutputWithContext(context.Context) ReportLayoutBodyItemParameterOutput
}

type ReportLayoutBodyItemParameterArgs struct {
	Id    pulumi.IntPtrInput    `pulumi:"id"`
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ReportLayoutBodyItemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (i ReportLayoutBodyItemParameterArgs) ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput {
	return i.ToReportLayoutBodyItemParameterOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemParameterArgs) ToReportLayoutBodyItemParameterOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemParameterOutput)
}

func (i ReportLayoutBodyItemParameterArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItemParameter] {
	return pulumix.Output[ReportLayoutBodyItemParameter]{
		OutputState: i.ToReportLayoutBodyItemParameterOutputWithContext(ctx).OutputState,
	}
}

// ReportLayoutBodyItemParameterArrayInput is an input type that accepts ReportLayoutBodyItemParameterArray and ReportLayoutBodyItemParameterArrayOutput values.
// You can construct a concrete instance of `ReportLayoutBodyItemParameterArrayInput` via:
//
//	ReportLayoutBodyItemParameterArray{ ReportLayoutBodyItemParameterArgs{...} }
type ReportLayoutBodyItemParameterArrayInput interface {
	pulumi.Input

	ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput
	ToReportLayoutBodyItemParameterArrayOutputWithContext(context.Context) ReportLayoutBodyItemParameterArrayOutput
}

type ReportLayoutBodyItemParameterArray []ReportLayoutBodyItemParameterInput

func (ReportLayoutBodyItemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (i ReportLayoutBodyItemParameterArray) ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput {
	return i.ToReportLayoutBodyItemParameterArrayOutputWithContext(context.Background())
}

func (i ReportLayoutBodyItemParameterArray) ToReportLayoutBodyItemParameterArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutBodyItemParameterArrayOutput)
}

func (i ReportLayoutBodyItemParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItemParameter] {
	return pulumix.Output[[]ReportLayoutBodyItemParameter]{
		OutputState: i.ToReportLayoutBodyItemParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutBodyItemParameterOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (o ReportLayoutBodyItemParameterOutput) ToReportLayoutBodyItemParameterOutput() ReportLayoutBodyItemParameterOutput {
	return o
}

func (o ReportLayoutBodyItemParameterOutput) ToReportLayoutBodyItemParameterOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterOutput {
	return o
}

func (o ReportLayoutBodyItemParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutBodyItemParameter] {
	return pulumix.Output[ReportLayoutBodyItemParameter]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemParameterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutBodyItemParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutBodyItemParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutBodyItemParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ReportLayoutBodyItemParameterArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutBodyItemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutBodyItemParameter)(nil)).Elem()
}

func (o ReportLayoutBodyItemParameterArrayOutput) ToReportLayoutBodyItemParameterArrayOutput() ReportLayoutBodyItemParameterArrayOutput {
	return o
}

func (o ReportLayoutBodyItemParameterArrayOutput) ToReportLayoutBodyItemParameterArrayOutputWithContext(ctx context.Context) ReportLayoutBodyItemParameterArrayOutput {
	return o
}

func (o ReportLayoutBodyItemParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutBodyItemParameter] {
	return pulumix.Output[[]ReportLayoutBodyItemParameter]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutBodyItemParameterArrayOutput) Index(i pulumi.IntInput) ReportLayoutBodyItemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutBodyItemParameter {
		return vs[0].([]ReportLayoutBodyItemParameter)[vs[1].(int)]
	}).(ReportLayoutBodyItemParameterOutput)
}

type ReportLayoutPage struct {
	ColumnBreakBefore *string                 `pulumi:"columnBreakBefore"`
	Footer            *ReportLayoutPageFooter `pulumi:"footer"`
	Header            *ReportLayoutPageHeader `pulumi:"header"`
	Options           *string                 `pulumi:"options"`
	PageBreakBefore   *string                 `pulumi:"pageBreakBefore"`
	Paper             *string                 `pulumi:"paper"`
}

// ReportLayoutPageInput is an input type that accepts ReportLayoutPageArgs and ReportLayoutPageOutput values.
// You can construct a concrete instance of `ReportLayoutPageInput` via:
//
//	ReportLayoutPageArgs{...}
type ReportLayoutPageInput interface {
	pulumi.Input

	ToReportLayoutPageOutput() ReportLayoutPageOutput
	ToReportLayoutPageOutputWithContext(context.Context) ReportLayoutPageOutput
}

type ReportLayoutPageArgs struct {
	ColumnBreakBefore pulumi.StringPtrInput          `pulumi:"columnBreakBefore"`
	Footer            ReportLayoutPageFooterPtrInput `pulumi:"footer"`
	Header            ReportLayoutPageHeaderPtrInput `pulumi:"header"`
	Options           pulumi.StringPtrInput          `pulumi:"options"`
	PageBreakBefore   pulumi.StringPtrInput          `pulumi:"pageBreakBefore"`
	Paper             pulumi.StringPtrInput          `pulumi:"paper"`
}

func (ReportLayoutPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPage)(nil)).Elem()
}

func (i ReportLayoutPageArgs) ToReportLayoutPageOutput() ReportLayoutPageOutput {
	return i.ToReportLayoutPageOutputWithContext(context.Background())
}

func (i ReportLayoutPageArgs) ToReportLayoutPageOutputWithContext(ctx context.Context) ReportLayoutPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageOutput)
}

func (i ReportLayoutPageArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPage] {
	return pulumix.Output[ReportLayoutPage]{
		OutputState: i.ToReportLayoutPageOutputWithContext(ctx).OutputState,
	}
}

func (i ReportLayoutPageArgs) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return i.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageArgs) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageOutput).ToReportLayoutPagePtrOutputWithContext(ctx)
}

// ReportLayoutPagePtrInput is an input type that accepts ReportLayoutPageArgs, ReportLayoutPagePtr and ReportLayoutPagePtrOutput values.
// You can construct a concrete instance of `ReportLayoutPagePtrInput` via:
//
//	        ReportLayoutPageArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPagePtrInput interface {
	pulumi.Input

	ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput
	ToReportLayoutPagePtrOutputWithContext(context.Context) ReportLayoutPagePtrOutput
}

type reportLayoutPagePtrType ReportLayoutPageArgs

func ReportLayoutPagePtr(v *ReportLayoutPageArgs) ReportLayoutPagePtrInput {
	return (*reportLayoutPagePtrType)(v)
}

func (*reportLayoutPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPage)(nil)).Elem()
}

func (i *reportLayoutPagePtrType) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return i.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (i *reportLayoutPagePtrType) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPagePtrOutput)
}

func (i *reportLayoutPagePtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPage] {
	return pulumix.Output[*ReportLayoutPage]{
		OutputState: i.ToReportLayoutPagePtrOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutPageOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPage)(nil)).Elem()
}

func (o ReportLayoutPageOutput) ToReportLayoutPageOutput() ReportLayoutPageOutput {
	return o
}

func (o ReportLayoutPageOutput) ToReportLayoutPageOutputWithContext(ctx context.Context) ReportLayoutPageOutput {
	return o
}

func (o ReportLayoutPageOutput) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return o.ToReportLayoutPagePtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageOutput) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPage) *ReportLayoutPage {
		return &v
	}).(ReportLayoutPagePtrOutput)
}

func (o ReportLayoutPageOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPage] {
	return pulumix.Output[ReportLayoutPage]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageOutput) ColumnBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.ColumnBreakBefore }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageOutput) Footer() ReportLayoutPageFooterPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *ReportLayoutPageFooter { return v.Footer }).(ReportLayoutPageFooterPtrOutput)
}

func (o ReportLayoutPageOutput) Header() ReportLayoutPageHeaderPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *ReportLayoutPageHeader { return v.Header }).(ReportLayoutPageHeaderPtrOutput)
}

func (o ReportLayoutPageOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.Options }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageOutput) PageBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.PageBreakBefore }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageOutput) Paper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPage) *string { return v.Paper }).(pulumi.StringPtrOutput)
}

type ReportLayoutPagePtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPage)(nil)).Elem()
}

func (o ReportLayoutPagePtrOutput) ToReportLayoutPagePtrOutput() ReportLayoutPagePtrOutput {
	return o
}

func (o ReportLayoutPagePtrOutput) ToReportLayoutPagePtrOutputWithContext(ctx context.Context) ReportLayoutPagePtrOutput {
	return o
}

func (o ReportLayoutPagePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPage] {
	return pulumix.Output[*ReportLayoutPage]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPagePtrOutput) Elem() ReportLayoutPageOutput {
	return o.ApplyT(func(v *ReportLayoutPage) ReportLayoutPage {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPage
		return ret
	}).(ReportLayoutPageOutput)
}

func (o ReportLayoutPagePtrOutput) ColumnBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.ColumnBreakBefore
	}).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPagePtrOutput) Footer() ReportLayoutPageFooterPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *ReportLayoutPageFooter {
		if v == nil {
			return nil
		}
		return v.Footer
	}).(ReportLayoutPageFooterPtrOutput)
}

func (o ReportLayoutPagePtrOutput) Header() ReportLayoutPageHeaderPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *ReportLayoutPageHeader {
		if v == nil {
			return nil
		}
		return v.Header
	}).(ReportLayoutPageHeaderPtrOutput)
}

func (o ReportLayoutPagePtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPagePtrOutput) PageBreakBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.PageBreakBefore
	}).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPagePtrOutput) Paper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPage) *string {
		if v == nil {
			return nil
		}
		return v.Paper
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooter struct {
	FooterItems []ReportLayoutPageFooterFooterItem `pulumi:"footerItems"`
	Style       *string                            `pulumi:"style"`
}

// ReportLayoutPageFooterInput is an input type that accepts ReportLayoutPageFooterArgs and ReportLayoutPageFooterOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterInput` via:
//
//	ReportLayoutPageFooterArgs{...}
type ReportLayoutPageFooterInput interface {
	pulumi.Input

	ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput
	ToReportLayoutPageFooterOutputWithContext(context.Context) ReportLayoutPageFooterOutput
}

type ReportLayoutPageFooterArgs struct {
	FooterItems ReportLayoutPageFooterFooterItemArrayInput `pulumi:"footerItems"`
	Style       pulumi.StringPtrInput                      `pulumi:"style"`
}

func (ReportLayoutPageFooterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooter)(nil)).Elem()
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput {
	return i.ToReportLayoutPageFooterOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterOutputWithContext(ctx context.Context) ReportLayoutPageFooterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterOutput)
}

func (i ReportLayoutPageFooterArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageFooter] {
	return pulumix.Output[ReportLayoutPageFooter]{
		OutputState: i.ToReportLayoutPageFooterOutputWithContext(ctx).OutputState,
	}
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return i.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterArgs) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterOutput).ToReportLayoutPageFooterPtrOutputWithContext(ctx)
}

// ReportLayoutPageFooterPtrInput is an input type that accepts ReportLayoutPageFooterArgs, ReportLayoutPageFooterPtr and ReportLayoutPageFooterPtrOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterPtrInput` via:
//
//	        ReportLayoutPageFooterArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPageFooterPtrInput interface {
	pulumi.Input

	ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput
	ToReportLayoutPageFooterPtrOutputWithContext(context.Context) ReportLayoutPageFooterPtrOutput
}

type reportLayoutPageFooterPtrType ReportLayoutPageFooterArgs

func ReportLayoutPageFooterPtr(v *ReportLayoutPageFooterArgs) ReportLayoutPageFooterPtrInput {
	return (*reportLayoutPageFooterPtrType)(v)
}

func (*reportLayoutPageFooterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageFooter)(nil)).Elem()
}

func (i *reportLayoutPageFooterPtrType) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return i.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (i *reportLayoutPageFooterPtrType) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterPtrOutput)
}

func (i *reportLayoutPageFooterPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPageFooter] {
	return pulumix.Output[*ReportLayoutPageFooter]{
		OutputState: i.ToReportLayoutPageFooterPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutPageFooterOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooter)(nil)).Elem()
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterOutput() ReportLayoutPageFooterOutput {
	return o
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterOutputWithContext(ctx context.Context) ReportLayoutPageFooterOutput {
	return o
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return o.ToReportLayoutPageFooterPtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageFooterOutput) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPageFooter) *ReportLayoutPageFooter {
		return &v
	}).(ReportLayoutPageFooterPtrOutput)
}

func (o ReportLayoutPageFooterOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageFooter] {
	return pulumix.Output[ReportLayoutPageFooter]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageFooterOutput) FooterItems() ReportLayoutPageFooterFooterItemArrayOutput {
	return o.ApplyT(func(v ReportLayoutPageFooter) []ReportLayoutPageFooterFooterItem { return v.FooterItems }).(ReportLayoutPageFooterFooterItemArrayOutput)
}

func (o ReportLayoutPageFooterOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooter) *string { return v.Style }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterPtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageFooter)(nil)).Elem()
}

func (o ReportLayoutPageFooterPtrOutput) ToReportLayoutPageFooterPtrOutput() ReportLayoutPageFooterPtrOutput {
	return o
}

func (o ReportLayoutPageFooterPtrOutput) ToReportLayoutPageFooterPtrOutputWithContext(ctx context.Context) ReportLayoutPageFooterPtrOutput {
	return o
}

func (o ReportLayoutPageFooterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPageFooter] {
	return pulumix.Output[*ReportLayoutPageFooter]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageFooterPtrOutput) Elem() ReportLayoutPageFooterOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) ReportLayoutPageFooter {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPageFooter
		return ret
	}).(ReportLayoutPageFooterOutput)
}

func (o ReportLayoutPageFooterPtrOutput) FooterItems() ReportLayoutPageFooterFooterItemArrayOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) []ReportLayoutPageFooterFooterItem {
		if v == nil {
			return nil
		}
		return v.FooterItems
	}).(ReportLayoutPageFooterFooterItemArrayOutput)
}

func (o ReportLayoutPageFooterPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPageFooter) *string {
		if v == nil {
			return nil
		}
		return v.Style
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterFooterItem struct {
	Content     *string `pulumi:"content"`
	Description *string `pulumi:"description"`
	Id          *int    `pulumi:"id"`
	ImgSrc      *string `pulumi:"imgSrc"`
	Style       *string `pulumi:"style"`
	Type        *string `pulumi:"type"`
}

// ReportLayoutPageFooterFooterItemInput is an input type that accepts ReportLayoutPageFooterFooterItemArgs and ReportLayoutPageFooterFooterItemOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterFooterItemInput` via:
//
//	ReportLayoutPageFooterFooterItemArgs{...}
type ReportLayoutPageFooterFooterItemInput interface {
	pulumi.Input

	ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput
	ToReportLayoutPageFooterFooterItemOutputWithContext(context.Context) ReportLayoutPageFooterFooterItemOutput
}

type ReportLayoutPageFooterFooterItemArgs struct {
	Content     pulumi.StringPtrInput `pulumi:"content"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	ImgSrc      pulumi.StringPtrInput `pulumi:"imgSrc"`
	Style       pulumi.StringPtrInput `pulumi:"style"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportLayoutPageFooterFooterItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (i ReportLayoutPageFooterFooterItemArgs) ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput {
	return i.ToReportLayoutPageFooterFooterItemOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterFooterItemArgs) ToReportLayoutPageFooterFooterItemOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterFooterItemOutput)
}

func (i ReportLayoutPageFooterFooterItemArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageFooterFooterItem] {
	return pulumix.Output[ReportLayoutPageFooterFooterItem]{
		OutputState: i.ToReportLayoutPageFooterFooterItemOutputWithContext(ctx).OutputState,
	}
}

// ReportLayoutPageFooterFooterItemArrayInput is an input type that accepts ReportLayoutPageFooterFooterItemArray and ReportLayoutPageFooterFooterItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutPageFooterFooterItemArrayInput` via:
//
//	ReportLayoutPageFooterFooterItemArray{ ReportLayoutPageFooterFooterItemArgs{...} }
type ReportLayoutPageFooterFooterItemArrayInput interface {
	pulumi.Input

	ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput
	ToReportLayoutPageFooterFooterItemArrayOutputWithContext(context.Context) ReportLayoutPageFooterFooterItemArrayOutput
}

type ReportLayoutPageFooterFooterItemArray []ReportLayoutPageFooterFooterItemInput

func (ReportLayoutPageFooterFooterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (i ReportLayoutPageFooterFooterItemArray) ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput {
	return i.ToReportLayoutPageFooterFooterItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutPageFooterFooterItemArray) ToReportLayoutPageFooterFooterItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageFooterFooterItemArrayOutput)
}

func (i ReportLayoutPageFooterFooterItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutPageFooterFooterItem] {
	return pulumix.Output[[]ReportLayoutPageFooterFooterItem]{
		OutputState: i.ToReportLayoutPageFooterFooterItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutPageFooterFooterItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterFooterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (o ReportLayoutPageFooterFooterItemOutput) ToReportLayoutPageFooterFooterItemOutput() ReportLayoutPageFooterFooterItemOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemOutput) ToReportLayoutPageFooterFooterItemOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageFooterFooterItem] {
	return pulumix.Output[ReportLayoutPageFooterFooterItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageFooterFooterItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageFooterFooterItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageFooterFooterItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutPageFooterFooterItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageFooterFooterItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageFooterFooterItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageFooterFooterItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageFooterFooterItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageFooterFooterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageFooterFooterItem)(nil)).Elem()
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) ToReportLayoutPageFooterFooterItemArrayOutput() ReportLayoutPageFooterFooterItemArrayOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) ToReportLayoutPageFooterFooterItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageFooterFooterItemArrayOutput {
	return o
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutPageFooterFooterItem] {
	return pulumix.Output[[]ReportLayoutPageFooterFooterItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageFooterFooterItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutPageFooterFooterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutPageFooterFooterItem {
		return vs[0].([]ReportLayoutPageFooterFooterItem)[vs[1].(int)]
	}).(ReportLayoutPageFooterFooterItemOutput)
}

type ReportLayoutPageHeader struct {
	HeaderItems []ReportLayoutPageHeaderHeaderItem `pulumi:"headerItems"`
	Style       *string                            `pulumi:"style"`
}

// ReportLayoutPageHeaderInput is an input type that accepts ReportLayoutPageHeaderArgs and ReportLayoutPageHeaderOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderInput` via:
//
//	ReportLayoutPageHeaderArgs{...}
type ReportLayoutPageHeaderInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput
	ToReportLayoutPageHeaderOutputWithContext(context.Context) ReportLayoutPageHeaderOutput
}

type ReportLayoutPageHeaderArgs struct {
	HeaderItems ReportLayoutPageHeaderHeaderItemArrayInput `pulumi:"headerItems"`
	Style       pulumi.StringPtrInput                      `pulumi:"style"`
}

func (ReportLayoutPageHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeader)(nil)).Elem()
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput {
	return i.ToReportLayoutPageHeaderOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderOutputWithContext(ctx context.Context) ReportLayoutPageHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderOutput)
}

func (i ReportLayoutPageHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageHeader] {
	return pulumix.Output[ReportLayoutPageHeader]{
		OutputState: i.ToReportLayoutPageHeaderOutputWithContext(ctx).OutputState,
	}
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return i.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderArgs) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderOutput).ToReportLayoutPageHeaderPtrOutputWithContext(ctx)
}

// ReportLayoutPageHeaderPtrInput is an input type that accepts ReportLayoutPageHeaderArgs, ReportLayoutPageHeaderPtr and ReportLayoutPageHeaderPtrOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderPtrInput` via:
//
//	        ReportLayoutPageHeaderArgs{...}
//
//	or:
//
//	        nil
type ReportLayoutPageHeaderPtrInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput
	ToReportLayoutPageHeaderPtrOutputWithContext(context.Context) ReportLayoutPageHeaderPtrOutput
}

type reportLayoutPageHeaderPtrType ReportLayoutPageHeaderArgs

func ReportLayoutPageHeaderPtr(v *ReportLayoutPageHeaderArgs) ReportLayoutPageHeaderPtrInput {
	return (*reportLayoutPageHeaderPtrType)(v)
}

func (*reportLayoutPageHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageHeader)(nil)).Elem()
}

func (i *reportLayoutPageHeaderPtrType) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return i.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (i *reportLayoutPageHeaderPtrType) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderPtrOutput)
}

func (i *reportLayoutPageHeaderPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPageHeader] {
	return pulumix.Output[*ReportLayoutPageHeader]{
		OutputState: i.ToReportLayoutPageHeaderPtrOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutPageHeaderOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeader)(nil)).Elem()
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderOutput() ReportLayoutPageHeaderOutput {
	return o
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderOutputWithContext(ctx context.Context) ReportLayoutPageHeaderOutput {
	return o
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return o.ToReportLayoutPageHeaderPtrOutputWithContext(context.Background())
}

func (o ReportLayoutPageHeaderOutput) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportLayoutPageHeader) *ReportLayoutPageHeader {
		return &v
	}).(ReportLayoutPageHeaderPtrOutput)
}

func (o ReportLayoutPageHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageHeader] {
	return pulumix.Output[ReportLayoutPageHeader]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageHeaderOutput) HeaderItems() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o.ApplyT(func(v ReportLayoutPageHeader) []ReportLayoutPageHeaderHeaderItem { return v.HeaderItems }).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

func (o ReportLayoutPageHeaderOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeader) *string { return v.Style }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderPtrOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportLayoutPageHeader)(nil)).Elem()
}

func (o ReportLayoutPageHeaderPtrOutput) ToReportLayoutPageHeaderPtrOutput() ReportLayoutPageHeaderPtrOutput {
	return o
}

func (o ReportLayoutPageHeaderPtrOutput) ToReportLayoutPageHeaderPtrOutputWithContext(ctx context.Context) ReportLayoutPageHeaderPtrOutput {
	return o
}

func (o ReportLayoutPageHeaderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReportLayoutPageHeader] {
	return pulumix.Output[*ReportLayoutPageHeader]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageHeaderPtrOutput) Elem() ReportLayoutPageHeaderOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) ReportLayoutPageHeader {
		if v != nil {
			return *v
		}
		var ret ReportLayoutPageHeader
		return ret
	}).(ReportLayoutPageHeaderOutput)
}

func (o ReportLayoutPageHeaderPtrOutput) HeaderItems() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) []ReportLayoutPageHeaderHeaderItem {
		if v == nil {
			return nil
		}
		return v.HeaderItems
	}).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

func (o ReportLayoutPageHeaderPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportLayoutPageHeader) *string {
		if v == nil {
			return nil
		}
		return v.Style
	}).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderHeaderItem struct {
	Content     *string `pulumi:"content"`
	Description *string `pulumi:"description"`
	Id          *int    `pulumi:"id"`
	ImgSrc      *string `pulumi:"imgSrc"`
	Style       *string `pulumi:"style"`
	Type        *string `pulumi:"type"`
}

// ReportLayoutPageHeaderHeaderItemInput is an input type that accepts ReportLayoutPageHeaderHeaderItemArgs and ReportLayoutPageHeaderHeaderItemOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderHeaderItemInput` via:
//
//	ReportLayoutPageHeaderHeaderItemArgs{...}
type ReportLayoutPageHeaderHeaderItemInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput
	ToReportLayoutPageHeaderHeaderItemOutputWithContext(context.Context) ReportLayoutPageHeaderHeaderItemOutput
}

type ReportLayoutPageHeaderHeaderItemArgs struct {
	Content     pulumi.StringPtrInput `pulumi:"content"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	ImgSrc      pulumi.StringPtrInput `pulumi:"imgSrc"`
	Style       pulumi.StringPtrInput `pulumi:"style"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (ReportLayoutPageHeaderHeaderItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (i ReportLayoutPageHeaderHeaderItemArgs) ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput {
	return i.ToReportLayoutPageHeaderHeaderItemOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderHeaderItemArgs) ToReportLayoutPageHeaderHeaderItemOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderHeaderItemOutput)
}

func (i ReportLayoutPageHeaderHeaderItemArgs) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageHeaderHeaderItem] {
	return pulumix.Output[ReportLayoutPageHeaderHeaderItem]{
		OutputState: i.ToReportLayoutPageHeaderHeaderItemOutputWithContext(ctx).OutputState,
	}
}

// ReportLayoutPageHeaderHeaderItemArrayInput is an input type that accepts ReportLayoutPageHeaderHeaderItemArray and ReportLayoutPageHeaderHeaderItemArrayOutput values.
// You can construct a concrete instance of `ReportLayoutPageHeaderHeaderItemArrayInput` via:
//
//	ReportLayoutPageHeaderHeaderItemArray{ ReportLayoutPageHeaderHeaderItemArgs{...} }
type ReportLayoutPageHeaderHeaderItemArrayInput interface {
	pulumi.Input

	ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput
	ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput
}

type ReportLayoutPageHeaderHeaderItemArray []ReportLayoutPageHeaderHeaderItemInput

func (ReportLayoutPageHeaderHeaderItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (i ReportLayoutPageHeaderHeaderItemArray) ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return i.ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(context.Background())
}

func (i ReportLayoutPageHeaderHeaderItemArray) ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportLayoutPageHeaderHeaderItemArrayOutput)
}

func (i ReportLayoutPageHeaderHeaderItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutPageHeaderHeaderItem] {
	return pulumix.Output[[]ReportLayoutPageHeaderHeaderItem]{
		OutputState: i.ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ReportLayoutPageHeaderHeaderItemOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderHeaderItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ToReportLayoutPageHeaderHeaderItemOutput() ReportLayoutPageHeaderHeaderItemOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ToReportLayoutPageHeaderHeaderItemOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ToOutput(ctx context.Context) pulumix.Output[ReportLayoutPageHeaderHeaderItem] {
	return pulumix.Output[ReportLayoutPageHeaderHeaderItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageHeaderHeaderItemOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageHeaderHeaderItemOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageHeaderHeaderItemOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o ReportLayoutPageHeaderHeaderItemOutput) ImgSrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.ImgSrc }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageHeaderHeaderItemOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Style }).(pulumi.StringPtrOutput)
}

func (o ReportLayoutPageHeaderHeaderItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportLayoutPageHeaderHeaderItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReportLayoutPageHeaderHeaderItemArrayOutput struct{ *pulumi.OutputState }

func (ReportLayoutPageHeaderHeaderItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportLayoutPageHeaderHeaderItem)(nil)).Elem()
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) ToReportLayoutPageHeaderHeaderItemArrayOutput() ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) ToReportLayoutPageHeaderHeaderItemArrayOutputWithContext(ctx context.Context) ReportLayoutPageHeaderHeaderItemArrayOutput {
	return o
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReportLayoutPageHeaderHeaderItem] {
	return pulumix.Output[[]ReportLayoutPageHeaderHeaderItem]{
		OutputState: o.OutputState,
	}
}

func (o ReportLayoutPageHeaderHeaderItemArrayOutput) Index(i pulumi.IntInput) ReportLayoutPageHeaderHeaderItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportLayoutPageHeaderHeaderItem {
		return vs[0].([]ReportLayoutPageHeaderHeaderItem)[vs[1].(int)]
	}).(ReportLayoutPageHeaderHeaderItemOutput)
}

type RouterAccessList6Rule struct {
	Action     *string `pulumi:"action"`
	ExactMatch *string `pulumi:"exactMatch"`
	Flags      *int    `pulumi:"flags"`
	Id         *int    `pulumi:"id"`
	Prefix6    *string `pulumi:"prefix6"`
}

// RouterAccessList6RuleInput is an input type that accepts RouterAccessList6RuleArgs and RouterAccessList6RuleOutput values.
// You can construct a concrete instance of `RouterAccessList6RuleInput` via:
//
//	RouterAccessList6RuleArgs{...}
type RouterAccessList6RuleInput interface {
	pulumi.Input

	ToRouterAccessList6RuleOutput() RouterAccessList6RuleOutput
	ToRouterAccessList6RuleOutputWithContext(context.Context) RouterAccessList6RuleOutput
}

type RouterAccessList6RuleArgs struct {
	Action     pulumi.StringPtrInput `pulumi:"action"`
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	Flags      pulumi.IntPtrInput    `pulumi:"flags"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6    pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterAccessList6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccessList6Rule)(nil)).Elem()
}

func (i RouterAccessList6RuleArgs) ToRouterAccessList6RuleOutput() RouterAccessList6RuleOutput {
	return i.ToRouterAccessList6RuleOutputWithContext(context.Background())
}

func (i RouterAccessList6RuleArgs) ToRouterAccessList6RuleOutputWithContext(ctx context.Context) RouterAccessList6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessList6RuleOutput)
}

func (i RouterAccessList6RuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterAccessList6Rule] {
	return pulumix.Output[RouterAccessList6Rule]{
		OutputState: i.ToRouterAccessList6RuleOutputWithContext(ctx).OutputState,
	}
}

// RouterAccessList6RuleArrayInput is an input type that accepts RouterAccessList6RuleArray and RouterAccessList6RuleArrayOutput values.
// You can construct a concrete instance of `RouterAccessList6RuleArrayInput` via:
//
//	RouterAccessList6RuleArray{ RouterAccessList6RuleArgs{...} }
type RouterAccessList6RuleArrayInput interface {
	pulumi.Input

	ToRouterAccessList6RuleArrayOutput() RouterAccessList6RuleArrayOutput
	ToRouterAccessList6RuleArrayOutputWithContext(context.Context) RouterAccessList6RuleArrayOutput
}

type RouterAccessList6RuleArray []RouterAccessList6RuleInput

func (RouterAccessList6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccessList6Rule)(nil)).Elem()
}

func (i RouterAccessList6RuleArray) ToRouterAccessList6RuleArrayOutput() RouterAccessList6RuleArrayOutput {
	return i.ToRouterAccessList6RuleArrayOutputWithContext(context.Background())
}

func (i RouterAccessList6RuleArray) ToRouterAccessList6RuleArrayOutputWithContext(ctx context.Context) RouterAccessList6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessList6RuleArrayOutput)
}

func (i RouterAccessList6RuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterAccessList6Rule] {
	return pulumix.Output[[]RouterAccessList6Rule]{
		OutputState: i.ToRouterAccessList6RuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterAccessList6RuleOutput struct{ *pulumi.OutputState }

func (RouterAccessList6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccessList6Rule)(nil)).Elem()
}

func (o RouterAccessList6RuleOutput) ToRouterAccessList6RuleOutput() RouterAccessList6RuleOutput {
	return o
}

func (o RouterAccessList6RuleOutput) ToRouterAccessList6RuleOutputWithContext(ctx context.Context) RouterAccessList6RuleOutput {
	return o
}

func (o RouterAccessList6RuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterAccessList6Rule] {
	return pulumix.Output[RouterAccessList6Rule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAccessList6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessList6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterAccessList6RuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessList6Rule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

func (o RouterAccessList6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccessList6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterAccessList6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccessList6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterAccessList6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessList6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterAccessList6RuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAccessList6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccessList6Rule)(nil)).Elem()
}

func (o RouterAccessList6RuleArrayOutput) ToRouterAccessList6RuleArrayOutput() RouterAccessList6RuleArrayOutput {
	return o
}

func (o RouterAccessList6RuleArrayOutput) ToRouterAccessList6RuleArrayOutputWithContext(ctx context.Context) RouterAccessList6RuleArrayOutput {
	return o
}

func (o RouterAccessList6RuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterAccessList6Rule] {
	return pulumix.Output[[]RouterAccessList6Rule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAccessList6RuleArrayOutput) Index(i pulumi.IntInput) RouterAccessList6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAccessList6Rule {
		return vs[0].([]RouterAccessList6Rule)[vs[1].(int)]
	}).(RouterAccessList6RuleOutput)
}

type RouterAccessListRule struct {
	Action     *string `pulumi:"action"`
	ExactMatch *string `pulumi:"exactMatch"`
	Flags      *int    `pulumi:"flags"`
	Id         *int    `pulumi:"id"`
	Prefix     *string `pulumi:"prefix"`
	Wildcard   *string `pulumi:"wildcard"`
}

// RouterAccessListRuleInput is an input type that accepts RouterAccessListRuleArgs and RouterAccessListRuleOutput values.
// You can construct a concrete instance of `RouterAccessListRuleInput` via:
//
//	RouterAccessListRuleArgs{...}
type RouterAccessListRuleInput interface {
	pulumi.Input

	ToRouterAccessListRuleOutput() RouterAccessListRuleOutput
	ToRouterAccessListRuleOutputWithContext(context.Context) RouterAccessListRuleOutput
}

type RouterAccessListRuleArgs struct {
	Action     pulumi.StringPtrInput `pulumi:"action"`
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	Flags      pulumi.IntPtrInput    `pulumi:"flags"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Prefix     pulumi.StringPtrInput `pulumi:"prefix"`
	Wildcard   pulumi.StringPtrInput `pulumi:"wildcard"`
}

func (RouterAccessListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccessListRule)(nil)).Elem()
}

func (i RouterAccessListRuleArgs) ToRouterAccessListRuleOutput() RouterAccessListRuleOutput {
	return i.ToRouterAccessListRuleOutputWithContext(context.Background())
}

func (i RouterAccessListRuleArgs) ToRouterAccessListRuleOutputWithContext(ctx context.Context) RouterAccessListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessListRuleOutput)
}

func (i RouterAccessListRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterAccessListRule] {
	return pulumix.Output[RouterAccessListRule]{
		OutputState: i.ToRouterAccessListRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterAccessListRuleArrayInput is an input type that accepts RouterAccessListRuleArray and RouterAccessListRuleArrayOutput values.
// You can construct a concrete instance of `RouterAccessListRuleArrayInput` via:
//
//	RouterAccessListRuleArray{ RouterAccessListRuleArgs{...} }
type RouterAccessListRuleArrayInput interface {
	pulumi.Input

	ToRouterAccessListRuleArrayOutput() RouterAccessListRuleArrayOutput
	ToRouterAccessListRuleArrayOutputWithContext(context.Context) RouterAccessListRuleArrayOutput
}

type RouterAccessListRuleArray []RouterAccessListRuleInput

func (RouterAccessListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccessListRule)(nil)).Elem()
}

func (i RouterAccessListRuleArray) ToRouterAccessListRuleArrayOutput() RouterAccessListRuleArrayOutput {
	return i.ToRouterAccessListRuleArrayOutputWithContext(context.Background())
}

func (i RouterAccessListRuleArray) ToRouterAccessListRuleArrayOutputWithContext(ctx context.Context) RouterAccessListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAccessListRuleArrayOutput)
}

func (i RouterAccessListRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterAccessListRule] {
	return pulumix.Output[[]RouterAccessListRule]{
		OutputState: i.ToRouterAccessListRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterAccessListRuleOutput struct{ *pulumi.OutputState }

func (RouterAccessListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAccessListRule)(nil)).Elem()
}

func (o RouterAccessListRuleOutput) ToRouterAccessListRuleOutput() RouterAccessListRuleOutput {
	return o
}

func (o RouterAccessListRuleOutput) ToRouterAccessListRuleOutputWithContext(ctx context.Context) RouterAccessListRuleOutput {
	return o
}

func (o RouterAccessListRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterAccessListRule] {
	return pulumix.Output[RouterAccessListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAccessListRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterAccessListRuleOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

func (o RouterAccessListRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterAccessListRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterAccessListRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouterAccessListRuleOutput) Wildcard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAccessListRule) *string { return v.Wildcard }).(pulumi.StringPtrOutput)
}

type RouterAccessListRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAccessListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAccessListRule)(nil)).Elem()
}

func (o RouterAccessListRuleArrayOutput) ToRouterAccessListRuleArrayOutput() RouterAccessListRuleArrayOutput {
	return o
}

func (o RouterAccessListRuleArrayOutput) ToRouterAccessListRuleArrayOutputWithContext(ctx context.Context) RouterAccessListRuleArrayOutput {
	return o
}

func (o RouterAccessListRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterAccessListRule] {
	return pulumix.Output[[]RouterAccessListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAccessListRuleArrayOutput) Index(i pulumi.IntInput) RouterAccessListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAccessListRule {
		return vs[0].([]RouterAccessListRule)[vs[1].(int)]
	}).(RouterAccessListRuleOutput)
}

type RouterAspathListRule struct {
	Action *string `pulumi:"action"`
	Id     *int    `pulumi:"id"`
	Regexp *string `pulumi:"regexp"`
}

// RouterAspathListRuleInput is an input type that accepts RouterAspathListRuleArgs and RouterAspathListRuleOutput values.
// You can construct a concrete instance of `RouterAspathListRuleInput` via:
//
//	RouterAspathListRuleArgs{...}
type RouterAspathListRuleInput interface {
	pulumi.Input

	ToRouterAspathListRuleOutput() RouterAspathListRuleOutput
	ToRouterAspathListRuleOutputWithContext(context.Context) RouterAspathListRuleOutput
}

type RouterAspathListRuleArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (RouterAspathListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAspathListRule)(nil)).Elem()
}

func (i RouterAspathListRuleArgs) ToRouterAspathListRuleOutput() RouterAspathListRuleOutput {
	return i.ToRouterAspathListRuleOutputWithContext(context.Background())
}

func (i RouterAspathListRuleArgs) ToRouterAspathListRuleOutputWithContext(ctx context.Context) RouterAspathListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAspathListRuleOutput)
}

func (i RouterAspathListRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterAspathListRule] {
	return pulumix.Output[RouterAspathListRule]{
		OutputState: i.ToRouterAspathListRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterAspathListRuleArrayInput is an input type that accepts RouterAspathListRuleArray and RouterAspathListRuleArrayOutput values.
// You can construct a concrete instance of `RouterAspathListRuleArrayInput` via:
//
//	RouterAspathListRuleArray{ RouterAspathListRuleArgs{...} }
type RouterAspathListRuleArrayInput interface {
	pulumi.Input

	ToRouterAspathListRuleArrayOutput() RouterAspathListRuleArrayOutput
	ToRouterAspathListRuleArrayOutputWithContext(context.Context) RouterAspathListRuleArrayOutput
}

type RouterAspathListRuleArray []RouterAspathListRuleInput

func (RouterAspathListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAspathListRule)(nil)).Elem()
}

func (i RouterAspathListRuleArray) ToRouterAspathListRuleArrayOutput() RouterAspathListRuleArrayOutput {
	return i.ToRouterAspathListRuleArrayOutputWithContext(context.Background())
}

func (i RouterAspathListRuleArray) ToRouterAspathListRuleArrayOutputWithContext(ctx context.Context) RouterAspathListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterAspathListRuleArrayOutput)
}

func (i RouterAspathListRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterAspathListRule] {
	return pulumix.Output[[]RouterAspathListRule]{
		OutputState: i.ToRouterAspathListRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterAspathListRuleOutput struct{ *pulumi.OutputState }

func (RouterAspathListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterAspathListRule)(nil)).Elem()
}

func (o RouterAspathListRuleOutput) ToRouterAspathListRuleOutput() RouterAspathListRuleOutput {
	return o
}

func (o RouterAspathListRuleOutput) ToRouterAspathListRuleOutputWithContext(ctx context.Context) RouterAspathListRuleOutput {
	return o
}

func (o RouterAspathListRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterAspathListRule] {
	return pulumix.Output[RouterAspathListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAspathListRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAspathListRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterAspathListRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterAspathListRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterAspathListRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterAspathListRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type RouterAspathListRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterAspathListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterAspathListRule)(nil)).Elem()
}

func (o RouterAspathListRuleArrayOutput) ToRouterAspathListRuleArrayOutput() RouterAspathListRuleArrayOutput {
	return o
}

func (o RouterAspathListRuleArrayOutput) ToRouterAspathListRuleArrayOutputWithContext(ctx context.Context) RouterAspathListRuleArrayOutput {
	return o
}

func (o RouterAspathListRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterAspathListRule] {
	return pulumix.Output[[]RouterAspathListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterAspathListRuleArrayOutput) Index(i pulumi.IntInput) RouterAspathListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterAspathListRule {
		return vs[0].([]RouterAspathListRule)[vs[1].(int)]
	}).(RouterAspathListRuleOutput)
}

type RouterBfd6MultihopTemplate struct {
	AuthMode         *string `pulumi:"authMode"`
	BfdDesiredMinTx  *int    `pulumi:"bfdDesiredMinTx"`
	BfdDetectMult    *int    `pulumi:"bfdDetectMult"`
	BfdRequiredMinRx *int    `pulumi:"bfdRequiredMinRx"`
	Dst              *string `pulumi:"dst"`
	Id               *int    `pulumi:"id"`
	Md5Key           *string `pulumi:"md5Key"`
	Src              *string `pulumi:"src"`
}

// RouterBfd6MultihopTemplateInput is an input type that accepts RouterBfd6MultihopTemplateArgs and RouterBfd6MultihopTemplateOutput values.
// You can construct a concrete instance of `RouterBfd6MultihopTemplateInput` via:
//
//	RouterBfd6MultihopTemplateArgs{...}
type RouterBfd6MultihopTemplateInput interface {
	pulumi.Input

	ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput
	ToRouterBfd6MultihopTemplateOutputWithContext(context.Context) RouterBfd6MultihopTemplateOutput
}

type RouterBfd6MultihopTemplateArgs struct {
	AuthMode         pulumi.StringPtrInput `pulumi:"authMode"`
	BfdDesiredMinTx  pulumi.IntPtrInput    `pulumi:"bfdDesiredMinTx"`
	BfdDetectMult    pulumi.IntPtrInput    `pulumi:"bfdDetectMult"`
	BfdRequiredMinRx pulumi.IntPtrInput    `pulumi:"bfdRequiredMinRx"`
	Dst              pulumi.StringPtrInput `pulumi:"dst"`
	Id               pulumi.IntPtrInput    `pulumi:"id"`
	Md5Key           pulumi.StringPtrInput `pulumi:"md5Key"`
	Src              pulumi.StringPtrInput `pulumi:"src"`
}

func (RouterBfd6MultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i RouterBfd6MultihopTemplateArgs) ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput {
	return i.ToRouterBfd6MultihopTemplateOutputWithContext(context.Background())
}

func (i RouterBfd6MultihopTemplateArgs) ToRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6MultihopTemplateOutput)
}

func (i RouterBfd6MultihopTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBfd6MultihopTemplate] {
	return pulumix.Output[RouterBfd6MultihopTemplate]{
		OutputState: i.ToRouterBfd6MultihopTemplateOutputWithContext(ctx).OutputState,
	}
}

// RouterBfd6MultihopTemplateArrayInput is an input type that accepts RouterBfd6MultihopTemplateArray and RouterBfd6MultihopTemplateArrayOutput values.
// You can construct a concrete instance of `RouterBfd6MultihopTemplateArrayInput` via:
//
//	RouterBfd6MultihopTemplateArray{ RouterBfd6MultihopTemplateArgs{...} }
type RouterBfd6MultihopTemplateArrayInput interface {
	pulumi.Input

	ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput
	ToRouterBfd6MultihopTemplateArrayOutputWithContext(context.Context) RouterBfd6MultihopTemplateArrayOutput
}

type RouterBfd6MultihopTemplateArray []RouterBfd6MultihopTemplateInput

func (RouterBfd6MultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (i RouterBfd6MultihopTemplateArray) ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput {
	return i.ToRouterBfd6MultihopTemplateArrayOutputWithContext(context.Background())
}

func (i RouterBfd6MultihopTemplateArray) ToRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6MultihopTemplateArrayOutput)
}

func (i RouterBfd6MultihopTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfd6MultihopTemplate] {
	return pulumix.Output[[]RouterBfd6MultihopTemplate]{
		OutputState: i.ToRouterBfd6MultihopTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBfd6MultihopTemplateOutput struct{ *pulumi.OutputState }

func (RouterBfd6MultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o RouterBfd6MultihopTemplateOutput) ToRouterBfd6MultihopTemplateOutput() RouterBfd6MultihopTemplateOutput {
	return o
}

func (o RouterBfd6MultihopTemplateOutput) ToRouterBfd6MultihopTemplateOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateOutput {
	return o
}

func (o RouterBfd6MultihopTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBfd6MultihopTemplate] {
	return pulumix.Output[RouterBfd6MultihopTemplate]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfd6MultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

func (o RouterBfd6MultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6MultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type RouterBfd6MultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (RouterBfd6MultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6MultihopTemplate)(nil)).Elem()
}

func (o RouterBfd6MultihopTemplateArrayOutput) ToRouterBfd6MultihopTemplateArrayOutput() RouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o RouterBfd6MultihopTemplateArrayOutput) ToRouterBfd6MultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfd6MultihopTemplateArrayOutput {
	return o
}

func (o RouterBfd6MultihopTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfd6MultihopTemplate] {
	return pulumix.Output[[]RouterBfd6MultihopTemplate]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfd6MultihopTemplateArrayOutput) Index(i pulumi.IntInput) RouterBfd6MultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfd6MultihopTemplate {
		return vs[0].([]RouterBfd6MultihopTemplate)[vs[1].(int)]
	}).(RouterBfd6MultihopTemplateOutput)
}

type RouterBfd6Neighbor struct {
	Interface  *string `pulumi:"interface"`
	Ip6Address *string `pulumi:"ip6Address"`
}

// RouterBfd6NeighborInput is an input type that accepts RouterBfd6NeighborArgs and RouterBfd6NeighborOutput values.
// You can construct a concrete instance of `RouterBfd6NeighborInput` via:
//
//	RouterBfd6NeighborArgs{...}
type RouterBfd6NeighborInput interface {
	pulumi.Input

	ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput
	ToRouterBfd6NeighborOutputWithContext(context.Context) RouterBfd6NeighborOutput
}

type RouterBfd6NeighborArgs struct {
	Interface  pulumi.StringPtrInput `pulumi:"interface"`
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (RouterBfd6NeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6Neighbor)(nil)).Elem()
}

func (i RouterBfd6NeighborArgs) ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput {
	return i.ToRouterBfd6NeighborOutputWithContext(context.Background())
}

func (i RouterBfd6NeighborArgs) ToRouterBfd6NeighborOutputWithContext(ctx context.Context) RouterBfd6NeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6NeighborOutput)
}

func (i RouterBfd6NeighborArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBfd6Neighbor] {
	return pulumix.Output[RouterBfd6Neighbor]{
		OutputState: i.ToRouterBfd6NeighborOutputWithContext(ctx).OutputState,
	}
}

// RouterBfd6NeighborArrayInput is an input type that accepts RouterBfd6NeighborArray and RouterBfd6NeighborArrayOutput values.
// You can construct a concrete instance of `RouterBfd6NeighborArrayInput` via:
//
//	RouterBfd6NeighborArray{ RouterBfd6NeighborArgs{...} }
type RouterBfd6NeighborArrayInput interface {
	pulumi.Input

	ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput
	ToRouterBfd6NeighborArrayOutputWithContext(context.Context) RouterBfd6NeighborArrayOutput
}

type RouterBfd6NeighborArray []RouterBfd6NeighborInput

func (RouterBfd6NeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6Neighbor)(nil)).Elem()
}

func (i RouterBfd6NeighborArray) ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput {
	return i.ToRouterBfd6NeighborArrayOutputWithContext(context.Background())
}

func (i RouterBfd6NeighborArray) ToRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) RouterBfd6NeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfd6NeighborArrayOutput)
}

func (i RouterBfd6NeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfd6Neighbor] {
	return pulumix.Output[[]RouterBfd6Neighbor]{
		OutputState: i.ToRouterBfd6NeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBfd6NeighborOutput struct{ *pulumi.OutputState }

func (RouterBfd6NeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfd6Neighbor)(nil)).Elem()
}

func (o RouterBfd6NeighborOutput) ToRouterBfd6NeighborOutput() RouterBfd6NeighborOutput {
	return o
}

func (o RouterBfd6NeighborOutput) ToRouterBfd6NeighborOutputWithContext(ctx context.Context) RouterBfd6NeighborOutput {
	return o
}

func (o RouterBfd6NeighborOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBfd6Neighbor] {
	return pulumix.Output[RouterBfd6Neighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfd6NeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6Neighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBfd6NeighborOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfd6Neighbor) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type RouterBfd6NeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterBfd6NeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfd6Neighbor)(nil)).Elem()
}

func (o RouterBfd6NeighborArrayOutput) ToRouterBfd6NeighborArrayOutput() RouterBfd6NeighborArrayOutput {
	return o
}

func (o RouterBfd6NeighborArrayOutput) ToRouterBfd6NeighborArrayOutputWithContext(ctx context.Context) RouterBfd6NeighborArrayOutput {
	return o
}

func (o RouterBfd6NeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfd6Neighbor] {
	return pulumix.Output[[]RouterBfd6Neighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfd6NeighborArrayOutput) Index(i pulumi.IntInput) RouterBfd6NeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfd6Neighbor {
		return vs[0].([]RouterBfd6Neighbor)[vs[1].(int)]
	}).(RouterBfd6NeighborOutput)
}

type RouterBfdMultihopTemplate struct {
	AuthMode         *string `pulumi:"authMode"`
	BfdDesiredMinTx  *int    `pulumi:"bfdDesiredMinTx"`
	BfdDetectMult    *int    `pulumi:"bfdDetectMult"`
	BfdRequiredMinRx *int    `pulumi:"bfdRequiredMinRx"`
	Dst              *string `pulumi:"dst"`
	Id               *int    `pulumi:"id"`
	Md5Key           *string `pulumi:"md5Key"`
	Src              *string `pulumi:"src"`
}

// RouterBfdMultihopTemplateInput is an input type that accepts RouterBfdMultihopTemplateArgs and RouterBfdMultihopTemplateOutput values.
// You can construct a concrete instance of `RouterBfdMultihopTemplateInput` via:
//
//	RouterBfdMultihopTemplateArgs{...}
type RouterBfdMultihopTemplateInput interface {
	pulumi.Input

	ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput
	ToRouterBfdMultihopTemplateOutputWithContext(context.Context) RouterBfdMultihopTemplateOutput
}

type RouterBfdMultihopTemplateArgs struct {
	AuthMode         pulumi.StringPtrInput `pulumi:"authMode"`
	BfdDesiredMinTx  pulumi.IntPtrInput    `pulumi:"bfdDesiredMinTx"`
	BfdDetectMult    pulumi.IntPtrInput    `pulumi:"bfdDetectMult"`
	BfdRequiredMinRx pulumi.IntPtrInput    `pulumi:"bfdRequiredMinRx"`
	Dst              pulumi.StringPtrInput `pulumi:"dst"`
	Id               pulumi.IntPtrInput    `pulumi:"id"`
	Md5Key           pulumi.StringPtrInput `pulumi:"md5Key"`
	Src              pulumi.StringPtrInput `pulumi:"src"`
}

func (RouterBfdMultihopTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdMultihopTemplate)(nil)).Elem()
}

func (i RouterBfdMultihopTemplateArgs) ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput {
	return i.ToRouterBfdMultihopTemplateOutputWithContext(context.Background())
}

func (i RouterBfdMultihopTemplateArgs) ToRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdMultihopTemplateOutput)
}

func (i RouterBfdMultihopTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBfdMultihopTemplate] {
	return pulumix.Output[RouterBfdMultihopTemplate]{
		OutputState: i.ToRouterBfdMultihopTemplateOutputWithContext(ctx).OutputState,
	}
}

// RouterBfdMultihopTemplateArrayInput is an input type that accepts RouterBfdMultihopTemplateArray and RouterBfdMultihopTemplateArrayOutput values.
// You can construct a concrete instance of `RouterBfdMultihopTemplateArrayInput` via:
//
//	RouterBfdMultihopTemplateArray{ RouterBfdMultihopTemplateArgs{...} }
type RouterBfdMultihopTemplateArrayInput interface {
	pulumi.Input

	ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput
	ToRouterBfdMultihopTemplateArrayOutputWithContext(context.Context) RouterBfdMultihopTemplateArrayOutput
}

type RouterBfdMultihopTemplateArray []RouterBfdMultihopTemplateInput

func (RouterBfdMultihopTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdMultihopTemplate)(nil)).Elem()
}

func (i RouterBfdMultihopTemplateArray) ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput {
	return i.ToRouterBfdMultihopTemplateArrayOutputWithContext(context.Background())
}

func (i RouterBfdMultihopTemplateArray) ToRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdMultihopTemplateArrayOutput)
}

func (i RouterBfdMultihopTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfdMultihopTemplate] {
	return pulumix.Output[[]RouterBfdMultihopTemplate]{
		OutputState: i.ToRouterBfdMultihopTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBfdMultihopTemplateOutput struct{ *pulumi.OutputState }

func (RouterBfdMultihopTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdMultihopTemplate)(nil)).Elem()
}

func (o RouterBfdMultihopTemplateOutput) ToRouterBfdMultihopTemplateOutput() RouterBfdMultihopTemplateOutput {
	return o
}

func (o RouterBfdMultihopTemplateOutput) ToRouterBfdMultihopTemplateOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateOutput {
	return o
}

func (o RouterBfdMultihopTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBfdMultihopTemplate] {
	return pulumix.Output[RouterBfdMultihopTemplate]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfdMultihopTemplateOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) BfdDesiredMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdDesiredMinTx }).(pulumi.IntPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) BfdDetectMult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdDetectMult }).(pulumi.IntPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) BfdRequiredMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.BfdRequiredMinRx }).(pulumi.IntPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

func (o RouterBfdMultihopTemplateOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdMultihopTemplate) *string { return v.Src }).(pulumi.StringPtrOutput)
}

type RouterBfdMultihopTemplateArrayOutput struct{ *pulumi.OutputState }

func (RouterBfdMultihopTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdMultihopTemplate)(nil)).Elem()
}

func (o RouterBfdMultihopTemplateArrayOutput) ToRouterBfdMultihopTemplateArrayOutput() RouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o RouterBfdMultihopTemplateArrayOutput) ToRouterBfdMultihopTemplateArrayOutputWithContext(ctx context.Context) RouterBfdMultihopTemplateArrayOutput {
	return o
}

func (o RouterBfdMultihopTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfdMultihopTemplate] {
	return pulumix.Output[[]RouterBfdMultihopTemplate]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfdMultihopTemplateArrayOutput) Index(i pulumi.IntInput) RouterBfdMultihopTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfdMultihopTemplate {
		return vs[0].([]RouterBfdMultihopTemplate)[vs[1].(int)]
	}).(RouterBfdMultihopTemplateOutput)
}

type RouterBfdNeighbor struct {
	Interface *string `pulumi:"interface"`
	Ip        *string `pulumi:"ip"`
}

// RouterBfdNeighborInput is an input type that accepts RouterBfdNeighborArgs and RouterBfdNeighborOutput values.
// You can construct a concrete instance of `RouterBfdNeighborInput` via:
//
//	RouterBfdNeighborArgs{...}
type RouterBfdNeighborInput interface {
	pulumi.Input

	ToRouterBfdNeighborOutput() RouterBfdNeighborOutput
	ToRouterBfdNeighborOutputWithContext(context.Context) RouterBfdNeighborOutput
}

type RouterBfdNeighborArgs struct {
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	Ip        pulumi.StringPtrInput `pulumi:"ip"`
}

func (RouterBfdNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdNeighbor)(nil)).Elem()
}

func (i RouterBfdNeighborArgs) ToRouterBfdNeighborOutput() RouterBfdNeighborOutput {
	return i.ToRouterBfdNeighborOutputWithContext(context.Background())
}

func (i RouterBfdNeighborArgs) ToRouterBfdNeighborOutputWithContext(ctx context.Context) RouterBfdNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdNeighborOutput)
}

func (i RouterBfdNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBfdNeighbor] {
	return pulumix.Output[RouterBfdNeighbor]{
		OutputState: i.ToRouterBfdNeighborOutputWithContext(ctx).OutputState,
	}
}

// RouterBfdNeighborArrayInput is an input type that accepts RouterBfdNeighborArray and RouterBfdNeighborArrayOutput values.
// You can construct a concrete instance of `RouterBfdNeighborArrayInput` via:
//
//	RouterBfdNeighborArray{ RouterBfdNeighborArgs{...} }
type RouterBfdNeighborArrayInput interface {
	pulumi.Input

	ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput
	ToRouterBfdNeighborArrayOutputWithContext(context.Context) RouterBfdNeighborArrayOutput
}

type RouterBfdNeighborArray []RouterBfdNeighborInput

func (RouterBfdNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdNeighbor)(nil)).Elem()
}

func (i RouterBfdNeighborArray) ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput {
	return i.ToRouterBfdNeighborArrayOutputWithContext(context.Background())
}

func (i RouterBfdNeighborArray) ToRouterBfdNeighborArrayOutputWithContext(ctx context.Context) RouterBfdNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBfdNeighborArrayOutput)
}

func (i RouterBfdNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfdNeighbor] {
	return pulumix.Output[[]RouterBfdNeighbor]{
		OutputState: i.ToRouterBfdNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBfdNeighborOutput struct{ *pulumi.OutputState }

func (RouterBfdNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBfdNeighbor)(nil)).Elem()
}

func (o RouterBfdNeighborOutput) ToRouterBfdNeighborOutput() RouterBfdNeighborOutput {
	return o
}

func (o RouterBfdNeighborOutput) ToRouterBfdNeighborOutputWithContext(ctx context.Context) RouterBfdNeighborOutput {
	return o
}

func (o RouterBfdNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBfdNeighbor] {
	return pulumix.Output[RouterBfdNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfdNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBfdNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBfdNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type RouterBfdNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterBfdNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBfdNeighbor)(nil)).Elem()
}

func (o RouterBfdNeighborArrayOutput) ToRouterBfdNeighborArrayOutput() RouterBfdNeighborArrayOutput {
	return o
}

func (o RouterBfdNeighborArrayOutput) ToRouterBfdNeighborArrayOutputWithContext(ctx context.Context) RouterBfdNeighborArrayOutput {
	return o
}

func (o RouterBfdNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBfdNeighbor] {
	return pulumix.Output[[]RouterBfdNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterBfdNeighborArrayOutput) Index(i pulumi.IntInput) RouterBfdNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBfdNeighbor {
		return vs[0].([]RouterBfdNeighbor)[vs[1].(int)]
	}).(RouterBfdNeighborOutput)
}

type RouterBgpAdminDistance struct {
	Distance        *int    `pulumi:"distance"`
	Id              *int    `pulumi:"id"`
	NeighbourPrefix *string `pulumi:"neighbourPrefix"`
	RouteList       *string `pulumi:"routeList"`
}

// RouterBgpAdminDistanceInput is an input type that accepts RouterBgpAdminDistanceArgs and RouterBgpAdminDistanceOutput values.
// You can construct a concrete instance of `RouterBgpAdminDistanceInput` via:
//
//	RouterBgpAdminDistanceArgs{...}
type RouterBgpAdminDistanceInput interface {
	pulumi.Input

	ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput
	ToRouterBgpAdminDistanceOutputWithContext(context.Context) RouterBgpAdminDistanceOutput
}

type RouterBgpAdminDistanceArgs struct {
	Distance        pulumi.IntPtrInput    `pulumi:"distance"`
	Id              pulumi.IntPtrInput    `pulumi:"id"`
	NeighbourPrefix pulumi.StringPtrInput `pulumi:"neighbourPrefix"`
	RouteList       pulumi.StringPtrInput `pulumi:"routeList"`
}

func (RouterBgpAdminDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdminDistance)(nil)).Elem()
}

func (i RouterBgpAdminDistanceArgs) ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput {
	return i.ToRouterBgpAdminDistanceOutputWithContext(context.Background())
}

func (i RouterBgpAdminDistanceArgs) ToRouterBgpAdminDistanceOutputWithContext(ctx context.Context) RouterBgpAdminDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdminDistanceOutput)
}

func (i RouterBgpAdminDistanceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAdminDistance] {
	return pulumix.Output[RouterBgpAdminDistance]{
		OutputState: i.ToRouterBgpAdminDistanceOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpAdminDistanceArrayInput is an input type that accepts RouterBgpAdminDistanceArray and RouterBgpAdminDistanceArrayOutput values.
// You can construct a concrete instance of `RouterBgpAdminDistanceArrayInput` via:
//
//	RouterBgpAdminDistanceArray{ RouterBgpAdminDistanceArgs{...} }
type RouterBgpAdminDistanceArrayInput interface {
	pulumi.Input

	ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput
	ToRouterBgpAdminDistanceArrayOutputWithContext(context.Context) RouterBgpAdminDistanceArrayOutput
}

type RouterBgpAdminDistanceArray []RouterBgpAdminDistanceInput

func (RouterBgpAdminDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdminDistance)(nil)).Elem()
}

func (i RouterBgpAdminDistanceArray) ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput {
	return i.ToRouterBgpAdminDistanceArrayOutputWithContext(context.Background())
}

func (i RouterBgpAdminDistanceArray) ToRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) RouterBgpAdminDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdminDistanceArrayOutput)
}

func (i RouterBgpAdminDistanceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAdminDistance] {
	return pulumix.Output[[]RouterBgpAdminDistance]{
		OutputState: i.ToRouterBgpAdminDistanceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpAdminDistanceOutput struct{ *pulumi.OutputState }

func (RouterBgpAdminDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdminDistance)(nil)).Elem()
}

func (o RouterBgpAdminDistanceOutput) ToRouterBgpAdminDistanceOutput() RouterBgpAdminDistanceOutput {
	return o
}

func (o RouterBgpAdminDistanceOutput) ToRouterBgpAdminDistanceOutputWithContext(ctx context.Context) RouterBgpAdminDistanceOutput {
	return o
}

func (o RouterBgpAdminDistanceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAdminDistance] {
	return pulumix.Output[RouterBgpAdminDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAdminDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

func (o RouterBgpAdminDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpAdminDistanceOutput) NeighbourPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *string { return v.NeighbourPrefix }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAdminDistanceOutput) RouteList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAdminDistance) *string { return v.RouteList }).(pulumi.StringPtrOutput)
}

type RouterBgpAdminDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAdminDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdminDistance)(nil)).Elem()
}

func (o RouterBgpAdminDistanceArrayOutput) ToRouterBgpAdminDistanceArrayOutput() RouterBgpAdminDistanceArrayOutput {
	return o
}

func (o RouterBgpAdminDistanceArrayOutput) ToRouterBgpAdminDistanceArrayOutputWithContext(ctx context.Context) RouterBgpAdminDistanceArrayOutput {
	return o
}

func (o RouterBgpAdminDistanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAdminDistance] {
	return pulumix.Output[[]RouterBgpAdminDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAdminDistanceArrayOutput) Index(i pulumi.IntInput) RouterBgpAdminDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAdminDistance {
		return vs[0].([]RouterBgpAdminDistance)[vs[1].(int)]
	}).(RouterBgpAdminDistanceOutput)
}

type RouterBgpAggregateAddress6 struct {
	AsSet       *string `pulumi:"asSet"`
	Id          *int    `pulumi:"id"`
	Prefix6     *string `pulumi:"prefix6"`
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// RouterBgpAggregateAddress6Input is an input type that accepts RouterBgpAggregateAddress6Args and RouterBgpAggregateAddress6Output values.
// You can construct a concrete instance of `RouterBgpAggregateAddress6Input` via:
//
//	RouterBgpAggregateAddress6Args{...}
type RouterBgpAggregateAddress6Input interface {
	pulumi.Input

	ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output
	ToRouterBgpAggregateAddress6OutputWithContext(context.Context) RouterBgpAggregateAddress6Output
}

type RouterBgpAggregateAddress6Args struct {
	AsSet       pulumi.StringPtrInput `pulumi:"asSet"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6     pulumi.StringPtrInput `pulumi:"prefix6"`
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (RouterBgpAggregateAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress6)(nil)).Elem()
}

func (i RouterBgpAggregateAddress6Args) ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output {
	return i.ToRouterBgpAggregateAddress6OutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddress6Args) ToRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) RouterBgpAggregateAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddress6Output)
}

func (i RouterBgpAggregateAddress6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAggregateAddress6] {
	return pulumix.Output[RouterBgpAggregateAddress6]{
		OutputState: i.ToRouterBgpAggregateAddress6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpAggregateAddress6ArrayInput is an input type that accepts RouterBgpAggregateAddress6Array and RouterBgpAggregateAddress6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddress6ArrayInput` via:
//
//	RouterBgpAggregateAddress6Array{ RouterBgpAggregateAddress6Args{...} }
type RouterBgpAggregateAddress6ArrayInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput
	ToRouterBgpAggregateAddress6ArrayOutputWithContext(context.Context) RouterBgpAggregateAddress6ArrayOutput
}

type RouterBgpAggregateAddress6Array []RouterBgpAggregateAddress6Input

func (RouterBgpAggregateAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress6)(nil)).Elem()
}

func (i RouterBgpAggregateAddress6Array) ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput {
	return i.ToRouterBgpAggregateAddress6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddress6Array) ToRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddress6ArrayOutput)
}

func (i RouterBgpAggregateAddress6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAggregateAddress6] {
	return pulumix.Output[[]RouterBgpAggregateAddress6]{
		OutputState: i.ToRouterBgpAggregateAddress6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpAggregateAddress6Output struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress6)(nil)).Elem()
}

func (o RouterBgpAggregateAddress6Output) ToRouterBgpAggregateAddress6Output() RouterBgpAggregateAddress6Output {
	return o
}

func (o RouterBgpAggregateAddress6Output) ToRouterBgpAggregateAddress6OutputWithContext(ctx context.Context) RouterBgpAggregateAddress6Output {
	return o
}

func (o RouterBgpAggregateAddress6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAggregateAddress6] {
	return pulumix.Output[RouterBgpAggregateAddress6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAggregateAddress6Output) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAggregateAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpAggregateAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAggregateAddress6Output) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress6) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type RouterBgpAggregateAddress6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress6)(nil)).Elem()
}

func (o RouterBgpAggregateAddress6ArrayOutput) ToRouterBgpAggregateAddress6ArrayOutput() RouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o RouterBgpAggregateAddress6ArrayOutput) ToRouterBgpAggregateAddress6ArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddress6ArrayOutput {
	return o
}

func (o RouterBgpAggregateAddress6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAggregateAddress6] {
	return pulumix.Output[[]RouterBgpAggregateAddress6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAggregateAddress6ArrayOutput) Index(i pulumi.IntInput) RouterBgpAggregateAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAggregateAddress6 {
		return vs[0].([]RouterBgpAggregateAddress6)[vs[1].(int)]
	}).(RouterBgpAggregateAddress6Output)
}

type RouterBgpAggregateAddress struct {
	AsSet       *string `pulumi:"asSet"`
	Id          *int    `pulumi:"id"`
	Prefix      *string `pulumi:"prefix"`
	SummaryOnly *string `pulumi:"summaryOnly"`
}

// RouterBgpAggregateAddressInput is an input type that accepts RouterBgpAggregateAddressArgs and RouterBgpAggregateAddressOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddressInput` via:
//
//	RouterBgpAggregateAddressArgs{...}
type RouterBgpAggregateAddressInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput
	ToRouterBgpAggregateAddressOutputWithContext(context.Context) RouterBgpAggregateAddressOutput
}

type RouterBgpAggregateAddressArgs struct {
	AsSet       pulumi.StringPtrInput `pulumi:"asSet"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Prefix      pulumi.StringPtrInput `pulumi:"prefix"`
	SummaryOnly pulumi.StringPtrInput `pulumi:"summaryOnly"`
}

func (RouterBgpAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress)(nil)).Elem()
}

func (i RouterBgpAggregateAddressArgs) ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput {
	return i.ToRouterBgpAggregateAddressOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddressArgs) ToRouterBgpAggregateAddressOutputWithContext(ctx context.Context) RouterBgpAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddressOutput)
}

func (i RouterBgpAggregateAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAggregateAddress] {
	return pulumix.Output[RouterBgpAggregateAddress]{
		OutputState: i.ToRouterBgpAggregateAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpAggregateAddressArrayInput is an input type that accepts RouterBgpAggregateAddressArray and RouterBgpAggregateAddressArrayOutput values.
// You can construct a concrete instance of `RouterBgpAggregateAddressArrayInput` via:
//
//	RouterBgpAggregateAddressArray{ RouterBgpAggregateAddressArgs{...} }
type RouterBgpAggregateAddressArrayInput interface {
	pulumi.Input

	ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput
	ToRouterBgpAggregateAddressArrayOutputWithContext(context.Context) RouterBgpAggregateAddressArrayOutput
}

type RouterBgpAggregateAddressArray []RouterBgpAggregateAddressInput

func (RouterBgpAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress)(nil)).Elem()
}

func (i RouterBgpAggregateAddressArray) ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput {
	return i.ToRouterBgpAggregateAddressArrayOutputWithContext(context.Background())
}

func (i RouterBgpAggregateAddressArray) ToRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAggregateAddressArrayOutput)
}

func (i RouterBgpAggregateAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAggregateAddress] {
	return pulumix.Output[[]RouterBgpAggregateAddress]{
		OutputState: i.ToRouterBgpAggregateAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpAggregateAddressOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAggregateAddress)(nil)).Elem()
}

func (o RouterBgpAggregateAddressOutput) ToRouterBgpAggregateAddressOutput() RouterBgpAggregateAddressOutput {
	return o
}

func (o RouterBgpAggregateAddressOutput) ToRouterBgpAggregateAddressOutputWithContext(ctx context.Context) RouterBgpAggregateAddressOutput {
	return o
}

func (o RouterBgpAggregateAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpAggregateAddress] {
	return pulumix.Output[RouterBgpAggregateAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAggregateAddressOutput) AsSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.AsSet }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpAggregateAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAggregateAddressOutput) SummaryOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpAggregateAddress) *string { return v.SummaryOnly }).(pulumi.StringPtrOutput)
}

type RouterBgpAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAggregateAddress)(nil)).Elem()
}

func (o RouterBgpAggregateAddressArrayOutput) ToRouterBgpAggregateAddressArrayOutput() RouterBgpAggregateAddressArrayOutput {
	return o
}

func (o RouterBgpAggregateAddressArrayOutput) ToRouterBgpAggregateAddressArrayOutputWithContext(ctx context.Context) RouterBgpAggregateAddressArrayOutput {
	return o
}

func (o RouterBgpAggregateAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpAggregateAddress] {
	return pulumix.Output[[]RouterBgpAggregateAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpAggregateAddressArrayOutput) Index(i pulumi.IntInput) RouterBgpAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAggregateAddress {
		return vs[0].([]RouterBgpAggregateAddress)[vs[1].(int)]
	}).(RouterBgpAggregateAddressOutput)
}

type RouterBgpConfederationPeer struct {
	Peer *string `pulumi:"peer"`
}

// RouterBgpConfederationPeerInput is an input type that accepts RouterBgpConfederationPeerArgs and RouterBgpConfederationPeerOutput values.
// You can construct a concrete instance of `RouterBgpConfederationPeerInput` via:
//
//	RouterBgpConfederationPeerArgs{...}
type RouterBgpConfederationPeerInput interface {
	pulumi.Input

	ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput
	ToRouterBgpConfederationPeerOutputWithContext(context.Context) RouterBgpConfederationPeerOutput
}

type RouterBgpConfederationPeerArgs struct {
	Peer pulumi.StringPtrInput `pulumi:"peer"`
}

func (RouterBgpConfederationPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpConfederationPeer)(nil)).Elem()
}

func (i RouterBgpConfederationPeerArgs) ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput {
	return i.ToRouterBgpConfederationPeerOutputWithContext(context.Background())
}

func (i RouterBgpConfederationPeerArgs) ToRouterBgpConfederationPeerOutputWithContext(ctx context.Context) RouterBgpConfederationPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpConfederationPeerOutput)
}

func (i RouterBgpConfederationPeerArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpConfederationPeer] {
	return pulumix.Output[RouterBgpConfederationPeer]{
		OutputState: i.ToRouterBgpConfederationPeerOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpConfederationPeerArrayInput is an input type that accepts RouterBgpConfederationPeerArray and RouterBgpConfederationPeerArrayOutput values.
// You can construct a concrete instance of `RouterBgpConfederationPeerArrayInput` via:
//
//	RouterBgpConfederationPeerArray{ RouterBgpConfederationPeerArgs{...} }
type RouterBgpConfederationPeerArrayInput interface {
	pulumi.Input

	ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput
	ToRouterBgpConfederationPeerArrayOutputWithContext(context.Context) RouterBgpConfederationPeerArrayOutput
}

type RouterBgpConfederationPeerArray []RouterBgpConfederationPeerInput

func (RouterBgpConfederationPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpConfederationPeer)(nil)).Elem()
}

func (i RouterBgpConfederationPeerArray) ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput {
	return i.ToRouterBgpConfederationPeerArrayOutputWithContext(context.Background())
}

func (i RouterBgpConfederationPeerArray) ToRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) RouterBgpConfederationPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpConfederationPeerArrayOutput)
}

func (i RouterBgpConfederationPeerArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpConfederationPeer] {
	return pulumix.Output[[]RouterBgpConfederationPeer]{
		OutputState: i.ToRouterBgpConfederationPeerArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpConfederationPeerOutput struct{ *pulumi.OutputState }

func (RouterBgpConfederationPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpConfederationPeer)(nil)).Elem()
}

func (o RouterBgpConfederationPeerOutput) ToRouterBgpConfederationPeerOutput() RouterBgpConfederationPeerOutput {
	return o
}

func (o RouterBgpConfederationPeerOutput) ToRouterBgpConfederationPeerOutputWithContext(ctx context.Context) RouterBgpConfederationPeerOutput {
	return o
}

func (o RouterBgpConfederationPeerOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpConfederationPeer] {
	return pulumix.Output[RouterBgpConfederationPeer]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpConfederationPeerOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpConfederationPeer) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

type RouterBgpConfederationPeerArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpConfederationPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpConfederationPeer)(nil)).Elem()
}

func (o RouterBgpConfederationPeerArrayOutput) ToRouterBgpConfederationPeerArrayOutput() RouterBgpConfederationPeerArrayOutput {
	return o
}

func (o RouterBgpConfederationPeerArrayOutput) ToRouterBgpConfederationPeerArrayOutputWithContext(ctx context.Context) RouterBgpConfederationPeerArrayOutput {
	return o
}

func (o RouterBgpConfederationPeerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpConfederationPeer] {
	return pulumix.Output[[]RouterBgpConfederationPeer]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpConfederationPeerArrayOutput) Index(i pulumi.IntInput) RouterBgpConfederationPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpConfederationPeer {
		return vs[0].([]RouterBgpConfederationPeer)[vs[1].(int)]
	}).(RouterBgpConfederationPeerOutput)
}

type RouterBgpNeighborType struct {
	Activate                       *string                                  `pulumi:"activate"`
	Activate6                      *string                                  `pulumi:"activate6"`
	ActivateEvpn                   *string                                  `pulumi:"activateEvpn"`
	ActivateVpnv4                  *string                                  `pulumi:"activateVpnv4"`
	AdditionalPath                 *string                                  `pulumi:"additionalPath"`
	AdditionalPath6                *string                                  `pulumi:"additionalPath6"`
	AdditionalPathVpnv4            *string                                  `pulumi:"additionalPathVpnv4"`
	AdvAdditionalPath              *int                                     `pulumi:"advAdditionalPath"`
	AdvAdditionalPath6             *int                                     `pulumi:"advAdditionalPath6"`
	AdvAdditionalPathVpnv4         *int                                     `pulumi:"advAdditionalPathVpnv4"`
	AdvertisementInterval          *int                                     `pulumi:"advertisementInterval"`
	AllowasIn                      *int                                     `pulumi:"allowasIn"`
	AllowasIn6                     *int                                     `pulumi:"allowasIn6"`
	AllowasInEnable                *string                                  `pulumi:"allowasInEnable"`
	AllowasInEnable6               *string                                  `pulumi:"allowasInEnable6"`
	AllowasInEnableEvpn            *string                                  `pulumi:"allowasInEnableEvpn"`
	AllowasInEnableVpnv4           *string                                  `pulumi:"allowasInEnableVpnv4"`
	AllowasInEvpn                  *int                                     `pulumi:"allowasInEvpn"`
	AllowasInVpnv4                 *int                                     `pulumi:"allowasInVpnv4"`
	AsOverride                     *string                                  `pulumi:"asOverride"`
	AsOverride6                    *string                                  `pulumi:"asOverride6"`
	AttributeUnchanged             *string                                  `pulumi:"attributeUnchanged"`
	AttributeUnchanged6            *string                                  `pulumi:"attributeUnchanged6"`
	AttributeUnchangedVpnv4        *string                                  `pulumi:"attributeUnchangedVpnv4"`
	Bfd                            *string                                  `pulumi:"bfd"`
	CapabilityDefaultOriginate     *string                                  `pulumi:"capabilityDefaultOriginate"`
	CapabilityDefaultOriginate6    *string                                  `pulumi:"capabilityDefaultOriginate6"`
	CapabilityDynamic              *string                                  `pulumi:"capabilityDynamic"`
	CapabilityGracefulRestart      *string                                  `pulumi:"capabilityGracefulRestart"`
	CapabilityGracefulRestart6     *string                                  `pulumi:"capabilityGracefulRestart6"`
	CapabilityGracefulRestartEvpn  *string                                  `pulumi:"capabilityGracefulRestartEvpn"`
	CapabilityGracefulRestartVpnv4 *string                                  `pulumi:"capabilityGracefulRestartVpnv4"`
	CapabilityOrf                  *string                                  `pulumi:"capabilityOrf"`
	CapabilityOrf6                 *string                                  `pulumi:"capabilityOrf6"`
	CapabilityRouteRefresh         *string                                  `pulumi:"capabilityRouteRefresh"`
	ConditionalAdvertise6s         []RouterBgpNeighborConditionalAdvertise6 `pulumi:"conditionalAdvertise6s"`
	ConditionalAdvertises          []RouterBgpNeighborConditionalAdvertise  `pulumi:"conditionalAdvertises"`
	ConnectTimer                   *int                                     `pulumi:"connectTimer"`
	DefaultOriginateRoutemap       *string                                  `pulumi:"defaultOriginateRoutemap"`
	DefaultOriginateRoutemap6      *string                                  `pulumi:"defaultOriginateRoutemap6"`
	Description                    *string                                  `pulumi:"description"`
	DistributeListIn               *string                                  `pulumi:"distributeListIn"`
	DistributeListIn6              *string                                  `pulumi:"distributeListIn6"`
	DistributeListInVpnv4          *string                                  `pulumi:"distributeListInVpnv4"`
	DistributeListOut              *string                                  `pulumi:"distributeListOut"`
	DistributeListOut6             *string                                  `pulumi:"distributeListOut6"`
	DistributeListOutVpnv4         *string                                  `pulumi:"distributeListOutVpnv4"`
	DontCapabilityNegotiate        *string                                  `pulumi:"dontCapabilityNegotiate"`
	EbgpEnforceMultihop            *string                                  `pulumi:"ebgpEnforceMultihop"`
	EbgpMultihopTtl                *int                                     `pulumi:"ebgpMultihopTtl"`
	FilterListIn                   *string                                  `pulumi:"filterListIn"`
	FilterListIn6                  *string                                  `pulumi:"filterListIn6"`
	FilterListInVpnv4              *string                                  `pulumi:"filterListInVpnv4"`
	FilterListOut                  *string                                  `pulumi:"filterListOut"`
	FilterListOut6                 *string                                  `pulumi:"filterListOut6"`
	FilterListOutVpnv4             *string                                  `pulumi:"filterListOutVpnv4"`
	HoldtimeTimer                  *int                                     `pulumi:"holdtimeTimer"`
	Interface                      *string                                  `pulumi:"interface"`
	Ip                             *string                                  `pulumi:"ip"`
	KeepAliveTimer                 *int                                     `pulumi:"keepAliveTimer"`
	LinkDownFailover               *string                                  `pulumi:"linkDownFailover"`
	LocalAs                        *int                                     `pulumi:"localAs"`
	LocalAsNoPrepend               *string                                  `pulumi:"localAsNoPrepend"`
	LocalAsReplaceAs               *string                                  `pulumi:"localAsReplaceAs"`
	MaximumPrefix                  *int                                     `pulumi:"maximumPrefix"`
	MaximumPrefix6                 *int                                     `pulumi:"maximumPrefix6"`
	MaximumPrefixEvpn              *int                                     `pulumi:"maximumPrefixEvpn"`
	MaximumPrefixThreshold         *int                                     `pulumi:"maximumPrefixThreshold"`
	MaximumPrefixThreshold6        *int                                     `pulumi:"maximumPrefixThreshold6"`
	MaximumPrefixThresholdEvpn     *int                                     `pulumi:"maximumPrefixThresholdEvpn"`
	MaximumPrefixThresholdVpnv4    *int                                     `pulumi:"maximumPrefixThresholdVpnv4"`
	MaximumPrefixVpnv4             *int                                     `pulumi:"maximumPrefixVpnv4"`
	MaximumPrefixWarningOnly       *string                                  `pulumi:"maximumPrefixWarningOnly"`
	MaximumPrefixWarningOnly6      *string                                  `pulumi:"maximumPrefixWarningOnly6"`
	MaximumPrefixWarningOnlyEvpn   *string                                  `pulumi:"maximumPrefixWarningOnlyEvpn"`
	MaximumPrefixWarningOnlyVpnv4  *string                                  `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	NextHopSelf                    *string                                  `pulumi:"nextHopSelf"`
	NextHopSelf6                   *string                                  `pulumi:"nextHopSelf6"`
	NextHopSelfRr                  *string                                  `pulumi:"nextHopSelfRr"`
	NextHopSelfRr6                 *string                                  `pulumi:"nextHopSelfRr6"`
	NextHopSelfVpnv4               *string                                  `pulumi:"nextHopSelfVpnv4"`
	OverrideCapability             *string                                  `pulumi:"overrideCapability"`
	Passive                        *string                                  `pulumi:"passive"`
	Password                       *string                                  `pulumi:"password"`
	PrefixListIn                   *string                                  `pulumi:"prefixListIn"`
	PrefixListIn6                  *string                                  `pulumi:"prefixListIn6"`
	PrefixListInVpnv4              *string                                  `pulumi:"prefixListInVpnv4"`
	PrefixListOut                  *string                                  `pulumi:"prefixListOut"`
	PrefixListOut6                 *string                                  `pulumi:"prefixListOut6"`
	PrefixListOutVpnv4             *string                                  `pulumi:"prefixListOutVpnv4"`
	RemoteAs                       *int                                     `pulumi:"remoteAs"`
	RemovePrivateAs                *string                                  `pulumi:"removePrivateAs"`
	RemovePrivateAs6               *string                                  `pulumi:"removePrivateAs6"`
	RemovePrivateAsEvpn            *string                                  `pulumi:"removePrivateAsEvpn"`
	RemovePrivateAsVpnv4           *string                                  `pulumi:"removePrivateAsVpnv4"`
	RestartTime                    *int                                     `pulumi:"restartTime"`
	RetainStaleTime                *int                                     `pulumi:"retainStaleTime"`
	RouteMapIn                     *string                                  `pulumi:"routeMapIn"`
	RouteMapIn6                    *string                                  `pulumi:"routeMapIn6"`
	RouteMapInEvpn                 *string                                  `pulumi:"routeMapInEvpn"`
	RouteMapInVpnv4                *string                                  `pulumi:"routeMapInVpnv4"`
	RouteMapOut                    *string                                  `pulumi:"routeMapOut"`
	RouteMapOut6                   *string                                  `pulumi:"routeMapOut6"`
	RouteMapOut6Preferable         *string                                  `pulumi:"routeMapOut6Preferable"`
	RouteMapOutEvpn                *string                                  `pulumi:"routeMapOutEvpn"`
	RouteMapOutPreferable          *string                                  `pulumi:"routeMapOutPreferable"`
	RouteMapOutVpnv4               *string                                  `pulumi:"routeMapOutVpnv4"`
	RouteMapOutVpnv4Preferable     *string                                  `pulumi:"routeMapOutVpnv4Preferable"`
	RouteReflectorClient           *string                                  `pulumi:"routeReflectorClient"`
	RouteReflectorClient6          *string                                  `pulumi:"routeReflectorClient6"`
	RouteReflectorClientEvpn       *string                                  `pulumi:"routeReflectorClientEvpn"`
	RouteReflectorClientVpnv4      *string                                  `pulumi:"routeReflectorClientVpnv4"`
	RouteServerClient              *string                                  `pulumi:"routeServerClient"`
	RouteServerClient6             *string                                  `pulumi:"routeServerClient6"`
	RouteServerClientEvpn          *string                                  `pulumi:"routeServerClientEvpn"`
	RouteServerClientVpnv4         *string                                  `pulumi:"routeServerClientVpnv4"`
	SendCommunity                  *string                                  `pulumi:"sendCommunity"`
	SendCommunity6                 *string                                  `pulumi:"sendCommunity6"`
	SendCommunityEvpn              *string                                  `pulumi:"sendCommunityEvpn"`
	SendCommunityVpnv4             *string                                  `pulumi:"sendCommunityVpnv4"`
	Shutdown                       *string                                  `pulumi:"shutdown"`
	SoftReconfiguration            *string                                  `pulumi:"softReconfiguration"`
	SoftReconfiguration6           *string                                  `pulumi:"softReconfiguration6"`
	SoftReconfigurationEvpn        *string                                  `pulumi:"softReconfigurationEvpn"`
	SoftReconfigurationVpnv4       *string                                  `pulumi:"softReconfigurationVpnv4"`
	StaleRoute                     *string                                  `pulumi:"staleRoute"`
	StrictCapabilityMatch          *string                                  `pulumi:"strictCapabilityMatch"`
	UnsuppressMap                  *string                                  `pulumi:"unsuppressMap"`
	UnsuppressMap6                 *string                                  `pulumi:"unsuppressMap6"`
	UpdateSource                   *string                                  `pulumi:"updateSource"`
	Weight                         *int                                     `pulumi:"weight"`
}

// RouterBgpNeighborTypeInput is an input type that accepts RouterBgpNeighborTypeArgs and RouterBgpNeighborTypeOutput values.
// You can construct a concrete instance of `RouterBgpNeighborTypeInput` via:
//
//	RouterBgpNeighborTypeArgs{...}
type RouterBgpNeighborTypeInput interface {
	pulumi.Input

	ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput
	ToRouterBgpNeighborTypeOutputWithContext(context.Context) RouterBgpNeighborTypeOutput
}

type RouterBgpNeighborTypeArgs struct {
	Activate                       pulumi.StringPtrInput                            `pulumi:"activate"`
	Activate6                      pulumi.StringPtrInput                            `pulumi:"activate6"`
	ActivateEvpn                   pulumi.StringPtrInput                            `pulumi:"activateEvpn"`
	ActivateVpnv4                  pulumi.StringPtrInput                            `pulumi:"activateVpnv4"`
	AdditionalPath                 pulumi.StringPtrInput                            `pulumi:"additionalPath"`
	AdditionalPath6                pulumi.StringPtrInput                            `pulumi:"additionalPath6"`
	AdditionalPathVpnv4            pulumi.StringPtrInput                            `pulumi:"additionalPathVpnv4"`
	AdvAdditionalPath              pulumi.IntPtrInput                               `pulumi:"advAdditionalPath"`
	AdvAdditionalPath6             pulumi.IntPtrInput                               `pulumi:"advAdditionalPath6"`
	AdvAdditionalPathVpnv4         pulumi.IntPtrInput                               `pulumi:"advAdditionalPathVpnv4"`
	AdvertisementInterval          pulumi.IntPtrInput                               `pulumi:"advertisementInterval"`
	AllowasIn                      pulumi.IntPtrInput                               `pulumi:"allowasIn"`
	AllowasIn6                     pulumi.IntPtrInput                               `pulumi:"allowasIn6"`
	AllowasInEnable                pulumi.StringPtrInput                            `pulumi:"allowasInEnable"`
	AllowasInEnable6               pulumi.StringPtrInput                            `pulumi:"allowasInEnable6"`
	AllowasInEnableEvpn            pulumi.StringPtrInput                            `pulumi:"allowasInEnableEvpn"`
	AllowasInEnableVpnv4           pulumi.StringPtrInput                            `pulumi:"allowasInEnableVpnv4"`
	AllowasInEvpn                  pulumi.IntPtrInput                               `pulumi:"allowasInEvpn"`
	AllowasInVpnv4                 pulumi.IntPtrInput                               `pulumi:"allowasInVpnv4"`
	AsOverride                     pulumi.StringPtrInput                            `pulumi:"asOverride"`
	AsOverride6                    pulumi.StringPtrInput                            `pulumi:"asOverride6"`
	AttributeUnchanged             pulumi.StringPtrInput                            `pulumi:"attributeUnchanged"`
	AttributeUnchanged6            pulumi.StringPtrInput                            `pulumi:"attributeUnchanged6"`
	AttributeUnchangedVpnv4        pulumi.StringPtrInput                            `pulumi:"attributeUnchangedVpnv4"`
	Bfd                            pulumi.StringPtrInput                            `pulumi:"bfd"`
	CapabilityDefaultOriginate     pulumi.StringPtrInput                            `pulumi:"capabilityDefaultOriginate"`
	CapabilityDefaultOriginate6    pulumi.StringPtrInput                            `pulumi:"capabilityDefaultOriginate6"`
	CapabilityDynamic              pulumi.StringPtrInput                            `pulumi:"capabilityDynamic"`
	CapabilityGracefulRestart      pulumi.StringPtrInput                            `pulumi:"capabilityGracefulRestart"`
	CapabilityGracefulRestart6     pulumi.StringPtrInput                            `pulumi:"capabilityGracefulRestart6"`
	CapabilityGracefulRestartEvpn  pulumi.StringPtrInput                            `pulumi:"capabilityGracefulRestartEvpn"`
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput                            `pulumi:"capabilityGracefulRestartVpnv4"`
	CapabilityOrf                  pulumi.StringPtrInput                            `pulumi:"capabilityOrf"`
	CapabilityOrf6                 pulumi.StringPtrInput                            `pulumi:"capabilityOrf6"`
	CapabilityRouteRefresh         pulumi.StringPtrInput                            `pulumi:"capabilityRouteRefresh"`
	ConditionalAdvertise6s         RouterBgpNeighborConditionalAdvertise6ArrayInput `pulumi:"conditionalAdvertise6s"`
	ConditionalAdvertises          RouterBgpNeighborConditionalAdvertiseArrayInput  `pulumi:"conditionalAdvertises"`
	ConnectTimer                   pulumi.IntPtrInput                               `pulumi:"connectTimer"`
	DefaultOriginateRoutemap       pulumi.StringPtrInput                            `pulumi:"defaultOriginateRoutemap"`
	DefaultOriginateRoutemap6      pulumi.StringPtrInput                            `pulumi:"defaultOriginateRoutemap6"`
	Description                    pulumi.StringPtrInput                            `pulumi:"description"`
	DistributeListIn               pulumi.StringPtrInput                            `pulumi:"distributeListIn"`
	DistributeListIn6              pulumi.StringPtrInput                            `pulumi:"distributeListIn6"`
	DistributeListInVpnv4          pulumi.StringPtrInput                            `pulumi:"distributeListInVpnv4"`
	DistributeListOut              pulumi.StringPtrInput                            `pulumi:"distributeListOut"`
	DistributeListOut6             pulumi.StringPtrInput                            `pulumi:"distributeListOut6"`
	DistributeListOutVpnv4         pulumi.StringPtrInput                            `pulumi:"distributeListOutVpnv4"`
	DontCapabilityNegotiate        pulumi.StringPtrInput                            `pulumi:"dontCapabilityNegotiate"`
	EbgpEnforceMultihop            pulumi.StringPtrInput                            `pulumi:"ebgpEnforceMultihop"`
	EbgpMultihopTtl                pulumi.IntPtrInput                               `pulumi:"ebgpMultihopTtl"`
	FilterListIn                   pulumi.StringPtrInput                            `pulumi:"filterListIn"`
	FilterListIn6                  pulumi.StringPtrInput                            `pulumi:"filterListIn6"`
	FilterListInVpnv4              pulumi.StringPtrInput                            `pulumi:"filterListInVpnv4"`
	FilterListOut                  pulumi.StringPtrInput                            `pulumi:"filterListOut"`
	FilterListOut6                 pulumi.StringPtrInput                            `pulumi:"filterListOut6"`
	FilterListOutVpnv4             pulumi.StringPtrInput                            `pulumi:"filterListOutVpnv4"`
	HoldtimeTimer                  pulumi.IntPtrInput                               `pulumi:"holdtimeTimer"`
	Interface                      pulumi.StringPtrInput                            `pulumi:"interface"`
	Ip                             pulumi.StringPtrInput                            `pulumi:"ip"`
	KeepAliveTimer                 pulumi.IntPtrInput                               `pulumi:"keepAliveTimer"`
	LinkDownFailover               pulumi.StringPtrInput                            `pulumi:"linkDownFailover"`
	LocalAs                        pulumi.IntPtrInput                               `pulumi:"localAs"`
	LocalAsNoPrepend               pulumi.StringPtrInput                            `pulumi:"localAsNoPrepend"`
	LocalAsReplaceAs               pulumi.StringPtrInput                            `pulumi:"localAsReplaceAs"`
	MaximumPrefix                  pulumi.IntPtrInput                               `pulumi:"maximumPrefix"`
	MaximumPrefix6                 pulumi.IntPtrInput                               `pulumi:"maximumPrefix6"`
	MaximumPrefixEvpn              pulumi.IntPtrInput                               `pulumi:"maximumPrefixEvpn"`
	MaximumPrefixThreshold         pulumi.IntPtrInput                               `pulumi:"maximumPrefixThreshold"`
	MaximumPrefixThreshold6        pulumi.IntPtrInput                               `pulumi:"maximumPrefixThreshold6"`
	MaximumPrefixThresholdEvpn     pulumi.IntPtrInput                               `pulumi:"maximumPrefixThresholdEvpn"`
	MaximumPrefixThresholdVpnv4    pulumi.IntPtrInput                               `pulumi:"maximumPrefixThresholdVpnv4"`
	MaximumPrefixVpnv4             pulumi.IntPtrInput                               `pulumi:"maximumPrefixVpnv4"`
	MaximumPrefixWarningOnly       pulumi.StringPtrInput                            `pulumi:"maximumPrefixWarningOnly"`
	MaximumPrefixWarningOnly6      pulumi.StringPtrInput                            `pulumi:"maximumPrefixWarningOnly6"`
	MaximumPrefixWarningOnlyEvpn   pulumi.StringPtrInput                            `pulumi:"maximumPrefixWarningOnlyEvpn"`
	MaximumPrefixWarningOnlyVpnv4  pulumi.StringPtrInput                            `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	NextHopSelf                    pulumi.StringPtrInput                            `pulumi:"nextHopSelf"`
	NextHopSelf6                   pulumi.StringPtrInput                            `pulumi:"nextHopSelf6"`
	NextHopSelfRr                  pulumi.StringPtrInput                            `pulumi:"nextHopSelfRr"`
	NextHopSelfRr6                 pulumi.StringPtrInput                            `pulumi:"nextHopSelfRr6"`
	NextHopSelfVpnv4               pulumi.StringPtrInput                            `pulumi:"nextHopSelfVpnv4"`
	OverrideCapability             pulumi.StringPtrInput                            `pulumi:"overrideCapability"`
	Passive                        pulumi.StringPtrInput                            `pulumi:"passive"`
	Password                       pulumi.StringPtrInput                            `pulumi:"password"`
	PrefixListIn                   pulumi.StringPtrInput                            `pulumi:"prefixListIn"`
	PrefixListIn6                  pulumi.StringPtrInput                            `pulumi:"prefixListIn6"`
	PrefixListInVpnv4              pulumi.StringPtrInput                            `pulumi:"prefixListInVpnv4"`
	PrefixListOut                  pulumi.StringPtrInput                            `pulumi:"prefixListOut"`
	PrefixListOut6                 pulumi.StringPtrInput                            `pulumi:"prefixListOut6"`
	PrefixListOutVpnv4             pulumi.StringPtrInput                            `pulumi:"prefixListOutVpnv4"`
	RemoteAs                       pulumi.IntPtrInput                               `pulumi:"remoteAs"`
	RemovePrivateAs                pulumi.StringPtrInput                            `pulumi:"removePrivateAs"`
	RemovePrivateAs6               pulumi.StringPtrInput                            `pulumi:"removePrivateAs6"`
	RemovePrivateAsEvpn            pulumi.StringPtrInput                            `pulumi:"removePrivateAsEvpn"`
	RemovePrivateAsVpnv4           pulumi.StringPtrInput                            `pulumi:"removePrivateAsVpnv4"`
	RestartTime                    pulumi.IntPtrInput                               `pulumi:"restartTime"`
	RetainStaleTime                pulumi.IntPtrInput                               `pulumi:"retainStaleTime"`
	RouteMapIn                     pulumi.StringPtrInput                            `pulumi:"routeMapIn"`
	RouteMapIn6                    pulumi.StringPtrInput                            `pulumi:"routeMapIn6"`
	RouteMapInEvpn                 pulumi.StringPtrInput                            `pulumi:"routeMapInEvpn"`
	RouteMapInVpnv4                pulumi.StringPtrInput                            `pulumi:"routeMapInVpnv4"`
	RouteMapOut                    pulumi.StringPtrInput                            `pulumi:"routeMapOut"`
	RouteMapOut6                   pulumi.StringPtrInput                            `pulumi:"routeMapOut6"`
	RouteMapOut6Preferable         pulumi.StringPtrInput                            `pulumi:"routeMapOut6Preferable"`
	RouteMapOutEvpn                pulumi.StringPtrInput                            `pulumi:"routeMapOutEvpn"`
	RouteMapOutPreferable          pulumi.StringPtrInput                            `pulumi:"routeMapOutPreferable"`
	RouteMapOutVpnv4               pulumi.StringPtrInput                            `pulumi:"routeMapOutVpnv4"`
	RouteMapOutVpnv4Preferable     pulumi.StringPtrInput                            `pulumi:"routeMapOutVpnv4Preferable"`
	RouteReflectorClient           pulumi.StringPtrInput                            `pulumi:"routeReflectorClient"`
	RouteReflectorClient6          pulumi.StringPtrInput                            `pulumi:"routeReflectorClient6"`
	RouteReflectorClientEvpn       pulumi.StringPtrInput                            `pulumi:"routeReflectorClientEvpn"`
	RouteReflectorClientVpnv4      pulumi.StringPtrInput                            `pulumi:"routeReflectorClientVpnv4"`
	RouteServerClient              pulumi.StringPtrInput                            `pulumi:"routeServerClient"`
	RouteServerClient6             pulumi.StringPtrInput                            `pulumi:"routeServerClient6"`
	RouteServerClientEvpn          pulumi.StringPtrInput                            `pulumi:"routeServerClientEvpn"`
	RouteServerClientVpnv4         pulumi.StringPtrInput                            `pulumi:"routeServerClientVpnv4"`
	SendCommunity                  pulumi.StringPtrInput                            `pulumi:"sendCommunity"`
	SendCommunity6                 pulumi.StringPtrInput                            `pulumi:"sendCommunity6"`
	SendCommunityEvpn              pulumi.StringPtrInput                            `pulumi:"sendCommunityEvpn"`
	SendCommunityVpnv4             pulumi.StringPtrInput                            `pulumi:"sendCommunityVpnv4"`
	Shutdown                       pulumi.StringPtrInput                            `pulumi:"shutdown"`
	SoftReconfiguration            pulumi.StringPtrInput                            `pulumi:"softReconfiguration"`
	SoftReconfiguration6           pulumi.StringPtrInput                            `pulumi:"softReconfiguration6"`
	SoftReconfigurationEvpn        pulumi.StringPtrInput                            `pulumi:"softReconfigurationEvpn"`
	SoftReconfigurationVpnv4       pulumi.StringPtrInput                            `pulumi:"softReconfigurationVpnv4"`
	StaleRoute                     pulumi.StringPtrInput                            `pulumi:"staleRoute"`
	StrictCapabilityMatch          pulumi.StringPtrInput                            `pulumi:"strictCapabilityMatch"`
	UnsuppressMap                  pulumi.StringPtrInput                            `pulumi:"unsuppressMap"`
	UnsuppressMap6                 pulumi.StringPtrInput                            `pulumi:"unsuppressMap6"`
	UpdateSource                   pulumi.StringPtrInput                            `pulumi:"updateSource"`
	Weight                         pulumi.IntPtrInput                               `pulumi:"weight"`
}

func (RouterBgpNeighborTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborType)(nil)).Elem()
}

func (i RouterBgpNeighborTypeArgs) ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput {
	return i.ToRouterBgpNeighborTypeOutputWithContext(context.Background())
}

func (i RouterBgpNeighborTypeArgs) ToRouterBgpNeighborTypeOutputWithContext(ctx context.Context) RouterBgpNeighborTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborTypeOutput)
}

func (i RouterBgpNeighborTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborType] {
	return pulumix.Output[RouterBgpNeighborType]{
		OutputState: i.ToRouterBgpNeighborTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborTypeArrayInput is an input type that accepts RouterBgpNeighborTypeArray and RouterBgpNeighborTypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborTypeArrayInput` via:
//
//	RouterBgpNeighborTypeArray{ RouterBgpNeighborTypeArgs{...} }
type RouterBgpNeighborTypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput
	ToRouterBgpNeighborTypeArrayOutputWithContext(context.Context) RouterBgpNeighborTypeArrayOutput
}

type RouterBgpNeighborTypeArray []RouterBgpNeighborTypeInput

func (RouterBgpNeighborTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborType)(nil)).Elem()
}

func (i RouterBgpNeighborTypeArray) ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput {
	return i.ToRouterBgpNeighborTypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborTypeArray) ToRouterBgpNeighborTypeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborTypeArrayOutput)
}

func (i RouterBgpNeighborTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborType] {
	return pulumix.Output[[]RouterBgpNeighborType]{
		OutputState: i.ToRouterBgpNeighborTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborTypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborType)(nil)).Elem()
}

func (o RouterBgpNeighborTypeOutput) ToRouterBgpNeighborTypeOutput() RouterBgpNeighborTypeOutput {
	return o
}

func (o RouterBgpNeighborTypeOutput) ToRouterBgpNeighborTypeOutputWithContext(ctx context.Context) RouterBgpNeighborTypeOutput {
	return o
}

func (o RouterBgpNeighborTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborType] {
	return pulumix.Output[RouterBgpNeighborType]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborTypeOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) ActivateEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.ActivateEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInEnableEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnableEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInEnableVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AllowasInEnableVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasInEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestartEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) ConditionalAdvertise6s() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) []RouterBgpNeighborConditionalAdvertise6 {
		return v.ConditionalAdvertise6s
	}).(RouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

func (o RouterBgpNeighborTypeOutput) ConditionalAdvertises() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) []RouterBgpNeighborConditionalAdvertise { return v.ConditionalAdvertises }).(RouterBgpNeighborConditionalAdvertiseArrayOutput)
}

func (o RouterBgpNeighborTypeOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) FilterListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.FilterListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixThresholdEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RemovePrivateAsEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAsEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapInEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapInEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOutEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteReflectorClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClientEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteServerClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClientEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SendCommunityEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunityEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SoftReconfigurationEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfigurationEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborTypeOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborType) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RouterBgpNeighborTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborType)(nil)).Elem()
}

func (o RouterBgpNeighborTypeArrayOutput) ToRouterBgpNeighborTypeArrayOutput() RouterBgpNeighborTypeArrayOutput {
	return o
}

func (o RouterBgpNeighborTypeArrayOutput) ToRouterBgpNeighborTypeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborTypeArrayOutput {
	return o
}

func (o RouterBgpNeighborTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborType] {
	return pulumix.Output[[]RouterBgpNeighborType]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborTypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborType {
		return vs[0].([]RouterBgpNeighborType)[vs[1].(int)]
	}).(RouterBgpNeighborTypeOutput)
}

type RouterBgpNeighborConditionalAdvertise6 struct {
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	ConditionType     *string `pulumi:"conditionType"`
}

// RouterBgpNeighborConditionalAdvertise6Input is an input type that accepts RouterBgpNeighborConditionalAdvertise6Args and RouterBgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertise6Input` via:
//
//	RouterBgpNeighborConditionalAdvertise6Args{...}
type RouterBgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output
	ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertise6Output
}

type RouterBgpNeighborConditionalAdvertise6Args struct {
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	ConditionType     pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterBgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertise6Args) ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output {
	return i.ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertise6Args) ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertise6Output)
}

func (i RouterBgpNeighborConditionalAdvertise6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborConditionalAdvertise6] {
	return pulumix.Output[RouterBgpNeighborConditionalAdvertise6]{
		OutputState: i.ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts RouterBgpNeighborConditionalAdvertise6Array and RouterBgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	RouterBgpNeighborConditionalAdvertise6Array{ RouterBgpNeighborConditionalAdvertise6Args{...} }
type RouterBgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput
	ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput
}

type RouterBgpNeighborConditionalAdvertise6Array []RouterBgpNeighborConditionalAdvertise6Input

func (RouterBgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertise6Array) ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertise6Array) ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertise6ArrayOutput)
}

func (i RouterBgpNeighborConditionalAdvertise6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborConditionalAdvertise6] {
	return pulumix.Output[[]RouterBgpNeighborConditionalAdvertise6]{
		OutputState: i.ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ToRouterBgpNeighborConditionalAdvertise6Output() RouterBgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ToRouterBgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborConditionalAdvertise6] {
	return pulumix.Output[RouterBgpNeighborConditionalAdvertise6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) ToRouterBgpNeighborConditionalAdvertise6ArrayOutput() RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) ToRouterBgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborConditionalAdvertise6] {
	return pulumix.Output[[]RouterBgpNeighborConditionalAdvertise6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborConditionalAdvertise6 {
		return vs[0].([]RouterBgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(RouterBgpNeighborConditionalAdvertise6Output)
}

type RouterBgpNeighborConditionalAdvertise struct {
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	ConditionType     *string `pulumi:"conditionType"`
}

// RouterBgpNeighborConditionalAdvertiseInput is an input type that accepts RouterBgpNeighborConditionalAdvertiseArgs and RouterBgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertiseInput` via:
//
//	RouterBgpNeighborConditionalAdvertiseArgs{...}
type RouterBgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput
	ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertiseOutput
}

type RouterBgpNeighborConditionalAdvertiseArgs struct {
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	ConditionType     pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterBgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertiseArgs) ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput {
	return i.ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertiseArgs) ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertiseOutput)
}

func (i RouterBgpNeighborConditionalAdvertiseArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborConditionalAdvertise] {
	return pulumix.Output[RouterBgpNeighborConditionalAdvertise]{
		OutputState: i.ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborConditionalAdvertiseArrayInput is an input type that accepts RouterBgpNeighborConditionalAdvertiseArray and RouterBgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborConditionalAdvertiseArrayInput` via:
//
//	RouterBgpNeighborConditionalAdvertiseArray{ RouterBgpNeighborConditionalAdvertiseArgs{...} }
type RouterBgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput
	ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput
}

type RouterBgpNeighborConditionalAdvertiseArray []RouterBgpNeighborConditionalAdvertiseInput

func (RouterBgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterBgpNeighborConditionalAdvertiseArray) ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborConditionalAdvertiseArray) ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborConditionalAdvertiseArrayOutput)
}

func (i RouterBgpNeighborConditionalAdvertiseArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborConditionalAdvertise] {
	return pulumix.Output[[]RouterBgpNeighborConditionalAdvertise]{
		OutputState: i.ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ToRouterBgpNeighborConditionalAdvertiseOutput() RouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ToRouterBgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborConditionalAdvertise] {
	return pulumix.Output[RouterBgpNeighborConditionalAdvertise]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) ToRouterBgpNeighborConditionalAdvertiseArrayOutput() RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) ToRouterBgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterBgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborConditionalAdvertise] {
	return pulumix.Output[[]RouterBgpNeighborConditionalAdvertise]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborConditionalAdvertise {
		return vs[0].([]RouterBgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(RouterBgpNeighborConditionalAdvertiseOutput)
}

type RouterBgpNeighborGroup struct {
	Activate                       *string `pulumi:"activate"`
	Activate6                      *string `pulumi:"activate6"`
	ActivateEvpn                   *string `pulumi:"activateEvpn"`
	ActivateVpnv4                  *string `pulumi:"activateVpnv4"`
	AdditionalPath                 *string `pulumi:"additionalPath"`
	AdditionalPath6                *string `pulumi:"additionalPath6"`
	AdditionalPathVpnv4            *string `pulumi:"additionalPathVpnv4"`
	AdvAdditionalPath              *int    `pulumi:"advAdditionalPath"`
	AdvAdditionalPath6             *int    `pulumi:"advAdditionalPath6"`
	AdvAdditionalPathVpnv4         *int    `pulumi:"advAdditionalPathVpnv4"`
	AdvertisementInterval          *int    `pulumi:"advertisementInterval"`
	AllowasIn                      *int    `pulumi:"allowasIn"`
	AllowasIn6                     *int    `pulumi:"allowasIn6"`
	AllowasInEnable                *string `pulumi:"allowasInEnable"`
	AllowasInEnable6               *string `pulumi:"allowasInEnable6"`
	AllowasInEnableEvpn            *string `pulumi:"allowasInEnableEvpn"`
	AllowasInEnableVpnv4           *string `pulumi:"allowasInEnableVpnv4"`
	AllowasInEvpn                  *int    `pulumi:"allowasInEvpn"`
	AllowasInVpnv4                 *int    `pulumi:"allowasInVpnv4"`
	AsOverride                     *string `pulumi:"asOverride"`
	AsOverride6                    *string `pulumi:"asOverride6"`
	AttributeUnchanged             *string `pulumi:"attributeUnchanged"`
	AttributeUnchanged6            *string `pulumi:"attributeUnchanged6"`
	AttributeUnchangedVpnv4        *string `pulumi:"attributeUnchangedVpnv4"`
	Bfd                            *string `pulumi:"bfd"`
	CapabilityDefaultOriginate     *string `pulumi:"capabilityDefaultOriginate"`
	CapabilityDefaultOriginate6    *string `pulumi:"capabilityDefaultOriginate6"`
	CapabilityDynamic              *string `pulumi:"capabilityDynamic"`
	CapabilityGracefulRestart      *string `pulumi:"capabilityGracefulRestart"`
	CapabilityGracefulRestart6     *string `pulumi:"capabilityGracefulRestart6"`
	CapabilityGracefulRestartEvpn  *string `pulumi:"capabilityGracefulRestartEvpn"`
	CapabilityGracefulRestartVpnv4 *string `pulumi:"capabilityGracefulRestartVpnv4"`
	CapabilityOrf                  *string `pulumi:"capabilityOrf"`
	CapabilityOrf6                 *string `pulumi:"capabilityOrf6"`
	CapabilityRouteRefresh         *string `pulumi:"capabilityRouteRefresh"`
	ConnectTimer                   *int    `pulumi:"connectTimer"`
	DefaultOriginateRoutemap       *string `pulumi:"defaultOriginateRoutemap"`
	DefaultOriginateRoutemap6      *string `pulumi:"defaultOriginateRoutemap6"`
	Description                    *string `pulumi:"description"`
	DistributeListIn               *string `pulumi:"distributeListIn"`
	DistributeListIn6              *string `pulumi:"distributeListIn6"`
	DistributeListInVpnv4          *string `pulumi:"distributeListInVpnv4"`
	DistributeListOut              *string `pulumi:"distributeListOut"`
	DistributeListOut6             *string `pulumi:"distributeListOut6"`
	DistributeListOutVpnv4         *string `pulumi:"distributeListOutVpnv4"`
	DontCapabilityNegotiate        *string `pulumi:"dontCapabilityNegotiate"`
	EbgpEnforceMultihop            *string `pulumi:"ebgpEnforceMultihop"`
	EbgpMultihopTtl                *int    `pulumi:"ebgpMultihopTtl"`
	FilterListIn                   *string `pulumi:"filterListIn"`
	FilterListIn6                  *string `pulumi:"filterListIn6"`
	FilterListInVpnv4              *string `pulumi:"filterListInVpnv4"`
	FilterListOut                  *string `pulumi:"filterListOut"`
	FilterListOut6                 *string `pulumi:"filterListOut6"`
	FilterListOutVpnv4             *string `pulumi:"filterListOutVpnv4"`
	HoldtimeTimer                  *int    `pulumi:"holdtimeTimer"`
	Interface                      *string `pulumi:"interface"`
	KeepAliveTimer                 *int    `pulumi:"keepAliveTimer"`
	LinkDownFailover               *string `pulumi:"linkDownFailover"`
	LocalAs                        *int    `pulumi:"localAs"`
	LocalAsNoPrepend               *string `pulumi:"localAsNoPrepend"`
	LocalAsReplaceAs               *string `pulumi:"localAsReplaceAs"`
	MaximumPrefix                  *int    `pulumi:"maximumPrefix"`
	MaximumPrefix6                 *int    `pulumi:"maximumPrefix6"`
	MaximumPrefixEvpn              *int    `pulumi:"maximumPrefixEvpn"`
	MaximumPrefixThreshold         *int    `pulumi:"maximumPrefixThreshold"`
	MaximumPrefixThreshold6        *int    `pulumi:"maximumPrefixThreshold6"`
	MaximumPrefixThresholdEvpn     *int    `pulumi:"maximumPrefixThresholdEvpn"`
	MaximumPrefixThresholdVpnv4    *int    `pulumi:"maximumPrefixThresholdVpnv4"`
	MaximumPrefixVpnv4             *int    `pulumi:"maximumPrefixVpnv4"`
	MaximumPrefixWarningOnly       *string `pulumi:"maximumPrefixWarningOnly"`
	MaximumPrefixWarningOnly6      *string `pulumi:"maximumPrefixWarningOnly6"`
	MaximumPrefixWarningOnlyEvpn   *string `pulumi:"maximumPrefixWarningOnlyEvpn"`
	MaximumPrefixWarningOnlyVpnv4  *string `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	Name                           *string `pulumi:"name"`
	NextHopSelf                    *string `pulumi:"nextHopSelf"`
	NextHopSelf6                   *string `pulumi:"nextHopSelf6"`
	NextHopSelfRr                  *string `pulumi:"nextHopSelfRr"`
	NextHopSelfRr6                 *string `pulumi:"nextHopSelfRr6"`
	NextHopSelfVpnv4               *string `pulumi:"nextHopSelfVpnv4"`
	OverrideCapability             *string `pulumi:"overrideCapability"`
	Passive                        *string `pulumi:"passive"`
	Password                       *string `pulumi:"password"`
	PrefixListIn                   *string `pulumi:"prefixListIn"`
	PrefixListIn6                  *string `pulumi:"prefixListIn6"`
	PrefixListInVpnv4              *string `pulumi:"prefixListInVpnv4"`
	PrefixListOut                  *string `pulumi:"prefixListOut"`
	PrefixListOut6                 *string `pulumi:"prefixListOut6"`
	PrefixListOutVpnv4             *string `pulumi:"prefixListOutVpnv4"`
	RemoteAs                       *int    `pulumi:"remoteAs"`
	RemovePrivateAs                *string `pulumi:"removePrivateAs"`
	RemovePrivateAs6               *string `pulumi:"removePrivateAs6"`
	RemovePrivateAsEvpn            *string `pulumi:"removePrivateAsEvpn"`
	RemovePrivateAsVpnv4           *string `pulumi:"removePrivateAsVpnv4"`
	RestartTime                    *int    `pulumi:"restartTime"`
	RetainStaleTime                *int    `pulumi:"retainStaleTime"`
	RouteMapIn                     *string `pulumi:"routeMapIn"`
	RouteMapIn6                    *string `pulumi:"routeMapIn6"`
	RouteMapInEvpn                 *string `pulumi:"routeMapInEvpn"`
	RouteMapInVpnv4                *string `pulumi:"routeMapInVpnv4"`
	RouteMapOut                    *string `pulumi:"routeMapOut"`
	RouteMapOut6                   *string `pulumi:"routeMapOut6"`
	RouteMapOut6Preferable         *string `pulumi:"routeMapOut6Preferable"`
	RouteMapOutEvpn                *string `pulumi:"routeMapOutEvpn"`
	RouteMapOutPreferable          *string `pulumi:"routeMapOutPreferable"`
	RouteMapOutVpnv4               *string `pulumi:"routeMapOutVpnv4"`
	RouteMapOutVpnv4Preferable     *string `pulumi:"routeMapOutVpnv4Preferable"`
	RouteReflectorClient           *string `pulumi:"routeReflectorClient"`
	RouteReflectorClient6          *string `pulumi:"routeReflectorClient6"`
	RouteReflectorClientEvpn       *string `pulumi:"routeReflectorClientEvpn"`
	RouteReflectorClientVpnv4      *string `pulumi:"routeReflectorClientVpnv4"`
	RouteServerClient              *string `pulumi:"routeServerClient"`
	RouteServerClient6             *string `pulumi:"routeServerClient6"`
	RouteServerClientEvpn          *string `pulumi:"routeServerClientEvpn"`
	RouteServerClientVpnv4         *string `pulumi:"routeServerClientVpnv4"`
	SendCommunity                  *string `pulumi:"sendCommunity"`
	SendCommunity6                 *string `pulumi:"sendCommunity6"`
	SendCommunityEvpn              *string `pulumi:"sendCommunityEvpn"`
	SendCommunityVpnv4             *string `pulumi:"sendCommunityVpnv4"`
	Shutdown                       *string `pulumi:"shutdown"`
	SoftReconfiguration            *string `pulumi:"softReconfiguration"`
	SoftReconfiguration6           *string `pulumi:"softReconfiguration6"`
	SoftReconfigurationEvpn        *string `pulumi:"softReconfigurationEvpn"`
	SoftReconfigurationVpnv4       *string `pulumi:"softReconfigurationVpnv4"`
	StaleRoute                     *string `pulumi:"staleRoute"`
	StrictCapabilityMatch          *string `pulumi:"strictCapabilityMatch"`
	UnsuppressMap                  *string `pulumi:"unsuppressMap"`
	UnsuppressMap6                 *string `pulumi:"unsuppressMap6"`
	UpdateSource                   *string `pulumi:"updateSource"`
	Weight                         *int    `pulumi:"weight"`
}

// RouterBgpNeighborGroupInput is an input type that accepts RouterBgpNeighborGroupArgs and RouterBgpNeighborGroupOutput values.
// You can construct a concrete instance of `RouterBgpNeighborGroupInput` via:
//
//	RouterBgpNeighborGroupArgs{...}
type RouterBgpNeighborGroupInput interface {
	pulumi.Input

	ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput
	ToRouterBgpNeighborGroupOutputWithContext(context.Context) RouterBgpNeighborGroupOutput
}

type RouterBgpNeighborGroupArgs struct {
	Activate                       pulumi.StringPtrInput `pulumi:"activate"`
	Activate6                      pulumi.StringPtrInput `pulumi:"activate6"`
	ActivateEvpn                   pulumi.StringPtrInput `pulumi:"activateEvpn"`
	ActivateVpnv4                  pulumi.StringPtrInput `pulumi:"activateVpnv4"`
	AdditionalPath                 pulumi.StringPtrInput `pulumi:"additionalPath"`
	AdditionalPath6                pulumi.StringPtrInput `pulumi:"additionalPath6"`
	AdditionalPathVpnv4            pulumi.StringPtrInput `pulumi:"additionalPathVpnv4"`
	AdvAdditionalPath              pulumi.IntPtrInput    `pulumi:"advAdditionalPath"`
	AdvAdditionalPath6             pulumi.IntPtrInput    `pulumi:"advAdditionalPath6"`
	AdvAdditionalPathVpnv4         pulumi.IntPtrInput    `pulumi:"advAdditionalPathVpnv4"`
	AdvertisementInterval          pulumi.IntPtrInput    `pulumi:"advertisementInterval"`
	AllowasIn                      pulumi.IntPtrInput    `pulumi:"allowasIn"`
	AllowasIn6                     pulumi.IntPtrInput    `pulumi:"allowasIn6"`
	AllowasInEnable                pulumi.StringPtrInput `pulumi:"allowasInEnable"`
	AllowasInEnable6               pulumi.StringPtrInput `pulumi:"allowasInEnable6"`
	AllowasInEnableEvpn            pulumi.StringPtrInput `pulumi:"allowasInEnableEvpn"`
	AllowasInEnableVpnv4           pulumi.StringPtrInput `pulumi:"allowasInEnableVpnv4"`
	AllowasInEvpn                  pulumi.IntPtrInput    `pulumi:"allowasInEvpn"`
	AllowasInVpnv4                 pulumi.IntPtrInput    `pulumi:"allowasInVpnv4"`
	AsOverride                     pulumi.StringPtrInput `pulumi:"asOverride"`
	AsOverride6                    pulumi.StringPtrInput `pulumi:"asOverride6"`
	AttributeUnchanged             pulumi.StringPtrInput `pulumi:"attributeUnchanged"`
	AttributeUnchanged6            pulumi.StringPtrInput `pulumi:"attributeUnchanged6"`
	AttributeUnchangedVpnv4        pulumi.StringPtrInput `pulumi:"attributeUnchangedVpnv4"`
	Bfd                            pulumi.StringPtrInput `pulumi:"bfd"`
	CapabilityDefaultOriginate     pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate"`
	CapabilityDefaultOriginate6    pulumi.StringPtrInput `pulumi:"capabilityDefaultOriginate6"`
	CapabilityDynamic              pulumi.StringPtrInput `pulumi:"capabilityDynamic"`
	CapabilityGracefulRestart      pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart"`
	CapabilityGracefulRestart6     pulumi.StringPtrInput `pulumi:"capabilityGracefulRestart6"`
	CapabilityGracefulRestartEvpn  pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartEvpn"`
	CapabilityGracefulRestartVpnv4 pulumi.StringPtrInput `pulumi:"capabilityGracefulRestartVpnv4"`
	CapabilityOrf                  pulumi.StringPtrInput `pulumi:"capabilityOrf"`
	CapabilityOrf6                 pulumi.StringPtrInput `pulumi:"capabilityOrf6"`
	CapabilityRouteRefresh         pulumi.StringPtrInput `pulumi:"capabilityRouteRefresh"`
	ConnectTimer                   pulumi.IntPtrInput    `pulumi:"connectTimer"`
	DefaultOriginateRoutemap       pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap"`
	DefaultOriginateRoutemap6      pulumi.StringPtrInput `pulumi:"defaultOriginateRoutemap6"`
	Description                    pulumi.StringPtrInput `pulumi:"description"`
	DistributeListIn               pulumi.StringPtrInput `pulumi:"distributeListIn"`
	DistributeListIn6              pulumi.StringPtrInput `pulumi:"distributeListIn6"`
	DistributeListInVpnv4          pulumi.StringPtrInput `pulumi:"distributeListInVpnv4"`
	DistributeListOut              pulumi.StringPtrInput `pulumi:"distributeListOut"`
	DistributeListOut6             pulumi.StringPtrInput `pulumi:"distributeListOut6"`
	DistributeListOutVpnv4         pulumi.StringPtrInput `pulumi:"distributeListOutVpnv4"`
	DontCapabilityNegotiate        pulumi.StringPtrInput `pulumi:"dontCapabilityNegotiate"`
	EbgpEnforceMultihop            pulumi.StringPtrInput `pulumi:"ebgpEnforceMultihop"`
	EbgpMultihopTtl                pulumi.IntPtrInput    `pulumi:"ebgpMultihopTtl"`
	FilterListIn                   pulumi.StringPtrInput `pulumi:"filterListIn"`
	FilterListIn6                  pulumi.StringPtrInput `pulumi:"filterListIn6"`
	FilterListInVpnv4              pulumi.StringPtrInput `pulumi:"filterListInVpnv4"`
	FilterListOut                  pulumi.StringPtrInput `pulumi:"filterListOut"`
	FilterListOut6                 pulumi.StringPtrInput `pulumi:"filterListOut6"`
	FilterListOutVpnv4             pulumi.StringPtrInput `pulumi:"filterListOutVpnv4"`
	HoldtimeTimer                  pulumi.IntPtrInput    `pulumi:"holdtimeTimer"`
	Interface                      pulumi.StringPtrInput `pulumi:"interface"`
	KeepAliveTimer                 pulumi.IntPtrInput    `pulumi:"keepAliveTimer"`
	LinkDownFailover               pulumi.StringPtrInput `pulumi:"linkDownFailover"`
	LocalAs                        pulumi.IntPtrInput    `pulumi:"localAs"`
	LocalAsNoPrepend               pulumi.StringPtrInput `pulumi:"localAsNoPrepend"`
	LocalAsReplaceAs               pulumi.StringPtrInput `pulumi:"localAsReplaceAs"`
	MaximumPrefix                  pulumi.IntPtrInput    `pulumi:"maximumPrefix"`
	MaximumPrefix6                 pulumi.IntPtrInput    `pulumi:"maximumPrefix6"`
	MaximumPrefixEvpn              pulumi.IntPtrInput    `pulumi:"maximumPrefixEvpn"`
	MaximumPrefixThreshold         pulumi.IntPtrInput    `pulumi:"maximumPrefixThreshold"`
	MaximumPrefixThreshold6        pulumi.IntPtrInput    `pulumi:"maximumPrefixThreshold6"`
	MaximumPrefixThresholdEvpn     pulumi.IntPtrInput    `pulumi:"maximumPrefixThresholdEvpn"`
	MaximumPrefixThresholdVpnv4    pulumi.IntPtrInput    `pulumi:"maximumPrefixThresholdVpnv4"`
	MaximumPrefixVpnv4             pulumi.IntPtrInput    `pulumi:"maximumPrefixVpnv4"`
	MaximumPrefixWarningOnly       pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly"`
	MaximumPrefixWarningOnly6      pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnly6"`
	MaximumPrefixWarningOnlyEvpn   pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyEvpn"`
	MaximumPrefixWarningOnlyVpnv4  pulumi.StringPtrInput `pulumi:"maximumPrefixWarningOnlyVpnv4"`
	Name                           pulumi.StringPtrInput `pulumi:"name"`
	NextHopSelf                    pulumi.StringPtrInput `pulumi:"nextHopSelf"`
	NextHopSelf6                   pulumi.StringPtrInput `pulumi:"nextHopSelf6"`
	NextHopSelfRr                  pulumi.StringPtrInput `pulumi:"nextHopSelfRr"`
	NextHopSelfRr6                 pulumi.StringPtrInput `pulumi:"nextHopSelfRr6"`
	NextHopSelfVpnv4               pulumi.StringPtrInput `pulumi:"nextHopSelfVpnv4"`
	OverrideCapability             pulumi.StringPtrInput `pulumi:"overrideCapability"`
	Passive                        pulumi.StringPtrInput `pulumi:"passive"`
	Password                       pulumi.StringPtrInput `pulumi:"password"`
	PrefixListIn                   pulumi.StringPtrInput `pulumi:"prefixListIn"`
	PrefixListIn6                  pulumi.StringPtrInput `pulumi:"prefixListIn6"`
	PrefixListInVpnv4              pulumi.StringPtrInput `pulumi:"prefixListInVpnv4"`
	PrefixListOut                  pulumi.StringPtrInput `pulumi:"prefixListOut"`
	PrefixListOut6                 pulumi.StringPtrInput `pulumi:"prefixListOut6"`
	PrefixListOutVpnv4             pulumi.StringPtrInput `pulumi:"prefixListOutVpnv4"`
	RemoteAs                       pulumi.IntPtrInput    `pulumi:"remoteAs"`
	RemovePrivateAs                pulumi.StringPtrInput `pulumi:"removePrivateAs"`
	RemovePrivateAs6               pulumi.StringPtrInput `pulumi:"removePrivateAs6"`
	RemovePrivateAsEvpn            pulumi.StringPtrInput `pulumi:"removePrivateAsEvpn"`
	RemovePrivateAsVpnv4           pulumi.StringPtrInput `pulumi:"removePrivateAsVpnv4"`
	RestartTime                    pulumi.IntPtrInput    `pulumi:"restartTime"`
	RetainStaleTime                pulumi.IntPtrInput    `pulumi:"retainStaleTime"`
	RouteMapIn                     pulumi.StringPtrInput `pulumi:"routeMapIn"`
	RouteMapIn6                    pulumi.StringPtrInput `pulumi:"routeMapIn6"`
	RouteMapInEvpn                 pulumi.StringPtrInput `pulumi:"routeMapInEvpn"`
	RouteMapInVpnv4                pulumi.StringPtrInput `pulumi:"routeMapInVpnv4"`
	RouteMapOut                    pulumi.StringPtrInput `pulumi:"routeMapOut"`
	RouteMapOut6                   pulumi.StringPtrInput `pulumi:"routeMapOut6"`
	RouteMapOut6Preferable         pulumi.StringPtrInput `pulumi:"routeMapOut6Preferable"`
	RouteMapOutEvpn                pulumi.StringPtrInput `pulumi:"routeMapOutEvpn"`
	RouteMapOutPreferable          pulumi.StringPtrInput `pulumi:"routeMapOutPreferable"`
	RouteMapOutVpnv4               pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4"`
	RouteMapOutVpnv4Preferable     pulumi.StringPtrInput `pulumi:"routeMapOutVpnv4Preferable"`
	RouteReflectorClient           pulumi.StringPtrInput `pulumi:"routeReflectorClient"`
	RouteReflectorClient6          pulumi.StringPtrInput `pulumi:"routeReflectorClient6"`
	RouteReflectorClientEvpn       pulumi.StringPtrInput `pulumi:"routeReflectorClientEvpn"`
	RouteReflectorClientVpnv4      pulumi.StringPtrInput `pulumi:"routeReflectorClientVpnv4"`
	RouteServerClient              pulumi.StringPtrInput `pulumi:"routeServerClient"`
	RouteServerClient6             pulumi.StringPtrInput `pulumi:"routeServerClient6"`
	RouteServerClientEvpn          pulumi.StringPtrInput `pulumi:"routeServerClientEvpn"`
	RouteServerClientVpnv4         pulumi.StringPtrInput `pulumi:"routeServerClientVpnv4"`
	SendCommunity                  pulumi.StringPtrInput `pulumi:"sendCommunity"`
	SendCommunity6                 pulumi.StringPtrInput `pulumi:"sendCommunity6"`
	SendCommunityEvpn              pulumi.StringPtrInput `pulumi:"sendCommunityEvpn"`
	SendCommunityVpnv4             pulumi.StringPtrInput `pulumi:"sendCommunityVpnv4"`
	Shutdown                       pulumi.StringPtrInput `pulumi:"shutdown"`
	SoftReconfiguration            pulumi.StringPtrInput `pulumi:"softReconfiguration"`
	SoftReconfiguration6           pulumi.StringPtrInput `pulumi:"softReconfiguration6"`
	SoftReconfigurationEvpn        pulumi.StringPtrInput `pulumi:"softReconfigurationEvpn"`
	SoftReconfigurationVpnv4       pulumi.StringPtrInput `pulumi:"softReconfigurationVpnv4"`
	StaleRoute                     pulumi.StringPtrInput `pulumi:"staleRoute"`
	StrictCapabilityMatch          pulumi.StringPtrInput `pulumi:"strictCapabilityMatch"`
	UnsuppressMap                  pulumi.StringPtrInput `pulumi:"unsuppressMap"`
	UnsuppressMap6                 pulumi.StringPtrInput `pulumi:"unsuppressMap6"`
	UpdateSource                   pulumi.StringPtrInput `pulumi:"updateSource"`
	Weight                         pulumi.IntPtrInput    `pulumi:"weight"`
}

func (RouterBgpNeighborGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborGroup)(nil)).Elem()
}

func (i RouterBgpNeighborGroupArgs) ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput {
	return i.ToRouterBgpNeighborGroupOutputWithContext(context.Background())
}

func (i RouterBgpNeighborGroupArgs) ToRouterBgpNeighborGroupOutputWithContext(ctx context.Context) RouterBgpNeighborGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborGroupOutput)
}

func (i RouterBgpNeighborGroupArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborGroup] {
	return pulumix.Output[RouterBgpNeighborGroup]{
		OutputState: i.ToRouterBgpNeighborGroupOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborGroupArrayInput is an input type that accepts RouterBgpNeighborGroupArray and RouterBgpNeighborGroupArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborGroupArrayInput` via:
//
//	RouterBgpNeighborGroupArray{ RouterBgpNeighborGroupArgs{...} }
type RouterBgpNeighborGroupArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput
	ToRouterBgpNeighborGroupArrayOutputWithContext(context.Context) RouterBgpNeighborGroupArrayOutput
}

type RouterBgpNeighborGroupArray []RouterBgpNeighborGroupInput

func (RouterBgpNeighborGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborGroup)(nil)).Elem()
}

func (i RouterBgpNeighborGroupArray) ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput {
	return i.ToRouterBgpNeighborGroupArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborGroupArray) ToRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) RouterBgpNeighborGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborGroupArrayOutput)
}

func (i RouterBgpNeighborGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborGroup] {
	return pulumix.Output[[]RouterBgpNeighborGroup]{
		OutputState: i.ToRouterBgpNeighborGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborGroupOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborGroup)(nil)).Elem()
}

func (o RouterBgpNeighborGroupOutput) ToRouterBgpNeighborGroupOutput() RouterBgpNeighborGroupOutput {
	return o
}

func (o RouterBgpNeighborGroupOutput) ToRouterBgpNeighborGroupOutputWithContext(ctx context.Context) RouterBgpNeighborGroupOutput {
	return o
}

func (o RouterBgpNeighborGroupOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborGroup] {
	return pulumix.Output[RouterBgpNeighborGroup]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborGroupOutput) Activate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Activate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Activate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Activate6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) ActivateEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.ActivateEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) ActivateVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.ActivateVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdditionalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPath }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdditionalPath6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPath6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdditionalPathVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AdditionalPathVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdvAdditionalPath() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPath }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdvAdditionalPath6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPath6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdvAdditionalPathVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvAdditionalPathVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasIn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasIn6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasIn6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInEnable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInEnable6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnable6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInEnableEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnableEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInEnableVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AllowasInEnableVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasInEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AllowasInVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.AllowasInVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AsOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AsOverride }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AsOverride6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AsOverride6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AttributeUnchanged() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchanged }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AttributeUnchanged6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchanged6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) AttributeUnchangedVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.AttributeUnchangedVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityDefaultOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDefaultOriginate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityDefaultOriginate6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDefaultOriginate6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityDynamic }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestart }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestart6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestart6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestartEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestartEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityGracefulRestartVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityGracefulRestartVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityOrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityOrf }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityOrf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityOrf6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) CapabilityRouteRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.CapabilityRouteRefresh }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) ConnectTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.ConnectTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DefaultOriginateRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DefaultOriginateRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DefaultOriginateRoutemap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DefaultOriginateRoutemap6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DistributeListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DistributeListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) DontCapabilityNegotiate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.DontCapabilityNegotiate }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) EbgpEnforceMultihop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.EbgpEnforceMultihop }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) EbgpMultihopTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.EbgpMultihopTtl }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) FilterListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.FilterListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) HoldtimeTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.HoldtimeTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) KeepAliveTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.KeepAliveTimer }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) LinkDownFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LinkDownFailover }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) LocalAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.LocalAs }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) LocalAsNoPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LocalAsNoPrepend }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) LocalAsReplaceAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.LocalAsReplaceAs }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefix }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefix6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefix6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThreshold }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixThreshold6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThreshold6 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixThresholdEvpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThresholdEvpn }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixThresholdVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixThresholdVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixVpnv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.MaximumPrefixVpnv4 }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnly6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnly6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnlyEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) MaximumPrefixWarningOnlyVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.MaximumPrefixWarningOnlyVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) NextHopSelf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelf }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) NextHopSelf6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelf6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) NextHopSelfRr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfRr }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) NextHopSelfRr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfRr6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) NextHopSelfVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.NextHopSelfVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) OverrideCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.OverrideCapability }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) PrefixListOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.PrefixListOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RemoteAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RemoteAs }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RemovePrivateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAs }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RemovePrivateAs6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAs6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RemovePrivateAsEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAsEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RemovePrivateAsVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RemovePrivateAsVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RestartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RestartTime }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RetainStaleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.RetainStaleTime }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapIn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapIn6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapIn6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapInEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapInEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapInVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapInVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOut6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOut6Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOut6Preferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOutEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOutPreferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutPreferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOutVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteMapOutVpnv4Preferable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteMapOutVpnv4Preferable }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteReflectorClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClient }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteReflectorClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClient6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteReflectorClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClientEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteReflectorClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteReflectorClientVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteServerClient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClient }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteServerClient6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClient6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteServerClientEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClientEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) RouteServerClientVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.RouteServerClientVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SendCommunity6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunity6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SendCommunityEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunityEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SendCommunityVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SendCommunityVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Shutdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.Shutdown }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SoftReconfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfiguration }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SoftReconfiguration6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfiguration6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SoftReconfigurationEvpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfigurationEvpn }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) SoftReconfigurationVpnv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.SoftReconfigurationVpnv4 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) StaleRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.StaleRoute }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) StrictCapabilityMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.StrictCapabilityMatch }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) UnsuppressMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UnsuppressMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) UnsuppressMap6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UnsuppressMap6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) UpdateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *string { return v.UpdateSource }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RouterBgpNeighborGroupArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborGroup)(nil)).Elem()
}

func (o RouterBgpNeighborGroupArrayOutput) ToRouterBgpNeighborGroupArrayOutput() RouterBgpNeighborGroupArrayOutput {
	return o
}

func (o RouterBgpNeighborGroupArrayOutput) ToRouterBgpNeighborGroupArrayOutputWithContext(ctx context.Context) RouterBgpNeighborGroupArrayOutput {
	return o
}

func (o RouterBgpNeighborGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborGroup] {
	return pulumix.Output[[]RouterBgpNeighborGroup]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborGroupArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborGroup {
		return vs[0].([]RouterBgpNeighborGroup)[vs[1].(int)]
	}).(RouterBgpNeighborGroupOutput)
}

type RouterBgpNeighborRange6 struct {
	Id             *int    `pulumi:"id"`
	MaxNeighborNum *int    `pulumi:"maxNeighborNum"`
	NeighborGroup  *string `pulumi:"neighborGroup"`
	Prefix6        *string `pulumi:"prefix6"`
}

// RouterBgpNeighborRange6Input is an input type that accepts RouterBgpNeighborRange6Args and RouterBgpNeighborRange6Output values.
// You can construct a concrete instance of `RouterBgpNeighborRange6Input` via:
//
//	RouterBgpNeighborRange6Args{...}
type RouterBgpNeighborRange6Input interface {
	pulumi.Input

	ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output
	ToRouterBgpNeighborRange6OutputWithContext(context.Context) RouterBgpNeighborRange6Output
}

type RouterBgpNeighborRange6Args struct {
	Id             pulumi.IntPtrInput    `pulumi:"id"`
	MaxNeighborNum pulumi.IntPtrInput    `pulumi:"maxNeighborNum"`
	NeighborGroup  pulumi.StringPtrInput `pulumi:"neighborGroup"`
	Prefix6        pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterBgpNeighborRange6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange6)(nil)).Elem()
}

func (i RouterBgpNeighborRange6Args) ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output {
	return i.ToRouterBgpNeighborRange6OutputWithContext(context.Background())
}

func (i RouterBgpNeighborRange6Args) ToRouterBgpNeighborRange6OutputWithContext(ctx context.Context) RouterBgpNeighborRange6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRange6Output)
}

func (i RouterBgpNeighborRange6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborRange6] {
	return pulumix.Output[RouterBgpNeighborRange6]{
		OutputState: i.ToRouterBgpNeighborRange6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborRange6ArrayInput is an input type that accepts RouterBgpNeighborRange6Array and RouterBgpNeighborRange6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRange6ArrayInput` via:
//
//	RouterBgpNeighborRange6Array{ RouterBgpNeighborRange6Args{...} }
type RouterBgpNeighborRange6ArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput
	ToRouterBgpNeighborRange6ArrayOutputWithContext(context.Context) RouterBgpNeighborRange6ArrayOutput
}

type RouterBgpNeighborRange6Array []RouterBgpNeighborRange6Input

func (RouterBgpNeighborRange6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange6)(nil)).Elem()
}

func (i RouterBgpNeighborRange6Array) ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput {
	return i.ToRouterBgpNeighborRange6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRange6Array) ToRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRange6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRange6ArrayOutput)
}

func (i RouterBgpNeighborRange6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborRange6] {
	return pulumix.Output[[]RouterBgpNeighborRange6]{
		OutputState: i.ToRouterBgpNeighborRange6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborRange6Output struct{ *pulumi.OutputState }

func (RouterBgpNeighborRange6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange6)(nil)).Elem()
}

func (o RouterBgpNeighborRange6Output) ToRouterBgpNeighborRange6Output() RouterBgpNeighborRange6Output {
	return o
}

func (o RouterBgpNeighborRange6Output) ToRouterBgpNeighborRange6OutputWithContext(ctx context.Context) RouterBgpNeighborRange6Output {
	return o
}

func (o RouterBgpNeighborRange6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborRange6] {
	return pulumix.Output[RouterBgpNeighborRange6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborRange6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborRange6Output) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborRange6Output) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborRange6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborRange6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRange6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange6)(nil)).Elem()
}

func (o RouterBgpNeighborRange6ArrayOutput) ToRouterBgpNeighborRange6ArrayOutput() RouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o RouterBgpNeighborRange6ArrayOutput) ToRouterBgpNeighborRange6ArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRange6ArrayOutput {
	return o
}

func (o RouterBgpNeighborRange6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborRange6] {
	return pulumix.Output[[]RouterBgpNeighborRange6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborRange6ArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborRange6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborRange6 {
		return vs[0].([]RouterBgpNeighborRange6)[vs[1].(int)]
	}).(RouterBgpNeighborRange6Output)
}

type RouterBgpNeighborRange struct {
	Id             *int    `pulumi:"id"`
	MaxNeighborNum *int    `pulumi:"maxNeighborNum"`
	NeighborGroup  *string `pulumi:"neighborGroup"`
	Prefix         *string `pulumi:"prefix"`
}

// RouterBgpNeighborRangeInput is an input type that accepts RouterBgpNeighborRangeArgs and RouterBgpNeighborRangeOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRangeInput` via:
//
//	RouterBgpNeighborRangeArgs{...}
type RouterBgpNeighborRangeInput interface {
	pulumi.Input

	ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput
	ToRouterBgpNeighborRangeOutputWithContext(context.Context) RouterBgpNeighborRangeOutput
}

type RouterBgpNeighborRangeArgs struct {
	Id             pulumi.IntPtrInput    `pulumi:"id"`
	MaxNeighborNum pulumi.IntPtrInput    `pulumi:"maxNeighborNum"`
	NeighborGroup  pulumi.StringPtrInput `pulumi:"neighborGroup"`
	Prefix         pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterBgpNeighborRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange)(nil)).Elem()
}

func (i RouterBgpNeighborRangeArgs) ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput {
	return i.ToRouterBgpNeighborRangeOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRangeArgs) ToRouterBgpNeighborRangeOutputWithContext(ctx context.Context) RouterBgpNeighborRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRangeOutput)
}

func (i RouterBgpNeighborRangeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborRange] {
	return pulumix.Output[RouterBgpNeighborRange]{
		OutputState: i.ToRouterBgpNeighborRangeOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNeighborRangeArrayInput is an input type that accepts RouterBgpNeighborRangeArray and RouterBgpNeighborRangeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNeighborRangeArrayInput` via:
//
//	RouterBgpNeighborRangeArray{ RouterBgpNeighborRangeArgs{...} }
type RouterBgpNeighborRangeArrayInput interface {
	pulumi.Input

	ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput
	ToRouterBgpNeighborRangeArrayOutputWithContext(context.Context) RouterBgpNeighborRangeArrayOutput
}

type RouterBgpNeighborRangeArray []RouterBgpNeighborRangeInput

func (RouterBgpNeighborRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange)(nil)).Elem()
}

func (i RouterBgpNeighborRangeArray) ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput {
	return i.ToRouterBgpNeighborRangeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNeighborRangeArray) ToRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNeighborRangeArrayOutput)
}

func (i RouterBgpNeighborRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborRange] {
	return pulumix.Output[[]RouterBgpNeighborRange]{
		OutputState: i.ToRouterBgpNeighborRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNeighborRangeOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNeighborRange)(nil)).Elem()
}

func (o RouterBgpNeighborRangeOutput) ToRouterBgpNeighborRangeOutput() RouterBgpNeighborRangeOutput {
	return o
}

func (o RouterBgpNeighborRangeOutput) ToRouterBgpNeighborRangeOutputWithContext(ctx context.Context) RouterBgpNeighborRangeOutput {
	return o
}

func (o RouterBgpNeighborRangeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNeighborRange] {
	return pulumix.Output[RouterBgpNeighborRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborRangeOutput) MaxNeighborNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *int { return v.MaxNeighborNum }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNeighborRangeOutput) NeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *string { return v.NeighborGroup }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNeighborRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNeighborRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterBgpNeighborRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNeighborRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNeighborRange)(nil)).Elem()
}

func (o RouterBgpNeighborRangeArrayOutput) ToRouterBgpNeighborRangeArrayOutput() RouterBgpNeighborRangeArrayOutput {
	return o
}

func (o RouterBgpNeighborRangeArrayOutput) ToRouterBgpNeighborRangeArrayOutputWithContext(ctx context.Context) RouterBgpNeighborRangeArrayOutput {
	return o
}

func (o RouterBgpNeighborRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNeighborRange] {
	return pulumix.Output[[]RouterBgpNeighborRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNeighborRangeArrayOutput) Index(i pulumi.IntInput) RouterBgpNeighborRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNeighborRange {
		return vs[0].([]RouterBgpNeighborRange)[vs[1].(int)]
	}).(RouterBgpNeighborRangeOutput)
}

type RouterBgpNetwork6Type struct {
	Backdoor           *string `pulumi:"backdoor"`
	Id                 *int    `pulumi:"id"`
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	Prefix6            *string `pulumi:"prefix6"`
	RouteMap           *string `pulumi:"routeMap"`
}

// RouterBgpNetwork6TypeInput is an input type that accepts RouterBgpNetwork6TypeArgs and RouterBgpNetwork6TypeOutput values.
// You can construct a concrete instance of `RouterBgpNetwork6TypeInput` via:
//
//	RouterBgpNetwork6TypeArgs{...}
type RouterBgpNetwork6TypeInput interface {
	pulumi.Input

	ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput
	ToRouterBgpNetwork6TypeOutputWithContext(context.Context) RouterBgpNetwork6TypeOutput
}

type RouterBgpNetwork6TypeArgs struct {
	Backdoor           pulumi.StringPtrInput `pulumi:"backdoor"`
	Id                 pulumi.IntPtrInput    `pulumi:"id"`
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	Prefix6            pulumi.StringPtrInput `pulumi:"prefix6"`
	RouteMap           pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (RouterBgpNetwork6TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetwork6Type)(nil)).Elem()
}

func (i RouterBgpNetwork6TypeArgs) ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput {
	return i.ToRouterBgpNetwork6TypeOutputWithContext(context.Background())
}

func (i RouterBgpNetwork6TypeArgs) ToRouterBgpNetwork6TypeOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetwork6TypeOutput)
}

func (i RouterBgpNetwork6TypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNetwork6Type] {
	return pulumix.Output[RouterBgpNetwork6Type]{
		OutputState: i.ToRouterBgpNetwork6TypeOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNetwork6TypeArrayInput is an input type that accepts RouterBgpNetwork6TypeArray and RouterBgpNetwork6TypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNetwork6TypeArrayInput` via:
//
//	RouterBgpNetwork6TypeArray{ RouterBgpNetwork6TypeArgs{...} }
type RouterBgpNetwork6TypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput
	ToRouterBgpNetwork6TypeArrayOutputWithContext(context.Context) RouterBgpNetwork6TypeArrayOutput
}

type RouterBgpNetwork6TypeArray []RouterBgpNetwork6TypeInput

func (RouterBgpNetwork6TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetwork6Type)(nil)).Elem()
}

func (i RouterBgpNetwork6TypeArray) ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput {
	return i.ToRouterBgpNetwork6TypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNetwork6TypeArray) ToRouterBgpNetwork6TypeArrayOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetwork6TypeArrayOutput)
}

func (i RouterBgpNetwork6TypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNetwork6Type] {
	return pulumix.Output[[]RouterBgpNetwork6Type]{
		OutputState: i.ToRouterBgpNetwork6TypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNetwork6TypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNetwork6TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetwork6Type)(nil)).Elem()
}

func (o RouterBgpNetwork6TypeOutput) ToRouterBgpNetwork6TypeOutput() RouterBgpNetwork6TypeOutput {
	return o
}

func (o RouterBgpNetwork6TypeOutput) ToRouterBgpNetwork6TypeOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeOutput {
	return o
}

func (o RouterBgpNetwork6TypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNetwork6Type] {
	return pulumix.Output[RouterBgpNetwork6Type]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNetwork6TypeOutput) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetwork6TypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNetwork6TypeOutput) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetwork6TypeOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetwork6TypeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetwork6Type) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type RouterBgpNetwork6TypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNetwork6TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetwork6Type)(nil)).Elem()
}

func (o RouterBgpNetwork6TypeArrayOutput) ToRouterBgpNetwork6TypeArrayOutput() RouterBgpNetwork6TypeArrayOutput {
	return o
}

func (o RouterBgpNetwork6TypeArrayOutput) ToRouterBgpNetwork6TypeArrayOutputWithContext(ctx context.Context) RouterBgpNetwork6TypeArrayOutput {
	return o
}

func (o RouterBgpNetwork6TypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNetwork6Type] {
	return pulumix.Output[[]RouterBgpNetwork6Type]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNetwork6TypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNetwork6TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNetwork6Type {
		return vs[0].([]RouterBgpNetwork6Type)[vs[1].(int)]
	}).(RouterBgpNetwork6TypeOutput)
}

type RouterBgpNetworkType struct {
	Backdoor           *string `pulumi:"backdoor"`
	Id                 *int    `pulumi:"id"`
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	Prefix             *string `pulumi:"prefix"`
	RouteMap           *string `pulumi:"routeMap"`
}

// RouterBgpNetworkTypeInput is an input type that accepts RouterBgpNetworkTypeArgs and RouterBgpNetworkTypeOutput values.
// You can construct a concrete instance of `RouterBgpNetworkTypeInput` via:
//
//	RouterBgpNetworkTypeArgs{...}
type RouterBgpNetworkTypeInput interface {
	pulumi.Input

	ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput
	ToRouterBgpNetworkTypeOutputWithContext(context.Context) RouterBgpNetworkTypeOutput
}

type RouterBgpNetworkTypeArgs struct {
	Backdoor           pulumi.StringPtrInput `pulumi:"backdoor"`
	Id                 pulumi.IntPtrInput    `pulumi:"id"`
	NetworkImportCheck pulumi.StringPtrInput `pulumi:"networkImportCheck"`
	Prefix             pulumi.StringPtrInput `pulumi:"prefix"`
	RouteMap           pulumi.StringPtrInput `pulumi:"routeMap"`
}

func (RouterBgpNetworkTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetworkType)(nil)).Elem()
}

func (i RouterBgpNetworkTypeArgs) ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput {
	return i.ToRouterBgpNetworkTypeOutputWithContext(context.Background())
}

func (i RouterBgpNetworkTypeArgs) ToRouterBgpNetworkTypeOutputWithContext(ctx context.Context) RouterBgpNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetworkTypeOutput)
}

func (i RouterBgpNetworkTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNetworkType] {
	return pulumix.Output[RouterBgpNetworkType]{
		OutputState: i.ToRouterBgpNetworkTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpNetworkTypeArrayInput is an input type that accepts RouterBgpNetworkTypeArray and RouterBgpNetworkTypeArrayOutput values.
// You can construct a concrete instance of `RouterBgpNetworkTypeArrayInput` via:
//
//	RouterBgpNetworkTypeArray{ RouterBgpNetworkTypeArgs{...} }
type RouterBgpNetworkTypeArrayInput interface {
	pulumi.Input

	ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput
	ToRouterBgpNetworkTypeArrayOutputWithContext(context.Context) RouterBgpNetworkTypeArrayOutput
}

type RouterBgpNetworkTypeArray []RouterBgpNetworkTypeInput

func (RouterBgpNetworkTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetworkType)(nil)).Elem()
}

func (i RouterBgpNetworkTypeArray) ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput {
	return i.ToRouterBgpNetworkTypeArrayOutputWithContext(context.Background())
}

func (i RouterBgpNetworkTypeArray) ToRouterBgpNetworkTypeArrayOutputWithContext(ctx context.Context) RouterBgpNetworkTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpNetworkTypeArrayOutput)
}

func (i RouterBgpNetworkTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNetworkType] {
	return pulumix.Output[[]RouterBgpNetworkType]{
		OutputState: i.ToRouterBgpNetworkTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpNetworkTypeOutput struct{ *pulumi.OutputState }

func (RouterBgpNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpNetworkType)(nil)).Elem()
}

func (o RouterBgpNetworkTypeOutput) ToRouterBgpNetworkTypeOutput() RouterBgpNetworkTypeOutput {
	return o
}

func (o RouterBgpNetworkTypeOutput) ToRouterBgpNetworkTypeOutputWithContext(ctx context.Context) RouterBgpNetworkTypeOutput {
	return o
}

func (o RouterBgpNetworkTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpNetworkType] {
	return pulumix.Output[RouterBgpNetworkType]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNetworkTypeOutput) Backdoor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.Backdoor }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetworkTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterBgpNetworkTypeOutput) NetworkImportCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.NetworkImportCheck }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetworkTypeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouterBgpNetworkTypeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpNetworkType) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

type RouterBgpNetworkTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpNetworkTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpNetworkType)(nil)).Elem()
}

func (o RouterBgpNetworkTypeArrayOutput) ToRouterBgpNetworkTypeArrayOutput() RouterBgpNetworkTypeArrayOutput {
	return o
}

func (o RouterBgpNetworkTypeArrayOutput) ToRouterBgpNetworkTypeArrayOutputWithContext(ctx context.Context) RouterBgpNetworkTypeArrayOutput {
	return o
}

func (o RouterBgpNetworkTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpNetworkType] {
	return pulumix.Output[[]RouterBgpNetworkType]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpNetworkTypeArrayOutput) Index(i pulumi.IntInput) RouterBgpNetworkTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpNetworkType {
		return vs[0].([]RouterBgpNetworkType)[vs[1].(int)]
	}).(RouterBgpNetworkTypeOutput)
}

type RouterBgpRedistribute6 struct {
	Name     *string `pulumi:"name"`
	RouteMap *string `pulumi:"routeMap"`
	Status   *string `pulumi:"status"`
}

// RouterBgpRedistribute6Input is an input type that accepts RouterBgpRedistribute6Args and RouterBgpRedistribute6Output values.
// You can construct a concrete instance of `RouterBgpRedistribute6Input` via:
//
//	RouterBgpRedistribute6Args{...}
type RouterBgpRedistribute6Input interface {
	pulumi.Input

	ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output
	ToRouterBgpRedistribute6OutputWithContext(context.Context) RouterBgpRedistribute6Output
}

type RouterBgpRedistribute6Args struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterBgpRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute6)(nil)).Elem()
}

func (i RouterBgpRedistribute6Args) ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output {
	return i.ToRouterBgpRedistribute6OutputWithContext(context.Background())
}

func (i RouterBgpRedistribute6Args) ToRouterBgpRedistribute6OutputWithContext(ctx context.Context) RouterBgpRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistribute6Output)
}

func (i RouterBgpRedistribute6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpRedistribute6] {
	return pulumix.Output[RouterBgpRedistribute6]{
		OutputState: i.ToRouterBgpRedistribute6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpRedistribute6ArrayInput is an input type that accepts RouterBgpRedistribute6Array and RouterBgpRedistribute6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpRedistribute6ArrayInput` via:
//
//	RouterBgpRedistribute6Array{ RouterBgpRedistribute6Args{...} }
type RouterBgpRedistribute6ArrayInput interface {
	pulumi.Input

	ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput
	ToRouterBgpRedistribute6ArrayOutputWithContext(context.Context) RouterBgpRedistribute6ArrayOutput
}

type RouterBgpRedistribute6Array []RouterBgpRedistribute6Input

func (RouterBgpRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute6)(nil)).Elem()
}

func (i RouterBgpRedistribute6Array) ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput {
	return i.ToRouterBgpRedistribute6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpRedistribute6Array) ToRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) RouterBgpRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistribute6ArrayOutput)
}

func (i RouterBgpRedistribute6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpRedistribute6] {
	return pulumix.Output[[]RouterBgpRedistribute6]{
		OutputState: i.ToRouterBgpRedistribute6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpRedistribute6Output struct{ *pulumi.OutputState }

func (RouterBgpRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute6)(nil)).Elem()
}

func (o RouterBgpRedistribute6Output) ToRouterBgpRedistribute6Output() RouterBgpRedistribute6Output {
	return o
}

func (o RouterBgpRedistribute6Output) ToRouterBgpRedistribute6OutputWithContext(ctx context.Context) RouterBgpRedistribute6Output {
	return o
}

func (o RouterBgpRedistribute6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpRedistribute6] {
	return pulumix.Output[RouterBgpRedistribute6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpRedistribute6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterBgpRedistribute6Output) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterBgpRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute6)(nil)).Elem()
}

func (o RouterBgpRedistribute6ArrayOutput) ToRouterBgpRedistribute6ArrayOutput() RouterBgpRedistribute6ArrayOutput {
	return o
}

func (o RouterBgpRedistribute6ArrayOutput) ToRouterBgpRedistribute6ArrayOutputWithContext(ctx context.Context) RouterBgpRedistribute6ArrayOutput {
	return o
}

func (o RouterBgpRedistribute6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpRedistribute6] {
	return pulumix.Output[[]RouterBgpRedistribute6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpRedistribute6ArrayOutput) Index(i pulumi.IntInput) RouterBgpRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpRedistribute6 {
		return vs[0].([]RouterBgpRedistribute6)[vs[1].(int)]
	}).(RouterBgpRedistribute6Output)
}

type RouterBgpRedistribute struct {
	Name     *string `pulumi:"name"`
	RouteMap *string `pulumi:"routeMap"`
	Status   *string `pulumi:"status"`
}

// RouterBgpRedistributeInput is an input type that accepts RouterBgpRedistributeArgs and RouterBgpRedistributeOutput values.
// You can construct a concrete instance of `RouterBgpRedistributeInput` via:
//
//	RouterBgpRedistributeArgs{...}
type RouterBgpRedistributeInput interface {
	pulumi.Input

	ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput
	ToRouterBgpRedistributeOutputWithContext(context.Context) RouterBgpRedistributeOutput
}

type RouterBgpRedistributeArgs struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	RouteMap pulumi.StringPtrInput `pulumi:"routeMap"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterBgpRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute)(nil)).Elem()
}

func (i RouterBgpRedistributeArgs) ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput {
	return i.ToRouterBgpRedistributeOutputWithContext(context.Background())
}

func (i RouterBgpRedistributeArgs) ToRouterBgpRedistributeOutputWithContext(ctx context.Context) RouterBgpRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistributeOutput)
}

func (i RouterBgpRedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpRedistribute] {
	return pulumix.Output[RouterBgpRedistribute]{
		OutputState: i.ToRouterBgpRedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpRedistributeArrayInput is an input type that accepts RouterBgpRedistributeArray and RouterBgpRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterBgpRedistributeArrayInput` via:
//
//	RouterBgpRedistributeArray{ RouterBgpRedistributeArgs{...} }
type RouterBgpRedistributeArrayInput interface {
	pulumi.Input

	ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput
	ToRouterBgpRedistributeArrayOutputWithContext(context.Context) RouterBgpRedistributeArrayOutput
}

type RouterBgpRedistributeArray []RouterBgpRedistributeInput

func (RouterBgpRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute)(nil)).Elem()
}

func (i RouterBgpRedistributeArray) ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput {
	return i.ToRouterBgpRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterBgpRedistributeArray) ToRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) RouterBgpRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpRedistributeArrayOutput)
}

func (i RouterBgpRedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpRedistribute] {
	return pulumix.Output[[]RouterBgpRedistribute]{
		OutputState: i.ToRouterBgpRedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpRedistributeOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpRedistribute)(nil)).Elem()
}

func (o RouterBgpRedistributeOutput) ToRouterBgpRedistributeOutput() RouterBgpRedistributeOutput {
	return o
}

func (o RouterBgpRedistributeOutput) ToRouterBgpRedistributeOutputWithContext(ctx context.Context) RouterBgpRedistributeOutput {
	return o
}

func (o RouterBgpRedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpRedistribute] {
	return pulumix.Output[RouterBgpRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterBgpRedistributeOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterBgpRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpRedistribute)(nil)).Elem()
}

func (o RouterBgpRedistributeArrayOutput) ToRouterBgpRedistributeArrayOutput() RouterBgpRedistributeArrayOutput {
	return o
}

func (o RouterBgpRedistributeArrayOutput) ToRouterBgpRedistributeArrayOutputWithContext(ctx context.Context) RouterBgpRedistributeArrayOutput {
	return o
}

func (o RouterBgpRedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpRedistribute] {
	return pulumix.Output[[]RouterBgpRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpRedistributeArrayOutput) Index(i pulumi.IntInput) RouterBgpRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpRedistribute {
		return vs[0].([]RouterBgpRedistribute)[vs[1].(int)]
	}).(RouterBgpRedistributeOutput)
}

type RouterBgpVrf6 struct {
	LeakTargets []RouterBgpVrf6LeakTarget `pulumi:"leakTargets"`
	Vrf         *string                   `pulumi:"vrf"`
}

// RouterBgpVrf6Input is an input type that accepts RouterBgpVrf6Args and RouterBgpVrf6Output values.
// You can construct a concrete instance of `RouterBgpVrf6Input` via:
//
//	RouterBgpVrf6Args{...}
type RouterBgpVrf6Input interface {
	pulumi.Input

	ToRouterBgpVrf6Output() RouterBgpVrf6Output
	ToRouterBgpVrf6OutputWithContext(context.Context) RouterBgpVrf6Output
}

type RouterBgpVrf6Args struct {
	LeakTargets RouterBgpVrf6LeakTargetArrayInput `pulumi:"leakTargets"`
	Vrf         pulumi.StringPtrInput             `pulumi:"vrf"`
}

func (RouterBgpVrf6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6)(nil)).Elem()
}

func (i RouterBgpVrf6Args) ToRouterBgpVrf6Output() RouterBgpVrf6Output {
	return i.ToRouterBgpVrf6OutputWithContext(context.Background())
}

func (i RouterBgpVrf6Args) ToRouterBgpVrf6OutputWithContext(ctx context.Context) RouterBgpVrf6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6Output)
}

func (i RouterBgpVrf6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf6] {
	return pulumix.Output[RouterBgpVrf6]{
		OutputState: i.ToRouterBgpVrf6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrf6ArrayInput is an input type that accepts RouterBgpVrf6Array and RouterBgpVrf6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrf6ArrayInput` via:
//
//	RouterBgpVrf6Array{ RouterBgpVrf6Args{...} }
type RouterBgpVrf6ArrayInput interface {
	pulumi.Input

	ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput
	ToRouterBgpVrf6ArrayOutputWithContext(context.Context) RouterBgpVrf6ArrayOutput
}

type RouterBgpVrf6Array []RouterBgpVrf6Input

func (RouterBgpVrf6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6)(nil)).Elem()
}

func (i RouterBgpVrf6Array) ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput {
	return i.ToRouterBgpVrf6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrf6Array) ToRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) RouterBgpVrf6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6ArrayOutput)
}

func (i RouterBgpVrf6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf6] {
	return pulumix.Output[[]RouterBgpVrf6]{
		OutputState: i.ToRouterBgpVrf6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrf6Output struct{ *pulumi.OutputState }

func (RouterBgpVrf6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6)(nil)).Elem()
}

func (o RouterBgpVrf6Output) ToRouterBgpVrf6Output() RouterBgpVrf6Output {
	return o
}

func (o RouterBgpVrf6Output) ToRouterBgpVrf6OutputWithContext(ctx context.Context) RouterBgpVrf6Output {
	return o
}

func (o RouterBgpVrf6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf6] {
	return pulumix.Output[RouterBgpVrf6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrf6Output) LeakTargets() RouterBgpVrf6LeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf6) []RouterBgpVrf6LeakTarget { return v.LeakTargets }).(RouterBgpVrf6LeakTargetArrayOutput)
}

func (o RouterBgpVrf6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrf6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6)(nil)).Elem()
}

func (o RouterBgpVrf6ArrayOutput) ToRouterBgpVrf6ArrayOutput() RouterBgpVrf6ArrayOutput {
	return o
}

func (o RouterBgpVrf6ArrayOutput) ToRouterBgpVrf6ArrayOutputWithContext(ctx context.Context) RouterBgpVrf6ArrayOutput {
	return o
}

func (o RouterBgpVrf6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf6] {
	return pulumix.Output[[]RouterBgpVrf6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrf6ArrayOutput) Index(i pulumi.IntInput) RouterBgpVrf6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf6 {
		return vs[0].([]RouterBgpVrf6)[vs[1].(int)]
	}).(RouterBgpVrf6Output)
}

type RouterBgpVrf6LeakTarget struct {
	Interface *string `pulumi:"interface"`
	RouteMap  *string `pulumi:"routeMap"`
	Vrf       *string `pulumi:"vrf"`
}

// RouterBgpVrf6LeakTargetInput is an input type that accepts RouterBgpVrf6LeakTargetArgs and RouterBgpVrf6LeakTargetOutput values.
// You can construct a concrete instance of `RouterBgpVrf6LeakTargetInput` via:
//
//	RouterBgpVrf6LeakTargetArgs{...}
type RouterBgpVrf6LeakTargetInput interface {
	pulumi.Input

	ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput
	ToRouterBgpVrf6LeakTargetOutputWithContext(context.Context) RouterBgpVrf6LeakTargetOutput
}

type RouterBgpVrf6LeakTargetArgs struct {
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	RouteMap  pulumi.StringPtrInput `pulumi:"routeMap"`
	Vrf       pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrf6LeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i RouterBgpVrf6LeakTargetArgs) ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput {
	return i.ToRouterBgpVrf6LeakTargetOutputWithContext(context.Background())
}

func (i RouterBgpVrf6LeakTargetArgs) ToRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6LeakTargetOutput)
}

func (i RouterBgpVrf6LeakTargetArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf6LeakTarget] {
	return pulumix.Output[RouterBgpVrf6LeakTarget]{
		OutputState: i.ToRouterBgpVrf6LeakTargetOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrf6LeakTargetArrayInput is an input type that accepts RouterBgpVrf6LeakTargetArray and RouterBgpVrf6LeakTargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrf6LeakTargetArrayInput` via:
//
//	RouterBgpVrf6LeakTargetArray{ RouterBgpVrf6LeakTargetArgs{...} }
type RouterBgpVrf6LeakTargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput
	ToRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Context) RouterBgpVrf6LeakTargetArrayOutput
}

type RouterBgpVrf6LeakTargetArray []RouterBgpVrf6LeakTargetInput

func (RouterBgpVrf6LeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (i RouterBgpVrf6LeakTargetArray) ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput {
	return i.ToRouterBgpVrf6LeakTargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrf6LeakTargetArray) ToRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrf6LeakTargetArrayOutput)
}

func (i RouterBgpVrf6LeakTargetArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf6LeakTarget] {
	return pulumix.Output[[]RouterBgpVrf6LeakTarget]{
		OutputState: i.ToRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrf6LeakTargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6LeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o RouterBgpVrf6LeakTargetOutput) ToRouterBgpVrf6LeakTargetOutput() RouterBgpVrf6LeakTargetOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetOutput) ToRouterBgpVrf6LeakTargetOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf6LeakTarget] {
	return pulumix.Output[RouterBgpVrf6LeakTarget]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrf6LeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrf6LeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrf6LeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf6LeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrf6LeakTargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrf6LeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf6LeakTarget)(nil)).Elem()
}

func (o RouterBgpVrf6LeakTargetArrayOutput) ToRouterBgpVrf6LeakTargetArrayOutput() RouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetArrayOutput) ToRouterBgpVrf6LeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrf6LeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrf6LeakTargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf6LeakTarget] {
	return pulumix.Output[[]RouterBgpVrf6LeakTarget]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrf6LeakTargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrf6LeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf6LeakTarget {
		return vs[0].([]RouterBgpVrf6LeakTarget)[vs[1].(int)]
	}).(RouterBgpVrf6LeakTargetOutput)
}

type RouterBgpVrf struct {
	ExportRts      []RouterBgpVrfExportRt   `pulumi:"exportRts"`
	ImportRouteMap *string                  `pulumi:"importRouteMap"`
	ImportRts      []RouterBgpVrfImportRt   `pulumi:"importRts"`
	LeakTargets    []RouterBgpVrfLeakTarget `pulumi:"leakTargets"`
	Rd             *string                  `pulumi:"rd"`
	Role           *string                  `pulumi:"role"`
	Vrf            *string                  `pulumi:"vrf"`
}

// RouterBgpVrfInput is an input type that accepts RouterBgpVrfArgs and RouterBgpVrfOutput values.
// You can construct a concrete instance of `RouterBgpVrfInput` via:
//
//	RouterBgpVrfArgs{...}
type RouterBgpVrfInput interface {
	pulumi.Input

	ToRouterBgpVrfOutput() RouterBgpVrfOutput
	ToRouterBgpVrfOutputWithContext(context.Context) RouterBgpVrfOutput
}

type RouterBgpVrfArgs struct {
	ExportRts      RouterBgpVrfExportRtArrayInput   `pulumi:"exportRts"`
	ImportRouteMap pulumi.StringPtrInput            `pulumi:"importRouteMap"`
	ImportRts      RouterBgpVrfImportRtArrayInput   `pulumi:"importRts"`
	LeakTargets    RouterBgpVrfLeakTargetArrayInput `pulumi:"leakTargets"`
	Rd             pulumi.StringPtrInput            `pulumi:"rd"`
	Role           pulumi.StringPtrInput            `pulumi:"role"`
	Vrf            pulumi.StringPtrInput            `pulumi:"vrf"`
}

func (RouterBgpVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf)(nil)).Elem()
}

func (i RouterBgpVrfArgs) ToRouterBgpVrfOutput() RouterBgpVrfOutput {
	return i.ToRouterBgpVrfOutputWithContext(context.Background())
}

func (i RouterBgpVrfArgs) ToRouterBgpVrfOutputWithContext(ctx context.Context) RouterBgpVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfOutput)
}

func (i RouterBgpVrfArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf] {
	return pulumix.Output[RouterBgpVrf]{
		OutputState: i.ToRouterBgpVrfOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfArrayInput is an input type that accepts RouterBgpVrfArray and RouterBgpVrfArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfArrayInput` via:
//
//	RouterBgpVrfArray{ RouterBgpVrfArgs{...} }
type RouterBgpVrfArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput
	ToRouterBgpVrfArrayOutputWithContext(context.Context) RouterBgpVrfArrayOutput
}

type RouterBgpVrfArray []RouterBgpVrfInput

func (RouterBgpVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf)(nil)).Elem()
}

func (i RouterBgpVrfArray) ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput {
	return i.ToRouterBgpVrfArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfArray) ToRouterBgpVrfArrayOutputWithContext(ctx context.Context) RouterBgpVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfArrayOutput)
}

func (i RouterBgpVrfArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf] {
	return pulumix.Output[[]RouterBgpVrf]{
		OutputState: i.ToRouterBgpVrfArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrf)(nil)).Elem()
}

func (o RouterBgpVrfOutput) ToRouterBgpVrfOutput() RouterBgpVrfOutput {
	return o
}

func (o RouterBgpVrfOutput) ToRouterBgpVrfOutputWithContext(ctx context.Context) RouterBgpVrfOutput {
	return o
}

func (o RouterBgpVrfOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrf] {
	return pulumix.Output[RouterBgpVrf]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfOutput) ExportRts() RouterBgpVrfExportRtArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfExportRt { return v.ExportRts }).(RouterBgpVrfExportRtArrayOutput)
}

func (o RouterBgpVrfOutput) ImportRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.ImportRouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfOutput) ImportRts() RouterBgpVrfImportRtArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfImportRt { return v.ImportRts }).(RouterBgpVrfImportRtArrayOutput)
}

func (o RouterBgpVrfOutput) LeakTargets() RouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrf) []RouterBgpVrfLeakTarget { return v.LeakTargets }).(RouterBgpVrfLeakTargetArrayOutput)
}

func (o RouterBgpVrfOutput) Rd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Rd }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrf) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrf)(nil)).Elem()
}

func (o RouterBgpVrfArrayOutput) ToRouterBgpVrfArrayOutput() RouterBgpVrfArrayOutput {
	return o
}

func (o RouterBgpVrfArrayOutput) ToRouterBgpVrfArrayOutputWithContext(ctx context.Context) RouterBgpVrfArrayOutput {
	return o
}

func (o RouterBgpVrfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrf] {
	return pulumix.Output[[]RouterBgpVrf]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrf {
		return vs[0].([]RouterBgpVrf)[vs[1].(int)]
	}).(RouterBgpVrfOutput)
}

type RouterBgpVrfExportRt struct {
	RouteTarget *string `pulumi:"routeTarget"`
}

// RouterBgpVrfExportRtInput is an input type that accepts RouterBgpVrfExportRtArgs and RouterBgpVrfExportRtOutput values.
// You can construct a concrete instance of `RouterBgpVrfExportRtInput` via:
//
//	RouterBgpVrfExportRtArgs{...}
type RouterBgpVrfExportRtInput interface {
	pulumi.Input

	ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput
	ToRouterBgpVrfExportRtOutputWithContext(context.Context) RouterBgpVrfExportRtOutput
}

type RouterBgpVrfExportRtArgs struct {
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (RouterBgpVrfExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfExportRt)(nil)).Elem()
}

func (i RouterBgpVrfExportRtArgs) ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput {
	return i.ToRouterBgpVrfExportRtOutputWithContext(context.Background())
}

func (i RouterBgpVrfExportRtArgs) ToRouterBgpVrfExportRtOutputWithContext(ctx context.Context) RouterBgpVrfExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfExportRtOutput)
}

func (i RouterBgpVrfExportRtArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfExportRt] {
	return pulumix.Output[RouterBgpVrfExportRt]{
		OutputState: i.ToRouterBgpVrfExportRtOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfExportRtArrayInput is an input type that accepts RouterBgpVrfExportRtArray and RouterBgpVrfExportRtArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfExportRtArrayInput` via:
//
//	RouterBgpVrfExportRtArray{ RouterBgpVrfExportRtArgs{...} }
type RouterBgpVrfExportRtArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput
	ToRouterBgpVrfExportRtArrayOutputWithContext(context.Context) RouterBgpVrfExportRtArrayOutput
}

type RouterBgpVrfExportRtArray []RouterBgpVrfExportRtInput

func (RouterBgpVrfExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfExportRt)(nil)).Elem()
}

func (i RouterBgpVrfExportRtArray) ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput {
	return i.ToRouterBgpVrfExportRtArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfExportRtArray) ToRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfExportRtArrayOutput)
}

func (i RouterBgpVrfExportRtArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfExportRt] {
	return pulumix.Output[[]RouterBgpVrfExportRt]{
		OutputState: i.ToRouterBgpVrfExportRtArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfExportRtOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfExportRt)(nil)).Elem()
}

func (o RouterBgpVrfExportRtOutput) ToRouterBgpVrfExportRtOutput() RouterBgpVrfExportRtOutput {
	return o
}

func (o RouterBgpVrfExportRtOutput) ToRouterBgpVrfExportRtOutputWithContext(ctx context.Context) RouterBgpVrfExportRtOutput {
	return o
}

func (o RouterBgpVrfExportRtOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfExportRt] {
	return pulumix.Output[RouterBgpVrfExportRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfExportRtArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfExportRt)(nil)).Elem()
}

func (o RouterBgpVrfExportRtArrayOutput) ToRouterBgpVrfExportRtArrayOutput() RouterBgpVrfExportRtArrayOutput {
	return o
}

func (o RouterBgpVrfExportRtArrayOutput) ToRouterBgpVrfExportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfExportRtArrayOutput {
	return o
}

func (o RouterBgpVrfExportRtArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfExportRt] {
	return pulumix.Output[[]RouterBgpVrfExportRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfExportRtArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfExportRt {
		return vs[0].([]RouterBgpVrfExportRt)[vs[1].(int)]
	}).(RouterBgpVrfExportRtOutput)
}

type RouterBgpVrfImportRt struct {
	RouteTarget *string `pulumi:"routeTarget"`
}

// RouterBgpVrfImportRtInput is an input type that accepts RouterBgpVrfImportRtArgs and RouterBgpVrfImportRtOutput values.
// You can construct a concrete instance of `RouterBgpVrfImportRtInput` via:
//
//	RouterBgpVrfImportRtArgs{...}
type RouterBgpVrfImportRtInput interface {
	pulumi.Input

	ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput
	ToRouterBgpVrfImportRtOutputWithContext(context.Context) RouterBgpVrfImportRtOutput
}

type RouterBgpVrfImportRtArgs struct {
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (RouterBgpVrfImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfImportRt)(nil)).Elem()
}

func (i RouterBgpVrfImportRtArgs) ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput {
	return i.ToRouterBgpVrfImportRtOutputWithContext(context.Background())
}

func (i RouterBgpVrfImportRtArgs) ToRouterBgpVrfImportRtOutputWithContext(ctx context.Context) RouterBgpVrfImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfImportRtOutput)
}

func (i RouterBgpVrfImportRtArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfImportRt] {
	return pulumix.Output[RouterBgpVrfImportRt]{
		OutputState: i.ToRouterBgpVrfImportRtOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfImportRtArrayInput is an input type that accepts RouterBgpVrfImportRtArray and RouterBgpVrfImportRtArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfImportRtArrayInput` via:
//
//	RouterBgpVrfImportRtArray{ RouterBgpVrfImportRtArgs{...} }
type RouterBgpVrfImportRtArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput
	ToRouterBgpVrfImportRtArrayOutputWithContext(context.Context) RouterBgpVrfImportRtArrayOutput
}

type RouterBgpVrfImportRtArray []RouterBgpVrfImportRtInput

func (RouterBgpVrfImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfImportRt)(nil)).Elem()
}

func (i RouterBgpVrfImportRtArray) ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput {
	return i.ToRouterBgpVrfImportRtArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfImportRtArray) ToRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfImportRtArrayOutput)
}

func (i RouterBgpVrfImportRtArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfImportRt] {
	return pulumix.Output[[]RouterBgpVrfImportRt]{
		OutputState: i.ToRouterBgpVrfImportRtArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfImportRtOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfImportRt)(nil)).Elem()
}

func (o RouterBgpVrfImportRtOutput) ToRouterBgpVrfImportRtOutput() RouterBgpVrfImportRtOutput {
	return o
}

func (o RouterBgpVrfImportRtOutput) ToRouterBgpVrfImportRtOutputWithContext(ctx context.Context) RouterBgpVrfImportRtOutput {
	return o
}

func (o RouterBgpVrfImportRtOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfImportRt] {
	return pulumix.Output[RouterBgpVrfImportRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfImportRtArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfImportRt)(nil)).Elem()
}

func (o RouterBgpVrfImportRtArrayOutput) ToRouterBgpVrfImportRtArrayOutput() RouterBgpVrfImportRtArrayOutput {
	return o
}

func (o RouterBgpVrfImportRtArrayOutput) ToRouterBgpVrfImportRtArrayOutputWithContext(ctx context.Context) RouterBgpVrfImportRtArrayOutput {
	return o
}

func (o RouterBgpVrfImportRtArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfImportRt] {
	return pulumix.Output[[]RouterBgpVrfImportRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfImportRtArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfImportRt {
		return vs[0].([]RouterBgpVrfImportRt)[vs[1].(int)]
	}).(RouterBgpVrfImportRtOutput)
}

type RouterBgpVrfLeak6 struct {
	Targets []RouterBgpVrfLeak6Target `pulumi:"targets"`
	Vrf     *string                   `pulumi:"vrf"`
}

// RouterBgpVrfLeak6Input is an input type that accepts RouterBgpVrfLeak6Args and RouterBgpVrfLeak6Output values.
// You can construct a concrete instance of `RouterBgpVrfLeak6Input` via:
//
//	RouterBgpVrfLeak6Args{...}
type RouterBgpVrfLeak6Input interface {
	pulumi.Input

	ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output
	ToRouterBgpVrfLeak6OutputWithContext(context.Context) RouterBgpVrfLeak6Output
}

type RouterBgpVrfLeak6Args struct {
	Targets RouterBgpVrfLeak6TargetArrayInput `pulumi:"targets"`
	Vrf     pulumi.StringPtrInput             `pulumi:"vrf"`
}

func (RouterBgpVrfLeak6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6)(nil)).Elem()
}

func (i RouterBgpVrfLeak6Args) ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output {
	return i.ToRouterBgpVrfLeak6OutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6Args) ToRouterBgpVrfLeak6OutputWithContext(ctx context.Context) RouterBgpVrfLeak6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6Output)
}

func (i RouterBgpVrfLeak6Args) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak6] {
	return pulumix.Output[RouterBgpVrfLeak6]{
		OutputState: i.ToRouterBgpVrfLeak6OutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfLeak6ArrayInput is an input type that accepts RouterBgpVrfLeak6Array and RouterBgpVrfLeak6ArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6ArrayInput` via:
//
//	RouterBgpVrfLeak6Array{ RouterBgpVrfLeak6Args{...} }
type RouterBgpVrfLeak6ArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput
	ToRouterBgpVrfLeak6ArrayOutputWithContext(context.Context) RouterBgpVrfLeak6ArrayOutput
}

type RouterBgpVrfLeak6Array []RouterBgpVrfLeak6Input

func (RouterBgpVrfLeak6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6)(nil)).Elem()
}

func (i RouterBgpVrfLeak6Array) ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput {
	return i.ToRouterBgpVrfLeak6ArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6Array) ToRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6ArrayOutput)
}

func (i RouterBgpVrfLeak6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak6] {
	return pulumix.Output[[]RouterBgpVrfLeak6]{
		OutputState: i.ToRouterBgpVrfLeak6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfLeak6Output struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6)(nil)).Elem()
}

func (o RouterBgpVrfLeak6Output) ToRouterBgpVrfLeak6Output() RouterBgpVrfLeak6Output {
	return o
}

func (o RouterBgpVrfLeak6Output) ToRouterBgpVrfLeak6OutputWithContext(ctx context.Context) RouterBgpVrfLeak6Output {
	return o
}

func (o RouterBgpVrfLeak6Output) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak6] {
	return pulumix.Output[RouterBgpVrfLeak6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeak6Output) Targets() RouterBgpVrfLeak6TargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6) []RouterBgpVrfLeak6Target { return v.Targets }).(RouterBgpVrfLeak6TargetArrayOutput)
}

func (o RouterBgpVrfLeak6Output) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeak6ArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6)(nil)).Elem()
}

func (o RouterBgpVrfLeak6ArrayOutput) ToRouterBgpVrfLeak6ArrayOutput() RouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6ArrayOutput) ToRouterBgpVrfLeak6ArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6ArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak6] {
	return pulumix.Output[[]RouterBgpVrfLeak6]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeak6ArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeak6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak6 {
		return vs[0].([]RouterBgpVrfLeak6)[vs[1].(int)]
	}).(RouterBgpVrfLeak6Output)
}

type RouterBgpVrfLeak6Target struct {
	Interface *string `pulumi:"interface"`
	RouteMap  *string `pulumi:"routeMap"`
	Vrf       *string `pulumi:"vrf"`
}

// RouterBgpVrfLeak6TargetInput is an input type that accepts RouterBgpVrfLeak6TargetArgs and RouterBgpVrfLeak6TargetOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6TargetInput` via:
//
//	RouterBgpVrfLeak6TargetArgs{...}
type RouterBgpVrfLeak6TargetInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput
	ToRouterBgpVrfLeak6TargetOutputWithContext(context.Context) RouterBgpVrfLeak6TargetOutput
}

type RouterBgpVrfLeak6TargetArgs struct {
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	RouteMap  pulumi.StringPtrInput `pulumi:"routeMap"`
	Vrf       pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeak6TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i RouterBgpVrfLeak6TargetArgs) ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput {
	return i.ToRouterBgpVrfLeak6TargetOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6TargetArgs) ToRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6TargetOutput)
}

func (i RouterBgpVrfLeak6TargetArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak6Target] {
	return pulumix.Output[RouterBgpVrfLeak6Target]{
		OutputState: i.ToRouterBgpVrfLeak6TargetOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfLeak6TargetArrayInput is an input type that accepts RouterBgpVrfLeak6TargetArray and RouterBgpVrfLeak6TargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeak6TargetArrayInput` via:
//
//	RouterBgpVrfLeak6TargetArray{ RouterBgpVrfLeak6TargetArgs{...} }
type RouterBgpVrfLeak6TargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput
	ToRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Context) RouterBgpVrfLeak6TargetArrayOutput
}

type RouterBgpVrfLeak6TargetArray []RouterBgpVrfLeak6TargetInput

func (RouterBgpVrfLeak6TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (i RouterBgpVrfLeak6TargetArray) ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput {
	return i.ToRouterBgpVrfLeak6TargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeak6TargetArray) ToRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeak6TargetArrayOutput)
}

func (i RouterBgpVrfLeak6TargetArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak6Target] {
	return pulumix.Output[[]RouterBgpVrfLeak6Target]{
		OutputState: i.ToRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfLeak6TargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o RouterBgpVrfLeak6TargetOutput) ToRouterBgpVrfLeak6TargetOutput() RouterBgpVrfLeak6TargetOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetOutput) ToRouterBgpVrfLeak6TargetOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak6Target] {
	return pulumix.Output[RouterBgpVrfLeak6Target]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeak6TargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfLeak6TargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfLeak6TargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak6Target) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeak6TargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeak6TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak6Target)(nil)).Elem()
}

func (o RouterBgpVrfLeak6TargetArrayOutput) ToRouterBgpVrfLeak6TargetArrayOutput() RouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetArrayOutput) ToRouterBgpVrfLeak6TargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeak6TargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeak6TargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak6Target] {
	return pulumix.Output[[]RouterBgpVrfLeak6Target]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeak6TargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeak6TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak6Target {
		return vs[0].([]RouterBgpVrfLeak6Target)[vs[1].(int)]
	}).(RouterBgpVrfLeak6TargetOutput)
}

type RouterBgpVrfLeak struct {
	Targets []RouterBgpVrfLeakTarget `pulumi:"targets"`
	Vrf     *string                  `pulumi:"vrf"`
}

// RouterBgpVrfLeakInput is an input type that accepts RouterBgpVrfLeakArgs and RouterBgpVrfLeakOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakInput` via:
//
//	RouterBgpVrfLeakArgs{...}
type RouterBgpVrfLeakInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput
	ToRouterBgpVrfLeakOutputWithContext(context.Context) RouterBgpVrfLeakOutput
}

type RouterBgpVrfLeakArgs struct {
	Targets RouterBgpVrfLeakTargetArrayInput `pulumi:"targets"`
	Vrf     pulumi.StringPtrInput            `pulumi:"vrf"`
}

func (RouterBgpVrfLeakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak)(nil)).Elem()
}

func (i RouterBgpVrfLeakArgs) ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput {
	return i.ToRouterBgpVrfLeakOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakArgs) ToRouterBgpVrfLeakOutputWithContext(ctx context.Context) RouterBgpVrfLeakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakOutput)
}

func (i RouterBgpVrfLeakArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak] {
	return pulumix.Output[RouterBgpVrfLeak]{
		OutputState: i.ToRouterBgpVrfLeakOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfLeakArrayInput is an input type that accepts RouterBgpVrfLeakArray and RouterBgpVrfLeakArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakArrayInput` via:
//
//	RouterBgpVrfLeakArray{ RouterBgpVrfLeakArgs{...} }
type RouterBgpVrfLeakArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput
	ToRouterBgpVrfLeakArrayOutputWithContext(context.Context) RouterBgpVrfLeakArrayOutput
}

type RouterBgpVrfLeakArray []RouterBgpVrfLeakInput

func (RouterBgpVrfLeakArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak)(nil)).Elem()
}

func (i RouterBgpVrfLeakArray) ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput {
	return i.ToRouterBgpVrfLeakArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakArray) ToRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakArrayOutput)
}

func (i RouterBgpVrfLeakArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak] {
	return pulumix.Output[[]RouterBgpVrfLeak]{
		OutputState: i.ToRouterBgpVrfLeakArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfLeakOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeak)(nil)).Elem()
}

func (o RouterBgpVrfLeakOutput) ToRouterBgpVrfLeakOutput() RouterBgpVrfLeakOutput {
	return o
}

func (o RouterBgpVrfLeakOutput) ToRouterBgpVrfLeakOutputWithContext(ctx context.Context) RouterBgpVrfLeakOutput {
	return o
}

func (o RouterBgpVrfLeakOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeak] {
	return pulumix.Output[RouterBgpVrfLeak]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeakOutput) Targets() RouterBgpVrfLeakTargetArrayOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak) []RouterBgpVrfLeakTarget { return v.Targets }).(RouterBgpVrfLeakTargetArrayOutput)
}

func (o RouterBgpVrfLeakOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeak) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeakArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeak)(nil)).Elem()
}

func (o RouterBgpVrfLeakArrayOutput) ToRouterBgpVrfLeakArrayOutput() RouterBgpVrfLeakArrayOutput {
	return o
}

func (o RouterBgpVrfLeakArrayOutput) ToRouterBgpVrfLeakArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakArrayOutput {
	return o
}

func (o RouterBgpVrfLeakArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeak] {
	return pulumix.Output[[]RouterBgpVrfLeak]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeakArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeakOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeak {
		return vs[0].([]RouterBgpVrfLeak)[vs[1].(int)]
	}).(RouterBgpVrfLeakOutput)
}

type RouterBgpVrfLeakTarget struct {
	Interface *string `pulumi:"interface"`
	RouteMap  *string `pulumi:"routeMap"`
	Vrf       *string `pulumi:"vrf"`
}

// RouterBgpVrfLeakTargetInput is an input type that accepts RouterBgpVrfLeakTargetArgs and RouterBgpVrfLeakTargetOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakTargetInput` via:
//
//	RouterBgpVrfLeakTargetArgs{...}
type RouterBgpVrfLeakTargetInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput
	ToRouterBgpVrfLeakTargetOutputWithContext(context.Context) RouterBgpVrfLeakTargetOutput
}

type RouterBgpVrfLeakTargetArgs struct {
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	RouteMap  pulumi.StringPtrInput `pulumi:"routeMap"`
	Vrf       pulumi.StringPtrInput `pulumi:"vrf"`
}

func (RouterBgpVrfLeakTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i RouterBgpVrfLeakTargetArgs) ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput {
	return i.ToRouterBgpVrfLeakTargetOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakTargetArgs) ToRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakTargetOutput)
}

func (i RouterBgpVrfLeakTargetArgs) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeakTarget] {
	return pulumix.Output[RouterBgpVrfLeakTarget]{
		OutputState: i.ToRouterBgpVrfLeakTargetOutputWithContext(ctx).OutputState,
	}
}

// RouterBgpVrfLeakTargetArrayInput is an input type that accepts RouterBgpVrfLeakTargetArray and RouterBgpVrfLeakTargetArrayOutput values.
// You can construct a concrete instance of `RouterBgpVrfLeakTargetArrayInput` via:
//
//	RouterBgpVrfLeakTargetArray{ RouterBgpVrfLeakTargetArgs{...} }
type RouterBgpVrfLeakTargetArrayInput interface {
	pulumi.Input

	ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput
	ToRouterBgpVrfLeakTargetArrayOutputWithContext(context.Context) RouterBgpVrfLeakTargetArrayOutput
}

type RouterBgpVrfLeakTargetArray []RouterBgpVrfLeakTargetInput

func (RouterBgpVrfLeakTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (i RouterBgpVrfLeakTargetArray) ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput {
	return i.ToRouterBgpVrfLeakTargetArrayOutputWithContext(context.Background())
}

func (i RouterBgpVrfLeakTargetArray) ToRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpVrfLeakTargetArrayOutput)
}

func (i RouterBgpVrfLeakTargetArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeakTarget] {
	return pulumix.Output[[]RouterBgpVrfLeakTarget]{
		OutputState: i.ToRouterBgpVrfLeakTargetArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterBgpVrfLeakTargetOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o RouterBgpVrfLeakTargetOutput) ToRouterBgpVrfLeakTargetOutput() RouterBgpVrfLeakTargetOutput {
	return o
}

func (o RouterBgpVrfLeakTargetOutput) ToRouterBgpVrfLeakTargetOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetOutput {
	return o
}

func (o RouterBgpVrfLeakTargetOutput) ToOutput(ctx context.Context) pulumix.Output[RouterBgpVrfLeakTarget] {
	return pulumix.Output[RouterBgpVrfLeakTarget]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeakTargetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfLeakTargetOutput) RouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.RouteMap }).(pulumi.StringPtrOutput)
}

func (o RouterBgpVrfLeakTargetOutput) Vrf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterBgpVrfLeakTarget) *string { return v.Vrf }).(pulumi.StringPtrOutput)
}

type RouterBgpVrfLeakTargetArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpVrfLeakTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpVrfLeakTarget)(nil)).Elem()
}

func (o RouterBgpVrfLeakTargetArrayOutput) ToRouterBgpVrfLeakTargetArrayOutput() RouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeakTargetArrayOutput) ToRouterBgpVrfLeakTargetArrayOutputWithContext(ctx context.Context) RouterBgpVrfLeakTargetArrayOutput {
	return o
}

func (o RouterBgpVrfLeakTargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterBgpVrfLeakTarget] {
	return pulumix.Output[[]RouterBgpVrfLeakTarget]{
		OutputState: o.OutputState,
	}
}

func (o RouterBgpVrfLeakTargetArrayOutput) Index(i pulumi.IntInput) RouterBgpVrfLeakTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpVrfLeakTarget {
		return vs[0].([]RouterBgpVrfLeakTarget)[vs[1].(int)]
	}).(RouterBgpVrfLeakTargetOutput)
}

type RouterCommunityListRule struct {
	Action *string `pulumi:"action"`
	Id     *int    `pulumi:"id"`
	Match  *string `pulumi:"match"`
	Regexp *string `pulumi:"regexp"`
}

// RouterCommunityListRuleInput is an input type that accepts RouterCommunityListRuleArgs and RouterCommunityListRuleOutput values.
// You can construct a concrete instance of `RouterCommunityListRuleInput` via:
//
//	RouterCommunityListRuleArgs{...}
type RouterCommunityListRuleInput interface {
	pulumi.Input

	ToRouterCommunityListRuleOutput() RouterCommunityListRuleOutput
	ToRouterCommunityListRuleOutputWithContext(context.Context) RouterCommunityListRuleOutput
}

type RouterCommunityListRuleArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Match  pulumi.StringPtrInput `pulumi:"match"`
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
}

func (RouterCommunityListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterCommunityListRule)(nil)).Elem()
}

func (i RouterCommunityListRuleArgs) ToRouterCommunityListRuleOutput() RouterCommunityListRuleOutput {
	return i.ToRouterCommunityListRuleOutputWithContext(context.Background())
}

func (i RouterCommunityListRuleArgs) ToRouterCommunityListRuleOutputWithContext(ctx context.Context) RouterCommunityListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterCommunityListRuleOutput)
}

func (i RouterCommunityListRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterCommunityListRule] {
	return pulumix.Output[RouterCommunityListRule]{
		OutputState: i.ToRouterCommunityListRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterCommunityListRuleArrayInput is an input type that accepts RouterCommunityListRuleArray and RouterCommunityListRuleArrayOutput values.
// You can construct a concrete instance of `RouterCommunityListRuleArrayInput` via:
//
//	RouterCommunityListRuleArray{ RouterCommunityListRuleArgs{...} }
type RouterCommunityListRuleArrayInput interface {
	pulumi.Input

	ToRouterCommunityListRuleArrayOutput() RouterCommunityListRuleArrayOutput
	ToRouterCommunityListRuleArrayOutputWithContext(context.Context) RouterCommunityListRuleArrayOutput
}

type RouterCommunityListRuleArray []RouterCommunityListRuleInput

func (RouterCommunityListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterCommunityListRule)(nil)).Elem()
}

func (i RouterCommunityListRuleArray) ToRouterCommunityListRuleArrayOutput() RouterCommunityListRuleArrayOutput {
	return i.ToRouterCommunityListRuleArrayOutputWithContext(context.Background())
}

func (i RouterCommunityListRuleArray) ToRouterCommunityListRuleArrayOutputWithContext(ctx context.Context) RouterCommunityListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterCommunityListRuleArrayOutput)
}

func (i RouterCommunityListRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterCommunityListRule] {
	return pulumix.Output[[]RouterCommunityListRule]{
		OutputState: i.ToRouterCommunityListRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterCommunityListRuleOutput struct{ *pulumi.OutputState }

func (RouterCommunityListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterCommunityListRule)(nil)).Elem()
}

func (o RouterCommunityListRuleOutput) ToRouterCommunityListRuleOutput() RouterCommunityListRuleOutput {
	return o
}

func (o RouterCommunityListRuleOutput) ToRouterCommunityListRuleOutputWithContext(ctx context.Context) RouterCommunityListRuleOutput {
	return o
}

func (o RouterCommunityListRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterCommunityListRule] {
	return pulumix.Output[RouterCommunityListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterCommunityListRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunityListRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterCommunityListRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterCommunityListRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterCommunityListRuleOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunityListRule) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o RouterCommunityListRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterCommunityListRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

type RouterCommunityListRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterCommunityListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterCommunityListRule)(nil)).Elem()
}

func (o RouterCommunityListRuleArrayOutput) ToRouterCommunityListRuleArrayOutput() RouterCommunityListRuleArrayOutput {
	return o
}

func (o RouterCommunityListRuleArrayOutput) ToRouterCommunityListRuleArrayOutputWithContext(ctx context.Context) RouterCommunityListRuleArrayOutput {
	return o
}

func (o RouterCommunityListRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterCommunityListRule] {
	return pulumix.Output[[]RouterCommunityListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterCommunityListRuleArrayOutput) Index(i pulumi.IntInput) RouterCommunityListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterCommunityListRule {
		return vs[0].([]RouterCommunityListRule)[vs[1].(int)]
	}).(RouterCommunityListRuleOutput)
}

type RouterExtcommunityListRule struct {
	Action *string `pulumi:"action"`
	Id     *int    `pulumi:"id"`
	Match  *string `pulumi:"match"`
	Regexp *string `pulumi:"regexp"`
	Type   *string `pulumi:"type"`
}

// RouterExtcommunityListRuleInput is an input type that accepts RouterExtcommunityListRuleArgs and RouterExtcommunityListRuleOutput values.
// You can construct a concrete instance of `RouterExtcommunityListRuleInput` via:
//
//	RouterExtcommunityListRuleArgs{...}
type RouterExtcommunityListRuleInput interface {
	pulumi.Input

	ToRouterExtcommunityListRuleOutput() RouterExtcommunityListRuleOutput
	ToRouterExtcommunityListRuleOutputWithContext(context.Context) RouterExtcommunityListRuleOutput
}

type RouterExtcommunityListRuleArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Match  pulumi.StringPtrInput `pulumi:"match"`
	Regexp pulumi.StringPtrInput `pulumi:"regexp"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (RouterExtcommunityListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterExtcommunityListRule)(nil)).Elem()
}

func (i RouterExtcommunityListRuleArgs) ToRouterExtcommunityListRuleOutput() RouterExtcommunityListRuleOutput {
	return i.ToRouterExtcommunityListRuleOutputWithContext(context.Background())
}

func (i RouterExtcommunityListRuleArgs) ToRouterExtcommunityListRuleOutputWithContext(ctx context.Context) RouterExtcommunityListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterExtcommunityListRuleOutput)
}

func (i RouterExtcommunityListRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterExtcommunityListRule] {
	return pulumix.Output[RouterExtcommunityListRule]{
		OutputState: i.ToRouterExtcommunityListRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterExtcommunityListRuleArrayInput is an input type that accepts RouterExtcommunityListRuleArray and RouterExtcommunityListRuleArrayOutput values.
// You can construct a concrete instance of `RouterExtcommunityListRuleArrayInput` via:
//
//	RouterExtcommunityListRuleArray{ RouterExtcommunityListRuleArgs{...} }
type RouterExtcommunityListRuleArrayInput interface {
	pulumi.Input

	ToRouterExtcommunityListRuleArrayOutput() RouterExtcommunityListRuleArrayOutput
	ToRouterExtcommunityListRuleArrayOutputWithContext(context.Context) RouterExtcommunityListRuleArrayOutput
}

type RouterExtcommunityListRuleArray []RouterExtcommunityListRuleInput

func (RouterExtcommunityListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterExtcommunityListRule)(nil)).Elem()
}

func (i RouterExtcommunityListRuleArray) ToRouterExtcommunityListRuleArrayOutput() RouterExtcommunityListRuleArrayOutput {
	return i.ToRouterExtcommunityListRuleArrayOutputWithContext(context.Background())
}

func (i RouterExtcommunityListRuleArray) ToRouterExtcommunityListRuleArrayOutputWithContext(ctx context.Context) RouterExtcommunityListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterExtcommunityListRuleArrayOutput)
}

func (i RouterExtcommunityListRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterExtcommunityListRule] {
	return pulumix.Output[[]RouterExtcommunityListRule]{
		OutputState: i.ToRouterExtcommunityListRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterExtcommunityListRuleOutput struct{ *pulumi.OutputState }

func (RouterExtcommunityListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterExtcommunityListRule)(nil)).Elem()
}

func (o RouterExtcommunityListRuleOutput) ToRouterExtcommunityListRuleOutput() RouterExtcommunityListRuleOutput {
	return o
}

func (o RouterExtcommunityListRuleOutput) ToRouterExtcommunityListRuleOutputWithContext(ctx context.Context) RouterExtcommunityListRuleOutput {
	return o
}

func (o RouterExtcommunityListRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterExtcommunityListRule] {
	return pulumix.Output[RouterExtcommunityListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterExtcommunityListRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterExtcommunityListRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterExtcommunityListRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterExtcommunityListRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterExtcommunityListRuleOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterExtcommunityListRule) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o RouterExtcommunityListRuleOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterExtcommunityListRule) *string { return v.Regexp }).(pulumi.StringPtrOutput)
}

func (o RouterExtcommunityListRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterExtcommunityListRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouterExtcommunityListRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterExtcommunityListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterExtcommunityListRule)(nil)).Elem()
}

func (o RouterExtcommunityListRuleArrayOutput) ToRouterExtcommunityListRuleArrayOutput() RouterExtcommunityListRuleArrayOutput {
	return o
}

func (o RouterExtcommunityListRuleArrayOutput) ToRouterExtcommunityListRuleArrayOutputWithContext(ctx context.Context) RouterExtcommunityListRuleArrayOutput {
	return o
}

func (o RouterExtcommunityListRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterExtcommunityListRule] {
	return pulumix.Output[[]RouterExtcommunityListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterExtcommunityListRuleArrayOutput) Index(i pulumi.IntInput) RouterExtcommunityListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterExtcommunityListRule {
		return vs[0].([]RouterExtcommunityListRule)[vs[1].(int)]
	}).(RouterExtcommunityListRuleOutput)
}

type RouterIsisIsisInterface struct {
	AuthKeychainL1        *string `pulumi:"authKeychainL1"`
	AuthKeychainL2        *string `pulumi:"authKeychainL2"`
	AuthModeL1            *string `pulumi:"authModeL1"`
	AuthModeL2            *string `pulumi:"authModeL2"`
	AuthPasswordL1        *string `pulumi:"authPasswordL1"`
	AuthPasswordL2        *string `pulumi:"authPasswordL2"`
	AuthSendOnlyL1        *string `pulumi:"authSendOnlyL1"`
	AuthSendOnlyL2        *string `pulumi:"authSendOnlyL2"`
	CircuitType           *string `pulumi:"circuitType"`
	CsnpIntervalL1        *int    `pulumi:"csnpIntervalL1"`
	CsnpIntervalL2        *int    `pulumi:"csnpIntervalL2"`
	HelloIntervalL1       *int    `pulumi:"helloIntervalL1"`
	HelloIntervalL2       *int    `pulumi:"helloIntervalL2"`
	HelloMultiplierL1     *int    `pulumi:"helloMultiplierL1"`
	HelloMultiplierL2     *int    `pulumi:"helloMultiplierL2"`
	HelloPadding          *string `pulumi:"helloPadding"`
	LspInterval           *int    `pulumi:"lspInterval"`
	LspRetransmitInterval *int    `pulumi:"lspRetransmitInterval"`
	MeshGroup             *string `pulumi:"meshGroup"`
	MeshGroupId           *int    `pulumi:"meshGroupId"`
	MetricL1              *int    `pulumi:"metricL1"`
	MetricL2              *int    `pulumi:"metricL2"`
	Name                  *string `pulumi:"name"`
	NetworkType           *string `pulumi:"networkType"`
	PriorityL1            *int    `pulumi:"priorityL1"`
	PriorityL2            *int    `pulumi:"priorityL2"`
	Status                *string `pulumi:"status"`
	Status6               *string `pulumi:"status6"`
	WideMetricL1          *int    `pulumi:"wideMetricL1"`
	WideMetricL2          *int    `pulumi:"wideMetricL2"`
}

// RouterIsisIsisInterfaceInput is an input type that accepts RouterIsisIsisInterfaceArgs and RouterIsisIsisInterfaceOutput values.
// You can construct a concrete instance of `RouterIsisIsisInterfaceInput` via:
//
//	RouterIsisIsisInterfaceArgs{...}
type RouterIsisIsisInterfaceInput interface {
	pulumi.Input

	ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput
	ToRouterIsisIsisInterfaceOutputWithContext(context.Context) RouterIsisIsisInterfaceOutput
}

type RouterIsisIsisInterfaceArgs struct {
	AuthKeychainL1        pulumi.StringPtrInput `pulumi:"authKeychainL1"`
	AuthKeychainL2        pulumi.StringPtrInput `pulumi:"authKeychainL2"`
	AuthModeL1            pulumi.StringPtrInput `pulumi:"authModeL1"`
	AuthModeL2            pulumi.StringPtrInput `pulumi:"authModeL2"`
	AuthPasswordL1        pulumi.StringPtrInput `pulumi:"authPasswordL1"`
	AuthPasswordL2        pulumi.StringPtrInput `pulumi:"authPasswordL2"`
	AuthSendOnlyL1        pulumi.StringPtrInput `pulumi:"authSendOnlyL1"`
	AuthSendOnlyL2        pulumi.StringPtrInput `pulumi:"authSendOnlyL2"`
	CircuitType           pulumi.StringPtrInput `pulumi:"circuitType"`
	CsnpIntervalL1        pulumi.IntPtrInput    `pulumi:"csnpIntervalL1"`
	CsnpIntervalL2        pulumi.IntPtrInput    `pulumi:"csnpIntervalL2"`
	HelloIntervalL1       pulumi.IntPtrInput    `pulumi:"helloIntervalL1"`
	HelloIntervalL2       pulumi.IntPtrInput    `pulumi:"helloIntervalL2"`
	HelloMultiplierL1     pulumi.IntPtrInput    `pulumi:"helloMultiplierL1"`
	HelloMultiplierL2     pulumi.IntPtrInput    `pulumi:"helloMultiplierL2"`
	HelloPadding          pulumi.StringPtrInput `pulumi:"helloPadding"`
	LspInterval           pulumi.IntPtrInput    `pulumi:"lspInterval"`
	LspRetransmitInterval pulumi.IntPtrInput    `pulumi:"lspRetransmitInterval"`
	MeshGroup             pulumi.StringPtrInput `pulumi:"meshGroup"`
	MeshGroupId           pulumi.IntPtrInput    `pulumi:"meshGroupId"`
	MetricL1              pulumi.IntPtrInput    `pulumi:"metricL1"`
	MetricL2              pulumi.IntPtrInput    `pulumi:"metricL2"`
	Name                  pulumi.StringPtrInput `pulumi:"name"`
	NetworkType           pulumi.StringPtrInput `pulumi:"networkType"`
	PriorityL1            pulumi.IntPtrInput    `pulumi:"priorityL1"`
	PriorityL2            pulumi.IntPtrInput    `pulumi:"priorityL2"`
	Status                pulumi.StringPtrInput `pulumi:"status"`
	Status6               pulumi.StringPtrInput `pulumi:"status6"`
	WideMetricL1          pulumi.IntPtrInput    `pulumi:"wideMetricL1"`
	WideMetricL2          pulumi.IntPtrInput    `pulumi:"wideMetricL2"`
}

func (RouterIsisIsisInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisInterface)(nil)).Elem()
}

func (i RouterIsisIsisInterfaceArgs) ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput {
	return i.ToRouterIsisIsisInterfaceOutputWithContext(context.Background())
}

func (i RouterIsisIsisInterfaceArgs) ToRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisInterfaceOutput)
}

func (i RouterIsisIsisInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterIsisIsisInterface] {
	return pulumix.Output[RouterIsisIsisInterface]{
		OutputState: i.ToRouterIsisIsisInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterIsisIsisInterfaceArrayInput is an input type that accepts RouterIsisIsisInterfaceArray and RouterIsisIsisInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterIsisIsisInterfaceArrayInput` via:
//
//	RouterIsisIsisInterfaceArray{ RouterIsisIsisInterfaceArgs{...} }
type RouterIsisIsisInterfaceArrayInput interface {
	pulumi.Input

	ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput
	ToRouterIsisIsisInterfaceArrayOutputWithContext(context.Context) RouterIsisIsisInterfaceArrayOutput
}

type RouterIsisIsisInterfaceArray []RouterIsisIsisInterfaceInput

func (RouterIsisIsisInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisInterface)(nil)).Elem()
}

func (i RouterIsisIsisInterfaceArray) ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput {
	return i.ToRouterIsisIsisInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterIsisIsisInterfaceArray) ToRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisInterfaceArrayOutput)
}

func (i RouterIsisIsisInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisIsisInterface] {
	return pulumix.Output[[]RouterIsisIsisInterface]{
		OutputState: i.ToRouterIsisIsisInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisIsisInterfaceOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisInterface)(nil)).Elem()
}

func (o RouterIsisIsisInterfaceOutput) ToRouterIsisIsisInterfaceOutput() RouterIsisIsisInterfaceOutput {
	return o
}

func (o RouterIsisIsisInterfaceOutput) ToRouterIsisIsisInterfaceOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceOutput {
	return o
}

func (o RouterIsisIsisInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterIsisIsisInterface] {
	return pulumix.Output[RouterIsisIsisInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisIsisInterfaceOutput) AuthKeychainL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthKeychainL1 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthKeychainL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthKeychainL2 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthModeL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthModeL1 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthModeL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthModeL2 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthPasswordL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthPasswordL1 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthPasswordL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthPasswordL2 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthSendOnlyL1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthSendOnlyL1 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) AuthSendOnlyL2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.AuthSendOnlyL2 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) CircuitType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.CircuitType }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) CsnpIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.CsnpIntervalL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) CsnpIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.CsnpIntervalL2 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) HelloIntervalL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloIntervalL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) HelloIntervalL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloIntervalL2 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) HelloMultiplierL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloMultiplierL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) HelloMultiplierL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.HelloMultiplierL2 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) HelloPadding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.HelloPadding }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) LspInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.LspInterval }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) LspRetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.LspRetransmitInterval }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) MeshGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.MeshGroup }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) MeshGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MeshGroupId }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) MetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MetricL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) MetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.MetricL2 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) PriorityL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.PriorityL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) PriorityL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.PriorityL2 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) Status6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *string { return v.Status6 }).(pulumi.StringPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) WideMetricL1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.WideMetricL1 }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisInterfaceOutput) WideMetricL2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisInterface) *int { return v.WideMetricL2 }).(pulumi.IntPtrOutput)
}

type RouterIsisIsisInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisInterface)(nil)).Elem()
}

func (o RouterIsisIsisInterfaceArrayOutput) ToRouterIsisIsisInterfaceArrayOutput() RouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o RouterIsisIsisInterfaceArrayOutput) ToRouterIsisIsisInterfaceArrayOutputWithContext(ctx context.Context) RouterIsisIsisInterfaceArrayOutput {
	return o
}

func (o RouterIsisIsisInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisIsisInterface] {
	return pulumix.Output[[]RouterIsisIsisInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisIsisInterfaceArrayOutput) Index(i pulumi.IntInput) RouterIsisIsisInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisIsisInterface {
		return vs[0].([]RouterIsisIsisInterface)[vs[1].(int)]
	}).(RouterIsisIsisInterfaceOutput)
}

type RouterIsisIsisNet struct {
	Id  *int    `pulumi:"id"`
	Net *string `pulumi:"net"`
}

// RouterIsisIsisNetInput is an input type that accepts RouterIsisIsisNetArgs and RouterIsisIsisNetOutput values.
// You can construct a concrete instance of `RouterIsisIsisNetInput` via:
//
//	RouterIsisIsisNetArgs{...}
type RouterIsisIsisNetInput interface {
	pulumi.Input

	ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput
	ToRouterIsisIsisNetOutputWithContext(context.Context) RouterIsisIsisNetOutput
}

type RouterIsisIsisNetArgs struct {
	Id  pulumi.IntPtrInput    `pulumi:"id"`
	Net pulumi.StringPtrInput `pulumi:"net"`
}

func (RouterIsisIsisNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisNet)(nil)).Elem()
}

func (i RouterIsisIsisNetArgs) ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput {
	return i.ToRouterIsisIsisNetOutputWithContext(context.Background())
}

func (i RouterIsisIsisNetArgs) ToRouterIsisIsisNetOutputWithContext(ctx context.Context) RouterIsisIsisNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisNetOutput)
}

func (i RouterIsisIsisNetArgs) ToOutput(ctx context.Context) pulumix.Output[RouterIsisIsisNet] {
	return pulumix.Output[RouterIsisIsisNet]{
		OutputState: i.ToRouterIsisIsisNetOutputWithContext(ctx).OutputState,
	}
}

// RouterIsisIsisNetArrayInput is an input type that accepts RouterIsisIsisNetArray and RouterIsisIsisNetArrayOutput values.
// You can construct a concrete instance of `RouterIsisIsisNetArrayInput` via:
//
//	RouterIsisIsisNetArray{ RouterIsisIsisNetArgs{...} }
type RouterIsisIsisNetArrayInput interface {
	pulumi.Input

	ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput
	ToRouterIsisIsisNetArrayOutputWithContext(context.Context) RouterIsisIsisNetArrayOutput
}

type RouterIsisIsisNetArray []RouterIsisIsisNetInput

func (RouterIsisIsisNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisNet)(nil)).Elem()
}

func (i RouterIsisIsisNetArray) ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput {
	return i.ToRouterIsisIsisNetArrayOutputWithContext(context.Background())
}

func (i RouterIsisIsisNetArray) ToRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) RouterIsisIsisNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisIsisNetArrayOutput)
}

func (i RouterIsisIsisNetArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisIsisNet] {
	return pulumix.Output[[]RouterIsisIsisNet]{
		OutputState: i.ToRouterIsisIsisNetArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisIsisNetOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisIsisNet)(nil)).Elem()
}

func (o RouterIsisIsisNetOutput) ToRouterIsisIsisNetOutput() RouterIsisIsisNetOutput {
	return o
}

func (o RouterIsisIsisNetOutput) ToRouterIsisIsisNetOutputWithContext(ctx context.Context) RouterIsisIsisNetOutput {
	return o
}

func (o RouterIsisIsisNetOutput) ToOutput(ctx context.Context) pulumix.Output[RouterIsisIsisNet] {
	return pulumix.Output[RouterIsisIsisNet]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisIsisNetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisNet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterIsisIsisNetOutput) Net() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisIsisNet) *string { return v.Net }).(pulumi.StringPtrOutput)
}

type RouterIsisIsisNetArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisIsisNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisIsisNet)(nil)).Elem()
}

func (o RouterIsisIsisNetArrayOutput) ToRouterIsisIsisNetArrayOutput() RouterIsisIsisNetArrayOutput {
	return o
}

func (o RouterIsisIsisNetArrayOutput) ToRouterIsisIsisNetArrayOutputWithContext(ctx context.Context) RouterIsisIsisNetArrayOutput {
	return o
}

func (o RouterIsisIsisNetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisIsisNet] {
	return pulumix.Output[[]RouterIsisIsisNet]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisIsisNetArrayOutput) Index(i pulumi.IntInput) RouterIsisIsisNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisIsisNet {
		return vs[0].([]RouterIsisIsisNet)[vs[1].(int)]
	}).(RouterIsisIsisNetOutput)
}

type RouterIsisRedistribute6 struct {
	Level      *string `pulumi:"level"`
	Metric     *int    `pulumi:"metric"`
	MetricType *string `pulumi:"metricType"`
	Protocol   *string `pulumi:"protocol"`
	Routemap   *string `pulumi:"routemap"`
	Status     *string `pulumi:"status"`
}

// RouterIsisRedistribute6Input is an input type that accepts RouterIsisRedistribute6Args and RouterIsisRedistribute6Output values.
// You can construct a concrete instance of `RouterIsisRedistribute6Input` via:
//
//	RouterIsisRedistribute6Args{...}
type RouterIsisRedistribute6Input interface {
	pulumi.Input

	ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output
	ToRouterIsisRedistribute6OutputWithContext(context.Context) RouterIsisRedistribute6Output
}

type RouterIsisRedistribute6Args struct {
	Level      pulumi.StringPtrInput `pulumi:"level"`
	Metric     pulumi.IntPtrInput    `pulumi:"metric"`
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	Routemap   pulumi.StringPtrInput `pulumi:"routemap"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterIsisRedistribute6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute6)(nil)).Elem()
}

func (i RouterIsisRedistribute6Args) ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output {
	return i.ToRouterIsisRedistribute6OutputWithContext(context.Background())
}

func (i RouterIsisRedistribute6Args) ToRouterIsisRedistribute6OutputWithContext(ctx context.Context) RouterIsisRedistribute6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistribute6Output)
}

func (i RouterIsisRedistribute6Args) ToOutput(ctx context.Context) pulumix.Output[RouterIsisRedistribute6] {
	return pulumix.Output[RouterIsisRedistribute6]{
		OutputState: i.ToRouterIsisRedistribute6OutputWithContext(ctx).OutputState,
	}
}

// RouterIsisRedistribute6ArrayInput is an input type that accepts RouterIsisRedistribute6Array and RouterIsisRedistribute6ArrayOutput values.
// You can construct a concrete instance of `RouterIsisRedistribute6ArrayInput` via:
//
//	RouterIsisRedistribute6Array{ RouterIsisRedistribute6Args{...} }
type RouterIsisRedistribute6ArrayInput interface {
	pulumi.Input

	ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput
	ToRouterIsisRedistribute6ArrayOutputWithContext(context.Context) RouterIsisRedistribute6ArrayOutput
}

type RouterIsisRedistribute6Array []RouterIsisRedistribute6Input

func (RouterIsisRedistribute6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute6)(nil)).Elem()
}

func (i RouterIsisRedistribute6Array) ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput {
	return i.ToRouterIsisRedistribute6ArrayOutputWithContext(context.Background())
}

func (i RouterIsisRedistribute6Array) ToRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) RouterIsisRedistribute6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistribute6ArrayOutput)
}

func (i RouterIsisRedistribute6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisRedistribute6] {
	return pulumix.Output[[]RouterIsisRedistribute6]{
		OutputState: i.ToRouterIsisRedistribute6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisRedistribute6Output struct{ *pulumi.OutputState }

func (RouterIsisRedistribute6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute6)(nil)).Elem()
}

func (o RouterIsisRedistribute6Output) ToRouterIsisRedistribute6Output() RouterIsisRedistribute6Output {
	return o
}

func (o RouterIsisRedistribute6Output) ToRouterIsisRedistribute6OutputWithContext(ctx context.Context) RouterIsisRedistribute6Output {
	return o
}

func (o RouterIsisRedistribute6Output) ToOutput(ctx context.Context) pulumix.Output[RouterIsisRedistribute6] {
	return pulumix.Output[RouterIsisRedistribute6]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisRedistribute6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistribute6Output) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterIsisRedistribute6Output) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistribute6Output) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistribute6Output) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistribute6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterIsisRedistribute6ArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistribute6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute6)(nil)).Elem()
}

func (o RouterIsisRedistribute6ArrayOutput) ToRouterIsisRedistribute6ArrayOutput() RouterIsisRedistribute6ArrayOutput {
	return o
}

func (o RouterIsisRedistribute6ArrayOutput) ToRouterIsisRedistribute6ArrayOutputWithContext(ctx context.Context) RouterIsisRedistribute6ArrayOutput {
	return o
}

func (o RouterIsisRedistribute6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisRedistribute6] {
	return pulumix.Output[[]RouterIsisRedistribute6]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisRedistribute6ArrayOutput) Index(i pulumi.IntInput) RouterIsisRedistribute6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisRedistribute6 {
		return vs[0].([]RouterIsisRedistribute6)[vs[1].(int)]
	}).(RouterIsisRedistribute6Output)
}

type RouterIsisRedistribute struct {
	Level      *string `pulumi:"level"`
	Metric     *int    `pulumi:"metric"`
	MetricType *string `pulumi:"metricType"`
	Protocol   *string `pulumi:"protocol"`
	Routemap   *string `pulumi:"routemap"`
	Status     *string `pulumi:"status"`
}

// RouterIsisRedistributeInput is an input type that accepts RouterIsisRedistributeArgs and RouterIsisRedistributeOutput values.
// You can construct a concrete instance of `RouterIsisRedistributeInput` via:
//
//	RouterIsisRedistributeArgs{...}
type RouterIsisRedistributeInput interface {
	pulumi.Input

	ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput
	ToRouterIsisRedistributeOutputWithContext(context.Context) RouterIsisRedistributeOutput
}

type RouterIsisRedistributeArgs struct {
	Level      pulumi.StringPtrInput `pulumi:"level"`
	Metric     pulumi.IntPtrInput    `pulumi:"metric"`
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	Routemap   pulumi.StringPtrInput `pulumi:"routemap"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterIsisRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute)(nil)).Elem()
}

func (i RouterIsisRedistributeArgs) ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput {
	return i.ToRouterIsisRedistributeOutputWithContext(context.Background())
}

func (i RouterIsisRedistributeArgs) ToRouterIsisRedistributeOutputWithContext(ctx context.Context) RouterIsisRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistributeOutput)
}

func (i RouterIsisRedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterIsisRedistribute] {
	return pulumix.Output[RouterIsisRedistribute]{
		OutputState: i.ToRouterIsisRedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterIsisRedistributeArrayInput is an input type that accepts RouterIsisRedistributeArray and RouterIsisRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterIsisRedistributeArrayInput` via:
//
//	RouterIsisRedistributeArray{ RouterIsisRedistributeArgs{...} }
type RouterIsisRedistributeArrayInput interface {
	pulumi.Input

	ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput
	ToRouterIsisRedistributeArrayOutputWithContext(context.Context) RouterIsisRedistributeArrayOutput
}

type RouterIsisRedistributeArray []RouterIsisRedistributeInput

func (RouterIsisRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute)(nil)).Elem()
}

func (i RouterIsisRedistributeArray) ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput {
	return i.ToRouterIsisRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterIsisRedistributeArray) ToRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) RouterIsisRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisRedistributeArrayOutput)
}

func (i RouterIsisRedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisRedistribute] {
	return pulumix.Output[[]RouterIsisRedistribute]{
		OutputState: i.ToRouterIsisRedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisRedistributeOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisRedistribute)(nil)).Elem()
}

func (o RouterIsisRedistributeOutput) ToRouterIsisRedistributeOutput() RouterIsisRedistributeOutput {
	return o
}

func (o RouterIsisRedistributeOutput) ToRouterIsisRedistributeOutputWithContext(ctx context.Context) RouterIsisRedistributeOutput {
	return o
}

func (o RouterIsisRedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterIsisRedistribute] {
	return pulumix.Output[RouterIsisRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisRedistributeOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterIsisRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistributeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterIsisRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterIsisRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisRedistribute)(nil)).Elem()
}

func (o RouterIsisRedistributeArrayOutput) ToRouterIsisRedistributeArrayOutput() RouterIsisRedistributeArrayOutput {
	return o
}

func (o RouterIsisRedistributeArrayOutput) ToRouterIsisRedistributeArrayOutputWithContext(ctx context.Context) RouterIsisRedistributeArrayOutput {
	return o
}

func (o RouterIsisRedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisRedistribute] {
	return pulumix.Output[[]RouterIsisRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisRedistributeArrayOutput) Index(i pulumi.IntInput) RouterIsisRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisRedistribute {
		return vs[0].([]RouterIsisRedistribute)[vs[1].(int)]
	}).(RouterIsisRedistributeOutput)
}

type RouterIsisSummaryAddress6 struct {
	Id      *int    `pulumi:"id"`
	Level   *string `pulumi:"level"`
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterIsisSummaryAddress6Input is an input type that accepts RouterIsisSummaryAddress6Args and RouterIsisSummaryAddress6Output values.
// You can construct a concrete instance of `RouterIsisSummaryAddress6Input` via:
//
//	RouterIsisSummaryAddress6Args{...}
type RouterIsisSummaryAddress6Input interface {
	pulumi.Input

	ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output
	ToRouterIsisSummaryAddress6OutputWithContext(context.Context) RouterIsisSummaryAddress6Output
}

type RouterIsisSummaryAddress6Args struct {
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	Level   pulumi.StringPtrInput `pulumi:"level"`
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterIsisSummaryAddress6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress6)(nil)).Elem()
}

func (i RouterIsisSummaryAddress6Args) ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output {
	return i.ToRouterIsisSummaryAddress6OutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddress6Args) ToRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) RouterIsisSummaryAddress6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddress6Output)
}

func (i RouterIsisSummaryAddress6Args) ToOutput(ctx context.Context) pulumix.Output[RouterIsisSummaryAddress6] {
	return pulumix.Output[RouterIsisSummaryAddress6]{
		OutputState: i.ToRouterIsisSummaryAddress6OutputWithContext(ctx).OutputState,
	}
}

// RouterIsisSummaryAddress6ArrayInput is an input type that accepts RouterIsisSummaryAddress6Array and RouterIsisSummaryAddress6ArrayOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddress6ArrayInput` via:
//
//	RouterIsisSummaryAddress6Array{ RouterIsisSummaryAddress6Args{...} }
type RouterIsisSummaryAddress6ArrayInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput
	ToRouterIsisSummaryAddress6ArrayOutputWithContext(context.Context) RouterIsisSummaryAddress6ArrayOutput
}

type RouterIsisSummaryAddress6Array []RouterIsisSummaryAddress6Input

func (RouterIsisSummaryAddress6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress6)(nil)).Elem()
}

func (i RouterIsisSummaryAddress6Array) ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput {
	return i.ToRouterIsisSummaryAddress6ArrayOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddress6Array) ToRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddress6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddress6ArrayOutput)
}

func (i RouterIsisSummaryAddress6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisSummaryAddress6] {
	return pulumix.Output[[]RouterIsisSummaryAddress6]{
		OutputState: i.ToRouterIsisSummaryAddress6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisSummaryAddress6Output struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddress6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress6)(nil)).Elem()
}

func (o RouterIsisSummaryAddress6Output) ToRouterIsisSummaryAddress6Output() RouterIsisSummaryAddress6Output {
	return o
}

func (o RouterIsisSummaryAddress6Output) ToRouterIsisSummaryAddress6OutputWithContext(ctx context.Context) RouterIsisSummaryAddress6Output {
	return o
}

func (o RouterIsisSummaryAddress6Output) ToOutput(ctx context.Context) pulumix.Output[RouterIsisSummaryAddress6] {
	return pulumix.Output[RouterIsisSummaryAddress6]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisSummaryAddress6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterIsisSummaryAddress6Output) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o RouterIsisSummaryAddress6Output) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress6) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterIsisSummaryAddress6ArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddress6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress6)(nil)).Elem()
}

func (o RouterIsisSummaryAddress6ArrayOutput) ToRouterIsisSummaryAddress6ArrayOutput() RouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o RouterIsisSummaryAddress6ArrayOutput) ToRouterIsisSummaryAddress6ArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddress6ArrayOutput {
	return o
}

func (o RouterIsisSummaryAddress6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisSummaryAddress6] {
	return pulumix.Output[[]RouterIsisSummaryAddress6]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisSummaryAddress6ArrayOutput) Index(i pulumi.IntInput) RouterIsisSummaryAddress6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisSummaryAddress6 {
		return vs[0].([]RouterIsisSummaryAddress6)[vs[1].(int)]
	}).(RouterIsisSummaryAddress6Output)
}

type RouterIsisSummaryAddress struct {
	Id     *int    `pulumi:"id"`
	Level  *string `pulumi:"level"`
	Prefix *string `pulumi:"prefix"`
}

// RouterIsisSummaryAddressInput is an input type that accepts RouterIsisSummaryAddressArgs and RouterIsisSummaryAddressOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddressInput` via:
//
//	RouterIsisSummaryAddressArgs{...}
type RouterIsisSummaryAddressInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput
	ToRouterIsisSummaryAddressOutputWithContext(context.Context) RouterIsisSummaryAddressOutput
}

type RouterIsisSummaryAddressArgs struct {
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Level  pulumi.StringPtrInput `pulumi:"level"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterIsisSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress)(nil)).Elem()
}

func (i RouterIsisSummaryAddressArgs) ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput {
	return i.ToRouterIsisSummaryAddressOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddressArgs) ToRouterIsisSummaryAddressOutputWithContext(ctx context.Context) RouterIsisSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddressOutput)
}

func (i RouterIsisSummaryAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterIsisSummaryAddress] {
	return pulumix.Output[RouterIsisSummaryAddress]{
		OutputState: i.ToRouterIsisSummaryAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterIsisSummaryAddressArrayInput is an input type that accepts RouterIsisSummaryAddressArray and RouterIsisSummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterIsisSummaryAddressArrayInput` via:
//
//	RouterIsisSummaryAddressArray{ RouterIsisSummaryAddressArgs{...} }
type RouterIsisSummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput
	ToRouterIsisSummaryAddressArrayOutputWithContext(context.Context) RouterIsisSummaryAddressArrayOutput
}

type RouterIsisSummaryAddressArray []RouterIsisSummaryAddressInput

func (RouterIsisSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress)(nil)).Elem()
}

func (i RouterIsisSummaryAddressArray) ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput {
	return i.ToRouterIsisSummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterIsisSummaryAddressArray) ToRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterIsisSummaryAddressArrayOutput)
}

func (i RouterIsisSummaryAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisSummaryAddress] {
	return pulumix.Output[[]RouterIsisSummaryAddress]{
		OutputState: i.ToRouterIsisSummaryAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterIsisSummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterIsisSummaryAddress)(nil)).Elem()
}

func (o RouterIsisSummaryAddressOutput) ToRouterIsisSummaryAddressOutput() RouterIsisSummaryAddressOutput {
	return o
}

func (o RouterIsisSummaryAddressOutput) ToRouterIsisSummaryAddressOutputWithContext(ctx context.Context) RouterIsisSummaryAddressOutput {
	return o
}

func (o RouterIsisSummaryAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterIsisSummaryAddress] {
	return pulumix.Output[RouterIsisSummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterIsisSummaryAddressOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o RouterIsisSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterIsisSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterIsisSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterIsisSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterIsisSummaryAddress)(nil)).Elem()
}

func (o RouterIsisSummaryAddressArrayOutput) ToRouterIsisSummaryAddressArrayOutput() RouterIsisSummaryAddressArrayOutput {
	return o
}

func (o RouterIsisSummaryAddressArrayOutput) ToRouterIsisSummaryAddressArrayOutputWithContext(ctx context.Context) RouterIsisSummaryAddressArrayOutput {
	return o
}

func (o RouterIsisSummaryAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterIsisSummaryAddress] {
	return pulumix.Output[[]RouterIsisSummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterIsisSummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterIsisSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterIsisSummaryAddress {
		return vs[0].([]RouterIsisSummaryAddress)[vs[1].(int)]
	}).(RouterIsisSummaryAddressOutput)
}

type RouterKeyChainKey struct {
	AcceptLifetime *string `pulumi:"acceptLifetime"`
	Algorithm      *string `pulumi:"algorithm"`
	Id             *int    `pulumi:"id"`
	KeyString      *string `pulumi:"keyString"`
	SendLifetime   *string `pulumi:"sendLifetime"`
}

// RouterKeyChainKeyInput is an input type that accepts RouterKeyChainKeyArgs and RouterKeyChainKeyOutput values.
// You can construct a concrete instance of `RouterKeyChainKeyInput` via:
//
//	RouterKeyChainKeyArgs{...}
type RouterKeyChainKeyInput interface {
	pulumi.Input

	ToRouterKeyChainKeyOutput() RouterKeyChainKeyOutput
	ToRouterKeyChainKeyOutputWithContext(context.Context) RouterKeyChainKeyOutput
}

type RouterKeyChainKeyArgs struct {
	AcceptLifetime pulumi.StringPtrInput `pulumi:"acceptLifetime"`
	Algorithm      pulumi.StringPtrInput `pulumi:"algorithm"`
	Id             pulumi.IntPtrInput    `pulumi:"id"`
	KeyString      pulumi.StringPtrInput `pulumi:"keyString"`
	SendLifetime   pulumi.StringPtrInput `pulumi:"sendLifetime"`
}

func (RouterKeyChainKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterKeyChainKey)(nil)).Elem()
}

func (i RouterKeyChainKeyArgs) ToRouterKeyChainKeyOutput() RouterKeyChainKeyOutput {
	return i.ToRouterKeyChainKeyOutputWithContext(context.Background())
}

func (i RouterKeyChainKeyArgs) ToRouterKeyChainKeyOutputWithContext(ctx context.Context) RouterKeyChainKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterKeyChainKeyOutput)
}

func (i RouterKeyChainKeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterKeyChainKey] {
	return pulumix.Output[RouterKeyChainKey]{
		OutputState: i.ToRouterKeyChainKeyOutputWithContext(ctx).OutputState,
	}
}

// RouterKeyChainKeyArrayInput is an input type that accepts RouterKeyChainKeyArray and RouterKeyChainKeyArrayOutput values.
// You can construct a concrete instance of `RouterKeyChainKeyArrayInput` via:
//
//	RouterKeyChainKeyArray{ RouterKeyChainKeyArgs{...} }
type RouterKeyChainKeyArrayInput interface {
	pulumi.Input

	ToRouterKeyChainKeyArrayOutput() RouterKeyChainKeyArrayOutput
	ToRouterKeyChainKeyArrayOutputWithContext(context.Context) RouterKeyChainKeyArrayOutput
}

type RouterKeyChainKeyArray []RouterKeyChainKeyInput

func (RouterKeyChainKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterKeyChainKey)(nil)).Elem()
}

func (i RouterKeyChainKeyArray) ToRouterKeyChainKeyArrayOutput() RouterKeyChainKeyArrayOutput {
	return i.ToRouterKeyChainKeyArrayOutputWithContext(context.Background())
}

func (i RouterKeyChainKeyArray) ToRouterKeyChainKeyArrayOutputWithContext(ctx context.Context) RouterKeyChainKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterKeyChainKeyArrayOutput)
}

func (i RouterKeyChainKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterKeyChainKey] {
	return pulumix.Output[[]RouterKeyChainKey]{
		OutputState: i.ToRouterKeyChainKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterKeyChainKeyOutput struct{ *pulumi.OutputState }

func (RouterKeyChainKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterKeyChainKey)(nil)).Elem()
}

func (o RouterKeyChainKeyOutput) ToRouterKeyChainKeyOutput() RouterKeyChainKeyOutput {
	return o
}

func (o RouterKeyChainKeyOutput) ToRouterKeyChainKeyOutputWithContext(ctx context.Context) RouterKeyChainKeyOutput {
	return o
}

func (o RouterKeyChainKeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterKeyChainKey] {
	return pulumix.Output[RouterKeyChainKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterKeyChainKeyOutput) AcceptLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeyChainKey) *string { return v.AcceptLifetime }).(pulumi.StringPtrOutput)
}

func (o RouterKeyChainKeyOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeyChainKey) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o RouterKeyChainKeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterKeyChainKey) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterKeyChainKeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeyChainKey) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

func (o RouterKeyChainKeyOutput) SendLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterKeyChainKey) *string { return v.SendLifetime }).(pulumi.StringPtrOutput)
}

type RouterKeyChainKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterKeyChainKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterKeyChainKey)(nil)).Elem()
}

func (o RouterKeyChainKeyArrayOutput) ToRouterKeyChainKeyArrayOutput() RouterKeyChainKeyArrayOutput {
	return o
}

func (o RouterKeyChainKeyArrayOutput) ToRouterKeyChainKeyArrayOutputWithContext(ctx context.Context) RouterKeyChainKeyArrayOutput {
	return o
}

func (o RouterKeyChainKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterKeyChainKey] {
	return pulumix.Output[[]RouterKeyChainKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterKeyChainKeyArrayOutput) Index(i pulumi.IntInput) RouterKeyChainKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterKeyChainKey {
		return vs[0].([]RouterKeyChainKey)[vs[1].(int)]
	}).(RouterKeyChainKeyOutput)
}

type RouterMulticast6Interface struct {
	HelloHoldtime *int    `pulumi:"helloHoldtime"`
	HelloInterval *int    `pulumi:"helloInterval"`
	Name          *string `pulumi:"name"`
}

// RouterMulticast6InterfaceInput is an input type that accepts RouterMulticast6InterfaceArgs and RouterMulticast6InterfaceOutput values.
// You can construct a concrete instance of `RouterMulticast6InterfaceInput` via:
//
//	RouterMulticast6InterfaceArgs{...}
type RouterMulticast6InterfaceInput interface {
	pulumi.Input

	ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput
	ToRouterMulticast6InterfaceOutputWithContext(context.Context) RouterMulticast6InterfaceOutput
}

type RouterMulticast6InterfaceArgs struct {
	HelloHoldtime pulumi.IntPtrInput    `pulumi:"helloHoldtime"`
	HelloInterval pulumi.IntPtrInput    `pulumi:"helloInterval"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterMulticast6InterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6Interface)(nil)).Elem()
}

func (i RouterMulticast6InterfaceArgs) ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput {
	return i.ToRouterMulticast6InterfaceOutputWithContext(context.Background())
}

func (i RouterMulticast6InterfaceArgs) ToRouterMulticast6InterfaceOutputWithContext(ctx context.Context) RouterMulticast6InterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6InterfaceOutput)
}

func (i RouterMulticast6InterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6Interface] {
	return pulumix.Output[RouterMulticast6Interface]{
		OutputState: i.ToRouterMulticast6InterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticast6InterfaceArrayInput is an input type that accepts RouterMulticast6InterfaceArray and RouterMulticast6InterfaceArrayOutput values.
// You can construct a concrete instance of `RouterMulticast6InterfaceArrayInput` via:
//
//	RouterMulticast6InterfaceArray{ RouterMulticast6InterfaceArgs{...} }
type RouterMulticast6InterfaceArrayInput interface {
	pulumi.Input

	ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput
	ToRouterMulticast6InterfaceArrayOutputWithContext(context.Context) RouterMulticast6InterfaceArrayOutput
}

type RouterMulticast6InterfaceArray []RouterMulticast6InterfaceInput

func (RouterMulticast6InterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6Interface)(nil)).Elem()
}

func (i RouterMulticast6InterfaceArray) ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput {
	return i.ToRouterMulticast6InterfaceArrayOutputWithContext(context.Background())
}

func (i RouterMulticast6InterfaceArray) ToRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) RouterMulticast6InterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6InterfaceArrayOutput)
}

func (i RouterMulticast6InterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticast6Interface] {
	return pulumix.Output[[]RouterMulticast6Interface]{
		OutputState: i.ToRouterMulticast6InterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticast6InterfaceOutput struct{ *pulumi.OutputState }

func (RouterMulticast6InterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6Interface)(nil)).Elem()
}

func (o RouterMulticast6InterfaceOutput) ToRouterMulticast6InterfaceOutput() RouterMulticast6InterfaceOutput {
	return o
}

func (o RouterMulticast6InterfaceOutput) ToRouterMulticast6InterfaceOutputWithContext(ctx context.Context) RouterMulticast6InterfaceOutput {
	return o
}

func (o RouterMulticast6InterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6Interface] {
	return pulumix.Output[RouterMulticast6Interface]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6InterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

func (o RouterMulticast6InterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticast6InterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticast6Interface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterMulticast6InterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticast6InterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6Interface)(nil)).Elem()
}

func (o RouterMulticast6InterfaceArrayOutput) ToRouterMulticast6InterfaceArrayOutput() RouterMulticast6InterfaceArrayOutput {
	return o
}

func (o RouterMulticast6InterfaceArrayOutput) ToRouterMulticast6InterfaceArrayOutputWithContext(ctx context.Context) RouterMulticast6InterfaceArrayOutput {
	return o
}

func (o RouterMulticast6InterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticast6Interface] {
	return pulumix.Output[[]RouterMulticast6Interface]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6InterfaceArrayOutput) Index(i pulumi.IntInput) RouterMulticast6InterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticast6Interface {
		return vs[0].([]RouterMulticast6Interface)[vs[1].(int)]
	}).(RouterMulticast6InterfaceOutput)
}

type RouterMulticast6PimSmGlobal struct {
	RegisterRateLimit *int                                   `pulumi:"registerRateLimit"`
	RpAddresses       []RouterMulticast6PimSmGlobalRpAddress `pulumi:"rpAddresses"`
}

// RouterMulticast6PimSmGlobalInput is an input type that accepts RouterMulticast6PimSmGlobalArgs and RouterMulticast6PimSmGlobalOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalInput` via:
//
//	RouterMulticast6PimSmGlobalArgs{...}
type RouterMulticast6PimSmGlobalInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput
	ToRouterMulticast6PimSmGlobalOutputWithContext(context.Context) RouterMulticast6PimSmGlobalOutput
}

type RouterMulticast6PimSmGlobalArgs struct {
	RegisterRateLimit pulumi.IntPtrInput                             `pulumi:"registerRateLimit"`
	RpAddresses       RouterMulticast6PimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
}

func (RouterMulticast6PimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput {
	return i.ToRouterMulticast6PimSmGlobalOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalOutput)
}

func (i RouterMulticast6PimSmGlobalArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6PimSmGlobal] {
	return pulumix.Output[RouterMulticast6PimSmGlobal]{
		OutputState: i.ToRouterMulticast6PimSmGlobalOutputWithContext(ctx).OutputState,
	}
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return i.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalArgs) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalOutput).ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx)
}

// RouterMulticast6PimSmGlobalPtrInput is an input type that accepts RouterMulticast6PimSmGlobalArgs, RouterMulticast6PimSmGlobalPtr and RouterMulticast6PimSmGlobalPtrOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalPtrInput` via:
//
//	        RouterMulticast6PimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type RouterMulticast6PimSmGlobalPtrInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput
	ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Context) RouterMulticast6PimSmGlobalPtrOutput
}

type routerMulticast6PimSmGlobalPtrType RouterMulticast6PimSmGlobalArgs

func RouterMulticast6PimSmGlobalPtr(v *RouterMulticast6PimSmGlobalArgs) RouterMulticast6PimSmGlobalPtrInput {
	return (*routerMulticast6PimSmGlobalPtrType)(v)
}

func (*routerMulticast6PimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (i *routerMulticast6PimSmGlobalPtrType) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return i.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *routerMulticast6PimSmGlobalPtrType) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalPtrOutput)
}

func (i *routerMulticast6PimSmGlobalPtrType) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticast6PimSmGlobal] {
	return pulumix.Output[*RouterMulticast6PimSmGlobal]{
		OutputState: i.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticast6PimSmGlobalOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalOutput() RouterMulticast6PimSmGlobalOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return o.ToRouterMulticast6PimSmGlobalPtrOutputWithContext(context.Background())
}

func (o RouterMulticast6PimSmGlobalOutput) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticast6PimSmGlobal) *RouterMulticast6PimSmGlobal {
		return &v
	}).(RouterMulticast6PimSmGlobalPtrOutput)
}

func (o RouterMulticast6PimSmGlobalOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6PimSmGlobal] {
	return pulumix.Output[RouterMulticast6PimSmGlobal]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6PimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

func (o RouterMulticast6PimSmGlobalOutput) RpAddresses() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobal) []RouterMulticast6PimSmGlobalRpAddress { return v.RpAddresses }).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type RouterMulticast6PimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticast6PimSmGlobal)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalPtrOutput) ToRouterMulticast6PimSmGlobalPtrOutput() RouterMulticast6PimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalPtrOutput) ToRouterMulticast6PimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticast6PimSmGlobal] {
	return pulumix.Output[*RouterMulticast6PimSmGlobal]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6PimSmGlobalPtrOutput) Elem() RouterMulticast6PimSmGlobalOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) RouterMulticast6PimSmGlobal {
		if v != nil {
			return *v
		}
		var ret RouterMulticast6PimSmGlobal
		return ret
	}).(RouterMulticast6PimSmGlobalOutput)
}

func (o RouterMulticast6PimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticast6PimSmGlobalPtrOutput) RpAddresses() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *RouterMulticast6PimSmGlobal) []RouterMulticast6PimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

type RouterMulticast6PimSmGlobalRpAddress struct {
	Id         *int    `pulumi:"id"`
	Ip6Address *string `pulumi:"ip6Address"`
}

// RouterMulticast6PimSmGlobalRpAddressInput is an input type that accepts RouterMulticast6PimSmGlobalRpAddressArgs and RouterMulticast6PimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalRpAddressInput` via:
//
//	RouterMulticast6PimSmGlobalRpAddressArgs{...}
type RouterMulticast6PimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput
	ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Context) RouterMulticast6PimSmGlobalRpAddressOutput
}

type RouterMulticast6PimSmGlobalRpAddressArgs struct {
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Ip6Address pulumi.StringPtrInput `pulumi:"ip6Address"`
}

func (RouterMulticast6PimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalRpAddressArgs) ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput {
	return i.ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalRpAddressArgs) ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalRpAddressOutput)
}

func (i RouterMulticast6PimSmGlobalRpAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6PimSmGlobalRpAddress] {
	return pulumix.Output[RouterMulticast6PimSmGlobalRpAddress]{
		OutputState: i.ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticast6PimSmGlobalRpAddressArrayInput is an input type that accepts RouterMulticast6PimSmGlobalRpAddressArray and RouterMulticast6PimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `RouterMulticast6PimSmGlobalRpAddressArrayInput` via:
//
//	RouterMulticast6PimSmGlobalRpAddressArray{ RouterMulticast6PimSmGlobalRpAddressArgs{...} }
type RouterMulticast6PimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput
	ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput
}

type RouterMulticast6PimSmGlobalRpAddressArray []RouterMulticast6PimSmGlobalRpAddressInput

func (RouterMulticast6PimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticast6PimSmGlobalRpAddressArray) ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return i.ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i RouterMulticast6PimSmGlobalRpAddressArray) ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticast6PimSmGlobalRpAddressArrayOutput)
}

func (i RouterMulticast6PimSmGlobalRpAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticast6PimSmGlobalRpAddress] {
	return pulumix.Output[[]RouterMulticast6PimSmGlobalRpAddress]{
		OutputState: i.ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticast6PimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) ToRouterMulticast6PimSmGlobalRpAddressOutput() RouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) ToRouterMulticast6PimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticast6PimSmGlobalRpAddress] {
	return pulumix.Output[RouterMulticast6PimSmGlobalRpAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterMulticast6PimSmGlobalRpAddressOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticast6PimSmGlobalRpAddress) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

type RouterMulticast6PimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticast6PimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticast6PimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) ToRouterMulticast6PimSmGlobalRpAddressArrayOutput() RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) ToRouterMulticast6PimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticast6PimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticast6PimSmGlobalRpAddress] {
	return pulumix.Output[[]RouterMulticast6PimSmGlobalRpAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticast6PimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) RouterMulticast6PimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticast6PimSmGlobalRpAddress {
		return vs[0].([]RouterMulticast6PimSmGlobalRpAddress)[vs[1].(int)]
	}).(RouterMulticast6PimSmGlobalRpAddressOutput)
}

type RouterMulticastFlowFlow struct {
	GroupAddr  *string `pulumi:"groupAddr"`
	Id         *int    `pulumi:"id"`
	SourceAddr *string `pulumi:"sourceAddr"`
}

// RouterMulticastFlowFlowInput is an input type that accepts RouterMulticastFlowFlowArgs and RouterMulticastFlowFlowOutput values.
// You can construct a concrete instance of `RouterMulticastFlowFlowInput` via:
//
//	RouterMulticastFlowFlowArgs{...}
type RouterMulticastFlowFlowInput interface {
	pulumi.Input

	ToRouterMulticastFlowFlowOutput() RouterMulticastFlowFlowOutput
	ToRouterMulticastFlowFlowOutputWithContext(context.Context) RouterMulticastFlowFlowOutput
}

type RouterMulticastFlowFlowArgs struct {
	GroupAddr  pulumi.StringPtrInput `pulumi:"groupAddr"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	SourceAddr pulumi.StringPtrInput `pulumi:"sourceAddr"`
}

func (RouterMulticastFlowFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastFlowFlow)(nil)).Elem()
}

func (i RouterMulticastFlowFlowArgs) ToRouterMulticastFlowFlowOutput() RouterMulticastFlowFlowOutput {
	return i.ToRouterMulticastFlowFlowOutputWithContext(context.Background())
}

func (i RouterMulticastFlowFlowArgs) ToRouterMulticastFlowFlowOutputWithContext(ctx context.Context) RouterMulticastFlowFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastFlowFlowOutput)
}

func (i RouterMulticastFlowFlowArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastFlowFlow] {
	return pulumix.Output[RouterMulticastFlowFlow]{
		OutputState: i.ToRouterMulticastFlowFlowOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticastFlowFlowArrayInput is an input type that accepts RouterMulticastFlowFlowArray and RouterMulticastFlowFlowArrayOutput values.
// You can construct a concrete instance of `RouterMulticastFlowFlowArrayInput` via:
//
//	RouterMulticastFlowFlowArray{ RouterMulticastFlowFlowArgs{...} }
type RouterMulticastFlowFlowArrayInput interface {
	pulumi.Input

	ToRouterMulticastFlowFlowArrayOutput() RouterMulticastFlowFlowArrayOutput
	ToRouterMulticastFlowFlowArrayOutputWithContext(context.Context) RouterMulticastFlowFlowArrayOutput
}

type RouterMulticastFlowFlowArray []RouterMulticastFlowFlowInput

func (RouterMulticastFlowFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastFlowFlow)(nil)).Elem()
}

func (i RouterMulticastFlowFlowArray) ToRouterMulticastFlowFlowArrayOutput() RouterMulticastFlowFlowArrayOutput {
	return i.ToRouterMulticastFlowFlowArrayOutputWithContext(context.Background())
}

func (i RouterMulticastFlowFlowArray) ToRouterMulticastFlowFlowArrayOutputWithContext(ctx context.Context) RouterMulticastFlowFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastFlowFlowArrayOutput)
}

func (i RouterMulticastFlowFlowArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastFlowFlow] {
	return pulumix.Output[[]RouterMulticastFlowFlow]{
		OutputState: i.ToRouterMulticastFlowFlowArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastFlowFlowOutput struct{ *pulumi.OutputState }

func (RouterMulticastFlowFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastFlowFlow)(nil)).Elem()
}

func (o RouterMulticastFlowFlowOutput) ToRouterMulticastFlowFlowOutput() RouterMulticastFlowFlowOutput {
	return o
}

func (o RouterMulticastFlowFlowOutput) ToRouterMulticastFlowFlowOutputWithContext(ctx context.Context) RouterMulticastFlowFlowOutput {
	return o
}

func (o RouterMulticastFlowFlowOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastFlowFlow] {
	return pulumix.Output[RouterMulticastFlowFlow]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastFlowFlowOutput) GroupAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastFlowFlow) *string { return v.GroupAddr }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastFlowFlowOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastFlowFlow) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastFlowFlowOutput) SourceAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastFlowFlow) *string { return v.SourceAddr }).(pulumi.StringPtrOutput)
}

type RouterMulticastFlowFlowArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastFlowFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastFlowFlow)(nil)).Elem()
}

func (o RouterMulticastFlowFlowArrayOutput) ToRouterMulticastFlowFlowArrayOutput() RouterMulticastFlowFlowArrayOutput {
	return o
}

func (o RouterMulticastFlowFlowArrayOutput) ToRouterMulticastFlowFlowArrayOutputWithContext(ctx context.Context) RouterMulticastFlowFlowArrayOutput {
	return o
}

func (o RouterMulticastFlowFlowArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastFlowFlow] {
	return pulumix.Output[[]RouterMulticastFlowFlow]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastFlowFlowArrayOutput) Index(i pulumi.IntInput) RouterMulticastFlowFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastFlowFlow {
		return vs[0].([]RouterMulticastFlowFlow)[vs[1].(int)]
	}).(RouterMulticastFlowFlowOutput)
}

type RouterMulticastInterface struct {
	Bfd                  *string                             `pulumi:"bfd"`
	CiscoExcludeGenid    *string                             `pulumi:"ciscoExcludeGenid"`
	DrPriority           *int                                `pulumi:"drPriority"`
	HelloHoldtime        *int                                `pulumi:"helloHoldtime"`
	HelloInterval        *int                                `pulumi:"helloInterval"`
	Igmp                 *RouterMulticastInterfaceIgmp       `pulumi:"igmp"`
	JoinGroups           []RouterMulticastInterfaceJoinGroup `pulumi:"joinGroups"`
	MulticastFlow        *string                             `pulumi:"multicastFlow"`
	Name                 *string                             `pulumi:"name"`
	NeighbourFilter      *string                             `pulumi:"neighbourFilter"`
	Passive              *string                             `pulumi:"passive"`
	PimMode              *string                             `pulumi:"pimMode"`
	PropagationDelay     *int                                `pulumi:"propagationDelay"`
	RpCandidate          *string                             `pulumi:"rpCandidate"`
	RpCandidateGroup     *string                             `pulumi:"rpCandidateGroup"`
	RpCandidateInterval  *int                                `pulumi:"rpCandidateInterval"`
	RpCandidatePriority  *int                                `pulumi:"rpCandidatePriority"`
	RpfNbrFailBack       *string                             `pulumi:"rpfNbrFailBack"`
	RpfNbrFailBackFilter *string                             `pulumi:"rpfNbrFailBackFilter"`
	StateRefreshInterval *int                                `pulumi:"stateRefreshInterval"`
	StaticGroup          *string                             `pulumi:"staticGroup"`
	TtlThreshold         *int                                `pulumi:"ttlThreshold"`
}

// RouterMulticastInterfaceInput is an input type that accepts RouterMulticastInterfaceArgs and RouterMulticastInterfaceOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceInput` via:
//
//	RouterMulticastInterfaceArgs{...}
type RouterMulticastInterfaceInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput
	ToRouterMulticastInterfaceOutputWithContext(context.Context) RouterMulticastInterfaceOutput
}

type RouterMulticastInterfaceArgs struct {
	Bfd                  pulumi.StringPtrInput                       `pulumi:"bfd"`
	CiscoExcludeGenid    pulumi.StringPtrInput                       `pulumi:"ciscoExcludeGenid"`
	DrPriority           pulumi.IntPtrInput                          `pulumi:"drPriority"`
	HelloHoldtime        pulumi.IntPtrInput                          `pulumi:"helloHoldtime"`
	HelloInterval        pulumi.IntPtrInput                          `pulumi:"helloInterval"`
	Igmp                 RouterMulticastInterfaceIgmpPtrInput        `pulumi:"igmp"`
	JoinGroups           RouterMulticastInterfaceJoinGroupArrayInput `pulumi:"joinGroups"`
	MulticastFlow        pulumi.StringPtrInput                       `pulumi:"multicastFlow"`
	Name                 pulumi.StringPtrInput                       `pulumi:"name"`
	NeighbourFilter      pulumi.StringPtrInput                       `pulumi:"neighbourFilter"`
	Passive              pulumi.StringPtrInput                       `pulumi:"passive"`
	PimMode              pulumi.StringPtrInput                       `pulumi:"pimMode"`
	PropagationDelay     pulumi.IntPtrInput                          `pulumi:"propagationDelay"`
	RpCandidate          pulumi.StringPtrInput                       `pulumi:"rpCandidate"`
	RpCandidateGroup     pulumi.StringPtrInput                       `pulumi:"rpCandidateGroup"`
	RpCandidateInterval  pulumi.IntPtrInput                          `pulumi:"rpCandidateInterval"`
	RpCandidatePriority  pulumi.IntPtrInput                          `pulumi:"rpCandidatePriority"`
	RpfNbrFailBack       pulumi.StringPtrInput                       `pulumi:"rpfNbrFailBack"`
	RpfNbrFailBackFilter pulumi.StringPtrInput                       `pulumi:"rpfNbrFailBackFilter"`
	StateRefreshInterval pulumi.IntPtrInput                          `pulumi:"stateRefreshInterval"`
	StaticGroup          pulumi.StringPtrInput                       `pulumi:"staticGroup"`
	TtlThreshold         pulumi.IntPtrInput                          `pulumi:"ttlThreshold"`
}

func (RouterMulticastInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterface)(nil)).Elem()
}

func (i RouterMulticastInterfaceArgs) ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput {
	return i.ToRouterMulticastInterfaceOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceArgs) ToRouterMulticastInterfaceOutputWithContext(ctx context.Context) RouterMulticastInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceOutput)
}

func (i RouterMulticastInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterface] {
	return pulumix.Output[RouterMulticastInterface]{
		OutputState: i.ToRouterMulticastInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticastInterfaceArrayInput is an input type that accepts RouterMulticastInterfaceArray and RouterMulticastInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceArrayInput` via:
//
//	RouterMulticastInterfaceArray{ RouterMulticastInterfaceArgs{...} }
type RouterMulticastInterfaceArrayInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput
	ToRouterMulticastInterfaceArrayOutputWithContext(context.Context) RouterMulticastInterfaceArrayOutput
}

type RouterMulticastInterfaceArray []RouterMulticastInterfaceInput

func (RouterMulticastInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterface)(nil)).Elem()
}

func (i RouterMulticastInterfaceArray) ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput {
	return i.ToRouterMulticastInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceArray) ToRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceArrayOutput)
}

func (i RouterMulticastInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastInterface] {
	return pulumix.Output[[]RouterMulticastInterface]{
		OutputState: i.ToRouterMulticastInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastInterfaceOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterface)(nil)).Elem()
}

func (o RouterMulticastInterfaceOutput) ToRouterMulticastInterfaceOutput() RouterMulticastInterfaceOutput {
	return o
}

func (o RouterMulticastInterfaceOutput) ToRouterMulticastInterfaceOutputWithContext(ctx context.Context) RouterMulticastInterfaceOutput {
	return o
}

func (o RouterMulticastInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterface] {
	return pulumix.Output[RouterMulticastInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) CiscoExcludeGenid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.CiscoExcludeGenid }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) DrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.DrPriority }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) HelloHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.HelloHoldtime }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) Igmp() RouterMulticastInterfaceIgmpPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *RouterMulticastInterfaceIgmp { return v.Igmp }).(RouterMulticastInterfaceIgmpPtrOutput)
}

func (o RouterMulticastInterfaceOutput) JoinGroups() RouterMulticastInterfaceJoinGroupArrayOutput {
	return o.ApplyT(func(v RouterMulticastInterface) []RouterMulticastInterfaceJoinGroup { return v.JoinGroups }).(RouterMulticastInterfaceJoinGroupArrayOutput)
}

func (o RouterMulticastInterfaceOutput) MulticastFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.MulticastFlow }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) NeighbourFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.NeighbourFilter }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) Passive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.Passive }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) PimMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.PimMode }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) PropagationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.PropagationDelay }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpCandidate }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpCandidateGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpCandidateGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpCandidateInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.RpCandidateInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpCandidatePriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.RpCandidatePriority }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpfNbrFailBack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpfNbrFailBack }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) RpfNbrFailBackFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.RpfNbrFailBackFilter }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) StateRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.StateRefreshInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceOutput) StaticGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *string { return v.StaticGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceOutput) TtlThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterface) *int { return v.TtlThreshold }).(pulumi.IntPtrOutput)
}

type RouterMulticastInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterface)(nil)).Elem()
}

func (o RouterMulticastInterfaceArrayOutput) ToRouterMulticastInterfaceArrayOutput() RouterMulticastInterfaceArrayOutput {
	return o
}

func (o RouterMulticastInterfaceArrayOutput) ToRouterMulticastInterfaceArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceArrayOutput {
	return o
}

func (o RouterMulticastInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastInterface] {
	return pulumix.Output[[]RouterMulticastInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceArrayOutput) Index(i pulumi.IntInput) RouterMulticastInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastInterface {
		return vs[0].([]RouterMulticastInterface)[vs[1].(int)]
	}).(RouterMulticastInterfaceOutput)
}

type RouterMulticastInterfaceIgmp struct {
	AccessGroup             *string `pulumi:"accessGroup"`
	ImmediateLeaveGroup     *string `pulumi:"immediateLeaveGroup"`
	LastMemberQueryCount    *int    `pulumi:"lastMemberQueryCount"`
	LastMemberQueryInterval *int    `pulumi:"lastMemberQueryInterval"`
	QueryInterval           *int    `pulumi:"queryInterval"`
	QueryMaxResponseTime    *int    `pulumi:"queryMaxResponseTime"`
	QueryTimeout            *int    `pulumi:"queryTimeout"`
	RouterAlertCheck        *string `pulumi:"routerAlertCheck"`
	Version                 *string `pulumi:"version"`
}

// RouterMulticastInterfaceIgmpInput is an input type that accepts RouterMulticastInterfaceIgmpArgs and RouterMulticastInterfaceIgmpOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceIgmpInput` via:
//
//	RouterMulticastInterfaceIgmpArgs{...}
type RouterMulticastInterfaceIgmpInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput
	ToRouterMulticastInterfaceIgmpOutputWithContext(context.Context) RouterMulticastInterfaceIgmpOutput
}

type RouterMulticastInterfaceIgmpArgs struct {
	AccessGroup             pulumi.StringPtrInput `pulumi:"accessGroup"`
	ImmediateLeaveGroup     pulumi.StringPtrInput `pulumi:"immediateLeaveGroup"`
	LastMemberQueryCount    pulumi.IntPtrInput    `pulumi:"lastMemberQueryCount"`
	LastMemberQueryInterval pulumi.IntPtrInput    `pulumi:"lastMemberQueryInterval"`
	QueryInterval           pulumi.IntPtrInput    `pulumi:"queryInterval"`
	QueryMaxResponseTime    pulumi.IntPtrInput    `pulumi:"queryMaxResponseTime"`
	QueryTimeout            pulumi.IntPtrInput    `pulumi:"queryTimeout"`
	RouterAlertCheck        pulumi.StringPtrInput `pulumi:"routerAlertCheck"`
	Version                 pulumi.StringPtrInput `pulumi:"version"`
}

func (RouterMulticastInterfaceIgmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput {
	return i.ToRouterMulticastInterfaceIgmpOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpOutput)
}

func (i RouterMulticastInterfaceIgmpArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterfaceIgmp] {
	return pulumix.Output[RouterMulticastInterfaceIgmp]{
		OutputState: i.ToRouterMulticastInterfaceIgmpOutputWithContext(ctx).OutputState,
	}
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return i.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceIgmpArgs) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpOutput).ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx)
}

// RouterMulticastInterfaceIgmpPtrInput is an input type that accepts RouterMulticastInterfaceIgmpArgs, RouterMulticastInterfaceIgmpPtr and RouterMulticastInterfaceIgmpPtrOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceIgmpPtrInput` via:
//
//	        RouterMulticastInterfaceIgmpArgs{...}
//
//	or:
//
//	        nil
type RouterMulticastInterfaceIgmpPtrInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput
	ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Context) RouterMulticastInterfaceIgmpPtrOutput
}

type routerMulticastInterfaceIgmpPtrType RouterMulticastInterfaceIgmpArgs

func RouterMulticastInterfaceIgmpPtr(v *RouterMulticastInterfaceIgmpArgs) RouterMulticastInterfaceIgmpPtrInput {
	return (*routerMulticastInterfaceIgmpPtrType)(v)
}

func (*routerMulticastInterfaceIgmpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (i *routerMulticastInterfaceIgmpPtrType) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return i.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (i *routerMulticastInterfaceIgmpPtrType) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceIgmpPtrOutput)
}

func (i *routerMulticastInterfaceIgmpPtrType) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticastInterfaceIgmp] {
	return pulumix.Output[*RouterMulticastInterfaceIgmp]{
		OutputState: i.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastInterfaceIgmpOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceIgmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpOutput() RouterMulticastInterfaceIgmpOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return o.ToRouterMulticastInterfaceIgmpPtrOutputWithContext(context.Background())
}

func (o RouterMulticastInterfaceIgmpOutput) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticastInterfaceIgmp) *RouterMulticastInterfaceIgmp {
		return &v
	}).(RouterMulticastInterfaceIgmpPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterfaceIgmp] {
	return pulumix.Output[RouterMulticastInterfaceIgmp]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceIgmpOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.AccessGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.ImmediateLeaveGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.LastMemberQueryCount }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.LastMemberQueryInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryMaxResponseTime }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *int { return v.QueryTimeout }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.RouterAlertCheck }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceIgmp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceIgmpPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceIgmpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastInterfaceIgmp)(nil)).Elem()
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ToRouterMulticastInterfaceIgmpPtrOutput() RouterMulticastInterfaceIgmpPtrOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ToRouterMulticastInterfaceIgmpPtrOutputWithContext(ctx context.Context) RouterMulticastInterfaceIgmpPtrOutput {
	return o
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticastInterfaceIgmp] {
	return pulumix.Output[*RouterMulticastInterfaceIgmp]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceIgmpPtrOutput) Elem() RouterMulticastInterfaceIgmpOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) RouterMulticastInterfaceIgmp {
		if v != nil {
			return *v
		}
		var ret RouterMulticastInterfaceIgmp
		return ret
	}).(RouterMulticastInterfaceIgmpOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) AccessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.AccessGroup
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) ImmediateLeaveGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.ImmediateLeaveGroup
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) LastMemberQueryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryCount
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) LastMemberQueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.LastMemberQueryInterval
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) QueryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryInterval
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) QueryMaxResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryMaxResponseTime
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) QueryTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *int {
		if v == nil {
			return nil
		}
		return v.QueryTimeout
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) RouterAlertCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.RouterAlertCheck
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastInterfaceIgmpPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastInterfaceIgmp) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceJoinGroup struct {
	Address *string `pulumi:"address"`
}

// RouterMulticastInterfaceJoinGroupInput is an input type that accepts RouterMulticastInterfaceJoinGroupArgs and RouterMulticastInterfaceJoinGroupOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceJoinGroupInput` via:
//
//	RouterMulticastInterfaceJoinGroupArgs{...}
type RouterMulticastInterfaceJoinGroupInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput
	ToRouterMulticastInterfaceJoinGroupOutputWithContext(context.Context) RouterMulticastInterfaceJoinGroupOutput
}

type RouterMulticastInterfaceJoinGroupArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (RouterMulticastInterfaceJoinGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i RouterMulticastInterfaceJoinGroupArgs) ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput {
	return i.ToRouterMulticastInterfaceJoinGroupOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceJoinGroupArgs) ToRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceJoinGroupOutput)
}

func (i RouterMulticastInterfaceJoinGroupArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterfaceJoinGroup] {
	return pulumix.Output[RouterMulticastInterfaceJoinGroup]{
		OutputState: i.ToRouterMulticastInterfaceJoinGroupOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticastInterfaceJoinGroupArrayInput is an input type that accepts RouterMulticastInterfaceJoinGroupArray and RouterMulticastInterfaceJoinGroupArrayOutput values.
// You can construct a concrete instance of `RouterMulticastInterfaceJoinGroupArrayInput` via:
//
//	RouterMulticastInterfaceJoinGroupArray{ RouterMulticastInterfaceJoinGroupArgs{...} }
type RouterMulticastInterfaceJoinGroupArrayInput interface {
	pulumi.Input

	ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput
	ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Context) RouterMulticastInterfaceJoinGroupArrayOutput
}

type RouterMulticastInterfaceJoinGroupArray []RouterMulticastInterfaceJoinGroupInput

func (RouterMulticastInterfaceJoinGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (i RouterMulticastInterfaceJoinGroupArray) ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput {
	return i.ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(context.Background())
}

func (i RouterMulticastInterfaceJoinGroupArray) ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastInterfaceJoinGroupArrayOutput)
}

func (i RouterMulticastInterfaceJoinGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastInterfaceJoinGroup] {
	return pulumix.Output[[]RouterMulticastInterfaceJoinGroup]{
		OutputState: i.ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastInterfaceJoinGroupOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceJoinGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o RouterMulticastInterfaceJoinGroupOutput) ToRouterMulticastInterfaceJoinGroupOutput() RouterMulticastInterfaceJoinGroupOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupOutput) ToRouterMulticastInterfaceJoinGroupOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastInterfaceJoinGroup] {
	return pulumix.Output[RouterMulticastInterfaceJoinGroup]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceJoinGroupOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastInterfaceJoinGroup) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type RouterMulticastInterfaceJoinGroupArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastInterfaceJoinGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastInterfaceJoinGroup)(nil)).Elem()
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) ToRouterMulticastInterfaceJoinGroupArrayOutput() RouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) ToRouterMulticastInterfaceJoinGroupArrayOutputWithContext(ctx context.Context) RouterMulticastInterfaceJoinGroupArrayOutput {
	return o
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastInterfaceJoinGroup] {
	return pulumix.Output[[]RouterMulticastInterfaceJoinGroup]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastInterfaceJoinGroupArrayOutput) Index(i pulumi.IntInput) RouterMulticastInterfaceJoinGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastInterfaceJoinGroup {
		return vs[0].([]RouterMulticastInterfaceJoinGroup)[vs[1].(int)]
	}).(RouterMulticastInterfaceJoinGroupOutput)
}

type RouterMulticastPimSmGlobal struct {
	AcceptRegisterList         *string                               `pulumi:"acceptRegisterList"`
	AcceptSourceList           *string                               `pulumi:"acceptSourceList"`
	BsrAllowQuickRefresh       *string                               `pulumi:"bsrAllowQuickRefresh"`
	BsrCandidate               *string                               `pulumi:"bsrCandidate"`
	BsrHash                    *int                                  `pulumi:"bsrHash"`
	BsrInterface               *string                               `pulumi:"bsrInterface"`
	BsrPriority                *int                                  `pulumi:"bsrPriority"`
	CiscoCrpPrefix             *string                               `pulumi:"ciscoCrpPrefix"`
	CiscoIgnoreRpSetPriority   *string                               `pulumi:"ciscoIgnoreRpSetPriority"`
	CiscoRegisterChecksum      *string                               `pulumi:"ciscoRegisterChecksum"`
	CiscoRegisterChecksumGroup *string                               `pulumi:"ciscoRegisterChecksumGroup"`
	JoinPruneHoldtime          *int                                  `pulumi:"joinPruneHoldtime"`
	MessageInterval            *int                                  `pulumi:"messageInterval"`
	NullRegisterRetries        *int                                  `pulumi:"nullRegisterRetries"`
	PimUseSdwan                *string                               `pulumi:"pimUseSdwan"`
	RegisterRateLimit          *int                                  `pulumi:"registerRateLimit"`
	RegisterRpReachability     *string                               `pulumi:"registerRpReachability"`
	RegisterSource             *string                               `pulumi:"registerSource"`
	RegisterSourceInterface    *string                               `pulumi:"registerSourceInterface"`
	RegisterSourceIp           *string                               `pulumi:"registerSourceIp"`
	RegisterSupression         *int                                  `pulumi:"registerSupression"`
	RpAddresses                []RouterMulticastPimSmGlobalRpAddress `pulumi:"rpAddresses"`
	RpRegisterKeepalive        *int                                  `pulumi:"rpRegisterKeepalive"`
	SptThreshold               *string                               `pulumi:"sptThreshold"`
	SptThresholdGroup          *string                               `pulumi:"sptThresholdGroup"`
	Ssm                        *string                               `pulumi:"ssm"`
	SsmRange                   *string                               `pulumi:"ssmRange"`
}

// RouterMulticastPimSmGlobalInput is an input type that accepts RouterMulticastPimSmGlobalArgs and RouterMulticastPimSmGlobalOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalInput` via:
//
//	RouterMulticastPimSmGlobalArgs{...}
type RouterMulticastPimSmGlobalInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput
	ToRouterMulticastPimSmGlobalOutputWithContext(context.Context) RouterMulticastPimSmGlobalOutput
}

type RouterMulticastPimSmGlobalArgs struct {
	AcceptRegisterList         pulumi.StringPtrInput                         `pulumi:"acceptRegisterList"`
	AcceptSourceList           pulumi.StringPtrInput                         `pulumi:"acceptSourceList"`
	BsrAllowQuickRefresh       pulumi.StringPtrInput                         `pulumi:"bsrAllowQuickRefresh"`
	BsrCandidate               pulumi.StringPtrInput                         `pulumi:"bsrCandidate"`
	BsrHash                    pulumi.IntPtrInput                            `pulumi:"bsrHash"`
	BsrInterface               pulumi.StringPtrInput                         `pulumi:"bsrInterface"`
	BsrPriority                pulumi.IntPtrInput                            `pulumi:"bsrPriority"`
	CiscoCrpPrefix             pulumi.StringPtrInput                         `pulumi:"ciscoCrpPrefix"`
	CiscoIgnoreRpSetPriority   pulumi.StringPtrInput                         `pulumi:"ciscoIgnoreRpSetPriority"`
	CiscoRegisterChecksum      pulumi.StringPtrInput                         `pulumi:"ciscoRegisterChecksum"`
	CiscoRegisterChecksumGroup pulumi.StringPtrInput                         `pulumi:"ciscoRegisterChecksumGroup"`
	JoinPruneHoldtime          pulumi.IntPtrInput                            `pulumi:"joinPruneHoldtime"`
	MessageInterval            pulumi.IntPtrInput                            `pulumi:"messageInterval"`
	NullRegisterRetries        pulumi.IntPtrInput                            `pulumi:"nullRegisterRetries"`
	PimUseSdwan                pulumi.StringPtrInput                         `pulumi:"pimUseSdwan"`
	RegisterRateLimit          pulumi.IntPtrInput                            `pulumi:"registerRateLimit"`
	RegisterRpReachability     pulumi.StringPtrInput                         `pulumi:"registerRpReachability"`
	RegisterSource             pulumi.StringPtrInput                         `pulumi:"registerSource"`
	RegisterSourceInterface    pulumi.StringPtrInput                         `pulumi:"registerSourceInterface"`
	RegisterSourceIp           pulumi.StringPtrInput                         `pulumi:"registerSourceIp"`
	RegisterSupression         pulumi.IntPtrInput                            `pulumi:"registerSupression"`
	RpAddresses                RouterMulticastPimSmGlobalRpAddressArrayInput `pulumi:"rpAddresses"`
	RpRegisterKeepalive        pulumi.IntPtrInput                            `pulumi:"rpRegisterKeepalive"`
	SptThreshold               pulumi.StringPtrInput                         `pulumi:"sptThreshold"`
	SptThresholdGroup          pulumi.StringPtrInput                         `pulumi:"sptThresholdGroup"`
	Ssm                        pulumi.StringPtrInput                         `pulumi:"ssm"`
	SsmRange                   pulumi.StringPtrInput                         `pulumi:"ssmRange"`
}

func (RouterMulticastPimSmGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput {
	return i.ToRouterMulticastPimSmGlobalOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalOutput)
}

func (i RouterMulticastPimSmGlobalArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastPimSmGlobal] {
	return pulumix.Output[RouterMulticastPimSmGlobal]{
		OutputState: i.ToRouterMulticastPimSmGlobalOutputWithContext(ctx).OutputState,
	}
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return i.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalArgs) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalOutput).ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx)
}

// RouterMulticastPimSmGlobalPtrInput is an input type that accepts RouterMulticastPimSmGlobalArgs, RouterMulticastPimSmGlobalPtr and RouterMulticastPimSmGlobalPtrOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalPtrInput` via:
//
//	        RouterMulticastPimSmGlobalArgs{...}
//
//	or:
//
//	        nil
type RouterMulticastPimSmGlobalPtrInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput
	ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Context) RouterMulticastPimSmGlobalPtrOutput
}

type routerMulticastPimSmGlobalPtrType RouterMulticastPimSmGlobalArgs

func RouterMulticastPimSmGlobalPtr(v *RouterMulticastPimSmGlobalArgs) RouterMulticastPimSmGlobalPtrInput {
	return (*routerMulticastPimSmGlobalPtrType)(v)
}

func (*routerMulticastPimSmGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (i *routerMulticastPimSmGlobalPtrType) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return i.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (i *routerMulticastPimSmGlobalPtrType) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalPtrOutput)
}

func (i *routerMulticastPimSmGlobalPtrType) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticastPimSmGlobal] {
	return pulumix.Output[*RouterMulticastPimSmGlobal]{
		OutputState: i.ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastPimSmGlobalOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalOutput() RouterMulticastPimSmGlobalOutput {
	return o
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalOutput {
	return o
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return o.ToRouterMulticastPimSmGlobalPtrOutputWithContext(context.Background())
}

func (o RouterMulticastPimSmGlobalOutput) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterMulticastPimSmGlobal) *RouterMulticastPimSmGlobal {
		return &v
	}).(RouterMulticastPimSmGlobalPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastPimSmGlobal] {
	return pulumix.Output[RouterMulticastPimSmGlobal]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastPimSmGlobalOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.AcceptRegisterList }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.AcceptSourceList }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrAllowQuickRefresh }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrCandidate }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.BsrHash }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.BsrInterface }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.BsrPriority }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoCrpPrefix }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoIgnoreRpSetPriority }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoRegisterChecksum }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.CiscoRegisterChecksumGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.JoinPruneHoldtime }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.MessageInterval }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.NullRegisterRetries }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) PimUseSdwan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.PimUseSdwan }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RegisterRateLimit }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterRpReachability }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSource }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSourceInterface }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.RegisterSourceIp }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RegisterSupression }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RpAddresses() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) []RouterMulticastPimSmGlobalRpAddress { return v.RpAddresses }).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

func (o RouterMulticastPimSmGlobalOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *int { return v.RpRegisterKeepalive }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SptThreshold }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SptThresholdGroup }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.Ssm }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobal) *string { return v.SsmRange }).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalPtrOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterMulticastPimSmGlobal)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalPtrOutput) ToRouterMulticastPimSmGlobalPtrOutput() RouterMulticastPimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticastPimSmGlobalPtrOutput) ToRouterMulticastPimSmGlobalPtrOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalPtrOutput {
	return o
}

func (o RouterMulticastPimSmGlobalPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RouterMulticastPimSmGlobal] {
	return pulumix.Output[*RouterMulticastPimSmGlobal]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastPimSmGlobalPtrOutput) Elem() RouterMulticastPimSmGlobalOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) RouterMulticastPimSmGlobal {
		if v != nil {
			return *v
		}
		var ret RouterMulticastPimSmGlobal
		return ret
	}).(RouterMulticastPimSmGlobalOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) AcceptRegisterList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptRegisterList
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) AcceptSourceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.AcceptSourceList
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) BsrAllowQuickRefresh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrAllowQuickRefresh
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrCandidate
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) BsrHash() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrHash
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) BsrInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.BsrInterface
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) BsrPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.BsrPriority
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) CiscoCrpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoCrpPrefix
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) CiscoIgnoreRpSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoIgnoreRpSetPriority
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) CiscoRegisterChecksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksum
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) CiscoRegisterChecksumGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CiscoRegisterChecksumGroup
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) JoinPruneHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.JoinPruneHoldtime
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) MessageInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.MessageInterval
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) NullRegisterRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.NullRegisterRetries
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) PimUseSdwan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.PimUseSdwan
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterRateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterRateLimit
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterRpReachability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterRpReachability
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSource
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceInterface
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RegisterSourceIp
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RegisterSupression() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RegisterSupression
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RpAddresses() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) []RouterMulticastPimSmGlobalRpAddress {
		if v == nil {
			return nil
		}
		return v.RpAddresses
	}).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) RpRegisterKeepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *int {
		if v == nil {
			return nil
		}
		return v.RpRegisterKeepalive
	}).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThreshold
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) SptThresholdGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SptThresholdGroup
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Ssm
	}).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalPtrOutput) SsmRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterMulticastPimSmGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SsmRange
	}).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalRpAddress struct {
	Group     *string `pulumi:"group"`
	Id        *int    `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
}

// RouterMulticastPimSmGlobalRpAddressInput is an input type that accepts RouterMulticastPimSmGlobalRpAddressArgs and RouterMulticastPimSmGlobalRpAddressOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalRpAddressInput` via:
//
//	RouterMulticastPimSmGlobalRpAddressArgs{...}
type RouterMulticastPimSmGlobalRpAddressInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput
	ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Context) RouterMulticastPimSmGlobalRpAddressOutput
}

type RouterMulticastPimSmGlobalRpAddressArgs struct {
	Group     pulumi.StringPtrInput `pulumi:"group"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (RouterMulticastPimSmGlobalRpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalRpAddressArgs) ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput {
	return i.ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalRpAddressArgs) ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalRpAddressOutput)
}

func (i RouterMulticastPimSmGlobalRpAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastPimSmGlobalRpAddress] {
	return pulumix.Output[RouterMulticastPimSmGlobalRpAddress]{
		OutputState: i.ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterMulticastPimSmGlobalRpAddressArrayInput is an input type that accepts RouterMulticastPimSmGlobalRpAddressArray and RouterMulticastPimSmGlobalRpAddressArrayOutput values.
// You can construct a concrete instance of `RouterMulticastPimSmGlobalRpAddressArrayInput` via:
//
//	RouterMulticastPimSmGlobalRpAddressArray{ RouterMulticastPimSmGlobalRpAddressArgs{...} }
type RouterMulticastPimSmGlobalRpAddressArrayInput interface {
	pulumi.Input

	ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput
	ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput
}

type RouterMulticastPimSmGlobalRpAddressArray []RouterMulticastPimSmGlobalRpAddressInput

func (RouterMulticastPimSmGlobalRpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (i RouterMulticastPimSmGlobalRpAddressArray) ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return i.ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(context.Background())
}

func (i RouterMulticastPimSmGlobalRpAddressArray) ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterMulticastPimSmGlobalRpAddressArrayOutput)
}

func (i RouterMulticastPimSmGlobalRpAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastPimSmGlobalRpAddress] {
	return pulumix.Output[[]RouterMulticastPimSmGlobalRpAddress]{
		OutputState: i.ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterMulticastPimSmGlobalRpAddressOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalRpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) ToRouterMulticastPimSmGlobalRpAddressOutput() RouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) ToRouterMulticastPimSmGlobalRpAddressOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterMulticastPimSmGlobalRpAddress] {
	return pulumix.Output[RouterMulticastPimSmGlobalRpAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterMulticastPimSmGlobalRpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterMulticastPimSmGlobalRpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type RouterMulticastPimSmGlobalRpAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterMulticastPimSmGlobalRpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterMulticastPimSmGlobalRpAddress)(nil)).Elem()
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) ToRouterMulticastPimSmGlobalRpAddressArrayOutput() RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) ToRouterMulticastPimSmGlobalRpAddressArrayOutputWithContext(ctx context.Context) RouterMulticastPimSmGlobalRpAddressArrayOutput {
	return o
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterMulticastPimSmGlobalRpAddress] {
	return pulumix.Output[[]RouterMulticastPimSmGlobalRpAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterMulticastPimSmGlobalRpAddressArrayOutput) Index(i pulumi.IntInput) RouterMulticastPimSmGlobalRpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterMulticastPimSmGlobalRpAddress {
		return vs[0].([]RouterMulticastPimSmGlobalRpAddress)[vs[1].(int)]
	}).(RouterMulticastPimSmGlobalRpAddressOutput)
}

type RouterOspf6Area struct {
	Authentication                            *string                      `pulumi:"authentication"`
	DefaultCost                               *int                         `pulumi:"defaultCost"`
	Id                                        *string                      `pulumi:"id"`
	IpsecAuthAlg                              *string                      `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg                               *string                      `pulumi:"ipsecEncAlg"`
	IpsecKeys                                 []RouterOspf6AreaIpsecKey    `pulumi:"ipsecKeys"`
	KeyRolloverInterval                       *int                         `pulumi:"keyRolloverInterval"`
	NssaDefaultInformationOriginate           *string                      `pulumi:"nssaDefaultInformationOriginate"`
	NssaDefaultInformationOriginateMetric     *int                         `pulumi:"nssaDefaultInformationOriginateMetric"`
	NssaDefaultInformationOriginateMetricType *string                      `pulumi:"nssaDefaultInformationOriginateMetricType"`
	NssaRedistribution                        *string                      `pulumi:"nssaRedistribution"`
	NssaTranslatorRole                        *string                      `pulumi:"nssaTranslatorRole"`
	Ranges                                    []RouterOspf6AreaRange       `pulumi:"ranges"`
	StubType                                  *string                      `pulumi:"stubType"`
	Type                                      *string                      `pulumi:"type"`
	VirtualLinks                              []RouterOspf6AreaVirtualLink `pulumi:"virtualLinks"`
}

// RouterOspf6AreaInput is an input type that accepts RouterOspf6AreaArgs and RouterOspf6AreaOutput values.
// You can construct a concrete instance of `RouterOspf6AreaInput` via:
//
//	RouterOspf6AreaArgs{...}
type RouterOspf6AreaInput interface {
	pulumi.Input

	ToRouterOspf6AreaOutput() RouterOspf6AreaOutput
	ToRouterOspf6AreaOutputWithContext(context.Context) RouterOspf6AreaOutput
}

type RouterOspf6AreaArgs struct {
	Authentication                            pulumi.StringPtrInput                `pulumi:"authentication"`
	DefaultCost                               pulumi.IntPtrInput                   `pulumi:"defaultCost"`
	Id                                        pulumi.StringPtrInput                `pulumi:"id"`
	IpsecAuthAlg                              pulumi.StringPtrInput                `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg                               pulumi.StringPtrInput                `pulumi:"ipsecEncAlg"`
	IpsecKeys                                 RouterOspf6AreaIpsecKeyArrayInput    `pulumi:"ipsecKeys"`
	KeyRolloverInterval                       pulumi.IntPtrInput                   `pulumi:"keyRolloverInterval"`
	NssaDefaultInformationOriginate           pulumi.StringPtrInput                `pulumi:"nssaDefaultInformationOriginate"`
	NssaDefaultInformationOriginateMetric     pulumi.IntPtrInput                   `pulumi:"nssaDefaultInformationOriginateMetric"`
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput                `pulumi:"nssaDefaultInformationOriginateMetricType"`
	NssaRedistribution                        pulumi.StringPtrInput                `pulumi:"nssaRedistribution"`
	NssaTranslatorRole                        pulumi.StringPtrInput                `pulumi:"nssaTranslatorRole"`
	Ranges                                    RouterOspf6AreaRangeArrayInput       `pulumi:"ranges"`
	StubType                                  pulumi.StringPtrInput                `pulumi:"stubType"`
	Type                                      pulumi.StringPtrInput                `pulumi:"type"`
	VirtualLinks                              RouterOspf6AreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (RouterOspf6AreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Area)(nil)).Elem()
}

func (i RouterOspf6AreaArgs) ToRouterOspf6AreaOutput() RouterOspf6AreaOutput {
	return i.ToRouterOspf6AreaOutputWithContext(context.Background())
}

func (i RouterOspf6AreaArgs) ToRouterOspf6AreaOutputWithContext(ctx context.Context) RouterOspf6AreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaOutput)
}

func (i RouterOspf6AreaArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Area] {
	return pulumix.Output[RouterOspf6Area]{
		OutputState: i.ToRouterOspf6AreaOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6AreaArrayInput is an input type that accepts RouterOspf6AreaArray and RouterOspf6AreaArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaArrayInput` via:
//
//	RouterOspf6AreaArray{ RouterOspf6AreaArgs{...} }
type RouterOspf6AreaArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput
	ToRouterOspf6AreaArrayOutputWithContext(context.Context) RouterOspf6AreaArrayOutput
}

type RouterOspf6AreaArray []RouterOspf6AreaInput

func (RouterOspf6AreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Area)(nil)).Elem()
}

func (i RouterOspf6AreaArray) ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput {
	return i.ToRouterOspf6AreaArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaArray) ToRouterOspf6AreaArrayOutputWithContext(ctx context.Context) RouterOspf6AreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaArrayOutput)
}

func (i RouterOspf6AreaArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Area] {
	return pulumix.Output[[]RouterOspf6Area]{
		OutputState: i.ToRouterOspf6AreaArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6AreaOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Area)(nil)).Elem()
}

func (o RouterOspf6AreaOutput) ToRouterOspf6AreaOutput() RouterOspf6AreaOutput {
	return o
}

func (o RouterOspf6AreaOutput) ToRouterOspf6AreaOutputWithContext(ctx context.Context) RouterOspf6AreaOutput {
	return o
}

func (o RouterOspf6AreaOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Area] {
	return pulumix.Output[RouterOspf6Area]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) IpsecKeys() RouterOspf6AreaIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaIpsecKey { return v.IpsecKeys }).(RouterOspf6AreaIpsecKeyArrayOutput)
}

func (o RouterOspf6AreaOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) Ranges() RouterOspf6AreaRangeArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaRange { return v.Ranges }).(RouterOspf6AreaRangeArrayOutput)
}

func (o RouterOspf6AreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Area) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaOutput) VirtualLinks() RouterOspf6AreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v RouterOspf6Area) []RouterOspf6AreaVirtualLink { return v.VirtualLinks }).(RouterOspf6AreaVirtualLinkArrayOutput)
}

type RouterOspf6AreaArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Area)(nil)).Elem()
}

func (o RouterOspf6AreaArrayOutput) ToRouterOspf6AreaArrayOutput() RouterOspf6AreaArrayOutput {
	return o
}

func (o RouterOspf6AreaArrayOutput) ToRouterOspf6AreaArrayOutputWithContext(ctx context.Context) RouterOspf6AreaArrayOutput {
	return o
}

func (o RouterOspf6AreaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Area] {
	return pulumix.Output[[]RouterOspf6Area]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Area {
		return vs[0].([]RouterOspf6Area)[vs[1].(int)]
	}).(RouterOspf6AreaOutput)
}

type RouterOspf6AreaIpsecKey struct {
	AuthKey *string `pulumi:"authKey"`
	EncKey  *string `pulumi:"encKey"`
	Spi     *int    `pulumi:"spi"`
}

// RouterOspf6AreaIpsecKeyInput is an input type that accepts RouterOspf6AreaIpsecKeyArgs and RouterOspf6AreaIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6AreaIpsecKeyInput` via:
//
//	RouterOspf6AreaIpsecKeyArgs{...}
type RouterOspf6AreaIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput
	ToRouterOspf6AreaIpsecKeyOutputWithContext(context.Context) RouterOspf6AreaIpsecKeyOutput
}

type RouterOspf6AreaIpsecKeyArgs struct {
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	EncKey  pulumi.StringPtrInput `pulumi:"encKey"`
	Spi     pulumi.IntPtrInput    `pulumi:"spi"`
}

func (RouterOspf6AreaIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaIpsecKeyArgs) ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput {
	return i.ToRouterOspf6AreaIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6AreaIpsecKeyArgs) ToRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaIpsecKeyOutput)
}

func (i RouterOspf6AreaIpsecKeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaIpsecKey] {
	return pulumix.Output[RouterOspf6AreaIpsecKey]{
		OutputState: i.ToRouterOspf6AreaIpsecKeyOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6AreaIpsecKeyArrayInput is an input type that accepts RouterOspf6AreaIpsecKeyArray and RouterOspf6AreaIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaIpsecKeyArrayInput` via:
//
//	RouterOspf6AreaIpsecKeyArray{ RouterOspf6AreaIpsecKeyArgs{...} }
type RouterOspf6AreaIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput
	ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6AreaIpsecKeyArrayOutput
}

type RouterOspf6AreaIpsecKeyArray []RouterOspf6AreaIpsecKeyInput

func (RouterOspf6AreaIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaIpsecKeyArray) ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput {
	return i.ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaIpsecKeyArray) ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaIpsecKeyArrayOutput)
}

func (i RouterOspf6AreaIpsecKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaIpsecKey] {
	return pulumix.Output[[]RouterOspf6AreaIpsecKey]{
		OutputState: i.ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6AreaIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaIpsecKeyOutput) ToRouterOspf6AreaIpsecKeyOutput() RouterOspf6AreaIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyOutput) ToRouterOspf6AreaIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaIpsecKey] {
	return pulumix.Output[RouterOspf6AreaIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) ToRouterOspf6AreaIpsecKeyArrayOutput() RouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) ToRouterOspf6AreaIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaIpsecKey] {
	return pulumix.Output[[]RouterOspf6AreaIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaIpsecKey {
		return vs[0].([]RouterOspf6AreaIpsecKey)[vs[1].(int)]
	}).(RouterOspf6AreaIpsecKeyOutput)
}

type RouterOspf6AreaRange struct {
	Advertise *string `pulumi:"advertise"`
	Id        *int    `pulumi:"id"`
	Prefix6   *string `pulumi:"prefix6"`
}

// RouterOspf6AreaRangeInput is an input type that accepts RouterOspf6AreaRangeArgs and RouterOspf6AreaRangeOutput values.
// You can construct a concrete instance of `RouterOspf6AreaRangeInput` via:
//
//	RouterOspf6AreaRangeArgs{...}
type RouterOspf6AreaRangeInput interface {
	pulumi.Input

	ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput
	ToRouterOspf6AreaRangeOutputWithContext(context.Context) RouterOspf6AreaRangeOutput
}

type RouterOspf6AreaRangeArgs struct {
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6   pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterOspf6AreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaRange)(nil)).Elem()
}

func (i RouterOspf6AreaRangeArgs) ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput {
	return i.ToRouterOspf6AreaRangeOutputWithContext(context.Background())
}

func (i RouterOspf6AreaRangeArgs) ToRouterOspf6AreaRangeOutputWithContext(ctx context.Context) RouterOspf6AreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaRangeOutput)
}

func (i RouterOspf6AreaRangeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaRange] {
	return pulumix.Output[RouterOspf6AreaRange]{
		OutputState: i.ToRouterOspf6AreaRangeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6AreaRangeArrayInput is an input type that accepts RouterOspf6AreaRangeArray and RouterOspf6AreaRangeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaRangeArrayInput` via:
//
//	RouterOspf6AreaRangeArray{ RouterOspf6AreaRangeArgs{...} }
type RouterOspf6AreaRangeArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput
	ToRouterOspf6AreaRangeArrayOutputWithContext(context.Context) RouterOspf6AreaRangeArrayOutput
}

type RouterOspf6AreaRangeArray []RouterOspf6AreaRangeInput

func (RouterOspf6AreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaRange)(nil)).Elem()
}

func (i RouterOspf6AreaRangeArray) ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput {
	return i.ToRouterOspf6AreaRangeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaRangeArray) ToRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) RouterOspf6AreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaRangeArrayOutput)
}

func (i RouterOspf6AreaRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaRange] {
	return pulumix.Output[[]RouterOspf6AreaRange]{
		OutputState: i.ToRouterOspf6AreaRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6AreaRangeOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaRange)(nil)).Elem()
}

func (o RouterOspf6AreaRangeOutput) ToRouterOspf6AreaRangeOutput() RouterOspf6AreaRangeOutput {
	return o
}

func (o RouterOspf6AreaRangeOutput) ToRouterOspf6AreaRangeOutputWithContext(ctx context.Context) RouterOspf6AreaRangeOutput {
	return o
}

func (o RouterOspf6AreaRangeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaRange] {
	return pulumix.Output[RouterOspf6AreaRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaRangeOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaRange) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterOspf6AreaRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaRange)(nil)).Elem()
}

func (o RouterOspf6AreaRangeArrayOutput) ToRouterOspf6AreaRangeArrayOutput() RouterOspf6AreaRangeArrayOutput {
	return o
}

func (o RouterOspf6AreaRangeArrayOutput) ToRouterOspf6AreaRangeArrayOutputWithContext(ctx context.Context) RouterOspf6AreaRangeArrayOutput {
	return o
}

func (o RouterOspf6AreaRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaRange] {
	return pulumix.Output[[]RouterOspf6AreaRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaRangeArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaRange {
		return vs[0].([]RouterOspf6AreaRange)[vs[1].(int)]
	}).(RouterOspf6AreaRangeOutput)
}

type RouterOspf6AreaVirtualLink struct {
	Authentication      *string                              `pulumi:"authentication"`
	DeadInterval        *int                                 `pulumi:"deadInterval"`
	HelloInterval       *int                                 `pulumi:"helloInterval"`
	IpsecAuthAlg        *string                              `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg         *string                              `pulumi:"ipsecEncAlg"`
	IpsecKeys           []RouterOspf6AreaVirtualLinkIpsecKey `pulumi:"ipsecKeys"`
	KeyRolloverInterval *int                                 `pulumi:"keyRolloverInterval"`
	Name                *string                              `pulumi:"name"`
	Peer                *string                              `pulumi:"peer"`
	RetransmitInterval  *int                                 `pulumi:"retransmitInterval"`
	TransmitDelay       *int                                 `pulumi:"transmitDelay"`
}

// RouterOspf6AreaVirtualLinkInput is an input type that accepts RouterOspf6AreaVirtualLinkArgs and RouterOspf6AreaVirtualLinkOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkInput` via:
//
//	RouterOspf6AreaVirtualLinkArgs{...}
type RouterOspf6AreaVirtualLinkInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput
	ToRouterOspf6AreaVirtualLinkOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkOutput
}

type RouterOspf6AreaVirtualLinkArgs struct {
	Authentication      pulumi.StringPtrInput                        `pulumi:"authentication"`
	DeadInterval        pulumi.IntPtrInput                           `pulumi:"deadInterval"`
	HelloInterval       pulumi.IntPtrInput                           `pulumi:"helloInterval"`
	IpsecAuthAlg        pulumi.StringPtrInput                        `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg         pulumi.StringPtrInput                        `pulumi:"ipsecEncAlg"`
	IpsecKeys           RouterOspf6AreaVirtualLinkIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	KeyRolloverInterval pulumi.IntPtrInput                           `pulumi:"keyRolloverInterval"`
	Name                pulumi.StringPtrInput                        `pulumi:"name"`
	Peer                pulumi.StringPtrInput                        `pulumi:"peer"`
	RetransmitInterval  pulumi.IntPtrInput                           `pulumi:"retransmitInterval"`
	TransmitDelay       pulumi.IntPtrInput                           `pulumi:"transmitDelay"`
}

func (RouterOspf6AreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkArgs) ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput {
	return i.ToRouterOspf6AreaVirtualLinkOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkArgs) ToRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkOutput)
}

func (i RouterOspf6AreaVirtualLinkArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaVirtualLink] {
	return pulumix.Output[RouterOspf6AreaVirtualLink]{
		OutputState: i.ToRouterOspf6AreaVirtualLinkOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6AreaVirtualLinkArrayInput is an input type that accepts RouterOspf6AreaVirtualLinkArray and RouterOspf6AreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkArrayInput` via:
//
//	RouterOspf6AreaVirtualLinkArray{ RouterOspf6AreaVirtualLinkArgs{...} }
type RouterOspf6AreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput
	ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkArrayOutput
}

type RouterOspf6AreaVirtualLinkArray []RouterOspf6AreaVirtualLinkInput

func (RouterOspf6AreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkArray) ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput {
	return i.ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkArray) ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkArrayOutput)
}

func (i RouterOspf6AreaVirtualLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaVirtualLink] {
	return pulumix.Output[[]RouterOspf6AreaVirtualLink]{
		OutputState: i.ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6AreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkOutput) ToRouterOspf6AreaVirtualLinkOutput() RouterOspf6AreaVirtualLinkOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkOutput) ToRouterOspf6AreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaVirtualLink] {
	return pulumix.Output[RouterOspf6AreaVirtualLink]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) IpsecKeys() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) []RouterOspf6AreaVirtualLinkIpsecKey { return v.IpsecKeys }).(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLink)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) ToRouterOspf6AreaVirtualLinkArrayOutput() RouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) ToRouterOspf6AreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaVirtualLink] {
	return pulumix.Output[[]RouterOspf6AreaVirtualLink]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaVirtualLink {
		return vs[0].([]RouterOspf6AreaVirtualLink)[vs[1].(int)]
	}).(RouterOspf6AreaVirtualLinkOutput)
}

type RouterOspf6AreaVirtualLinkIpsecKey struct {
	AuthKey *string `pulumi:"authKey"`
	EncKey  *string `pulumi:"encKey"`
	Spi     *int    `pulumi:"spi"`
}

// RouterOspf6AreaVirtualLinkIpsecKeyInput is an input type that accepts RouterOspf6AreaVirtualLinkIpsecKeyArgs and RouterOspf6AreaVirtualLinkIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkIpsecKeyInput` via:
//
//	RouterOspf6AreaVirtualLinkIpsecKeyArgs{...}
type RouterOspf6AreaVirtualLinkIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput
	ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput
}

type RouterOspf6AreaVirtualLinkIpsecKeyArgs struct {
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	EncKey  pulumi.StringPtrInput `pulumi:"encKey"`
	Spi     pulumi.IntPtrInput    `pulumi:"spi"`
}

func (RouterOspf6AreaVirtualLinkIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArgs) ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return i.ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArgs) ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaVirtualLinkIpsecKey] {
	return pulumix.Output[RouterOspf6AreaVirtualLinkIpsecKey]{
		OutputState: i.ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6AreaVirtualLinkIpsecKeyArrayInput is an input type that accepts RouterOspf6AreaVirtualLinkIpsecKeyArray and RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6AreaVirtualLinkIpsecKeyArrayInput` via:
//
//	RouterOspf6AreaVirtualLinkIpsecKeyArray{ RouterOspf6AreaVirtualLinkIpsecKeyArgs{...} }
type RouterOspf6AreaVirtualLinkIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
	ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput
}

type RouterOspf6AreaVirtualLinkIpsecKeyArray []RouterOspf6AreaVirtualLinkIpsecKeyInput

func (RouterOspf6AreaVirtualLinkIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArray) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return i.ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArray) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput)
}

func (i RouterOspf6AreaVirtualLinkIpsecKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaVirtualLinkIpsecKey] {
	return pulumix.Output[[]RouterOspf6AreaVirtualLinkIpsecKey]{
		OutputState: i.ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6AreaVirtualLinkIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyOutput() RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6AreaVirtualLinkIpsecKey] {
	return pulumix.Output[RouterOspf6AreaVirtualLinkIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6AreaVirtualLinkIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6AreaVirtualLinkIpsecKey)(nil)).Elem()
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutput() RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToRouterOspf6AreaVirtualLinkIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6AreaVirtualLinkIpsecKey] {
	return pulumix.Output[[]RouterOspf6AreaVirtualLinkIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6AreaVirtualLinkIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6AreaVirtualLinkIpsecKey {
		return vs[0].([]RouterOspf6AreaVirtualLinkIpsecKey)[vs[1].(int)]
	}).(RouterOspf6AreaVirtualLinkIpsecKeyOutput)
}

type RouterOspf6Ospf6InterfaceType struct {
	AreaId              *string                             `pulumi:"areaId"`
	Authentication      *string                             `pulumi:"authentication"`
	Bfd                 *string                             `pulumi:"bfd"`
	Cost                *int                                `pulumi:"cost"`
	DeadInterval        *int                                `pulumi:"deadInterval"`
	HelloInterval       *int                                `pulumi:"helloInterval"`
	Interface           *string                             `pulumi:"interface"`
	IpsecAuthAlg        *string                             `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg         *string                             `pulumi:"ipsecEncAlg"`
	IpsecKeys           []RouterOspf6Ospf6InterfaceIpsecKey `pulumi:"ipsecKeys"`
	KeyRolloverInterval *int                                `pulumi:"keyRolloverInterval"`
	Mtu                 *int                                `pulumi:"mtu"`
	MtuIgnore           *string                             `pulumi:"mtuIgnore"`
	Name                *string                             `pulumi:"name"`
	Neighbors           []RouterOspf6Ospf6InterfaceNeighbor `pulumi:"neighbors"`
	NetworkType         *string                             `pulumi:"networkType"`
	Priority            *int                                `pulumi:"priority"`
	RetransmitInterval  *int                                `pulumi:"retransmitInterval"`
	Status              *string                             `pulumi:"status"`
	TransmitDelay       *int                                `pulumi:"transmitDelay"`
}

// RouterOspf6Ospf6InterfaceTypeInput is an input type that accepts RouterOspf6Ospf6InterfaceTypeArgs and RouterOspf6Ospf6InterfaceTypeOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceTypeInput` via:
//
//	RouterOspf6Ospf6InterfaceTypeArgs{...}
type RouterOspf6Ospf6InterfaceTypeInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput
	ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceTypeOutput
}

type RouterOspf6Ospf6InterfaceTypeArgs struct {
	AreaId              pulumi.StringPtrInput                       `pulumi:"areaId"`
	Authentication      pulumi.StringPtrInput                       `pulumi:"authentication"`
	Bfd                 pulumi.StringPtrInput                       `pulumi:"bfd"`
	Cost                pulumi.IntPtrInput                          `pulumi:"cost"`
	DeadInterval        pulumi.IntPtrInput                          `pulumi:"deadInterval"`
	HelloInterval       pulumi.IntPtrInput                          `pulumi:"helloInterval"`
	Interface           pulumi.StringPtrInput                       `pulumi:"interface"`
	IpsecAuthAlg        pulumi.StringPtrInput                       `pulumi:"ipsecAuthAlg"`
	IpsecEncAlg         pulumi.StringPtrInput                       `pulumi:"ipsecEncAlg"`
	IpsecKeys           RouterOspf6Ospf6InterfaceIpsecKeyArrayInput `pulumi:"ipsecKeys"`
	KeyRolloverInterval pulumi.IntPtrInput                          `pulumi:"keyRolloverInterval"`
	Mtu                 pulumi.IntPtrInput                          `pulumi:"mtu"`
	MtuIgnore           pulumi.StringPtrInput                       `pulumi:"mtuIgnore"`
	Name                pulumi.StringPtrInput                       `pulumi:"name"`
	Neighbors           RouterOspf6Ospf6InterfaceNeighborArrayInput `pulumi:"neighbors"`
	NetworkType         pulumi.StringPtrInput                       `pulumi:"networkType"`
	Priority            pulumi.IntPtrInput                          `pulumi:"priority"`
	RetransmitInterval  pulumi.IntPtrInput                          `pulumi:"retransmitInterval"`
	Status              pulumi.StringPtrInput                       `pulumi:"status"`
	TransmitDelay       pulumi.IntPtrInput                          `pulumi:"transmitDelay"`
}

func (RouterOspf6Ospf6InterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceTypeArgs) ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput {
	return i.ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceTypeArgs) ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceTypeOutput)
}

func (i RouterOspf6Ospf6InterfaceTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceType] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceType]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6Ospf6InterfaceTypeArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceTypeArray and RouterOspf6Ospf6InterfaceTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceTypeArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceTypeArray{ RouterOspf6Ospf6InterfaceTypeArgs{...} }
type RouterOspf6Ospf6InterfaceTypeArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput
	ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput
}

type RouterOspf6Ospf6InterfaceTypeArray []RouterOspf6Ospf6InterfaceTypeInput

func (RouterOspf6Ospf6InterfaceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceTypeArray) ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceTypeArray) ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceTypeArrayOutput)
}

func (i RouterOspf6Ospf6InterfaceTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceType] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceType]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6Ospf6InterfaceTypeOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) ToRouterOspf6Ospf6InterfaceTypeOutput() RouterOspf6Ospf6InterfaceTypeOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) ToRouterOspf6Ospf6InterfaceTypeOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceType] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) AreaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.AreaId }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecAuthAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.IpsecAuthAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecEncAlg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.IpsecEncAlg }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) IpsecKeys() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) []RouterOspf6Ospf6InterfaceIpsecKey { return v.IpsecKeys }).(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) KeyRolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.KeyRolloverInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Neighbors() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) []RouterOspf6Ospf6InterfaceNeighbor { return v.Neighbors }).(RouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceTypeOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceType) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceType)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) ToRouterOspf6Ospf6InterfaceTypeArrayOutput() RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) ToRouterOspf6Ospf6InterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceTypeArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceType] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceTypeArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceType {
		return vs[0].([]RouterOspf6Ospf6InterfaceType)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceTypeOutput)
}

type RouterOspf6Ospf6InterfaceIpsecKey struct {
	AuthKey *string `pulumi:"authKey"`
	EncKey  *string `pulumi:"encKey"`
	Spi     *int    `pulumi:"spi"`
}

// RouterOspf6Ospf6InterfaceIpsecKeyInput is an input type that accepts RouterOspf6Ospf6InterfaceIpsecKeyArgs and RouterOspf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceIpsecKeyInput` via:
//
//	RouterOspf6Ospf6InterfaceIpsecKeyArgs{...}
type RouterOspf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput
	ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput
}

type RouterOspf6Ospf6InterfaceIpsecKeyArgs struct {
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	EncKey  pulumi.StringPtrInput `pulumi:"encKey"`
	Spi     pulumi.IntPtrInput    `pulumi:"spi"`
}

func (RouterOspf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArgs) ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArgs) ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceIpsecKey]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceIpsecKeyArray and RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceIpsecKeyArray{ RouterOspf6Ospf6InterfaceIpsecKeyArgs{...} }
type RouterOspf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
	ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput
}

type RouterOspf6Ospf6InterfaceIpsecKeyArray []RouterOspf6Ospf6InterfaceIpsecKeyInput

func (RouterOspf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArray) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArray) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput)
}

func (i RouterOspf6Ospf6InterfaceIpsecKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceIpsecKey]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyOutput() RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutput() RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterOspf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceIpsecKey {
		return vs[0].([]RouterOspf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceIpsecKeyOutput)
}

type RouterOspf6Ospf6InterfaceNeighbor struct {
	Cost         *int    `pulumi:"cost"`
	Ip6          *string `pulumi:"ip6"`
	PollInterval *int    `pulumi:"pollInterval"`
	Priority     *int    `pulumi:"priority"`
}

// RouterOspf6Ospf6InterfaceNeighborInput is an input type that accepts RouterOspf6Ospf6InterfaceNeighborArgs and RouterOspf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceNeighborInput` via:
//
//	RouterOspf6Ospf6InterfaceNeighborArgs{...}
type RouterOspf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput
	ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceNeighborOutput
}

type RouterOspf6Ospf6InterfaceNeighborArgs struct {
	Cost         pulumi.IntPtrInput    `pulumi:"cost"`
	Ip6          pulumi.StringPtrInput `pulumi:"ip6"`
	PollInterval pulumi.IntPtrInput    `pulumi:"pollInterval"`
	Priority     pulumi.IntPtrInput    `pulumi:"priority"`
}

func (RouterOspf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceNeighborArgs) ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput {
	return i.ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceNeighborArgs) ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceNeighborOutput)
}

func (i RouterOspf6Ospf6InterfaceNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceNeighbor]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6Ospf6InterfaceNeighborArrayInput is an input type that accepts RouterOspf6Ospf6InterfaceNeighborArray and RouterOspf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `RouterOspf6Ospf6InterfaceNeighborArrayInput` via:
//
//	RouterOspf6Ospf6InterfaceNeighborArray{ RouterOspf6Ospf6InterfaceNeighborArgs{...} }
type RouterOspf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput
	ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput
}

type RouterOspf6Ospf6InterfaceNeighborArray []RouterOspf6Ospf6InterfaceNeighborInput

func (RouterOspf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i RouterOspf6Ospf6InterfaceNeighborArray) ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i RouterOspf6Ospf6InterfaceNeighborArray) ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6Ospf6InterfaceNeighborArrayOutput)
}

func (i RouterOspf6Ospf6InterfaceNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceNeighbor]{
		OutputState: i.ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) ToRouterOspf6Ospf6InterfaceNeighborOutput() RouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) ToRouterOspf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[RouterOspf6Ospf6InterfaceNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Ospf6InterfaceNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type RouterOspf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) ToRouterOspf6Ospf6InterfaceNeighborArrayOutput() RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) ToRouterOspf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) RouterOspf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[[]RouterOspf6Ospf6InterfaceNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) RouterOspf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Ospf6InterfaceNeighbor {
		return vs[0].([]RouterOspf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(RouterOspf6Ospf6InterfaceNeighborOutput)
}

type RouterOspf6PassiveInterface struct {
	Name *string `pulumi:"name"`
}

// RouterOspf6PassiveInterfaceInput is an input type that accepts RouterOspf6PassiveInterfaceArgs and RouterOspf6PassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterOspf6PassiveInterfaceInput` via:
//
//	RouterOspf6PassiveInterfaceArgs{...}
type RouterOspf6PassiveInterfaceInput interface {
	pulumi.Input

	ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput
	ToRouterOspf6PassiveInterfaceOutputWithContext(context.Context) RouterOspf6PassiveInterfaceOutput
}

type RouterOspf6PassiveInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterOspf6PassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6PassiveInterface)(nil)).Elem()
}

func (i RouterOspf6PassiveInterfaceArgs) ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput {
	return i.ToRouterOspf6PassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterOspf6PassiveInterfaceArgs) ToRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6PassiveInterfaceOutput)
}

func (i RouterOspf6PassiveInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6PassiveInterface] {
	return pulumix.Output[RouterOspf6PassiveInterface]{
		OutputState: i.ToRouterOspf6PassiveInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6PassiveInterfaceArrayInput is an input type that accepts RouterOspf6PassiveInterfaceArray and RouterOspf6PassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterOspf6PassiveInterfaceArrayInput` via:
//
//	RouterOspf6PassiveInterfaceArray{ RouterOspf6PassiveInterfaceArgs{...} }
type RouterOspf6PassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput
	ToRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Context) RouterOspf6PassiveInterfaceArrayOutput
}

type RouterOspf6PassiveInterfaceArray []RouterOspf6PassiveInterfaceInput

func (RouterOspf6PassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6PassiveInterface)(nil)).Elem()
}

func (i RouterOspf6PassiveInterfaceArray) ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput {
	return i.ToRouterOspf6PassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterOspf6PassiveInterfaceArray) ToRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6PassiveInterfaceArrayOutput)
}

func (i RouterOspf6PassiveInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6PassiveInterface] {
	return pulumix.Output[[]RouterOspf6PassiveInterface]{
		OutputState: i.ToRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6PassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterOspf6PassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6PassiveInterface)(nil)).Elem()
}

func (o RouterOspf6PassiveInterfaceOutput) ToRouterOspf6PassiveInterfaceOutput() RouterOspf6PassiveInterfaceOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceOutput) ToRouterOspf6PassiveInterfaceOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6PassiveInterface] {
	return pulumix.Output[RouterOspf6PassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6PassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6PassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterOspf6PassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6PassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6PassiveInterface)(nil)).Elem()
}

func (o RouterOspf6PassiveInterfaceArrayOutput) ToRouterOspf6PassiveInterfaceArrayOutput() RouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceArrayOutput) ToRouterOspf6PassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspf6PassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspf6PassiveInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6PassiveInterface] {
	return pulumix.Output[[]RouterOspf6PassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6PassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterOspf6PassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6PassiveInterface {
		return vs[0].([]RouterOspf6PassiveInterface)[vs[1].(int)]
	}).(RouterOspf6PassiveInterfaceOutput)
}

type RouterOspf6Redistribute struct {
	Metric     *int    `pulumi:"metric"`
	MetricType *string `pulumi:"metricType"`
	Name       *string `pulumi:"name"`
	Routemap   *string `pulumi:"routemap"`
	Status     *string `pulumi:"status"`
}

// RouterOspf6RedistributeInput is an input type that accepts RouterOspf6RedistributeArgs and RouterOspf6RedistributeOutput values.
// You can construct a concrete instance of `RouterOspf6RedistributeInput` via:
//
//	RouterOspf6RedistributeArgs{...}
type RouterOspf6RedistributeInput interface {
	pulumi.Input

	ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput
	ToRouterOspf6RedistributeOutputWithContext(context.Context) RouterOspf6RedistributeOutput
}

type RouterOspf6RedistributeArgs struct {
	Metric     pulumi.IntPtrInput    `pulumi:"metric"`
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Routemap   pulumi.StringPtrInput `pulumi:"routemap"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterOspf6RedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Redistribute)(nil)).Elem()
}

func (i RouterOspf6RedistributeArgs) ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput {
	return i.ToRouterOspf6RedistributeOutputWithContext(context.Background())
}

func (i RouterOspf6RedistributeArgs) ToRouterOspf6RedistributeOutputWithContext(ctx context.Context) RouterOspf6RedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6RedistributeOutput)
}

func (i RouterOspf6RedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Redistribute] {
	return pulumix.Output[RouterOspf6Redistribute]{
		OutputState: i.ToRouterOspf6RedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6RedistributeArrayInput is an input type that accepts RouterOspf6RedistributeArray and RouterOspf6RedistributeArrayOutput values.
// You can construct a concrete instance of `RouterOspf6RedistributeArrayInput` via:
//
//	RouterOspf6RedistributeArray{ RouterOspf6RedistributeArgs{...} }
type RouterOspf6RedistributeArrayInput interface {
	pulumi.Input

	ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput
	ToRouterOspf6RedistributeArrayOutputWithContext(context.Context) RouterOspf6RedistributeArrayOutput
}

type RouterOspf6RedistributeArray []RouterOspf6RedistributeInput

func (RouterOspf6RedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Redistribute)(nil)).Elem()
}

func (i RouterOspf6RedistributeArray) ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput {
	return i.ToRouterOspf6RedistributeArrayOutputWithContext(context.Background())
}

func (i RouterOspf6RedistributeArray) ToRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) RouterOspf6RedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6RedistributeArrayOutput)
}

func (i RouterOspf6RedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Redistribute] {
	return pulumix.Output[[]RouterOspf6Redistribute]{
		OutputState: i.ToRouterOspf6RedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6RedistributeOutput struct{ *pulumi.OutputState }

func (RouterOspf6RedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6Redistribute)(nil)).Elem()
}

func (o RouterOspf6RedistributeOutput) ToRouterOspf6RedistributeOutput() RouterOspf6RedistributeOutput {
	return o
}

func (o RouterOspf6RedistributeOutput) ToRouterOspf6RedistributeOutputWithContext(ctx context.Context) RouterOspf6RedistributeOutput {
	return o
}

func (o RouterOspf6RedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6Redistribute] {
	return pulumix.Output[RouterOspf6Redistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6RedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6RedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6RedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6RedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6RedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6Redistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterOspf6RedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6RedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6Redistribute)(nil)).Elem()
}

func (o RouterOspf6RedistributeArrayOutput) ToRouterOspf6RedistributeArrayOutput() RouterOspf6RedistributeArrayOutput {
	return o
}

func (o RouterOspf6RedistributeArrayOutput) ToRouterOspf6RedistributeArrayOutputWithContext(ctx context.Context) RouterOspf6RedistributeArrayOutput {
	return o
}

func (o RouterOspf6RedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6Redistribute] {
	return pulumix.Output[[]RouterOspf6Redistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6RedistributeArrayOutput) Index(i pulumi.IntInput) RouterOspf6RedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6Redistribute {
		return vs[0].([]RouterOspf6Redistribute)[vs[1].(int)]
	}).(RouterOspf6RedistributeOutput)
}

type RouterOspf6SummaryAddress struct {
	Advertise *string `pulumi:"advertise"`
	Id        *int    `pulumi:"id"`
	Prefix6   *string `pulumi:"prefix6"`
	Tag       *int    `pulumi:"tag"`
}

// RouterOspf6SummaryAddressInput is an input type that accepts RouterOspf6SummaryAddressArgs and RouterOspf6SummaryAddressOutput values.
// You can construct a concrete instance of `RouterOspf6SummaryAddressInput` via:
//
//	RouterOspf6SummaryAddressArgs{...}
type RouterOspf6SummaryAddressInput interface {
	pulumi.Input

	ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput
	ToRouterOspf6SummaryAddressOutputWithContext(context.Context) RouterOspf6SummaryAddressOutput
}

type RouterOspf6SummaryAddressArgs struct {
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6   pulumi.StringPtrInput `pulumi:"prefix6"`
	Tag       pulumi.IntPtrInput    `pulumi:"tag"`
}

func (RouterOspf6SummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6SummaryAddress)(nil)).Elem()
}

func (i RouterOspf6SummaryAddressArgs) ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput {
	return i.ToRouterOspf6SummaryAddressOutputWithContext(context.Background())
}

func (i RouterOspf6SummaryAddressArgs) ToRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6SummaryAddressOutput)
}

func (i RouterOspf6SummaryAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6SummaryAddress] {
	return pulumix.Output[RouterOspf6SummaryAddress]{
		OutputState: i.ToRouterOspf6SummaryAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterOspf6SummaryAddressArrayInput is an input type that accepts RouterOspf6SummaryAddressArray and RouterOspf6SummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterOspf6SummaryAddressArrayInput` via:
//
//	RouterOspf6SummaryAddressArray{ RouterOspf6SummaryAddressArgs{...} }
type RouterOspf6SummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput
	ToRouterOspf6SummaryAddressArrayOutputWithContext(context.Context) RouterOspf6SummaryAddressArrayOutput
}

type RouterOspf6SummaryAddressArray []RouterOspf6SummaryAddressInput

func (RouterOspf6SummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6SummaryAddress)(nil)).Elem()
}

func (i RouterOspf6SummaryAddressArray) ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput {
	return i.ToRouterOspf6SummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterOspf6SummaryAddressArray) ToRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspf6SummaryAddressArrayOutput)
}

func (i RouterOspf6SummaryAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6SummaryAddress] {
	return pulumix.Output[[]RouterOspf6SummaryAddress]{
		OutputState: i.ToRouterOspf6SummaryAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspf6SummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterOspf6SummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspf6SummaryAddress)(nil)).Elem()
}

func (o RouterOspf6SummaryAddressOutput) ToRouterOspf6SummaryAddressOutput() RouterOspf6SummaryAddressOutput {
	return o
}

func (o RouterOspf6SummaryAddressOutput) ToRouterOspf6SummaryAddressOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressOutput {
	return o
}

func (o RouterOspf6SummaryAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspf6SummaryAddress] {
	return pulumix.Output[RouterOspf6SummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6SummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6SummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspf6SummaryAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

func (o RouterOspf6SummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspf6SummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspf6SummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterOspf6SummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspf6SummaryAddress)(nil)).Elem()
}

func (o RouterOspf6SummaryAddressArrayOutput) ToRouterOspf6SummaryAddressArrayOutput() RouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o RouterOspf6SummaryAddressArrayOutput) ToRouterOspf6SummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspf6SummaryAddressArrayOutput {
	return o
}

func (o RouterOspf6SummaryAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspf6SummaryAddress] {
	return pulumix.Output[[]RouterOspf6SummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspf6SummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterOspf6SummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspf6SummaryAddress {
		return vs[0].([]RouterOspf6SummaryAddress)[vs[1].(int)]
	}).(RouterOspf6SummaryAddressOutput)
}

type RouterOspfArea struct {
	Authentication                            *string                     `pulumi:"authentication"`
	Comments                                  *string                     `pulumi:"comments"`
	DefaultCost                               *int                        `pulumi:"defaultCost"`
	FilterLists                               []RouterOspfAreaFilterList  `pulumi:"filterLists"`
	Id                                        *string                     `pulumi:"id"`
	NssaDefaultInformationOriginate           *string                     `pulumi:"nssaDefaultInformationOriginate"`
	NssaDefaultInformationOriginateMetric     *int                        `pulumi:"nssaDefaultInformationOriginateMetric"`
	NssaDefaultInformationOriginateMetricType *string                     `pulumi:"nssaDefaultInformationOriginateMetricType"`
	NssaRedistribution                        *string                     `pulumi:"nssaRedistribution"`
	NssaTranslatorRole                        *string                     `pulumi:"nssaTranslatorRole"`
	Ranges                                    []RouterOspfAreaRange       `pulumi:"ranges"`
	Shortcut                                  *string                     `pulumi:"shortcut"`
	StubType                                  *string                     `pulumi:"stubType"`
	Type                                      *string                     `pulumi:"type"`
	VirtualLinks                              []RouterOspfAreaVirtualLink `pulumi:"virtualLinks"`
}

// RouterOspfAreaInput is an input type that accepts RouterOspfAreaArgs and RouterOspfAreaOutput values.
// You can construct a concrete instance of `RouterOspfAreaInput` via:
//
//	RouterOspfAreaArgs{...}
type RouterOspfAreaInput interface {
	pulumi.Input

	ToRouterOspfAreaOutput() RouterOspfAreaOutput
	ToRouterOspfAreaOutputWithContext(context.Context) RouterOspfAreaOutput
}

type RouterOspfAreaArgs struct {
	Authentication                            pulumi.StringPtrInput               `pulumi:"authentication"`
	Comments                                  pulumi.StringPtrInput               `pulumi:"comments"`
	DefaultCost                               pulumi.IntPtrInput                  `pulumi:"defaultCost"`
	FilterLists                               RouterOspfAreaFilterListArrayInput  `pulumi:"filterLists"`
	Id                                        pulumi.StringPtrInput               `pulumi:"id"`
	NssaDefaultInformationOriginate           pulumi.StringPtrInput               `pulumi:"nssaDefaultInformationOriginate"`
	NssaDefaultInformationOriginateMetric     pulumi.IntPtrInput                  `pulumi:"nssaDefaultInformationOriginateMetric"`
	NssaDefaultInformationOriginateMetricType pulumi.StringPtrInput               `pulumi:"nssaDefaultInformationOriginateMetricType"`
	NssaRedistribution                        pulumi.StringPtrInput               `pulumi:"nssaRedistribution"`
	NssaTranslatorRole                        pulumi.StringPtrInput               `pulumi:"nssaTranslatorRole"`
	Ranges                                    RouterOspfAreaRangeArrayInput       `pulumi:"ranges"`
	Shortcut                                  pulumi.StringPtrInput               `pulumi:"shortcut"`
	StubType                                  pulumi.StringPtrInput               `pulumi:"stubType"`
	Type                                      pulumi.StringPtrInput               `pulumi:"type"`
	VirtualLinks                              RouterOspfAreaVirtualLinkArrayInput `pulumi:"virtualLinks"`
}

func (RouterOspfAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfArea)(nil)).Elem()
}

func (i RouterOspfAreaArgs) ToRouterOspfAreaOutput() RouterOspfAreaOutput {
	return i.ToRouterOspfAreaOutputWithContext(context.Background())
}

func (i RouterOspfAreaArgs) ToRouterOspfAreaOutputWithContext(ctx context.Context) RouterOspfAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaOutput)
}

func (i RouterOspfAreaArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfArea] {
	return pulumix.Output[RouterOspfArea]{
		OutputState: i.ToRouterOspfAreaOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfAreaArrayInput is an input type that accepts RouterOspfAreaArray and RouterOspfAreaArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaArrayInput` via:
//
//	RouterOspfAreaArray{ RouterOspfAreaArgs{...} }
type RouterOspfAreaArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput
	ToRouterOspfAreaArrayOutputWithContext(context.Context) RouterOspfAreaArrayOutput
}

type RouterOspfAreaArray []RouterOspfAreaInput

func (RouterOspfAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfArea)(nil)).Elem()
}

func (i RouterOspfAreaArray) ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput {
	return i.ToRouterOspfAreaArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaArray) ToRouterOspfAreaArrayOutputWithContext(ctx context.Context) RouterOspfAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaArrayOutput)
}

func (i RouterOspfAreaArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfArea] {
	return pulumix.Output[[]RouterOspfArea]{
		OutputState: i.ToRouterOspfAreaArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfAreaOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfArea)(nil)).Elem()
}

func (o RouterOspfAreaOutput) ToRouterOspfAreaOutput() RouterOspfAreaOutput {
	return o
}

func (o RouterOspfAreaOutput) ToRouterOspfAreaOutputWithContext(ctx context.Context) RouterOspfAreaOutput {
	return o
}

func (o RouterOspfAreaOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfArea] {
	return pulumix.Output[RouterOspfArea]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) DefaultCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *int { return v.DefaultCost }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaOutput) FilterLists() RouterOspfAreaFilterListArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaFilterList { return v.FilterLists }).(RouterOspfAreaFilterListArrayOutput)
}

func (o RouterOspfAreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) NssaDefaultInformationOriginate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaDefaultInformationOriginate }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) NssaDefaultInformationOriginateMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *int { return v.NssaDefaultInformationOriginateMetric }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaOutput) NssaDefaultInformationOriginateMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaDefaultInformationOriginateMetricType }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) NssaRedistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaRedistribution }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) NssaTranslatorRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.NssaTranslatorRole }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) Ranges() RouterOspfAreaRangeArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaRange { return v.Ranges }).(RouterOspfAreaRangeArrayOutput)
}

func (o RouterOspfAreaOutput) Shortcut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Shortcut }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) StubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.StubType }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfArea) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaOutput) VirtualLinks() RouterOspfAreaVirtualLinkArrayOutput {
	return o.ApplyT(func(v RouterOspfArea) []RouterOspfAreaVirtualLink { return v.VirtualLinks }).(RouterOspfAreaVirtualLinkArrayOutput)
}

type RouterOspfAreaArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfArea)(nil)).Elem()
}

func (o RouterOspfAreaArrayOutput) ToRouterOspfAreaArrayOutput() RouterOspfAreaArrayOutput {
	return o
}

func (o RouterOspfAreaArrayOutput) ToRouterOspfAreaArrayOutputWithContext(ctx context.Context) RouterOspfAreaArrayOutput {
	return o
}

func (o RouterOspfAreaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfArea] {
	return pulumix.Output[[]RouterOspfArea]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfArea {
		return vs[0].([]RouterOspfArea)[vs[1].(int)]
	}).(RouterOspfAreaOutput)
}

type RouterOspfAreaFilterList struct {
	Direction *string `pulumi:"direction"`
	Id        *int    `pulumi:"id"`
	List      *string `pulumi:"list"`
}

// RouterOspfAreaFilterListInput is an input type that accepts RouterOspfAreaFilterListArgs and RouterOspfAreaFilterListOutput values.
// You can construct a concrete instance of `RouterOspfAreaFilterListInput` via:
//
//	RouterOspfAreaFilterListArgs{...}
type RouterOspfAreaFilterListInput interface {
	pulumi.Input

	ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput
	ToRouterOspfAreaFilterListOutputWithContext(context.Context) RouterOspfAreaFilterListOutput
}

type RouterOspfAreaFilterListArgs struct {
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	List      pulumi.StringPtrInput `pulumi:"list"`
}

func (RouterOspfAreaFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaFilterList)(nil)).Elem()
}

func (i RouterOspfAreaFilterListArgs) ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput {
	return i.ToRouterOspfAreaFilterListOutputWithContext(context.Background())
}

func (i RouterOspfAreaFilterListArgs) ToRouterOspfAreaFilterListOutputWithContext(ctx context.Context) RouterOspfAreaFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaFilterListOutput)
}

func (i RouterOspfAreaFilterListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaFilterList] {
	return pulumix.Output[RouterOspfAreaFilterList]{
		OutputState: i.ToRouterOspfAreaFilterListOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfAreaFilterListArrayInput is an input type that accepts RouterOspfAreaFilterListArray and RouterOspfAreaFilterListArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaFilterListArrayInput` via:
//
//	RouterOspfAreaFilterListArray{ RouterOspfAreaFilterListArgs{...} }
type RouterOspfAreaFilterListArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput
	ToRouterOspfAreaFilterListArrayOutputWithContext(context.Context) RouterOspfAreaFilterListArrayOutput
}

type RouterOspfAreaFilterListArray []RouterOspfAreaFilterListInput

func (RouterOspfAreaFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaFilterList)(nil)).Elem()
}

func (i RouterOspfAreaFilterListArray) ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput {
	return i.ToRouterOspfAreaFilterListArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaFilterListArray) ToRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) RouterOspfAreaFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaFilterListArrayOutput)
}

func (i RouterOspfAreaFilterListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaFilterList] {
	return pulumix.Output[[]RouterOspfAreaFilterList]{
		OutputState: i.ToRouterOspfAreaFilterListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfAreaFilterListOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaFilterList)(nil)).Elem()
}

func (o RouterOspfAreaFilterListOutput) ToRouterOspfAreaFilterListOutput() RouterOspfAreaFilterListOutput {
	return o
}

func (o RouterOspfAreaFilterListOutput) ToRouterOspfAreaFilterListOutputWithContext(ctx context.Context) RouterOspfAreaFilterListOutput {
	return o
}

func (o RouterOspfAreaFilterListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaFilterList] {
	return pulumix.Output[RouterOspfAreaFilterList]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaFilterListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaFilterListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaFilterListOutput) List() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaFilterList) *string { return v.List }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaFilterListArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaFilterList)(nil)).Elem()
}

func (o RouterOspfAreaFilterListArrayOutput) ToRouterOspfAreaFilterListArrayOutput() RouterOspfAreaFilterListArrayOutput {
	return o
}

func (o RouterOspfAreaFilterListArrayOutput) ToRouterOspfAreaFilterListArrayOutputWithContext(ctx context.Context) RouterOspfAreaFilterListArrayOutput {
	return o
}

func (o RouterOspfAreaFilterListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaFilterList] {
	return pulumix.Output[[]RouterOspfAreaFilterList]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaFilterListArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaFilterList {
		return vs[0].([]RouterOspfAreaFilterList)[vs[1].(int)]
	}).(RouterOspfAreaFilterListOutput)
}

type RouterOspfAreaRange struct {
	Advertise        *string `pulumi:"advertise"`
	Id               *int    `pulumi:"id"`
	Prefix           *string `pulumi:"prefix"`
	Substitute       *string `pulumi:"substitute"`
	SubstituteStatus *string `pulumi:"substituteStatus"`
}

// RouterOspfAreaRangeInput is an input type that accepts RouterOspfAreaRangeArgs and RouterOspfAreaRangeOutput values.
// You can construct a concrete instance of `RouterOspfAreaRangeInput` via:
//
//	RouterOspfAreaRangeArgs{...}
type RouterOspfAreaRangeInput interface {
	pulumi.Input

	ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput
	ToRouterOspfAreaRangeOutputWithContext(context.Context) RouterOspfAreaRangeOutput
}

type RouterOspfAreaRangeArgs struct {
	Advertise        pulumi.StringPtrInput `pulumi:"advertise"`
	Id               pulumi.IntPtrInput    `pulumi:"id"`
	Prefix           pulumi.StringPtrInput `pulumi:"prefix"`
	Substitute       pulumi.StringPtrInput `pulumi:"substitute"`
	SubstituteStatus pulumi.StringPtrInput `pulumi:"substituteStatus"`
}

func (RouterOspfAreaRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaRange)(nil)).Elem()
}

func (i RouterOspfAreaRangeArgs) ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput {
	return i.ToRouterOspfAreaRangeOutputWithContext(context.Background())
}

func (i RouterOspfAreaRangeArgs) ToRouterOspfAreaRangeOutputWithContext(ctx context.Context) RouterOspfAreaRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaRangeOutput)
}

func (i RouterOspfAreaRangeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaRange] {
	return pulumix.Output[RouterOspfAreaRange]{
		OutputState: i.ToRouterOspfAreaRangeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfAreaRangeArrayInput is an input type that accepts RouterOspfAreaRangeArray and RouterOspfAreaRangeArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaRangeArrayInput` via:
//
//	RouterOspfAreaRangeArray{ RouterOspfAreaRangeArgs{...} }
type RouterOspfAreaRangeArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput
	ToRouterOspfAreaRangeArrayOutputWithContext(context.Context) RouterOspfAreaRangeArrayOutput
}

type RouterOspfAreaRangeArray []RouterOspfAreaRangeInput

func (RouterOspfAreaRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaRange)(nil)).Elem()
}

func (i RouterOspfAreaRangeArray) ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput {
	return i.ToRouterOspfAreaRangeArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaRangeArray) ToRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) RouterOspfAreaRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaRangeArrayOutput)
}

func (i RouterOspfAreaRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaRange] {
	return pulumix.Output[[]RouterOspfAreaRange]{
		OutputState: i.ToRouterOspfAreaRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfAreaRangeOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaRange)(nil)).Elem()
}

func (o RouterOspfAreaRangeOutput) ToRouterOspfAreaRangeOutput() RouterOspfAreaRangeOutput {
	return o
}

func (o RouterOspfAreaRangeOutput) ToRouterOspfAreaRangeOutputWithContext(ctx context.Context) RouterOspfAreaRangeOutput {
	return o
}

func (o RouterOspfAreaRangeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaRange] {
	return pulumix.Output[RouterOspfAreaRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaRangeOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaRangeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaRangeOutput) Substitute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.Substitute }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaRangeOutput) SubstituteStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaRange) *string { return v.SubstituteStatus }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaRangeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaRange)(nil)).Elem()
}

func (o RouterOspfAreaRangeArrayOutput) ToRouterOspfAreaRangeArrayOutput() RouterOspfAreaRangeArrayOutput {
	return o
}

func (o RouterOspfAreaRangeArrayOutput) ToRouterOspfAreaRangeArrayOutputWithContext(ctx context.Context) RouterOspfAreaRangeArrayOutput {
	return o
}

func (o RouterOspfAreaRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaRange] {
	return pulumix.Output[[]RouterOspfAreaRange]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaRangeArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaRange {
		return vs[0].([]RouterOspfAreaRange)[vs[1].(int)]
	}).(RouterOspfAreaRangeOutput)
}

type RouterOspfAreaVirtualLink struct {
	Authentication     *string                           `pulumi:"authentication"`
	AuthenticationKey  *string                           `pulumi:"authenticationKey"`
	DeadInterval       *int                              `pulumi:"deadInterval"`
	HelloInterval      *int                              `pulumi:"helloInterval"`
	Keychain           *string                           `pulumi:"keychain"`
	Md5Key             *string                           `pulumi:"md5Key"`
	Md5Keychain        *string                           `pulumi:"md5Keychain"`
	Md5Keys            []RouterOspfAreaVirtualLinkMd5Key `pulumi:"md5Keys"`
	Name               *string                           `pulumi:"name"`
	Peer               *string                           `pulumi:"peer"`
	RetransmitInterval *int                              `pulumi:"retransmitInterval"`
	TransmitDelay      *int                              `pulumi:"transmitDelay"`
}

// RouterOspfAreaVirtualLinkInput is an input type that accepts RouterOspfAreaVirtualLinkArgs and RouterOspfAreaVirtualLinkOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkInput` via:
//
//	RouterOspfAreaVirtualLinkArgs{...}
type RouterOspfAreaVirtualLinkInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput
	ToRouterOspfAreaVirtualLinkOutputWithContext(context.Context) RouterOspfAreaVirtualLinkOutput
}

type RouterOspfAreaVirtualLinkArgs struct {
	Authentication     pulumi.StringPtrInput                     `pulumi:"authentication"`
	AuthenticationKey  pulumi.StringPtrInput                     `pulumi:"authenticationKey"`
	DeadInterval       pulumi.IntPtrInput                        `pulumi:"deadInterval"`
	HelloInterval      pulumi.IntPtrInput                        `pulumi:"helloInterval"`
	Keychain           pulumi.StringPtrInput                     `pulumi:"keychain"`
	Md5Key             pulumi.StringPtrInput                     `pulumi:"md5Key"`
	Md5Keychain        pulumi.StringPtrInput                     `pulumi:"md5Keychain"`
	Md5Keys            RouterOspfAreaVirtualLinkMd5KeyArrayInput `pulumi:"md5Keys"`
	Name               pulumi.StringPtrInput                     `pulumi:"name"`
	Peer               pulumi.StringPtrInput                     `pulumi:"peer"`
	RetransmitInterval pulumi.IntPtrInput                        `pulumi:"retransmitInterval"`
	TransmitDelay      pulumi.IntPtrInput                        `pulumi:"transmitDelay"`
}

func (RouterOspfAreaVirtualLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkArgs) ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput {
	return i.ToRouterOspfAreaVirtualLinkOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkArgs) ToRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkOutput)
}

func (i RouterOspfAreaVirtualLinkArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaVirtualLink] {
	return pulumix.Output[RouterOspfAreaVirtualLink]{
		OutputState: i.ToRouterOspfAreaVirtualLinkOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfAreaVirtualLinkArrayInput is an input type that accepts RouterOspfAreaVirtualLinkArray and RouterOspfAreaVirtualLinkArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkArrayInput` via:
//
//	RouterOspfAreaVirtualLinkArray{ RouterOspfAreaVirtualLinkArgs{...} }
type RouterOspfAreaVirtualLinkArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput
	ToRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Context) RouterOspfAreaVirtualLinkArrayOutput
}

type RouterOspfAreaVirtualLinkArray []RouterOspfAreaVirtualLinkInput

func (RouterOspfAreaVirtualLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkArray) ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput {
	return i.ToRouterOspfAreaVirtualLinkArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkArray) ToRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkArrayOutput)
}

func (i RouterOspfAreaVirtualLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaVirtualLink] {
	return pulumix.Output[[]RouterOspfAreaVirtualLink]{
		OutputState: i.ToRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfAreaVirtualLinkOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkOutput) ToRouterOspfAreaVirtualLinkOutput() RouterOspfAreaVirtualLinkOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkOutput) ToRouterOspfAreaVirtualLinkOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaVirtualLink] {
	return pulumix.Output[RouterOspfAreaVirtualLink]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaVirtualLinkOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Md5Keys() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) []RouterOspfAreaVirtualLinkMd5Key { return v.Md5Keys }).(RouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaVirtualLinkOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLink) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspfAreaVirtualLinkArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLink)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkArrayOutput) ToRouterOspfAreaVirtualLinkArrayOutput() RouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkArrayOutput) ToRouterOspfAreaVirtualLinkArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaVirtualLink] {
	return pulumix.Output[[]RouterOspfAreaVirtualLink]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaVirtualLinkArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaVirtualLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaVirtualLink {
		return vs[0].([]RouterOspfAreaVirtualLink)[vs[1].(int)]
	}).(RouterOspfAreaVirtualLinkOutput)
}

type RouterOspfAreaVirtualLinkMd5Key struct {
	Id        *int    `pulumi:"id"`
	KeyString *string `pulumi:"keyString"`
}

// RouterOspfAreaVirtualLinkMd5KeyInput is an input type that accepts RouterOspfAreaVirtualLinkMd5KeyArgs and RouterOspfAreaVirtualLinkMd5KeyOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkMd5KeyInput` via:
//
//	RouterOspfAreaVirtualLinkMd5KeyArgs{...}
type RouterOspfAreaVirtualLinkMd5KeyInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput
	ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput
}

type RouterOspfAreaVirtualLinkMd5KeyArgs struct {
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterOspfAreaVirtualLinkMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkMd5KeyArgs) ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput {
	return i.ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkMd5KeyArgs) ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkMd5KeyOutput)
}

func (i RouterOspfAreaVirtualLinkMd5KeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaVirtualLinkMd5Key] {
	return pulumix.Output[RouterOspfAreaVirtualLinkMd5Key]{
		OutputState: i.ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfAreaVirtualLinkMd5KeyArrayInput is an input type that accepts RouterOspfAreaVirtualLinkMd5KeyArray and RouterOspfAreaVirtualLinkMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterOspfAreaVirtualLinkMd5KeyArrayInput` via:
//
//	RouterOspfAreaVirtualLinkMd5KeyArray{ RouterOspfAreaVirtualLinkMd5KeyArgs{...} }
type RouterOspfAreaVirtualLinkMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput
	ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput
}

type RouterOspfAreaVirtualLinkMd5KeyArray []RouterOspfAreaVirtualLinkMd5KeyInput

func (RouterOspfAreaVirtualLinkMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (i RouterOspfAreaVirtualLinkMd5KeyArray) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return i.ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterOspfAreaVirtualLinkMd5KeyArray) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfAreaVirtualLinkMd5KeyArrayOutput)
}

func (i RouterOspfAreaVirtualLinkMd5KeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaVirtualLinkMd5Key] {
	return pulumix.Output[[]RouterOspfAreaVirtualLinkMd5Key]{
		OutputState: i.ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfAreaVirtualLinkMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) ToRouterOspfAreaVirtualLinkMd5KeyOutput() RouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) ToRouterOspfAreaVirtualLinkMd5KeyOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfAreaVirtualLinkMd5Key] {
	return pulumix.Output[RouterOspfAreaVirtualLinkMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLinkMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfAreaVirtualLinkMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfAreaVirtualLinkMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterOspfAreaVirtualLinkMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfAreaVirtualLinkMd5Key)(nil)).Elem()
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutput() RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToRouterOspfAreaVirtualLinkMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfAreaVirtualLinkMd5KeyArrayOutput {
	return o
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfAreaVirtualLinkMd5Key] {
	return pulumix.Output[[]RouterOspfAreaVirtualLinkMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfAreaVirtualLinkMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterOspfAreaVirtualLinkMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfAreaVirtualLinkMd5Key {
		return vs[0].([]RouterOspfAreaVirtualLinkMd5Key)[vs[1].(int)]
	}).(RouterOspfAreaVirtualLinkMd5KeyOutput)
}

type RouterOspfDistributeList struct {
	AccessList *string `pulumi:"accessList"`
	Id         *int    `pulumi:"id"`
	Protocol   *string `pulumi:"protocol"`
}

// RouterOspfDistributeListInput is an input type that accepts RouterOspfDistributeListArgs and RouterOspfDistributeListOutput values.
// You can construct a concrete instance of `RouterOspfDistributeListInput` via:
//
//	RouterOspfDistributeListArgs{...}
type RouterOspfDistributeListInput interface {
	pulumi.Input

	ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput
	ToRouterOspfDistributeListOutputWithContext(context.Context) RouterOspfDistributeListOutput
}

type RouterOspfDistributeListArgs struct {
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
}

func (RouterOspfDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfDistributeList)(nil)).Elem()
}

func (i RouterOspfDistributeListArgs) ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput {
	return i.ToRouterOspfDistributeListOutputWithContext(context.Background())
}

func (i RouterOspfDistributeListArgs) ToRouterOspfDistributeListOutputWithContext(ctx context.Context) RouterOspfDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfDistributeListOutput)
}

func (i RouterOspfDistributeListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfDistributeList] {
	return pulumix.Output[RouterOspfDistributeList]{
		OutputState: i.ToRouterOspfDistributeListOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfDistributeListArrayInput is an input type that accepts RouterOspfDistributeListArray and RouterOspfDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterOspfDistributeListArrayInput` via:
//
//	RouterOspfDistributeListArray{ RouterOspfDistributeListArgs{...} }
type RouterOspfDistributeListArrayInput interface {
	pulumi.Input

	ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput
	ToRouterOspfDistributeListArrayOutputWithContext(context.Context) RouterOspfDistributeListArrayOutput
}

type RouterOspfDistributeListArray []RouterOspfDistributeListInput

func (RouterOspfDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfDistributeList)(nil)).Elem()
}

func (i RouterOspfDistributeListArray) ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput {
	return i.ToRouterOspfDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterOspfDistributeListArray) ToRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) RouterOspfDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfDistributeListArrayOutput)
}

func (i RouterOspfDistributeListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfDistributeList] {
	return pulumix.Output[[]RouterOspfDistributeList]{
		OutputState: i.ToRouterOspfDistributeListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfDistributeListOutput struct{ *pulumi.OutputState }

func (RouterOspfDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfDistributeList)(nil)).Elem()
}

func (o RouterOspfDistributeListOutput) ToRouterOspfDistributeListOutput() RouterOspfDistributeListOutput {
	return o
}

func (o RouterOspfDistributeListOutput) ToRouterOspfDistributeListOutputWithContext(ctx context.Context) RouterOspfDistributeListOutput {
	return o
}

func (o RouterOspfDistributeListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfDistributeList] {
	return pulumix.Output[RouterOspfDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfDistributeListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

func (o RouterOspfDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfDistributeListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfDistributeList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type RouterOspfDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfDistributeList)(nil)).Elem()
}

func (o RouterOspfDistributeListArrayOutput) ToRouterOspfDistributeListArrayOutput() RouterOspfDistributeListArrayOutput {
	return o
}

func (o RouterOspfDistributeListArrayOutput) ToRouterOspfDistributeListArrayOutputWithContext(ctx context.Context) RouterOspfDistributeListArrayOutput {
	return o
}

func (o RouterOspfDistributeListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfDistributeList] {
	return pulumix.Output[[]RouterOspfDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfDistributeListArrayOutput) Index(i pulumi.IntInput) RouterOspfDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfDistributeList {
		return vs[0].([]RouterOspfDistributeList)[vs[1].(int)]
	}).(RouterOspfDistributeListOutput)
}

type RouterOspfNeighborType struct {
	Cost         *int    `pulumi:"cost"`
	Id           *int    `pulumi:"id"`
	Ip           *string `pulumi:"ip"`
	PollInterval *int    `pulumi:"pollInterval"`
	Priority     *int    `pulumi:"priority"`
}

// RouterOspfNeighborTypeInput is an input type that accepts RouterOspfNeighborTypeArgs and RouterOspfNeighborTypeOutput values.
// You can construct a concrete instance of `RouterOspfNeighborTypeInput` via:
//
//	RouterOspfNeighborTypeArgs{...}
type RouterOspfNeighborTypeInput interface {
	pulumi.Input

	ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput
	ToRouterOspfNeighborTypeOutputWithContext(context.Context) RouterOspfNeighborTypeOutput
}

type RouterOspfNeighborTypeArgs struct {
	Cost         pulumi.IntPtrInput    `pulumi:"cost"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	Ip           pulumi.StringPtrInput `pulumi:"ip"`
	PollInterval pulumi.IntPtrInput    `pulumi:"pollInterval"`
	Priority     pulumi.IntPtrInput    `pulumi:"priority"`
}

func (RouterOspfNeighborTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNeighborType)(nil)).Elem()
}

func (i RouterOspfNeighborTypeArgs) ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput {
	return i.ToRouterOspfNeighborTypeOutputWithContext(context.Background())
}

func (i RouterOspfNeighborTypeArgs) ToRouterOspfNeighborTypeOutputWithContext(ctx context.Context) RouterOspfNeighborTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNeighborTypeOutput)
}

func (i RouterOspfNeighborTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfNeighborType] {
	return pulumix.Output[RouterOspfNeighborType]{
		OutputState: i.ToRouterOspfNeighborTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfNeighborTypeArrayInput is an input type that accepts RouterOspfNeighborTypeArray and RouterOspfNeighborTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfNeighborTypeArrayInput` via:
//
//	RouterOspfNeighborTypeArray{ RouterOspfNeighborTypeArgs{...} }
type RouterOspfNeighborTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput
	ToRouterOspfNeighborTypeArrayOutputWithContext(context.Context) RouterOspfNeighborTypeArrayOutput
}

type RouterOspfNeighborTypeArray []RouterOspfNeighborTypeInput

func (RouterOspfNeighborTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNeighborType)(nil)).Elem()
}

func (i RouterOspfNeighborTypeArray) ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput {
	return i.ToRouterOspfNeighborTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfNeighborTypeArray) ToRouterOspfNeighborTypeArrayOutputWithContext(ctx context.Context) RouterOspfNeighborTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNeighborTypeArrayOutput)
}

func (i RouterOspfNeighborTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfNeighborType] {
	return pulumix.Output[[]RouterOspfNeighborType]{
		OutputState: i.ToRouterOspfNeighborTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfNeighborTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfNeighborTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNeighborType)(nil)).Elem()
}

func (o RouterOspfNeighborTypeOutput) ToRouterOspfNeighborTypeOutput() RouterOspfNeighborTypeOutput {
	return o
}

func (o RouterOspfNeighborTypeOutput) ToRouterOspfNeighborTypeOutputWithContext(ctx context.Context) RouterOspfNeighborTypeOutput {
	return o
}

func (o RouterOspfNeighborTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfNeighborType] {
	return pulumix.Output[RouterOspfNeighborType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfNeighborTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o RouterOspfNeighborTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfNeighborTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RouterOspfNeighborTypeOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfNeighborTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNeighborType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type RouterOspfNeighborTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfNeighborTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNeighborType)(nil)).Elem()
}

func (o RouterOspfNeighborTypeArrayOutput) ToRouterOspfNeighborTypeArrayOutput() RouterOspfNeighborTypeArrayOutput {
	return o
}

func (o RouterOspfNeighborTypeArrayOutput) ToRouterOspfNeighborTypeArrayOutputWithContext(ctx context.Context) RouterOspfNeighborTypeArrayOutput {
	return o
}

func (o RouterOspfNeighborTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfNeighborType] {
	return pulumix.Output[[]RouterOspfNeighborType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfNeighborTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfNeighborTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfNeighborType {
		return vs[0].([]RouterOspfNeighborType)[vs[1].(int)]
	}).(RouterOspfNeighborTypeOutput)
}

type RouterOspfNetworkType struct {
	Area     *string `pulumi:"area"`
	Comments *string `pulumi:"comments"`
	Id       *int    `pulumi:"id"`
	Prefix   *string `pulumi:"prefix"`
}

// RouterOspfNetworkTypeInput is an input type that accepts RouterOspfNetworkTypeArgs and RouterOspfNetworkTypeOutput values.
// You can construct a concrete instance of `RouterOspfNetworkTypeInput` via:
//
//	RouterOspfNetworkTypeArgs{...}
type RouterOspfNetworkTypeInput interface {
	pulumi.Input

	ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput
	ToRouterOspfNetworkTypeOutputWithContext(context.Context) RouterOspfNetworkTypeOutput
}

type RouterOspfNetworkTypeArgs struct {
	Area     pulumi.StringPtrInput `pulumi:"area"`
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Prefix   pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterOspfNetworkTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNetworkType)(nil)).Elem()
}

func (i RouterOspfNetworkTypeArgs) ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput {
	return i.ToRouterOspfNetworkTypeOutputWithContext(context.Background())
}

func (i RouterOspfNetworkTypeArgs) ToRouterOspfNetworkTypeOutputWithContext(ctx context.Context) RouterOspfNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNetworkTypeOutput)
}

func (i RouterOspfNetworkTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfNetworkType] {
	return pulumix.Output[RouterOspfNetworkType]{
		OutputState: i.ToRouterOspfNetworkTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfNetworkTypeArrayInput is an input type that accepts RouterOspfNetworkTypeArray and RouterOspfNetworkTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfNetworkTypeArrayInput` via:
//
//	RouterOspfNetworkTypeArray{ RouterOspfNetworkTypeArgs{...} }
type RouterOspfNetworkTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput
	ToRouterOspfNetworkTypeArrayOutputWithContext(context.Context) RouterOspfNetworkTypeArrayOutput
}

type RouterOspfNetworkTypeArray []RouterOspfNetworkTypeInput

func (RouterOspfNetworkTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNetworkType)(nil)).Elem()
}

func (i RouterOspfNetworkTypeArray) ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput {
	return i.ToRouterOspfNetworkTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfNetworkTypeArray) ToRouterOspfNetworkTypeArrayOutputWithContext(ctx context.Context) RouterOspfNetworkTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfNetworkTypeArrayOutput)
}

func (i RouterOspfNetworkTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfNetworkType] {
	return pulumix.Output[[]RouterOspfNetworkType]{
		OutputState: i.ToRouterOspfNetworkTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfNetworkTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfNetworkType)(nil)).Elem()
}

func (o RouterOspfNetworkTypeOutput) ToRouterOspfNetworkTypeOutput() RouterOspfNetworkTypeOutput {
	return o
}

func (o RouterOspfNetworkTypeOutput) ToRouterOspfNetworkTypeOutputWithContext(ctx context.Context) RouterOspfNetworkTypeOutput {
	return o
}

func (o RouterOspfNetworkTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfNetworkType] {
	return pulumix.Output[RouterOspfNetworkType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfNetworkTypeOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Area }).(pulumi.StringPtrOutput)
}

func (o RouterOspfNetworkTypeOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o RouterOspfNetworkTypeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfNetworkTypeOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfNetworkType) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterOspfNetworkTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfNetworkTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfNetworkType)(nil)).Elem()
}

func (o RouterOspfNetworkTypeArrayOutput) ToRouterOspfNetworkTypeArrayOutput() RouterOspfNetworkTypeArrayOutput {
	return o
}

func (o RouterOspfNetworkTypeArrayOutput) ToRouterOspfNetworkTypeArrayOutputWithContext(ctx context.Context) RouterOspfNetworkTypeArrayOutput {
	return o
}

func (o RouterOspfNetworkTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfNetworkType] {
	return pulumix.Output[[]RouterOspfNetworkType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfNetworkTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfNetworkTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfNetworkType {
		return vs[0].([]RouterOspfNetworkType)[vs[1].(int)]
	}).(RouterOspfNetworkTypeOutput)
}

type RouterOspfOspfInterfaceType struct {
	Authentication     *string                         `pulumi:"authentication"`
	AuthenticationKey  *string                         `pulumi:"authenticationKey"`
	Bfd                *string                         `pulumi:"bfd"`
	Comments           *string                         `pulumi:"comments"`
	Cost               *int                            `pulumi:"cost"`
	DatabaseFilterOut  *string                         `pulumi:"databaseFilterOut"`
	DeadInterval       *int                            `pulumi:"deadInterval"`
	HelloInterval      *int                            `pulumi:"helloInterval"`
	HelloMultiplier    *int                            `pulumi:"helloMultiplier"`
	Interface          *string                         `pulumi:"interface"`
	Ip                 *string                         `pulumi:"ip"`
	Keychain           *string                         `pulumi:"keychain"`
	Md5Key             *string                         `pulumi:"md5Key"`
	Md5Keychain        *string                         `pulumi:"md5Keychain"`
	Md5Keys            []RouterOspfOspfInterfaceMd5Key `pulumi:"md5Keys"`
	Mtu                *int                            `pulumi:"mtu"`
	MtuIgnore          *string                         `pulumi:"mtuIgnore"`
	Name               *string                         `pulumi:"name"`
	NetworkType        *string                         `pulumi:"networkType"`
	PrefixLength       *int                            `pulumi:"prefixLength"`
	Priority           *int                            `pulumi:"priority"`
	ResyncTimeout      *int                            `pulumi:"resyncTimeout"`
	RetransmitInterval *int                            `pulumi:"retransmitInterval"`
	Status             *string                         `pulumi:"status"`
	TransmitDelay      *int                            `pulumi:"transmitDelay"`
}

// RouterOspfOspfInterfaceTypeInput is an input type that accepts RouterOspfOspfInterfaceTypeArgs and RouterOspfOspfInterfaceTypeOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceTypeInput` via:
//
//	RouterOspfOspfInterfaceTypeArgs{...}
type RouterOspfOspfInterfaceTypeInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput
	ToRouterOspfOspfInterfaceTypeOutputWithContext(context.Context) RouterOspfOspfInterfaceTypeOutput
}

type RouterOspfOspfInterfaceTypeArgs struct {
	Authentication     pulumi.StringPtrInput                   `pulumi:"authentication"`
	AuthenticationKey  pulumi.StringPtrInput                   `pulumi:"authenticationKey"`
	Bfd                pulumi.StringPtrInput                   `pulumi:"bfd"`
	Comments           pulumi.StringPtrInput                   `pulumi:"comments"`
	Cost               pulumi.IntPtrInput                      `pulumi:"cost"`
	DatabaseFilterOut  pulumi.StringPtrInput                   `pulumi:"databaseFilterOut"`
	DeadInterval       pulumi.IntPtrInput                      `pulumi:"deadInterval"`
	HelloInterval      pulumi.IntPtrInput                      `pulumi:"helloInterval"`
	HelloMultiplier    pulumi.IntPtrInput                      `pulumi:"helloMultiplier"`
	Interface          pulumi.StringPtrInput                   `pulumi:"interface"`
	Ip                 pulumi.StringPtrInput                   `pulumi:"ip"`
	Keychain           pulumi.StringPtrInput                   `pulumi:"keychain"`
	Md5Key             pulumi.StringPtrInput                   `pulumi:"md5Key"`
	Md5Keychain        pulumi.StringPtrInput                   `pulumi:"md5Keychain"`
	Md5Keys            RouterOspfOspfInterfaceMd5KeyArrayInput `pulumi:"md5Keys"`
	Mtu                pulumi.IntPtrInput                      `pulumi:"mtu"`
	MtuIgnore          pulumi.StringPtrInput                   `pulumi:"mtuIgnore"`
	Name               pulumi.StringPtrInput                   `pulumi:"name"`
	NetworkType        pulumi.StringPtrInput                   `pulumi:"networkType"`
	PrefixLength       pulumi.IntPtrInput                      `pulumi:"prefixLength"`
	Priority           pulumi.IntPtrInput                      `pulumi:"priority"`
	ResyncTimeout      pulumi.IntPtrInput                      `pulumi:"resyncTimeout"`
	RetransmitInterval pulumi.IntPtrInput                      `pulumi:"retransmitInterval"`
	Status             pulumi.StringPtrInput                   `pulumi:"status"`
	TransmitDelay      pulumi.IntPtrInput                      `pulumi:"transmitDelay"`
}

func (RouterOspfOspfInterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceTypeArgs) ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput {
	return i.ToRouterOspfOspfInterfaceTypeOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceTypeArgs) ToRouterOspfOspfInterfaceTypeOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceTypeOutput)
}

func (i RouterOspfOspfInterfaceTypeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfOspfInterfaceType] {
	return pulumix.Output[RouterOspfOspfInterfaceType]{
		OutputState: i.ToRouterOspfOspfInterfaceTypeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfOspfInterfaceTypeArrayInput is an input type that accepts RouterOspfOspfInterfaceTypeArray and RouterOspfOspfInterfaceTypeArrayOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceTypeArrayInput` via:
//
//	RouterOspfOspfInterfaceTypeArray{ RouterOspfOspfInterfaceTypeArgs{...} }
type RouterOspfOspfInterfaceTypeArrayInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput
	ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(context.Context) RouterOspfOspfInterfaceTypeArrayOutput
}

type RouterOspfOspfInterfaceTypeArray []RouterOspfOspfInterfaceTypeInput

func (RouterOspfOspfInterfaceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceTypeArray) ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput {
	return i.ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceTypeArray) ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceTypeArrayOutput)
}

func (i RouterOspfOspfInterfaceTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfOspfInterfaceType] {
	return pulumix.Output[[]RouterOspfOspfInterfaceType]{
		OutputState: i.ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfOspfInterfaceTypeOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceTypeOutput) ToRouterOspfOspfInterfaceTypeOutput() RouterOspfOspfInterfaceTypeOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeOutput) ToRouterOspfOspfInterfaceTypeOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfOspfInterfaceType] {
	return pulumix.Output[RouterOspfOspfInterfaceType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfOspfInterfaceTypeOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) AuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.AuthenticationKey }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) DatabaseFilterOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.DatabaseFilterOut }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) DeadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.DeadInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) HelloMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.HelloMultiplier }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Keychain }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Md5Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Md5Key }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Md5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Md5Keychain }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Md5Keys() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) []RouterOspfOspfInterfaceMd5Key { return v.Md5Keys }).(RouterOspfOspfInterfaceMd5KeyArrayOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) MtuIgnore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.MtuIgnore }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) ResyncTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.ResyncTimeout }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) RetransmitInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.RetransmitInterval }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RouterOspfOspfInterfaceTypeOutput) TransmitDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceType) *int { return v.TransmitDelay }).(pulumi.IntPtrOutput)
}

type RouterOspfOspfInterfaceTypeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceType)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) ToRouterOspfOspfInterfaceTypeArrayOutput() RouterOspfOspfInterfaceTypeArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) ToRouterOspfOspfInterfaceTypeArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceTypeArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfOspfInterfaceType] {
	return pulumix.Output[[]RouterOspfOspfInterfaceType]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfOspfInterfaceTypeArrayOutput) Index(i pulumi.IntInput) RouterOspfOspfInterfaceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfOspfInterfaceType {
		return vs[0].([]RouterOspfOspfInterfaceType)[vs[1].(int)]
	}).(RouterOspfOspfInterfaceTypeOutput)
}

type RouterOspfOspfInterfaceMd5Key struct {
	Id        *int    `pulumi:"id"`
	KeyString *string `pulumi:"keyString"`
}

// RouterOspfOspfInterfaceMd5KeyInput is an input type that accepts RouterOspfOspfInterfaceMd5KeyArgs and RouterOspfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceMd5KeyInput` via:
//
//	RouterOspfOspfInterfaceMd5KeyArgs{...}
type RouterOspfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput
	ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Context) RouterOspfOspfInterfaceMd5KeyOutput
}

type RouterOspfOspfInterfaceMd5KeyArgs struct {
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterOspfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceMd5KeyArgs) ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput {
	return i.ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceMd5KeyArgs) ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceMd5KeyOutput)
}

func (i RouterOspfOspfInterfaceMd5KeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfOspfInterfaceMd5Key] {
	return pulumix.Output[RouterOspfOspfInterfaceMd5Key]{
		OutputState: i.ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfOspfInterfaceMd5KeyArrayInput is an input type that accepts RouterOspfOspfInterfaceMd5KeyArray and RouterOspfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterOspfOspfInterfaceMd5KeyArrayInput` via:
//
//	RouterOspfOspfInterfaceMd5KeyArray{ RouterOspfOspfInterfaceMd5KeyArgs{...} }
type RouterOspfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput
	ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput
}

type RouterOspfOspfInterfaceMd5KeyArray []RouterOspfOspfInterfaceMd5KeyInput

func (RouterOspfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterOspfOspfInterfaceMd5KeyArray) ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return i.ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterOspfOspfInterfaceMd5KeyArray) ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfOspfInterfaceMd5KeyArrayOutput)
}

func (i RouterOspfOspfInterfaceMd5KeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfOspfInterfaceMd5Key] {
	return pulumix.Output[[]RouterOspfOspfInterfaceMd5Key]{
		OutputState: i.ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) ToRouterOspfOspfInterfaceMd5KeyOutput() RouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) ToRouterOspfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfOspfInterfaceMd5Key] {
	return pulumix.Output[RouterOspfOspfInterfaceMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfOspfInterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterOspfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) ToRouterOspfOspfInterfaceMd5KeyArrayOutput() RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) ToRouterOspfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterOspfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfOspfInterfaceMd5Key] {
	return pulumix.Output[[]RouterOspfOspfInterfaceMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterOspfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfOspfInterfaceMd5Key {
		return vs[0].([]RouterOspfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(RouterOspfOspfInterfaceMd5KeyOutput)
}

type RouterOspfPassiveInterface struct {
	Name *string `pulumi:"name"`
}

// RouterOspfPassiveInterfaceInput is an input type that accepts RouterOspfPassiveInterfaceArgs and RouterOspfPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterOspfPassiveInterfaceInput` via:
//
//	RouterOspfPassiveInterfaceArgs{...}
type RouterOspfPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput
	ToRouterOspfPassiveInterfaceOutputWithContext(context.Context) RouterOspfPassiveInterfaceOutput
}

type RouterOspfPassiveInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterOspfPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfPassiveInterface)(nil)).Elem()
}

func (i RouterOspfPassiveInterfaceArgs) ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput {
	return i.ToRouterOspfPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterOspfPassiveInterfaceArgs) ToRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfPassiveInterfaceOutput)
}

func (i RouterOspfPassiveInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfPassiveInterface] {
	return pulumix.Output[RouterOspfPassiveInterface]{
		OutputState: i.ToRouterOspfPassiveInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfPassiveInterfaceArrayInput is an input type that accepts RouterOspfPassiveInterfaceArray and RouterOspfPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterOspfPassiveInterfaceArrayInput` via:
//
//	RouterOspfPassiveInterfaceArray{ RouterOspfPassiveInterfaceArgs{...} }
type RouterOspfPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput
	ToRouterOspfPassiveInterfaceArrayOutputWithContext(context.Context) RouterOspfPassiveInterfaceArrayOutput
}

type RouterOspfPassiveInterfaceArray []RouterOspfPassiveInterfaceInput

func (RouterOspfPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfPassiveInterface)(nil)).Elem()
}

func (i RouterOspfPassiveInterfaceArray) ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput {
	return i.ToRouterOspfPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterOspfPassiveInterfaceArray) ToRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfPassiveInterfaceArrayOutput)
}

func (i RouterOspfPassiveInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfPassiveInterface] {
	return pulumix.Output[[]RouterOspfPassiveInterface]{
		OutputState: i.ToRouterOspfPassiveInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterOspfPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfPassiveInterface)(nil)).Elem()
}

func (o RouterOspfPassiveInterfaceOutput) ToRouterOspfPassiveInterfaceOutput() RouterOspfPassiveInterfaceOutput {
	return o
}

func (o RouterOspfPassiveInterfaceOutput) ToRouterOspfPassiveInterfaceOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceOutput {
	return o
}

func (o RouterOspfPassiveInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfPassiveInterface] {
	return pulumix.Output[RouterOspfPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterOspfPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfPassiveInterface)(nil)).Elem()
}

func (o RouterOspfPassiveInterfaceArrayOutput) ToRouterOspfPassiveInterfaceArrayOutput() RouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspfPassiveInterfaceArrayOutput) ToRouterOspfPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterOspfPassiveInterfaceArrayOutput {
	return o
}

func (o RouterOspfPassiveInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfPassiveInterface] {
	return pulumix.Output[[]RouterOspfPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterOspfPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfPassiveInterface {
		return vs[0].([]RouterOspfPassiveInterface)[vs[1].(int)]
	}).(RouterOspfPassiveInterfaceOutput)
}

type RouterOspfRedistribute struct {
	Metric     *int    `pulumi:"metric"`
	MetricType *string `pulumi:"metricType"`
	Name       *string `pulumi:"name"`
	Routemap   *string `pulumi:"routemap"`
	Status     *string `pulumi:"status"`
	Tag        *int    `pulumi:"tag"`
}

// RouterOspfRedistributeInput is an input type that accepts RouterOspfRedistributeArgs and RouterOspfRedistributeOutput values.
// You can construct a concrete instance of `RouterOspfRedistributeInput` via:
//
//	RouterOspfRedistributeArgs{...}
type RouterOspfRedistributeInput interface {
	pulumi.Input

	ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput
	ToRouterOspfRedistributeOutputWithContext(context.Context) RouterOspfRedistributeOutput
}

type RouterOspfRedistributeArgs struct {
	Metric     pulumi.IntPtrInput    `pulumi:"metric"`
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Routemap   pulumi.StringPtrInput `pulumi:"routemap"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	Tag        pulumi.IntPtrInput    `pulumi:"tag"`
}

func (RouterOspfRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfRedistribute)(nil)).Elem()
}

func (i RouterOspfRedistributeArgs) ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput {
	return i.ToRouterOspfRedistributeOutputWithContext(context.Background())
}

func (i RouterOspfRedistributeArgs) ToRouterOspfRedistributeOutputWithContext(ctx context.Context) RouterOspfRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfRedistributeOutput)
}

func (i RouterOspfRedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfRedistribute] {
	return pulumix.Output[RouterOspfRedistribute]{
		OutputState: i.ToRouterOspfRedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfRedistributeArrayInput is an input type that accepts RouterOspfRedistributeArray and RouterOspfRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterOspfRedistributeArrayInput` via:
//
//	RouterOspfRedistributeArray{ RouterOspfRedistributeArgs{...} }
type RouterOspfRedistributeArrayInput interface {
	pulumi.Input

	ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput
	ToRouterOspfRedistributeArrayOutputWithContext(context.Context) RouterOspfRedistributeArrayOutput
}

type RouterOspfRedistributeArray []RouterOspfRedistributeInput

func (RouterOspfRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfRedistribute)(nil)).Elem()
}

func (i RouterOspfRedistributeArray) ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput {
	return i.ToRouterOspfRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterOspfRedistributeArray) ToRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) RouterOspfRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfRedistributeArrayOutput)
}

func (i RouterOspfRedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfRedistribute] {
	return pulumix.Output[[]RouterOspfRedistribute]{
		OutputState: i.ToRouterOspfRedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfRedistributeOutput struct{ *pulumi.OutputState }

func (RouterOspfRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfRedistribute)(nil)).Elem()
}

func (o RouterOspfRedistributeOutput) ToRouterOspfRedistributeOutput() RouterOspfRedistributeOutput {
	return o
}

func (o RouterOspfRedistributeOutput) ToRouterOspfRedistributeOutputWithContext(ctx context.Context) RouterOspfRedistributeOutput {
	return o
}

func (o RouterOspfRedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfRedistribute] {
	return pulumix.Output[RouterOspfRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterOspfRedistributeOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

func (o RouterOspfRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterOspfRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterOspfRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o RouterOspfRedistributeOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfRedistribute) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspfRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfRedistribute)(nil)).Elem()
}

func (o RouterOspfRedistributeArrayOutput) ToRouterOspfRedistributeArrayOutput() RouterOspfRedistributeArrayOutput {
	return o
}

func (o RouterOspfRedistributeArrayOutput) ToRouterOspfRedistributeArrayOutputWithContext(ctx context.Context) RouterOspfRedistributeArrayOutput {
	return o
}

func (o RouterOspfRedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfRedistribute] {
	return pulumix.Output[[]RouterOspfRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfRedistributeArrayOutput) Index(i pulumi.IntInput) RouterOspfRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfRedistribute {
		return vs[0].([]RouterOspfRedistribute)[vs[1].(int)]
	}).(RouterOspfRedistributeOutput)
}

type RouterOspfSummaryAddress struct {
	Advertise *string `pulumi:"advertise"`
	Id        *int    `pulumi:"id"`
	Prefix    *string `pulumi:"prefix"`
	Tag       *int    `pulumi:"tag"`
}

// RouterOspfSummaryAddressInput is an input type that accepts RouterOspfSummaryAddressArgs and RouterOspfSummaryAddressOutput values.
// You can construct a concrete instance of `RouterOspfSummaryAddressInput` via:
//
//	RouterOspfSummaryAddressArgs{...}
type RouterOspfSummaryAddressInput interface {
	pulumi.Input

	ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput
	ToRouterOspfSummaryAddressOutputWithContext(context.Context) RouterOspfSummaryAddressOutput
}

type RouterOspfSummaryAddressArgs struct {
	Advertise pulumi.StringPtrInput `pulumi:"advertise"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Prefix    pulumi.StringPtrInput `pulumi:"prefix"`
	Tag       pulumi.IntPtrInput    `pulumi:"tag"`
}

func (RouterOspfSummaryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfSummaryAddress)(nil)).Elem()
}

func (i RouterOspfSummaryAddressArgs) ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput {
	return i.ToRouterOspfSummaryAddressOutputWithContext(context.Background())
}

func (i RouterOspfSummaryAddressArgs) ToRouterOspfSummaryAddressOutputWithContext(ctx context.Context) RouterOspfSummaryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfSummaryAddressOutput)
}

func (i RouterOspfSummaryAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterOspfSummaryAddress] {
	return pulumix.Output[RouterOspfSummaryAddress]{
		OutputState: i.ToRouterOspfSummaryAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterOspfSummaryAddressArrayInput is an input type that accepts RouterOspfSummaryAddressArray and RouterOspfSummaryAddressArrayOutput values.
// You can construct a concrete instance of `RouterOspfSummaryAddressArrayInput` via:
//
//	RouterOspfSummaryAddressArray{ RouterOspfSummaryAddressArgs{...} }
type RouterOspfSummaryAddressArrayInput interface {
	pulumi.Input

	ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput
	ToRouterOspfSummaryAddressArrayOutputWithContext(context.Context) RouterOspfSummaryAddressArrayOutput
}

type RouterOspfSummaryAddressArray []RouterOspfSummaryAddressInput

func (RouterOspfSummaryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfSummaryAddress)(nil)).Elem()
}

func (i RouterOspfSummaryAddressArray) ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput {
	return i.ToRouterOspfSummaryAddressArrayOutputWithContext(context.Background())
}

func (i RouterOspfSummaryAddressArray) ToRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspfSummaryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterOspfSummaryAddressArrayOutput)
}

func (i RouterOspfSummaryAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfSummaryAddress] {
	return pulumix.Output[[]RouterOspfSummaryAddress]{
		OutputState: i.ToRouterOspfSummaryAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterOspfSummaryAddressOutput struct{ *pulumi.OutputState }

func (RouterOspfSummaryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterOspfSummaryAddress)(nil)).Elem()
}

func (o RouterOspfSummaryAddressOutput) ToRouterOspfSummaryAddressOutput() RouterOspfSummaryAddressOutput {
	return o
}

func (o RouterOspfSummaryAddressOutput) ToRouterOspfSummaryAddressOutputWithContext(ctx context.Context) RouterOspfSummaryAddressOutput {
	return o
}

func (o RouterOspfSummaryAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterOspfSummaryAddress] {
	return pulumix.Output[RouterOspfSummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfSummaryAddressOutput) Advertise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *string { return v.Advertise }).(pulumi.StringPtrOutput)
}

func (o RouterOspfSummaryAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterOspfSummaryAddressOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouterOspfSummaryAddressOutput) Tag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterOspfSummaryAddress) *int { return v.Tag }).(pulumi.IntPtrOutput)
}

type RouterOspfSummaryAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterOspfSummaryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterOspfSummaryAddress)(nil)).Elem()
}

func (o RouterOspfSummaryAddressArrayOutput) ToRouterOspfSummaryAddressArrayOutput() RouterOspfSummaryAddressArrayOutput {
	return o
}

func (o RouterOspfSummaryAddressArrayOutput) ToRouterOspfSummaryAddressArrayOutputWithContext(ctx context.Context) RouterOspfSummaryAddressArrayOutput {
	return o
}

func (o RouterOspfSummaryAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterOspfSummaryAddress] {
	return pulumix.Output[[]RouterOspfSummaryAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterOspfSummaryAddressArrayOutput) Index(i pulumi.IntInput) RouterOspfSummaryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterOspfSummaryAddress {
		return vs[0].([]RouterOspfSummaryAddress)[vs[1].(int)]
	}).(RouterOspfSummaryAddressOutput)
}

type RouterPolicy6Dstaddr struct {
	Name *string `pulumi:"name"`
}

// RouterPolicy6DstaddrInput is an input type that accepts RouterPolicy6DstaddrArgs and RouterPolicy6DstaddrOutput values.
// You can construct a concrete instance of `RouterPolicy6DstaddrInput` via:
//
//	RouterPolicy6DstaddrArgs{...}
type RouterPolicy6DstaddrInput interface {
	pulumi.Input

	ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput
	ToRouterPolicy6DstaddrOutputWithContext(context.Context) RouterPolicy6DstaddrOutput
}

type RouterPolicy6DstaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6DstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Dstaddr)(nil)).Elem()
}

func (i RouterPolicy6DstaddrArgs) ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput {
	return i.ToRouterPolicy6DstaddrOutputWithContext(context.Background())
}

func (i RouterPolicy6DstaddrArgs) ToRouterPolicy6DstaddrOutputWithContext(ctx context.Context) RouterPolicy6DstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6DstaddrOutput)
}

func (i RouterPolicy6DstaddrArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6Dstaddr] {
	return pulumix.Output[RouterPolicy6Dstaddr]{
		OutputState: i.ToRouterPolicy6DstaddrOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicy6DstaddrArrayInput is an input type that accepts RouterPolicy6DstaddrArray and RouterPolicy6DstaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6DstaddrArrayInput` via:
//
//	RouterPolicy6DstaddrArray{ RouterPolicy6DstaddrArgs{...} }
type RouterPolicy6DstaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput
	ToRouterPolicy6DstaddrArrayOutputWithContext(context.Context) RouterPolicy6DstaddrArrayOutput
}

type RouterPolicy6DstaddrArray []RouterPolicy6DstaddrInput

func (RouterPolicy6DstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Dstaddr)(nil)).Elem()
}

func (i RouterPolicy6DstaddrArray) ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput {
	return i.ToRouterPolicy6DstaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6DstaddrArray) ToRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6DstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6DstaddrArrayOutput)
}

func (i RouterPolicy6DstaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6Dstaddr] {
	return pulumix.Output[[]RouterPolicy6Dstaddr]{
		OutputState: i.ToRouterPolicy6DstaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicy6DstaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicy6DstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Dstaddr)(nil)).Elem()
}

func (o RouterPolicy6DstaddrOutput) ToRouterPolicy6DstaddrOutput() RouterPolicy6DstaddrOutput {
	return o
}

func (o RouterPolicy6DstaddrOutput) ToRouterPolicy6DstaddrOutputWithContext(ctx context.Context) RouterPolicy6DstaddrOutput {
	return o
}

func (o RouterPolicy6DstaddrOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6Dstaddr] {
	return pulumix.Output[RouterPolicy6Dstaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6DstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6Dstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6DstaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6DstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Dstaddr)(nil)).Elem()
}

func (o RouterPolicy6DstaddrArrayOutput) ToRouterPolicy6DstaddrArrayOutput() RouterPolicy6DstaddrArrayOutput {
	return o
}

func (o RouterPolicy6DstaddrArrayOutput) ToRouterPolicy6DstaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6DstaddrArrayOutput {
	return o
}

func (o RouterPolicy6DstaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6Dstaddr] {
	return pulumix.Output[[]RouterPolicy6Dstaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6DstaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicy6DstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6Dstaddr {
		return vs[0].([]RouterPolicy6Dstaddr)[vs[1].(int)]
	}).(RouterPolicy6DstaddrOutput)
}

type RouterPolicy6InternetServiceCustom struct {
	Name *string `pulumi:"name"`
}

// RouterPolicy6InternetServiceCustomInput is an input type that accepts RouterPolicy6InternetServiceCustomArgs and RouterPolicy6InternetServiceCustomOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceCustomInput` via:
//
//	RouterPolicy6InternetServiceCustomArgs{...}
type RouterPolicy6InternetServiceCustomInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput
	ToRouterPolicy6InternetServiceCustomOutputWithContext(context.Context) RouterPolicy6InternetServiceCustomOutput
}

type RouterPolicy6InternetServiceCustomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6InternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceCustomArgs) ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput {
	return i.ToRouterPolicy6InternetServiceCustomOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceCustomArgs) ToRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceCustomOutput)
}

func (i RouterPolicy6InternetServiceCustomArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6InternetServiceCustom] {
	return pulumix.Output[RouterPolicy6InternetServiceCustom]{
		OutputState: i.ToRouterPolicy6InternetServiceCustomOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicy6InternetServiceCustomArrayInput is an input type that accepts RouterPolicy6InternetServiceCustomArray and RouterPolicy6InternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceCustomArrayInput` via:
//
//	RouterPolicy6InternetServiceCustomArray{ RouterPolicy6InternetServiceCustomArgs{...} }
type RouterPolicy6InternetServiceCustomArrayInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput
	ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Context) RouterPolicy6InternetServiceCustomArrayOutput
}

type RouterPolicy6InternetServiceCustomArray []RouterPolicy6InternetServiceCustomInput

func (RouterPolicy6InternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceCustomArray) ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput {
	return i.ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceCustomArray) ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceCustomArrayOutput)
}

func (i RouterPolicy6InternetServiceCustomArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6InternetServiceCustom] {
	return pulumix.Output[[]RouterPolicy6InternetServiceCustom]{
		OutputState: i.ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicy6InternetServiceCustomOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceCustomOutput) ToRouterPolicy6InternetServiceCustomOutput() RouterPolicy6InternetServiceCustomOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomOutput) ToRouterPolicy6InternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6InternetServiceCustom] {
	return pulumix.Output[RouterPolicy6InternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6InternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6InternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6InternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) ToRouterPolicy6InternetServiceCustomArrayOutput() RouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) ToRouterPolicy6InternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6InternetServiceCustom] {
	return pulumix.Output[[]RouterPolicy6InternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6InternetServiceCustomArrayOutput) Index(i pulumi.IntInput) RouterPolicy6InternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6InternetServiceCustom {
		return vs[0].([]RouterPolicy6InternetServiceCustom)[vs[1].(int)]
	}).(RouterPolicy6InternetServiceCustomOutput)
}

type RouterPolicy6InternetServiceId struct {
	Id *int `pulumi:"id"`
}

// RouterPolicy6InternetServiceIdInput is an input type that accepts RouterPolicy6InternetServiceIdArgs and RouterPolicy6InternetServiceIdOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceIdInput` via:
//
//	RouterPolicy6InternetServiceIdArgs{...}
type RouterPolicy6InternetServiceIdInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput
	ToRouterPolicy6InternetServiceIdOutputWithContext(context.Context) RouterPolicy6InternetServiceIdOutput
}

type RouterPolicy6InternetServiceIdArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (RouterPolicy6InternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceIdArgs) ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput {
	return i.ToRouterPolicy6InternetServiceIdOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceIdArgs) ToRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceIdOutput)
}

func (i RouterPolicy6InternetServiceIdArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6InternetServiceId] {
	return pulumix.Output[RouterPolicy6InternetServiceId]{
		OutputState: i.ToRouterPolicy6InternetServiceIdOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicy6InternetServiceIdArrayInput is an input type that accepts RouterPolicy6InternetServiceIdArray and RouterPolicy6InternetServiceIdArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6InternetServiceIdArrayInput` via:
//
//	RouterPolicy6InternetServiceIdArray{ RouterPolicy6InternetServiceIdArgs{...} }
type RouterPolicy6InternetServiceIdArrayInput interface {
	pulumi.Input

	ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput
	ToRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Context) RouterPolicy6InternetServiceIdArrayOutput
}

type RouterPolicy6InternetServiceIdArray []RouterPolicy6InternetServiceIdInput

func (RouterPolicy6InternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (i RouterPolicy6InternetServiceIdArray) ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput {
	return i.ToRouterPolicy6InternetServiceIdArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6InternetServiceIdArray) ToRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6InternetServiceIdArrayOutput)
}

func (i RouterPolicy6InternetServiceIdArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6InternetServiceId] {
	return pulumix.Output[[]RouterPolicy6InternetServiceId]{
		OutputState: i.ToRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicy6InternetServiceIdOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceIdOutput) ToRouterPolicy6InternetServiceIdOutput() RouterPolicy6InternetServiceIdOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdOutput) ToRouterPolicy6InternetServiceIdOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6InternetServiceId] {
	return pulumix.Output[RouterPolicy6InternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6InternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPolicy6InternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type RouterPolicy6InternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6InternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6InternetServiceId)(nil)).Elem()
}

func (o RouterPolicy6InternetServiceIdArrayOutput) ToRouterPolicy6InternetServiceIdArrayOutput() RouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdArrayOutput) ToRouterPolicy6InternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicy6InternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicy6InternetServiceIdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6InternetServiceId] {
	return pulumix.Output[[]RouterPolicy6InternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6InternetServiceIdArrayOutput) Index(i pulumi.IntInput) RouterPolicy6InternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6InternetServiceId {
		return vs[0].([]RouterPolicy6InternetServiceId)[vs[1].(int)]
	}).(RouterPolicy6InternetServiceIdOutput)
}

type RouterPolicy6Srcaddr struct {
	Name *string `pulumi:"name"`
}

// RouterPolicy6SrcaddrInput is an input type that accepts RouterPolicy6SrcaddrArgs and RouterPolicy6SrcaddrOutput values.
// You can construct a concrete instance of `RouterPolicy6SrcaddrInput` via:
//
//	RouterPolicy6SrcaddrArgs{...}
type RouterPolicy6SrcaddrInput interface {
	pulumi.Input

	ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput
	ToRouterPolicy6SrcaddrOutputWithContext(context.Context) RouterPolicy6SrcaddrOutput
}

type RouterPolicy6SrcaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicy6SrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Srcaddr)(nil)).Elem()
}

func (i RouterPolicy6SrcaddrArgs) ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput {
	return i.ToRouterPolicy6SrcaddrOutputWithContext(context.Background())
}

func (i RouterPolicy6SrcaddrArgs) ToRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6SrcaddrOutput)
}

func (i RouterPolicy6SrcaddrArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6Srcaddr] {
	return pulumix.Output[RouterPolicy6Srcaddr]{
		OutputState: i.ToRouterPolicy6SrcaddrOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicy6SrcaddrArrayInput is an input type that accepts RouterPolicy6SrcaddrArray and RouterPolicy6SrcaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicy6SrcaddrArrayInput` via:
//
//	RouterPolicy6SrcaddrArray{ RouterPolicy6SrcaddrArgs{...} }
type RouterPolicy6SrcaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput
	ToRouterPolicy6SrcaddrArrayOutputWithContext(context.Context) RouterPolicy6SrcaddrArrayOutput
}

type RouterPolicy6SrcaddrArray []RouterPolicy6SrcaddrInput

func (RouterPolicy6SrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Srcaddr)(nil)).Elem()
}

func (i RouterPolicy6SrcaddrArray) ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput {
	return i.ToRouterPolicy6SrcaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicy6SrcaddrArray) ToRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicy6SrcaddrArrayOutput)
}

func (i RouterPolicy6SrcaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6Srcaddr] {
	return pulumix.Output[[]RouterPolicy6Srcaddr]{
		OutputState: i.ToRouterPolicy6SrcaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicy6SrcaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicy6SrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicy6Srcaddr)(nil)).Elem()
}

func (o RouterPolicy6SrcaddrOutput) ToRouterPolicy6SrcaddrOutput() RouterPolicy6SrcaddrOutput {
	return o
}

func (o RouterPolicy6SrcaddrOutput) ToRouterPolicy6SrcaddrOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrOutput {
	return o
}

func (o RouterPolicy6SrcaddrOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicy6Srcaddr] {
	return pulumix.Output[RouterPolicy6Srcaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6SrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicy6Srcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicy6SrcaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicy6SrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicy6Srcaddr)(nil)).Elem()
}

func (o RouterPolicy6SrcaddrArrayOutput) ToRouterPolicy6SrcaddrArrayOutput() RouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o RouterPolicy6SrcaddrArrayOutput) ToRouterPolicy6SrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicy6SrcaddrArrayOutput {
	return o
}

func (o RouterPolicy6SrcaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicy6Srcaddr] {
	return pulumix.Output[[]RouterPolicy6Srcaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicy6SrcaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicy6SrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicy6Srcaddr {
		return vs[0].([]RouterPolicy6Srcaddr)[vs[1].(int)]
	}).(RouterPolicy6SrcaddrOutput)
}

type RouterPolicyDst struct {
	Subnet *string `pulumi:"subnet"`
}

// RouterPolicyDstInput is an input type that accepts RouterPolicyDstArgs and RouterPolicyDstOutput values.
// You can construct a concrete instance of `RouterPolicyDstInput` via:
//
//	RouterPolicyDstArgs{...}
type RouterPolicyDstInput interface {
	pulumi.Input

	ToRouterPolicyDstOutput() RouterPolicyDstOutput
	ToRouterPolicyDstOutputWithContext(context.Context) RouterPolicyDstOutput
}

type RouterPolicyDstArgs struct {
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (RouterPolicyDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDst)(nil)).Elem()
}

func (i RouterPolicyDstArgs) ToRouterPolicyDstOutput() RouterPolicyDstOutput {
	return i.ToRouterPolicyDstOutputWithContext(context.Background())
}

func (i RouterPolicyDstArgs) ToRouterPolicyDstOutputWithContext(ctx context.Context) RouterPolicyDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstOutput)
}

func (i RouterPolicyDstArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyDst] {
	return pulumix.Output[RouterPolicyDst]{
		OutputState: i.ToRouterPolicyDstOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicyDstArrayInput is an input type that accepts RouterPolicyDstArray and RouterPolicyDstArrayOutput values.
// You can construct a concrete instance of `RouterPolicyDstArrayInput` via:
//
//	RouterPolicyDstArray{ RouterPolicyDstArgs{...} }
type RouterPolicyDstArrayInput interface {
	pulumi.Input

	ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput
	ToRouterPolicyDstArrayOutputWithContext(context.Context) RouterPolicyDstArrayOutput
}

type RouterPolicyDstArray []RouterPolicyDstInput

func (RouterPolicyDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDst)(nil)).Elem()
}

func (i RouterPolicyDstArray) ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput {
	return i.ToRouterPolicyDstArrayOutputWithContext(context.Background())
}

func (i RouterPolicyDstArray) ToRouterPolicyDstArrayOutputWithContext(ctx context.Context) RouterPolicyDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstArrayOutput)
}

func (i RouterPolicyDstArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyDst] {
	return pulumix.Output[[]RouterPolicyDst]{
		OutputState: i.ToRouterPolicyDstArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicyDstOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDst)(nil)).Elem()
}

func (o RouterPolicyDstOutput) ToRouterPolicyDstOutput() RouterPolicyDstOutput {
	return o
}

func (o RouterPolicyDstOutput) ToRouterPolicyDstOutputWithContext(ctx context.Context) RouterPolicyDstOutput {
	return o
}

func (o RouterPolicyDstOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyDst] {
	return pulumix.Output[RouterPolicyDst]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyDstOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyDst) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type RouterPolicyDstArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDst)(nil)).Elem()
}

func (o RouterPolicyDstArrayOutput) ToRouterPolicyDstArrayOutput() RouterPolicyDstArrayOutput {
	return o
}

func (o RouterPolicyDstArrayOutput) ToRouterPolicyDstArrayOutputWithContext(ctx context.Context) RouterPolicyDstArrayOutput {
	return o
}

func (o RouterPolicyDstArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyDst] {
	return pulumix.Output[[]RouterPolicyDst]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyDstArrayOutput) Index(i pulumi.IntInput) RouterPolicyDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyDst {
		return vs[0].([]RouterPolicyDst)[vs[1].(int)]
	}).(RouterPolicyDstOutput)
}

type RouterPolicyDstaddr struct {
	Name *string `pulumi:"name"`
}

// RouterPolicyDstaddrInput is an input type that accepts RouterPolicyDstaddrArgs and RouterPolicyDstaddrOutput values.
// You can construct a concrete instance of `RouterPolicyDstaddrInput` via:
//
//	RouterPolicyDstaddrArgs{...}
type RouterPolicyDstaddrInput interface {
	pulumi.Input

	ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput
	ToRouterPolicyDstaddrOutputWithContext(context.Context) RouterPolicyDstaddrOutput
}

type RouterPolicyDstaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDstaddr)(nil)).Elem()
}

func (i RouterPolicyDstaddrArgs) ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput {
	return i.ToRouterPolicyDstaddrOutputWithContext(context.Background())
}

func (i RouterPolicyDstaddrArgs) ToRouterPolicyDstaddrOutputWithContext(ctx context.Context) RouterPolicyDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstaddrOutput)
}

func (i RouterPolicyDstaddrArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyDstaddr] {
	return pulumix.Output[RouterPolicyDstaddr]{
		OutputState: i.ToRouterPolicyDstaddrOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicyDstaddrArrayInput is an input type that accepts RouterPolicyDstaddrArray and RouterPolicyDstaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicyDstaddrArrayInput` via:
//
//	RouterPolicyDstaddrArray{ RouterPolicyDstaddrArgs{...} }
type RouterPolicyDstaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput
	ToRouterPolicyDstaddrArrayOutputWithContext(context.Context) RouterPolicyDstaddrArrayOutput
}

type RouterPolicyDstaddrArray []RouterPolicyDstaddrInput

func (RouterPolicyDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDstaddr)(nil)).Elem()
}

func (i RouterPolicyDstaddrArray) ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput {
	return i.ToRouterPolicyDstaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicyDstaddrArray) ToRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) RouterPolicyDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyDstaddrArrayOutput)
}

func (i RouterPolicyDstaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyDstaddr] {
	return pulumix.Output[[]RouterPolicyDstaddr]{
		OutputState: i.ToRouterPolicyDstaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicyDstaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyDstaddr)(nil)).Elem()
}

func (o RouterPolicyDstaddrOutput) ToRouterPolicyDstaddrOutput() RouterPolicyDstaddrOutput {
	return o
}

func (o RouterPolicyDstaddrOutput) ToRouterPolicyDstaddrOutputWithContext(ctx context.Context) RouterPolicyDstaddrOutput {
	return o
}

func (o RouterPolicyDstaddrOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyDstaddr] {
	return pulumix.Output[RouterPolicyDstaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyDstaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyDstaddr)(nil)).Elem()
}

func (o RouterPolicyDstaddrArrayOutput) ToRouterPolicyDstaddrArrayOutput() RouterPolicyDstaddrArrayOutput {
	return o
}

func (o RouterPolicyDstaddrArrayOutput) ToRouterPolicyDstaddrArrayOutputWithContext(ctx context.Context) RouterPolicyDstaddrArrayOutput {
	return o
}

func (o RouterPolicyDstaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyDstaddr] {
	return pulumix.Output[[]RouterPolicyDstaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyDstaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicyDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyDstaddr {
		return vs[0].([]RouterPolicyDstaddr)[vs[1].(int)]
	}).(RouterPolicyDstaddrOutput)
}

type RouterPolicyInputDevice struct {
	Name *string `pulumi:"name"`
}

// RouterPolicyInputDeviceInput is an input type that accepts RouterPolicyInputDeviceArgs and RouterPolicyInputDeviceOutput values.
// You can construct a concrete instance of `RouterPolicyInputDeviceInput` via:
//
//	RouterPolicyInputDeviceArgs{...}
type RouterPolicyInputDeviceInput interface {
	pulumi.Input

	ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput
	ToRouterPolicyInputDeviceOutputWithContext(context.Context) RouterPolicyInputDeviceOutput
}

type RouterPolicyInputDeviceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInputDevice)(nil)).Elem()
}

func (i RouterPolicyInputDeviceArgs) ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput {
	return i.ToRouterPolicyInputDeviceOutputWithContext(context.Background())
}

func (i RouterPolicyInputDeviceArgs) ToRouterPolicyInputDeviceOutputWithContext(ctx context.Context) RouterPolicyInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInputDeviceOutput)
}

func (i RouterPolicyInputDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInputDevice] {
	return pulumix.Output[RouterPolicyInputDevice]{
		OutputState: i.ToRouterPolicyInputDeviceOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicyInputDeviceArrayInput is an input type that accepts RouterPolicyInputDeviceArray and RouterPolicyInputDeviceArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInputDeviceArrayInput` via:
//
//	RouterPolicyInputDeviceArray{ RouterPolicyInputDeviceArgs{...} }
type RouterPolicyInputDeviceArrayInput interface {
	pulumi.Input

	ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput
	ToRouterPolicyInputDeviceArrayOutputWithContext(context.Context) RouterPolicyInputDeviceArrayOutput
}

type RouterPolicyInputDeviceArray []RouterPolicyInputDeviceInput

func (RouterPolicyInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInputDevice)(nil)).Elem()
}

func (i RouterPolicyInputDeviceArray) ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput {
	return i.ToRouterPolicyInputDeviceArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInputDeviceArray) ToRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) RouterPolicyInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInputDeviceArrayOutput)
}

func (i RouterPolicyInputDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInputDevice] {
	return pulumix.Output[[]RouterPolicyInputDevice]{
		OutputState: i.ToRouterPolicyInputDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicyInputDeviceOutput struct{ *pulumi.OutputState }

func (RouterPolicyInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInputDevice)(nil)).Elem()
}

func (o RouterPolicyInputDeviceOutput) ToRouterPolicyInputDeviceOutput() RouterPolicyInputDeviceOutput {
	return o
}

func (o RouterPolicyInputDeviceOutput) ToRouterPolicyInputDeviceOutputWithContext(ctx context.Context) RouterPolicyInputDeviceOutput {
	return o
}

func (o RouterPolicyInputDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInputDevice] {
	return pulumix.Output[RouterPolicyInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInputDevice)(nil)).Elem()
}

func (o RouterPolicyInputDeviceArrayOutput) ToRouterPolicyInputDeviceArrayOutput() RouterPolicyInputDeviceArrayOutput {
	return o
}

func (o RouterPolicyInputDeviceArrayOutput) ToRouterPolicyInputDeviceArrayOutputWithContext(ctx context.Context) RouterPolicyInputDeviceArrayOutput {
	return o
}

func (o RouterPolicyInputDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInputDevice] {
	return pulumix.Output[[]RouterPolicyInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInputDeviceArrayOutput) Index(i pulumi.IntInput) RouterPolicyInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInputDevice {
		return vs[0].([]RouterPolicyInputDevice)[vs[1].(int)]
	}).(RouterPolicyInputDeviceOutput)
}

type RouterPolicyInternetServiceCustom struct {
	Name *string `pulumi:"name"`
}

// RouterPolicyInternetServiceCustomInput is an input type that accepts RouterPolicyInternetServiceCustomArgs and RouterPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceCustomInput` via:
//
//	RouterPolicyInternetServiceCustomArgs{...}
type RouterPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput
	ToRouterPolicyInternetServiceCustomOutputWithContext(context.Context) RouterPolicyInternetServiceCustomOutput
}

type RouterPolicyInternetServiceCustomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicyInternetServiceCustomArgs) ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput {
	return i.ToRouterPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceCustomArgs) ToRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceCustomOutput)
}

func (i RouterPolicyInternetServiceCustomArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInternetServiceCustom] {
	return pulumix.Output[RouterPolicyInternetServiceCustom]{
		OutputState: i.ToRouterPolicyInternetServiceCustomOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicyInternetServiceCustomArrayInput is an input type that accepts RouterPolicyInternetServiceCustomArray and RouterPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceCustomArrayInput` via:
//
//	RouterPolicyInternetServiceCustomArray{ RouterPolicyInternetServiceCustomArgs{...} }
type RouterPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput
	ToRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Context) RouterPolicyInternetServiceCustomArrayOutput
}

type RouterPolicyInternetServiceCustomArray []RouterPolicyInternetServiceCustomInput

func (RouterPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (i RouterPolicyInternetServiceCustomArray) ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput {
	return i.ToRouterPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceCustomArray) ToRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceCustomArrayOutput)
}

func (i RouterPolicyInternetServiceCustomArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInternetServiceCustom] {
	return pulumix.Output[[]RouterPolicyInternetServiceCustom]{
		OutputState: i.ToRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicyInternetServiceCustomOutput) ToRouterPolicyInternetServiceCustomOutput() RouterPolicyInternetServiceCustomOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomOutput) ToRouterPolicyInternetServiceCustomOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInternetServiceCustom] {
	return pulumix.Output[RouterPolicyInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceCustom)(nil)).Elem()
}

func (o RouterPolicyInternetServiceCustomArrayOutput) ToRouterPolicyInternetServiceCustomArrayOutput() RouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomArrayOutput) ToRouterPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceCustomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInternetServiceCustom] {
	return pulumix.Output[[]RouterPolicyInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) RouterPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInternetServiceCustom {
		return vs[0].([]RouterPolicyInternetServiceCustom)[vs[1].(int)]
	}).(RouterPolicyInternetServiceCustomOutput)
}

type RouterPolicyInternetServiceId struct {
	Id *int `pulumi:"id"`
}

// RouterPolicyInternetServiceIdInput is an input type that accepts RouterPolicyInternetServiceIdArgs and RouterPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceIdInput` via:
//
//	RouterPolicyInternetServiceIdArgs{...}
type RouterPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput
	ToRouterPolicyInternetServiceIdOutputWithContext(context.Context) RouterPolicyInternetServiceIdOutput
}

type RouterPolicyInternetServiceIdArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (RouterPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceId)(nil)).Elem()
}

func (i RouterPolicyInternetServiceIdArgs) ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput {
	return i.ToRouterPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceIdArgs) ToRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceIdOutput)
}

func (i RouterPolicyInternetServiceIdArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInternetServiceId] {
	return pulumix.Output[RouterPolicyInternetServiceId]{
		OutputState: i.ToRouterPolicyInternetServiceIdOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicyInternetServiceIdArrayInput is an input type that accepts RouterPolicyInternetServiceIdArray and RouterPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `RouterPolicyInternetServiceIdArrayInput` via:
//
//	RouterPolicyInternetServiceIdArray{ RouterPolicyInternetServiceIdArgs{...} }
type RouterPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput
	ToRouterPolicyInternetServiceIdArrayOutputWithContext(context.Context) RouterPolicyInternetServiceIdArrayOutput
}

type RouterPolicyInternetServiceIdArray []RouterPolicyInternetServiceIdInput

func (RouterPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceId)(nil)).Elem()
}

func (i RouterPolicyInternetServiceIdArray) ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput {
	return i.ToRouterPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i RouterPolicyInternetServiceIdArray) ToRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicyInternetServiceIdArrayOutput)
}

func (i RouterPolicyInternetServiceIdArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInternetServiceId] {
	return pulumix.Output[[]RouterPolicyInternetServiceId]{
		OutputState: i.ToRouterPolicyInternetServiceIdArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicyInternetServiceId)(nil)).Elem()
}

func (o RouterPolicyInternetServiceIdOutput) ToRouterPolicyInternetServiceIdOutput() RouterPolicyInternetServiceIdOutput {
	return o
}

func (o RouterPolicyInternetServiceIdOutput) ToRouterPolicyInternetServiceIdOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdOutput {
	return o
}

func (o RouterPolicyInternetServiceIdOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicyInternetServiceId] {
	return pulumix.Output[RouterPolicyInternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type RouterPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicyInternetServiceId)(nil)).Elem()
}

func (o RouterPolicyInternetServiceIdArrayOutput) ToRouterPolicyInternetServiceIdArrayOutput() RouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceIdArrayOutput) ToRouterPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) RouterPolicyInternetServiceIdArrayOutput {
	return o
}

func (o RouterPolicyInternetServiceIdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicyInternetServiceId] {
	return pulumix.Output[[]RouterPolicyInternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) RouterPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicyInternetServiceId {
		return vs[0].([]RouterPolicyInternetServiceId)[vs[1].(int)]
	}).(RouterPolicyInternetServiceIdOutput)
}

type RouterPolicySrc struct {
	Subnet *string `pulumi:"subnet"`
}

// RouterPolicySrcInput is an input type that accepts RouterPolicySrcArgs and RouterPolicySrcOutput values.
// You can construct a concrete instance of `RouterPolicySrcInput` via:
//
//	RouterPolicySrcArgs{...}
type RouterPolicySrcInput interface {
	pulumi.Input

	ToRouterPolicySrcOutput() RouterPolicySrcOutput
	ToRouterPolicySrcOutputWithContext(context.Context) RouterPolicySrcOutput
}

type RouterPolicySrcArgs struct {
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (RouterPolicySrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrc)(nil)).Elem()
}

func (i RouterPolicySrcArgs) ToRouterPolicySrcOutput() RouterPolicySrcOutput {
	return i.ToRouterPolicySrcOutputWithContext(context.Background())
}

func (i RouterPolicySrcArgs) ToRouterPolicySrcOutputWithContext(ctx context.Context) RouterPolicySrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcOutput)
}

func (i RouterPolicySrcArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicySrc] {
	return pulumix.Output[RouterPolicySrc]{
		OutputState: i.ToRouterPolicySrcOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicySrcArrayInput is an input type that accepts RouterPolicySrcArray and RouterPolicySrcArrayOutput values.
// You can construct a concrete instance of `RouterPolicySrcArrayInput` via:
//
//	RouterPolicySrcArray{ RouterPolicySrcArgs{...} }
type RouterPolicySrcArrayInput interface {
	pulumi.Input

	ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput
	ToRouterPolicySrcArrayOutputWithContext(context.Context) RouterPolicySrcArrayOutput
}

type RouterPolicySrcArray []RouterPolicySrcInput

func (RouterPolicySrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrc)(nil)).Elem()
}

func (i RouterPolicySrcArray) ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput {
	return i.ToRouterPolicySrcArrayOutputWithContext(context.Background())
}

func (i RouterPolicySrcArray) ToRouterPolicySrcArrayOutputWithContext(ctx context.Context) RouterPolicySrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcArrayOutput)
}

func (i RouterPolicySrcArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicySrc] {
	return pulumix.Output[[]RouterPolicySrc]{
		OutputState: i.ToRouterPolicySrcArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicySrcOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrc)(nil)).Elem()
}

func (o RouterPolicySrcOutput) ToRouterPolicySrcOutput() RouterPolicySrcOutput {
	return o
}

func (o RouterPolicySrcOutput) ToRouterPolicySrcOutputWithContext(ctx context.Context) RouterPolicySrcOutput {
	return o
}

func (o RouterPolicySrcOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicySrc] {
	return pulumix.Output[RouterPolicySrc]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicySrcOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicySrc) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type RouterPolicySrcArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrc)(nil)).Elem()
}

func (o RouterPolicySrcArrayOutput) ToRouterPolicySrcArrayOutput() RouterPolicySrcArrayOutput {
	return o
}

func (o RouterPolicySrcArrayOutput) ToRouterPolicySrcArrayOutputWithContext(ctx context.Context) RouterPolicySrcArrayOutput {
	return o
}

func (o RouterPolicySrcArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicySrc] {
	return pulumix.Output[[]RouterPolicySrc]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicySrcArrayOutput) Index(i pulumi.IntInput) RouterPolicySrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicySrc {
		return vs[0].([]RouterPolicySrc)[vs[1].(int)]
	}).(RouterPolicySrcOutput)
}

type RouterPolicySrcaddr struct {
	Name *string `pulumi:"name"`
}

// RouterPolicySrcaddrInput is an input type that accepts RouterPolicySrcaddrArgs and RouterPolicySrcaddrOutput values.
// You can construct a concrete instance of `RouterPolicySrcaddrInput` via:
//
//	RouterPolicySrcaddrArgs{...}
type RouterPolicySrcaddrInput interface {
	pulumi.Input

	ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput
	ToRouterPolicySrcaddrOutputWithContext(context.Context) RouterPolicySrcaddrOutput
}

type RouterPolicySrcaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterPolicySrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrcaddr)(nil)).Elem()
}

func (i RouterPolicySrcaddrArgs) ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput {
	return i.ToRouterPolicySrcaddrOutputWithContext(context.Background())
}

func (i RouterPolicySrcaddrArgs) ToRouterPolicySrcaddrOutputWithContext(ctx context.Context) RouterPolicySrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcaddrOutput)
}

func (i RouterPolicySrcaddrArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPolicySrcaddr] {
	return pulumix.Output[RouterPolicySrcaddr]{
		OutputState: i.ToRouterPolicySrcaddrOutputWithContext(ctx).OutputState,
	}
}

// RouterPolicySrcaddrArrayInput is an input type that accepts RouterPolicySrcaddrArray and RouterPolicySrcaddrArrayOutput values.
// You can construct a concrete instance of `RouterPolicySrcaddrArrayInput` via:
//
//	RouterPolicySrcaddrArray{ RouterPolicySrcaddrArgs{...} }
type RouterPolicySrcaddrArrayInput interface {
	pulumi.Input

	ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput
	ToRouterPolicySrcaddrArrayOutputWithContext(context.Context) RouterPolicySrcaddrArrayOutput
}

type RouterPolicySrcaddrArray []RouterPolicySrcaddrInput

func (RouterPolicySrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrcaddr)(nil)).Elem()
}

func (i RouterPolicySrcaddrArray) ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput {
	return i.ToRouterPolicySrcaddrArrayOutputWithContext(context.Background())
}

func (i RouterPolicySrcaddrArray) ToRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicySrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPolicySrcaddrArrayOutput)
}

func (i RouterPolicySrcaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicySrcaddr] {
	return pulumix.Output[[]RouterPolicySrcaddr]{
		OutputState: i.ToRouterPolicySrcaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPolicySrcaddrOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPolicySrcaddr)(nil)).Elem()
}

func (o RouterPolicySrcaddrOutput) ToRouterPolicySrcaddrOutput() RouterPolicySrcaddrOutput {
	return o
}

func (o RouterPolicySrcaddrOutput) ToRouterPolicySrcaddrOutputWithContext(ctx context.Context) RouterPolicySrcaddrOutput {
	return o
}

func (o RouterPolicySrcaddrOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPolicySrcaddr] {
	return pulumix.Output[RouterPolicySrcaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicySrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPolicySrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterPolicySrcaddrArrayOutput struct{ *pulumi.OutputState }

func (RouterPolicySrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPolicySrcaddr)(nil)).Elem()
}

func (o RouterPolicySrcaddrArrayOutput) ToRouterPolicySrcaddrArrayOutput() RouterPolicySrcaddrArrayOutput {
	return o
}

func (o RouterPolicySrcaddrArrayOutput) ToRouterPolicySrcaddrArrayOutputWithContext(ctx context.Context) RouterPolicySrcaddrArrayOutput {
	return o
}

func (o RouterPolicySrcaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPolicySrcaddr] {
	return pulumix.Output[[]RouterPolicySrcaddr]{
		OutputState: o.OutputState,
	}
}

func (o RouterPolicySrcaddrArrayOutput) Index(i pulumi.IntInput) RouterPolicySrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPolicySrcaddr {
		return vs[0].([]RouterPolicySrcaddr)[vs[1].(int)]
	}).(RouterPolicySrcaddrOutput)
}

type RouterPrefixList6Rule struct {
	Action  *string `pulumi:"action"`
	Flags   *int    `pulumi:"flags"`
	Ge      *int    `pulumi:"ge"`
	Id      *int    `pulumi:"id"`
	Le      *int    `pulumi:"le"`
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterPrefixList6RuleInput is an input type that accepts RouterPrefixList6RuleArgs and RouterPrefixList6RuleOutput values.
// You can construct a concrete instance of `RouterPrefixList6RuleInput` via:
//
//	RouterPrefixList6RuleArgs{...}
type RouterPrefixList6RuleInput interface {
	pulumi.Input

	ToRouterPrefixList6RuleOutput() RouterPrefixList6RuleOutput
	ToRouterPrefixList6RuleOutputWithContext(context.Context) RouterPrefixList6RuleOutput
}

type RouterPrefixList6RuleArgs struct {
	Action  pulumi.StringPtrInput `pulumi:"action"`
	Flags   pulumi.IntPtrInput    `pulumi:"flags"`
	Ge      pulumi.IntPtrInput    `pulumi:"ge"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	Le      pulumi.IntPtrInput    `pulumi:"le"`
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterPrefixList6RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixList6Rule)(nil)).Elem()
}

func (i RouterPrefixList6RuleArgs) ToRouterPrefixList6RuleOutput() RouterPrefixList6RuleOutput {
	return i.ToRouterPrefixList6RuleOutputWithContext(context.Background())
}

func (i RouterPrefixList6RuleArgs) ToRouterPrefixList6RuleOutputWithContext(ctx context.Context) RouterPrefixList6RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6RuleOutput)
}

func (i RouterPrefixList6RuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPrefixList6Rule] {
	return pulumix.Output[RouterPrefixList6Rule]{
		OutputState: i.ToRouterPrefixList6RuleOutputWithContext(ctx).OutputState,
	}
}

// RouterPrefixList6RuleArrayInput is an input type that accepts RouterPrefixList6RuleArray and RouterPrefixList6RuleArrayOutput values.
// You can construct a concrete instance of `RouterPrefixList6RuleArrayInput` via:
//
//	RouterPrefixList6RuleArray{ RouterPrefixList6RuleArgs{...} }
type RouterPrefixList6RuleArrayInput interface {
	pulumi.Input

	ToRouterPrefixList6RuleArrayOutput() RouterPrefixList6RuleArrayOutput
	ToRouterPrefixList6RuleArrayOutputWithContext(context.Context) RouterPrefixList6RuleArrayOutput
}

type RouterPrefixList6RuleArray []RouterPrefixList6RuleInput

func (RouterPrefixList6RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixList6Rule)(nil)).Elem()
}

func (i RouterPrefixList6RuleArray) ToRouterPrefixList6RuleArrayOutput() RouterPrefixList6RuleArrayOutput {
	return i.ToRouterPrefixList6RuleArrayOutputWithContext(context.Background())
}

func (i RouterPrefixList6RuleArray) ToRouterPrefixList6RuleArrayOutputWithContext(ctx context.Context) RouterPrefixList6RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6RuleArrayOutput)
}

func (i RouterPrefixList6RuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPrefixList6Rule] {
	return pulumix.Output[[]RouterPrefixList6Rule]{
		OutputState: i.ToRouterPrefixList6RuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPrefixList6RuleOutput struct{ *pulumi.OutputState }

func (RouterPrefixList6RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixList6Rule)(nil)).Elem()
}

func (o RouterPrefixList6RuleOutput) ToRouterPrefixList6RuleOutput() RouterPrefixList6RuleOutput {
	return o
}

func (o RouterPrefixList6RuleOutput) ToRouterPrefixList6RuleOutputWithContext(ctx context.Context) RouterPrefixList6RuleOutput {
	return o
}

func (o RouterPrefixList6RuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPrefixList6Rule] {
	return pulumix.Output[RouterPrefixList6Rule]{
		OutputState: o.OutputState,
	}
}

func (o RouterPrefixList6RuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterPrefixList6RuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixList6RuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixList6RuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixList6RuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixList6RuleOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixList6Rule) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterPrefixList6RuleArrayOutput struct{ *pulumi.OutputState }

func (RouterPrefixList6RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixList6Rule)(nil)).Elem()
}

func (o RouterPrefixList6RuleArrayOutput) ToRouterPrefixList6RuleArrayOutput() RouterPrefixList6RuleArrayOutput {
	return o
}

func (o RouterPrefixList6RuleArrayOutput) ToRouterPrefixList6RuleArrayOutputWithContext(ctx context.Context) RouterPrefixList6RuleArrayOutput {
	return o
}

func (o RouterPrefixList6RuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPrefixList6Rule] {
	return pulumix.Output[[]RouterPrefixList6Rule]{
		OutputState: o.OutputState,
	}
}

func (o RouterPrefixList6RuleArrayOutput) Index(i pulumi.IntInput) RouterPrefixList6RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPrefixList6Rule {
		return vs[0].([]RouterPrefixList6Rule)[vs[1].(int)]
	}).(RouterPrefixList6RuleOutput)
}

type RouterPrefixListRule struct {
	Action *string `pulumi:"action"`
	Flags  *int    `pulumi:"flags"`
	Ge     *int    `pulumi:"ge"`
	Id     *int    `pulumi:"id"`
	Le     *int    `pulumi:"le"`
	Prefix *string `pulumi:"prefix"`
}

// RouterPrefixListRuleInput is an input type that accepts RouterPrefixListRuleArgs and RouterPrefixListRuleOutput values.
// You can construct a concrete instance of `RouterPrefixListRuleInput` via:
//
//	RouterPrefixListRuleArgs{...}
type RouterPrefixListRuleInput interface {
	pulumi.Input

	ToRouterPrefixListRuleOutput() RouterPrefixListRuleOutput
	ToRouterPrefixListRuleOutputWithContext(context.Context) RouterPrefixListRuleOutput
}

type RouterPrefixListRuleArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Flags  pulumi.IntPtrInput    `pulumi:"flags"`
	Ge     pulumi.IntPtrInput    `pulumi:"ge"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Le     pulumi.IntPtrInput    `pulumi:"le"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterPrefixListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixListRule)(nil)).Elem()
}

func (i RouterPrefixListRuleArgs) ToRouterPrefixListRuleOutput() RouterPrefixListRuleOutput {
	return i.ToRouterPrefixListRuleOutputWithContext(context.Background())
}

func (i RouterPrefixListRuleArgs) ToRouterPrefixListRuleOutputWithContext(ctx context.Context) RouterPrefixListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixListRuleOutput)
}

func (i RouterPrefixListRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterPrefixListRule] {
	return pulumix.Output[RouterPrefixListRule]{
		OutputState: i.ToRouterPrefixListRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterPrefixListRuleArrayInput is an input type that accepts RouterPrefixListRuleArray and RouterPrefixListRuleArrayOutput values.
// You can construct a concrete instance of `RouterPrefixListRuleArrayInput` via:
//
//	RouterPrefixListRuleArray{ RouterPrefixListRuleArgs{...} }
type RouterPrefixListRuleArrayInput interface {
	pulumi.Input

	ToRouterPrefixListRuleArrayOutput() RouterPrefixListRuleArrayOutput
	ToRouterPrefixListRuleArrayOutputWithContext(context.Context) RouterPrefixListRuleArrayOutput
}

type RouterPrefixListRuleArray []RouterPrefixListRuleInput

func (RouterPrefixListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixListRule)(nil)).Elem()
}

func (i RouterPrefixListRuleArray) ToRouterPrefixListRuleArrayOutput() RouterPrefixListRuleArrayOutput {
	return i.ToRouterPrefixListRuleArrayOutputWithContext(context.Background())
}

func (i RouterPrefixListRuleArray) ToRouterPrefixListRuleArrayOutputWithContext(ctx context.Context) RouterPrefixListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixListRuleArrayOutput)
}

func (i RouterPrefixListRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterPrefixListRule] {
	return pulumix.Output[[]RouterPrefixListRule]{
		OutputState: i.ToRouterPrefixListRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterPrefixListRuleOutput struct{ *pulumi.OutputState }

func (RouterPrefixListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixListRule)(nil)).Elem()
}

func (o RouterPrefixListRuleOutput) ToRouterPrefixListRuleOutput() RouterPrefixListRuleOutput {
	return o
}

func (o RouterPrefixListRuleOutput) ToRouterPrefixListRuleOutputWithContext(ctx context.Context) RouterPrefixListRuleOutput {
	return o
}

func (o RouterPrefixListRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterPrefixListRule] {
	return pulumix.Output[RouterPrefixListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterPrefixListRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterPrefixListRuleOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixListRuleOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixListRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixListRuleOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *int { return v.Le }).(pulumi.IntPtrOutput)
}

func (o RouterPrefixListRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterPrefixListRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterPrefixListRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterPrefixListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixListRule)(nil)).Elem()
}

func (o RouterPrefixListRuleArrayOutput) ToRouterPrefixListRuleArrayOutput() RouterPrefixListRuleArrayOutput {
	return o
}

func (o RouterPrefixListRuleArrayOutput) ToRouterPrefixListRuleArrayOutputWithContext(ctx context.Context) RouterPrefixListRuleArrayOutput {
	return o
}

func (o RouterPrefixListRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterPrefixListRule] {
	return pulumix.Output[[]RouterPrefixListRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterPrefixListRuleArrayOutput) Index(i pulumi.IntInput) RouterPrefixListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPrefixListRule {
		return vs[0].([]RouterPrefixListRule)[vs[1].(int)]
	}).(RouterPrefixListRuleOutput)
}

type RouterRipDistance struct {
	AccessList *string `pulumi:"accessList"`
	Distance   *int    `pulumi:"distance"`
	Id         *int    `pulumi:"id"`
	Prefix     *string `pulumi:"prefix"`
}

// RouterRipDistanceInput is an input type that accepts RouterRipDistanceArgs and RouterRipDistanceOutput values.
// You can construct a concrete instance of `RouterRipDistanceInput` via:
//
//	RouterRipDistanceArgs{...}
type RouterRipDistanceInput interface {
	pulumi.Input

	ToRouterRipDistanceOutput() RouterRipDistanceOutput
	ToRouterRipDistanceOutputWithContext(context.Context) RouterRipDistanceOutput
}

type RouterRipDistanceArgs struct {
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	Distance   pulumi.IntPtrInput    `pulumi:"distance"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Prefix     pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistance)(nil)).Elem()
}

func (i RouterRipDistanceArgs) ToRouterRipDistanceOutput() RouterRipDistanceOutput {
	return i.ToRouterRipDistanceOutputWithContext(context.Background())
}

func (i RouterRipDistanceArgs) ToRouterRipDistanceOutputWithContext(ctx context.Context) RouterRipDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistanceOutput)
}

func (i RouterRipDistanceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipDistance] {
	return pulumix.Output[RouterRipDistance]{
		OutputState: i.ToRouterRipDistanceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipDistanceArrayInput is an input type that accepts RouterRipDistanceArray and RouterRipDistanceArrayOutput values.
// You can construct a concrete instance of `RouterRipDistanceArrayInput` via:
//
//	RouterRipDistanceArray{ RouterRipDistanceArgs{...} }
type RouterRipDistanceArrayInput interface {
	pulumi.Input

	ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput
	ToRouterRipDistanceArrayOutputWithContext(context.Context) RouterRipDistanceArrayOutput
}

type RouterRipDistanceArray []RouterRipDistanceInput

func (RouterRipDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistance)(nil)).Elem()
}

func (i RouterRipDistanceArray) ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput {
	return i.ToRouterRipDistanceArrayOutputWithContext(context.Background())
}

func (i RouterRipDistanceArray) ToRouterRipDistanceArrayOutputWithContext(ctx context.Context) RouterRipDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistanceArrayOutput)
}

func (i RouterRipDistanceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipDistance] {
	return pulumix.Output[[]RouterRipDistance]{
		OutputState: i.ToRouterRipDistanceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipDistanceOutput struct{ *pulumi.OutputState }

func (RouterRipDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistance)(nil)).Elem()
}

func (o RouterRipDistanceOutput) ToRouterRipDistanceOutput() RouterRipDistanceOutput {
	return o
}

func (o RouterRipDistanceOutput) ToRouterRipDistanceOutputWithContext(ctx context.Context) RouterRipDistanceOutput {
	return o
}

func (o RouterRipDistanceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipDistance] {
	return pulumix.Output[RouterRipDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipDistanceOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

func (o RouterRipDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

func (o RouterRipDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipDistanceOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistance) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistance)(nil)).Elem()
}

func (o RouterRipDistanceArrayOutput) ToRouterRipDistanceArrayOutput() RouterRipDistanceArrayOutput {
	return o
}

func (o RouterRipDistanceArrayOutput) ToRouterRipDistanceArrayOutputWithContext(ctx context.Context) RouterRipDistanceArrayOutput {
	return o
}

func (o RouterRipDistanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipDistance] {
	return pulumix.Output[[]RouterRipDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipDistanceArrayOutput) Index(i pulumi.IntInput) RouterRipDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipDistance {
		return vs[0].([]RouterRipDistance)[vs[1].(int)]
	}).(RouterRipDistanceOutput)
}

type RouterRipDistributeList struct {
	Direction *string `pulumi:"direction"`
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
	Listname  *string `pulumi:"listname"`
	Status    *string `pulumi:"status"`
}

// RouterRipDistributeListInput is an input type that accepts RouterRipDistributeListArgs and RouterRipDistributeListOutput values.
// You can construct a concrete instance of `RouterRipDistributeListInput` via:
//
//	RouterRipDistributeListArgs{...}
type RouterRipDistributeListInput interface {
	pulumi.Input

	ToRouterRipDistributeListOutput() RouterRipDistributeListOutput
	ToRouterRipDistributeListOutputWithContext(context.Context) RouterRipDistributeListOutput
}

type RouterRipDistributeListArgs struct {
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	Listname  pulumi.StringPtrInput `pulumi:"listname"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistributeList)(nil)).Elem()
}

func (i RouterRipDistributeListArgs) ToRouterRipDistributeListOutput() RouterRipDistributeListOutput {
	return i.ToRouterRipDistributeListOutputWithContext(context.Background())
}

func (i RouterRipDistributeListArgs) ToRouterRipDistributeListOutputWithContext(ctx context.Context) RouterRipDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistributeListOutput)
}

func (i RouterRipDistributeListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipDistributeList] {
	return pulumix.Output[RouterRipDistributeList]{
		OutputState: i.ToRouterRipDistributeListOutputWithContext(ctx).OutputState,
	}
}

// RouterRipDistributeListArrayInput is an input type that accepts RouterRipDistributeListArray and RouterRipDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterRipDistributeListArrayInput` via:
//
//	RouterRipDistributeListArray{ RouterRipDistributeListArgs{...} }
type RouterRipDistributeListArrayInput interface {
	pulumi.Input

	ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput
	ToRouterRipDistributeListArrayOutputWithContext(context.Context) RouterRipDistributeListArrayOutput
}

type RouterRipDistributeListArray []RouterRipDistributeListInput

func (RouterRipDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistributeList)(nil)).Elem()
}

func (i RouterRipDistributeListArray) ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput {
	return i.ToRouterRipDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterRipDistributeListArray) ToRouterRipDistributeListArrayOutputWithContext(ctx context.Context) RouterRipDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipDistributeListArrayOutput)
}

func (i RouterRipDistributeListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipDistributeList] {
	return pulumix.Output[[]RouterRipDistributeList]{
		OutputState: i.ToRouterRipDistributeListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipDistributeListOutput struct{ *pulumi.OutputState }

func (RouterRipDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipDistributeList)(nil)).Elem()
}

func (o RouterRipDistributeListOutput) ToRouterRipDistributeListOutput() RouterRipDistributeListOutput {
	return o
}

func (o RouterRipDistributeListOutput) ToRouterRipDistributeListOutputWithContext(ctx context.Context) RouterRipDistributeListOutput {
	return o
}

func (o RouterRipDistributeListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipDistributeList] {
	return pulumix.Output[RouterRipDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o RouterRipDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterRipDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

func (o RouterRipDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipDistributeList)(nil)).Elem()
}

func (o RouterRipDistributeListArrayOutput) ToRouterRipDistributeListArrayOutput() RouterRipDistributeListArrayOutput {
	return o
}

func (o RouterRipDistributeListArrayOutput) ToRouterRipDistributeListArrayOutputWithContext(ctx context.Context) RouterRipDistributeListArrayOutput {
	return o
}

func (o RouterRipDistributeListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipDistributeList] {
	return pulumix.Output[[]RouterRipDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipDistributeListArrayOutput) Index(i pulumi.IntInput) RouterRipDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipDistributeList {
		return vs[0].([]RouterRipDistributeList)[vs[1].(int)]
	}).(RouterRipDistributeListOutput)
}

type RouterRipInterface struct {
	AuthKeychain          *string `pulumi:"authKeychain"`
	AuthMode              *string `pulumi:"authMode"`
	AuthString            *string `pulumi:"authString"`
	Flags                 *int    `pulumi:"flags"`
	Name                  *string `pulumi:"name"`
	ReceiveVersion        *string `pulumi:"receiveVersion"`
	SendVersion           *string `pulumi:"sendVersion"`
	SendVersion2Broadcast *string `pulumi:"sendVersion2Broadcast"`
	SplitHorizon          *string `pulumi:"splitHorizon"`
	SplitHorizonStatus    *string `pulumi:"splitHorizonStatus"`
}

// RouterRipInterfaceInput is an input type that accepts RouterRipInterfaceArgs and RouterRipInterfaceOutput values.
// You can construct a concrete instance of `RouterRipInterfaceInput` via:
//
//	RouterRipInterfaceArgs{...}
type RouterRipInterfaceInput interface {
	pulumi.Input

	ToRouterRipInterfaceOutput() RouterRipInterfaceOutput
	ToRouterRipInterfaceOutputWithContext(context.Context) RouterRipInterfaceOutput
}

type RouterRipInterfaceArgs struct {
	AuthKeychain          pulumi.StringPtrInput `pulumi:"authKeychain"`
	AuthMode              pulumi.StringPtrInput `pulumi:"authMode"`
	AuthString            pulumi.StringPtrInput `pulumi:"authString"`
	Flags                 pulumi.IntPtrInput    `pulumi:"flags"`
	Name                  pulumi.StringPtrInput `pulumi:"name"`
	ReceiveVersion        pulumi.StringPtrInput `pulumi:"receiveVersion"`
	SendVersion           pulumi.StringPtrInput `pulumi:"sendVersion"`
	SendVersion2Broadcast pulumi.StringPtrInput `pulumi:"sendVersion2Broadcast"`
	SplitHorizon          pulumi.StringPtrInput `pulumi:"splitHorizon"`
	SplitHorizonStatus    pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RouterRipInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipInterface)(nil)).Elem()
}

func (i RouterRipInterfaceArgs) ToRouterRipInterfaceOutput() RouterRipInterfaceOutput {
	return i.ToRouterRipInterfaceOutputWithContext(context.Background())
}

func (i RouterRipInterfaceArgs) ToRouterRipInterfaceOutputWithContext(ctx context.Context) RouterRipInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipInterfaceOutput)
}

func (i RouterRipInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipInterface] {
	return pulumix.Output[RouterRipInterface]{
		OutputState: i.ToRouterRipInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipInterfaceArrayInput is an input type that accepts RouterRipInterfaceArray and RouterRipInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipInterfaceArrayInput` via:
//
//	RouterRipInterfaceArray{ RouterRipInterfaceArgs{...} }
type RouterRipInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput
	ToRouterRipInterfaceArrayOutputWithContext(context.Context) RouterRipInterfaceArrayOutput
}

type RouterRipInterfaceArray []RouterRipInterfaceInput

func (RouterRipInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipInterface)(nil)).Elem()
}

func (i RouterRipInterfaceArray) ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput {
	return i.ToRouterRipInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipInterfaceArray) ToRouterRipInterfaceArrayOutputWithContext(ctx context.Context) RouterRipInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipInterfaceArrayOutput)
}

func (i RouterRipInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipInterface] {
	return pulumix.Output[[]RouterRipInterface]{
		OutputState: i.ToRouterRipInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipInterface)(nil)).Elem()
}

func (o RouterRipInterfaceOutput) ToRouterRipInterfaceOutput() RouterRipInterfaceOutput {
	return o
}

func (o RouterRipInterfaceOutput) ToRouterRipInterfaceOutputWithContext(ctx context.Context) RouterRipInterfaceOutput {
	return o
}

func (o RouterRipInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipInterface] {
	return pulumix.Output[RouterRipInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipInterfaceOutput) AuthKeychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthKeychain }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) AuthString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.AuthString }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterRipInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) ReceiveVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.ReceiveVersion }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) SendVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SendVersion }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) SendVersion2Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SendVersion2Broadcast }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

func (o RouterRipInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RouterRipInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipInterface)(nil)).Elem()
}

func (o RouterRipInterfaceArrayOutput) ToRouterRipInterfaceArrayOutput() RouterRipInterfaceArrayOutput {
	return o
}

func (o RouterRipInterfaceArrayOutput) ToRouterRipInterfaceArrayOutputWithContext(ctx context.Context) RouterRipInterfaceArrayOutput {
	return o
}

func (o RouterRipInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipInterface] {
	return pulumix.Output[[]RouterRipInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipInterface {
		return vs[0].([]RouterRipInterface)[vs[1].(int)]
	}).(RouterRipInterfaceOutput)
}

type RouterRipNeighbor struct {
	Id *int    `pulumi:"id"`
	Ip *string `pulumi:"ip"`
}

// RouterRipNeighborInput is an input type that accepts RouterRipNeighborArgs and RouterRipNeighborOutput values.
// You can construct a concrete instance of `RouterRipNeighborInput` via:
//
//	RouterRipNeighborArgs{...}
type RouterRipNeighborInput interface {
	pulumi.Input

	ToRouterRipNeighborOutput() RouterRipNeighborOutput
	ToRouterRipNeighborOutputWithContext(context.Context) RouterRipNeighborOutput
}

type RouterRipNeighborArgs struct {
	Id pulumi.IntPtrInput    `pulumi:"id"`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (RouterRipNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNeighbor)(nil)).Elem()
}

func (i RouterRipNeighborArgs) ToRouterRipNeighborOutput() RouterRipNeighborOutput {
	return i.ToRouterRipNeighborOutputWithContext(context.Background())
}

func (i RouterRipNeighborArgs) ToRouterRipNeighborOutputWithContext(ctx context.Context) RouterRipNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNeighborOutput)
}

func (i RouterRipNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipNeighbor] {
	return pulumix.Output[RouterRipNeighbor]{
		OutputState: i.ToRouterRipNeighborOutputWithContext(ctx).OutputState,
	}
}

// RouterRipNeighborArrayInput is an input type that accepts RouterRipNeighborArray and RouterRipNeighborArrayOutput values.
// You can construct a concrete instance of `RouterRipNeighborArrayInput` via:
//
//	RouterRipNeighborArray{ RouterRipNeighborArgs{...} }
type RouterRipNeighborArrayInput interface {
	pulumi.Input

	ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput
	ToRouterRipNeighborArrayOutputWithContext(context.Context) RouterRipNeighborArrayOutput
}

type RouterRipNeighborArray []RouterRipNeighborInput

func (RouterRipNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNeighbor)(nil)).Elem()
}

func (i RouterRipNeighborArray) ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput {
	return i.ToRouterRipNeighborArrayOutputWithContext(context.Background())
}

func (i RouterRipNeighborArray) ToRouterRipNeighborArrayOutputWithContext(ctx context.Context) RouterRipNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNeighborArrayOutput)
}

func (i RouterRipNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipNeighbor] {
	return pulumix.Output[[]RouterRipNeighbor]{
		OutputState: i.ToRouterRipNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipNeighborOutput struct{ *pulumi.OutputState }

func (RouterRipNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNeighbor)(nil)).Elem()
}

func (o RouterRipNeighborOutput) ToRouterRipNeighborOutput() RouterRipNeighborOutput {
	return o
}

func (o RouterRipNeighborOutput) ToRouterRipNeighborOutputWithContext(ctx context.Context) RouterRipNeighborOutput {
	return o
}

func (o RouterRipNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipNeighbor] {
	return pulumix.Output[RouterRipNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type RouterRipNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterRipNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNeighbor)(nil)).Elem()
}

func (o RouterRipNeighborArrayOutput) ToRouterRipNeighborArrayOutput() RouterRipNeighborArrayOutput {
	return o
}

func (o RouterRipNeighborArrayOutput) ToRouterRipNeighborArrayOutputWithContext(ctx context.Context) RouterRipNeighborArrayOutput {
	return o
}

func (o RouterRipNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipNeighbor] {
	return pulumix.Output[[]RouterRipNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipNeighborArrayOutput) Index(i pulumi.IntInput) RouterRipNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipNeighbor {
		return vs[0].([]RouterRipNeighbor)[vs[1].(int)]
	}).(RouterRipNeighborOutput)
}

type RouterRipNetwork struct {
	Id     *int    `pulumi:"id"`
	Prefix *string `pulumi:"prefix"`
}

// RouterRipNetworkInput is an input type that accepts RouterRipNetworkArgs and RouterRipNetworkOutput values.
// You can construct a concrete instance of `RouterRipNetworkInput` via:
//
//	RouterRipNetworkArgs{...}
type RouterRipNetworkInput interface {
	pulumi.Input

	ToRouterRipNetworkOutput() RouterRipNetworkOutput
	ToRouterRipNetworkOutputWithContext(context.Context) RouterRipNetworkOutput
}

type RouterRipNetworkArgs struct {
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNetwork)(nil)).Elem()
}

func (i RouterRipNetworkArgs) ToRouterRipNetworkOutput() RouterRipNetworkOutput {
	return i.ToRouterRipNetworkOutputWithContext(context.Background())
}

func (i RouterRipNetworkArgs) ToRouterRipNetworkOutputWithContext(ctx context.Context) RouterRipNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNetworkOutput)
}

func (i RouterRipNetworkArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipNetwork] {
	return pulumix.Output[RouterRipNetwork]{
		OutputState: i.ToRouterRipNetworkOutputWithContext(ctx).OutputState,
	}
}

// RouterRipNetworkArrayInput is an input type that accepts RouterRipNetworkArray and RouterRipNetworkArrayOutput values.
// You can construct a concrete instance of `RouterRipNetworkArrayInput` via:
//
//	RouterRipNetworkArray{ RouterRipNetworkArgs{...} }
type RouterRipNetworkArrayInput interface {
	pulumi.Input

	ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput
	ToRouterRipNetworkArrayOutputWithContext(context.Context) RouterRipNetworkArrayOutput
}

type RouterRipNetworkArray []RouterRipNetworkInput

func (RouterRipNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNetwork)(nil)).Elem()
}

func (i RouterRipNetworkArray) ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput {
	return i.ToRouterRipNetworkArrayOutputWithContext(context.Background())
}

func (i RouterRipNetworkArray) ToRouterRipNetworkArrayOutputWithContext(ctx context.Context) RouterRipNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipNetworkArrayOutput)
}

func (i RouterRipNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipNetwork] {
	return pulumix.Output[[]RouterRipNetwork]{
		OutputState: i.ToRouterRipNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipNetworkOutput struct{ *pulumi.OutputState }

func (RouterRipNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipNetwork)(nil)).Elem()
}

func (o RouterRipNetworkOutput) ToRouterRipNetworkOutput() RouterRipNetworkOutput {
	return o
}

func (o RouterRipNetworkOutput) ToRouterRipNetworkOutputWithContext(ctx context.Context) RouterRipNetworkOutput {
	return o
}

func (o RouterRipNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipNetwork] {
	return pulumix.Output[RouterRipNetwork]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipNetworkArrayOutput struct{ *pulumi.OutputState }

func (RouterRipNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipNetwork)(nil)).Elem()
}

func (o RouterRipNetworkArrayOutput) ToRouterRipNetworkArrayOutput() RouterRipNetworkArrayOutput {
	return o
}

func (o RouterRipNetworkArrayOutput) ToRouterRipNetworkArrayOutputWithContext(ctx context.Context) RouterRipNetworkArrayOutput {
	return o
}

func (o RouterRipNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipNetwork] {
	return pulumix.Output[[]RouterRipNetwork]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipNetworkArrayOutput) Index(i pulumi.IntInput) RouterRipNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipNetwork {
		return vs[0].([]RouterRipNetwork)[vs[1].(int)]
	}).(RouterRipNetworkOutput)
}

type RouterRipOffsetList struct {
	AccessList *string `pulumi:"accessList"`
	Direction  *string `pulumi:"direction"`
	Id         *int    `pulumi:"id"`
	Interface  *string `pulumi:"interface"`
	Offset     *int    `pulumi:"offset"`
	Status     *string `pulumi:"status"`
}

// RouterRipOffsetListInput is an input type that accepts RouterRipOffsetListArgs and RouterRipOffsetListOutput values.
// You can construct a concrete instance of `RouterRipOffsetListInput` via:
//
//	RouterRipOffsetListArgs{...}
type RouterRipOffsetListInput interface {
	pulumi.Input

	ToRouterRipOffsetListOutput() RouterRipOffsetListOutput
	ToRouterRipOffsetListOutputWithContext(context.Context) RouterRipOffsetListOutput
}

type RouterRipOffsetListArgs struct {
	AccessList pulumi.StringPtrInput `pulumi:"accessList"`
	Direction  pulumi.StringPtrInput `pulumi:"direction"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Interface  pulumi.StringPtrInput `pulumi:"interface"`
	Offset     pulumi.IntPtrInput    `pulumi:"offset"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipOffsetList)(nil)).Elem()
}

func (i RouterRipOffsetListArgs) ToRouterRipOffsetListOutput() RouterRipOffsetListOutput {
	return i.ToRouterRipOffsetListOutputWithContext(context.Background())
}

func (i RouterRipOffsetListArgs) ToRouterRipOffsetListOutputWithContext(ctx context.Context) RouterRipOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipOffsetListOutput)
}

func (i RouterRipOffsetListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipOffsetList] {
	return pulumix.Output[RouterRipOffsetList]{
		OutputState: i.ToRouterRipOffsetListOutputWithContext(ctx).OutputState,
	}
}

// RouterRipOffsetListArrayInput is an input type that accepts RouterRipOffsetListArray and RouterRipOffsetListArrayOutput values.
// You can construct a concrete instance of `RouterRipOffsetListArrayInput` via:
//
//	RouterRipOffsetListArray{ RouterRipOffsetListArgs{...} }
type RouterRipOffsetListArrayInput interface {
	pulumi.Input

	ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput
	ToRouterRipOffsetListArrayOutputWithContext(context.Context) RouterRipOffsetListArrayOutput
}

type RouterRipOffsetListArray []RouterRipOffsetListInput

func (RouterRipOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipOffsetList)(nil)).Elem()
}

func (i RouterRipOffsetListArray) ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput {
	return i.ToRouterRipOffsetListArrayOutputWithContext(context.Background())
}

func (i RouterRipOffsetListArray) ToRouterRipOffsetListArrayOutputWithContext(ctx context.Context) RouterRipOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipOffsetListArrayOutput)
}

func (i RouterRipOffsetListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipOffsetList] {
	return pulumix.Output[[]RouterRipOffsetList]{
		OutputState: i.ToRouterRipOffsetListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipOffsetListOutput struct{ *pulumi.OutputState }

func (RouterRipOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipOffsetList)(nil)).Elem()
}

func (o RouterRipOffsetListOutput) ToRouterRipOffsetListOutput() RouterRipOffsetListOutput {
	return o
}

func (o RouterRipOffsetListOutput) ToRouterRipOffsetListOutputWithContext(ctx context.Context) RouterRipOffsetListOutput {
	return o
}

func (o RouterRipOffsetListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipOffsetList] {
	return pulumix.Output[RouterRipOffsetList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipOffsetListOutput) AccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.AccessList }).(pulumi.StringPtrOutput)
}

func (o RouterRipOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o RouterRipOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterRipOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o RouterRipOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipOffsetList)(nil)).Elem()
}

func (o RouterRipOffsetListArrayOutput) ToRouterRipOffsetListArrayOutput() RouterRipOffsetListArrayOutput {
	return o
}

func (o RouterRipOffsetListArrayOutput) ToRouterRipOffsetListArrayOutputWithContext(ctx context.Context) RouterRipOffsetListArrayOutput {
	return o
}

func (o RouterRipOffsetListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipOffsetList] {
	return pulumix.Output[[]RouterRipOffsetList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipOffsetListArrayOutput) Index(i pulumi.IntInput) RouterRipOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipOffsetList {
		return vs[0].([]RouterRipOffsetList)[vs[1].(int)]
	}).(RouterRipOffsetListOutput)
}

type RouterRipPassiveInterface struct {
	Name *string `pulumi:"name"`
}

// RouterRipPassiveInterfaceInput is an input type that accepts RouterRipPassiveInterfaceArgs and RouterRipPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterRipPassiveInterfaceInput` via:
//
//	RouterRipPassiveInterfaceArgs{...}
type RouterRipPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput
	ToRouterRipPassiveInterfaceOutputWithContext(context.Context) RouterRipPassiveInterfaceOutput
}

type RouterRipPassiveInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterRipPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipPassiveInterface)(nil)).Elem()
}

func (i RouterRipPassiveInterfaceArgs) ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput {
	return i.ToRouterRipPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterRipPassiveInterfaceArgs) ToRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipPassiveInterfaceOutput)
}

func (i RouterRipPassiveInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipPassiveInterface] {
	return pulumix.Output[RouterRipPassiveInterface]{
		OutputState: i.ToRouterRipPassiveInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipPassiveInterfaceArrayInput is an input type that accepts RouterRipPassiveInterfaceArray and RouterRipPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipPassiveInterfaceArrayInput` via:
//
//	RouterRipPassiveInterfaceArray{ RouterRipPassiveInterfaceArgs{...} }
type RouterRipPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput
	ToRouterRipPassiveInterfaceArrayOutputWithContext(context.Context) RouterRipPassiveInterfaceArrayOutput
}

type RouterRipPassiveInterfaceArray []RouterRipPassiveInterfaceInput

func (RouterRipPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipPassiveInterface)(nil)).Elem()
}

func (i RouterRipPassiveInterfaceArray) ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput {
	return i.ToRouterRipPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipPassiveInterfaceArray) ToRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipPassiveInterfaceArrayOutput)
}

func (i RouterRipPassiveInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipPassiveInterface] {
	return pulumix.Output[[]RouterRipPassiveInterface]{
		OutputState: i.ToRouterRipPassiveInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipPassiveInterface)(nil)).Elem()
}

func (o RouterRipPassiveInterfaceOutput) ToRouterRipPassiveInterfaceOutput() RouterRipPassiveInterfaceOutput {
	return o
}

func (o RouterRipPassiveInterfaceOutput) ToRouterRipPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceOutput {
	return o
}

func (o RouterRipPassiveInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipPassiveInterface] {
	return pulumix.Output[RouterRipPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterRipPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipPassiveInterface)(nil)).Elem()
}

func (o RouterRipPassiveInterfaceArrayOutput) ToRouterRipPassiveInterfaceArrayOutput() RouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipPassiveInterfaceArrayOutput) ToRouterRipPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipPassiveInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipPassiveInterface] {
	return pulumix.Output[[]RouterRipPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipPassiveInterface {
		return vs[0].([]RouterRipPassiveInterface)[vs[1].(int)]
	}).(RouterRipPassiveInterfaceOutput)
}

type RouterRipRedistribute struct {
	Metric   *int    `pulumi:"metric"`
	Name     *string `pulumi:"name"`
	Routemap *string `pulumi:"routemap"`
	Status   *string `pulumi:"status"`
}

// RouterRipRedistributeInput is an input type that accepts RouterRipRedistributeArgs and RouterRipRedistributeOutput values.
// You can construct a concrete instance of `RouterRipRedistributeInput` via:
//
//	RouterRipRedistributeArgs{...}
type RouterRipRedistributeInput interface {
	pulumi.Input

	ToRouterRipRedistributeOutput() RouterRipRedistributeOutput
	ToRouterRipRedistributeOutputWithContext(context.Context) RouterRipRedistributeOutput
}

type RouterRipRedistributeArgs struct {
	Metric   pulumi.IntPtrInput    `pulumi:"metric"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipRedistribute)(nil)).Elem()
}

func (i RouterRipRedistributeArgs) ToRouterRipRedistributeOutput() RouterRipRedistributeOutput {
	return i.ToRouterRipRedistributeOutputWithContext(context.Background())
}

func (i RouterRipRedistributeArgs) ToRouterRipRedistributeOutputWithContext(ctx context.Context) RouterRipRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipRedistributeOutput)
}

func (i RouterRipRedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipRedistribute] {
	return pulumix.Output[RouterRipRedistribute]{
		OutputState: i.ToRouterRipRedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterRipRedistributeArrayInput is an input type that accepts RouterRipRedistributeArray and RouterRipRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterRipRedistributeArrayInput` via:
//
//	RouterRipRedistributeArray{ RouterRipRedistributeArgs{...} }
type RouterRipRedistributeArrayInput interface {
	pulumi.Input

	ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput
	ToRouterRipRedistributeArrayOutputWithContext(context.Context) RouterRipRedistributeArrayOutput
}

type RouterRipRedistributeArray []RouterRipRedistributeInput

func (RouterRipRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipRedistribute)(nil)).Elem()
}

func (i RouterRipRedistributeArray) ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput {
	return i.ToRouterRipRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterRipRedistributeArray) ToRouterRipRedistributeArrayOutputWithContext(ctx context.Context) RouterRipRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipRedistributeArrayOutput)
}

func (i RouterRipRedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipRedistribute] {
	return pulumix.Output[[]RouterRipRedistribute]{
		OutputState: i.ToRouterRipRedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipRedistributeOutput struct{ *pulumi.OutputState }

func (RouterRipRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipRedistribute)(nil)).Elem()
}

func (o RouterRipRedistributeOutput) ToRouterRipRedistributeOutput() RouterRipRedistributeOutput {
	return o
}

func (o RouterRipRedistributeOutput) ToRouterRipRedistributeOutputWithContext(ctx context.Context) RouterRipRedistributeOutput {
	return o
}

func (o RouterRipRedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipRedistribute] {
	return pulumix.Output[RouterRipRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterRipRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterRipRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterRipRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterRipRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipRedistribute)(nil)).Elem()
}

func (o RouterRipRedistributeArrayOutput) ToRouterRipRedistributeArrayOutput() RouterRipRedistributeArrayOutput {
	return o
}

func (o RouterRipRedistributeArrayOutput) ToRouterRipRedistributeArrayOutputWithContext(ctx context.Context) RouterRipRedistributeArrayOutput {
	return o
}

func (o RouterRipRedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipRedistribute] {
	return pulumix.Output[[]RouterRipRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipRedistributeArrayOutput) Index(i pulumi.IntInput) RouterRipRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipRedistribute {
		return vs[0].([]RouterRipRedistribute)[vs[1].(int)]
	}).(RouterRipRedistributeOutput)
}

type RouterRipngAggregateAddress struct {
	Id      *int    `pulumi:"id"`
	Prefix6 *string `pulumi:"prefix6"`
}

// RouterRipngAggregateAddressInput is an input type that accepts RouterRipngAggregateAddressArgs and RouterRipngAggregateAddressOutput values.
// You can construct a concrete instance of `RouterRipngAggregateAddressInput` via:
//
//	RouterRipngAggregateAddressArgs{...}
type RouterRipngAggregateAddressInput interface {
	pulumi.Input

	ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput
	ToRouterRipngAggregateAddressOutputWithContext(context.Context) RouterRipngAggregateAddressOutput
}

type RouterRipngAggregateAddressArgs struct {
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6 pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterRipngAggregateAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngAggregateAddress)(nil)).Elem()
}

func (i RouterRipngAggregateAddressArgs) ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput {
	return i.ToRouterRipngAggregateAddressOutputWithContext(context.Background())
}

func (i RouterRipngAggregateAddressArgs) ToRouterRipngAggregateAddressOutputWithContext(ctx context.Context) RouterRipngAggregateAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngAggregateAddressOutput)
}

func (i RouterRipngAggregateAddressArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngAggregateAddress] {
	return pulumix.Output[RouterRipngAggregateAddress]{
		OutputState: i.ToRouterRipngAggregateAddressOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngAggregateAddressArrayInput is an input type that accepts RouterRipngAggregateAddressArray and RouterRipngAggregateAddressArrayOutput values.
// You can construct a concrete instance of `RouterRipngAggregateAddressArrayInput` via:
//
//	RouterRipngAggregateAddressArray{ RouterRipngAggregateAddressArgs{...} }
type RouterRipngAggregateAddressArrayInput interface {
	pulumi.Input

	ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput
	ToRouterRipngAggregateAddressArrayOutputWithContext(context.Context) RouterRipngAggregateAddressArrayOutput
}

type RouterRipngAggregateAddressArray []RouterRipngAggregateAddressInput

func (RouterRipngAggregateAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngAggregateAddress)(nil)).Elem()
}

func (i RouterRipngAggregateAddressArray) ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput {
	return i.ToRouterRipngAggregateAddressArrayOutputWithContext(context.Background())
}

func (i RouterRipngAggregateAddressArray) ToRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RouterRipngAggregateAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngAggregateAddressArrayOutput)
}

func (i RouterRipngAggregateAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngAggregateAddress] {
	return pulumix.Output[[]RouterRipngAggregateAddress]{
		OutputState: i.ToRouterRipngAggregateAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngAggregateAddressOutput struct{ *pulumi.OutputState }

func (RouterRipngAggregateAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngAggregateAddress)(nil)).Elem()
}

func (o RouterRipngAggregateAddressOutput) ToRouterRipngAggregateAddressOutput() RouterRipngAggregateAddressOutput {
	return o
}

func (o RouterRipngAggregateAddressOutput) ToRouterRipngAggregateAddressOutputWithContext(ctx context.Context) RouterRipngAggregateAddressOutput {
	return o
}

func (o RouterRipngAggregateAddressOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngAggregateAddress] {
	return pulumix.Output[RouterRipngAggregateAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngAggregateAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngAggregateAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngAggregateAddressOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngAggregateAddress) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterRipngAggregateAddressArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngAggregateAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngAggregateAddress)(nil)).Elem()
}

func (o RouterRipngAggregateAddressArrayOutput) ToRouterRipngAggregateAddressArrayOutput() RouterRipngAggregateAddressArrayOutput {
	return o
}

func (o RouterRipngAggregateAddressArrayOutput) ToRouterRipngAggregateAddressArrayOutputWithContext(ctx context.Context) RouterRipngAggregateAddressArrayOutput {
	return o
}

func (o RouterRipngAggregateAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngAggregateAddress] {
	return pulumix.Output[[]RouterRipngAggregateAddress]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngAggregateAddressArrayOutput) Index(i pulumi.IntInput) RouterRipngAggregateAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngAggregateAddress {
		return vs[0].([]RouterRipngAggregateAddress)[vs[1].(int)]
	}).(RouterRipngAggregateAddressOutput)
}

type RouterRipngDistance struct {
	AccessList6 *string `pulumi:"accessList6"`
	Distance    *int    `pulumi:"distance"`
	Id          *int    `pulumi:"id"`
	Prefix6     *string `pulumi:"prefix6"`
}

// RouterRipngDistanceInput is an input type that accepts RouterRipngDistanceArgs and RouterRipngDistanceOutput values.
// You can construct a concrete instance of `RouterRipngDistanceInput` via:
//
//	RouterRipngDistanceArgs{...}
type RouterRipngDistanceInput interface {
	pulumi.Input

	ToRouterRipngDistanceOutput() RouterRipngDistanceOutput
	ToRouterRipngDistanceOutputWithContext(context.Context) RouterRipngDistanceOutput
}

type RouterRipngDistanceArgs struct {
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	Distance    pulumi.IntPtrInput    `pulumi:"distance"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Prefix6     pulumi.StringPtrInput `pulumi:"prefix6"`
}

func (RouterRipngDistanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistance)(nil)).Elem()
}

func (i RouterRipngDistanceArgs) ToRouterRipngDistanceOutput() RouterRipngDistanceOutput {
	return i.ToRouterRipngDistanceOutputWithContext(context.Background())
}

func (i RouterRipngDistanceArgs) ToRouterRipngDistanceOutputWithContext(ctx context.Context) RouterRipngDistanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistanceOutput)
}

func (i RouterRipngDistanceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngDistance] {
	return pulumix.Output[RouterRipngDistance]{
		OutputState: i.ToRouterRipngDistanceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngDistanceArrayInput is an input type that accepts RouterRipngDistanceArray and RouterRipngDistanceArrayOutput values.
// You can construct a concrete instance of `RouterRipngDistanceArrayInput` via:
//
//	RouterRipngDistanceArray{ RouterRipngDistanceArgs{...} }
type RouterRipngDistanceArrayInput interface {
	pulumi.Input

	ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput
	ToRouterRipngDistanceArrayOutputWithContext(context.Context) RouterRipngDistanceArrayOutput
}

type RouterRipngDistanceArray []RouterRipngDistanceInput

func (RouterRipngDistanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistance)(nil)).Elem()
}

func (i RouterRipngDistanceArray) ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput {
	return i.ToRouterRipngDistanceArrayOutputWithContext(context.Background())
}

func (i RouterRipngDistanceArray) ToRouterRipngDistanceArrayOutputWithContext(ctx context.Context) RouterRipngDistanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistanceArrayOutput)
}

func (i RouterRipngDistanceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngDistance] {
	return pulumix.Output[[]RouterRipngDistance]{
		OutputState: i.ToRouterRipngDistanceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngDistanceOutput struct{ *pulumi.OutputState }

func (RouterRipngDistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistance)(nil)).Elem()
}

func (o RouterRipngDistanceOutput) ToRouterRipngDistanceOutput() RouterRipngDistanceOutput {
	return o
}

func (o RouterRipngDistanceOutput) ToRouterRipngDistanceOutputWithContext(ctx context.Context) RouterRipngDistanceOutput {
	return o
}

func (o RouterRipngDistanceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngDistance] {
	return pulumix.Output[RouterRipngDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngDistanceOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

func (o RouterRipngDistanceOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

func (o RouterRipngDistanceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngDistanceOutput) Prefix6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistance) *string { return v.Prefix6 }).(pulumi.StringPtrOutput)
}

type RouterRipngDistanceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngDistanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistance)(nil)).Elem()
}

func (o RouterRipngDistanceArrayOutput) ToRouterRipngDistanceArrayOutput() RouterRipngDistanceArrayOutput {
	return o
}

func (o RouterRipngDistanceArrayOutput) ToRouterRipngDistanceArrayOutputWithContext(ctx context.Context) RouterRipngDistanceArrayOutput {
	return o
}

func (o RouterRipngDistanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngDistance] {
	return pulumix.Output[[]RouterRipngDistance]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngDistanceArrayOutput) Index(i pulumi.IntInput) RouterRipngDistanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngDistance {
		return vs[0].([]RouterRipngDistance)[vs[1].(int)]
	}).(RouterRipngDistanceOutput)
}

type RouterRipngDistributeList struct {
	Direction *string `pulumi:"direction"`
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
	Listname  *string `pulumi:"listname"`
	Status    *string `pulumi:"status"`
}

// RouterRipngDistributeListInput is an input type that accepts RouterRipngDistributeListArgs and RouterRipngDistributeListOutput values.
// You can construct a concrete instance of `RouterRipngDistributeListInput` via:
//
//	RouterRipngDistributeListArgs{...}
type RouterRipngDistributeListInput interface {
	pulumi.Input

	ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput
	ToRouterRipngDistributeListOutputWithContext(context.Context) RouterRipngDistributeListOutput
}

type RouterRipngDistributeListArgs struct {
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	Listname  pulumi.StringPtrInput `pulumi:"listname"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngDistributeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistributeList)(nil)).Elem()
}

func (i RouterRipngDistributeListArgs) ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput {
	return i.ToRouterRipngDistributeListOutputWithContext(context.Background())
}

func (i RouterRipngDistributeListArgs) ToRouterRipngDistributeListOutputWithContext(ctx context.Context) RouterRipngDistributeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistributeListOutput)
}

func (i RouterRipngDistributeListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngDistributeList] {
	return pulumix.Output[RouterRipngDistributeList]{
		OutputState: i.ToRouterRipngDistributeListOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngDistributeListArrayInput is an input type that accepts RouterRipngDistributeListArray and RouterRipngDistributeListArrayOutput values.
// You can construct a concrete instance of `RouterRipngDistributeListArrayInput` via:
//
//	RouterRipngDistributeListArray{ RouterRipngDistributeListArgs{...} }
type RouterRipngDistributeListArrayInput interface {
	pulumi.Input

	ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput
	ToRouterRipngDistributeListArrayOutputWithContext(context.Context) RouterRipngDistributeListArrayOutput
}

type RouterRipngDistributeListArray []RouterRipngDistributeListInput

func (RouterRipngDistributeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistributeList)(nil)).Elem()
}

func (i RouterRipngDistributeListArray) ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput {
	return i.ToRouterRipngDistributeListArrayOutputWithContext(context.Background())
}

func (i RouterRipngDistributeListArray) ToRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) RouterRipngDistributeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngDistributeListArrayOutput)
}

func (i RouterRipngDistributeListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngDistributeList] {
	return pulumix.Output[[]RouterRipngDistributeList]{
		OutputState: i.ToRouterRipngDistributeListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngDistributeListOutput struct{ *pulumi.OutputState }

func (RouterRipngDistributeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngDistributeList)(nil)).Elem()
}

func (o RouterRipngDistributeListOutput) ToRouterRipngDistributeListOutput() RouterRipngDistributeListOutput {
	return o
}

func (o RouterRipngDistributeListOutput) ToRouterRipngDistributeListOutputWithContext(ctx context.Context) RouterRipngDistributeListOutput {
	return o
}

func (o RouterRipngDistributeListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngDistributeList] {
	return pulumix.Output[RouterRipngDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngDistributeListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o RouterRipngDistributeListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngDistributeListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterRipngDistributeListOutput) Listname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Listname }).(pulumi.StringPtrOutput)
}

func (o RouterRipngDistributeListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngDistributeList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngDistributeListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngDistributeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngDistributeList)(nil)).Elem()
}

func (o RouterRipngDistributeListArrayOutput) ToRouterRipngDistributeListArrayOutput() RouterRipngDistributeListArrayOutput {
	return o
}

func (o RouterRipngDistributeListArrayOutput) ToRouterRipngDistributeListArrayOutputWithContext(ctx context.Context) RouterRipngDistributeListArrayOutput {
	return o
}

func (o RouterRipngDistributeListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngDistributeList] {
	return pulumix.Output[[]RouterRipngDistributeList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngDistributeListArrayOutput) Index(i pulumi.IntInput) RouterRipngDistributeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngDistributeList {
		return vs[0].([]RouterRipngDistributeList)[vs[1].(int)]
	}).(RouterRipngDistributeListOutput)
}

type RouterRipngInterface struct {
	Flags              *int    `pulumi:"flags"`
	Name               *string `pulumi:"name"`
	SplitHorizon       *string `pulumi:"splitHorizon"`
	SplitHorizonStatus *string `pulumi:"splitHorizonStatus"`
}

// RouterRipngInterfaceInput is an input type that accepts RouterRipngInterfaceArgs and RouterRipngInterfaceOutput values.
// You can construct a concrete instance of `RouterRipngInterfaceInput` via:
//
//	RouterRipngInterfaceArgs{...}
type RouterRipngInterfaceInput interface {
	pulumi.Input

	ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput
	ToRouterRipngInterfaceOutputWithContext(context.Context) RouterRipngInterfaceOutput
}

type RouterRipngInterfaceArgs struct {
	Flags              pulumi.IntPtrInput    `pulumi:"flags"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SplitHorizon       pulumi.StringPtrInput `pulumi:"splitHorizon"`
	SplitHorizonStatus pulumi.StringPtrInput `pulumi:"splitHorizonStatus"`
}

func (RouterRipngInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngInterface)(nil)).Elem()
}

func (i RouterRipngInterfaceArgs) ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput {
	return i.ToRouterRipngInterfaceOutputWithContext(context.Background())
}

func (i RouterRipngInterfaceArgs) ToRouterRipngInterfaceOutputWithContext(ctx context.Context) RouterRipngInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngInterfaceOutput)
}

func (i RouterRipngInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngInterface] {
	return pulumix.Output[RouterRipngInterface]{
		OutputState: i.ToRouterRipngInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngInterfaceArrayInput is an input type that accepts RouterRipngInterfaceArray and RouterRipngInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipngInterfaceArrayInput` via:
//
//	RouterRipngInterfaceArray{ RouterRipngInterfaceArgs{...} }
type RouterRipngInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput
	ToRouterRipngInterfaceArrayOutputWithContext(context.Context) RouterRipngInterfaceArrayOutput
}

type RouterRipngInterfaceArray []RouterRipngInterfaceInput

func (RouterRipngInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngInterface)(nil)).Elem()
}

func (i RouterRipngInterfaceArray) ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput {
	return i.ToRouterRipngInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipngInterfaceArray) ToRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngInterfaceArrayOutput)
}

func (i RouterRipngInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngInterface] {
	return pulumix.Output[[]RouterRipngInterface]{
		OutputState: i.ToRouterRipngInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipngInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngInterface)(nil)).Elem()
}

func (o RouterRipngInterfaceOutput) ToRouterRipngInterfaceOutput() RouterRipngInterfaceOutput {
	return o
}

func (o RouterRipngInterfaceOutput) ToRouterRipngInterfaceOutputWithContext(ctx context.Context) RouterRipngInterfaceOutput {
	return o
}

func (o RouterRipngInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngInterface] {
	return pulumix.Output[RouterRipngInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngInterfaceOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o RouterRipngInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterRipngInterfaceOutput) SplitHorizon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.SplitHorizon }).(pulumi.StringPtrOutput)
}

func (o RouterRipngInterfaceOutput) SplitHorizonStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngInterface) *string { return v.SplitHorizonStatus }).(pulumi.StringPtrOutput)
}

type RouterRipngInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngInterface)(nil)).Elem()
}

func (o RouterRipngInterfaceArrayOutput) ToRouterRipngInterfaceArrayOutput() RouterRipngInterfaceArrayOutput {
	return o
}

func (o RouterRipngInterfaceArrayOutput) ToRouterRipngInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngInterfaceArrayOutput {
	return o
}

func (o RouterRipngInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngInterface] {
	return pulumix.Output[[]RouterRipngInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipngInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngInterface {
		return vs[0].([]RouterRipngInterface)[vs[1].(int)]
	}).(RouterRipngInterfaceOutput)
}

type RouterRipngNeighbor struct {
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
	Ip6       *string `pulumi:"ip6"`
}

// RouterRipngNeighborInput is an input type that accepts RouterRipngNeighborArgs and RouterRipngNeighborOutput values.
// You can construct a concrete instance of `RouterRipngNeighborInput` via:
//
//	RouterRipngNeighborArgs{...}
type RouterRipngNeighborInput interface {
	pulumi.Input

	ToRouterRipngNeighborOutput() RouterRipngNeighborOutput
	ToRouterRipngNeighborOutputWithContext(context.Context) RouterRipngNeighborOutput
}

type RouterRipngNeighborArgs struct {
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	Ip6       pulumi.StringPtrInput `pulumi:"ip6"`
}

func (RouterRipngNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNeighbor)(nil)).Elem()
}

func (i RouterRipngNeighborArgs) ToRouterRipngNeighborOutput() RouterRipngNeighborOutput {
	return i.ToRouterRipngNeighborOutputWithContext(context.Background())
}

func (i RouterRipngNeighborArgs) ToRouterRipngNeighborOutputWithContext(ctx context.Context) RouterRipngNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNeighborOutput)
}

func (i RouterRipngNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngNeighbor] {
	return pulumix.Output[RouterRipngNeighbor]{
		OutputState: i.ToRouterRipngNeighborOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngNeighborArrayInput is an input type that accepts RouterRipngNeighborArray and RouterRipngNeighborArrayOutput values.
// You can construct a concrete instance of `RouterRipngNeighborArrayInput` via:
//
//	RouterRipngNeighborArray{ RouterRipngNeighborArgs{...} }
type RouterRipngNeighborArrayInput interface {
	pulumi.Input

	ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput
	ToRouterRipngNeighborArrayOutputWithContext(context.Context) RouterRipngNeighborArrayOutput
}

type RouterRipngNeighborArray []RouterRipngNeighborInput

func (RouterRipngNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNeighbor)(nil)).Elem()
}

func (i RouterRipngNeighborArray) ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput {
	return i.ToRouterRipngNeighborArrayOutputWithContext(context.Background())
}

func (i RouterRipngNeighborArray) ToRouterRipngNeighborArrayOutputWithContext(ctx context.Context) RouterRipngNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNeighborArrayOutput)
}

func (i RouterRipngNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngNeighbor] {
	return pulumix.Output[[]RouterRipngNeighbor]{
		OutputState: i.ToRouterRipngNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngNeighborOutput struct{ *pulumi.OutputState }

func (RouterRipngNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNeighbor)(nil)).Elem()
}

func (o RouterRipngNeighborOutput) ToRouterRipngNeighborOutput() RouterRipngNeighborOutput {
	return o
}

func (o RouterRipngNeighborOutput) ToRouterRipngNeighborOutputWithContext(ctx context.Context) RouterRipngNeighborOutput {
	return o
}

func (o RouterRipngNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngNeighbor] {
	return pulumix.Output[RouterRipngNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngNeighborOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngNeighborOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterRipngNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

type RouterRipngNeighborArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNeighbor)(nil)).Elem()
}

func (o RouterRipngNeighborArrayOutput) ToRouterRipngNeighborArrayOutput() RouterRipngNeighborArrayOutput {
	return o
}

func (o RouterRipngNeighborArrayOutput) ToRouterRipngNeighborArrayOutputWithContext(ctx context.Context) RouterRipngNeighborArrayOutput {
	return o
}

func (o RouterRipngNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngNeighbor] {
	return pulumix.Output[[]RouterRipngNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngNeighborArrayOutput) Index(i pulumi.IntInput) RouterRipngNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngNeighbor {
		return vs[0].([]RouterRipngNeighbor)[vs[1].(int)]
	}).(RouterRipngNeighborOutput)
}

type RouterRipngNetwork struct {
	Id     *int    `pulumi:"id"`
	Prefix *string `pulumi:"prefix"`
}

// RouterRipngNetworkInput is an input type that accepts RouterRipngNetworkArgs and RouterRipngNetworkOutput values.
// You can construct a concrete instance of `RouterRipngNetworkInput` via:
//
//	RouterRipngNetworkArgs{...}
type RouterRipngNetworkInput interface {
	pulumi.Input

	ToRouterRipngNetworkOutput() RouterRipngNetworkOutput
	ToRouterRipngNetworkOutputWithContext(context.Context) RouterRipngNetworkOutput
}

type RouterRipngNetworkArgs struct {
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RouterRipngNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNetwork)(nil)).Elem()
}

func (i RouterRipngNetworkArgs) ToRouterRipngNetworkOutput() RouterRipngNetworkOutput {
	return i.ToRouterRipngNetworkOutputWithContext(context.Background())
}

func (i RouterRipngNetworkArgs) ToRouterRipngNetworkOutputWithContext(ctx context.Context) RouterRipngNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNetworkOutput)
}

func (i RouterRipngNetworkArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngNetwork] {
	return pulumix.Output[RouterRipngNetwork]{
		OutputState: i.ToRouterRipngNetworkOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngNetworkArrayInput is an input type that accepts RouterRipngNetworkArray and RouterRipngNetworkArrayOutput values.
// You can construct a concrete instance of `RouterRipngNetworkArrayInput` via:
//
//	RouterRipngNetworkArray{ RouterRipngNetworkArgs{...} }
type RouterRipngNetworkArrayInput interface {
	pulumi.Input

	ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput
	ToRouterRipngNetworkArrayOutputWithContext(context.Context) RouterRipngNetworkArrayOutput
}

type RouterRipngNetworkArray []RouterRipngNetworkInput

func (RouterRipngNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNetwork)(nil)).Elem()
}

func (i RouterRipngNetworkArray) ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput {
	return i.ToRouterRipngNetworkArrayOutputWithContext(context.Background())
}

func (i RouterRipngNetworkArray) ToRouterRipngNetworkArrayOutputWithContext(ctx context.Context) RouterRipngNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngNetworkArrayOutput)
}

func (i RouterRipngNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngNetwork] {
	return pulumix.Output[[]RouterRipngNetwork]{
		OutputState: i.ToRouterRipngNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngNetworkOutput struct{ *pulumi.OutputState }

func (RouterRipngNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngNetwork)(nil)).Elem()
}

func (o RouterRipngNetworkOutput) ToRouterRipngNetworkOutput() RouterRipngNetworkOutput {
	return o
}

func (o RouterRipngNetworkOutput) ToRouterRipngNetworkOutputWithContext(ctx context.Context) RouterRipngNetworkOutput {
	return o
}

func (o RouterRipngNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngNetwork] {
	return pulumix.Output[RouterRipngNetwork]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RouterRipngNetworkArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngNetwork)(nil)).Elem()
}

func (o RouterRipngNetworkArrayOutput) ToRouterRipngNetworkArrayOutput() RouterRipngNetworkArrayOutput {
	return o
}

func (o RouterRipngNetworkArrayOutput) ToRouterRipngNetworkArrayOutputWithContext(ctx context.Context) RouterRipngNetworkArrayOutput {
	return o
}

func (o RouterRipngNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngNetwork] {
	return pulumix.Output[[]RouterRipngNetwork]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngNetworkArrayOutput) Index(i pulumi.IntInput) RouterRipngNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngNetwork {
		return vs[0].([]RouterRipngNetwork)[vs[1].(int)]
	}).(RouterRipngNetworkOutput)
}

type RouterRipngOffsetList struct {
	AccessList6 *string `pulumi:"accessList6"`
	Direction   *string `pulumi:"direction"`
	Id          *int    `pulumi:"id"`
	Interface   *string `pulumi:"interface"`
	Offset      *int    `pulumi:"offset"`
	Status      *string `pulumi:"status"`
}

// RouterRipngOffsetListInput is an input type that accepts RouterRipngOffsetListArgs and RouterRipngOffsetListOutput values.
// You can construct a concrete instance of `RouterRipngOffsetListInput` via:
//
//	RouterRipngOffsetListArgs{...}
type RouterRipngOffsetListInput interface {
	pulumi.Input

	ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput
	ToRouterRipngOffsetListOutputWithContext(context.Context) RouterRipngOffsetListOutput
}

type RouterRipngOffsetListArgs struct {
	AccessList6 pulumi.StringPtrInput `pulumi:"accessList6"`
	Direction   pulumi.StringPtrInput `pulumi:"direction"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Interface   pulumi.StringPtrInput `pulumi:"interface"`
	Offset      pulumi.IntPtrInput    `pulumi:"offset"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngOffsetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngOffsetList)(nil)).Elem()
}

func (i RouterRipngOffsetListArgs) ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput {
	return i.ToRouterRipngOffsetListOutputWithContext(context.Background())
}

func (i RouterRipngOffsetListArgs) ToRouterRipngOffsetListOutputWithContext(ctx context.Context) RouterRipngOffsetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOffsetListOutput)
}

func (i RouterRipngOffsetListArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngOffsetList] {
	return pulumix.Output[RouterRipngOffsetList]{
		OutputState: i.ToRouterRipngOffsetListOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngOffsetListArrayInput is an input type that accepts RouterRipngOffsetListArray and RouterRipngOffsetListArrayOutput values.
// You can construct a concrete instance of `RouterRipngOffsetListArrayInput` via:
//
//	RouterRipngOffsetListArray{ RouterRipngOffsetListArgs{...} }
type RouterRipngOffsetListArrayInput interface {
	pulumi.Input

	ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput
	ToRouterRipngOffsetListArrayOutputWithContext(context.Context) RouterRipngOffsetListArrayOutput
}

type RouterRipngOffsetListArray []RouterRipngOffsetListInput

func (RouterRipngOffsetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngOffsetList)(nil)).Elem()
}

func (i RouterRipngOffsetListArray) ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput {
	return i.ToRouterRipngOffsetListArrayOutputWithContext(context.Background())
}

func (i RouterRipngOffsetListArray) ToRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) RouterRipngOffsetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngOffsetListArrayOutput)
}

func (i RouterRipngOffsetListArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngOffsetList] {
	return pulumix.Output[[]RouterRipngOffsetList]{
		OutputState: i.ToRouterRipngOffsetListArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngOffsetListOutput struct{ *pulumi.OutputState }

func (RouterRipngOffsetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngOffsetList)(nil)).Elem()
}

func (o RouterRipngOffsetListOutput) ToRouterRipngOffsetListOutput() RouterRipngOffsetListOutput {
	return o
}

func (o RouterRipngOffsetListOutput) ToRouterRipngOffsetListOutputWithContext(ctx context.Context) RouterRipngOffsetListOutput {
	return o
}

func (o RouterRipngOffsetListOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngOffsetList] {
	return pulumix.Output[RouterRipngOffsetList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngOffsetListOutput) AccessList6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.AccessList6 }).(pulumi.StringPtrOutput)
}

func (o RouterRipngOffsetListOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o RouterRipngOffsetListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRipngOffsetListOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o RouterRipngOffsetListOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o RouterRipngOffsetListOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngOffsetList) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngOffsetListArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngOffsetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngOffsetList)(nil)).Elem()
}

func (o RouterRipngOffsetListArrayOutput) ToRouterRipngOffsetListArrayOutput() RouterRipngOffsetListArrayOutput {
	return o
}

func (o RouterRipngOffsetListArrayOutput) ToRouterRipngOffsetListArrayOutputWithContext(ctx context.Context) RouterRipngOffsetListArrayOutput {
	return o
}

func (o RouterRipngOffsetListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngOffsetList] {
	return pulumix.Output[[]RouterRipngOffsetList]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngOffsetListArrayOutput) Index(i pulumi.IntInput) RouterRipngOffsetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngOffsetList {
		return vs[0].([]RouterRipngOffsetList)[vs[1].(int)]
	}).(RouterRipngOffsetListOutput)
}

type RouterRipngPassiveInterface struct {
	Name *string `pulumi:"name"`
}

// RouterRipngPassiveInterfaceInput is an input type that accepts RouterRipngPassiveInterfaceArgs and RouterRipngPassiveInterfaceOutput values.
// You can construct a concrete instance of `RouterRipngPassiveInterfaceInput` via:
//
//	RouterRipngPassiveInterfaceArgs{...}
type RouterRipngPassiveInterfaceInput interface {
	pulumi.Input

	ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput
	ToRouterRipngPassiveInterfaceOutputWithContext(context.Context) RouterRipngPassiveInterfaceOutput
}

type RouterRipngPassiveInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterRipngPassiveInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngPassiveInterface)(nil)).Elem()
}

func (i RouterRipngPassiveInterfaceArgs) ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput {
	return i.ToRouterRipngPassiveInterfaceOutputWithContext(context.Background())
}

func (i RouterRipngPassiveInterfaceArgs) ToRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngPassiveInterfaceOutput)
}

func (i RouterRipngPassiveInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngPassiveInterface] {
	return pulumix.Output[RouterRipngPassiveInterface]{
		OutputState: i.ToRouterRipngPassiveInterfaceOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngPassiveInterfaceArrayInput is an input type that accepts RouterRipngPassiveInterfaceArray and RouterRipngPassiveInterfaceArrayOutput values.
// You can construct a concrete instance of `RouterRipngPassiveInterfaceArrayInput` via:
//
//	RouterRipngPassiveInterfaceArray{ RouterRipngPassiveInterfaceArgs{...} }
type RouterRipngPassiveInterfaceArrayInput interface {
	pulumi.Input

	ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput
	ToRouterRipngPassiveInterfaceArrayOutputWithContext(context.Context) RouterRipngPassiveInterfaceArrayOutput
}

type RouterRipngPassiveInterfaceArray []RouterRipngPassiveInterfaceInput

func (RouterRipngPassiveInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngPassiveInterface)(nil)).Elem()
}

func (i RouterRipngPassiveInterfaceArray) ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput {
	return i.ToRouterRipngPassiveInterfaceArrayOutputWithContext(context.Background())
}

func (i RouterRipngPassiveInterfaceArray) ToRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngPassiveInterfaceArrayOutput)
}

func (i RouterRipngPassiveInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngPassiveInterface] {
	return pulumix.Output[[]RouterRipngPassiveInterface]{
		OutputState: i.ToRouterRipngPassiveInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngPassiveInterfaceOutput struct{ *pulumi.OutputState }

func (RouterRipngPassiveInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngPassiveInterface)(nil)).Elem()
}

func (o RouterRipngPassiveInterfaceOutput) ToRouterRipngPassiveInterfaceOutput() RouterRipngPassiveInterfaceOutput {
	return o
}

func (o RouterRipngPassiveInterfaceOutput) ToRouterRipngPassiveInterfaceOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceOutput {
	return o
}

func (o RouterRipngPassiveInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngPassiveInterface] {
	return pulumix.Output[RouterRipngPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngPassiveInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngPassiveInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterRipngPassiveInterfaceArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngPassiveInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngPassiveInterface)(nil)).Elem()
}

func (o RouterRipngPassiveInterfaceArrayOutput) ToRouterRipngPassiveInterfaceArrayOutput() RouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipngPassiveInterfaceArrayOutput) ToRouterRipngPassiveInterfaceArrayOutputWithContext(ctx context.Context) RouterRipngPassiveInterfaceArrayOutput {
	return o
}

func (o RouterRipngPassiveInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngPassiveInterface] {
	return pulumix.Output[[]RouterRipngPassiveInterface]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngPassiveInterfaceArrayOutput) Index(i pulumi.IntInput) RouterRipngPassiveInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngPassiveInterface {
		return vs[0].([]RouterRipngPassiveInterface)[vs[1].(int)]
	}).(RouterRipngPassiveInterfaceOutput)
}

type RouterRipngRedistribute struct {
	Metric   *int    `pulumi:"metric"`
	Name     *string `pulumi:"name"`
	Routemap *string `pulumi:"routemap"`
	Status   *string `pulumi:"status"`
}

// RouterRipngRedistributeInput is an input type that accepts RouterRipngRedistributeArgs and RouterRipngRedistributeOutput values.
// You can construct a concrete instance of `RouterRipngRedistributeInput` via:
//
//	RouterRipngRedistributeArgs{...}
type RouterRipngRedistributeInput interface {
	pulumi.Input

	ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput
	ToRouterRipngRedistributeOutputWithContext(context.Context) RouterRipngRedistributeOutput
}

type RouterRipngRedistributeArgs struct {
	Metric   pulumi.IntPtrInput    `pulumi:"metric"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Routemap pulumi.StringPtrInput `pulumi:"routemap"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
}

func (RouterRipngRedistributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngRedistribute)(nil)).Elem()
}

func (i RouterRipngRedistributeArgs) ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput {
	return i.ToRouterRipngRedistributeOutputWithContext(context.Background())
}

func (i RouterRipngRedistributeArgs) ToRouterRipngRedistributeOutputWithContext(ctx context.Context) RouterRipngRedistributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngRedistributeOutput)
}

func (i RouterRipngRedistributeArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRipngRedistribute] {
	return pulumix.Output[RouterRipngRedistribute]{
		OutputState: i.ToRouterRipngRedistributeOutputWithContext(ctx).OutputState,
	}
}

// RouterRipngRedistributeArrayInput is an input type that accepts RouterRipngRedistributeArray and RouterRipngRedistributeArrayOutput values.
// You can construct a concrete instance of `RouterRipngRedistributeArrayInput` via:
//
//	RouterRipngRedistributeArray{ RouterRipngRedistributeArgs{...} }
type RouterRipngRedistributeArrayInput interface {
	pulumi.Input

	ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput
	ToRouterRipngRedistributeArrayOutputWithContext(context.Context) RouterRipngRedistributeArrayOutput
}

type RouterRipngRedistributeArray []RouterRipngRedistributeInput

func (RouterRipngRedistributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngRedistribute)(nil)).Elem()
}

func (i RouterRipngRedistributeArray) ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput {
	return i.ToRouterRipngRedistributeArrayOutputWithContext(context.Background())
}

func (i RouterRipngRedistributeArray) ToRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) RouterRipngRedistributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRipngRedistributeArrayOutput)
}

func (i RouterRipngRedistributeArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngRedistribute] {
	return pulumix.Output[[]RouterRipngRedistribute]{
		OutputState: i.ToRouterRipngRedistributeArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRipngRedistributeOutput struct{ *pulumi.OutputState }

func (RouterRipngRedistributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRipngRedistribute)(nil)).Elem()
}

func (o RouterRipngRedistributeOutput) ToRouterRipngRedistributeOutput() RouterRipngRedistributeOutput {
	return o
}

func (o RouterRipngRedistributeOutput) ToRouterRipngRedistributeOutputWithContext(ctx context.Context) RouterRipngRedistributeOutput {
	return o
}

func (o RouterRipngRedistributeOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRipngRedistribute] {
	return pulumix.Output[RouterRipngRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngRedistributeOutput) Metric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *int { return v.Metric }).(pulumi.IntPtrOutput)
}

func (o RouterRipngRedistributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RouterRipngRedistributeOutput) Routemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Routemap }).(pulumi.StringPtrOutput)
}

func (o RouterRipngRedistributeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRipngRedistribute) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RouterRipngRedistributeArrayOutput struct{ *pulumi.OutputState }

func (RouterRipngRedistributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRipngRedistribute)(nil)).Elem()
}

func (o RouterRipngRedistributeArrayOutput) ToRouterRipngRedistributeArrayOutput() RouterRipngRedistributeArrayOutput {
	return o
}

func (o RouterRipngRedistributeArrayOutput) ToRouterRipngRedistributeArrayOutputWithContext(ctx context.Context) RouterRipngRedistributeArrayOutput {
	return o
}

func (o RouterRipngRedistributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRipngRedistribute] {
	return pulumix.Output[[]RouterRipngRedistribute]{
		OutputState: o.OutputState,
	}
}

func (o RouterRipngRedistributeArrayOutput) Index(i pulumi.IntInput) RouterRipngRedistributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRipngRedistribute {
		return vs[0].([]RouterRipngRedistribute)[vs[1].(int)]
	}).(RouterRipngRedistributeOutput)
}

type RouterRouteMapRule struct {
	Action                             *string                                `pulumi:"action"`
	Id                                 *int                                   `pulumi:"id"`
	MatchAsPath                        *string                                `pulumi:"matchAsPath"`
	MatchCommunity                     *string                                `pulumi:"matchCommunity"`
	MatchCommunityExact                *string                                `pulumi:"matchCommunityExact"`
	MatchExtcommunity                  *string                                `pulumi:"matchExtcommunity"`
	MatchExtcommunityExact             *string                                `pulumi:"matchExtcommunityExact"`
	MatchFlags                         *int                                   `pulumi:"matchFlags"`
	MatchInterface                     *string                                `pulumi:"matchInterface"`
	MatchIp6Address                    *string                                `pulumi:"matchIp6Address"`
	MatchIp6Nexthop                    *string                                `pulumi:"matchIp6Nexthop"`
	MatchIpAddress                     *string                                `pulumi:"matchIpAddress"`
	MatchIpNexthop                     *string                                `pulumi:"matchIpNexthop"`
	MatchMetric                        *int                                   `pulumi:"matchMetric"`
	MatchOrigin                        *string                                `pulumi:"matchOrigin"`
	MatchRouteType                     *string                                `pulumi:"matchRouteType"`
	MatchTag                           *int                                   `pulumi:"matchTag"`
	MatchVrf                           *int                                   `pulumi:"matchVrf"`
	SetAggregatorAs                    *int                                   `pulumi:"setAggregatorAs"`
	SetAggregatorIp                    *string                                `pulumi:"setAggregatorIp"`
	SetAspathAction                    *string                                `pulumi:"setAspathAction"`
	SetAspaths                         []RouterRouteMapRuleSetAspath          `pulumi:"setAspaths"`
	SetAtomicAggregate                 *string                                `pulumi:"setAtomicAggregate"`
	SetCommunities                     []RouterRouteMapRuleSetCommunity       `pulumi:"setCommunities"`
	SetCommunityAdditive               *string                                `pulumi:"setCommunityAdditive"`
	SetCommunityDelete                 *string                                `pulumi:"setCommunityDelete"`
	SetDampeningMaxSuppress            *int                                   `pulumi:"setDampeningMaxSuppress"`
	SetDampeningReachabilityHalfLife   *int                                   `pulumi:"setDampeningReachabilityHalfLife"`
	SetDampeningReuse                  *int                                   `pulumi:"setDampeningReuse"`
	SetDampeningSuppress               *int                                   `pulumi:"setDampeningSuppress"`
	SetDampeningUnreachabilityHalfLife *int                                   `pulumi:"setDampeningUnreachabilityHalfLife"`
	SetExtcommunityRts                 []RouterRouteMapRuleSetExtcommunityRt  `pulumi:"setExtcommunityRts"`
	SetExtcommunitySoos                []RouterRouteMapRuleSetExtcommunitySoo `pulumi:"setExtcommunitySoos"`
	SetFlags                           *int                                   `pulumi:"setFlags"`
	SetIp6Nexthop                      *string                                `pulumi:"setIp6Nexthop"`
	SetIp6NexthopLocal                 *string                                `pulumi:"setIp6NexthopLocal"`
	SetIpNexthop                       *string                                `pulumi:"setIpNexthop"`
	SetIpPrefsrc                       *string                                `pulumi:"setIpPrefsrc"`
	SetLocalPreference                 *int                                   `pulumi:"setLocalPreference"`
	SetMetric                          *int                                   `pulumi:"setMetric"`
	SetMetricType                      *string                                `pulumi:"setMetricType"`
	SetOrigin                          *string                                `pulumi:"setOrigin"`
	SetOriginatorId                    *string                                `pulumi:"setOriginatorId"`
	SetPriority                        *int                                   `pulumi:"setPriority"`
	SetRouteTag                        *int                                   `pulumi:"setRouteTag"`
	SetTag                             *int                                   `pulumi:"setTag"`
	SetVpnv4Nexthop                    *string                                `pulumi:"setVpnv4Nexthop"`
	SetWeight                          *int                                   `pulumi:"setWeight"`
}

// RouterRouteMapRuleInput is an input type that accepts RouterRouteMapRuleArgs and RouterRouteMapRuleOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleInput` via:
//
//	RouterRouteMapRuleArgs{...}
type RouterRouteMapRuleInput interface {
	pulumi.Input

	ToRouterRouteMapRuleOutput() RouterRouteMapRuleOutput
	ToRouterRouteMapRuleOutputWithContext(context.Context) RouterRouteMapRuleOutput
}

type RouterRouteMapRuleArgs struct {
	Action                             pulumi.StringPtrInput                          `pulumi:"action"`
	Id                                 pulumi.IntPtrInput                             `pulumi:"id"`
	MatchAsPath                        pulumi.StringPtrInput                          `pulumi:"matchAsPath"`
	MatchCommunity                     pulumi.StringPtrInput                          `pulumi:"matchCommunity"`
	MatchCommunityExact                pulumi.StringPtrInput                          `pulumi:"matchCommunityExact"`
	MatchExtcommunity                  pulumi.StringPtrInput                          `pulumi:"matchExtcommunity"`
	MatchExtcommunityExact             pulumi.StringPtrInput                          `pulumi:"matchExtcommunityExact"`
	MatchFlags                         pulumi.IntPtrInput                             `pulumi:"matchFlags"`
	MatchInterface                     pulumi.StringPtrInput                          `pulumi:"matchInterface"`
	MatchIp6Address                    pulumi.StringPtrInput                          `pulumi:"matchIp6Address"`
	MatchIp6Nexthop                    pulumi.StringPtrInput                          `pulumi:"matchIp6Nexthop"`
	MatchIpAddress                     pulumi.StringPtrInput                          `pulumi:"matchIpAddress"`
	MatchIpNexthop                     pulumi.StringPtrInput                          `pulumi:"matchIpNexthop"`
	MatchMetric                        pulumi.IntPtrInput                             `pulumi:"matchMetric"`
	MatchOrigin                        pulumi.StringPtrInput                          `pulumi:"matchOrigin"`
	MatchRouteType                     pulumi.StringPtrInput                          `pulumi:"matchRouteType"`
	MatchTag                           pulumi.IntPtrInput                             `pulumi:"matchTag"`
	MatchVrf                           pulumi.IntPtrInput                             `pulumi:"matchVrf"`
	SetAggregatorAs                    pulumi.IntPtrInput                             `pulumi:"setAggregatorAs"`
	SetAggregatorIp                    pulumi.StringPtrInput                          `pulumi:"setAggregatorIp"`
	SetAspathAction                    pulumi.StringPtrInput                          `pulumi:"setAspathAction"`
	SetAspaths                         RouterRouteMapRuleSetAspathArrayInput          `pulumi:"setAspaths"`
	SetAtomicAggregate                 pulumi.StringPtrInput                          `pulumi:"setAtomicAggregate"`
	SetCommunities                     RouterRouteMapRuleSetCommunityArrayInput       `pulumi:"setCommunities"`
	SetCommunityAdditive               pulumi.StringPtrInput                          `pulumi:"setCommunityAdditive"`
	SetCommunityDelete                 pulumi.StringPtrInput                          `pulumi:"setCommunityDelete"`
	SetDampeningMaxSuppress            pulumi.IntPtrInput                             `pulumi:"setDampeningMaxSuppress"`
	SetDampeningReachabilityHalfLife   pulumi.IntPtrInput                             `pulumi:"setDampeningReachabilityHalfLife"`
	SetDampeningReuse                  pulumi.IntPtrInput                             `pulumi:"setDampeningReuse"`
	SetDampeningSuppress               pulumi.IntPtrInput                             `pulumi:"setDampeningSuppress"`
	SetDampeningUnreachabilityHalfLife pulumi.IntPtrInput                             `pulumi:"setDampeningUnreachabilityHalfLife"`
	SetExtcommunityRts                 RouterRouteMapRuleSetExtcommunityRtArrayInput  `pulumi:"setExtcommunityRts"`
	SetExtcommunitySoos                RouterRouteMapRuleSetExtcommunitySooArrayInput `pulumi:"setExtcommunitySoos"`
	SetFlags                           pulumi.IntPtrInput                             `pulumi:"setFlags"`
	SetIp6Nexthop                      pulumi.StringPtrInput                          `pulumi:"setIp6Nexthop"`
	SetIp6NexthopLocal                 pulumi.StringPtrInput                          `pulumi:"setIp6NexthopLocal"`
	SetIpNexthop                       pulumi.StringPtrInput                          `pulumi:"setIpNexthop"`
	SetIpPrefsrc                       pulumi.StringPtrInput                          `pulumi:"setIpPrefsrc"`
	SetLocalPreference                 pulumi.IntPtrInput                             `pulumi:"setLocalPreference"`
	SetMetric                          pulumi.IntPtrInput                             `pulumi:"setMetric"`
	SetMetricType                      pulumi.StringPtrInput                          `pulumi:"setMetricType"`
	SetOrigin                          pulumi.StringPtrInput                          `pulumi:"setOrigin"`
	SetOriginatorId                    pulumi.StringPtrInput                          `pulumi:"setOriginatorId"`
	SetPriority                        pulumi.IntPtrInput                             `pulumi:"setPriority"`
	SetRouteTag                        pulumi.IntPtrInput                             `pulumi:"setRouteTag"`
	SetTag                             pulumi.IntPtrInput                             `pulumi:"setTag"`
	SetVpnv4Nexthop                    pulumi.StringPtrInput                          `pulumi:"setVpnv4Nexthop"`
	SetWeight                          pulumi.IntPtrInput                             `pulumi:"setWeight"`
}

func (RouterRouteMapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRule)(nil)).Elem()
}

func (i RouterRouteMapRuleArgs) ToRouterRouteMapRuleOutput() RouterRouteMapRuleOutput {
	return i.ToRouterRouteMapRuleOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleArgs) ToRouterRouteMapRuleOutputWithContext(ctx context.Context) RouterRouteMapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleOutput)
}

func (i RouterRouteMapRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRule] {
	return pulumix.Output[RouterRouteMapRule]{
		OutputState: i.ToRouterRouteMapRuleOutputWithContext(ctx).OutputState,
	}
}

// RouterRouteMapRuleArrayInput is an input type that accepts RouterRouteMapRuleArray and RouterRouteMapRuleArrayOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleArrayInput` via:
//
//	RouterRouteMapRuleArray{ RouterRouteMapRuleArgs{...} }
type RouterRouteMapRuleArrayInput interface {
	pulumi.Input

	ToRouterRouteMapRuleArrayOutput() RouterRouteMapRuleArrayOutput
	ToRouterRouteMapRuleArrayOutputWithContext(context.Context) RouterRouteMapRuleArrayOutput
}

type RouterRouteMapRuleArray []RouterRouteMapRuleInput

func (RouterRouteMapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRule)(nil)).Elem()
}

func (i RouterRouteMapRuleArray) ToRouterRouteMapRuleArrayOutput() RouterRouteMapRuleArrayOutput {
	return i.ToRouterRouteMapRuleArrayOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleArray) ToRouterRouteMapRuleArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleArrayOutput)
}

func (i RouterRouteMapRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRule] {
	return pulumix.Output[[]RouterRouteMapRule]{
		OutputState: i.ToRouterRouteMapRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRouteMapRuleOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRule)(nil)).Elem()
}

func (o RouterRouteMapRuleOutput) ToRouterRouteMapRuleOutput() RouterRouteMapRuleOutput {
	return o
}

func (o RouterRouteMapRuleOutput) ToRouterRouteMapRuleOutputWithContext(ctx context.Context) RouterRouteMapRuleOutput {
	return o
}

func (o RouterRouteMapRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRule] {
	return pulumix.Output[RouterRouteMapRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchAsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchAsPath }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchCommunity }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchCommunityExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchCommunityExact }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchExtcommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchExtcommunity }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchExtcommunityExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchExtcommunityExact }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.MatchFlags }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchInterface }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchIp6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchIp6Address }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchIp6Nexthop }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchIpAddress }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchIpNexthop }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.MatchMetric }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchOrigin }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchRouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.MatchRouteType }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.MatchTag }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) MatchVrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.MatchVrf }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetAggregatorAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetAggregatorAs }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetAggregatorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetAggregatorIp }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetAspathAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetAspathAction }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetAspaths() RouterRouteMapRuleSetAspathArrayOutput {
	return o.ApplyT(func(v RouterRouteMapRule) []RouterRouteMapRuleSetAspath { return v.SetAspaths }).(RouterRouteMapRuleSetAspathArrayOutput)
}

func (o RouterRouteMapRuleOutput) SetAtomicAggregate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetAtomicAggregate }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetCommunities() RouterRouteMapRuleSetCommunityArrayOutput {
	return o.ApplyT(func(v RouterRouteMapRule) []RouterRouteMapRuleSetCommunity { return v.SetCommunities }).(RouterRouteMapRuleSetCommunityArrayOutput)
}

func (o RouterRouteMapRuleOutput) SetCommunityAdditive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetCommunityAdditive }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetCommunityDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetCommunityDelete }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetDampeningMaxSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetDampeningMaxSuppress }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetDampeningReachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetDampeningReachabilityHalfLife }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetDampeningReuse() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetDampeningReuse }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetDampeningSuppress() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetDampeningSuppress }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetDampeningUnreachabilityHalfLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetDampeningUnreachabilityHalfLife }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetExtcommunityRts() RouterRouteMapRuleSetExtcommunityRtArrayOutput {
	return o.ApplyT(func(v RouterRouteMapRule) []RouterRouteMapRuleSetExtcommunityRt { return v.SetExtcommunityRts }).(RouterRouteMapRuleSetExtcommunityRtArrayOutput)
}

func (o RouterRouteMapRuleOutput) SetExtcommunitySoos() RouterRouteMapRuleSetExtcommunitySooArrayOutput {
	return o.ApplyT(func(v RouterRouteMapRule) []RouterRouteMapRuleSetExtcommunitySoo { return v.SetExtcommunitySoos }).(RouterRouteMapRuleSetExtcommunitySooArrayOutput)
}

func (o RouterRouteMapRuleOutput) SetFlags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetFlags }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetIp6Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetIp6Nexthop }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetIp6NexthopLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetIp6NexthopLocal }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetIpNexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetIpNexthop }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetIpPrefsrc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetIpPrefsrc }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetLocalPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetLocalPreference }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetMetric() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetMetric }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetMetricType }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetOrigin }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetOriginatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetOriginatorId }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetPriority }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetRouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetRouteTag }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetTag }).(pulumi.IntPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetVpnv4Nexthop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *string { return v.SetVpnv4Nexthop }).(pulumi.StringPtrOutput)
}

func (o RouterRouteMapRuleOutput) SetWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRule) *int { return v.SetWeight }).(pulumi.IntPtrOutput)
}

type RouterRouteMapRuleArrayOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRule)(nil)).Elem()
}

func (o RouterRouteMapRuleArrayOutput) ToRouterRouteMapRuleArrayOutput() RouterRouteMapRuleArrayOutput {
	return o
}

func (o RouterRouteMapRuleArrayOutput) ToRouterRouteMapRuleArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleArrayOutput {
	return o
}

func (o RouterRouteMapRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRule] {
	return pulumix.Output[[]RouterRouteMapRule]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleArrayOutput) Index(i pulumi.IntInput) RouterRouteMapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRouteMapRule {
		return vs[0].([]RouterRouteMapRule)[vs[1].(int)]
	}).(RouterRouteMapRuleOutput)
}

type RouterRouteMapRuleSetAspath struct {
	As *string `pulumi:"as"`
}

// RouterRouteMapRuleSetAspathInput is an input type that accepts RouterRouteMapRuleSetAspathArgs and RouterRouteMapRuleSetAspathOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetAspathInput` via:
//
//	RouterRouteMapRuleSetAspathArgs{...}
type RouterRouteMapRuleSetAspathInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetAspathOutput() RouterRouteMapRuleSetAspathOutput
	ToRouterRouteMapRuleSetAspathOutputWithContext(context.Context) RouterRouteMapRuleSetAspathOutput
}

type RouterRouteMapRuleSetAspathArgs struct {
	As pulumi.StringPtrInput `pulumi:"as"`
}

func (RouterRouteMapRuleSetAspathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetAspath)(nil)).Elem()
}

func (i RouterRouteMapRuleSetAspathArgs) ToRouterRouteMapRuleSetAspathOutput() RouterRouteMapRuleSetAspathOutput {
	return i.ToRouterRouteMapRuleSetAspathOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetAspathArgs) ToRouterRouteMapRuleSetAspathOutputWithContext(ctx context.Context) RouterRouteMapRuleSetAspathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetAspathOutput)
}

func (i RouterRouteMapRuleSetAspathArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetAspath] {
	return pulumix.Output[RouterRouteMapRuleSetAspath]{
		OutputState: i.ToRouterRouteMapRuleSetAspathOutputWithContext(ctx).OutputState,
	}
}

// RouterRouteMapRuleSetAspathArrayInput is an input type that accepts RouterRouteMapRuleSetAspathArray and RouterRouteMapRuleSetAspathArrayOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetAspathArrayInput` via:
//
//	RouterRouteMapRuleSetAspathArray{ RouterRouteMapRuleSetAspathArgs{...} }
type RouterRouteMapRuleSetAspathArrayInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetAspathArrayOutput() RouterRouteMapRuleSetAspathArrayOutput
	ToRouterRouteMapRuleSetAspathArrayOutputWithContext(context.Context) RouterRouteMapRuleSetAspathArrayOutput
}

type RouterRouteMapRuleSetAspathArray []RouterRouteMapRuleSetAspathInput

func (RouterRouteMapRuleSetAspathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetAspath)(nil)).Elem()
}

func (i RouterRouteMapRuleSetAspathArray) ToRouterRouteMapRuleSetAspathArrayOutput() RouterRouteMapRuleSetAspathArrayOutput {
	return i.ToRouterRouteMapRuleSetAspathArrayOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetAspathArray) ToRouterRouteMapRuleSetAspathArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetAspathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetAspathArrayOutput)
}

func (i RouterRouteMapRuleSetAspathArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetAspath] {
	return pulumix.Output[[]RouterRouteMapRuleSetAspath]{
		OutputState: i.ToRouterRouteMapRuleSetAspathArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRouteMapRuleSetAspathOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetAspathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetAspath)(nil)).Elem()
}

func (o RouterRouteMapRuleSetAspathOutput) ToRouterRouteMapRuleSetAspathOutput() RouterRouteMapRuleSetAspathOutput {
	return o
}

func (o RouterRouteMapRuleSetAspathOutput) ToRouterRouteMapRuleSetAspathOutputWithContext(ctx context.Context) RouterRouteMapRuleSetAspathOutput {
	return o
}

func (o RouterRouteMapRuleSetAspathOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetAspath] {
	return pulumix.Output[RouterRouteMapRuleSetAspath]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetAspathOutput) As() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRuleSetAspath) *string { return v.As }).(pulumi.StringPtrOutput)
}

type RouterRouteMapRuleSetAspathArrayOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetAspathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetAspath)(nil)).Elem()
}

func (o RouterRouteMapRuleSetAspathArrayOutput) ToRouterRouteMapRuleSetAspathArrayOutput() RouterRouteMapRuleSetAspathArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetAspathArrayOutput) ToRouterRouteMapRuleSetAspathArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetAspathArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetAspathArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetAspath] {
	return pulumix.Output[[]RouterRouteMapRuleSetAspath]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetAspathArrayOutput) Index(i pulumi.IntInput) RouterRouteMapRuleSetAspathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRouteMapRuleSetAspath {
		return vs[0].([]RouterRouteMapRuleSetAspath)[vs[1].(int)]
	}).(RouterRouteMapRuleSetAspathOutput)
}

type RouterRouteMapRuleSetCommunity struct {
	Community *string `pulumi:"community"`
}

// RouterRouteMapRuleSetCommunityInput is an input type that accepts RouterRouteMapRuleSetCommunityArgs and RouterRouteMapRuleSetCommunityOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetCommunityInput` via:
//
//	RouterRouteMapRuleSetCommunityArgs{...}
type RouterRouteMapRuleSetCommunityInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetCommunityOutput() RouterRouteMapRuleSetCommunityOutput
	ToRouterRouteMapRuleSetCommunityOutputWithContext(context.Context) RouterRouteMapRuleSetCommunityOutput
}

type RouterRouteMapRuleSetCommunityArgs struct {
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRouteMapRuleSetCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetCommunity)(nil)).Elem()
}

func (i RouterRouteMapRuleSetCommunityArgs) ToRouterRouteMapRuleSetCommunityOutput() RouterRouteMapRuleSetCommunityOutput {
	return i.ToRouterRouteMapRuleSetCommunityOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetCommunityArgs) ToRouterRouteMapRuleSetCommunityOutputWithContext(ctx context.Context) RouterRouteMapRuleSetCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetCommunityOutput)
}

func (i RouterRouteMapRuleSetCommunityArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetCommunity] {
	return pulumix.Output[RouterRouteMapRuleSetCommunity]{
		OutputState: i.ToRouterRouteMapRuleSetCommunityOutputWithContext(ctx).OutputState,
	}
}

// RouterRouteMapRuleSetCommunityArrayInput is an input type that accepts RouterRouteMapRuleSetCommunityArray and RouterRouteMapRuleSetCommunityArrayOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetCommunityArrayInput` via:
//
//	RouterRouteMapRuleSetCommunityArray{ RouterRouteMapRuleSetCommunityArgs{...} }
type RouterRouteMapRuleSetCommunityArrayInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetCommunityArrayOutput() RouterRouteMapRuleSetCommunityArrayOutput
	ToRouterRouteMapRuleSetCommunityArrayOutputWithContext(context.Context) RouterRouteMapRuleSetCommunityArrayOutput
}

type RouterRouteMapRuleSetCommunityArray []RouterRouteMapRuleSetCommunityInput

func (RouterRouteMapRuleSetCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetCommunity)(nil)).Elem()
}

func (i RouterRouteMapRuleSetCommunityArray) ToRouterRouteMapRuleSetCommunityArrayOutput() RouterRouteMapRuleSetCommunityArrayOutput {
	return i.ToRouterRouteMapRuleSetCommunityArrayOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetCommunityArray) ToRouterRouteMapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetCommunityArrayOutput)
}

func (i RouterRouteMapRuleSetCommunityArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetCommunity] {
	return pulumix.Output[[]RouterRouteMapRuleSetCommunity]{
		OutputState: i.ToRouterRouteMapRuleSetCommunityArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRouteMapRuleSetCommunityOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetCommunity)(nil)).Elem()
}

func (o RouterRouteMapRuleSetCommunityOutput) ToRouterRouteMapRuleSetCommunityOutput() RouterRouteMapRuleSetCommunityOutput {
	return o
}

func (o RouterRouteMapRuleSetCommunityOutput) ToRouterRouteMapRuleSetCommunityOutputWithContext(ctx context.Context) RouterRouteMapRuleSetCommunityOutput {
	return o
}

func (o RouterRouteMapRuleSetCommunityOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetCommunity] {
	return pulumix.Output[RouterRouteMapRuleSetCommunity]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetCommunityOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRuleSetCommunity) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRouteMapRuleSetCommunityArrayOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetCommunity)(nil)).Elem()
}

func (o RouterRouteMapRuleSetCommunityArrayOutput) ToRouterRouteMapRuleSetCommunityArrayOutput() RouterRouteMapRuleSetCommunityArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetCommunityArrayOutput) ToRouterRouteMapRuleSetCommunityArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetCommunityArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetCommunityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetCommunity] {
	return pulumix.Output[[]RouterRouteMapRuleSetCommunity]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetCommunityArrayOutput) Index(i pulumi.IntInput) RouterRouteMapRuleSetCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRouteMapRuleSetCommunity {
		return vs[0].([]RouterRouteMapRuleSetCommunity)[vs[1].(int)]
	}).(RouterRouteMapRuleSetCommunityOutput)
}

type RouterRouteMapRuleSetExtcommunityRt struct {
	Community *string `pulumi:"community"`
}

// RouterRouteMapRuleSetExtcommunityRtInput is an input type that accepts RouterRouteMapRuleSetExtcommunityRtArgs and RouterRouteMapRuleSetExtcommunityRtOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetExtcommunityRtInput` via:
//
//	RouterRouteMapRuleSetExtcommunityRtArgs{...}
type RouterRouteMapRuleSetExtcommunityRtInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetExtcommunityRtOutput() RouterRouteMapRuleSetExtcommunityRtOutput
	ToRouterRouteMapRuleSetExtcommunityRtOutputWithContext(context.Context) RouterRouteMapRuleSetExtcommunityRtOutput
}

type RouterRouteMapRuleSetExtcommunityRtArgs struct {
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRouteMapRuleSetExtcommunityRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RouterRouteMapRuleSetExtcommunityRtArgs) ToRouterRouteMapRuleSetExtcommunityRtOutput() RouterRouteMapRuleSetExtcommunityRtOutput {
	return i.ToRouterRouteMapRuleSetExtcommunityRtOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetExtcommunityRtArgs) ToRouterRouteMapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunityRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetExtcommunityRtOutput)
}

func (i RouterRouteMapRuleSetExtcommunityRtArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetExtcommunityRt] {
	return pulumix.Output[RouterRouteMapRuleSetExtcommunityRt]{
		OutputState: i.ToRouterRouteMapRuleSetExtcommunityRtOutputWithContext(ctx).OutputState,
	}
}

// RouterRouteMapRuleSetExtcommunityRtArrayInput is an input type that accepts RouterRouteMapRuleSetExtcommunityRtArray and RouterRouteMapRuleSetExtcommunityRtArrayOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetExtcommunityRtArrayInput` via:
//
//	RouterRouteMapRuleSetExtcommunityRtArray{ RouterRouteMapRuleSetExtcommunityRtArgs{...} }
type RouterRouteMapRuleSetExtcommunityRtArrayInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetExtcommunityRtArrayOutput() RouterRouteMapRuleSetExtcommunityRtArrayOutput
	ToRouterRouteMapRuleSetExtcommunityRtArrayOutputWithContext(context.Context) RouterRouteMapRuleSetExtcommunityRtArrayOutput
}

type RouterRouteMapRuleSetExtcommunityRtArray []RouterRouteMapRuleSetExtcommunityRtInput

func (RouterRouteMapRuleSetExtcommunityRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetExtcommunityRt)(nil)).Elem()
}

func (i RouterRouteMapRuleSetExtcommunityRtArray) ToRouterRouteMapRuleSetExtcommunityRtArrayOutput() RouterRouteMapRuleSetExtcommunityRtArrayOutput {
	return i.ToRouterRouteMapRuleSetExtcommunityRtArrayOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetExtcommunityRtArray) ToRouterRouteMapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunityRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetExtcommunityRtArrayOutput)
}

func (i RouterRouteMapRuleSetExtcommunityRtArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetExtcommunityRt] {
	return pulumix.Output[[]RouterRouteMapRuleSetExtcommunityRt]{
		OutputState: i.ToRouterRouteMapRuleSetExtcommunityRtArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRouteMapRuleSetExtcommunityRtOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetExtcommunityRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RouterRouteMapRuleSetExtcommunityRtOutput) ToRouterRouteMapRuleSetExtcommunityRtOutput() RouterRouteMapRuleSetExtcommunityRtOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunityRtOutput) ToRouterRouteMapRuleSetExtcommunityRtOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunityRtOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunityRtOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetExtcommunityRt] {
	return pulumix.Output[RouterRouteMapRuleSetExtcommunityRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetExtcommunityRtOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRuleSetExtcommunityRt) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRouteMapRuleSetExtcommunityRtArrayOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetExtcommunityRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetExtcommunityRt)(nil)).Elem()
}

func (o RouterRouteMapRuleSetExtcommunityRtArrayOutput) ToRouterRouteMapRuleSetExtcommunityRtArrayOutput() RouterRouteMapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunityRtArrayOutput) ToRouterRouteMapRuleSetExtcommunityRtArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunityRtArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunityRtArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetExtcommunityRt] {
	return pulumix.Output[[]RouterRouteMapRuleSetExtcommunityRt]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetExtcommunityRtArrayOutput) Index(i pulumi.IntInput) RouterRouteMapRuleSetExtcommunityRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRouteMapRuleSetExtcommunityRt {
		return vs[0].([]RouterRouteMapRuleSetExtcommunityRt)[vs[1].(int)]
	}).(RouterRouteMapRuleSetExtcommunityRtOutput)
}

type RouterRouteMapRuleSetExtcommunitySoo struct {
	Community *string `pulumi:"community"`
}

// RouterRouteMapRuleSetExtcommunitySooInput is an input type that accepts RouterRouteMapRuleSetExtcommunitySooArgs and RouterRouteMapRuleSetExtcommunitySooOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetExtcommunitySooInput` via:
//
//	RouterRouteMapRuleSetExtcommunitySooArgs{...}
type RouterRouteMapRuleSetExtcommunitySooInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetExtcommunitySooOutput() RouterRouteMapRuleSetExtcommunitySooOutput
	ToRouterRouteMapRuleSetExtcommunitySooOutputWithContext(context.Context) RouterRouteMapRuleSetExtcommunitySooOutput
}

type RouterRouteMapRuleSetExtcommunitySooArgs struct {
	Community pulumi.StringPtrInput `pulumi:"community"`
}

func (RouterRouteMapRuleSetExtcommunitySooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RouterRouteMapRuleSetExtcommunitySooArgs) ToRouterRouteMapRuleSetExtcommunitySooOutput() RouterRouteMapRuleSetExtcommunitySooOutput {
	return i.ToRouterRouteMapRuleSetExtcommunitySooOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetExtcommunitySooArgs) ToRouterRouteMapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunitySooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetExtcommunitySooOutput)
}

func (i RouterRouteMapRuleSetExtcommunitySooArgs) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetExtcommunitySoo] {
	return pulumix.Output[RouterRouteMapRuleSetExtcommunitySoo]{
		OutputState: i.ToRouterRouteMapRuleSetExtcommunitySooOutputWithContext(ctx).OutputState,
	}
}

// RouterRouteMapRuleSetExtcommunitySooArrayInput is an input type that accepts RouterRouteMapRuleSetExtcommunitySooArray and RouterRouteMapRuleSetExtcommunitySooArrayOutput values.
// You can construct a concrete instance of `RouterRouteMapRuleSetExtcommunitySooArrayInput` via:
//
//	RouterRouteMapRuleSetExtcommunitySooArray{ RouterRouteMapRuleSetExtcommunitySooArgs{...} }
type RouterRouteMapRuleSetExtcommunitySooArrayInput interface {
	pulumi.Input

	ToRouterRouteMapRuleSetExtcommunitySooArrayOutput() RouterRouteMapRuleSetExtcommunitySooArrayOutput
	ToRouterRouteMapRuleSetExtcommunitySooArrayOutputWithContext(context.Context) RouterRouteMapRuleSetExtcommunitySooArrayOutput
}

type RouterRouteMapRuleSetExtcommunitySooArray []RouterRouteMapRuleSetExtcommunitySooInput

func (RouterRouteMapRuleSetExtcommunitySooArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (i RouterRouteMapRuleSetExtcommunitySooArray) ToRouterRouteMapRuleSetExtcommunitySooArrayOutput() RouterRouteMapRuleSetExtcommunitySooArrayOutput {
	return i.ToRouterRouteMapRuleSetExtcommunitySooArrayOutputWithContext(context.Background())
}

func (i RouterRouteMapRuleSetExtcommunitySooArray) ToRouterRouteMapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunitySooArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterRouteMapRuleSetExtcommunitySooArrayOutput)
}

func (i RouterRouteMapRuleSetExtcommunitySooArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetExtcommunitySoo] {
	return pulumix.Output[[]RouterRouteMapRuleSetExtcommunitySoo]{
		OutputState: i.ToRouterRouteMapRuleSetExtcommunitySooArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterRouteMapRuleSetExtcommunitySooOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetExtcommunitySooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterRouteMapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RouterRouteMapRuleSetExtcommunitySooOutput) ToRouterRouteMapRuleSetExtcommunitySooOutput() RouterRouteMapRuleSetExtcommunitySooOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunitySooOutput) ToRouterRouteMapRuleSetExtcommunitySooOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunitySooOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunitySooOutput) ToOutput(ctx context.Context) pulumix.Output[RouterRouteMapRuleSetExtcommunitySoo] {
	return pulumix.Output[RouterRouteMapRuleSetExtcommunitySoo]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetExtcommunitySooOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterRouteMapRuleSetExtcommunitySoo) *string { return v.Community }).(pulumi.StringPtrOutput)
}

type RouterRouteMapRuleSetExtcommunitySooArrayOutput struct{ *pulumi.OutputState }

func (RouterRouteMapRuleSetExtcommunitySooArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterRouteMapRuleSetExtcommunitySoo)(nil)).Elem()
}

func (o RouterRouteMapRuleSetExtcommunitySooArrayOutput) ToRouterRouteMapRuleSetExtcommunitySooArrayOutput() RouterRouteMapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunitySooArrayOutput) ToRouterRouteMapRuleSetExtcommunitySooArrayOutputWithContext(ctx context.Context) RouterRouteMapRuleSetExtcommunitySooArrayOutput {
	return o
}

func (o RouterRouteMapRuleSetExtcommunitySooArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterRouteMapRuleSetExtcommunitySoo] {
	return pulumix.Output[[]RouterRouteMapRuleSetExtcommunitySoo]{
		OutputState: o.OutputState,
	}
}

func (o RouterRouteMapRuleSetExtcommunitySooArrayOutput) Index(i pulumi.IntInput) RouterRouteMapRuleSetExtcommunitySooOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterRouteMapRuleSetExtcommunitySoo {
		return vs[0].([]RouterRouteMapRuleSetExtcommunitySoo)[vs[1].(int)]
	}).(RouterRouteMapRuleSetExtcommunitySooOutput)
}

type RouterStatic6SdwanZone struct {
	Name *string `pulumi:"name"`
}

// RouterStatic6SdwanZoneInput is an input type that accepts RouterStatic6SdwanZoneArgs and RouterStatic6SdwanZoneOutput values.
// You can construct a concrete instance of `RouterStatic6SdwanZoneInput` via:
//
//	RouterStatic6SdwanZoneArgs{...}
type RouterStatic6SdwanZoneInput interface {
	pulumi.Input

	ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput
	ToRouterStatic6SdwanZoneOutputWithContext(context.Context) RouterStatic6SdwanZoneOutput
}

type RouterStatic6SdwanZoneArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterStatic6SdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStatic6SdwanZone)(nil)).Elem()
}

func (i RouterStatic6SdwanZoneArgs) ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput {
	return i.ToRouterStatic6SdwanZoneOutputWithContext(context.Background())
}

func (i RouterStatic6SdwanZoneArgs) ToRouterStatic6SdwanZoneOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStatic6SdwanZoneOutput)
}

func (i RouterStatic6SdwanZoneArgs) ToOutput(ctx context.Context) pulumix.Output[RouterStatic6SdwanZone] {
	return pulumix.Output[RouterStatic6SdwanZone]{
		OutputState: i.ToRouterStatic6SdwanZoneOutputWithContext(ctx).OutputState,
	}
}

// RouterStatic6SdwanZoneArrayInput is an input type that accepts RouterStatic6SdwanZoneArray and RouterStatic6SdwanZoneArrayOutput values.
// You can construct a concrete instance of `RouterStatic6SdwanZoneArrayInput` via:
//
//	RouterStatic6SdwanZoneArray{ RouterStatic6SdwanZoneArgs{...} }
type RouterStatic6SdwanZoneArrayInput interface {
	pulumi.Input

	ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput
	ToRouterStatic6SdwanZoneArrayOutputWithContext(context.Context) RouterStatic6SdwanZoneArrayOutput
}

type RouterStatic6SdwanZoneArray []RouterStatic6SdwanZoneInput

func (RouterStatic6SdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStatic6SdwanZone)(nil)).Elem()
}

func (i RouterStatic6SdwanZoneArray) ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput {
	return i.ToRouterStatic6SdwanZoneArrayOutputWithContext(context.Background())
}

func (i RouterStatic6SdwanZoneArray) ToRouterStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStatic6SdwanZoneArrayOutput)
}

func (i RouterStatic6SdwanZoneArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterStatic6SdwanZone] {
	return pulumix.Output[[]RouterStatic6SdwanZone]{
		OutputState: i.ToRouterStatic6SdwanZoneArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterStatic6SdwanZoneOutput struct{ *pulumi.OutputState }

func (RouterStatic6SdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStatic6SdwanZone)(nil)).Elem()
}

func (o RouterStatic6SdwanZoneOutput) ToRouterStatic6SdwanZoneOutput() RouterStatic6SdwanZoneOutput {
	return o
}

func (o RouterStatic6SdwanZoneOutput) ToRouterStatic6SdwanZoneOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneOutput {
	return o
}

func (o RouterStatic6SdwanZoneOutput) ToOutput(ctx context.Context) pulumix.Output[RouterStatic6SdwanZone] {
	return pulumix.Output[RouterStatic6SdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o RouterStatic6SdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterStatic6SdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterStatic6SdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (RouterStatic6SdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStatic6SdwanZone)(nil)).Elem()
}

func (o RouterStatic6SdwanZoneArrayOutput) ToRouterStatic6SdwanZoneArrayOutput() RouterStatic6SdwanZoneArrayOutput {
	return o
}

func (o RouterStatic6SdwanZoneArrayOutput) ToRouterStatic6SdwanZoneArrayOutputWithContext(ctx context.Context) RouterStatic6SdwanZoneArrayOutput {
	return o
}

func (o RouterStatic6SdwanZoneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterStatic6SdwanZone] {
	return pulumix.Output[[]RouterStatic6SdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o RouterStatic6SdwanZoneArrayOutput) Index(i pulumi.IntInput) RouterStatic6SdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterStatic6SdwanZone {
		return vs[0].([]RouterStatic6SdwanZone)[vs[1].(int)]
	}).(RouterStatic6SdwanZoneOutput)
}

type RouterStaticSdwanZone struct {
	Name *string `pulumi:"name"`
}

// RouterStaticSdwanZoneInput is an input type that accepts RouterStaticSdwanZoneArgs and RouterStaticSdwanZoneOutput values.
// You can construct a concrete instance of `RouterStaticSdwanZoneInput` via:
//
//	RouterStaticSdwanZoneArgs{...}
type RouterStaticSdwanZoneInput interface {
	pulumi.Input

	ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput
	ToRouterStaticSdwanZoneOutputWithContext(context.Context) RouterStaticSdwanZoneOutput
}

type RouterStaticSdwanZoneArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RouterStaticSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticSdwanZone)(nil)).Elem()
}

func (i RouterStaticSdwanZoneArgs) ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput {
	return i.ToRouterStaticSdwanZoneOutputWithContext(context.Background())
}

func (i RouterStaticSdwanZoneArgs) ToRouterStaticSdwanZoneOutputWithContext(ctx context.Context) RouterStaticSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticSdwanZoneOutput)
}

func (i RouterStaticSdwanZoneArgs) ToOutput(ctx context.Context) pulumix.Output[RouterStaticSdwanZone] {
	return pulumix.Output[RouterStaticSdwanZone]{
		OutputState: i.ToRouterStaticSdwanZoneOutputWithContext(ctx).OutputState,
	}
}

// RouterStaticSdwanZoneArrayInput is an input type that accepts RouterStaticSdwanZoneArray and RouterStaticSdwanZoneArrayOutput values.
// You can construct a concrete instance of `RouterStaticSdwanZoneArrayInput` via:
//
//	RouterStaticSdwanZoneArray{ RouterStaticSdwanZoneArgs{...} }
type RouterStaticSdwanZoneArrayInput interface {
	pulumi.Input

	ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput
	ToRouterStaticSdwanZoneArrayOutputWithContext(context.Context) RouterStaticSdwanZoneArrayOutput
}

type RouterStaticSdwanZoneArray []RouterStaticSdwanZoneInput

func (RouterStaticSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticSdwanZone)(nil)).Elem()
}

func (i RouterStaticSdwanZoneArray) ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput {
	return i.ToRouterStaticSdwanZoneArrayOutputWithContext(context.Background())
}

func (i RouterStaticSdwanZoneArray) ToRouterStaticSdwanZoneArrayOutputWithContext(ctx context.Context) RouterStaticSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticSdwanZoneArrayOutput)
}

func (i RouterStaticSdwanZoneArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterStaticSdwanZone] {
	return pulumix.Output[[]RouterStaticSdwanZone]{
		OutputState: i.ToRouterStaticSdwanZoneArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterStaticSdwanZoneOutput struct{ *pulumi.OutputState }

func (RouterStaticSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticSdwanZone)(nil)).Elem()
}

func (o RouterStaticSdwanZoneOutput) ToRouterStaticSdwanZoneOutput() RouterStaticSdwanZoneOutput {
	return o
}

func (o RouterStaticSdwanZoneOutput) ToRouterStaticSdwanZoneOutputWithContext(ctx context.Context) RouterStaticSdwanZoneOutput {
	return o
}

func (o RouterStaticSdwanZoneOutput) ToOutput(ctx context.Context) pulumix.Output[RouterStaticSdwanZone] {
	return pulumix.Output[RouterStaticSdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o RouterStaticSdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterStaticSdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RouterStaticSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (RouterStaticSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticSdwanZone)(nil)).Elem()
}

func (o RouterStaticSdwanZoneArrayOutput) ToRouterStaticSdwanZoneArrayOutput() RouterStaticSdwanZoneArrayOutput {
	return o
}

func (o RouterStaticSdwanZoneArrayOutput) ToRouterStaticSdwanZoneArrayOutputWithContext(ctx context.Context) RouterStaticSdwanZoneArrayOutput {
	return o
}

func (o RouterStaticSdwanZoneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterStaticSdwanZone] {
	return pulumix.Output[[]RouterStaticSdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o RouterStaticSdwanZoneArrayOutput) Index(i pulumi.IntInput) RouterStaticSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterStaticSdwanZone {
		return vs[0].([]RouterStaticSdwanZone)[vs[1].(int)]
	}).(RouterStaticSdwanZoneOutput)
}

type RouterbgpNeighborConditionalAdvertise6 struct {
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	ConditionType     *string `pulumi:"conditionType"`
}

// RouterbgpNeighborConditionalAdvertise6Input is an input type that accepts RouterbgpNeighborConditionalAdvertise6Args and RouterbgpNeighborConditionalAdvertise6Output values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertise6Input` via:
//
//	RouterbgpNeighborConditionalAdvertise6Args{...}
type RouterbgpNeighborConditionalAdvertise6Input interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output
	ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertise6Output
}

type RouterbgpNeighborConditionalAdvertise6Args struct {
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	ConditionType     pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterbgpNeighborConditionalAdvertise6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertise6Args) ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output {
	return i.ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertise6Args) ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertise6Output)
}

func (i RouterbgpNeighborConditionalAdvertise6Args) ToOutput(ctx context.Context) pulumix.Output[RouterbgpNeighborConditionalAdvertise6] {
	return pulumix.Output[RouterbgpNeighborConditionalAdvertise6]{
		OutputState: i.ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(ctx).OutputState,
	}
}

// RouterbgpNeighborConditionalAdvertise6ArrayInput is an input type that accepts RouterbgpNeighborConditionalAdvertise6Array and RouterbgpNeighborConditionalAdvertise6ArrayOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertise6ArrayInput` via:
//
//	RouterbgpNeighborConditionalAdvertise6Array{ RouterbgpNeighborConditionalAdvertise6Args{...} }
type RouterbgpNeighborConditionalAdvertise6ArrayInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput
	ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput
}

type RouterbgpNeighborConditionalAdvertise6Array []RouterbgpNeighborConditionalAdvertise6Input

func (RouterbgpNeighborConditionalAdvertise6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertise6Array) ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return i.ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertise6Array) ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertise6ArrayOutput)
}

func (i RouterbgpNeighborConditionalAdvertise6Array) ToOutput(ctx context.Context) pulumix.Output[[]RouterbgpNeighborConditionalAdvertise6] {
	return pulumix.Output[[]RouterbgpNeighborConditionalAdvertise6]{
		OutputState: i.ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterbgpNeighborConditionalAdvertise6Output struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertise6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ToRouterbgpNeighborConditionalAdvertise6Output() RouterbgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ToRouterbgpNeighborConditionalAdvertise6OutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6Output {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ToOutput(ctx context.Context) pulumix.Output[RouterbgpNeighborConditionalAdvertise6] {
	return pulumix.Output[RouterbgpNeighborConditionalAdvertise6]{
		OutputState: o.OutputState,
	}
}

func (o RouterbgpNeighborConditionalAdvertise6Output) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterbgpNeighborConditionalAdvertise6Output) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise6) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterbgpNeighborConditionalAdvertise6ArrayOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertise6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise6)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) ToRouterbgpNeighborConditionalAdvertise6ArrayOutput() RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) ToRouterbgpNeighborConditionalAdvertise6ArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertise6ArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterbgpNeighborConditionalAdvertise6] {
	return pulumix.Output[[]RouterbgpNeighborConditionalAdvertise6]{
		OutputState: o.OutputState,
	}
}

func (o RouterbgpNeighborConditionalAdvertise6ArrayOutput) Index(i pulumi.IntInput) RouterbgpNeighborConditionalAdvertise6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterbgpNeighborConditionalAdvertise6 {
		return vs[0].([]RouterbgpNeighborConditionalAdvertise6)[vs[1].(int)]
	}).(RouterbgpNeighborConditionalAdvertise6Output)
}

type RouterbgpNeighborConditionalAdvertise struct {
	AdvertiseRoutemap *string `pulumi:"advertiseRoutemap"`
	ConditionRoutemap *string `pulumi:"conditionRoutemap"`
	ConditionType     *string `pulumi:"conditionType"`
}

// RouterbgpNeighborConditionalAdvertiseInput is an input type that accepts RouterbgpNeighborConditionalAdvertiseArgs and RouterbgpNeighborConditionalAdvertiseOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertiseInput` via:
//
//	RouterbgpNeighborConditionalAdvertiseArgs{...}
type RouterbgpNeighborConditionalAdvertiseInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput
	ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertiseOutput
}

type RouterbgpNeighborConditionalAdvertiseArgs struct {
	AdvertiseRoutemap pulumi.StringPtrInput `pulumi:"advertiseRoutemap"`
	ConditionRoutemap pulumi.StringPtrInput `pulumi:"conditionRoutemap"`
	ConditionType     pulumi.StringPtrInput `pulumi:"conditionType"`
}

func (RouterbgpNeighborConditionalAdvertiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertiseArgs) ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput {
	return i.ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertiseArgs) ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertiseOutput)
}

func (i RouterbgpNeighborConditionalAdvertiseArgs) ToOutput(ctx context.Context) pulumix.Output[RouterbgpNeighborConditionalAdvertise] {
	return pulumix.Output[RouterbgpNeighborConditionalAdvertise]{
		OutputState: i.ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(ctx).OutputState,
	}
}

// RouterbgpNeighborConditionalAdvertiseArrayInput is an input type that accepts RouterbgpNeighborConditionalAdvertiseArray and RouterbgpNeighborConditionalAdvertiseArrayOutput values.
// You can construct a concrete instance of `RouterbgpNeighborConditionalAdvertiseArrayInput` via:
//
//	RouterbgpNeighborConditionalAdvertiseArray{ RouterbgpNeighborConditionalAdvertiseArgs{...} }
type RouterbgpNeighborConditionalAdvertiseArrayInput interface {
	pulumi.Input

	ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput
	ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput
}

type RouterbgpNeighborConditionalAdvertiseArray []RouterbgpNeighborConditionalAdvertiseInput

func (RouterbgpNeighborConditionalAdvertiseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (i RouterbgpNeighborConditionalAdvertiseArray) ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return i.ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(context.Background())
}

func (i RouterbgpNeighborConditionalAdvertiseArray) ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterbgpNeighborConditionalAdvertiseArrayOutput)
}

func (i RouterbgpNeighborConditionalAdvertiseArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterbgpNeighborConditionalAdvertise] {
	return pulumix.Output[[]RouterbgpNeighborConditionalAdvertise]{
		OutputState: i.ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterbgpNeighborConditionalAdvertiseOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ToRouterbgpNeighborConditionalAdvertiseOutput() RouterbgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ToRouterbgpNeighborConditionalAdvertiseOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ToOutput(ctx context.Context) pulumix.Output[RouterbgpNeighborConditionalAdvertise] {
	return pulumix.Output[RouterbgpNeighborConditionalAdvertise]{
		OutputState: o.OutputState,
	}
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) AdvertiseRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.AdvertiseRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ConditionRoutemap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.ConditionRoutemap }).(pulumi.StringPtrOutput)
}

func (o RouterbgpNeighborConditionalAdvertiseOutput) ConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterbgpNeighborConditionalAdvertise) *string { return v.ConditionType }).(pulumi.StringPtrOutput)
}

type RouterbgpNeighborConditionalAdvertiseArrayOutput struct{ *pulumi.OutputState }

func (RouterbgpNeighborConditionalAdvertiseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterbgpNeighborConditionalAdvertise)(nil)).Elem()
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) ToRouterbgpNeighborConditionalAdvertiseArrayOutput() RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) ToRouterbgpNeighborConditionalAdvertiseArrayOutputWithContext(ctx context.Context) RouterbgpNeighborConditionalAdvertiseArrayOutput {
	return o
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterbgpNeighborConditionalAdvertise] {
	return pulumix.Output[[]RouterbgpNeighborConditionalAdvertise]{
		OutputState: o.OutputState,
	}
}

func (o RouterbgpNeighborConditionalAdvertiseArrayOutput) Index(i pulumi.IntInput) RouterbgpNeighborConditionalAdvertiseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterbgpNeighborConditionalAdvertise {
		return vs[0].([]RouterbgpNeighborConditionalAdvertise)[vs[1].(int)]
	}).(RouterbgpNeighborConditionalAdvertiseOutput)
}

type Routerospf6Ospf6InterfaceIpsecKey struct {
	AuthKey *string `pulumi:"authKey"`
	EncKey  *string `pulumi:"encKey"`
	Spi     *int    `pulumi:"spi"`
}

// Routerospf6Ospf6InterfaceIpsecKeyInput is an input type that accepts Routerospf6Ospf6InterfaceIpsecKeyArgs and Routerospf6Ospf6InterfaceIpsecKeyOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6InterfaceIpsecKeyInput` via:
//
//	Routerospf6Ospf6InterfaceIpsecKeyArgs{...}
type Routerospf6Ospf6InterfaceIpsecKeyInput interface {
	pulumi.Input

	ToRouterospf6Ospf6InterfaceIpsecKeyOutput() Routerospf6Ospf6InterfaceIpsecKeyOutput
	ToRouterospf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Context) Routerospf6Ospf6InterfaceIpsecKeyOutput
}

type Routerospf6Ospf6InterfaceIpsecKeyArgs struct {
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	EncKey  pulumi.StringPtrInput `pulumi:"encKey"`
	Spi     pulumi.IntPtrInput    `pulumi:"spi"`
}

func (Routerospf6Ospf6InterfaceIpsecKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArgs) ToRouterospf6Ospf6InterfaceIpsecKeyOutput() Routerospf6Ospf6InterfaceIpsecKeyOutput {
	return i.ToRouterospf6Ospf6InterfaceIpsecKeyOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArgs) ToRouterospf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6InterfaceIpsecKeyOutput)
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArgs) ToOutput(ctx context.Context) pulumix.Output[Routerospf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[Routerospf6Ospf6InterfaceIpsecKey]{
		OutputState: i.ToRouterospf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx).OutputState,
	}
}

// Routerospf6Ospf6InterfaceIpsecKeyArrayInput is an input type that accepts Routerospf6Ospf6InterfaceIpsecKeyArray and Routerospf6Ospf6InterfaceIpsecKeyArrayOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6InterfaceIpsecKeyArrayInput` via:
//
//	Routerospf6Ospf6InterfaceIpsecKeyArray{ Routerospf6Ospf6InterfaceIpsecKeyArgs{...} }
type Routerospf6Ospf6InterfaceIpsecKeyArrayInput interface {
	pulumi.Input

	ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutput() Routerospf6Ospf6InterfaceIpsecKeyArrayOutput
	ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Context) Routerospf6Ospf6InterfaceIpsecKeyArrayOutput
}

type Routerospf6Ospf6InterfaceIpsecKeyArray []Routerospf6Ospf6InterfaceIpsecKeyInput

func (Routerospf6Ospf6InterfaceIpsecKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArray) ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutput() Routerospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return i.ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArray) ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6InterfaceIpsecKeyArrayOutput)
}

func (i Routerospf6Ospf6InterfaceIpsecKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]Routerospf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[[]Routerospf6Ospf6InterfaceIpsecKey]{
		OutputState: i.ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type Routerospf6Ospf6InterfaceIpsecKeyOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6InterfaceIpsecKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) ToRouterospf6Ospf6InterfaceIpsecKeyOutput() Routerospf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) ToRouterospf6Ospf6InterfaceIpsecKeyOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceIpsecKeyOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) ToOutput(ctx context.Context) pulumix.Output[Routerospf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[Routerospf6Ospf6InterfaceIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceIpsecKey) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) EncKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceIpsecKey) *string { return v.EncKey }).(pulumi.StringPtrOutput)
}

func (o Routerospf6Ospf6InterfaceIpsecKeyOutput) Spi() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceIpsecKey) *int { return v.Spi }).(pulumi.IntPtrOutput)
}

type Routerospf6Ospf6InterfaceIpsecKeyArrayOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6InterfaceIpsecKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6InterfaceIpsecKey)(nil)).Elem()
}

func (o Routerospf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutput() Routerospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceIpsecKeyArrayOutput) ToRouterospf6Ospf6InterfaceIpsecKeyArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceIpsecKeyArrayOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceIpsecKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Routerospf6Ospf6InterfaceIpsecKey] {
	return pulumix.Output[[]Routerospf6Ospf6InterfaceIpsecKey]{
		OutputState: o.OutputState,
	}
}

func (o Routerospf6Ospf6InterfaceIpsecKeyArrayOutput) Index(i pulumi.IntInput) Routerospf6Ospf6InterfaceIpsecKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Routerospf6Ospf6InterfaceIpsecKey {
		return vs[0].([]Routerospf6Ospf6InterfaceIpsecKey)[vs[1].(int)]
	}).(Routerospf6Ospf6InterfaceIpsecKeyOutput)
}

type Routerospf6Ospf6InterfaceNeighbor struct {
	Cost         *int    `pulumi:"cost"`
	Ip6          *string `pulumi:"ip6"`
	PollInterval *int    `pulumi:"pollInterval"`
	Priority     *int    `pulumi:"priority"`
}

// Routerospf6Ospf6InterfaceNeighborInput is an input type that accepts Routerospf6Ospf6InterfaceNeighborArgs and Routerospf6Ospf6InterfaceNeighborOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6InterfaceNeighborInput` via:
//
//	Routerospf6Ospf6InterfaceNeighborArgs{...}
type Routerospf6Ospf6InterfaceNeighborInput interface {
	pulumi.Input

	ToRouterospf6Ospf6InterfaceNeighborOutput() Routerospf6Ospf6InterfaceNeighborOutput
	ToRouterospf6Ospf6InterfaceNeighborOutputWithContext(context.Context) Routerospf6Ospf6InterfaceNeighborOutput
}

type Routerospf6Ospf6InterfaceNeighborArgs struct {
	Cost         pulumi.IntPtrInput    `pulumi:"cost"`
	Ip6          pulumi.StringPtrInput `pulumi:"ip6"`
	PollInterval pulumi.IntPtrInput    `pulumi:"pollInterval"`
	Priority     pulumi.IntPtrInput    `pulumi:"priority"`
}

func (Routerospf6Ospf6InterfaceNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i Routerospf6Ospf6InterfaceNeighborArgs) ToRouterospf6Ospf6InterfaceNeighborOutput() Routerospf6Ospf6InterfaceNeighborOutput {
	return i.ToRouterospf6Ospf6InterfaceNeighborOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6InterfaceNeighborArgs) ToRouterospf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6InterfaceNeighborOutput)
}

func (i Routerospf6Ospf6InterfaceNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[Routerospf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[Routerospf6Ospf6InterfaceNeighbor]{
		OutputState: i.ToRouterospf6Ospf6InterfaceNeighborOutputWithContext(ctx).OutputState,
	}
}

// Routerospf6Ospf6InterfaceNeighborArrayInput is an input type that accepts Routerospf6Ospf6InterfaceNeighborArray and Routerospf6Ospf6InterfaceNeighborArrayOutput values.
// You can construct a concrete instance of `Routerospf6Ospf6InterfaceNeighborArrayInput` via:
//
//	Routerospf6Ospf6InterfaceNeighborArray{ Routerospf6Ospf6InterfaceNeighborArgs{...} }
type Routerospf6Ospf6InterfaceNeighborArrayInput interface {
	pulumi.Input

	ToRouterospf6Ospf6InterfaceNeighborArrayOutput() Routerospf6Ospf6InterfaceNeighborArrayOutput
	ToRouterospf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Context) Routerospf6Ospf6InterfaceNeighborArrayOutput
}

type Routerospf6Ospf6InterfaceNeighborArray []Routerospf6Ospf6InterfaceNeighborInput

func (Routerospf6Ospf6InterfaceNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (i Routerospf6Ospf6InterfaceNeighborArray) ToRouterospf6Ospf6InterfaceNeighborArrayOutput() Routerospf6Ospf6InterfaceNeighborArrayOutput {
	return i.ToRouterospf6Ospf6InterfaceNeighborArrayOutputWithContext(context.Background())
}

func (i Routerospf6Ospf6InterfaceNeighborArray) ToRouterospf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Routerospf6Ospf6InterfaceNeighborArrayOutput)
}

func (i Routerospf6Ospf6InterfaceNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]Routerospf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[[]Routerospf6Ospf6InterfaceNeighbor]{
		OutputState: i.ToRouterospf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type Routerospf6Ospf6InterfaceNeighborOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6InterfaceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Routerospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) ToRouterospf6Ospf6InterfaceNeighborOutput() Routerospf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) ToRouterospf6Ospf6InterfaceNeighborOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceNeighborOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[Routerospf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[Routerospf6Ospf6InterfaceNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceNeighbor) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) Ip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceNeighbor) *string { return v.Ip6 }).(pulumi.StringPtrOutput)
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceNeighbor) *int { return v.PollInterval }).(pulumi.IntPtrOutput)
}

func (o Routerospf6Ospf6InterfaceNeighborOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Routerospf6Ospf6InterfaceNeighbor) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type Routerospf6Ospf6InterfaceNeighborArrayOutput struct{ *pulumi.OutputState }

func (Routerospf6Ospf6InterfaceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Routerospf6Ospf6InterfaceNeighbor)(nil)).Elem()
}

func (o Routerospf6Ospf6InterfaceNeighborArrayOutput) ToRouterospf6Ospf6InterfaceNeighborArrayOutput() Routerospf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceNeighborArrayOutput) ToRouterospf6Ospf6InterfaceNeighborArrayOutputWithContext(ctx context.Context) Routerospf6Ospf6InterfaceNeighborArrayOutput {
	return o
}

func (o Routerospf6Ospf6InterfaceNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Routerospf6Ospf6InterfaceNeighbor] {
	return pulumix.Output[[]Routerospf6Ospf6InterfaceNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o Routerospf6Ospf6InterfaceNeighborArrayOutput) Index(i pulumi.IntInput) Routerospf6Ospf6InterfaceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Routerospf6Ospf6InterfaceNeighbor {
		return vs[0].([]Routerospf6Ospf6InterfaceNeighbor)[vs[1].(int)]
	}).(Routerospf6Ospf6InterfaceNeighborOutput)
}

type RouterospfOspfInterfaceMd5Key struct {
	Id        *int    `pulumi:"id"`
	KeyString *string `pulumi:"keyString"`
}

// RouterospfOspfInterfaceMd5KeyInput is an input type that accepts RouterospfOspfInterfaceMd5KeyArgs and RouterospfOspfInterfaceMd5KeyOutput values.
// You can construct a concrete instance of `RouterospfOspfInterfaceMd5KeyInput` via:
//
//	RouterospfOspfInterfaceMd5KeyArgs{...}
type RouterospfOspfInterfaceMd5KeyInput interface {
	pulumi.Input

	ToRouterospfOspfInterfaceMd5KeyOutput() RouterospfOspfInterfaceMd5KeyOutput
	ToRouterospfOspfInterfaceMd5KeyOutputWithContext(context.Context) RouterospfOspfInterfaceMd5KeyOutput
}

type RouterospfOspfInterfaceMd5KeyArgs struct {
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (RouterospfOspfInterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterospfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterospfOspfInterfaceMd5KeyArgs) ToRouterospfOspfInterfaceMd5KeyOutput() RouterospfOspfInterfaceMd5KeyOutput {
	return i.ToRouterospfOspfInterfaceMd5KeyOutputWithContext(context.Background())
}

func (i RouterospfOspfInterfaceMd5KeyArgs) ToRouterospfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterospfOspfInterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfInterfaceMd5KeyOutput)
}

func (i RouterospfOspfInterfaceMd5KeyArgs) ToOutput(ctx context.Context) pulumix.Output[RouterospfOspfInterfaceMd5Key] {
	return pulumix.Output[RouterospfOspfInterfaceMd5Key]{
		OutputState: i.ToRouterospfOspfInterfaceMd5KeyOutputWithContext(ctx).OutputState,
	}
}

// RouterospfOspfInterfaceMd5KeyArrayInput is an input type that accepts RouterospfOspfInterfaceMd5KeyArray and RouterospfOspfInterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `RouterospfOspfInterfaceMd5KeyArrayInput` via:
//
//	RouterospfOspfInterfaceMd5KeyArray{ RouterospfOspfInterfaceMd5KeyArgs{...} }
type RouterospfOspfInterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToRouterospfOspfInterfaceMd5KeyArrayOutput() RouterospfOspfInterfaceMd5KeyArrayOutput
	ToRouterospfOspfInterfaceMd5KeyArrayOutputWithContext(context.Context) RouterospfOspfInterfaceMd5KeyArrayOutput
}

type RouterospfOspfInterfaceMd5KeyArray []RouterospfOspfInterfaceMd5KeyInput

func (RouterospfOspfInterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterospfOspfInterfaceMd5Key)(nil)).Elem()
}

func (i RouterospfOspfInterfaceMd5KeyArray) ToRouterospfOspfInterfaceMd5KeyArrayOutput() RouterospfOspfInterfaceMd5KeyArrayOutput {
	return i.ToRouterospfOspfInterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i RouterospfOspfInterfaceMd5KeyArray) ToRouterospfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterospfOspfInterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterospfOspfInterfaceMd5KeyArrayOutput)
}

func (i RouterospfOspfInterfaceMd5KeyArray) ToOutput(ctx context.Context) pulumix.Output[[]RouterospfOspfInterfaceMd5Key] {
	return pulumix.Output[[]RouterospfOspfInterfaceMd5Key]{
		OutputState: i.ToRouterospfOspfInterfaceMd5KeyArrayOutputWithContext(ctx).OutputState,
	}
}

type RouterospfOspfInterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (RouterospfOspfInterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterospfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterospfOspfInterfaceMd5KeyOutput) ToRouterospfOspfInterfaceMd5KeyOutput() RouterospfOspfInterfaceMd5KeyOutput {
	return o
}

func (o RouterospfOspfInterfaceMd5KeyOutput) ToRouterospfOspfInterfaceMd5KeyOutputWithContext(ctx context.Context) RouterospfOspfInterfaceMd5KeyOutput {
	return o
}

func (o RouterospfOspfInterfaceMd5KeyOutput) ToOutput(ctx context.Context) pulumix.Output[RouterospfOspfInterfaceMd5Key] {
	return pulumix.Output[RouterospfOspfInterfaceMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterospfOspfInterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouterospfOspfInterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RouterospfOspfInterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterospfOspfInterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type RouterospfOspfInterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (RouterospfOspfInterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterospfOspfInterfaceMd5Key)(nil)).Elem()
}

func (o RouterospfOspfInterfaceMd5KeyArrayOutput) ToRouterospfOspfInterfaceMd5KeyArrayOutput() RouterospfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterospfOspfInterfaceMd5KeyArrayOutput) ToRouterospfOspfInterfaceMd5KeyArrayOutputWithContext(ctx context.Context) RouterospfOspfInterfaceMd5KeyArrayOutput {
	return o
}

func (o RouterospfOspfInterfaceMd5KeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RouterospfOspfInterfaceMd5Key] {
	return pulumix.Output[[]RouterospfOspfInterfaceMd5Key]{
		OutputState: o.OutputState,
	}
}

func (o RouterospfOspfInterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) RouterospfOspfInterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterospfOspfInterfaceMd5Key {
		return vs[0].([]RouterospfOspfInterfaceMd5Key)[vs[1].(int)]
	}).(RouterospfOspfInterfaceMd5KeyOutput)
}

type RuleOtdtMetadata struct {
	Id      *int `pulumi:"id"`
	Metaid  *int `pulumi:"metaid"`
	Valueid *int `pulumi:"valueid"`
}

// RuleOtdtMetadataInput is an input type that accepts RuleOtdtMetadataArgs and RuleOtdtMetadataOutput values.
// You can construct a concrete instance of `RuleOtdtMetadataInput` via:
//
//	RuleOtdtMetadataArgs{...}
type RuleOtdtMetadataInput interface {
	pulumi.Input

	ToRuleOtdtMetadataOutput() RuleOtdtMetadataOutput
	ToRuleOtdtMetadataOutputWithContext(context.Context) RuleOtdtMetadataOutput
}

type RuleOtdtMetadataArgs struct {
	Id      pulumi.IntPtrInput `pulumi:"id"`
	Metaid  pulumi.IntPtrInput `pulumi:"metaid"`
	Valueid pulumi.IntPtrInput `pulumi:"valueid"`
}

func (RuleOtdtMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtdtMetadata)(nil)).Elem()
}

func (i RuleOtdtMetadataArgs) ToRuleOtdtMetadataOutput() RuleOtdtMetadataOutput {
	return i.ToRuleOtdtMetadataOutputWithContext(context.Background())
}

func (i RuleOtdtMetadataArgs) ToRuleOtdtMetadataOutputWithContext(ctx context.Context) RuleOtdtMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtMetadataOutput)
}

func (i RuleOtdtMetadataArgs) ToOutput(ctx context.Context) pulumix.Output[RuleOtdtMetadata] {
	return pulumix.Output[RuleOtdtMetadata]{
		OutputState: i.ToRuleOtdtMetadataOutputWithContext(ctx).OutputState,
	}
}

// RuleOtdtMetadataArrayInput is an input type that accepts RuleOtdtMetadataArray and RuleOtdtMetadataArrayOutput values.
// You can construct a concrete instance of `RuleOtdtMetadataArrayInput` via:
//
//	RuleOtdtMetadataArray{ RuleOtdtMetadataArgs{...} }
type RuleOtdtMetadataArrayInput interface {
	pulumi.Input

	ToRuleOtdtMetadataArrayOutput() RuleOtdtMetadataArrayOutput
	ToRuleOtdtMetadataArrayOutputWithContext(context.Context) RuleOtdtMetadataArrayOutput
}

type RuleOtdtMetadataArray []RuleOtdtMetadataInput

func (RuleOtdtMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtdtMetadata)(nil)).Elem()
}

func (i RuleOtdtMetadataArray) ToRuleOtdtMetadataArrayOutput() RuleOtdtMetadataArrayOutput {
	return i.ToRuleOtdtMetadataArrayOutputWithContext(context.Background())
}

func (i RuleOtdtMetadataArray) ToRuleOtdtMetadataArrayOutputWithContext(ctx context.Context) RuleOtdtMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtMetadataArrayOutput)
}

func (i RuleOtdtMetadataArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtdtMetadata] {
	return pulumix.Output[[]RuleOtdtMetadata]{
		OutputState: i.ToRuleOtdtMetadataArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleOtdtMetadataOutput struct{ *pulumi.OutputState }

func (RuleOtdtMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtdtMetadata)(nil)).Elem()
}

func (o RuleOtdtMetadataOutput) ToRuleOtdtMetadataOutput() RuleOtdtMetadataOutput {
	return o
}

func (o RuleOtdtMetadataOutput) ToRuleOtdtMetadataOutputWithContext(ctx context.Context) RuleOtdtMetadataOutput {
	return o
}

func (o RuleOtdtMetadataOutput) ToOutput(ctx context.Context) pulumix.Output[RuleOtdtMetadata] {
	return pulumix.Output[RuleOtdtMetadata]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtdtMetadataOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtdtMetadata) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RuleOtdtMetadataOutput) Metaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtdtMetadata) *int { return v.Metaid }).(pulumi.IntPtrOutput)
}

func (o RuleOtdtMetadataOutput) Valueid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtdtMetadata) *int { return v.Valueid }).(pulumi.IntPtrOutput)
}

type RuleOtdtMetadataArrayOutput struct{ *pulumi.OutputState }

func (RuleOtdtMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtdtMetadata)(nil)).Elem()
}

func (o RuleOtdtMetadataArrayOutput) ToRuleOtdtMetadataArrayOutput() RuleOtdtMetadataArrayOutput {
	return o
}

func (o RuleOtdtMetadataArrayOutput) ToRuleOtdtMetadataArrayOutputWithContext(ctx context.Context) RuleOtdtMetadataArrayOutput {
	return o
}

func (o RuleOtdtMetadataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtdtMetadata] {
	return pulumix.Output[[]RuleOtdtMetadata]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtdtMetadataArrayOutput) Index(i pulumi.IntInput) RuleOtdtMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleOtdtMetadata {
		return vs[0].([]RuleOtdtMetadata)[vs[1].(int)]
	}).(RuleOtdtMetadataOutput)
}

type RuleOtdtParameter struct {
	Name *string `pulumi:"name"`
}

// RuleOtdtParameterInput is an input type that accepts RuleOtdtParameterArgs and RuleOtdtParameterOutput values.
// You can construct a concrete instance of `RuleOtdtParameterInput` via:
//
//	RuleOtdtParameterArgs{...}
type RuleOtdtParameterInput interface {
	pulumi.Input

	ToRuleOtdtParameterOutput() RuleOtdtParameterOutput
	ToRuleOtdtParameterOutputWithContext(context.Context) RuleOtdtParameterOutput
}

type RuleOtdtParameterArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RuleOtdtParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtdtParameter)(nil)).Elem()
}

func (i RuleOtdtParameterArgs) ToRuleOtdtParameterOutput() RuleOtdtParameterOutput {
	return i.ToRuleOtdtParameterOutputWithContext(context.Background())
}

func (i RuleOtdtParameterArgs) ToRuleOtdtParameterOutputWithContext(ctx context.Context) RuleOtdtParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtParameterOutput)
}

func (i RuleOtdtParameterArgs) ToOutput(ctx context.Context) pulumix.Output[RuleOtdtParameter] {
	return pulumix.Output[RuleOtdtParameter]{
		OutputState: i.ToRuleOtdtParameterOutputWithContext(ctx).OutputState,
	}
}

// RuleOtdtParameterArrayInput is an input type that accepts RuleOtdtParameterArray and RuleOtdtParameterArrayOutput values.
// You can construct a concrete instance of `RuleOtdtParameterArrayInput` via:
//
//	RuleOtdtParameterArray{ RuleOtdtParameterArgs{...} }
type RuleOtdtParameterArrayInput interface {
	pulumi.Input

	ToRuleOtdtParameterArrayOutput() RuleOtdtParameterArrayOutput
	ToRuleOtdtParameterArrayOutputWithContext(context.Context) RuleOtdtParameterArrayOutput
}

type RuleOtdtParameterArray []RuleOtdtParameterInput

func (RuleOtdtParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtdtParameter)(nil)).Elem()
}

func (i RuleOtdtParameterArray) ToRuleOtdtParameterArrayOutput() RuleOtdtParameterArrayOutput {
	return i.ToRuleOtdtParameterArrayOutputWithContext(context.Background())
}

func (i RuleOtdtParameterArray) ToRuleOtdtParameterArrayOutputWithContext(ctx context.Context) RuleOtdtParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtdtParameterArrayOutput)
}

func (i RuleOtdtParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtdtParameter] {
	return pulumix.Output[[]RuleOtdtParameter]{
		OutputState: i.ToRuleOtdtParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleOtdtParameterOutput struct{ *pulumi.OutputState }

func (RuleOtdtParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtdtParameter)(nil)).Elem()
}

func (o RuleOtdtParameterOutput) ToRuleOtdtParameterOutput() RuleOtdtParameterOutput {
	return o
}

func (o RuleOtdtParameterOutput) ToRuleOtdtParameterOutputWithContext(ctx context.Context) RuleOtdtParameterOutput {
	return o
}

func (o RuleOtdtParameterOutput) ToOutput(ctx context.Context) pulumix.Output[RuleOtdtParameter] {
	return pulumix.Output[RuleOtdtParameter]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtdtParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleOtdtParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RuleOtdtParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleOtdtParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtdtParameter)(nil)).Elem()
}

func (o RuleOtdtParameterArrayOutput) ToRuleOtdtParameterArrayOutput() RuleOtdtParameterArrayOutput {
	return o
}

func (o RuleOtdtParameterArrayOutput) ToRuleOtdtParameterArrayOutputWithContext(ctx context.Context) RuleOtdtParameterArrayOutput {
	return o
}

func (o RuleOtdtParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtdtParameter] {
	return pulumix.Output[[]RuleOtdtParameter]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtdtParameterArrayOutput) Index(i pulumi.IntInput) RuleOtdtParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleOtdtParameter {
		return vs[0].([]RuleOtdtParameter)[vs[1].(int)]
	}).(RuleOtdtParameterOutput)
}

type RuleOtvpMetadata struct {
	Id      *int `pulumi:"id"`
	Metaid  *int `pulumi:"metaid"`
	Valueid *int `pulumi:"valueid"`
}

// RuleOtvpMetadataInput is an input type that accepts RuleOtvpMetadataArgs and RuleOtvpMetadataOutput values.
// You can construct a concrete instance of `RuleOtvpMetadataInput` via:
//
//	RuleOtvpMetadataArgs{...}
type RuleOtvpMetadataInput interface {
	pulumi.Input

	ToRuleOtvpMetadataOutput() RuleOtvpMetadataOutput
	ToRuleOtvpMetadataOutputWithContext(context.Context) RuleOtvpMetadataOutput
}

type RuleOtvpMetadataArgs struct {
	Id      pulumi.IntPtrInput `pulumi:"id"`
	Metaid  pulumi.IntPtrInput `pulumi:"metaid"`
	Valueid pulumi.IntPtrInput `pulumi:"valueid"`
}

func (RuleOtvpMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtvpMetadata)(nil)).Elem()
}

func (i RuleOtvpMetadataArgs) ToRuleOtvpMetadataOutput() RuleOtvpMetadataOutput {
	return i.ToRuleOtvpMetadataOutputWithContext(context.Background())
}

func (i RuleOtvpMetadataArgs) ToRuleOtvpMetadataOutputWithContext(ctx context.Context) RuleOtvpMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtvpMetadataOutput)
}

func (i RuleOtvpMetadataArgs) ToOutput(ctx context.Context) pulumix.Output[RuleOtvpMetadata] {
	return pulumix.Output[RuleOtvpMetadata]{
		OutputState: i.ToRuleOtvpMetadataOutputWithContext(ctx).OutputState,
	}
}

// RuleOtvpMetadataArrayInput is an input type that accepts RuleOtvpMetadataArray and RuleOtvpMetadataArrayOutput values.
// You can construct a concrete instance of `RuleOtvpMetadataArrayInput` via:
//
//	RuleOtvpMetadataArray{ RuleOtvpMetadataArgs{...} }
type RuleOtvpMetadataArrayInput interface {
	pulumi.Input

	ToRuleOtvpMetadataArrayOutput() RuleOtvpMetadataArrayOutput
	ToRuleOtvpMetadataArrayOutputWithContext(context.Context) RuleOtvpMetadataArrayOutput
}

type RuleOtvpMetadataArray []RuleOtvpMetadataInput

func (RuleOtvpMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtvpMetadata)(nil)).Elem()
}

func (i RuleOtvpMetadataArray) ToRuleOtvpMetadataArrayOutput() RuleOtvpMetadataArrayOutput {
	return i.ToRuleOtvpMetadataArrayOutputWithContext(context.Background())
}

func (i RuleOtvpMetadataArray) ToRuleOtvpMetadataArrayOutputWithContext(ctx context.Context) RuleOtvpMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleOtvpMetadataArrayOutput)
}

func (i RuleOtvpMetadataArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtvpMetadata] {
	return pulumix.Output[[]RuleOtvpMetadata]{
		OutputState: i.ToRuleOtvpMetadataArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleOtvpMetadataOutput struct{ *pulumi.OutputState }

func (RuleOtvpMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleOtvpMetadata)(nil)).Elem()
}

func (o RuleOtvpMetadataOutput) ToRuleOtvpMetadataOutput() RuleOtvpMetadataOutput {
	return o
}

func (o RuleOtvpMetadataOutput) ToRuleOtvpMetadataOutputWithContext(ctx context.Context) RuleOtvpMetadataOutput {
	return o
}

func (o RuleOtvpMetadataOutput) ToOutput(ctx context.Context) pulumix.Output[RuleOtvpMetadata] {
	return pulumix.Output[RuleOtvpMetadata]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtvpMetadataOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtvpMetadata) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o RuleOtvpMetadataOutput) Metaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtvpMetadata) *int { return v.Metaid }).(pulumi.IntPtrOutput)
}

func (o RuleOtvpMetadataOutput) Valueid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleOtvpMetadata) *int { return v.Valueid }).(pulumi.IntPtrOutput)
}

type RuleOtvpMetadataArrayOutput struct{ *pulumi.OutputState }

func (RuleOtvpMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleOtvpMetadata)(nil)).Elem()
}

func (o RuleOtvpMetadataArrayOutput) ToRuleOtvpMetadataArrayOutput() RuleOtvpMetadataArrayOutput {
	return o
}

func (o RuleOtvpMetadataArrayOutput) ToRuleOtvpMetadataArrayOutputWithContext(ctx context.Context) RuleOtvpMetadataArrayOutput {
	return o
}

func (o RuleOtvpMetadataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleOtvpMetadata] {
	return pulumix.Output[[]RuleOtvpMetadata]{
		OutputState: o.OutputState,
	}
}

func (o RuleOtvpMetadataArrayOutput) Index(i pulumi.IntInput) RuleOtvpMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleOtvpMetadata {
		return vs[0].([]RuleOtvpMetadata)[vs[1].(int)]
	}).(RuleOtvpMetadataOutput)
}

type SctpFilterProfilePpidFilter struct {
	Action  *string `pulumi:"action"`
	Comment *string `pulumi:"comment"`
	Id      *int    `pulumi:"id"`
	Ppid    *int    `pulumi:"ppid"`
}

// SctpFilterProfilePpidFilterInput is an input type that accepts SctpFilterProfilePpidFilterArgs and SctpFilterProfilePpidFilterOutput values.
// You can construct a concrete instance of `SctpFilterProfilePpidFilterInput` via:
//
//	SctpFilterProfilePpidFilterArgs{...}
type SctpFilterProfilePpidFilterInput interface {
	pulumi.Input

	ToSctpFilterProfilePpidFilterOutput() SctpFilterProfilePpidFilterOutput
	ToSctpFilterProfilePpidFilterOutputWithContext(context.Context) SctpFilterProfilePpidFilterOutput
}

type SctpFilterProfilePpidFilterArgs struct {
	Action  pulumi.StringPtrInput `pulumi:"action"`
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	Ppid    pulumi.IntPtrInput    `pulumi:"ppid"`
}

func (SctpFilterProfilePpidFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SctpFilterProfilePpidFilter)(nil)).Elem()
}

func (i SctpFilterProfilePpidFilterArgs) ToSctpFilterProfilePpidFilterOutput() SctpFilterProfilePpidFilterOutput {
	return i.ToSctpFilterProfilePpidFilterOutputWithContext(context.Background())
}

func (i SctpFilterProfilePpidFilterArgs) ToSctpFilterProfilePpidFilterOutputWithContext(ctx context.Context) SctpFilterProfilePpidFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SctpFilterProfilePpidFilterOutput)
}

func (i SctpFilterProfilePpidFilterArgs) ToOutput(ctx context.Context) pulumix.Output[SctpFilterProfilePpidFilter] {
	return pulumix.Output[SctpFilterProfilePpidFilter]{
		OutputState: i.ToSctpFilterProfilePpidFilterOutputWithContext(ctx).OutputState,
	}
}

// SctpFilterProfilePpidFilterArrayInput is an input type that accepts SctpFilterProfilePpidFilterArray and SctpFilterProfilePpidFilterArrayOutput values.
// You can construct a concrete instance of `SctpFilterProfilePpidFilterArrayInput` via:
//
//	SctpFilterProfilePpidFilterArray{ SctpFilterProfilePpidFilterArgs{...} }
type SctpFilterProfilePpidFilterArrayInput interface {
	pulumi.Input

	ToSctpFilterProfilePpidFilterArrayOutput() SctpFilterProfilePpidFilterArrayOutput
	ToSctpFilterProfilePpidFilterArrayOutputWithContext(context.Context) SctpFilterProfilePpidFilterArrayOutput
}

type SctpFilterProfilePpidFilterArray []SctpFilterProfilePpidFilterInput

func (SctpFilterProfilePpidFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SctpFilterProfilePpidFilter)(nil)).Elem()
}

func (i SctpFilterProfilePpidFilterArray) ToSctpFilterProfilePpidFilterArrayOutput() SctpFilterProfilePpidFilterArrayOutput {
	return i.ToSctpFilterProfilePpidFilterArrayOutputWithContext(context.Background())
}

func (i SctpFilterProfilePpidFilterArray) ToSctpFilterProfilePpidFilterArrayOutputWithContext(ctx context.Context) SctpFilterProfilePpidFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SctpFilterProfilePpidFilterArrayOutput)
}

func (i SctpFilterProfilePpidFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]SctpFilterProfilePpidFilter] {
	return pulumix.Output[[]SctpFilterProfilePpidFilter]{
		OutputState: i.ToSctpFilterProfilePpidFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type SctpFilterProfilePpidFilterOutput struct{ *pulumi.OutputState }

func (SctpFilterProfilePpidFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SctpFilterProfilePpidFilter)(nil)).Elem()
}

func (o SctpFilterProfilePpidFilterOutput) ToSctpFilterProfilePpidFilterOutput() SctpFilterProfilePpidFilterOutput {
	return o
}

func (o SctpFilterProfilePpidFilterOutput) ToSctpFilterProfilePpidFilterOutputWithContext(ctx context.Context) SctpFilterProfilePpidFilterOutput {
	return o
}

func (o SctpFilterProfilePpidFilterOutput) ToOutput(ctx context.Context) pulumix.Output[SctpFilterProfilePpidFilter] {
	return pulumix.Output[SctpFilterProfilePpidFilter]{
		OutputState: o.OutputState,
	}
}

func (o SctpFilterProfilePpidFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SctpFilterProfilePpidFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SctpFilterProfilePpidFilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SctpFilterProfilePpidFilter) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SctpFilterProfilePpidFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SctpFilterProfilePpidFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SctpFilterProfilePpidFilterOutput) Ppid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SctpFilterProfilePpidFilter) *int { return v.Ppid }).(pulumi.IntPtrOutput)
}

type SctpFilterProfilePpidFilterArrayOutput struct{ *pulumi.OutputState }

func (SctpFilterProfilePpidFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SctpFilterProfilePpidFilter)(nil)).Elem()
}

func (o SctpFilterProfilePpidFilterArrayOutput) ToSctpFilterProfilePpidFilterArrayOutput() SctpFilterProfilePpidFilterArrayOutput {
	return o
}

func (o SctpFilterProfilePpidFilterArrayOutput) ToSctpFilterProfilePpidFilterArrayOutputWithContext(ctx context.Context) SctpFilterProfilePpidFilterArrayOutput {
	return o
}

func (o SctpFilterProfilePpidFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SctpFilterProfilePpidFilter] {
	return pulumix.Output[[]SctpFilterProfilePpidFilter]{
		OutputState: o.OutputState,
	}
}

func (o SctpFilterProfilePpidFilterArrayOutput) Index(i pulumi.IntInput) SctpFilterProfilePpidFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SctpFilterProfilePpidFilter {
		return vs[0].([]SctpFilterProfilePpidFilter)[vs[1].(int)]
	}).(SctpFilterProfilePpidFilterOutput)
}

type SpamfilterBwlEntry struct {
	Action       *string `pulumi:"action"`
	AddrType     *string `pulumi:"addrType"`
	EmailPattern *string `pulumi:"emailPattern"`
	Id           *int    `pulumi:"id"`
	Ip4Subnet    *string `pulumi:"ip4Subnet"`
	Ip6Subnet    *string `pulumi:"ip6Subnet"`
	PatternType  *string `pulumi:"patternType"`
	Status       *string `pulumi:"status"`
	Type         *string `pulumi:"type"`
}

// SpamfilterBwlEntryInput is an input type that accepts SpamfilterBwlEntryArgs and SpamfilterBwlEntryOutput values.
// You can construct a concrete instance of `SpamfilterBwlEntryInput` via:
//
//	SpamfilterBwlEntryArgs{...}
type SpamfilterBwlEntryInput interface {
	pulumi.Input

	ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput
	ToSpamfilterBwlEntryOutputWithContext(context.Context) SpamfilterBwlEntryOutput
}

type SpamfilterBwlEntryArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	AddrType     pulumi.StringPtrInput `pulumi:"addrType"`
	EmailPattern pulumi.StringPtrInput `pulumi:"emailPattern"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	Ip4Subnet    pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	Ip6Subnet    pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	PatternType  pulumi.StringPtrInput `pulumi:"patternType"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (SpamfilterBwlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwlEntry)(nil)).Elem()
}

func (i SpamfilterBwlEntryArgs) ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput {
	return i.ToSpamfilterBwlEntryOutputWithContext(context.Background())
}

func (i SpamfilterBwlEntryArgs) ToSpamfilterBwlEntryOutputWithContext(ctx context.Context) SpamfilterBwlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwlEntryOutput)
}

func (i SpamfilterBwlEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterBwlEntry] {
	return pulumix.Output[SpamfilterBwlEntry]{
		OutputState: i.ToSpamfilterBwlEntryOutputWithContext(ctx).OutputState,
	}
}

// SpamfilterBwlEntryArrayInput is an input type that accepts SpamfilterBwlEntryArray and SpamfilterBwlEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterBwlEntryArrayInput` via:
//
//	SpamfilterBwlEntryArray{ SpamfilterBwlEntryArgs{...} }
type SpamfilterBwlEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput
	ToSpamfilterBwlEntryArrayOutputWithContext(context.Context) SpamfilterBwlEntryArrayOutput
}

type SpamfilterBwlEntryArray []SpamfilterBwlEntryInput

func (SpamfilterBwlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwlEntry)(nil)).Elem()
}

func (i SpamfilterBwlEntryArray) ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput {
	return i.ToSpamfilterBwlEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterBwlEntryArray) ToSpamfilterBwlEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwlEntryArrayOutput)
}

func (i SpamfilterBwlEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterBwlEntry] {
	return pulumix.Output[[]SpamfilterBwlEntry]{
		OutputState: i.ToSpamfilterBwlEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterBwlEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterBwlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwlEntry)(nil)).Elem()
}

func (o SpamfilterBwlEntryOutput) ToSpamfilterBwlEntryOutput() SpamfilterBwlEntryOutput {
	return o
}

func (o SpamfilterBwlEntryOutput) ToSpamfilterBwlEntryOutputWithContext(ctx context.Context) SpamfilterBwlEntryOutput {
	return o
}

func (o SpamfilterBwlEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterBwlEntry] {
	return pulumix.Output[SpamfilterBwlEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterBwlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) EmailPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.EmailPattern }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SpamfilterBwlEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwlEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwlEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SpamfilterBwlEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterBwlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwlEntry)(nil)).Elem()
}

func (o SpamfilterBwlEntryArrayOutput) ToSpamfilterBwlEntryArrayOutput() SpamfilterBwlEntryArrayOutput {
	return o
}

func (o SpamfilterBwlEntryArrayOutput) ToSpamfilterBwlEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwlEntryArrayOutput {
	return o
}

func (o SpamfilterBwlEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterBwlEntry] {
	return pulumix.Output[[]SpamfilterBwlEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterBwlEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterBwlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterBwlEntry {
		return vs[0].([]SpamfilterBwlEntry)[vs[1].(int)]
	}).(SpamfilterBwlEntryOutput)
}

type SpamfilterBwordEntry struct {
	Action      *string `pulumi:"action"`
	Id          *int    `pulumi:"id"`
	Language    *string `pulumi:"language"`
	Pattern     *string `pulumi:"pattern"`
	PatternType *string `pulumi:"patternType"`
	Score       *int    `pulumi:"score"`
	Status      *string `pulumi:"status"`
	Where       *string `pulumi:"where"`
}

// SpamfilterBwordEntryInput is an input type that accepts SpamfilterBwordEntryArgs and SpamfilterBwordEntryOutput values.
// You can construct a concrete instance of `SpamfilterBwordEntryInput` via:
//
//	SpamfilterBwordEntryArgs{...}
type SpamfilterBwordEntryInput interface {
	pulumi.Input

	ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput
	ToSpamfilterBwordEntryOutputWithContext(context.Context) SpamfilterBwordEntryOutput
}

type SpamfilterBwordEntryArgs struct {
	Action      pulumi.StringPtrInput `pulumi:"action"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Language    pulumi.StringPtrInput `pulumi:"language"`
	Pattern     pulumi.StringPtrInput `pulumi:"pattern"`
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	Score       pulumi.IntPtrInput    `pulumi:"score"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
	Where       pulumi.StringPtrInput `pulumi:"where"`
}

func (SpamfilterBwordEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwordEntry)(nil)).Elem()
}

func (i SpamfilterBwordEntryArgs) ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput {
	return i.ToSpamfilterBwordEntryOutputWithContext(context.Background())
}

func (i SpamfilterBwordEntryArgs) ToSpamfilterBwordEntryOutputWithContext(ctx context.Context) SpamfilterBwordEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwordEntryOutput)
}

func (i SpamfilterBwordEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterBwordEntry] {
	return pulumix.Output[SpamfilterBwordEntry]{
		OutputState: i.ToSpamfilterBwordEntryOutputWithContext(ctx).OutputState,
	}
}

// SpamfilterBwordEntryArrayInput is an input type that accepts SpamfilterBwordEntryArray and SpamfilterBwordEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterBwordEntryArrayInput` via:
//
//	SpamfilterBwordEntryArray{ SpamfilterBwordEntryArgs{...} }
type SpamfilterBwordEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput
	ToSpamfilterBwordEntryArrayOutputWithContext(context.Context) SpamfilterBwordEntryArrayOutput
}

type SpamfilterBwordEntryArray []SpamfilterBwordEntryInput

func (SpamfilterBwordEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwordEntry)(nil)).Elem()
}

func (i SpamfilterBwordEntryArray) ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput {
	return i.ToSpamfilterBwordEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterBwordEntryArray) ToSpamfilterBwordEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwordEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterBwordEntryArrayOutput)
}

func (i SpamfilterBwordEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterBwordEntry] {
	return pulumix.Output[[]SpamfilterBwordEntry]{
		OutputState: i.ToSpamfilterBwordEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterBwordEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterBwordEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterBwordEntry)(nil)).Elem()
}

func (o SpamfilterBwordEntryOutput) ToSpamfilterBwordEntryOutput() SpamfilterBwordEntryOutput {
	return o
}

func (o SpamfilterBwordEntryOutput) ToSpamfilterBwordEntryOutputWithContext(ctx context.Context) SpamfilterBwordEntryOutput {
	return o
}

func (o SpamfilterBwordEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterBwordEntry] {
	return pulumix.Output[SpamfilterBwordEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterBwordEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Language }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwordEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *int { return v.Score }).(pulumi.IntPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SpamfilterBwordEntryOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterBwordEntry) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type SpamfilterBwordEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterBwordEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterBwordEntry)(nil)).Elem()
}

func (o SpamfilterBwordEntryArrayOutput) ToSpamfilterBwordEntryArrayOutput() SpamfilterBwordEntryArrayOutput {
	return o
}

func (o SpamfilterBwordEntryArrayOutput) ToSpamfilterBwordEntryArrayOutputWithContext(ctx context.Context) SpamfilterBwordEntryArrayOutput {
	return o
}

func (o SpamfilterBwordEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterBwordEntry] {
	return pulumix.Output[[]SpamfilterBwordEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterBwordEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterBwordEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterBwordEntry {
		return vs[0].([]SpamfilterBwordEntry)[vs[1].(int)]
	}).(SpamfilterBwordEntryOutput)
}

type SpamfilterDnsblEntry struct {
	Action *string `pulumi:"action"`
	Id     *int    `pulumi:"id"`
	Server *string `pulumi:"server"`
	Status *string `pulumi:"status"`
}

// SpamfilterDnsblEntryInput is an input type that accepts SpamfilterDnsblEntryArgs and SpamfilterDnsblEntryOutput values.
// You can construct a concrete instance of `SpamfilterDnsblEntryInput` via:
//
//	SpamfilterDnsblEntryArgs{...}
type SpamfilterDnsblEntryInput interface {
	pulumi.Input

	ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput
	ToSpamfilterDnsblEntryOutputWithContext(context.Context) SpamfilterDnsblEntryOutput
}

type SpamfilterDnsblEntryArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	Server pulumi.StringPtrInput `pulumi:"server"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterDnsblEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterDnsblEntry)(nil)).Elem()
}

func (i SpamfilterDnsblEntryArgs) ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput {
	return i.ToSpamfilterDnsblEntryOutputWithContext(context.Background())
}

func (i SpamfilterDnsblEntryArgs) ToSpamfilterDnsblEntryOutputWithContext(ctx context.Context) SpamfilterDnsblEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterDnsblEntryOutput)
}

func (i SpamfilterDnsblEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterDnsblEntry] {
	return pulumix.Output[SpamfilterDnsblEntry]{
		OutputState: i.ToSpamfilterDnsblEntryOutputWithContext(ctx).OutputState,
	}
}

// SpamfilterDnsblEntryArrayInput is an input type that accepts SpamfilterDnsblEntryArray and SpamfilterDnsblEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterDnsblEntryArrayInput` via:
//
//	SpamfilterDnsblEntryArray{ SpamfilterDnsblEntryArgs{...} }
type SpamfilterDnsblEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput
	ToSpamfilterDnsblEntryArrayOutputWithContext(context.Context) SpamfilterDnsblEntryArrayOutput
}

type SpamfilterDnsblEntryArray []SpamfilterDnsblEntryInput

func (SpamfilterDnsblEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterDnsblEntry)(nil)).Elem()
}

func (i SpamfilterDnsblEntryArray) ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput {
	return i.ToSpamfilterDnsblEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterDnsblEntryArray) ToSpamfilterDnsblEntryArrayOutputWithContext(ctx context.Context) SpamfilterDnsblEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterDnsblEntryArrayOutput)
}

func (i SpamfilterDnsblEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterDnsblEntry] {
	return pulumix.Output[[]SpamfilterDnsblEntry]{
		OutputState: i.ToSpamfilterDnsblEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterDnsblEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterDnsblEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterDnsblEntry)(nil)).Elem()
}

func (o SpamfilterDnsblEntryOutput) ToSpamfilterDnsblEntryOutput() SpamfilterDnsblEntryOutput {
	return o
}

func (o SpamfilterDnsblEntryOutput) ToSpamfilterDnsblEntryOutputWithContext(ctx context.Context) SpamfilterDnsblEntryOutput {
	return o
}

func (o SpamfilterDnsblEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterDnsblEntry] {
	return pulumix.Output[SpamfilterDnsblEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterDnsblEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterDnsblEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SpamfilterDnsblEntryOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SpamfilterDnsblEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterDnsblEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterDnsblEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterDnsblEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterDnsblEntry)(nil)).Elem()
}

func (o SpamfilterDnsblEntryArrayOutput) ToSpamfilterDnsblEntryArrayOutput() SpamfilterDnsblEntryArrayOutput {
	return o
}

func (o SpamfilterDnsblEntryArrayOutput) ToSpamfilterDnsblEntryArrayOutputWithContext(ctx context.Context) SpamfilterDnsblEntryArrayOutput {
	return o
}

func (o SpamfilterDnsblEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterDnsblEntry] {
	return pulumix.Output[[]SpamfilterDnsblEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterDnsblEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterDnsblEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterDnsblEntry {
		return vs[0].([]SpamfilterDnsblEntry)[vs[1].(int)]
	}).(SpamfilterDnsblEntryOutput)
}

type SpamfilterIptrustEntry struct {
	AddrType  *string `pulumi:"addrType"`
	Id        *int    `pulumi:"id"`
	Ip4Subnet *string `pulumi:"ip4Subnet"`
	Ip6Subnet *string `pulumi:"ip6Subnet"`
	Status    *string `pulumi:"status"`
}

// SpamfilterIptrustEntryInput is an input type that accepts SpamfilterIptrustEntryArgs and SpamfilterIptrustEntryOutput values.
// You can construct a concrete instance of `SpamfilterIptrustEntryInput` via:
//
//	SpamfilterIptrustEntryArgs{...}
type SpamfilterIptrustEntryInput interface {
	pulumi.Input

	ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput
	ToSpamfilterIptrustEntryOutputWithContext(context.Context) SpamfilterIptrustEntryOutput
}

type SpamfilterIptrustEntryArgs struct {
	AddrType  pulumi.StringPtrInput `pulumi:"addrType"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Ip4Subnet pulumi.StringPtrInput `pulumi:"ip4Subnet"`
	Ip6Subnet pulumi.StringPtrInput `pulumi:"ip6Subnet"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterIptrustEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterIptrustEntry)(nil)).Elem()
}

func (i SpamfilterIptrustEntryArgs) ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput {
	return i.ToSpamfilterIptrustEntryOutputWithContext(context.Background())
}

func (i SpamfilterIptrustEntryArgs) ToSpamfilterIptrustEntryOutputWithContext(ctx context.Context) SpamfilterIptrustEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustEntryOutput)
}

func (i SpamfilterIptrustEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterIptrustEntry] {
	return pulumix.Output[SpamfilterIptrustEntry]{
		OutputState: i.ToSpamfilterIptrustEntryOutputWithContext(ctx).OutputState,
	}
}

// SpamfilterIptrustEntryArrayInput is an input type that accepts SpamfilterIptrustEntryArray and SpamfilterIptrustEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterIptrustEntryArrayInput` via:
//
//	SpamfilterIptrustEntryArray{ SpamfilterIptrustEntryArgs{...} }
type SpamfilterIptrustEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput
	ToSpamfilterIptrustEntryArrayOutputWithContext(context.Context) SpamfilterIptrustEntryArrayOutput
}

type SpamfilterIptrustEntryArray []SpamfilterIptrustEntryInput

func (SpamfilterIptrustEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterIptrustEntry)(nil)).Elem()
}

func (i SpamfilterIptrustEntryArray) ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput {
	return i.ToSpamfilterIptrustEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterIptrustEntryArray) ToSpamfilterIptrustEntryArrayOutputWithContext(ctx context.Context) SpamfilterIptrustEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustEntryArrayOutput)
}

func (i SpamfilterIptrustEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterIptrustEntry] {
	return pulumix.Output[[]SpamfilterIptrustEntry]{
		OutputState: i.ToSpamfilterIptrustEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterIptrustEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterIptrustEntry)(nil)).Elem()
}

func (o SpamfilterIptrustEntryOutput) ToSpamfilterIptrustEntryOutput() SpamfilterIptrustEntryOutput {
	return o
}

func (o SpamfilterIptrustEntryOutput) ToSpamfilterIptrustEntryOutputWithContext(ctx context.Context) SpamfilterIptrustEntryOutput {
	return o
}

func (o SpamfilterIptrustEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterIptrustEntry] {
	return pulumix.Output[SpamfilterIptrustEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterIptrustEntryOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

func (o SpamfilterIptrustEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SpamfilterIptrustEntryOutput) Ip4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Ip4Subnet }).(pulumi.StringPtrOutput)
}

func (o SpamfilterIptrustEntryOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

func (o SpamfilterIptrustEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterIptrustEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterIptrustEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterIptrustEntry)(nil)).Elem()
}

func (o SpamfilterIptrustEntryArrayOutput) ToSpamfilterIptrustEntryArrayOutput() SpamfilterIptrustEntryArrayOutput {
	return o
}

func (o SpamfilterIptrustEntryArrayOutput) ToSpamfilterIptrustEntryArrayOutputWithContext(ctx context.Context) SpamfilterIptrustEntryArrayOutput {
	return o
}

func (o SpamfilterIptrustEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterIptrustEntry] {
	return pulumix.Output[[]SpamfilterIptrustEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterIptrustEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterIptrustEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterIptrustEntry {
		return vs[0].([]SpamfilterIptrustEntry)[vs[1].(int)]
	}).(SpamfilterIptrustEntryOutput)
}

type SpamfilterMheaderEntry struct {
	Action      *string `pulumi:"action"`
	Fieldbody   *string `pulumi:"fieldbody"`
	Fieldname   *string `pulumi:"fieldname"`
	Id          *int    `pulumi:"id"`
	PatternType *string `pulumi:"patternType"`
	Status      *string `pulumi:"status"`
}

// SpamfilterMheaderEntryInput is an input type that accepts SpamfilterMheaderEntryArgs and SpamfilterMheaderEntryOutput values.
// You can construct a concrete instance of `SpamfilterMheaderEntryInput` via:
//
//	SpamfilterMheaderEntryArgs{...}
type SpamfilterMheaderEntryInput interface {
	pulumi.Input

	ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput
	ToSpamfilterMheaderEntryOutputWithContext(context.Context) SpamfilterMheaderEntryOutput
}

type SpamfilterMheaderEntryArgs struct {
	Action      pulumi.StringPtrInput `pulumi:"action"`
	Fieldbody   pulumi.StringPtrInput `pulumi:"fieldbody"`
	Fieldname   pulumi.StringPtrInput `pulumi:"fieldname"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (SpamfilterMheaderEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterMheaderEntry)(nil)).Elem()
}

func (i SpamfilterMheaderEntryArgs) ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput {
	return i.ToSpamfilterMheaderEntryOutputWithContext(context.Background())
}

func (i SpamfilterMheaderEntryArgs) ToSpamfilterMheaderEntryOutputWithContext(ctx context.Context) SpamfilterMheaderEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderEntryOutput)
}

func (i SpamfilterMheaderEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterMheaderEntry] {
	return pulumix.Output[SpamfilterMheaderEntry]{
		OutputState: i.ToSpamfilterMheaderEntryOutputWithContext(ctx).OutputState,
	}
}

// SpamfilterMheaderEntryArrayInput is an input type that accepts SpamfilterMheaderEntryArray and SpamfilterMheaderEntryArrayOutput values.
// You can construct a concrete instance of `SpamfilterMheaderEntryArrayInput` via:
//
//	SpamfilterMheaderEntryArray{ SpamfilterMheaderEntryArgs{...} }
type SpamfilterMheaderEntryArrayInput interface {
	pulumi.Input

	ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput
	ToSpamfilterMheaderEntryArrayOutputWithContext(context.Context) SpamfilterMheaderEntryArrayOutput
}

type SpamfilterMheaderEntryArray []SpamfilterMheaderEntryInput

func (SpamfilterMheaderEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterMheaderEntry)(nil)).Elem()
}

func (i SpamfilterMheaderEntryArray) ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput {
	return i.ToSpamfilterMheaderEntryArrayOutputWithContext(context.Background())
}

func (i SpamfilterMheaderEntryArray) ToSpamfilterMheaderEntryArrayOutputWithContext(ctx context.Context) SpamfilterMheaderEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderEntryArrayOutput)
}

func (i SpamfilterMheaderEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterMheaderEntry] {
	return pulumix.Output[[]SpamfilterMheaderEntry]{
		OutputState: i.ToSpamfilterMheaderEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterMheaderEntryOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterMheaderEntry)(nil)).Elem()
}

func (o SpamfilterMheaderEntryOutput) ToSpamfilterMheaderEntryOutput() SpamfilterMheaderEntryOutput {
	return o
}

func (o SpamfilterMheaderEntryOutput) ToSpamfilterMheaderEntryOutputWithContext(ctx context.Context) SpamfilterMheaderEntryOutput {
	return o
}

func (o SpamfilterMheaderEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterMheaderEntry] {
	return pulumix.Output[SpamfilterMheaderEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterMheaderEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderEntryOutput) Fieldbody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Fieldbody }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderEntryOutput) Fieldname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Fieldname }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SpamfilterMheaderEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterMheaderEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SpamfilterMheaderEntryArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpamfilterMheaderEntry)(nil)).Elem()
}

func (o SpamfilterMheaderEntryArrayOutput) ToSpamfilterMheaderEntryArrayOutput() SpamfilterMheaderEntryArrayOutput {
	return o
}

func (o SpamfilterMheaderEntryArrayOutput) ToSpamfilterMheaderEntryArrayOutputWithContext(ctx context.Context) SpamfilterMheaderEntryArrayOutput {
	return o
}

func (o SpamfilterMheaderEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpamfilterMheaderEntry] {
	return pulumix.Output[[]SpamfilterMheaderEntry]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterMheaderEntryArrayOutput) Index(i pulumi.IntInput) SpamfilterMheaderEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpamfilterMheaderEntry {
		return vs[0].([]SpamfilterMheaderEntry)[vs[1].(int)]
	}).(SpamfilterMheaderEntryOutput)
}

type SpamfilterProfileGmail struct {
	Log *string `pulumi:"log"`
}

// SpamfilterProfileGmailInput is an input type that accepts SpamfilterProfileGmailArgs and SpamfilterProfileGmailOutput values.
// You can construct a concrete instance of `SpamfilterProfileGmailInput` via:
//
//	SpamfilterProfileGmailArgs{...}
type SpamfilterProfileGmailInput interface {
	pulumi.Input

	ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput
	ToSpamfilterProfileGmailOutputWithContext(context.Context) SpamfilterProfileGmailOutput
}

type SpamfilterProfileGmailArgs struct {
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileGmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileGmail)(nil)).Elem()
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput {
	return i.ToSpamfilterProfileGmailOutputWithContext(context.Background())
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailOutputWithContext(ctx context.Context) SpamfilterProfileGmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailOutput)
}

func (i SpamfilterProfileGmailArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileGmail] {
	return pulumix.Output[SpamfilterProfileGmail]{
		OutputState: i.ToSpamfilterProfileGmailOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return i.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileGmailArgs) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailOutput).ToSpamfilterProfileGmailPtrOutputWithContext(ctx)
}

// SpamfilterProfileGmailPtrInput is an input type that accepts SpamfilterProfileGmailArgs, SpamfilterProfileGmailPtr and SpamfilterProfileGmailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileGmailPtrInput` via:
//
//	        SpamfilterProfileGmailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileGmailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput
	ToSpamfilterProfileGmailPtrOutputWithContext(context.Context) SpamfilterProfileGmailPtrOutput
}

type spamfilterProfileGmailPtrType SpamfilterProfileGmailArgs

func SpamfilterProfileGmailPtr(v *SpamfilterProfileGmailArgs) SpamfilterProfileGmailPtrInput {
	return (*spamfilterProfileGmailPtrType)(v)
}

func (*spamfilterProfileGmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileGmail)(nil)).Elem()
}

func (i *spamfilterProfileGmailPtrType) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return i.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileGmailPtrType) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileGmailPtrOutput)
}

func (i *spamfilterProfileGmailPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileGmail] {
	return pulumix.Output[*SpamfilterProfileGmail]{
		OutputState: i.ToSpamfilterProfileGmailPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileGmailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileGmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileGmail)(nil)).Elem()
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailOutput() SpamfilterProfileGmailOutput {
	return o
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailOutputWithContext(ctx context.Context) SpamfilterProfileGmailOutput {
	return o
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return o.ToSpamfilterProfileGmailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileGmailOutput) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileGmail) *SpamfilterProfileGmail {
		return &v
	}).(SpamfilterProfileGmailPtrOutput)
}

func (o SpamfilterProfileGmailOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileGmail] {
	return pulumix.Output[SpamfilterProfileGmail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileGmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileGmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileGmailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileGmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileGmail)(nil)).Elem()
}

func (o SpamfilterProfileGmailPtrOutput) ToSpamfilterProfileGmailPtrOutput() SpamfilterProfileGmailPtrOutput {
	return o
}

func (o SpamfilterProfileGmailPtrOutput) ToSpamfilterProfileGmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileGmailPtrOutput {
	return o
}

func (o SpamfilterProfileGmailPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileGmail] {
	return pulumix.Output[*SpamfilterProfileGmail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileGmailPtrOutput) Elem() SpamfilterProfileGmailOutput {
	return o.ApplyT(func(v *SpamfilterProfileGmail) SpamfilterProfileGmail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileGmail
		return ret
	}).(SpamfilterProfileGmailOutput)
}

func (o SpamfilterProfileGmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileGmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileImap struct {
	Action  *string `pulumi:"action"`
	Log     *string `pulumi:"log"`
	TagMsg  *string `pulumi:"tagMsg"`
	TagType *string `pulumi:"tagType"`
}

// SpamfilterProfileImapInput is an input type that accepts SpamfilterProfileImapArgs and SpamfilterProfileImapOutput values.
// You can construct a concrete instance of `SpamfilterProfileImapInput` via:
//
//	SpamfilterProfileImapArgs{...}
type SpamfilterProfileImapInput interface {
	pulumi.Input

	ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput
	ToSpamfilterProfileImapOutputWithContext(context.Context) SpamfilterProfileImapOutput
}

type SpamfilterProfileImapArgs struct {
	Action  pulumi.StringPtrInput `pulumi:"action"`
	Log     pulumi.StringPtrInput `pulumi:"log"`
	TagMsg  pulumi.StringPtrInput `pulumi:"tagMsg"`
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfileImapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileImap)(nil)).Elem()
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput {
	return i.ToSpamfilterProfileImapOutputWithContext(context.Background())
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapOutputWithContext(ctx context.Context) SpamfilterProfileImapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapOutput)
}

func (i SpamfilterProfileImapArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileImap] {
	return pulumix.Output[SpamfilterProfileImap]{
		OutputState: i.ToSpamfilterProfileImapOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return i.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileImapArgs) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapOutput).ToSpamfilterProfileImapPtrOutputWithContext(ctx)
}

// SpamfilterProfileImapPtrInput is an input type that accepts SpamfilterProfileImapArgs, SpamfilterProfileImapPtr and SpamfilterProfileImapPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileImapPtrInput` via:
//
//	        SpamfilterProfileImapArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileImapPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput
	ToSpamfilterProfileImapPtrOutputWithContext(context.Context) SpamfilterProfileImapPtrOutput
}

type spamfilterProfileImapPtrType SpamfilterProfileImapArgs

func SpamfilterProfileImapPtr(v *SpamfilterProfileImapArgs) SpamfilterProfileImapPtrInput {
	return (*spamfilterProfileImapPtrType)(v)
}

func (*spamfilterProfileImapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileImap)(nil)).Elem()
}

func (i *spamfilterProfileImapPtrType) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return i.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileImapPtrType) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileImapPtrOutput)
}

func (i *spamfilterProfileImapPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileImap] {
	return pulumix.Output[*SpamfilterProfileImap]{
		OutputState: i.ToSpamfilterProfileImapPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileImapOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileImapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileImap)(nil)).Elem()
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapOutput() SpamfilterProfileImapOutput {
	return o
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapOutputWithContext(ctx context.Context) SpamfilterProfileImapOutput {
	return o
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return o.ToSpamfilterProfileImapPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileImapOutput) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileImap) *SpamfilterProfileImap {
		return &v
	}).(SpamfilterProfileImapPtrOutput)
}

func (o SpamfilterProfileImapOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileImap] {
	return pulumix.Output[SpamfilterProfileImap]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileImapOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.Log }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileImap) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileImapPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileImapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileImap)(nil)).Elem()
}

func (o SpamfilterProfileImapPtrOutput) ToSpamfilterProfileImapPtrOutput() SpamfilterProfileImapPtrOutput {
	return o
}

func (o SpamfilterProfileImapPtrOutput) ToSpamfilterProfileImapPtrOutputWithContext(ctx context.Context) SpamfilterProfileImapPtrOutput {
	return o
}

func (o SpamfilterProfileImapPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileImap] {
	return pulumix.Output[*SpamfilterProfileImap]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileImapPtrOutput) Elem() SpamfilterProfileImapOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) SpamfilterProfileImap {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileImap
		return ret
	}).(SpamfilterProfileImapOutput)
}

func (o SpamfilterProfileImapPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileImapPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileImap) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMapi struct {
	Action *string `pulumi:"action"`
	Log    *string `pulumi:"log"`
}

// SpamfilterProfileMapiInput is an input type that accepts SpamfilterProfileMapiArgs and SpamfilterProfileMapiOutput values.
// You can construct a concrete instance of `SpamfilterProfileMapiInput` via:
//
//	SpamfilterProfileMapiArgs{...}
type SpamfilterProfileMapiInput interface {
	pulumi.Input

	ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput
	ToSpamfilterProfileMapiOutputWithContext(context.Context) SpamfilterProfileMapiOutput
}

type SpamfilterProfileMapiArgs struct {
	Action pulumi.StringPtrInput `pulumi:"action"`
	Log    pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileMapiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMapi)(nil)).Elem()
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput {
	return i.ToSpamfilterProfileMapiOutputWithContext(context.Background())
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiOutputWithContext(ctx context.Context) SpamfilterProfileMapiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiOutput)
}

func (i SpamfilterProfileMapiArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileMapi] {
	return pulumix.Output[SpamfilterProfileMapi]{
		OutputState: i.ToSpamfilterProfileMapiOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return i.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileMapiArgs) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiOutput).ToSpamfilterProfileMapiPtrOutputWithContext(ctx)
}

// SpamfilterProfileMapiPtrInput is an input type that accepts SpamfilterProfileMapiArgs, SpamfilterProfileMapiPtr and SpamfilterProfileMapiPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileMapiPtrInput` via:
//
//	        SpamfilterProfileMapiArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileMapiPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput
	ToSpamfilterProfileMapiPtrOutputWithContext(context.Context) SpamfilterProfileMapiPtrOutput
}

type spamfilterProfileMapiPtrType SpamfilterProfileMapiArgs

func SpamfilterProfileMapiPtr(v *SpamfilterProfileMapiArgs) SpamfilterProfileMapiPtrInput {
	return (*spamfilterProfileMapiPtrType)(v)
}

func (*spamfilterProfileMapiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMapi)(nil)).Elem()
}

func (i *spamfilterProfileMapiPtrType) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return i.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileMapiPtrType) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMapiPtrOutput)
}

func (i *spamfilterProfileMapiPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileMapi] {
	return pulumix.Output[*SpamfilterProfileMapi]{
		OutputState: i.ToSpamfilterProfileMapiPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileMapiOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMapiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMapi)(nil)).Elem()
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiOutput() SpamfilterProfileMapiOutput {
	return o
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiOutputWithContext(ctx context.Context) SpamfilterProfileMapiOutput {
	return o
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return o.ToSpamfilterProfileMapiPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileMapiOutput) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileMapi) *SpamfilterProfileMapi {
		return &v
	}).(SpamfilterProfileMapiPtrOutput)
}

func (o SpamfilterProfileMapiOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileMapi] {
	return pulumix.Output[SpamfilterProfileMapi]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileMapiOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMapi) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileMapiOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMapi) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMapiPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMapiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMapi)(nil)).Elem()
}

func (o SpamfilterProfileMapiPtrOutput) ToSpamfilterProfileMapiPtrOutput() SpamfilterProfileMapiPtrOutput {
	return o
}

func (o SpamfilterProfileMapiPtrOutput) ToSpamfilterProfileMapiPtrOutputWithContext(ctx context.Context) SpamfilterProfileMapiPtrOutput {
	return o
}

func (o SpamfilterProfileMapiPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileMapi] {
	return pulumix.Output[*SpamfilterProfileMapi]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileMapiPtrOutput) Elem() SpamfilterProfileMapiOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) SpamfilterProfileMapi {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileMapi
		return ret
	}).(SpamfilterProfileMapiOutput)
}

func (o SpamfilterProfileMapiPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileMapiPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMapi) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMsnHotmail struct {
	Log *string `pulumi:"log"`
}

// SpamfilterProfileMsnHotmailInput is an input type that accepts SpamfilterProfileMsnHotmailArgs and SpamfilterProfileMsnHotmailOutput values.
// You can construct a concrete instance of `SpamfilterProfileMsnHotmailInput` via:
//
//	SpamfilterProfileMsnHotmailArgs{...}
type SpamfilterProfileMsnHotmailInput interface {
	pulumi.Input

	ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput
	ToSpamfilterProfileMsnHotmailOutputWithContext(context.Context) SpamfilterProfileMsnHotmailOutput
}

type SpamfilterProfileMsnHotmailArgs struct {
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileMsnHotmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput {
	return i.ToSpamfilterProfileMsnHotmailOutputWithContext(context.Background())
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailOutput)
}

func (i SpamfilterProfileMsnHotmailArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileMsnHotmail] {
	return pulumix.Output[SpamfilterProfileMsnHotmail]{
		OutputState: i.ToSpamfilterProfileMsnHotmailOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return i.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileMsnHotmailArgs) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailOutput).ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx)
}

// SpamfilterProfileMsnHotmailPtrInput is an input type that accepts SpamfilterProfileMsnHotmailArgs, SpamfilterProfileMsnHotmailPtr and SpamfilterProfileMsnHotmailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileMsnHotmailPtrInput` via:
//
//	        SpamfilterProfileMsnHotmailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileMsnHotmailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput
	ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Context) SpamfilterProfileMsnHotmailPtrOutput
}

type spamfilterProfileMsnHotmailPtrType SpamfilterProfileMsnHotmailArgs

func SpamfilterProfileMsnHotmailPtr(v *SpamfilterProfileMsnHotmailArgs) SpamfilterProfileMsnHotmailPtrInput {
	return (*spamfilterProfileMsnHotmailPtrType)(v)
}

func (*spamfilterProfileMsnHotmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (i *spamfilterProfileMsnHotmailPtrType) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return i.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileMsnHotmailPtrType) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileMsnHotmailPtrOutput)
}

func (i *spamfilterProfileMsnHotmailPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileMsnHotmail] {
	return pulumix.Output[*SpamfilterProfileMsnHotmail]{
		OutputState: i.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileMsnHotmailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMsnHotmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailOutput() SpamfilterProfileMsnHotmailOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return o.ToSpamfilterProfileMsnHotmailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileMsnHotmailOutput) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileMsnHotmail) *SpamfilterProfileMsnHotmail {
		return &v
	}).(SpamfilterProfileMsnHotmailPtrOutput)
}

func (o SpamfilterProfileMsnHotmailOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileMsnHotmail] {
	return pulumix.Output[SpamfilterProfileMsnHotmail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileMsnHotmailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileMsnHotmail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileMsnHotmailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileMsnHotmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileMsnHotmail)(nil)).Elem()
}

func (o SpamfilterProfileMsnHotmailPtrOutput) ToSpamfilterProfileMsnHotmailPtrOutput() SpamfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailPtrOutput) ToSpamfilterProfileMsnHotmailPtrOutputWithContext(ctx context.Context) SpamfilterProfileMsnHotmailPtrOutput {
	return o
}

func (o SpamfilterProfileMsnHotmailPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileMsnHotmail] {
	return pulumix.Output[*SpamfilterProfileMsnHotmail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileMsnHotmailPtrOutput) Elem() SpamfilterProfileMsnHotmailOutput {
	return o.ApplyT(func(v *SpamfilterProfileMsnHotmail) SpamfilterProfileMsnHotmail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileMsnHotmail
		return ret
	}).(SpamfilterProfileMsnHotmailOutput)
}

func (o SpamfilterProfileMsnHotmailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileMsnHotmail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfilePop3 struct {
	Action  *string `pulumi:"action"`
	Log     *string `pulumi:"log"`
	TagMsg  *string `pulumi:"tagMsg"`
	TagType *string `pulumi:"tagType"`
}

// SpamfilterProfilePop3Input is an input type that accepts SpamfilterProfilePop3Args and SpamfilterProfilePop3Output values.
// You can construct a concrete instance of `SpamfilterProfilePop3Input` via:
//
//	SpamfilterProfilePop3Args{...}
type SpamfilterProfilePop3Input interface {
	pulumi.Input

	ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output
	ToSpamfilterProfilePop3OutputWithContext(context.Context) SpamfilterProfilePop3Output
}

type SpamfilterProfilePop3Args struct {
	Action  pulumi.StringPtrInput `pulumi:"action"`
	Log     pulumi.StringPtrInput `pulumi:"log"`
	TagMsg  pulumi.StringPtrInput `pulumi:"tagMsg"`
	TagType pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfilePop3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfilePop3)(nil)).Elem()
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output {
	return i.ToSpamfilterProfilePop3OutputWithContext(context.Background())
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3OutputWithContext(ctx context.Context) SpamfilterProfilePop3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3Output)
}

func (i SpamfilterProfilePop3Args) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfilePop3] {
	return pulumix.Output[SpamfilterProfilePop3]{
		OutputState: i.ToSpamfilterProfilePop3OutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return i.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i SpamfilterProfilePop3Args) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3Output).ToSpamfilterProfilePop3PtrOutputWithContext(ctx)
}

// SpamfilterProfilePop3PtrInput is an input type that accepts SpamfilterProfilePop3Args, SpamfilterProfilePop3Ptr and SpamfilterProfilePop3PtrOutput values.
// You can construct a concrete instance of `SpamfilterProfilePop3PtrInput` via:
//
//	        SpamfilterProfilePop3Args{...}
//
//	or:
//
//	        nil
type SpamfilterProfilePop3PtrInput interface {
	pulumi.Input

	ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput
	ToSpamfilterProfilePop3PtrOutputWithContext(context.Context) SpamfilterProfilePop3PtrOutput
}

type spamfilterProfilePop3PtrType SpamfilterProfilePop3Args

func SpamfilterProfilePop3Ptr(v *SpamfilterProfilePop3Args) SpamfilterProfilePop3PtrInput {
	return (*spamfilterProfilePop3PtrType)(v)
}

func (*spamfilterProfilePop3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfilePop3)(nil)).Elem()
}

func (i *spamfilterProfilePop3PtrType) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return i.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (i *spamfilterProfilePop3PtrType) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfilePop3PtrOutput)
}

func (i *spamfilterProfilePop3PtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfilePop3] {
	return pulumix.Output[*SpamfilterProfilePop3]{
		OutputState: i.ToSpamfilterProfilePop3PtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfilePop3Output struct{ *pulumi.OutputState }

func (SpamfilterProfilePop3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfilePop3)(nil)).Elem()
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3Output() SpamfilterProfilePop3Output {
	return o
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3OutputWithContext(ctx context.Context) SpamfilterProfilePop3Output {
	return o
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return o.ToSpamfilterProfilePop3PtrOutputWithContext(context.Background())
}

func (o SpamfilterProfilePop3Output) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfilePop3) *SpamfilterProfilePop3 {
		return &v
	}).(SpamfilterProfilePop3PtrOutput)
}

func (o SpamfilterProfilePop3Output) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfilePop3] {
	return pulumix.Output[SpamfilterProfilePop3]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfilePop3Output) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3Output) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.Log }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3Output) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3Output) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfilePop3) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfilePop3PtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfilePop3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfilePop3)(nil)).Elem()
}

func (o SpamfilterProfilePop3PtrOutput) ToSpamfilterProfilePop3PtrOutput() SpamfilterProfilePop3PtrOutput {
	return o
}

func (o SpamfilterProfilePop3PtrOutput) ToSpamfilterProfilePop3PtrOutputWithContext(ctx context.Context) SpamfilterProfilePop3PtrOutput {
	return o
}

func (o SpamfilterProfilePop3PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfilePop3] {
	return pulumix.Output[*SpamfilterProfilePop3]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfilePop3PtrOutput) Elem() SpamfilterProfilePop3Output {
	return o.ApplyT(func(v *SpamfilterProfilePop3) SpamfilterProfilePop3 {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfilePop3
		return ret
	}).(SpamfilterProfilePop3Output)
}

func (o SpamfilterProfilePop3PtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3PtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3PtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfilePop3PtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfilePop3) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileSmtp struct {
	Action        *string `pulumi:"action"`
	Hdrip         *string `pulumi:"hdrip"`
	LocalOverride *string `pulumi:"localOverride"`
	Log           *string `pulumi:"log"`
	TagMsg        *string `pulumi:"tagMsg"`
	TagType       *string `pulumi:"tagType"`
}

// SpamfilterProfileSmtpInput is an input type that accepts SpamfilterProfileSmtpArgs and SpamfilterProfileSmtpOutput values.
// You can construct a concrete instance of `SpamfilterProfileSmtpInput` via:
//
//	SpamfilterProfileSmtpArgs{...}
type SpamfilterProfileSmtpInput interface {
	pulumi.Input

	ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput
	ToSpamfilterProfileSmtpOutputWithContext(context.Context) SpamfilterProfileSmtpOutput
}

type SpamfilterProfileSmtpArgs struct {
	Action        pulumi.StringPtrInput `pulumi:"action"`
	Hdrip         pulumi.StringPtrInput `pulumi:"hdrip"`
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	Log           pulumi.StringPtrInput `pulumi:"log"`
	TagMsg        pulumi.StringPtrInput `pulumi:"tagMsg"`
	TagType       pulumi.StringPtrInput `pulumi:"tagType"`
}

func (SpamfilterProfileSmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileSmtp)(nil)).Elem()
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput {
	return i.ToSpamfilterProfileSmtpOutputWithContext(context.Background())
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpOutputWithContext(ctx context.Context) SpamfilterProfileSmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpOutput)
}

func (i SpamfilterProfileSmtpArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileSmtp] {
	return pulumix.Output[SpamfilterProfileSmtp]{
		OutputState: i.ToSpamfilterProfileSmtpOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return i.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileSmtpArgs) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpOutput).ToSpamfilterProfileSmtpPtrOutputWithContext(ctx)
}

// SpamfilterProfileSmtpPtrInput is an input type that accepts SpamfilterProfileSmtpArgs, SpamfilterProfileSmtpPtr and SpamfilterProfileSmtpPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileSmtpPtrInput` via:
//
//	        SpamfilterProfileSmtpArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileSmtpPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput
	ToSpamfilterProfileSmtpPtrOutputWithContext(context.Context) SpamfilterProfileSmtpPtrOutput
}

type spamfilterProfileSmtpPtrType SpamfilterProfileSmtpArgs

func SpamfilterProfileSmtpPtr(v *SpamfilterProfileSmtpArgs) SpamfilterProfileSmtpPtrInput {
	return (*spamfilterProfileSmtpPtrType)(v)
}

func (*spamfilterProfileSmtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileSmtp)(nil)).Elem()
}

func (i *spamfilterProfileSmtpPtrType) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return i.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileSmtpPtrType) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileSmtpPtrOutput)
}

func (i *spamfilterProfileSmtpPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileSmtp] {
	return pulumix.Output[*SpamfilterProfileSmtp]{
		OutputState: i.ToSpamfilterProfileSmtpPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileSmtpOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileSmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileSmtp)(nil)).Elem()
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpOutput() SpamfilterProfileSmtpOutput {
	return o
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpOutputWithContext(ctx context.Context) SpamfilterProfileSmtpOutput {
	return o
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return o.ToSpamfilterProfileSmtpPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileSmtpOutput) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileSmtp) *SpamfilterProfileSmtp {
		return &v
	}).(SpamfilterProfileSmtpPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileSmtp] {
	return pulumix.Output[SpamfilterProfileSmtp]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileSmtpOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Hdrip }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.Log }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.TagMsg }).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileSmtp) *string { return v.TagType }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileSmtpPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileSmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileSmtp)(nil)).Elem()
}

func (o SpamfilterProfileSmtpPtrOutput) ToSpamfilterProfileSmtpPtrOutput() SpamfilterProfileSmtpPtrOutput {
	return o
}

func (o SpamfilterProfileSmtpPtrOutput) ToSpamfilterProfileSmtpPtrOutputWithContext(ctx context.Context) SpamfilterProfileSmtpPtrOutput {
	return o
}

func (o SpamfilterProfileSmtpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileSmtp] {
	return pulumix.Output[*SpamfilterProfileSmtp]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileSmtpPtrOutput) Elem() SpamfilterProfileSmtpOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) SpamfilterProfileSmtp {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileSmtp
		return ret
	}).(SpamfilterProfileSmtpOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) Hdrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Hdrip
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) TagMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagMsg
	}).(pulumi.StringPtrOutput)
}

func (o SpamfilterProfileSmtpPtrOutput) TagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileSmtp) *string {
		if v == nil {
			return nil
		}
		return v.TagType
	}).(pulumi.StringPtrOutput)
}

type SpamfilterProfileYahooMail struct {
	Log *string `pulumi:"log"`
}

// SpamfilterProfileYahooMailInput is an input type that accepts SpamfilterProfileYahooMailArgs and SpamfilterProfileYahooMailOutput values.
// You can construct a concrete instance of `SpamfilterProfileYahooMailInput` via:
//
//	SpamfilterProfileYahooMailArgs{...}
type SpamfilterProfileYahooMailInput interface {
	pulumi.Input

	ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput
	ToSpamfilterProfileYahooMailOutputWithContext(context.Context) SpamfilterProfileYahooMailOutput
}

type SpamfilterProfileYahooMailArgs struct {
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (SpamfilterProfileYahooMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileYahooMail)(nil)).Elem()
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput {
	return i.ToSpamfilterProfileYahooMailOutputWithContext(context.Background())
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailOutput)
}

func (i SpamfilterProfileYahooMailArgs) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileYahooMail] {
	return pulumix.Output[SpamfilterProfileYahooMail]{
		OutputState: i.ToSpamfilterProfileYahooMailOutputWithContext(ctx).OutputState,
	}
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return i.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i SpamfilterProfileYahooMailArgs) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailOutput).ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx)
}

// SpamfilterProfileYahooMailPtrInput is an input type that accepts SpamfilterProfileYahooMailArgs, SpamfilterProfileYahooMailPtr and SpamfilterProfileYahooMailPtrOutput values.
// You can construct a concrete instance of `SpamfilterProfileYahooMailPtrInput` via:
//
//	        SpamfilterProfileYahooMailArgs{...}
//
//	or:
//
//	        nil
type SpamfilterProfileYahooMailPtrInput interface {
	pulumi.Input

	ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput
	ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Context) SpamfilterProfileYahooMailPtrOutput
}

type spamfilterProfileYahooMailPtrType SpamfilterProfileYahooMailArgs

func SpamfilterProfileYahooMailPtr(v *SpamfilterProfileYahooMailArgs) SpamfilterProfileYahooMailPtrInput {
	return (*spamfilterProfileYahooMailPtrType)(v)
}

func (*spamfilterProfileYahooMailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileYahooMail)(nil)).Elem()
}

func (i *spamfilterProfileYahooMailPtrType) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return i.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (i *spamfilterProfileYahooMailPtrType) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterProfileYahooMailPtrOutput)
}

func (i *spamfilterProfileYahooMailPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileYahooMail] {
	return pulumix.Output[*SpamfilterProfileYahooMail]{
		OutputState: i.ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx).OutputState,
	}
}

type SpamfilterProfileYahooMailOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileYahooMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpamfilterProfileYahooMail)(nil)).Elem()
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailOutput() SpamfilterProfileYahooMailOutput {
	return o
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailOutput {
	return o
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return o.ToSpamfilterProfileYahooMailPtrOutputWithContext(context.Background())
}

func (o SpamfilterProfileYahooMailOutput) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpamfilterProfileYahooMail) *SpamfilterProfileYahooMail {
		return &v
	}).(SpamfilterProfileYahooMailPtrOutput)
}

func (o SpamfilterProfileYahooMailOutput) ToOutput(ctx context.Context) pulumix.Output[SpamfilterProfileYahooMail] {
	return pulumix.Output[SpamfilterProfileYahooMail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileYahooMailOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpamfilterProfileYahooMail) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type SpamfilterProfileYahooMailPtrOutput struct{ *pulumi.OutputState }

func (SpamfilterProfileYahooMailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterProfileYahooMail)(nil)).Elem()
}

func (o SpamfilterProfileYahooMailPtrOutput) ToSpamfilterProfileYahooMailPtrOutput() SpamfilterProfileYahooMailPtrOutput {
	return o
}

func (o SpamfilterProfileYahooMailPtrOutput) ToSpamfilterProfileYahooMailPtrOutputWithContext(ctx context.Context) SpamfilterProfileYahooMailPtrOutput {
	return o
}

func (o SpamfilterProfileYahooMailPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpamfilterProfileYahooMail] {
	return pulumix.Output[*SpamfilterProfileYahooMail]{
		OutputState: o.OutputState,
	}
}

func (o SpamfilterProfileYahooMailPtrOutput) Elem() SpamfilterProfileYahooMailOutput {
	return o.ApplyT(func(v *SpamfilterProfileYahooMail) SpamfilterProfileYahooMail {
		if v != nil {
			return *v
		}
		var ret SpamfilterProfileYahooMail
		return ret
	}).(SpamfilterProfileYahooMailOutput)
}

func (o SpamfilterProfileYahooMailPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterProfileYahooMail) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

type SshFilterProfileFileFilter struct {
	Entries             []SshFilterProfileFileFilterEntry `pulumi:"entries"`
	Log                 *string                           `pulumi:"log"`
	ScanArchiveContents *string                           `pulumi:"scanArchiveContents"`
	Status              *string                           `pulumi:"status"`
}

// SshFilterProfileFileFilterInput is an input type that accepts SshFilterProfileFileFilterArgs and SshFilterProfileFileFilterOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterInput` via:
//
//	SshFilterProfileFileFilterArgs{...}
type SshFilterProfileFileFilterInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterOutput() SshFilterProfileFileFilterOutput
	ToSshFilterProfileFileFilterOutputWithContext(context.Context) SshFilterProfileFileFilterOutput
}

type SshFilterProfileFileFilterArgs struct {
	Entries             SshFilterProfileFileFilterEntryArrayInput `pulumi:"entries"`
	Log                 pulumi.StringPtrInput                     `pulumi:"log"`
	ScanArchiveContents pulumi.StringPtrInput                     `pulumi:"scanArchiveContents"`
	Status              pulumi.StringPtrInput                     `pulumi:"status"`
}

func (SshFilterProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilter)(nil)).Elem()
}

func (i SshFilterProfileFileFilterArgs) ToSshFilterProfileFileFilterOutput() SshFilterProfileFileFilterOutput {
	return i.ToSshFilterProfileFileFilterOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterArgs) ToSshFilterProfileFileFilterOutputWithContext(ctx context.Context) SshFilterProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterOutput)
}

func (i SshFilterProfileFileFilterArgs) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilter] {
	return pulumix.Output[SshFilterProfileFileFilter]{
		OutputState: i.ToSshFilterProfileFileFilterOutputWithContext(ctx).OutputState,
	}
}

func (i SshFilterProfileFileFilterArgs) ToSshFilterProfileFileFilterPtrOutput() SshFilterProfileFileFilterPtrOutput {
	return i.ToSshFilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterArgs) ToSshFilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshFilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterOutput).ToSshFilterProfileFileFilterPtrOutputWithContext(ctx)
}

// SshFilterProfileFileFilterPtrInput is an input type that accepts SshFilterProfileFileFilterArgs, SshFilterProfileFileFilterPtr and SshFilterProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterPtrInput` via:
//
//	        SshFilterProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type SshFilterProfileFileFilterPtrInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterPtrOutput() SshFilterProfileFileFilterPtrOutput
	ToSshFilterProfileFileFilterPtrOutputWithContext(context.Context) SshFilterProfileFileFilterPtrOutput
}

type sshFilterProfileFileFilterPtrType SshFilterProfileFileFilterArgs

func SshFilterProfileFileFilterPtr(v *SshFilterProfileFileFilterArgs) SshFilterProfileFileFilterPtrInput {
	return (*sshFilterProfileFileFilterPtrType)(v)
}

func (*sshFilterProfileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshFilterProfileFileFilter)(nil)).Elem()
}

func (i *sshFilterProfileFileFilterPtrType) ToSshFilterProfileFileFilterPtrOutput() SshFilterProfileFileFilterPtrOutput {
	return i.ToSshFilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *sshFilterProfileFileFilterPtrType) ToSshFilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshFilterProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterPtrOutput)
}

func (i *sshFilterProfileFileFilterPtrType) ToOutput(ctx context.Context) pulumix.Output[*SshFilterProfileFileFilter] {
	return pulumix.Output[*SshFilterProfileFileFilter]{
		OutputState: i.ToSshFilterProfileFileFilterPtrOutputWithContext(ctx).OutputState,
	}
}

type SshFilterProfileFileFilterOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilter)(nil)).Elem()
}

func (o SshFilterProfileFileFilterOutput) ToSshFilterProfileFileFilterOutput() SshFilterProfileFileFilterOutput {
	return o
}

func (o SshFilterProfileFileFilterOutput) ToSshFilterProfileFileFilterOutputWithContext(ctx context.Context) SshFilterProfileFileFilterOutput {
	return o
}

func (o SshFilterProfileFileFilterOutput) ToSshFilterProfileFileFilterPtrOutput() SshFilterProfileFileFilterPtrOutput {
	return o.ToSshFilterProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o SshFilterProfileFileFilterOutput) ToSshFilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshFilterProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshFilterProfileFileFilter) *SshFilterProfileFileFilter {
		return &v
	}).(SshFilterProfileFileFilterPtrOutput)
}

func (o SshFilterProfileFileFilterOutput) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilter] {
	return pulumix.Output[SshFilterProfileFileFilter]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterOutput) Entries() SshFilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilter) []SshFilterProfileFileFilterEntry { return v.Entries }).(SshFilterProfileFileFilterEntryArrayOutput)
}

func (o SshFilterProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilter) *string { return v.ScanArchiveContents }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SshFilterProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshFilterProfileFileFilter)(nil)).Elem()
}

func (o SshFilterProfileFileFilterPtrOutput) ToSshFilterProfileFileFilterPtrOutput() SshFilterProfileFileFilterPtrOutput {
	return o
}

func (o SshFilterProfileFileFilterPtrOutput) ToSshFilterProfileFileFilterPtrOutputWithContext(ctx context.Context) SshFilterProfileFileFilterPtrOutput {
	return o
}

func (o SshFilterProfileFileFilterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SshFilterProfileFileFilter] {
	return pulumix.Output[*SshFilterProfileFileFilter]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterPtrOutput) Elem() SshFilterProfileFileFilterOutput {
	return o.ApplyT(func(v *SshFilterProfileFileFilter) SshFilterProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret SshFilterProfileFileFilter
		return ret
	}).(SshFilterProfileFileFilterOutput)
}

func (o SshFilterProfileFileFilterPtrOutput) Entries() SshFilterProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *SshFilterProfileFileFilter) []SshFilterProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(SshFilterProfileFileFilterEntryArrayOutput)
}

func (o SshFilterProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshFilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterPtrOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshFilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.ScanArchiveContents
	}).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshFilterProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SshFilterProfileFileFilterEntry struct {
	Action            *string                                   `pulumi:"action"`
	Comment           *string                                   `pulumi:"comment"`
	Direction         *string                                   `pulumi:"direction"`
	FileTypes         []SshFilterProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	Filter            *string                                   `pulumi:"filter"`
	PasswordProtected *string                                   `pulumi:"passwordProtected"`
}

// SshFilterProfileFileFilterEntryInput is an input type that accepts SshFilterProfileFileFilterEntryArgs and SshFilterProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterEntryInput` via:
//
//	SshFilterProfileFileFilterEntryArgs{...}
type SshFilterProfileFileFilterEntryInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterEntryOutput() SshFilterProfileFileFilterEntryOutput
	ToSshFilterProfileFileFilterEntryOutputWithContext(context.Context) SshFilterProfileFileFilterEntryOutput
}

type SshFilterProfileFileFilterEntryArgs struct {
	Action            pulumi.StringPtrInput                             `pulumi:"action"`
	Comment           pulumi.StringPtrInput                             `pulumi:"comment"`
	Direction         pulumi.StringPtrInput                             `pulumi:"direction"`
	FileTypes         SshFilterProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	Filter            pulumi.StringPtrInput                             `pulumi:"filter"`
	PasswordProtected pulumi.StringPtrInput                             `pulumi:"passwordProtected"`
}

func (SshFilterProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilterEntry)(nil)).Elem()
}

func (i SshFilterProfileFileFilterEntryArgs) ToSshFilterProfileFileFilterEntryOutput() SshFilterProfileFileFilterEntryOutput {
	return i.ToSshFilterProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterEntryArgs) ToSshFilterProfileFileFilterEntryOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterEntryOutput)
}

func (i SshFilterProfileFileFilterEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilterEntry] {
	return pulumix.Output[SshFilterProfileFileFilterEntry]{
		OutputState: i.ToSshFilterProfileFileFilterEntryOutputWithContext(ctx).OutputState,
	}
}

// SshFilterProfileFileFilterEntryArrayInput is an input type that accepts SshFilterProfileFileFilterEntryArray and SshFilterProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterEntryArrayInput` via:
//
//	SshFilterProfileFileFilterEntryArray{ SshFilterProfileFileFilterEntryArgs{...} }
type SshFilterProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterEntryArrayOutput() SshFilterProfileFileFilterEntryArrayOutput
	ToSshFilterProfileFileFilterEntryArrayOutputWithContext(context.Context) SshFilterProfileFileFilterEntryArrayOutput
}

type SshFilterProfileFileFilterEntryArray []SshFilterProfileFileFilterEntryInput

func (SshFilterProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileFileFilterEntry)(nil)).Elem()
}

func (i SshFilterProfileFileFilterEntryArray) ToSshFilterProfileFileFilterEntryArrayOutput() SshFilterProfileFileFilterEntryArrayOutput {
	return i.ToSshFilterProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterEntryArray) ToSshFilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterEntryArrayOutput)
}

func (i SshFilterProfileFileFilterEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileFileFilterEntry] {
	return pulumix.Output[[]SshFilterProfileFileFilterEntry]{
		OutputState: i.ToSshFilterProfileFileFilterEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SshFilterProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilterEntry)(nil)).Elem()
}

func (o SshFilterProfileFileFilterEntryOutput) ToSshFilterProfileFileFilterEntryOutput() SshFilterProfileFileFilterEntryOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryOutput) ToSshFilterProfileFileFilterEntryOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilterEntry] {
	return pulumix.Output[SshFilterProfileFileFilterEntry]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterEntryOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterEntryOutput) FileTypes() SshFilterProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) []SshFilterProfileFileFilterEntryFileType { return v.FileTypes }).(SshFilterProfileFileFilterEntryFileTypeArrayOutput)
}

func (o SshFilterProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileFileFilterEntryOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntry) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

type SshFilterProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileFileFilterEntry)(nil)).Elem()
}

func (o SshFilterProfileFileFilterEntryArrayOutput) ToSshFilterProfileFileFilterEntryArrayOutput() SshFilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryArrayOutput) ToSshFilterProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryArrayOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileFileFilterEntry] {
	return pulumix.Output[[]SshFilterProfileFileFilterEntry]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) SshFilterProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshFilterProfileFileFilterEntry {
		return vs[0].([]SshFilterProfileFileFilterEntry)[vs[1].(int)]
	}).(SshFilterProfileFileFilterEntryOutput)
}

type SshFilterProfileFileFilterEntryFileType struct {
	Name *string `pulumi:"name"`
}

// SshFilterProfileFileFilterEntryFileTypeInput is an input type that accepts SshFilterProfileFileFilterEntryFileTypeArgs and SshFilterProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterEntryFileTypeInput` via:
//
//	SshFilterProfileFileFilterEntryFileTypeArgs{...}
type SshFilterProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterEntryFileTypeOutput() SshFilterProfileFileFilterEntryFileTypeOutput
	ToSshFilterProfileFileFilterEntryFileTypeOutputWithContext(context.Context) SshFilterProfileFileFilterEntryFileTypeOutput
}

type SshFilterProfileFileFilterEntryFileTypeArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SshFilterProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i SshFilterProfileFileFilterEntryFileTypeArgs) ToSshFilterProfileFileFilterEntryFileTypeOutput() SshFilterProfileFileFilterEntryFileTypeOutput {
	return i.ToSshFilterProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterEntryFileTypeArgs) ToSshFilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterEntryFileTypeOutput)
}

func (i SshFilterProfileFileFilterEntryFileTypeArgs) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilterEntryFileType] {
	return pulumix.Output[SshFilterProfileFileFilterEntryFileType]{
		OutputState: i.ToSshFilterProfileFileFilterEntryFileTypeOutputWithContext(ctx).OutputState,
	}
}

// SshFilterProfileFileFilterEntryFileTypeArrayInput is an input type that accepts SshFilterProfileFileFilterEntryFileTypeArray and SshFilterProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `SshFilterProfileFileFilterEntryFileTypeArrayInput` via:
//
//	SshFilterProfileFileFilterEntryFileTypeArray{ SshFilterProfileFileFilterEntryFileTypeArgs{...} }
type SshFilterProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToSshFilterProfileFileFilterEntryFileTypeArrayOutput() SshFilterProfileFileFilterEntryFileTypeArrayOutput
	ToSshFilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) SshFilterProfileFileFilterEntryFileTypeArrayOutput
}

type SshFilterProfileFileFilterEntryFileTypeArray []SshFilterProfileFileFilterEntryFileTypeInput

func (SshFilterProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i SshFilterProfileFileFilterEntryFileTypeArray) ToSshFilterProfileFileFilterEntryFileTypeArrayOutput() SshFilterProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToSshFilterProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i SshFilterProfileFileFilterEntryFileTypeArray) ToSshFilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileFileFilterEntryFileTypeArrayOutput)
}

func (i SshFilterProfileFileFilterEntryFileTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileFileFilterEntryFileType] {
	return pulumix.Output[[]SshFilterProfileFileFilterEntryFileType]{
		OutputState: i.ToSshFilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type SshFilterProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o SshFilterProfileFileFilterEntryFileTypeOutput) ToSshFilterProfileFileFilterEntryFileTypeOutput() SshFilterProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryFileTypeOutput) ToSshFilterProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryFileTypeOutput) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileFileFilterEntryFileType] {
	return pulumix.Output[SshFilterProfileFileFilterEntryFileType]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SshFilterProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (SshFilterProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o SshFilterProfileFileFilterEntryFileTypeArrayOutput) ToSshFilterProfileFileFilterEntryFileTypeArrayOutput() SshFilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryFileTypeArrayOutput) ToSshFilterProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) SshFilterProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o SshFilterProfileFileFilterEntryFileTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileFileFilterEntryFileType] {
	return pulumix.Output[[]SshFilterProfileFileFilterEntryFileType]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) SshFilterProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshFilterProfileFileFilterEntryFileType {
		return vs[0].([]SshFilterProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(SshFilterProfileFileFilterEntryFileTypeOutput)
}

type SshFilterProfileShellCommand struct {
	Action   *string `pulumi:"action"`
	Alert    *string `pulumi:"alert"`
	Id       *int    `pulumi:"id"`
	Log      *string `pulumi:"log"`
	Pattern  *string `pulumi:"pattern"`
	Severity *string `pulumi:"severity"`
	Type     *string `pulumi:"type"`
}

// SshFilterProfileShellCommandInput is an input type that accepts SshFilterProfileShellCommandArgs and SshFilterProfileShellCommandOutput values.
// You can construct a concrete instance of `SshFilterProfileShellCommandInput` via:
//
//	SshFilterProfileShellCommandArgs{...}
type SshFilterProfileShellCommandInput interface {
	pulumi.Input

	ToSshFilterProfileShellCommandOutput() SshFilterProfileShellCommandOutput
	ToSshFilterProfileShellCommandOutputWithContext(context.Context) SshFilterProfileShellCommandOutput
}

type SshFilterProfileShellCommandArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Alert    pulumi.StringPtrInput `pulumi:"alert"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Log      pulumi.StringPtrInput `pulumi:"log"`
	Pattern  pulumi.StringPtrInput `pulumi:"pattern"`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	Type     pulumi.StringPtrInput `pulumi:"type"`
}

func (SshFilterProfileShellCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileShellCommand)(nil)).Elem()
}

func (i SshFilterProfileShellCommandArgs) ToSshFilterProfileShellCommandOutput() SshFilterProfileShellCommandOutput {
	return i.ToSshFilterProfileShellCommandOutputWithContext(context.Background())
}

func (i SshFilterProfileShellCommandArgs) ToSshFilterProfileShellCommandOutputWithContext(ctx context.Context) SshFilterProfileShellCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileShellCommandOutput)
}

func (i SshFilterProfileShellCommandArgs) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileShellCommand] {
	return pulumix.Output[SshFilterProfileShellCommand]{
		OutputState: i.ToSshFilterProfileShellCommandOutputWithContext(ctx).OutputState,
	}
}

// SshFilterProfileShellCommandArrayInput is an input type that accepts SshFilterProfileShellCommandArray and SshFilterProfileShellCommandArrayOutput values.
// You can construct a concrete instance of `SshFilterProfileShellCommandArrayInput` via:
//
//	SshFilterProfileShellCommandArray{ SshFilterProfileShellCommandArgs{...} }
type SshFilterProfileShellCommandArrayInput interface {
	pulumi.Input

	ToSshFilterProfileShellCommandArrayOutput() SshFilterProfileShellCommandArrayOutput
	ToSshFilterProfileShellCommandArrayOutputWithContext(context.Context) SshFilterProfileShellCommandArrayOutput
}

type SshFilterProfileShellCommandArray []SshFilterProfileShellCommandInput

func (SshFilterProfileShellCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileShellCommand)(nil)).Elem()
}

func (i SshFilterProfileShellCommandArray) ToSshFilterProfileShellCommandArrayOutput() SshFilterProfileShellCommandArrayOutput {
	return i.ToSshFilterProfileShellCommandArrayOutputWithContext(context.Background())
}

func (i SshFilterProfileShellCommandArray) ToSshFilterProfileShellCommandArrayOutputWithContext(ctx context.Context) SshFilterProfileShellCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshFilterProfileShellCommandArrayOutput)
}

func (i SshFilterProfileShellCommandArray) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileShellCommand] {
	return pulumix.Output[[]SshFilterProfileShellCommand]{
		OutputState: i.ToSshFilterProfileShellCommandArrayOutputWithContext(ctx).OutputState,
	}
}

type SshFilterProfileShellCommandOutput struct{ *pulumi.OutputState }

func (SshFilterProfileShellCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshFilterProfileShellCommand)(nil)).Elem()
}

func (o SshFilterProfileShellCommandOutput) ToSshFilterProfileShellCommandOutput() SshFilterProfileShellCommandOutput {
	return o
}

func (o SshFilterProfileShellCommandOutput) ToSshFilterProfileShellCommandOutputWithContext(ctx context.Context) SshFilterProfileShellCommandOutput {
	return o
}

func (o SshFilterProfileShellCommandOutput) ToOutput(ctx context.Context) pulumix.Output[SshFilterProfileShellCommand] {
	return pulumix.Output[SshFilterProfileShellCommand]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileShellCommandOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Log }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o SshFilterProfileShellCommandOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshFilterProfileShellCommand) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SshFilterProfileShellCommandArrayOutput struct{ *pulumi.OutputState }

func (SshFilterProfileShellCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshFilterProfileShellCommand)(nil)).Elem()
}

func (o SshFilterProfileShellCommandArrayOutput) ToSshFilterProfileShellCommandArrayOutput() SshFilterProfileShellCommandArrayOutput {
	return o
}

func (o SshFilterProfileShellCommandArrayOutput) ToSshFilterProfileShellCommandArrayOutputWithContext(ctx context.Context) SshFilterProfileShellCommandArrayOutput {
	return o
}

func (o SshFilterProfileShellCommandArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SshFilterProfileShellCommand] {
	return pulumix.Output[[]SshFilterProfileShellCommand]{
		OutputState: o.OutputState,
	}
}

func (o SshFilterProfileShellCommandArrayOutput) Index(i pulumi.IntInput) SshFilterProfileShellCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshFilterProfileShellCommand {
		return vs[0].([]SshFilterProfileShellCommand)[vs[1].(int)]
	}).(SshFilterProfileShellCommandOutput)
}

type SwitchControllerAclGroupIngress struct {
	Id *int `pulumi:"id"`
}

// SwitchControllerAclGroupIngressInput is an input type that accepts SwitchControllerAclGroupIngressArgs and SwitchControllerAclGroupIngressOutput values.
// You can construct a concrete instance of `SwitchControllerAclGroupIngressInput` via:
//
//	SwitchControllerAclGroupIngressArgs{...}
type SwitchControllerAclGroupIngressInput interface {
	pulumi.Input

	ToSwitchControllerAclGroupIngressOutput() SwitchControllerAclGroupIngressOutput
	ToSwitchControllerAclGroupIngressOutputWithContext(context.Context) SwitchControllerAclGroupIngressOutput
}

type SwitchControllerAclGroupIngressArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SwitchControllerAclGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclGroupIngress)(nil)).Elem()
}

func (i SwitchControllerAclGroupIngressArgs) ToSwitchControllerAclGroupIngressOutput() SwitchControllerAclGroupIngressOutput {
	return i.ToSwitchControllerAclGroupIngressOutputWithContext(context.Background())
}

func (i SwitchControllerAclGroupIngressArgs) ToSwitchControllerAclGroupIngressOutputWithContext(ctx context.Context) SwitchControllerAclGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclGroupIngressOutput)
}

func (i SwitchControllerAclGroupIngressArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclGroupIngress] {
	return pulumix.Output[SwitchControllerAclGroupIngress]{
		OutputState: i.ToSwitchControllerAclGroupIngressOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerAclGroupIngressArrayInput is an input type that accepts SwitchControllerAclGroupIngressArray and SwitchControllerAclGroupIngressArrayOutput values.
// You can construct a concrete instance of `SwitchControllerAclGroupIngressArrayInput` via:
//
//	SwitchControllerAclGroupIngressArray{ SwitchControllerAclGroupIngressArgs{...} }
type SwitchControllerAclGroupIngressArrayInput interface {
	pulumi.Input

	ToSwitchControllerAclGroupIngressArrayOutput() SwitchControllerAclGroupIngressArrayOutput
	ToSwitchControllerAclGroupIngressArrayOutputWithContext(context.Context) SwitchControllerAclGroupIngressArrayOutput
}

type SwitchControllerAclGroupIngressArray []SwitchControllerAclGroupIngressInput

func (SwitchControllerAclGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerAclGroupIngress)(nil)).Elem()
}

func (i SwitchControllerAclGroupIngressArray) ToSwitchControllerAclGroupIngressArrayOutput() SwitchControllerAclGroupIngressArrayOutput {
	return i.ToSwitchControllerAclGroupIngressArrayOutputWithContext(context.Background())
}

func (i SwitchControllerAclGroupIngressArray) ToSwitchControllerAclGroupIngressArrayOutputWithContext(ctx context.Context) SwitchControllerAclGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclGroupIngressArrayOutput)
}

func (i SwitchControllerAclGroupIngressArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerAclGroupIngress] {
	return pulumix.Output[[]SwitchControllerAclGroupIngress]{
		OutputState: i.ToSwitchControllerAclGroupIngressArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerAclGroupIngressOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclGroupIngress)(nil)).Elem()
}

func (o SwitchControllerAclGroupIngressOutput) ToSwitchControllerAclGroupIngressOutput() SwitchControllerAclGroupIngressOutput {
	return o
}

func (o SwitchControllerAclGroupIngressOutput) ToSwitchControllerAclGroupIngressOutputWithContext(ctx context.Context) SwitchControllerAclGroupIngressOutput {
	return o
}

func (o SwitchControllerAclGroupIngressOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclGroupIngress] {
	return pulumix.Output[SwitchControllerAclGroupIngress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclGroupIngressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclGroupIngress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SwitchControllerAclGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerAclGroupIngress)(nil)).Elem()
}

func (o SwitchControllerAclGroupIngressArrayOutput) ToSwitchControllerAclGroupIngressArrayOutput() SwitchControllerAclGroupIngressArrayOutput {
	return o
}

func (o SwitchControllerAclGroupIngressArrayOutput) ToSwitchControllerAclGroupIngressArrayOutputWithContext(ctx context.Context) SwitchControllerAclGroupIngressArrayOutput {
	return o
}

func (o SwitchControllerAclGroupIngressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerAclGroupIngress] {
	return pulumix.Output[[]SwitchControllerAclGroupIngress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclGroupIngressArrayOutput) Index(i pulumi.IntInput) SwitchControllerAclGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerAclGroupIngress {
		return vs[0].([]SwitchControllerAclGroupIngress)[vs[1].(int)]
	}).(SwitchControllerAclGroupIngressOutput)
}

type SwitchControllerAclIngressAction struct {
	Count *string `pulumi:"count"`
	Drop  *string `pulumi:"drop"`
}

// SwitchControllerAclIngressActionInput is an input type that accepts SwitchControllerAclIngressActionArgs and SwitchControllerAclIngressActionOutput values.
// You can construct a concrete instance of `SwitchControllerAclIngressActionInput` via:
//
//	SwitchControllerAclIngressActionArgs{...}
type SwitchControllerAclIngressActionInput interface {
	pulumi.Input

	ToSwitchControllerAclIngressActionOutput() SwitchControllerAclIngressActionOutput
	ToSwitchControllerAclIngressActionOutputWithContext(context.Context) SwitchControllerAclIngressActionOutput
}

type SwitchControllerAclIngressActionArgs struct {
	Count pulumi.StringPtrInput `pulumi:"count"`
	Drop  pulumi.StringPtrInput `pulumi:"drop"`
}

func (SwitchControllerAclIngressActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclIngressAction)(nil)).Elem()
}

func (i SwitchControllerAclIngressActionArgs) ToSwitchControllerAclIngressActionOutput() SwitchControllerAclIngressActionOutput {
	return i.ToSwitchControllerAclIngressActionOutputWithContext(context.Background())
}

func (i SwitchControllerAclIngressActionArgs) ToSwitchControllerAclIngressActionOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressActionOutput)
}

func (i SwitchControllerAclIngressActionArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclIngressAction] {
	return pulumix.Output[SwitchControllerAclIngressAction]{
		OutputState: i.ToSwitchControllerAclIngressActionOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerAclIngressActionArgs) ToSwitchControllerAclIngressActionPtrOutput() SwitchControllerAclIngressActionPtrOutput {
	return i.ToSwitchControllerAclIngressActionPtrOutputWithContext(context.Background())
}

func (i SwitchControllerAclIngressActionArgs) ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressActionOutput).ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx)
}

// SwitchControllerAclIngressActionPtrInput is an input type that accepts SwitchControllerAclIngressActionArgs, SwitchControllerAclIngressActionPtr and SwitchControllerAclIngressActionPtrOutput values.
// You can construct a concrete instance of `SwitchControllerAclIngressActionPtrInput` via:
//
//	        SwitchControllerAclIngressActionArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerAclIngressActionPtrInput interface {
	pulumi.Input

	ToSwitchControllerAclIngressActionPtrOutput() SwitchControllerAclIngressActionPtrOutput
	ToSwitchControllerAclIngressActionPtrOutputWithContext(context.Context) SwitchControllerAclIngressActionPtrOutput
}

type switchControllerAclIngressActionPtrType SwitchControllerAclIngressActionArgs

func SwitchControllerAclIngressActionPtr(v *SwitchControllerAclIngressActionArgs) SwitchControllerAclIngressActionPtrInput {
	return (*switchControllerAclIngressActionPtrType)(v)
}

func (*switchControllerAclIngressActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAclIngressAction)(nil)).Elem()
}

func (i *switchControllerAclIngressActionPtrType) ToSwitchControllerAclIngressActionPtrOutput() SwitchControllerAclIngressActionPtrOutput {
	return i.ToSwitchControllerAclIngressActionPtrOutputWithContext(context.Background())
}

func (i *switchControllerAclIngressActionPtrType) ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressActionPtrOutput)
}

func (i *switchControllerAclIngressActionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerAclIngressAction] {
	return pulumix.Output[*SwitchControllerAclIngressAction]{
		OutputState: i.ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerAclIngressActionOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclIngressActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclIngressAction)(nil)).Elem()
}

func (o SwitchControllerAclIngressActionOutput) ToSwitchControllerAclIngressActionOutput() SwitchControllerAclIngressActionOutput {
	return o
}

func (o SwitchControllerAclIngressActionOutput) ToSwitchControllerAclIngressActionOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionOutput {
	return o
}

func (o SwitchControllerAclIngressActionOutput) ToSwitchControllerAclIngressActionPtrOutput() SwitchControllerAclIngressActionPtrOutput {
	return o.ToSwitchControllerAclIngressActionPtrOutputWithContext(context.Background())
}

func (o SwitchControllerAclIngressActionOutput) ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerAclIngressAction) *SwitchControllerAclIngressAction {
		return &v
	}).(SwitchControllerAclIngressActionPtrOutput)
}

func (o SwitchControllerAclIngressActionOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclIngressAction] {
	return pulumix.Output[SwitchControllerAclIngressAction]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclIngressActionOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressAction) *string { return v.Count }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressActionOutput) Drop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressAction) *string { return v.Drop }).(pulumi.StringPtrOutput)
}

type SwitchControllerAclIngressActionPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclIngressActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAclIngressAction)(nil)).Elem()
}

func (o SwitchControllerAclIngressActionPtrOutput) ToSwitchControllerAclIngressActionPtrOutput() SwitchControllerAclIngressActionPtrOutput {
	return o
}

func (o SwitchControllerAclIngressActionPtrOutput) ToSwitchControllerAclIngressActionPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressActionPtrOutput {
	return o
}

func (o SwitchControllerAclIngressActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerAclIngressAction] {
	return pulumix.Output[*SwitchControllerAclIngressAction]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclIngressActionPtrOutput) Elem() SwitchControllerAclIngressActionOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressAction) SwitchControllerAclIngressAction {
		if v != nil {
			return *v
		}
		var ret SwitchControllerAclIngressAction
		return ret
	}).(SwitchControllerAclIngressActionOutput)
}

func (o SwitchControllerAclIngressActionPtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressAction) *string {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressActionPtrOutput) Drop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressAction) *string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerAclIngressClassifier struct {
	DstIpPrefix *string `pulumi:"dstIpPrefix"`
	DstMac      *string `pulumi:"dstMac"`
	SrcIpPrefix *string `pulumi:"srcIpPrefix"`
	SrcMac      *string `pulumi:"srcMac"`
	Vlan        *int    `pulumi:"vlan"`
}

// SwitchControllerAclIngressClassifierInput is an input type that accepts SwitchControllerAclIngressClassifierArgs and SwitchControllerAclIngressClassifierOutput values.
// You can construct a concrete instance of `SwitchControllerAclIngressClassifierInput` via:
//
//	SwitchControllerAclIngressClassifierArgs{...}
type SwitchControllerAclIngressClassifierInput interface {
	pulumi.Input

	ToSwitchControllerAclIngressClassifierOutput() SwitchControllerAclIngressClassifierOutput
	ToSwitchControllerAclIngressClassifierOutputWithContext(context.Context) SwitchControllerAclIngressClassifierOutput
}

type SwitchControllerAclIngressClassifierArgs struct {
	DstIpPrefix pulumi.StringPtrInput `pulumi:"dstIpPrefix"`
	DstMac      pulumi.StringPtrInput `pulumi:"dstMac"`
	SrcIpPrefix pulumi.StringPtrInput `pulumi:"srcIpPrefix"`
	SrcMac      pulumi.StringPtrInput `pulumi:"srcMac"`
	Vlan        pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SwitchControllerAclIngressClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclIngressClassifier)(nil)).Elem()
}

func (i SwitchControllerAclIngressClassifierArgs) ToSwitchControllerAclIngressClassifierOutput() SwitchControllerAclIngressClassifierOutput {
	return i.ToSwitchControllerAclIngressClassifierOutputWithContext(context.Background())
}

func (i SwitchControllerAclIngressClassifierArgs) ToSwitchControllerAclIngressClassifierOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressClassifierOutput)
}

func (i SwitchControllerAclIngressClassifierArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclIngressClassifier] {
	return pulumix.Output[SwitchControllerAclIngressClassifier]{
		OutputState: i.ToSwitchControllerAclIngressClassifierOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerAclIngressClassifierArgs) ToSwitchControllerAclIngressClassifierPtrOutput() SwitchControllerAclIngressClassifierPtrOutput {
	return i.ToSwitchControllerAclIngressClassifierPtrOutputWithContext(context.Background())
}

func (i SwitchControllerAclIngressClassifierArgs) ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressClassifierOutput).ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx)
}

// SwitchControllerAclIngressClassifierPtrInput is an input type that accepts SwitchControllerAclIngressClassifierArgs, SwitchControllerAclIngressClassifierPtr and SwitchControllerAclIngressClassifierPtrOutput values.
// You can construct a concrete instance of `SwitchControllerAclIngressClassifierPtrInput` via:
//
//	        SwitchControllerAclIngressClassifierArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerAclIngressClassifierPtrInput interface {
	pulumi.Input

	ToSwitchControllerAclIngressClassifierPtrOutput() SwitchControllerAclIngressClassifierPtrOutput
	ToSwitchControllerAclIngressClassifierPtrOutputWithContext(context.Context) SwitchControllerAclIngressClassifierPtrOutput
}

type switchControllerAclIngressClassifierPtrType SwitchControllerAclIngressClassifierArgs

func SwitchControllerAclIngressClassifierPtr(v *SwitchControllerAclIngressClassifierArgs) SwitchControllerAclIngressClassifierPtrInput {
	return (*switchControllerAclIngressClassifierPtrType)(v)
}

func (*switchControllerAclIngressClassifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAclIngressClassifier)(nil)).Elem()
}

func (i *switchControllerAclIngressClassifierPtrType) ToSwitchControllerAclIngressClassifierPtrOutput() SwitchControllerAclIngressClassifierPtrOutput {
	return i.ToSwitchControllerAclIngressClassifierPtrOutputWithContext(context.Background())
}

func (i *switchControllerAclIngressClassifierPtrType) ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAclIngressClassifierPtrOutput)
}

func (i *switchControllerAclIngressClassifierPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerAclIngressClassifier] {
	return pulumix.Output[*SwitchControllerAclIngressClassifier]{
		OutputState: i.ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerAclIngressClassifierOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclIngressClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAclIngressClassifier)(nil)).Elem()
}

func (o SwitchControllerAclIngressClassifierOutput) ToSwitchControllerAclIngressClassifierOutput() SwitchControllerAclIngressClassifierOutput {
	return o
}

func (o SwitchControllerAclIngressClassifierOutput) ToSwitchControllerAclIngressClassifierOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierOutput {
	return o
}

func (o SwitchControllerAclIngressClassifierOutput) ToSwitchControllerAclIngressClassifierPtrOutput() SwitchControllerAclIngressClassifierPtrOutput {
	return o.ToSwitchControllerAclIngressClassifierPtrOutputWithContext(context.Background())
}

func (o SwitchControllerAclIngressClassifierOutput) ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerAclIngressClassifier) *SwitchControllerAclIngressClassifier {
		return &v
	}).(SwitchControllerAclIngressClassifierPtrOutput)
}

func (o SwitchControllerAclIngressClassifierOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAclIngressClassifier] {
	return pulumix.Output[SwitchControllerAclIngressClassifier]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclIngressClassifierOutput) DstIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressClassifier) *string { return v.DstIpPrefix }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierOutput) DstMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressClassifier) *string { return v.DstMac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierOutput) SrcIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressClassifier) *string { return v.SrcIpPrefix }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierOutput) SrcMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressClassifier) *string { return v.SrcMac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerAclIngressClassifier) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SwitchControllerAclIngressClassifierPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerAclIngressClassifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerAclIngressClassifier)(nil)).Elem()
}

func (o SwitchControllerAclIngressClassifierPtrOutput) ToSwitchControllerAclIngressClassifierPtrOutput() SwitchControllerAclIngressClassifierPtrOutput {
	return o
}

func (o SwitchControllerAclIngressClassifierPtrOutput) ToSwitchControllerAclIngressClassifierPtrOutputWithContext(ctx context.Context) SwitchControllerAclIngressClassifierPtrOutput {
	return o
}

func (o SwitchControllerAclIngressClassifierPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerAclIngressClassifier] {
	return pulumix.Output[*SwitchControllerAclIngressClassifier]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAclIngressClassifierPtrOutput) Elem() SwitchControllerAclIngressClassifierOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) SwitchControllerAclIngressClassifier {
		if v != nil {
			return *v
		}
		var ret SwitchControllerAclIngressClassifier
		return ret
	}).(SwitchControllerAclIngressClassifierOutput)
}

func (o SwitchControllerAclIngressClassifierPtrOutput) DstIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) *string {
		if v == nil {
			return nil
		}
		return v.DstIpPrefix
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierPtrOutput) DstMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) *string {
		if v == nil {
			return nil
		}
		return v.DstMac
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierPtrOutput) SrcIpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) *string {
		if v == nil {
			return nil
		}
		return v.SrcIpPrefix
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierPtrOutput) SrcMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) *string {
		if v == nil {
			return nil
		}
		return v.SrcMac
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAclIngressClassifierPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerAclIngressClassifier) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SwitchControllerAutoConfigCustomSwitchBinding struct {
	Policy   *string `pulumi:"policy"`
	SwitchId *string `pulumi:"switchId"`
}

// SwitchControllerAutoConfigCustomSwitchBindingInput is an input type that accepts SwitchControllerAutoConfigCustomSwitchBindingArgs and SwitchControllerAutoConfigCustomSwitchBindingOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigCustomSwitchBindingInput` via:
//
//	SwitchControllerAutoConfigCustomSwitchBindingArgs{...}
type SwitchControllerAutoConfigCustomSwitchBindingInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigCustomSwitchBindingOutput() SwitchControllerAutoConfigCustomSwitchBindingOutput
	ToSwitchControllerAutoConfigCustomSwitchBindingOutputWithContext(context.Context) SwitchControllerAutoConfigCustomSwitchBindingOutput
}

type SwitchControllerAutoConfigCustomSwitchBindingArgs struct {
	Policy   pulumi.StringPtrInput `pulumi:"policy"`
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (SwitchControllerAutoConfigCustomSwitchBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAutoConfigCustomSwitchBinding)(nil)).Elem()
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArgs) ToSwitchControllerAutoConfigCustomSwitchBindingOutput() SwitchControllerAutoConfigCustomSwitchBindingOutput {
	return i.ToSwitchControllerAutoConfigCustomSwitchBindingOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArgs) ToSwitchControllerAutoConfigCustomSwitchBindingOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomSwitchBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigCustomSwitchBindingOutput)
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAutoConfigCustomSwitchBinding] {
	return pulumix.Output[SwitchControllerAutoConfigCustomSwitchBinding]{
		OutputState: i.ToSwitchControllerAutoConfigCustomSwitchBindingOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerAutoConfigCustomSwitchBindingArrayInput is an input type that accepts SwitchControllerAutoConfigCustomSwitchBindingArray and SwitchControllerAutoConfigCustomSwitchBindingArrayOutput values.
// You can construct a concrete instance of `SwitchControllerAutoConfigCustomSwitchBindingArrayInput` via:
//
//	SwitchControllerAutoConfigCustomSwitchBindingArray{ SwitchControllerAutoConfigCustomSwitchBindingArgs{...} }
type SwitchControllerAutoConfigCustomSwitchBindingArrayInput interface {
	pulumi.Input

	ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutput() SwitchControllerAutoConfigCustomSwitchBindingArrayOutput
	ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutputWithContext(context.Context) SwitchControllerAutoConfigCustomSwitchBindingArrayOutput
}

type SwitchControllerAutoConfigCustomSwitchBindingArray []SwitchControllerAutoConfigCustomSwitchBindingInput

func (SwitchControllerAutoConfigCustomSwitchBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerAutoConfigCustomSwitchBinding)(nil)).Elem()
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArray) ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutput() SwitchControllerAutoConfigCustomSwitchBindingArrayOutput {
	return i.ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutputWithContext(context.Background())
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArray) ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomSwitchBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerAutoConfigCustomSwitchBindingArrayOutput)
}

func (i SwitchControllerAutoConfigCustomSwitchBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerAutoConfigCustomSwitchBinding] {
	return pulumix.Output[[]SwitchControllerAutoConfigCustomSwitchBinding]{
		OutputState: i.ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerAutoConfigCustomSwitchBindingOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigCustomSwitchBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerAutoConfigCustomSwitchBinding)(nil)).Elem()
}

func (o SwitchControllerAutoConfigCustomSwitchBindingOutput) ToSwitchControllerAutoConfigCustomSwitchBindingOutput() SwitchControllerAutoConfigCustomSwitchBindingOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomSwitchBindingOutput) ToSwitchControllerAutoConfigCustomSwitchBindingOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomSwitchBindingOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomSwitchBindingOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerAutoConfigCustomSwitchBinding] {
	return pulumix.Output[SwitchControllerAutoConfigCustomSwitchBinding]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAutoConfigCustomSwitchBindingOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAutoConfigCustomSwitchBinding) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerAutoConfigCustomSwitchBindingOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerAutoConfigCustomSwitchBinding) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchControllerAutoConfigCustomSwitchBindingArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerAutoConfigCustomSwitchBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerAutoConfigCustomSwitchBinding)(nil)).Elem()
}

func (o SwitchControllerAutoConfigCustomSwitchBindingArrayOutput) ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutput() SwitchControllerAutoConfigCustomSwitchBindingArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomSwitchBindingArrayOutput) ToSwitchControllerAutoConfigCustomSwitchBindingArrayOutputWithContext(ctx context.Context) SwitchControllerAutoConfigCustomSwitchBindingArrayOutput {
	return o
}

func (o SwitchControllerAutoConfigCustomSwitchBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerAutoConfigCustomSwitchBinding] {
	return pulumix.Output[[]SwitchControllerAutoConfigCustomSwitchBinding]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerAutoConfigCustomSwitchBindingArrayOutput) Index(i pulumi.IntInput) SwitchControllerAutoConfigCustomSwitchBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerAutoConfigCustomSwitchBinding {
		return vs[0].([]SwitchControllerAutoConfigCustomSwitchBinding)[vs[1].(int)]
	}).(SwitchControllerAutoConfigCustomSwitchBindingOutput)
}

type SwitchControllerDynamicPortPolicyPolicy struct {
	BouncePortLink *string                                               `pulumi:"bouncePortLink"`
	Category       *string                                               `pulumi:"category"`
	Description    *string                                               `pulumi:"description"`
	Family         *string                                               `pulumi:"family"`
	Host           *string                                               `pulumi:"host"`
	HwVendor       *string                                               `pulumi:"hwVendor"`
	InterfaceTags  []SwitchControllerDynamicPortPolicyPolicyInterfaceTag `pulumi:"interfaceTags"`
	LldpProfile    *string                                               `pulumi:"lldpProfile"`
	Mac            *string                                               `pulumi:"mac"`
	N8021x         *string                                               `pulumi:"n8021x"`
	Name           *string                                               `pulumi:"name"`
	QosPolicy      *string                                               `pulumi:"qosPolicy"`
	Status         *string                                               `pulumi:"status"`
	Type           *string                                               `pulumi:"type"`
	VlanPolicy     *string                                               `pulumi:"vlanPolicy"`
}

// SwitchControllerDynamicPortPolicyPolicyInput is an input type that accepts SwitchControllerDynamicPortPolicyPolicyArgs and SwitchControllerDynamicPortPolicyPolicyOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyPolicyInput` via:
//
//	SwitchControllerDynamicPortPolicyPolicyArgs{...}
type SwitchControllerDynamicPortPolicyPolicyInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyPolicyOutput() SwitchControllerDynamicPortPolicyPolicyOutput
	ToSwitchControllerDynamicPortPolicyPolicyOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyPolicyOutput
}

type SwitchControllerDynamicPortPolicyPolicyArgs struct {
	BouncePortLink pulumi.StringPtrInput                                         `pulumi:"bouncePortLink"`
	Category       pulumi.StringPtrInput                                         `pulumi:"category"`
	Description    pulumi.StringPtrInput                                         `pulumi:"description"`
	Family         pulumi.StringPtrInput                                         `pulumi:"family"`
	Host           pulumi.StringPtrInput                                         `pulumi:"host"`
	HwVendor       pulumi.StringPtrInput                                         `pulumi:"hwVendor"`
	InterfaceTags  SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayInput `pulumi:"interfaceTags"`
	LldpProfile    pulumi.StringPtrInput                                         `pulumi:"lldpProfile"`
	Mac            pulumi.StringPtrInput                                         `pulumi:"mac"`
	N8021x         pulumi.StringPtrInput                                         `pulumi:"n8021x"`
	Name           pulumi.StringPtrInput                                         `pulumi:"name"`
	QosPolicy      pulumi.StringPtrInput                                         `pulumi:"qosPolicy"`
	Status         pulumi.StringPtrInput                                         `pulumi:"status"`
	Type           pulumi.StringPtrInput                                         `pulumi:"type"`
	VlanPolicy     pulumi.StringPtrInput                                         `pulumi:"vlanPolicy"`
}

func (SwitchControllerDynamicPortPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicy)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyPolicyArgs) ToSwitchControllerDynamicPortPolicyPolicyOutput() SwitchControllerDynamicPortPolicyPolicyOutput {
	return i.ToSwitchControllerDynamicPortPolicyPolicyOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyPolicyArgs) ToSwitchControllerDynamicPortPolicyPolicyOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyPolicyOutput)
}

func (i SwitchControllerDynamicPortPolicyPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerDynamicPortPolicyPolicy] {
	return pulumix.Output[SwitchControllerDynamicPortPolicyPolicy]{
		OutputState: i.ToSwitchControllerDynamicPortPolicyPolicyOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerDynamicPortPolicyPolicyArrayInput is an input type that accepts SwitchControllerDynamicPortPolicyPolicyArray and SwitchControllerDynamicPortPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyPolicyArrayInput` via:
//
//	SwitchControllerDynamicPortPolicyPolicyArray{ SwitchControllerDynamicPortPolicyPolicyArgs{...} }
type SwitchControllerDynamicPortPolicyPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyPolicyArrayOutput() SwitchControllerDynamicPortPolicyPolicyArrayOutput
	ToSwitchControllerDynamicPortPolicyPolicyArrayOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyPolicyArrayOutput
}

type SwitchControllerDynamicPortPolicyPolicyArray []SwitchControllerDynamicPortPolicyPolicyInput

func (SwitchControllerDynamicPortPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerDynamicPortPolicyPolicy)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyPolicyArray) ToSwitchControllerDynamicPortPolicyPolicyArrayOutput() SwitchControllerDynamicPortPolicyPolicyArrayOutput {
	return i.ToSwitchControllerDynamicPortPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyPolicyArray) ToSwitchControllerDynamicPortPolicyPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyPolicyArrayOutput)
}

func (i SwitchControllerDynamicPortPolicyPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicy] {
	return pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicy]{
		OutputState: i.ToSwitchControllerDynamicPortPolicyPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerDynamicPortPolicyPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicy)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) ToSwitchControllerDynamicPortPolicyPolicyOutput() SwitchControllerDynamicPortPolicyPolicyOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) ToSwitchControllerDynamicPortPolicyPolicyOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerDynamicPortPolicyPolicy] {
	return pulumix.Output[SwitchControllerDynamicPortPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) BouncePortLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.BouncePortLink }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Family }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) HwVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.HwVendor }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) InterfaceTags() SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) []SwitchControllerDynamicPortPolicyPolicyInterfaceTag {
		return v.InterfaceTags
	}).(SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) LldpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.LldpProfile }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) N8021x() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.N8021x }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) QosPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.QosPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerDynamicPortPolicyPolicyOutput) VlanPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicy) *string { return v.VlanPolicy }).(pulumi.StringPtrOutput)
}

type SwitchControllerDynamicPortPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerDynamicPortPolicyPolicy)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyPolicyArrayOutput) ToSwitchControllerDynamicPortPolicyPolicyArrayOutput() SwitchControllerDynamicPortPolicyPolicyArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyArrayOutput) ToSwitchControllerDynamicPortPolicyPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicy] {
	return pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerDynamicPortPolicyPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerDynamicPortPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerDynamicPortPolicyPolicy {
		return vs[0].([]SwitchControllerDynamicPortPolicyPolicy)[vs[1].(int)]
	}).(SwitchControllerDynamicPortPolicyPolicyOutput)
}

type SwitchControllerDynamicPortPolicyPolicyInterfaceTag struct {
	TagName *string `pulumi:"tagName"`
}

// SwitchControllerDynamicPortPolicyPolicyInterfaceTagInput is an input type that accepts SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs and SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyPolicyInterfaceTagInput` via:
//
//	SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs{...}
type SwitchControllerDynamicPortPolicyPolicyInterfaceTagInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput
	ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput
}

type SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs struct {
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyInterfaceTag)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput {
	return i.ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput)
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerDynamicPortPolicyPolicyInterfaceTag] {
	return pulumix.Output[SwitchControllerDynamicPortPolicyPolicyInterfaceTag]{
		OutputState: i.ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayInput is an input type that accepts SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray and SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput values.
// You can construct a concrete instance of `SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayInput` via:
//
//	SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray{ SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs{...} }
type SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayInput interface {
	pulumi.Input

	ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput
	ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutputWithContext(context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput
}

type SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray []SwitchControllerDynamicPortPolicyPolicyInterfaceTagInput

func (SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag)(nil)).Elem()
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput {
	return i.ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutputWithContext(context.Background())
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput)
}

func (i SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag] {
	return pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag]{
		OutputState: i.ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyInterfaceTag)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerDynamicPortPolicyPolicyInterfaceTag] {
	return pulumix.Output[SwitchControllerDynamicPortPolicyPolicyInterfaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerDynamicPortPolicyPolicyInterfaceTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag)(nil)).Elem()
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput() SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput) ToSwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput {
	return o
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag] {
	return pulumix.Output[[]SwitchControllerDynamicPortPolicyPolicyInterfaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput) Index(i pulumi.IntInput) SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerDynamicPortPolicyPolicyInterfaceTag {
		return vs[0].([]SwitchControllerDynamicPortPolicyPolicyInterfaceTag)[vs[1].(int)]
	}).(SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput)
}

type SwitchControllerFlowTrackingAggregate struct {
	Id *int    `pulumi:"id"`
	Ip *string `pulumi:"ip"`
}

// SwitchControllerFlowTrackingAggregateInput is an input type that accepts SwitchControllerFlowTrackingAggregateArgs and SwitchControllerFlowTrackingAggregateOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingAggregateInput` via:
//
//	SwitchControllerFlowTrackingAggregateArgs{...}
type SwitchControllerFlowTrackingAggregateInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingAggregateOutput() SwitchControllerFlowTrackingAggregateOutput
	ToSwitchControllerFlowTrackingAggregateOutputWithContext(context.Context) SwitchControllerFlowTrackingAggregateOutput
}

type SwitchControllerFlowTrackingAggregateArgs struct {
	Id pulumi.IntPtrInput    `pulumi:"id"`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchControllerFlowTrackingAggregateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFlowTrackingAggregate)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingAggregateArgs) ToSwitchControllerFlowTrackingAggregateOutput() SwitchControllerFlowTrackingAggregateOutput {
	return i.ToSwitchControllerFlowTrackingAggregateOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingAggregateArgs) ToSwitchControllerFlowTrackingAggregateOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingAggregateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingAggregateOutput)
}

func (i SwitchControllerFlowTrackingAggregateArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFlowTrackingAggregate] {
	return pulumix.Output[SwitchControllerFlowTrackingAggregate]{
		OutputState: i.ToSwitchControllerFlowTrackingAggregateOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerFlowTrackingAggregateArrayInput is an input type that accepts SwitchControllerFlowTrackingAggregateArray and SwitchControllerFlowTrackingAggregateArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingAggregateArrayInput` via:
//
//	SwitchControllerFlowTrackingAggregateArray{ SwitchControllerFlowTrackingAggregateArgs{...} }
type SwitchControllerFlowTrackingAggregateArrayInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingAggregateArrayOutput() SwitchControllerFlowTrackingAggregateArrayOutput
	ToSwitchControllerFlowTrackingAggregateArrayOutputWithContext(context.Context) SwitchControllerFlowTrackingAggregateArrayOutput
}

type SwitchControllerFlowTrackingAggregateArray []SwitchControllerFlowTrackingAggregateInput

func (SwitchControllerFlowTrackingAggregateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFlowTrackingAggregate)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingAggregateArray) ToSwitchControllerFlowTrackingAggregateArrayOutput() SwitchControllerFlowTrackingAggregateArrayOutput {
	return i.ToSwitchControllerFlowTrackingAggregateArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingAggregateArray) ToSwitchControllerFlowTrackingAggregateArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingAggregateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingAggregateArrayOutput)
}

func (i SwitchControllerFlowTrackingAggregateArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFlowTrackingAggregate] {
	return pulumix.Output[[]SwitchControllerFlowTrackingAggregate]{
		OutputState: i.ToSwitchControllerFlowTrackingAggregateArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerFlowTrackingAggregateOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingAggregateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFlowTrackingAggregate)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingAggregateOutput) ToSwitchControllerFlowTrackingAggregateOutput() SwitchControllerFlowTrackingAggregateOutput {
	return o
}

func (o SwitchControllerFlowTrackingAggregateOutput) ToSwitchControllerFlowTrackingAggregateOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingAggregateOutput {
	return o
}

func (o SwitchControllerFlowTrackingAggregateOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFlowTrackingAggregate] {
	return pulumix.Output[SwitchControllerFlowTrackingAggregate]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFlowTrackingAggregateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingAggregate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerFlowTrackingAggregateOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingAggregate) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchControllerFlowTrackingAggregateArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingAggregateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFlowTrackingAggregate)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingAggregateArrayOutput) ToSwitchControllerFlowTrackingAggregateArrayOutput() SwitchControllerFlowTrackingAggregateArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingAggregateArrayOutput) ToSwitchControllerFlowTrackingAggregateArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingAggregateArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingAggregateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFlowTrackingAggregate] {
	return pulumix.Output[[]SwitchControllerFlowTrackingAggregate]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFlowTrackingAggregateArrayOutput) Index(i pulumi.IntInput) SwitchControllerFlowTrackingAggregateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerFlowTrackingAggregate {
		return vs[0].([]SwitchControllerFlowTrackingAggregate)[vs[1].(int)]
	}).(SwitchControllerFlowTrackingAggregateOutput)
}

type SwitchControllerFlowTrackingCollector struct {
	Ip        *string `pulumi:"ip"`
	Name      *string `pulumi:"name"`
	Port      *int    `pulumi:"port"`
	Transport *string `pulumi:"transport"`
}

// SwitchControllerFlowTrackingCollectorInput is an input type that accepts SwitchControllerFlowTrackingCollectorArgs and SwitchControllerFlowTrackingCollectorOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingCollectorInput` via:
//
//	SwitchControllerFlowTrackingCollectorArgs{...}
type SwitchControllerFlowTrackingCollectorInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingCollectorOutput() SwitchControllerFlowTrackingCollectorOutput
	ToSwitchControllerFlowTrackingCollectorOutputWithContext(context.Context) SwitchControllerFlowTrackingCollectorOutput
}

type SwitchControllerFlowTrackingCollectorArgs struct {
	Ip        pulumi.StringPtrInput `pulumi:"ip"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	Transport pulumi.StringPtrInput `pulumi:"transport"`
}

func (SwitchControllerFlowTrackingCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFlowTrackingCollector)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingCollectorArgs) ToSwitchControllerFlowTrackingCollectorOutput() SwitchControllerFlowTrackingCollectorOutput {
	return i.ToSwitchControllerFlowTrackingCollectorOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingCollectorArgs) ToSwitchControllerFlowTrackingCollectorOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingCollectorOutput)
}

func (i SwitchControllerFlowTrackingCollectorArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFlowTrackingCollector] {
	return pulumix.Output[SwitchControllerFlowTrackingCollector]{
		OutputState: i.ToSwitchControllerFlowTrackingCollectorOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerFlowTrackingCollectorArrayInput is an input type that accepts SwitchControllerFlowTrackingCollectorArray and SwitchControllerFlowTrackingCollectorArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFlowTrackingCollectorArrayInput` via:
//
//	SwitchControllerFlowTrackingCollectorArray{ SwitchControllerFlowTrackingCollectorArgs{...} }
type SwitchControllerFlowTrackingCollectorArrayInput interface {
	pulumi.Input

	ToSwitchControllerFlowTrackingCollectorArrayOutput() SwitchControllerFlowTrackingCollectorArrayOutput
	ToSwitchControllerFlowTrackingCollectorArrayOutputWithContext(context.Context) SwitchControllerFlowTrackingCollectorArrayOutput
}

type SwitchControllerFlowTrackingCollectorArray []SwitchControllerFlowTrackingCollectorInput

func (SwitchControllerFlowTrackingCollectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFlowTrackingCollector)(nil)).Elem()
}

func (i SwitchControllerFlowTrackingCollectorArray) ToSwitchControllerFlowTrackingCollectorArrayOutput() SwitchControllerFlowTrackingCollectorArrayOutput {
	return i.ToSwitchControllerFlowTrackingCollectorArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFlowTrackingCollectorArray) ToSwitchControllerFlowTrackingCollectorArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingCollectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFlowTrackingCollectorArrayOutput)
}

func (i SwitchControllerFlowTrackingCollectorArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFlowTrackingCollector] {
	return pulumix.Output[[]SwitchControllerFlowTrackingCollector]{
		OutputState: i.ToSwitchControllerFlowTrackingCollectorArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerFlowTrackingCollectorOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFlowTrackingCollector)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingCollectorOutput) ToSwitchControllerFlowTrackingCollectorOutput() SwitchControllerFlowTrackingCollectorOutput {
	return o
}

func (o SwitchControllerFlowTrackingCollectorOutput) ToSwitchControllerFlowTrackingCollectorOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingCollectorOutput {
	return o
}

func (o SwitchControllerFlowTrackingCollectorOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFlowTrackingCollector] {
	return pulumix.Output[SwitchControllerFlowTrackingCollector]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFlowTrackingCollectorOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingCollector) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFlowTrackingCollectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingCollector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFlowTrackingCollectorOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingCollector) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerFlowTrackingCollectorOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFlowTrackingCollector) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type SwitchControllerFlowTrackingCollectorArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFlowTrackingCollectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFlowTrackingCollector)(nil)).Elem()
}

func (o SwitchControllerFlowTrackingCollectorArrayOutput) ToSwitchControllerFlowTrackingCollectorArrayOutput() SwitchControllerFlowTrackingCollectorArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingCollectorArrayOutput) ToSwitchControllerFlowTrackingCollectorArrayOutputWithContext(ctx context.Context) SwitchControllerFlowTrackingCollectorArrayOutput {
	return o
}

func (o SwitchControllerFlowTrackingCollectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFlowTrackingCollector] {
	return pulumix.Output[[]SwitchControllerFlowTrackingCollector]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFlowTrackingCollectorArrayOutput) Index(i pulumi.IntInput) SwitchControllerFlowTrackingCollectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerFlowTrackingCollector {
		return vs[0].([]SwitchControllerFlowTrackingCollector)[vs[1].(int)]
	}).(SwitchControllerFlowTrackingCollectorOutput)
}

type SwitchControllerFortilinkSettingsNacPorts struct {
	BounceNacPort   *string                                                   `pulumi:"bounceNacPort"`
	LanSegment      *string                                                   `pulumi:"lanSegment"`
	MemberChange    *int                                                      `pulumi:"memberChange"`
	NacLanInterface *string                                                   `pulumi:"nacLanInterface"`
	NacSegmentVlans []SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan `pulumi:"nacSegmentVlans"`
	OnboardingVlan  *string                                                   `pulumi:"onboardingVlan"`
	ParentKey       *string                                                   `pulumi:"parentKey"`
}

// SwitchControllerFortilinkSettingsNacPortsInput is an input type that accepts SwitchControllerFortilinkSettingsNacPortsArgs and SwitchControllerFortilinkSettingsNacPortsOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsNacPortsInput` via:
//
//	SwitchControllerFortilinkSettingsNacPortsArgs{...}
type SwitchControllerFortilinkSettingsNacPortsInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsNacPortsOutput() SwitchControllerFortilinkSettingsNacPortsOutput
	ToSwitchControllerFortilinkSettingsNacPortsOutputWithContext(context.Context) SwitchControllerFortilinkSettingsNacPortsOutput
}

type SwitchControllerFortilinkSettingsNacPortsArgs struct {
	BounceNacPort   pulumi.StringPtrInput                                             `pulumi:"bounceNacPort"`
	LanSegment      pulumi.StringPtrInput                                             `pulumi:"lanSegment"`
	MemberChange    pulumi.IntPtrInput                                                `pulumi:"memberChange"`
	NacLanInterface pulumi.StringPtrInput                                             `pulumi:"nacLanInterface"`
	NacSegmentVlans SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayInput `pulumi:"nacSegmentVlans"`
	OnboardingVlan  pulumi.StringPtrInput                                             `pulumi:"onboardingVlan"`
	ParentKey       pulumi.StringPtrInput                                             `pulumi:"parentKey"`
}

func (SwitchControllerFortilinkSettingsNacPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPorts)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsNacPortsArgs) ToSwitchControllerFortilinkSettingsNacPortsOutput() SwitchControllerFortilinkSettingsNacPortsOutput {
	return i.ToSwitchControllerFortilinkSettingsNacPortsOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsNacPortsArgs) ToSwitchControllerFortilinkSettingsNacPortsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsNacPortsOutput)
}

func (i SwitchControllerFortilinkSettingsNacPortsArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFortilinkSettingsNacPorts] {
	return pulumix.Output[SwitchControllerFortilinkSettingsNacPorts]{
		OutputState: i.ToSwitchControllerFortilinkSettingsNacPortsOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerFortilinkSettingsNacPortsArgs) ToSwitchControllerFortilinkSettingsNacPortsPtrOutput() SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return i.ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsNacPortsArgs) ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsNacPortsOutput).ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx)
}

// SwitchControllerFortilinkSettingsNacPortsPtrInput is an input type that accepts SwitchControllerFortilinkSettingsNacPortsArgs, SwitchControllerFortilinkSettingsNacPortsPtr and SwitchControllerFortilinkSettingsNacPortsPtrOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsNacPortsPtrInput` via:
//
//	        SwitchControllerFortilinkSettingsNacPortsArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerFortilinkSettingsNacPortsPtrInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsNacPortsPtrOutput() SwitchControllerFortilinkSettingsNacPortsPtrOutput
	ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(context.Context) SwitchControllerFortilinkSettingsNacPortsPtrOutput
}

type switchControllerFortilinkSettingsNacPortsPtrType SwitchControllerFortilinkSettingsNacPortsArgs

func SwitchControllerFortilinkSettingsNacPortsPtr(v *SwitchControllerFortilinkSettingsNacPortsArgs) SwitchControllerFortilinkSettingsNacPortsPtrInput {
	return (*switchControllerFortilinkSettingsNacPortsPtrType)(v)
}

func (*switchControllerFortilinkSettingsNacPortsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettingsNacPorts)(nil)).Elem()
}

func (i *switchControllerFortilinkSettingsNacPortsPtrType) ToSwitchControllerFortilinkSettingsNacPortsPtrOutput() SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return i.ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(context.Background())
}

func (i *switchControllerFortilinkSettingsNacPortsPtrType) ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsNacPortsPtrOutput)
}

func (i *switchControllerFortilinkSettingsNacPortsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerFortilinkSettingsNacPorts] {
	return pulumix.Output[*SwitchControllerFortilinkSettingsNacPorts]{
		OutputState: i.ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerFortilinkSettingsNacPortsOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsNacPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPorts)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ToSwitchControllerFortilinkSettingsNacPortsOutput() SwitchControllerFortilinkSettingsNacPortsOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ToSwitchControllerFortilinkSettingsNacPortsOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ToSwitchControllerFortilinkSettingsNacPortsPtrOutput() SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return o.ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(context.Background())
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerFortilinkSettingsNacPorts) *SwitchControllerFortilinkSettingsNacPorts {
		return &v
	}).(SwitchControllerFortilinkSettingsNacPortsPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFortilinkSettingsNacPorts] {
	return pulumix.Output[SwitchControllerFortilinkSettingsNacPorts]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) BounceNacPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *string { return v.BounceNacPort }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) LanSegment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *string { return v.LanSegment }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) MemberChange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *int { return v.MemberChange }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) NacLanInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *string { return v.NacLanInterface }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) NacSegmentVlans() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) []SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan {
		return v.NacSegmentVlans
	}).(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) OnboardingVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *string { return v.OnboardingVlan }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPorts) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchControllerFortilinkSettingsNacPortsPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsNacPortsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerFortilinkSettingsNacPorts)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) ToSwitchControllerFortilinkSettingsNacPortsPtrOutput() SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) ToSwitchControllerFortilinkSettingsNacPortsPtrOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsPtrOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerFortilinkSettingsNacPorts] {
	return pulumix.Output[*SwitchControllerFortilinkSettingsNacPorts]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) Elem() SwitchControllerFortilinkSettingsNacPortsOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) SwitchControllerFortilinkSettingsNacPorts {
		if v != nil {
			return *v
		}
		var ret SwitchControllerFortilinkSettingsNacPorts
		return ret
	}).(SwitchControllerFortilinkSettingsNacPortsOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) BounceNacPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.BounceNacPort
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) LanSegment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.LanSegment
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) MemberChange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *int {
		if v == nil {
			return nil
		}
		return v.MemberChange
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) NacLanInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.NacLanInterface
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) NacSegmentVlans() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) []SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan {
		if v == nil {
			return nil
		}
		return v.NacSegmentVlans
	}).(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) OnboardingVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.OnboardingVlan
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerFortilinkSettingsNacPortsPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerFortilinkSettingsNacPorts) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanInput is an input type that accepts SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs and SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanInput` via:
//
//	SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs{...}
type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput
	ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutputWithContext(context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput
}

type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput {
	return i.ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput)
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan] {
	return pulumix.Output[SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan]{
		OutputState: i.ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayInput is an input type that accepts SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray and SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayInput` via:
//
//	SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray{ SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs{...} }
type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput
	ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutputWithContext(context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput
}

type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray []SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanInput

func (SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return i.ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput)
}

func (i SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan] {
	return pulumix.Output[[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan]{
		OutputState: i.ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan] {
	return pulumix.Output[SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan)(nil)).Elem()
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput() SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput) ToSwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutputWithContext(ctx context.Context) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput {
	return o
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan] {
	return pulumix.Output[[]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan {
		return vs[0].([]SwitchControllerFortilinkSettingsNacPortsNacSegmentVlan)[vs[1].(int)]
	}).(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput)
}

type SwitchControllerGlobalCustomCommand struct {
	CommandEntry *string `pulumi:"commandEntry"`
	CommandName  *string `pulumi:"commandName"`
}

// SwitchControllerGlobalCustomCommandInput is an input type that accepts SwitchControllerGlobalCustomCommandArgs and SwitchControllerGlobalCustomCommandOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalCustomCommandInput` via:
//
//	SwitchControllerGlobalCustomCommandArgs{...}
type SwitchControllerGlobalCustomCommandInput interface {
	pulumi.Input

	ToSwitchControllerGlobalCustomCommandOutput() SwitchControllerGlobalCustomCommandOutput
	ToSwitchControllerGlobalCustomCommandOutputWithContext(context.Context) SwitchControllerGlobalCustomCommandOutput
}

type SwitchControllerGlobalCustomCommandArgs struct {
	CommandEntry pulumi.StringPtrInput `pulumi:"commandEntry"`
	CommandName  pulumi.StringPtrInput `pulumi:"commandName"`
}

func (SwitchControllerGlobalCustomCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerGlobalCustomCommand)(nil)).Elem()
}

func (i SwitchControllerGlobalCustomCommandArgs) ToSwitchControllerGlobalCustomCommandOutput() SwitchControllerGlobalCustomCommandOutput {
	return i.ToSwitchControllerGlobalCustomCommandOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalCustomCommandArgs) ToSwitchControllerGlobalCustomCommandOutputWithContext(ctx context.Context) SwitchControllerGlobalCustomCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalCustomCommandOutput)
}

func (i SwitchControllerGlobalCustomCommandArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerGlobalCustomCommand] {
	return pulumix.Output[SwitchControllerGlobalCustomCommand]{
		OutputState: i.ToSwitchControllerGlobalCustomCommandOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerGlobalCustomCommandArrayInput is an input type that accepts SwitchControllerGlobalCustomCommandArray and SwitchControllerGlobalCustomCommandArrayOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalCustomCommandArrayInput` via:
//
//	SwitchControllerGlobalCustomCommandArray{ SwitchControllerGlobalCustomCommandArgs{...} }
type SwitchControllerGlobalCustomCommandArrayInput interface {
	pulumi.Input

	ToSwitchControllerGlobalCustomCommandArrayOutput() SwitchControllerGlobalCustomCommandArrayOutput
	ToSwitchControllerGlobalCustomCommandArrayOutputWithContext(context.Context) SwitchControllerGlobalCustomCommandArrayOutput
}

type SwitchControllerGlobalCustomCommandArray []SwitchControllerGlobalCustomCommandInput

func (SwitchControllerGlobalCustomCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerGlobalCustomCommand)(nil)).Elem()
}

func (i SwitchControllerGlobalCustomCommandArray) ToSwitchControllerGlobalCustomCommandArrayOutput() SwitchControllerGlobalCustomCommandArrayOutput {
	return i.ToSwitchControllerGlobalCustomCommandArrayOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalCustomCommandArray) ToSwitchControllerGlobalCustomCommandArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalCustomCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalCustomCommandArrayOutput)
}

func (i SwitchControllerGlobalCustomCommandArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerGlobalCustomCommand] {
	return pulumix.Output[[]SwitchControllerGlobalCustomCommand]{
		OutputState: i.ToSwitchControllerGlobalCustomCommandArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerGlobalCustomCommandOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalCustomCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerGlobalCustomCommand)(nil)).Elem()
}

func (o SwitchControllerGlobalCustomCommandOutput) ToSwitchControllerGlobalCustomCommandOutput() SwitchControllerGlobalCustomCommandOutput {
	return o
}

func (o SwitchControllerGlobalCustomCommandOutput) ToSwitchControllerGlobalCustomCommandOutputWithContext(ctx context.Context) SwitchControllerGlobalCustomCommandOutput {
	return o
}

func (o SwitchControllerGlobalCustomCommandOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerGlobalCustomCommand] {
	return pulumix.Output[SwitchControllerGlobalCustomCommand]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalCustomCommandOutput) CommandEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerGlobalCustomCommand) *string { return v.CommandEntry }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerGlobalCustomCommandOutput) CommandName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerGlobalCustomCommand) *string { return v.CommandName }).(pulumi.StringPtrOutput)
}

type SwitchControllerGlobalCustomCommandArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalCustomCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerGlobalCustomCommand)(nil)).Elem()
}

func (o SwitchControllerGlobalCustomCommandArrayOutput) ToSwitchControllerGlobalCustomCommandArrayOutput() SwitchControllerGlobalCustomCommandArrayOutput {
	return o
}

func (o SwitchControllerGlobalCustomCommandArrayOutput) ToSwitchControllerGlobalCustomCommandArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalCustomCommandArrayOutput {
	return o
}

func (o SwitchControllerGlobalCustomCommandArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerGlobalCustomCommand] {
	return pulumix.Output[[]SwitchControllerGlobalCustomCommand]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalCustomCommandArrayOutput) Index(i pulumi.IntInput) SwitchControllerGlobalCustomCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerGlobalCustomCommand {
		return vs[0].([]SwitchControllerGlobalCustomCommand)[vs[1].(int)]
	}).(SwitchControllerGlobalCustomCommandOutput)
}

type SwitchControllerGlobalDisableDiscovery struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerGlobalDisableDiscoveryInput is an input type that accepts SwitchControllerGlobalDisableDiscoveryArgs and SwitchControllerGlobalDisableDiscoveryOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalDisableDiscoveryInput` via:
//
//	SwitchControllerGlobalDisableDiscoveryArgs{...}
type SwitchControllerGlobalDisableDiscoveryInput interface {
	pulumi.Input

	ToSwitchControllerGlobalDisableDiscoveryOutput() SwitchControllerGlobalDisableDiscoveryOutput
	ToSwitchControllerGlobalDisableDiscoveryOutputWithContext(context.Context) SwitchControllerGlobalDisableDiscoveryOutput
}

type SwitchControllerGlobalDisableDiscoveryArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerGlobalDisableDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerGlobalDisableDiscovery)(nil)).Elem()
}

func (i SwitchControllerGlobalDisableDiscoveryArgs) ToSwitchControllerGlobalDisableDiscoveryOutput() SwitchControllerGlobalDisableDiscoveryOutput {
	return i.ToSwitchControllerGlobalDisableDiscoveryOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalDisableDiscoveryArgs) ToSwitchControllerGlobalDisableDiscoveryOutputWithContext(ctx context.Context) SwitchControllerGlobalDisableDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalDisableDiscoveryOutput)
}

func (i SwitchControllerGlobalDisableDiscoveryArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerGlobalDisableDiscovery] {
	return pulumix.Output[SwitchControllerGlobalDisableDiscovery]{
		OutputState: i.ToSwitchControllerGlobalDisableDiscoveryOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerGlobalDisableDiscoveryArrayInput is an input type that accepts SwitchControllerGlobalDisableDiscoveryArray and SwitchControllerGlobalDisableDiscoveryArrayOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalDisableDiscoveryArrayInput` via:
//
//	SwitchControllerGlobalDisableDiscoveryArray{ SwitchControllerGlobalDisableDiscoveryArgs{...} }
type SwitchControllerGlobalDisableDiscoveryArrayInput interface {
	pulumi.Input

	ToSwitchControllerGlobalDisableDiscoveryArrayOutput() SwitchControllerGlobalDisableDiscoveryArrayOutput
	ToSwitchControllerGlobalDisableDiscoveryArrayOutputWithContext(context.Context) SwitchControllerGlobalDisableDiscoveryArrayOutput
}

type SwitchControllerGlobalDisableDiscoveryArray []SwitchControllerGlobalDisableDiscoveryInput

func (SwitchControllerGlobalDisableDiscoveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerGlobalDisableDiscovery)(nil)).Elem()
}

func (i SwitchControllerGlobalDisableDiscoveryArray) ToSwitchControllerGlobalDisableDiscoveryArrayOutput() SwitchControllerGlobalDisableDiscoveryArrayOutput {
	return i.ToSwitchControllerGlobalDisableDiscoveryArrayOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalDisableDiscoveryArray) ToSwitchControllerGlobalDisableDiscoveryArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalDisableDiscoveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalDisableDiscoveryArrayOutput)
}

func (i SwitchControllerGlobalDisableDiscoveryArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerGlobalDisableDiscovery] {
	return pulumix.Output[[]SwitchControllerGlobalDisableDiscovery]{
		OutputState: i.ToSwitchControllerGlobalDisableDiscoveryArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerGlobalDisableDiscoveryOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalDisableDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerGlobalDisableDiscovery)(nil)).Elem()
}

func (o SwitchControllerGlobalDisableDiscoveryOutput) ToSwitchControllerGlobalDisableDiscoveryOutput() SwitchControllerGlobalDisableDiscoveryOutput {
	return o
}

func (o SwitchControllerGlobalDisableDiscoveryOutput) ToSwitchControllerGlobalDisableDiscoveryOutputWithContext(ctx context.Context) SwitchControllerGlobalDisableDiscoveryOutput {
	return o
}

func (o SwitchControllerGlobalDisableDiscoveryOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerGlobalDisableDiscovery] {
	return pulumix.Output[SwitchControllerGlobalDisableDiscovery]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalDisableDiscoveryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerGlobalDisableDiscovery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerGlobalDisableDiscoveryArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalDisableDiscoveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerGlobalDisableDiscovery)(nil)).Elem()
}

func (o SwitchControllerGlobalDisableDiscoveryArrayOutput) ToSwitchControllerGlobalDisableDiscoveryArrayOutput() SwitchControllerGlobalDisableDiscoveryArrayOutput {
	return o
}

func (o SwitchControllerGlobalDisableDiscoveryArrayOutput) ToSwitchControllerGlobalDisableDiscoveryArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalDisableDiscoveryArrayOutput {
	return o
}

func (o SwitchControllerGlobalDisableDiscoveryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerGlobalDisableDiscovery] {
	return pulumix.Output[[]SwitchControllerGlobalDisableDiscovery]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalDisableDiscoveryArrayOutput) Index(i pulumi.IntInput) SwitchControllerGlobalDisableDiscoveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerGlobalDisableDiscovery {
		return vs[0].([]SwitchControllerGlobalDisableDiscovery)[vs[1].(int)]
	}).(SwitchControllerGlobalDisableDiscoveryOutput)
}

type SwitchControllerLldpProfileCustomTlv struct {
	InformationString *string `pulumi:"informationString"`
	Name              *string `pulumi:"name"`
	Oui               *string `pulumi:"oui"`
	Subtype           *int    `pulumi:"subtype"`
}

// SwitchControllerLldpProfileCustomTlvInput is an input type that accepts SwitchControllerLldpProfileCustomTlvArgs and SwitchControllerLldpProfileCustomTlvOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileCustomTlvInput` via:
//
//	SwitchControllerLldpProfileCustomTlvArgs{...}
type SwitchControllerLldpProfileCustomTlvInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileCustomTlvOutput() SwitchControllerLldpProfileCustomTlvOutput
	ToSwitchControllerLldpProfileCustomTlvOutputWithContext(context.Context) SwitchControllerLldpProfileCustomTlvOutput
}

type SwitchControllerLldpProfileCustomTlvArgs struct {
	InformationString pulumi.StringPtrInput `pulumi:"informationString"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
	Oui               pulumi.StringPtrInput `pulumi:"oui"`
	Subtype           pulumi.IntPtrInput    `pulumi:"subtype"`
}

func (SwitchControllerLldpProfileCustomTlvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileCustomTlv)(nil)).Elem()
}

func (i SwitchControllerLldpProfileCustomTlvArgs) ToSwitchControllerLldpProfileCustomTlvOutput() SwitchControllerLldpProfileCustomTlvOutput {
	return i.ToSwitchControllerLldpProfileCustomTlvOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileCustomTlvArgs) ToSwitchControllerLldpProfileCustomTlvOutputWithContext(ctx context.Context) SwitchControllerLldpProfileCustomTlvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileCustomTlvOutput)
}

func (i SwitchControllerLldpProfileCustomTlvArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileCustomTlv] {
	return pulumix.Output[SwitchControllerLldpProfileCustomTlv]{
		OutputState: i.ToSwitchControllerLldpProfileCustomTlvOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerLldpProfileCustomTlvArrayInput is an input type that accepts SwitchControllerLldpProfileCustomTlvArray and SwitchControllerLldpProfileCustomTlvArrayOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileCustomTlvArrayInput` via:
//
//	SwitchControllerLldpProfileCustomTlvArray{ SwitchControllerLldpProfileCustomTlvArgs{...} }
type SwitchControllerLldpProfileCustomTlvArrayInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileCustomTlvArrayOutput() SwitchControllerLldpProfileCustomTlvArrayOutput
	ToSwitchControllerLldpProfileCustomTlvArrayOutputWithContext(context.Context) SwitchControllerLldpProfileCustomTlvArrayOutput
}

type SwitchControllerLldpProfileCustomTlvArray []SwitchControllerLldpProfileCustomTlvInput

func (SwitchControllerLldpProfileCustomTlvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileCustomTlv)(nil)).Elem()
}

func (i SwitchControllerLldpProfileCustomTlvArray) ToSwitchControllerLldpProfileCustomTlvArrayOutput() SwitchControllerLldpProfileCustomTlvArrayOutput {
	return i.ToSwitchControllerLldpProfileCustomTlvArrayOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileCustomTlvArray) ToSwitchControllerLldpProfileCustomTlvArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileCustomTlvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileCustomTlvArrayOutput)
}

func (i SwitchControllerLldpProfileCustomTlvArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileCustomTlv] {
	return pulumix.Output[[]SwitchControllerLldpProfileCustomTlv]{
		OutputState: i.ToSwitchControllerLldpProfileCustomTlvArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLldpProfileCustomTlvOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileCustomTlvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileCustomTlv)(nil)).Elem()
}

func (o SwitchControllerLldpProfileCustomTlvOutput) ToSwitchControllerLldpProfileCustomTlvOutput() SwitchControllerLldpProfileCustomTlvOutput {
	return o
}

func (o SwitchControllerLldpProfileCustomTlvOutput) ToSwitchControllerLldpProfileCustomTlvOutputWithContext(ctx context.Context) SwitchControllerLldpProfileCustomTlvOutput {
	return o
}

func (o SwitchControllerLldpProfileCustomTlvOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileCustomTlv] {
	return pulumix.Output[SwitchControllerLldpProfileCustomTlv]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileCustomTlvOutput) InformationString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileCustomTlv) *string { return v.InformationString }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileCustomTlvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileCustomTlv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileCustomTlvOutput) Oui() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileCustomTlv) *string { return v.Oui }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileCustomTlvOutput) Subtype() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileCustomTlv) *int { return v.Subtype }).(pulumi.IntPtrOutput)
}

type SwitchControllerLldpProfileCustomTlvArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileCustomTlvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileCustomTlv)(nil)).Elem()
}

func (o SwitchControllerLldpProfileCustomTlvArrayOutput) ToSwitchControllerLldpProfileCustomTlvArrayOutput() SwitchControllerLldpProfileCustomTlvArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileCustomTlvArrayOutput) ToSwitchControllerLldpProfileCustomTlvArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileCustomTlvArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileCustomTlvArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileCustomTlv] {
	return pulumix.Output[[]SwitchControllerLldpProfileCustomTlv]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileCustomTlvArrayOutput) Index(i pulumi.IntInput) SwitchControllerLldpProfileCustomTlvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerLldpProfileCustomTlv {
		return vs[0].([]SwitchControllerLldpProfileCustomTlv)[vs[1].(int)]
	}).(SwitchControllerLldpProfileCustomTlvOutput)
}

type SwitchControllerLldpProfileMedLocationService struct {
	Name          *string `pulumi:"name"`
	Status        *string `pulumi:"status"`
	SysLocationId *string `pulumi:"sysLocationId"`
}

// SwitchControllerLldpProfileMedLocationServiceInput is an input type that accepts SwitchControllerLldpProfileMedLocationServiceArgs and SwitchControllerLldpProfileMedLocationServiceOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileMedLocationServiceInput` via:
//
//	SwitchControllerLldpProfileMedLocationServiceArgs{...}
type SwitchControllerLldpProfileMedLocationServiceInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileMedLocationServiceOutput() SwitchControllerLldpProfileMedLocationServiceOutput
	ToSwitchControllerLldpProfileMedLocationServiceOutputWithContext(context.Context) SwitchControllerLldpProfileMedLocationServiceOutput
}

type SwitchControllerLldpProfileMedLocationServiceArgs struct {
	Name          pulumi.StringPtrInput `pulumi:"name"`
	Status        pulumi.StringPtrInput `pulumi:"status"`
	SysLocationId pulumi.StringPtrInput `pulumi:"sysLocationId"`
}

func (SwitchControllerLldpProfileMedLocationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileMedLocationService)(nil)).Elem()
}

func (i SwitchControllerLldpProfileMedLocationServiceArgs) ToSwitchControllerLldpProfileMedLocationServiceOutput() SwitchControllerLldpProfileMedLocationServiceOutput {
	return i.ToSwitchControllerLldpProfileMedLocationServiceOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileMedLocationServiceArgs) ToSwitchControllerLldpProfileMedLocationServiceOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedLocationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileMedLocationServiceOutput)
}

func (i SwitchControllerLldpProfileMedLocationServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileMedLocationService] {
	return pulumix.Output[SwitchControllerLldpProfileMedLocationService]{
		OutputState: i.ToSwitchControllerLldpProfileMedLocationServiceOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerLldpProfileMedLocationServiceArrayInput is an input type that accepts SwitchControllerLldpProfileMedLocationServiceArray and SwitchControllerLldpProfileMedLocationServiceArrayOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileMedLocationServiceArrayInput` via:
//
//	SwitchControllerLldpProfileMedLocationServiceArray{ SwitchControllerLldpProfileMedLocationServiceArgs{...} }
type SwitchControllerLldpProfileMedLocationServiceArrayInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileMedLocationServiceArrayOutput() SwitchControllerLldpProfileMedLocationServiceArrayOutput
	ToSwitchControllerLldpProfileMedLocationServiceArrayOutputWithContext(context.Context) SwitchControllerLldpProfileMedLocationServiceArrayOutput
}

type SwitchControllerLldpProfileMedLocationServiceArray []SwitchControllerLldpProfileMedLocationServiceInput

func (SwitchControllerLldpProfileMedLocationServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileMedLocationService)(nil)).Elem()
}

func (i SwitchControllerLldpProfileMedLocationServiceArray) ToSwitchControllerLldpProfileMedLocationServiceArrayOutput() SwitchControllerLldpProfileMedLocationServiceArrayOutput {
	return i.ToSwitchControllerLldpProfileMedLocationServiceArrayOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileMedLocationServiceArray) ToSwitchControllerLldpProfileMedLocationServiceArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedLocationServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileMedLocationServiceArrayOutput)
}

func (i SwitchControllerLldpProfileMedLocationServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileMedLocationService] {
	return pulumix.Output[[]SwitchControllerLldpProfileMedLocationService]{
		OutputState: i.ToSwitchControllerLldpProfileMedLocationServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLldpProfileMedLocationServiceOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileMedLocationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileMedLocationService)(nil)).Elem()
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) ToSwitchControllerLldpProfileMedLocationServiceOutput() SwitchControllerLldpProfileMedLocationServiceOutput {
	return o
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) ToSwitchControllerLldpProfileMedLocationServiceOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedLocationServiceOutput {
	return o
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileMedLocationService] {
	return pulumix.Output[SwitchControllerLldpProfileMedLocationService]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedLocationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedLocationService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileMedLocationServiceOutput) SysLocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedLocationService) *string { return v.SysLocationId }).(pulumi.StringPtrOutput)
}

type SwitchControllerLldpProfileMedLocationServiceArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileMedLocationServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileMedLocationService)(nil)).Elem()
}

func (o SwitchControllerLldpProfileMedLocationServiceArrayOutput) ToSwitchControllerLldpProfileMedLocationServiceArrayOutput() SwitchControllerLldpProfileMedLocationServiceArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileMedLocationServiceArrayOutput) ToSwitchControllerLldpProfileMedLocationServiceArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedLocationServiceArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileMedLocationServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileMedLocationService] {
	return pulumix.Output[[]SwitchControllerLldpProfileMedLocationService]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileMedLocationServiceArrayOutput) Index(i pulumi.IntInput) SwitchControllerLldpProfileMedLocationServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerLldpProfileMedLocationService {
		return vs[0].([]SwitchControllerLldpProfileMedLocationService)[vs[1].(int)]
	}).(SwitchControllerLldpProfileMedLocationServiceOutput)
}

type SwitchControllerLldpProfileMedNetworkPolicy struct {
	AssignVlan *string `pulumi:"assignVlan"`
	Dscp       *int    `pulumi:"dscp"`
	Name       *string `pulumi:"name"`
	Priority   *int    `pulumi:"priority"`
	Status     *string `pulumi:"status"`
	Vlan       *int    `pulumi:"vlan"`
	VlanIntf   *string `pulumi:"vlanIntf"`
}

// SwitchControllerLldpProfileMedNetworkPolicyInput is an input type that accepts SwitchControllerLldpProfileMedNetworkPolicyArgs and SwitchControllerLldpProfileMedNetworkPolicyOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileMedNetworkPolicyInput` via:
//
//	SwitchControllerLldpProfileMedNetworkPolicyArgs{...}
type SwitchControllerLldpProfileMedNetworkPolicyInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileMedNetworkPolicyOutput() SwitchControllerLldpProfileMedNetworkPolicyOutput
	ToSwitchControllerLldpProfileMedNetworkPolicyOutputWithContext(context.Context) SwitchControllerLldpProfileMedNetworkPolicyOutput
}

type SwitchControllerLldpProfileMedNetworkPolicyArgs struct {
	AssignVlan pulumi.StringPtrInput `pulumi:"assignVlan"`
	Dscp       pulumi.IntPtrInput    `pulumi:"dscp"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Priority   pulumi.IntPtrInput    `pulumi:"priority"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	Vlan       pulumi.IntPtrInput    `pulumi:"vlan"`
	VlanIntf   pulumi.StringPtrInput `pulumi:"vlanIntf"`
}

func (SwitchControllerLldpProfileMedNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileMedNetworkPolicy)(nil)).Elem()
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArgs) ToSwitchControllerLldpProfileMedNetworkPolicyOutput() SwitchControllerLldpProfileMedNetworkPolicyOutput {
	return i.ToSwitchControllerLldpProfileMedNetworkPolicyOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArgs) ToSwitchControllerLldpProfileMedNetworkPolicyOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileMedNetworkPolicyOutput)
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileMedNetworkPolicy] {
	return pulumix.Output[SwitchControllerLldpProfileMedNetworkPolicy]{
		OutputState: i.ToSwitchControllerLldpProfileMedNetworkPolicyOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerLldpProfileMedNetworkPolicyArrayInput is an input type that accepts SwitchControllerLldpProfileMedNetworkPolicyArray and SwitchControllerLldpProfileMedNetworkPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerLldpProfileMedNetworkPolicyArrayInput` via:
//
//	SwitchControllerLldpProfileMedNetworkPolicyArray{ SwitchControllerLldpProfileMedNetworkPolicyArgs{...} }
type SwitchControllerLldpProfileMedNetworkPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutput() SwitchControllerLldpProfileMedNetworkPolicyArrayOutput
	ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutputWithContext(context.Context) SwitchControllerLldpProfileMedNetworkPolicyArrayOutput
}

type SwitchControllerLldpProfileMedNetworkPolicyArray []SwitchControllerLldpProfileMedNetworkPolicyInput

func (SwitchControllerLldpProfileMedNetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileMedNetworkPolicy)(nil)).Elem()
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArray) ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutput() SwitchControllerLldpProfileMedNetworkPolicyArrayOutput {
	return i.ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArray) ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedNetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLldpProfileMedNetworkPolicyArrayOutput)
}

func (i SwitchControllerLldpProfileMedNetworkPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileMedNetworkPolicy] {
	return pulumix.Output[[]SwitchControllerLldpProfileMedNetworkPolicy]{
		OutputState: i.ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLldpProfileMedNetworkPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileMedNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLldpProfileMedNetworkPolicy)(nil)).Elem()
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) ToSwitchControllerLldpProfileMedNetworkPolicyOutput() SwitchControllerLldpProfileMedNetworkPolicyOutput {
	return o
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) ToSwitchControllerLldpProfileMedNetworkPolicyOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedNetworkPolicyOutput {
	return o
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLldpProfileMedNetworkPolicy] {
	return pulumix.Output[SwitchControllerLldpProfileMedNetworkPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) AssignVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *string { return v.AssignVlan }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerLldpProfileMedNetworkPolicyOutput) VlanIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLldpProfileMedNetworkPolicy) *string { return v.VlanIntf }).(pulumi.StringPtrOutput)
}

type SwitchControllerLldpProfileMedNetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerLldpProfileMedNetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerLldpProfileMedNetworkPolicy)(nil)).Elem()
}

func (o SwitchControllerLldpProfileMedNetworkPolicyArrayOutput) ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutput() SwitchControllerLldpProfileMedNetworkPolicyArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileMedNetworkPolicyArrayOutput) ToSwitchControllerLldpProfileMedNetworkPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerLldpProfileMedNetworkPolicyArrayOutput {
	return o
}

func (o SwitchControllerLldpProfileMedNetworkPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerLldpProfileMedNetworkPolicy] {
	return pulumix.Output[[]SwitchControllerLldpProfileMedNetworkPolicy]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLldpProfileMedNetworkPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerLldpProfileMedNetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerLldpProfileMedNetworkPolicy {
		return vs[0].([]SwitchControllerLldpProfileMedNetworkPolicy)[vs[1].(int)]
	}).(SwitchControllerLldpProfileMedNetworkPolicyOutput)
}

type SwitchControllerLocationAddressCivic struct {
	Additional         *string `pulumi:"additional"`
	AdditionalCode     *string `pulumi:"additionalCode"`
	Block              *string `pulumi:"block"`
	BranchRoad         *string `pulumi:"branchRoad"`
	Building           *string `pulumi:"building"`
	City               *string `pulumi:"city"`
	CityDivision       *string `pulumi:"cityDivision"`
	Country            *string `pulumi:"country"`
	CountrySubdivision *string `pulumi:"countrySubdivision"`
	County             *string `pulumi:"county"`
	Direction          *string `pulumi:"direction"`
	Floor              *string `pulumi:"floor"`
	Landmark           *string `pulumi:"landmark"`
	Language           *string `pulumi:"language"`
	Name               *string `pulumi:"name"`
	Number             *string `pulumi:"number"`
	NumberSuffix       *string `pulumi:"numberSuffix"`
	ParentKey          *string `pulumi:"parentKey"`
	PlaceType          *string `pulumi:"placeType"`
	PostOfficeBox      *string `pulumi:"postOfficeBox"`
	PostalCommunity    *string `pulumi:"postalCommunity"`
	PrimaryRoad        *string `pulumi:"primaryRoad"`
	RoadSection        *string `pulumi:"roadSection"`
	Room               *string `pulumi:"room"`
	Script             *string `pulumi:"script"`
	Seat               *string `pulumi:"seat"`
	Street             *string `pulumi:"street"`
	StreetNamePostMod  *string `pulumi:"streetNamePostMod"`
	StreetNamePreMod   *string `pulumi:"streetNamePreMod"`
	StreetSuffix       *string `pulumi:"streetSuffix"`
	SubBranchRoad      *string `pulumi:"subBranchRoad"`
	TrailingStrSuffix  *string `pulumi:"trailingStrSuffix"`
	Unit               *string `pulumi:"unit"`
	Zip                *string `pulumi:"zip"`
}

// SwitchControllerLocationAddressCivicInput is an input type that accepts SwitchControllerLocationAddressCivicArgs and SwitchControllerLocationAddressCivicOutput values.
// You can construct a concrete instance of `SwitchControllerLocationAddressCivicInput` via:
//
//	SwitchControllerLocationAddressCivicArgs{...}
type SwitchControllerLocationAddressCivicInput interface {
	pulumi.Input

	ToSwitchControllerLocationAddressCivicOutput() SwitchControllerLocationAddressCivicOutput
	ToSwitchControllerLocationAddressCivicOutputWithContext(context.Context) SwitchControllerLocationAddressCivicOutput
}

type SwitchControllerLocationAddressCivicArgs struct {
	Additional         pulumi.StringPtrInput `pulumi:"additional"`
	AdditionalCode     pulumi.StringPtrInput `pulumi:"additionalCode"`
	Block              pulumi.StringPtrInput `pulumi:"block"`
	BranchRoad         pulumi.StringPtrInput `pulumi:"branchRoad"`
	Building           pulumi.StringPtrInput `pulumi:"building"`
	City               pulumi.StringPtrInput `pulumi:"city"`
	CityDivision       pulumi.StringPtrInput `pulumi:"cityDivision"`
	Country            pulumi.StringPtrInput `pulumi:"country"`
	CountrySubdivision pulumi.StringPtrInput `pulumi:"countrySubdivision"`
	County             pulumi.StringPtrInput `pulumi:"county"`
	Direction          pulumi.StringPtrInput `pulumi:"direction"`
	Floor              pulumi.StringPtrInput `pulumi:"floor"`
	Landmark           pulumi.StringPtrInput `pulumi:"landmark"`
	Language           pulumi.StringPtrInput `pulumi:"language"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Number             pulumi.StringPtrInput `pulumi:"number"`
	NumberSuffix       pulumi.StringPtrInput `pulumi:"numberSuffix"`
	ParentKey          pulumi.StringPtrInput `pulumi:"parentKey"`
	PlaceType          pulumi.StringPtrInput `pulumi:"placeType"`
	PostOfficeBox      pulumi.StringPtrInput `pulumi:"postOfficeBox"`
	PostalCommunity    pulumi.StringPtrInput `pulumi:"postalCommunity"`
	PrimaryRoad        pulumi.StringPtrInput `pulumi:"primaryRoad"`
	RoadSection        pulumi.StringPtrInput `pulumi:"roadSection"`
	Room               pulumi.StringPtrInput `pulumi:"room"`
	Script             pulumi.StringPtrInput `pulumi:"script"`
	Seat               pulumi.StringPtrInput `pulumi:"seat"`
	Street             pulumi.StringPtrInput `pulumi:"street"`
	StreetNamePostMod  pulumi.StringPtrInput `pulumi:"streetNamePostMod"`
	StreetNamePreMod   pulumi.StringPtrInput `pulumi:"streetNamePreMod"`
	StreetSuffix       pulumi.StringPtrInput `pulumi:"streetSuffix"`
	SubBranchRoad      pulumi.StringPtrInput `pulumi:"subBranchRoad"`
	TrailingStrSuffix  pulumi.StringPtrInput `pulumi:"trailingStrSuffix"`
	Unit               pulumi.StringPtrInput `pulumi:"unit"`
	Zip                pulumi.StringPtrInput `pulumi:"zip"`
}

func (SwitchControllerLocationAddressCivicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationAddressCivic)(nil)).Elem()
}

func (i SwitchControllerLocationAddressCivicArgs) ToSwitchControllerLocationAddressCivicOutput() SwitchControllerLocationAddressCivicOutput {
	return i.ToSwitchControllerLocationAddressCivicOutputWithContext(context.Background())
}

func (i SwitchControllerLocationAddressCivicArgs) ToSwitchControllerLocationAddressCivicOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationAddressCivicOutput)
}

func (i SwitchControllerLocationAddressCivicArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationAddressCivic] {
	return pulumix.Output[SwitchControllerLocationAddressCivic]{
		OutputState: i.ToSwitchControllerLocationAddressCivicOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerLocationAddressCivicArgs) ToSwitchControllerLocationAddressCivicPtrOutput() SwitchControllerLocationAddressCivicPtrOutput {
	return i.ToSwitchControllerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (i SwitchControllerLocationAddressCivicArgs) ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationAddressCivicOutput).ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx)
}

// SwitchControllerLocationAddressCivicPtrInput is an input type that accepts SwitchControllerLocationAddressCivicArgs, SwitchControllerLocationAddressCivicPtr and SwitchControllerLocationAddressCivicPtrOutput values.
// You can construct a concrete instance of `SwitchControllerLocationAddressCivicPtrInput` via:
//
//	        SwitchControllerLocationAddressCivicArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerLocationAddressCivicPtrInput interface {
	pulumi.Input

	ToSwitchControllerLocationAddressCivicPtrOutput() SwitchControllerLocationAddressCivicPtrOutput
	ToSwitchControllerLocationAddressCivicPtrOutputWithContext(context.Context) SwitchControllerLocationAddressCivicPtrOutput
}

type switchControllerLocationAddressCivicPtrType SwitchControllerLocationAddressCivicArgs

func SwitchControllerLocationAddressCivicPtr(v *SwitchControllerLocationAddressCivicArgs) SwitchControllerLocationAddressCivicPtrInput {
	return (*switchControllerLocationAddressCivicPtrType)(v)
}

func (*switchControllerLocationAddressCivicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationAddressCivic)(nil)).Elem()
}

func (i *switchControllerLocationAddressCivicPtrType) ToSwitchControllerLocationAddressCivicPtrOutput() SwitchControllerLocationAddressCivicPtrOutput {
	return i.ToSwitchControllerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (i *switchControllerLocationAddressCivicPtrType) ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationAddressCivicPtrOutput)
}

func (i *switchControllerLocationAddressCivicPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationAddressCivic] {
	return pulumix.Output[*SwitchControllerLocationAddressCivic]{
		OutputState: i.ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLocationAddressCivicOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationAddressCivicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationAddressCivic)(nil)).Elem()
}

func (o SwitchControllerLocationAddressCivicOutput) ToSwitchControllerLocationAddressCivicOutput() SwitchControllerLocationAddressCivicOutput {
	return o
}

func (o SwitchControllerLocationAddressCivicOutput) ToSwitchControllerLocationAddressCivicOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicOutput {
	return o
}

func (o SwitchControllerLocationAddressCivicOutput) ToSwitchControllerLocationAddressCivicPtrOutput() SwitchControllerLocationAddressCivicPtrOutput {
	return o.ToSwitchControllerLocationAddressCivicPtrOutputWithContext(context.Background())
}

func (o SwitchControllerLocationAddressCivicOutput) ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerLocationAddressCivic) *SwitchControllerLocationAddressCivic {
		return &v
	}).(SwitchControllerLocationAddressCivicPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationAddressCivic] {
	return pulumix.Output[SwitchControllerLocationAddressCivic]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationAddressCivicOutput) Additional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Additional }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) AdditionalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.AdditionalCode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Block }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) BranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.BranchRoad }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Building }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) CityDivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.CityDivision }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) CountrySubdivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.CountrySubdivision }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.County }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Floor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Floor }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Landmark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Landmark }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Language }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Number }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) NumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.NumberSuffix }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) PlaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.PlaceType }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) PostOfficeBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.PostOfficeBox }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) PostalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.PostalCommunity }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) PrimaryRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.PrimaryRoad }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) RoadSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.RoadSection }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Room() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Room }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Script }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Seat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Seat }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Street }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) StreetNamePostMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.StreetNamePostMod }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) StreetNamePreMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.StreetNamePreMod }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) StreetSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.StreetSuffix }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) SubBranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.SubBranchRoad }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) TrailingStrSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.TrailingStrSuffix }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicOutput) Zip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationAddressCivic) *string { return v.Zip }).(pulumi.StringPtrOutput)
}

type SwitchControllerLocationAddressCivicPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationAddressCivicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationAddressCivic)(nil)).Elem()
}

func (o SwitchControllerLocationAddressCivicPtrOutput) ToSwitchControllerLocationAddressCivicPtrOutput() SwitchControllerLocationAddressCivicPtrOutput {
	return o
}

func (o SwitchControllerLocationAddressCivicPtrOutput) ToSwitchControllerLocationAddressCivicPtrOutputWithContext(ctx context.Context) SwitchControllerLocationAddressCivicPtrOutput {
	return o
}

func (o SwitchControllerLocationAddressCivicPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationAddressCivic] {
	return pulumix.Output[*SwitchControllerLocationAddressCivic]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Elem() SwitchControllerLocationAddressCivicOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) SwitchControllerLocationAddressCivic {
		if v != nil {
			return *v
		}
		var ret SwitchControllerLocationAddressCivic
		return ret
	}).(SwitchControllerLocationAddressCivicOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Additional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Additional
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) AdditionalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalCode
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Block
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) BranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.BranchRoad
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Building() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Building
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) CityDivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.CityDivision
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) CountrySubdivision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.CountrySubdivision
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Floor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Floor
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Landmark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Landmark
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) NumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.NumberSuffix
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) PlaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PlaceType
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) PostOfficeBox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PostOfficeBox
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) PostalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PostalCommunity
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) PrimaryRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryRoad
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) RoadSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.RoadSection
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Room() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Room
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Seat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Seat
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Street
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) StreetNamePostMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetNamePostMod
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) StreetNamePreMod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetNamePreMod
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) StreetSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.StreetSuffix
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) SubBranchRoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.SubBranchRoad
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) TrailingStrSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.TrailingStrSuffix
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationAddressCivicPtrOutput) Zip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationAddressCivic) *string {
		if v == nil {
			return nil
		}
		return v.Zip
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerLocationCoordinates struct {
	Altitude     *string `pulumi:"altitude"`
	AltitudeUnit *string `pulumi:"altitudeUnit"`
	Datum        *string `pulumi:"datum"`
	Latitude     *string `pulumi:"latitude"`
	Longitude    *string `pulumi:"longitude"`
	ParentKey    *string `pulumi:"parentKey"`
}

// SwitchControllerLocationCoordinatesInput is an input type that accepts SwitchControllerLocationCoordinatesArgs and SwitchControllerLocationCoordinatesOutput values.
// You can construct a concrete instance of `SwitchControllerLocationCoordinatesInput` via:
//
//	SwitchControllerLocationCoordinatesArgs{...}
type SwitchControllerLocationCoordinatesInput interface {
	pulumi.Input

	ToSwitchControllerLocationCoordinatesOutput() SwitchControllerLocationCoordinatesOutput
	ToSwitchControllerLocationCoordinatesOutputWithContext(context.Context) SwitchControllerLocationCoordinatesOutput
}

type SwitchControllerLocationCoordinatesArgs struct {
	Altitude     pulumi.StringPtrInput `pulumi:"altitude"`
	AltitudeUnit pulumi.StringPtrInput `pulumi:"altitudeUnit"`
	Datum        pulumi.StringPtrInput `pulumi:"datum"`
	Latitude     pulumi.StringPtrInput `pulumi:"latitude"`
	Longitude    pulumi.StringPtrInput `pulumi:"longitude"`
	ParentKey    pulumi.StringPtrInput `pulumi:"parentKey"`
}

func (SwitchControllerLocationCoordinatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationCoordinates)(nil)).Elem()
}

func (i SwitchControllerLocationCoordinatesArgs) ToSwitchControllerLocationCoordinatesOutput() SwitchControllerLocationCoordinatesOutput {
	return i.ToSwitchControllerLocationCoordinatesOutputWithContext(context.Background())
}

func (i SwitchControllerLocationCoordinatesArgs) ToSwitchControllerLocationCoordinatesOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationCoordinatesOutput)
}

func (i SwitchControllerLocationCoordinatesArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationCoordinates] {
	return pulumix.Output[SwitchControllerLocationCoordinates]{
		OutputState: i.ToSwitchControllerLocationCoordinatesOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerLocationCoordinatesArgs) ToSwitchControllerLocationCoordinatesPtrOutput() SwitchControllerLocationCoordinatesPtrOutput {
	return i.ToSwitchControllerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (i SwitchControllerLocationCoordinatesArgs) ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationCoordinatesOutput).ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx)
}

// SwitchControllerLocationCoordinatesPtrInput is an input type that accepts SwitchControllerLocationCoordinatesArgs, SwitchControllerLocationCoordinatesPtr and SwitchControllerLocationCoordinatesPtrOutput values.
// You can construct a concrete instance of `SwitchControllerLocationCoordinatesPtrInput` via:
//
//	        SwitchControllerLocationCoordinatesArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerLocationCoordinatesPtrInput interface {
	pulumi.Input

	ToSwitchControllerLocationCoordinatesPtrOutput() SwitchControllerLocationCoordinatesPtrOutput
	ToSwitchControllerLocationCoordinatesPtrOutputWithContext(context.Context) SwitchControllerLocationCoordinatesPtrOutput
}

type switchControllerLocationCoordinatesPtrType SwitchControllerLocationCoordinatesArgs

func SwitchControllerLocationCoordinatesPtr(v *SwitchControllerLocationCoordinatesArgs) SwitchControllerLocationCoordinatesPtrInput {
	return (*switchControllerLocationCoordinatesPtrType)(v)
}

func (*switchControllerLocationCoordinatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationCoordinates)(nil)).Elem()
}

func (i *switchControllerLocationCoordinatesPtrType) ToSwitchControllerLocationCoordinatesPtrOutput() SwitchControllerLocationCoordinatesPtrOutput {
	return i.ToSwitchControllerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (i *switchControllerLocationCoordinatesPtrType) ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationCoordinatesPtrOutput)
}

func (i *switchControllerLocationCoordinatesPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationCoordinates] {
	return pulumix.Output[*SwitchControllerLocationCoordinates]{
		OutputState: i.ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLocationCoordinatesOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationCoordinatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationCoordinates)(nil)).Elem()
}

func (o SwitchControllerLocationCoordinatesOutput) ToSwitchControllerLocationCoordinatesOutput() SwitchControllerLocationCoordinatesOutput {
	return o
}

func (o SwitchControllerLocationCoordinatesOutput) ToSwitchControllerLocationCoordinatesOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesOutput {
	return o
}

func (o SwitchControllerLocationCoordinatesOutput) ToSwitchControllerLocationCoordinatesPtrOutput() SwitchControllerLocationCoordinatesPtrOutput {
	return o.ToSwitchControllerLocationCoordinatesPtrOutputWithContext(context.Background())
}

func (o SwitchControllerLocationCoordinatesOutput) ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerLocationCoordinates) *SwitchControllerLocationCoordinates {
		return &v
	}).(SwitchControllerLocationCoordinatesPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationCoordinates] {
	return pulumix.Output[SwitchControllerLocationCoordinates]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationCoordinatesOutput) Altitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.Altitude }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) AltitudeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.AltitudeUnit }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) Datum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.Datum }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationCoordinates) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchControllerLocationCoordinatesPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationCoordinatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationCoordinates)(nil)).Elem()
}

func (o SwitchControllerLocationCoordinatesPtrOutput) ToSwitchControllerLocationCoordinatesPtrOutput() SwitchControllerLocationCoordinatesPtrOutput {
	return o
}

func (o SwitchControllerLocationCoordinatesPtrOutput) ToSwitchControllerLocationCoordinatesPtrOutputWithContext(ctx context.Context) SwitchControllerLocationCoordinatesPtrOutput {
	return o
}

func (o SwitchControllerLocationCoordinatesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationCoordinates] {
	return pulumix.Output[*SwitchControllerLocationCoordinates]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationCoordinatesPtrOutput) Elem() SwitchControllerLocationCoordinatesOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) SwitchControllerLocationCoordinates {
		if v != nil {
			return *v
		}
		var ret SwitchControllerLocationCoordinates
		return ret
	}).(SwitchControllerLocationCoordinatesOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) Altitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Altitude
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) AltitudeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.AltitudeUnit
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) Datum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Datum
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationCoordinatesPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationCoordinates) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerLocationElinNumber struct {
	ElinNum   *string `pulumi:"elinNum"`
	ParentKey *string `pulumi:"parentKey"`
}

// SwitchControllerLocationElinNumberInput is an input type that accepts SwitchControllerLocationElinNumberArgs and SwitchControllerLocationElinNumberOutput values.
// You can construct a concrete instance of `SwitchControllerLocationElinNumberInput` via:
//
//	SwitchControllerLocationElinNumberArgs{...}
type SwitchControllerLocationElinNumberInput interface {
	pulumi.Input

	ToSwitchControllerLocationElinNumberOutput() SwitchControllerLocationElinNumberOutput
	ToSwitchControllerLocationElinNumberOutputWithContext(context.Context) SwitchControllerLocationElinNumberOutput
}

type SwitchControllerLocationElinNumberArgs struct {
	ElinNum   pulumi.StringPtrInput `pulumi:"elinNum"`
	ParentKey pulumi.StringPtrInput `pulumi:"parentKey"`
}

func (SwitchControllerLocationElinNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationElinNumber)(nil)).Elem()
}

func (i SwitchControllerLocationElinNumberArgs) ToSwitchControllerLocationElinNumberOutput() SwitchControllerLocationElinNumberOutput {
	return i.ToSwitchControllerLocationElinNumberOutputWithContext(context.Background())
}

func (i SwitchControllerLocationElinNumberArgs) ToSwitchControllerLocationElinNumberOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationElinNumberOutput)
}

func (i SwitchControllerLocationElinNumberArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationElinNumber] {
	return pulumix.Output[SwitchControllerLocationElinNumber]{
		OutputState: i.ToSwitchControllerLocationElinNumberOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerLocationElinNumberArgs) ToSwitchControllerLocationElinNumberPtrOutput() SwitchControllerLocationElinNumberPtrOutput {
	return i.ToSwitchControllerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (i SwitchControllerLocationElinNumberArgs) ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationElinNumberOutput).ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx)
}

// SwitchControllerLocationElinNumberPtrInput is an input type that accepts SwitchControllerLocationElinNumberArgs, SwitchControllerLocationElinNumberPtr and SwitchControllerLocationElinNumberPtrOutput values.
// You can construct a concrete instance of `SwitchControllerLocationElinNumberPtrInput` via:
//
//	        SwitchControllerLocationElinNumberArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerLocationElinNumberPtrInput interface {
	pulumi.Input

	ToSwitchControllerLocationElinNumberPtrOutput() SwitchControllerLocationElinNumberPtrOutput
	ToSwitchControllerLocationElinNumberPtrOutputWithContext(context.Context) SwitchControllerLocationElinNumberPtrOutput
}

type switchControllerLocationElinNumberPtrType SwitchControllerLocationElinNumberArgs

func SwitchControllerLocationElinNumberPtr(v *SwitchControllerLocationElinNumberArgs) SwitchControllerLocationElinNumberPtrInput {
	return (*switchControllerLocationElinNumberPtrType)(v)
}

func (*switchControllerLocationElinNumberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationElinNumber)(nil)).Elem()
}

func (i *switchControllerLocationElinNumberPtrType) ToSwitchControllerLocationElinNumberPtrOutput() SwitchControllerLocationElinNumberPtrOutput {
	return i.ToSwitchControllerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (i *switchControllerLocationElinNumberPtrType) ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerLocationElinNumberPtrOutput)
}

func (i *switchControllerLocationElinNumberPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationElinNumber] {
	return pulumix.Output[*SwitchControllerLocationElinNumber]{
		OutputState: i.ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerLocationElinNumberOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationElinNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerLocationElinNumber)(nil)).Elem()
}

func (o SwitchControllerLocationElinNumberOutput) ToSwitchControllerLocationElinNumberOutput() SwitchControllerLocationElinNumberOutput {
	return o
}

func (o SwitchControllerLocationElinNumberOutput) ToSwitchControllerLocationElinNumberOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberOutput {
	return o
}

func (o SwitchControllerLocationElinNumberOutput) ToSwitchControllerLocationElinNumberPtrOutput() SwitchControllerLocationElinNumberPtrOutput {
	return o.ToSwitchControllerLocationElinNumberPtrOutputWithContext(context.Background())
}

func (o SwitchControllerLocationElinNumberOutput) ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerLocationElinNumber) *SwitchControllerLocationElinNumber {
		return &v
	}).(SwitchControllerLocationElinNumberPtrOutput)
}

func (o SwitchControllerLocationElinNumberOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerLocationElinNumber] {
	return pulumix.Output[SwitchControllerLocationElinNumber]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationElinNumberOutput) ElinNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationElinNumber) *string { return v.ElinNum }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationElinNumberOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerLocationElinNumber) *string { return v.ParentKey }).(pulumi.StringPtrOutput)
}

type SwitchControllerLocationElinNumberPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerLocationElinNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerLocationElinNumber)(nil)).Elem()
}

func (o SwitchControllerLocationElinNumberPtrOutput) ToSwitchControllerLocationElinNumberPtrOutput() SwitchControllerLocationElinNumberPtrOutput {
	return o
}

func (o SwitchControllerLocationElinNumberPtrOutput) ToSwitchControllerLocationElinNumberPtrOutputWithContext(ctx context.Context) SwitchControllerLocationElinNumberPtrOutput {
	return o
}

func (o SwitchControllerLocationElinNumberPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerLocationElinNumber] {
	return pulumix.Output[*SwitchControllerLocationElinNumber]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerLocationElinNumberPtrOutput) Elem() SwitchControllerLocationElinNumberOutput {
	return o.ApplyT(func(v *SwitchControllerLocationElinNumber) SwitchControllerLocationElinNumber {
		if v != nil {
			return *v
		}
		var ret SwitchControllerLocationElinNumber
		return ret
	}).(SwitchControllerLocationElinNumberOutput)
}

func (o SwitchControllerLocationElinNumberPtrOutput) ElinNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationElinNumber) *string {
		if v == nil {
			return nil
		}
		return v.ElinNum
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerLocationElinNumberPtrOutput) ParentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerLocationElinNumber) *string {
		if v == nil {
			return nil
		}
		return v.ParentKey
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchCustomCommand struct {
	CommandEntry *string `pulumi:"commandEntry"`
	CommandName  *string `pulumi:"commandName"`
}

// SwitchControllerManagedSwitchCustomCommandInput is an input type that accepts SwitchControllerManagedSwitchCustomCommandArgs and SwitchControllerManagedSwitchCustomCommandOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchCustomCommandInput` via:
//
//	SwitchControllerManagedSwitchCustomCommandArgs{...}
type SwitchControllerManagedSwitchCustomCommandInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchCustomCommandOutput() SwitchControllerManagedSwitchCustomCommandOutput
	ToSwitchControllerManagedSwitchCustomCommandOutputWithContext(context.Context) SwitchControllerManagedSwitchCustomCommandOutput
}

type SwitchControllerManagedSwitchCustomCommandArgs struct {
	CommandEntry pulumi.StringPtrInput `pulumi:"commandEntry"`
	CommandName  pulumi.StringPtrInput `pulumi:"commandName"`
}

func (SwitchControllerManagedSwitchCustomCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchCustomCommand)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchCustomCommandArgs) ToSwitchControllerManagedSwitchCustomCommandOutput() SwitchControllerManagedSwitchCustomCommandOutput {
	return i.ToSwitchControllerManagedSwitchCustomCommandOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchCustomCommandArgs) ToSwitchControllerManagedSwitchCustomCommandOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchCustomCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchCustomCommandOutput)
}

func (i SwitchControllerManagedSwitchCustomCommandArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchCustomCommand] {
	return pulumix.Output[SwitchControllerManagedSwitchCustomCommand]{
		OutputState: i.ToSwitchControllerManagedSwitchCustomCommandOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchCustomCommandArrayInput is an input type that accepts SwitchControllerManagedSwitchCustomCommandArray and SwitchControllerManagedSwitchCustomCommandArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchCustomCommandArrayInput` via:
//
//	SwitchControllerManagedSwitchCustomCommandArray{ SwitchControllerManagedSwitchCustomCommandArgs{...} }
type SwitchControllerManagedSwitchCustomCommandArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchCustomCommandArrayOutput() SwitchControllerManagedSwitchCustomCommandArrayOutput
	ToSwitchControllerManagedSwitchCustomCommandArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchCustomCommandArrayOutput
}

type SwitchControllerManagedSwitchCustomCommandArray []SwitchControllerManagedSwitchCustomCommandInput

func (SwitchControllerManagedSwitchCustomCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchCustomCommand)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchCustomCommandArray) ToSwitchControllerManagedSwitchCustomCommandArrayOutput() SwitchControllerManagedSwitchCustomCommandArrayOutput {
	return i.ToSwitchControllerManagedSwitchCustomCommandArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchCustomCommandArray) ToSwitchControllerManagedSwitchCustomCommandArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchCustomCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchCustomCommandArrayOutput)
}

func (i SwitchControllerManagedSwitchCustomCommandArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchCustomCommand] {
	return pulumix.Output[[]SwitchControllerManagedSwitchCustomCommand]{
		OutputState: i.ToSwitchControllerManagedSwitchCustomCommandArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchCustomCommandOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchCustomCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchCustomCommand)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchCustomCommandOutput) ToSwitchControllerManagedSwitchCustomCommandOutput() SwitchControllerManagedSwitchCustomCommandOutput {
	return o
}

func (o SwitchControllerManagedSwitchCustomCommandOutput) ToSwitchControllerManagedSwitchCustomCommandOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchCustomCommandOutput {
	return o
}

func (o SwitchControllerManagedSwitchCustomCommandOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchCustomCommand] {
	return pulumix.Output[SwitchControllerManagedSwitchCustomCommand]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchCustomCommandOutput) CommandEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchCustomCommand) *string { return v.CommandEntry }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchCustomCommandOutput) CommandName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchCustomCommand) *string { return v.CommandName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchCustomCommandArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchCustomCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchCustomCommand)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchCustomCommandArrayOutput) ToSwitchControllerManagedSwitchCustomCommandArrayOutput() SwitchControllerManagedSwitchCustomCommandArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchCustomCommandArrayOutput) ToSwitchControllerManagedSwitchCustomCommandArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchCustomCommandArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchCustomCommandArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchCustomCommand] {
	return pulumix.Output[[]SwitchControllerManagedSwitchCustomCommand]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchCustomCommandArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchCustomCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchCustomCommand {
		return vs[0].([]SwitchControllerManagedSwitchCustomCommand)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchCustomCommandOutput)
}

type SwitchControllerManagedSwitchDhcpSnoopingStaticClient struct {
	Ip   *string `pulumi:"ip"`
	Mac  *string `pulumi:"mac"`
	Name *string `pulumi:"name"`
	Port *string `pulumi:"port"`
	Vlan *string `pulumi:"vlan"`
}

// SwitchControllerManagedSwitchDhcpSnoopingStaticClientInput is an input type that accepts SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs and SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchDhcpSnoopingStaticClientInput` via:
//
//	SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs{...}
type SwitchControllerManagedSwitchDhcpSnoopingStaticClientInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput
	ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutputWithContext(context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput
}

type SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs struct {
	Ip   pulumi.StringPtrInput `pulumi:"ip"`
	Mac  pulumi.StringPtrInput `pulumi:"mac"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Port pulumi.StringPtrInput `pulumi:"port"`
	Vlan pulumi.StringPtrInput `pulumi:"vlan"`
}

func (SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchDhcpSnoopingStaticClient)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput {
	return i.ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput)
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchDhcpSnoopingStaticClient] {
	return pulumix.Output[SwitchControllerManagedSwitchDhcpSnoopingStaticClient]{
		OutputState: i.ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayInput is an input type that accepts SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray and SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayInput` via:
//
//	SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray{ SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs{...} }
type SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput
	ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput
}

type SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray []SwitchControllerManagedSwitchDhcpSnoopingStaticClientInput

func (SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput {
	return i.ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput)
}

func (i SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient] {
	return pulumix.Output[[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient]{
		OutputState: i.ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchDhcpSnoopingStaticClient)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput {
	return o
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput {
	return o
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchDhcpSnoopingStaticClient] {
	return pulumix.Output[SwitchControllerManagedSwitchDhcpSnoopingStaticClient]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchDhcpSnoopingStaticClient) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchDhcpSnoopingStaticClient) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchDhcpSnoopingStaticClient) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchDhcpSnoopingStaticClient) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchDhcpSnoopingStaticClient) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput() SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput) ToSwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient] {
	return pulumix.Output[[]SwitchControllerManagedSwitchDhcpSnoopingStaticClient]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchDhcpSnoopingStaticClient {
		return vs[0].([]SwitchControllerManagedSwitchDhcpSnoopingStaticClient)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput)
}

type SwitchControllerManagedSwitchIgmpSnooping struct {
	AgingTime             *int                                            `pulumi:"agingTime"`
	FloodUnknownMulticast *string                                         `pulumi:"floodUnknownMulticast"`
	LocalOverride         *string                                         `pulumi:"localOverride"`
	Vlans                 []SwitchControllerManagedSwitchIgmpSnoopingVlan `pulumi:"vlans"`
}

// SwitchControllerManagedSwitchIgmpSnoopingInput is an input type that accepts SwitchControllerManagedSwitchIgmpSnoopingArgs and SwitchControllerManagedSwitchIgmpSnoopingOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIgmpSnoopingInput` via:
//
//	SwitchControllerManagedSwitchIgmpSnoopingArgs{...}
type SwitchControllerManagedSwitchIgmpSnoopingInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIgmpSnoopingOutput() SwitchControllerManagedSwitchIgmpSnoopingOutput
	ToSwitchControllerManagedSwitchIgmpSnoopingOutputWithContext(context.Context) SwitchControllerManagedSwitchIgmpSnoopingOutput
}

type SwitchControllerManagedSwitchIgmpSnoopingArgs struct {
	AgingTime             pulumi.IntPtrInput                                      `pulumi:"agingTime"`
	FloodUnknownMulticast pulumi.StringPtrInput                                   `pulumi:"floodUnknownMulticast"`
	LocalOverride         pulumi.StringPtrInput                                   `pulumi:"localOverride"`
	Vlans                 SwitchControllerManagedSwitchIgmpSnoopingVlanArrayInput `pulumi:"vlans"`
}

func (SwitchControllerManagedSwitchIgmpSnoopingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnooping)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIgmpSnoopingArgs) ToSwitchControllerManagedSwitchIgmpSnoopingOutput() SwitchControllerManagedSwitchIgmpSnoopingOutput {
	return i.ToSwitchControllerManagedSwitchIgmpSnoopingOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIgmpSnoopingArgs) ToSwitchControllerManagedSwitchIgmpSnoopingOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIgmpSnoopingOutput)
}

func (i SwitchControllerManagedSwitchIgmpSnoopingArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIgmpSnooping] {
	return pulumix.Output[SwitchControllerManagedSwitchIgmpSnooping]{
		OutputState: i.ToSwitchControllerManagedSwitchIgmpSnoopingOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchIgmpSnoopingArgs) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutput() SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return i.ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIgmpSnoopingArgs) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIgmpSnoopingOutput).ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchIgmpSnoopingPtrInput is an input type that accepts SwitchControllerManagedSwitchIgmpSnoopingArgs, SwitchControllerManagedSwitchIgmpSnoopingPtr and SwitchControllerManagedSwitchIgmpSnoopingPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIgmpSnoopingPtrInput` via:
//
//	        SwitchControllerManagedSwitchIgmpSnoopingArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchIgmpSnoopingPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutput() SwitchControllerManagedSwitchIgmpSnoopingPtrOutput
	ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchIgmpSnoopingPtrOutput
}

type switchControllerManagedSwitchIgmpSnoopingPtrType SwitchControllerManagedSwitchIgmpSnoopingArgs

func SwitchControllerManagedSwitchIgmpSnoopingPtr(v *SwitchControllerManagedSwitchIgmpSnoopingArgs) SwitchControllerManagedSwitchIgmpSnoopingPtrInput {
	return (*switchControllerManagedSwitchIgmpSnoopingPtrType)(v)
}

func (*switchControllerManagedSwitchIgmpSnoopingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchIgmpSnooping)(nil)).Elem()
}

func (i *switchControllerManagedSwitchIgmpSnoopingPtrType) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutput() SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return i.ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchIgmpSnoopingPtrType) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIgmpSnoopingPtrOutput)
}

func (i *switchControllerManagedSwitchIgmpSnoopingPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchIgmpSnooping] {
	return pulumix.Output[*SwitchControllerManagedSwitchIgmpSnooping]{
		OutputState: i.ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchIgmpSnoopingOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIgmpSnoopingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnooping)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) ToSwitchControllerManagedSwitchIgmpSnoopingOutput() SwitchControllerManagedSwitchIgmpSnoopingOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) ToSwitchControllerManagedSwitchIgmpSnoopingOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutput() SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return o.ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchIgmpSnooping) *SwitchControllerManagedSwitchIgmpSnooping {
		return &v
	}).(SwitchControllerManagedSwitchIgmpSnoopingPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIgmpSnooping] {
	return pulumix.Output[SwitchControllerManagedSwitchIgmpSnooping]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) AgingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnooping) *int { return v.AgingTime }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) FloodUnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnooping) *string { return v.FloodUnknownMulticast }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnooping) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingOutput) Vlans() SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnooping) []SwitchControllerManagedSwitchIgmpSnoopingVlan {
		return v.Vlans
	}).(SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput)
}

type SwitchControllerManagedSwitchIgmpSnoopingPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchIgmpSnooping)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutput() SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) ToSwitchControllerManagedSwitchIgmpSnoopingPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchIgmpSnooping] {
	return pulumix.Output[*SwitchControllerManagedSwitchIgmpSnooping]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) Elem() SwitchControllerManagedSwitchIgmpSnoopingOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchIgmpSnooping) SwitchControllerManagedSwitchIgmpSnooping {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchIgmpSnooping
		return ret
	}).(SwitchControllerManagedSwitchIgmpSnoopingOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) AgingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchIgmpSnooping) *int {
		if v == nil {
			return nil
		}
		return v.AgingTime
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) FloodUnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchIgmpSnooping) *string {
		if v == nil {
			return nil
		}
		return v.FloodUnknownMulticast
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchIgmpSnooping) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingPtrOutput) Vlans() SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchIgmpSnooping) []SwitchControllerManagedSwitchIgmpSnoopingVlan {
		if v == nil {
			return nil
		}
		return v.Vlans
	}).(SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput)
}

type SwitchControllerManagedSwitchIgmpSnoopingVlan struct {
	Proxy       *string `pulumi:"proxy"`
	Querier     *string `pulumi:"querier"`
	QuerierAddr *string `pulumi:"querierAddr"`
	Version     *int    `pulumi:"version"`
	VlanName    *string `pulumi:"vlanName"`
}

// SwitchControllerManagedSwitchIgmpSnoopingVlanInput is an input type that accepts SwitchControllerManagedSwitchIgmpSnoopingVlanArgs and SwitchControllerManagedSwitchIgmpSnoopingVlanOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIgmpSnoopingVlanInput` via:
//
//	SwitchControllerManagedSwitchIgmpSnoopingVlanArgs{...}
type SwitchControllerManagedSwitchIgmpSnoopingVlanInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanOutput
	ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutputWithContext(context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanOutput
}

type SwitchControllerManagedSwitchIgmpSnoopingVlanArgs struct {
	Proxy       pulumi.StringPtrInput `pulumi:"proxy"`
	Querier     pulumi.StringPtrInput `pulumi:"querier"`
	QuerierAddr pulumi.StringPtrInput `pulumi:"querierAddr"`
	Version     pulumi.IntPtrInput    `pulumi:"version"`
	VlanName    pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerManagedSwitchIgmpSnoopingVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArgs) ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanOutput {
	return i.ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArgs) ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIgmpSnoopingVlanOutput)
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIgmpSnoopingVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchIgmpSnoopingVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchIgmpSnoopingVlanArrayInput is an input type that accepts SwitchControllerManagedSwitchIgmpSnoopingVlanArray and SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIgmpSnoopingVlanArrayInput` via:
//
//	SwitchControllerManagedSwitchIgmpSnoopingVlanArray{ SwitchControllerManagedSwitchIgmpSnoopingVlanArgs{...} }
type SwitchControllerManagedSwitchIgmpSnoopingVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput
	ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput
}

type SwitchControllerManagedSwitchIgmpSnoopingVlanArray []SwitchControllerManagedSwitchIgmpSnoopingVlanInput

func (SwitchControllerManagedSwitchIgmpSnoopingVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIgmpSnoopingVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArray) ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return i.ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArray) ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput)
}

func (i SwitchControllerManagedSwitchIgmpSnoopingVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIgmpSnoopingVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIgmpSnoopingVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchIgmpSnoopingVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) ToSwitchControllerManagedSwitchIgmpSnoopingVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIgmpSnoopingVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchIgmpSnoopingVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnoopingVlan) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) Querier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnoopingVlan) *string { return v.Querier }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) QuerierAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnoopingVlan) *string { return v.QuerierAddr }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnoopingVlan) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIgmpSnoopingVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIgmpSnoopingVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput) ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput() SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput) ToSwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIgmpSnoopingVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIgmpSnoopingVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchIgmpSnoopingVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchIgmpSnoopingVlan {
		return vs[0].([]SwitchControllerManagedSwitchIgmpSnoopingVlan)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchIgmpSnoopingVlanOutput)
}

type SwitchControllerManagedSwitchIpSourceGuard struct {
	BindingEntries []SwitchControllerManagedSwitchIpSourceGuardBindingEntry `pulumi:"bindingEntries"`
	Description    *string                                                  `pulumi:"description"`
	Port           *string                                                  `pulumi:"port"`
}

// SwitchControllerManagedSwitchIpSourceGuardInput is an input type that accepts SwitchControllerManagedSwitchIpSourceGuardArgs and SwitchControllerManagedSwitchIpSourceGuardOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIpSourceGuardInput` via:
//
//	SwitchControllerManagedSwitchIpSourceGuardArgs{...}
type SwitchControllerManagedSwitchIpSourceGuardInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIpSourceGuardOutput() SwitchControllerManagedSwitchIpSourceGuardOutput
	ToSwitchControllerManagedSwitchIpSourceGuardOutputWithContext(context.Context) SwitchControllerManagedSwitchIpSourceGuardOutput
}

type SwitchControllerManagedSwitchIpSourceGuardArgs struct {
	BindingEntries SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayInput `pulumi:"bindingEntries"`
	Description    pulumi.StringPtrInput                                            `pulumi:"description"`
	Port           pulumi.StringPtrInput                                            `pulumi:"port"`
}

func (SwitchControllerManagedSwitchIpSourceGuardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuard)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIpSourceGuardArgs) ToSwitchControllerManagedSwitchIpSourceGuardOutput() SwitchControllerManagedSwitchIpSourceGuardOutput {
	return i.ToSwitchControllerManagedSwitchIpSourceGuardOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIpSourceGuardArgs) ToSwitchControllerManagedSwitchIpSourceGuardOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIpSourceGuardOutput)
}

func (i SwitchControllerManagedSwitchIpSourceGuardArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIpSourceGuard] {
	return pulumix.Output[SwitchControllerManagedSwitchIpSourceGuard]{
		OutputState: i.ToSwitchControllerManagedSwitchIpSourceGuardOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchIpSourceGuardArrayInput is an input type that accepts SwitchControllerManagedSwitchIpSourceGuardArray and SwitchControllerManagedSwitchIpSourceGuardArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIpSourceGuardArrayInput` via:
//
//	SwitchControllerManagedSwitchIpSourceGuardArray{ SwitchControllerManagedSwitchIpSourceGuardArgs{...} }
type SwitchControllerManagedSwitchIpSourceGuardArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIpSourceGuardArrayOutput() SwitchControllerManagedSwitchIpSourceGuardArrayOutput
	ToSwitchControllerManagedSwitchIpSourceGuardArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchIpSourceGuardArrayOutput
}

type SwitchControllerManagedSwitchIpSourceGuardArray []SwitchControllerManagedSwitchIpSourceGuardInput

func (SwitchControllerManagedSwitchIpSourceGuardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIpSourceGuard)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIpSourceGuardArray) ToSwitchControllerManagedSwitchIpSourceGuardArrayOutput() SwitchControllerManagedSwitchIpSourceGuardArrayOutput {
	return i.ToSwitchControllerManagedSwitchIpSourceGuardArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIpSourceGuardArray) ToSwitchControllerManagedSwitchIpSourceGuardArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIpSourceGuardArrayOutput)
}

func (i SwitchControllerManagedSwitchIpSourceGuardArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuard] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuard]{
		OutputState: i.ToSwitchControllerManagedSwitchIpSourceGuardArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchIpSourceGuardOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIpSourceGuardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuard)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) ToSwitchControllerManagedSwitchIpSourceGuardOutput() SwitchControllerManagedSwitchIpSourceGuardOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) ToSwitchControllerManagedSwitchIpSourceGuardOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIpSourceGuard] {
	return pulumix.Output[SwitchControllerManagedSwitchIpSourceGuard]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) BindingEntries() SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuard) []SwitchControllerManagedSwitchIpSourceGuardBindingEntry {
		return v.BindingEntries
	}).(SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput)
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuard) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIpSourceGuardOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuard) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchIpSourceGuardArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIpSourceGuardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIpSourceGuard)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIpSourceGuardArrayOutput) ToSwitchControllerManagedSwitchIpSourceGuardArrayOutput() SwitchControllerManagedSwitchIpSourceGuardArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardArrayOutput) ToSwitchControllerManagedSwitchIpSourceGuardArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuard] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuard]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIpSourceGuardArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchIpSourceGuardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchIpSourceGuard {
		return vs[0].([]SwitchControllerManagedSwitchIpSourceGuard)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchIpSourceGuardOutput)
}

type SwitchControllerManagedSwitchIpSourceGuardBindingEntry struct {
	EntryName *string `pulumi:"entryName"`
	Ip        *string `pulumi:"ip"`
	Mac       *string `pulumi:"mac"`
}

// SwitchControllerManagedSwitchIpSourceGuardBindingEntryInput is an input type that accepts SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs and SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIpSourceGuardBindingEntryInput` via:
//
//	SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs{...}
type SwitchControllerManagedSwitchIpSourceGuardBindingEntryInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput
	ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutputWithContext(context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput
}

type SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs struct {
	EntryName pulumi.StringPtrInput `pulumi:"entryName"`
	Ip        pulumi.StringPtrInput `pulumi:"ip"`
	Mac       pulumi.StringPtrInput `pulumi:"mac"`
}

func (SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput {
	return i.ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput)
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIpSourceGuardBindingEntry] {
	return pulumix.Output[SwitchControllerManagedSwitchIpSourceGuardBindingEntry]{
		OutputState: i.ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayInput is an input type that accepts SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray and SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayInput` via:
//
//	SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray{ SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs{...} }
type SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput
	ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput
}

type SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray []SwitchControllerManagedSwitchIpSourceGuardBindingEntryInput

func (SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput {
	return i.ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput)
}

func (i SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry]{
		OutputState: i.ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchIpSourceGuardBindingEntry] {
	return pulumix.Output[SwitchControllerManagedSwitchIpSourceGuardBindingEntry]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) EntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuardBindingEntry) *string { return v.EntryName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuardBindingEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchIpSourceGuardBindingEntry) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput() SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput) ToSwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry] {
	return pulumix.Output[[]SwitchControllerManagedSwitchIpSourceGuardBindingEntry]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchIpSourceGuardBindingEntry {
		return vs[0].([]SwitchControllerManagedSwitchIpSourceGuardBindingEntry)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput)
}

type SwitchControllerManagedSwitchMirror struct {
	Dst             *string                                         `pulumi:"dst"`
	Name            *string                                         `pulumi:"name"`
	SrcEgresses     []SwitchControllerManagedSwitchMirrorSrcEgress  `pulumi:"srcEgresses"`
	SrcIngresses    []SwitchControllerManagedSwitchMirrorSrcIngress `pulumi:"srcIngresses"`
	Status          *string                                         `pulumi:"status"`
	SwitchingPacket *string                                         `pulumi:"switchingPacket"`
}

// SwitchControllerManagedSwitchMirrorInput is an input type that accepts SwitchControllerManagedSwitchMirrorArgs and SwitchControllerManagedSwitchMirrorOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorInput` via:
//
//	SwitchControllerManagedSwitchMirrorArgs{...}
type SwitchControllerManagedSwitchMirrorInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorOutput() SwitchControllerManagedSwitchMirrorOutput
	ToSwitchControllerManagedSwitchMirrorOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorOutput
}

type SwitchControllerManagedSwitchMirrorArgs struct {
	Dst             pulumi.StringPtrInput                                   `pulumi:"dst"`
	Name            pulumi.StringPtrInput                                   `pulumi:"name"`
	SrcEgresses     SwitchControllerManagedSwitchMirrorSrcEgressArrayInput  `pulumi:"srcEgresses"`
	SrcIngresses    SwitchControllerManagedSwitchMirrorSrcIngressArrayInput `pulumi:"srcIngresses"`
	Status          pulumi.StringPtrInput                                   `pulumi:"status"`
	SwitchingPacket pulumi.StringPtrInput                                   `pulumi:"switchingPacket"`
}

func (SwitchControllerManagedSwitchMirrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirror)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorArgs) ToSwitchControllerManagedSwitchMirrorOutput() SwitchControllerManagedSwitchMirrorOutput {
	return i.ToSwitchControllerManagedSwitchMirrorOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorArgs) ToSwitchControllerManagedSwitchMirrorOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorOutput)
}

func (i SwitchControllerManagedSwitchMirrorArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirror] {
	return pulumix.Output[SwitchControllerManagedSwitchMirror]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchMirrorArrayInput is an input type that accepts SwitchControllerManagedSwitchMirrorArray and SwitchControllerManagedSwitchMirrorArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorArrayInput` via:
//
//	SwitchControllerManagedSwitchMirrorArray{ SwitchControllerManagedSwitchMirrorArgs{...} }
type SwitchControllerManagedSwitchMirrorArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorArrayOutput() SwitchControllerManagedSwitchMirrorArrayOutput
	ToSwitchControllerManagedSwitchMirrorArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorArrayOutput
}

type SwitchControllerManagedSwitchMirrorArray []SwitchControllerManagedSwitchMirrorInput

func (SwitchControllerManagedSwitchMirrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirror)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorArray) ToSwitchControllerManagedSwitchMirrorArrayOutput() SwitchControllerManagedSwitchMirrorArrayOutput {
	return i.ToSwitchControllerManagedSwitchMirrorArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorArray) ToSwitchControllerManagedSwitchMirrorArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorArrayOutput)
}

func (i SwitchControllerManagedSwitchMirrorArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirror] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirror]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchMirrorOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirror)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorOutput) ToSwitchControllerManagedSwitchMirrorOutput() SwitchControllerManagedSwitchMirrorOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorOutput) ToSwitchControllerManagedSwitchMirrorOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirror] {
	return pulumix.Output[SwitchControllerManagedSwitchMirror]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchMirrorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchMirrorOutput) SrcEgresses() SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) []SwitchControllerManagedSwitchMirrorSrcEgress {
		return v.SrcEgresses
	}).(SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput)
}

func (o SwitchControllerManagedSwitchMirrorOutput) SrcIngresses() SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) []SwitchControllerManagedSwitchMirrorSrcIngress {
		return v.SrcIngresses
	}).(SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput)
}

func (o SwitchControllerManagedSwitchMirrorOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchMirrorOutput) SwitchingPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirror) *string { return v.SwitchingPacket }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchMirrorArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirror)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorArrayOutput) ToSwitchControllerManagedSwitchMirrorArrayOutput() SwitchControllerManagedSwitchMirrorArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorArrayOutput) ToSwitchControllerManagedSwitchMirrorArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirror] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirror]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchMirrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchMirror {
		return vs[0].([]SwitchControllerManagedSwitchMirror)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchMirrorOutput)
}

type SwitchControllerManagedSwitchMirrorSrcEgress struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerManagedSwitchMirrorSrcEgressInput is an input type that accepts SwitchControllerManagedSwitchMirrorSrcEgressArgs and SwitchControllerManagedSwitchMirrorSrcEgressOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorSrcEgressInput` via:
//
//	SwitchControllerManagedSwitchMirrorSrcEgressArgs{...}
type SwitchControllerManagedSwitchMirrorSrcEgressInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorSrcEgressOutput() SwitchControllerManagedSwitchMirrorSrcEgressOutput
	ToSwitchControllerManagedSwitchMirrorSrcEgressOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorSrcEgressOutput
}

type SwitchControllerManagedSwitchMirrorSrcEgressArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerManagedSwitchMirrorSrcEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcEgress)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArgs) ToSwitchControllerManagedSwitchMirrorSrcEgressOutput() SwitchControllerManagedSwitchMirrorSrcEgressOutput {
	return i.ToSwitchControllerManagedSwitchMirrorSrcEgressOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArgs) ToSwitchControllerManagedSwitchMirrorSrcEgressOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorSrcEgressOutput)
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirrorSrcEgress] {
	return pulumix.Output[SwitchControllerManagedSwitchMirrorSrcEgress]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorSrcEgressOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchMirrorSrcEgressArrayInput is an input type that accepts SwitchControllerManagedSwitchMirrorSrcEgressArray and SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorSrcEgressArrayInput` via:
//
//	SwitchControllerManagedSwitchMirrorSrcEgressArray{ SwitchControllerManagedSwitchMirrorSrcEgressArgs{...} }
type SwitchControllerManagedSwitchMirrorSrcEgressArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutput() SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput
	ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput
}

type SwitchControllerManagedSwitchMirrorSrcEgressArray []SwitchControllerManagedSwitchMirrorSrcEgressInput

func (SwitchControllerManagedSwitchMirrorSrcEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirrorSrcEgress)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArray) ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutput() SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput {
	return i.ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArray) ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput)
}

func (i SwitchControllerManagedSwitchMirrorSrcEgressArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcEgress] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcEgress]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchMirrorSrcEgressOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorSrcEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcEgress)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressOutput) ToSwitchControllerManagedSwitchMirrorSrcEgressOutput() SwitchControllerManagedSwitchMirrorSrcEgressOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressOutput) ToSwitchControllerManagedSwitchMirrorSrcEgressOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcEgressOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirrorSrcEgress] {
	return pulumix.Output[SwitchControllerManagedSwitchMirrorSrcEgress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirrorSrcEgress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirrorSrcEgress)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput) ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutput() SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput) ToSwitchControllerManagedSwitchMirrorSrcEgressArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcEgress] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcEgress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchMirrorSrcEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchMirrorSrcEgress {
		return vs[0].([]SwitchControllerManagedSwitchMirrorSrcEgress)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchMirrorSrcEgressOutput)
}

type SwitchControllerManagedSwitchMirrorSrcIngress struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerManagedSwitchMirrorSrcIngressInput is an input type that accepts SwitchControllerManagedSwitchMirrorSrcIngressArgs and SwitchControllerManagedSwitchMirrorSrcIngressOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorSrcIngressInput` via:
//
//	SwitchControllerManagedSwitchMirrorSrcIngressArgs{...}
type SwitchControllerManagedSwitchMirrorSrcIngressInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorSrcIngressOutput() SwitchControllerManagedSwitchMirrorSrcIngressOutput
	ToSwitchControllerManagedSwitchMirrorSrcIngressOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorSrcIngressOutput
}

type SwitchControllerManagedSwitchMirrorSrcIngressArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerManagedSwitchMirrorSrcIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcIngress)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArgs) ToSwitchControllerManagedSwitchMirrorSrcIngressOutput() SwitchControllerManagedSwitchMirrorSrcIngressOutput {
	return i.ToSwitchControllerManagedSwitchMirrorSrcIngressOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArgs) ToSwitchControllerManagedSwitchMirrorSrcIngressOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorSrcIngressOutput)
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirrorSrcIngress] {
	return pulumix.Output[SwitchControllerManagedSwitchMirrorSrcIngress]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorSrcIngressOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchMirrorSrcIngressArrayInput is an input type that accepts SwitchControllerManagedSwitchMirrorSrcIngressArray and SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchMirrorSrcIngressArrayInput` via:
//
//	SwitchControllerManagedSwitchMirrorSrcIngressArray{ SwitchControllerManagedSwitchMirrorSrcIngressArgs{...} }
type SwitchControllerManagedSwitchMirrorSrcIngressArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutput() SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput
	ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput
}

type SwitchControllerManagedSwitchMirrorSrcIngressArray []SwitchControllerManagedSwitchMirrorSrcIngressInput

func (SwitchControllerManagedSwitchMirrorSrcIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirrorSrcIngress)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArray) ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutput() SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput {
	return i.ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArray) ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput)
}

func (i SwitchControllerManagedSwitchMirrorSrcIngressArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcIngress] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcIngress]{
		OutputState: i.ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchMirrorSrcIngressOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorSrcIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcIngress)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressOutput) ToSwitchControllerManagedSwitchMirrorSrcIngressOutput() SwitchControllerManagedSwitchMirrorSrcIngressOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressOutput) ToSwitchControllerManagedSwitchMirrorSrcIngressOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcIngressOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchMirrorSrcIngress] {
	return pulumix.Output[SwitchControllerManagedSwitchMirrorSrcIngress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchMirrorSrcIngress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchMirrorSrcIngress)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput) ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutput() SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput) ToSwitchControllerManagedSwitchMirrorSrcIngressArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcIngress] {
	return pulumix.Output[[]SwitchControllerManagedSwitchMirrorSrcIngress]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchMirrorSrcIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchMirrorSrcIngress {
		return vs[0].([]SwitchControllerManagedSwitchMirrorSrcIngress)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchMirrorSrcIngressOutput)
}

type SwitchControllerManagedSwitchN8021xSettings struct {
	LinkDownAuth     *string `pulumi:"linkDownAuth"`
	LocalOverride    *string `pulumi:"localOverride"`
	MabReauth        *string `pulumi:"mabReauth"`
	MaxReauthAttempt *int    `pulumi:"maxReauthAttempt"`
	ReauthPeriod     *int    `pulumi:"reauthPeriod"`
	TxPeriod         *int    `pulumi:"txPeriod"`
}

// SwitchControllerManagedSwitchN8021xSettingsInput is an input type that accepts SwitchControllerManagedSwitchN8021xSettingsArgs and SwitchControllerManagedSwitchN8021xSettingsOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchN8021xSettingsInput` via:
//
//	SwitchControllerManagedSwitchN8021xSettingsArgs{...}
type SwitchControllerManagedSwitchN8021xSettingsInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchN8021xSettingsOutput() SwitchControllerManagedSwitchN8021xSettingsOutput
	ToSwitchControllerManagedSwitchN8021xSettingsOutputWithContext(context.Context) SwitchControllerManagedSwitchN8021xSettingsOutput
}

type SwitchControllerManagedSwitchN8021xSettingsArgs struct {
	LinkDownAuth     pulumi.StringPtrInput `pulumi:"linkDownAuth"`
	LocalOverride    pulumi.StringPtrInput `pulumi:"localOverride"`
	MabReauth        pulumi.StringPtrInput `pulumi:"mabReauth"`
	MaxReauthAttempt pulumi.IntPtrInput    `pulumi:"maxReauthAttempt"`
	ReauthPeriod     pulumi.IntPtrInput    `pulumi:"reauthPeriod"`
	TxPeriod         pulumi.IntPtrInput    `pulumi:"txPeriod"`
}

func (SwitchControllerManagedSwitchN8021xSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchN8021xSettings)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchN8021xSettingsArgs) ToSwitchControllerManagedSwitchN8021xSettingsOutput() SwitchControllerManagedSwitchN8021xSettingsOutput {
	return i.ToSwitchControllerManagedSwitchN8021xSettingsOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchN8021xSettingsArgs) ToSwitchControllerManagedSwitchN8021xSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchN8021xSettingsOutput)
}

func (i SwitchControllerManagedSwitchN8021xSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchN8021xSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchN8021xSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchN8021xSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchN8021xSettingsArgs) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutput() SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchN8021xSettingsArgs) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchN8021xSettingsOutput).ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchN8021xSettingsPtrInput is an input type that accepts SwitchControllerManagedSwitchN8021xSettingsArgs, SwitchControllerManagedSwitchN8021xSettingsPtr and SwitchControllerManagedSwitchN8021xSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchN8021xSettingsPtrInput` via:
//
//	        SwitchControllerManagedSwitchN8021xSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchN8021xSettingsPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchN8021xSettingsPtrOutput() SwitchControllerManagedSwitchN8021xSettingsPtrOutput
	ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchN8021xSettingsPtrOutput
}

type switchControllerManagedSwitchN8021xSettingsPtrType SwitchControllerManagedSwitchN8021xSettingsArgs

func SwitchControllerManagedSwitchN8021xSettingsPtr(v *SwitchControllerManagedSwitchN8021xSettingsArgs) SwitchControllerManagedSwitchN8021xSettingsPtrInput {
	return (*switchControllerManagedSwitchN8021xSettingsPtrType)(v)
}

func (*switchControllerManagedSwitchN8021xSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchN8021xSettings)(nil)).Elem()
}

func (i *switchControllerManagedSwitchN8021xSettingsPtrType) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutput() SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchN8021xSettingsPtrType) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchN8021xSettingsPtrOutput)
}

func (i *switchControllerManagedSwitchN8021xSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchN8021xSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchN8021xSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchN8021xSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchN8021xSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchN8021xSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ToSwitchControllerManagedSwitchN8021xSettingsOutput() SwitchControllerManagedSwitchN8021xSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ToSwitchControllerManagedSwitchN8021xSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutput() SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return o.ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchN8021xSettings) *SwitchControllerManagedSwitchN8021xSettings {
		return &v
	}).(SwitchControllerManagedSwitchN8021xSettingsPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchN8021xSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchN8021xSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) LinkDownAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *string { return v.LinkDownAuth }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) MabReauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *string { return v.MabReauth }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) MaxReauthAttempt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *int { return v.MaxReauthAttempt }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) ReauthPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *int { return v.ReauthPeriod }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsOutput) TxPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchN8021xSettings) *int { return v.TxPeriod }).(pulumi.IntPtrOutput)
}

type SwitchControllerManagedSwitchN8021xSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchN8021xSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchN8021xSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutput() SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) ToSwitchControllerManagedSwitchN8021xSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchN8021xSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchN8021xSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchN8021xSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) Elem() SwitchControllerManagedSwitchN8021xSettingsOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) SwitchControllerManagedSwitchN8021xSettings {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchN8021xSettings
		return ret
	}).(SwitchControllerManagedSwitchN8021xSettingsOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) LinkDownAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.LinkDownAuth
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) MabReauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *string {
		if v == nil {
			return nil
		}
		return v.MabReauth
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) MaxReauthAttempt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxReauthAttempt
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) ReauthPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReauthPeriod
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchN8021xSettingsPtrOutput) TxPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchN8021xSettings) *int {
		if v == nil {
			return nil
		}
		return v.TxPeriod
	}).(pulumi.IntPtrOutput)
}

type SwitchControllerManagedSwitchPort struct {
	AccessMode                 *string                                                      `pulumi:"accessMode"`
	AclGroups                  []SwitchControllerManagedSwitchPortAclGroup                  `pulumi:"aclGroups"`
	AggregatorMode             *string                                                      `pulumi:"aggregatorMode"`
	AllowedVlans               []SwitchControllerManagedSwitchPortAllowedVlan               `pulumi:"allowedVlans"`
	AllowedVlansAll            *string                                                      `pulumi:"allowedVlansAll"`
	ArpInspectionTrust         *string                                                      `pulumi:"arpInspectionTrust"`
	AuthenticatedPort          *int                                                         `pulumi:"authenticatedPort"`
	Bundle                     *string                                                      `pulumi:"bundle"`
	Description                *string                                                      `pulumi:"description"`
	DhcpSnoopOption82Overrides []SwitchControllerManagedSwitchPortDhcpSnoopOption82Override `pulumi:"dhcpSnoopOption82Overrides"`
	DhcpSnoopOption82Trust     *string                                                      `pulumi:"dhcpSnoopOption82Trust"`
	DhcpSnooping               *string                                                      `pulumi:"dhcpSnooping"`
	DiscardMode                *string                                                      `pulumi:"discardMode"`
	EdgePort                   *string                                                      `pulumi:"edgePort"`
	EncryptedPort              *int                                                         `pulumi:"encryptedPort"`
	ExportTags                 []SwitchControllerManagedSwitchPortExportTag                 `pulumi:"exportTags"`
	ExportTo                   *string                                                      `pulumi:"exportTo"`
	ExportToPool               *string                                                      `pulumi:"exportToPool"`
	ExportToPoolFlag           *int                                                         `pulumi:"exportToPoolFlag"`
	FecCapable                 *int                                                         `pulumi:"fecCapable"`
	FecState                   *string                                                      `pulumi:"fecState"`
	FgtPeerDeviceName          *string                                                      `pulumi:"fgtPeerDeviceName"`
	FgtPeerPortName            *string                                                      `pulumi:"fgtPeerPortName"`
	FiberPort                  *int                                                         `pulumi:"fiberPort"`
	Flags                      *int                                                         `pulumi:"flags"`
	FlapDuration               *int                                                         `pulumi:"flapDuration"`
	FlapRate                   *int                                                         `pulumi:"flapRate"`
	FlapTimeout                *int                                                         `pulumi:"flapTimeout"`
	Flapguard                  *string                                                      `pulumi:"flapguard"`
	FlowControl                *string                                                      `pulumi:"flowControl"`
	FortilinkPort              *int                                                         `pulumi:"fortilinkPort"`
	FortiswitchAcls            []SwitchControllerManagedSwitchPortFortiswitchAcl            `pulumi:"fortiswitchAcls"`
	IgmpSnooping               *string                                                      `pulumi:"igmpSnooping"`
	IgmpSnoopingFloodReports   *string                                                      `pulumi:"igmpSnoopingFloodReports"`
	IgmpsFloodReports          *string                                                      `pulumi:"igmpsFloodReports"`
	IgmpsFloodTraffic          *string                                                      `pulumi:"igmpsFloodTraffic"`
	InterfaceTags              []SwitchControllerManagedSwitchPortInterfaceTag              `pulumi:"interfaceTags"`
	IpSourceGuard              *string                                                      `pulumi:"ipSourceGuard"`
	IslLocalTrunkName          *string                                                      `pulumi:"islLocalTrunkName"`
	IslPeerDeviceName          *string                                                      `pulumi:"islPeerDeviceName"`
	IslPeerDeviceSn            *string                                                      `pulumi:"islPeerDeviceSn"`
	IslPeerPortName            *string                                                      `pulumi:"islPeerPortName"`
	LacpSpeed                  *string                                                      `pulumi:"lacpSpeed"`
	LearningLimit              *int                                                         `pulumi:"learningLimit"`
	LinkStatus                 *string                                                      `pulumi:"linkStatus"`
	LldpProfile                *string                                                      `pulumi:"lldpProfile"`
	LldpStatus                 *string                                                      `pulumi:"lldpStatus"`
	LoopGuard                  *string                                                      `pulumi:"loopGuard"`
	LoopGuardTimeout           *int                                                         `pulumi:"loopGuardTimeout"`
	MacAddr                    *string                                                      `pulumi:"macAddr"`
	MatchedDppIntfTags         *string                                                      `pulumi:"matchedDppIntfTags"`
	MatchedDppPolicy           *string                                                      `pulumi:"matchedDppPolicy"`
	MaxBundle                  *int                                                         `pulumi:"maxBundle"`
	McastSnoopingFloodTraffic  *string                                                      `pulumi:"mcastSnoopingFloodTraffic"`
	Mclag                      *string                                                      `pulumi:"mclag"`
	MclagIclPort               *int                                                         `pulumi:"mclagIclPort"`
	MediaType                  *string                                                      `pulumi:"mediaType"`
	MemberWithdrawalBehavior   *string                                                      `pulumi:"memberWithdrawalBehavior"`
	Members                    []SwitchControllerManagedSwitchPortMember                    `pulumi:"members"`
	MinBundle                  *int                                                         `pulumi:"minBundle"`
	Mode                       *string                                                      `pulumi:"mode"`
	P2pPort                    *int                                                         `pulumi:"p2pPort"`
	PacketSampleRate           *int                                                         `pulumi:"packetSampleRate"`
	PacketSampler              *string                                                      `pulumi:"packetSampler"`
	PauseMeter                 *int                                                         `pulumi:"pauseMeter"`
	PauseMeterResume           *string                                                      `pulumi:"pauseMeterResume"`
	PoeCapable                 *int                                                         `pulumi:"poeCapable"`
	PoeMaxPower                *string                                                      `pulumi:"poeMaxPower"`
	PoeModeBtCabable           *int                                                         `pulumi:"poeModeBtCabable"`
	PoePortMode                *string                                                      `pulumi:"poePortMode"`
	PoePortPower               *string                                                      `pulumi:"poePortPower"`
	PoePortPriority            *string                                                      `pulumi:"poePortPriority"`
	PoePreStandardDetection    *string                                                      `pulumi:"poePreStandardDetection"`
	PoeStandard                *string                                                      `pulumi:"poeStandard"`
	PoeStatus                  *string                                                      `pulumi:"poeStatus"`
	PortName                   *string                                                      `pulumi:"portName"`
	PortNumber                 *int                                                         `pulumi:"portNumber"`
	PortOwner                  *string                                                      `pulumi:"portOwner"`
	PortPolicy                 *string                                                      `pulumi:"portPolicy"`
	PortPrefixType             *int                                                         `pulumi:"portPrefixType"`
	PortSecurityPolicy         *string                                                      `pulumi:"portSecurityPolicy"`
	PortSelectionCriteria      *string                                                      `pulumi:"portSelectionCriteria"`
	PtpPolicy                  *string                                                      `pulumi:"ptpPolicy"`
	PtpStatus                  *string                                                      `pulumi:"ptpStatus"`
	QosPolicy                  *string                                                      `pulumi:"qosPolicy"`
	RestrictedAuthPort         *int                                                         `pulumi:"restrictedAuthPort"`
	RpvstPort                  *string                                                      `pulumi:"rpvstPort"`
	SampleDirection            *string                                                      `pulumi:"sampleDirection"`
	SflowCounterInterval       *int                                                         `pulumi:"sflowCounterInterval"`
	SflowSampleRate            *int                                                         `pulumi:"sflowSampleRate"`
	SflowSampler               *string                                                      `pulumi:"sflowSampler"`
	Speed                      *string                                                      `pulumi:"speed"`
	SpeedMask                  *int                                                         `pulumi:"speedMask"`
	StackingPort               *int                                                         `pulumi:"stackingPort"`
	Status                     *string                                                      `pulumi:"status"`
	StickyMac                  *string                                                      `pulumi:"stickyMac"`
	StormControlPolicy         *string                                                      `pulumi:"stormControlPolicy"`
	StpBpduGuard               *string                                                      `pulumi:"stpBpduGuard"`
	StpBpduGuardTimeout        *int                                                         `pulumi:"stpBpduGuardTimeout"`
	StpRootGuard               *string                                                      `pulumi:"stpRootGuard"`
	StpState                   *string                                                      `pulumi:"stpState"`
	SwitchId                   *string                                                      `pulumi:"switchId"`
	Type                       *string                                                      `pulumi:"type"`
	UntaggedVlans              []SwitchControllerManagedSwitchPortUntaggedVlan              `pulumi:"untaggedVlans"`
	VirtualPort                *int                                                         `pulumi:"virtualPort"`
	Vlan                       *string                                                      `pulumi:"vlan"`
}

// SwitchControllerManagedSwitchPortInput is an input type that accepts SwitchControllerManagedSwitchPortArgs and SwitchControllerManagedSwitchPortOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortInput` via:
//
//	SwitchControllerManagedSwitchPortArgs{...}
type SwitchControllerManagedSwitchPortInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortOutput() SwitchControllerManagedSwitchPortOutput
	ToSwitchControllerManagedSwitchPortOutputWithContext(context.Context) SwitchControllerManagedSwitchPortOutput
}

type SwitchControllerManagedSwitchPortArgs struct {
	AccessMode                 pulumi.StringPtrInput                                                `pulumi:"accessMode"`
	AclGroups                  SwitchControllerManagedSwitchPortAclGroupArrayInput                  `pulumi:"aclGroups"`
	AggregatorMode             pulumi.StringPtrInput                                                `pulumi:"aggregatorMode"`
	AllowedVlans               SwitchControllerManagedSwitchPortAllowedVlanArrayInput               `pulumi:"allowedVlans"`
	AllowedVlansAll            pulumi.StringPtrInput                                                `pulumi:"allowedVlansAll"`
	ArpInspectionTrust         pulumi.StringPtrInput                                                `pulumi:"arpInspectionTrust"`
	AuthenticatedPort          pulumi.IntPtrInput                                                   `pulumi:"authenticatedPort"`
	Bundle                     pulumi.StringPtrInput                                                `pulumi:"bundle"`
	Description                pulumi.StringPtrInput                                                `pulumi:"description"`
	DhcpSnoopOption82Overrides SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayInput `pulumi:"dhcpSnoopOption82Overrides"`
	DhcpSnoopOption82Trust     pulumi.StringPtrInput                                                `pulumi:"dhcpSnoopOption82Trust"`
	DhcpSnooping               pulumi.StringPtrInput                                                `pulumi:"dhcpSnooping"`
	DiscardMode                pulumi.StringPtrInput                                                `pulumi:"discardMode"`
	EdgePort                   pulumi.StringPtrInput                                                `pulumi:"edgePort"`
	EncryptedPort              pulumi.IntPtrInput                                                   `pulumi:"encryptedPort"`
	ExportTags                 SwitchControllerManagedSwitchPortExportTagArrayInput                 `pulumi:"exportTags"`
	ExportTo                   pulumi.StringPtrInput                                                `pulumi:"exportTo"`
	ExportToPool               pulumi.StringPtrInput                                                `pulumi:"exportToPool"`
	ExportToPoolFlag           pulumi.IntPtrInput                                                   `pulumi:"exportToPoolFlag"`
	FecCapable                 pulumi.IntPtrInput                                                   `pulumi:"fecCapable"`
	FecState                   pulumi.StringPtrInput                                                `pulumi:"fecState"`
	FgtPeerDeviceName          pulumi.StringPtrInput                                                `pulumi:"fgtPeerDeviceName"`
	FgtPeerPortName            pulumi.StringPtrInput                                                `pulumi:"fgtPeerPortName"`
	FiberPort                  pulumi.IntPtrInput                                                   `pulumi:"fiberPort"`
	Flags                      pulumi.IntPtrInput                                                   `pulumi:"flags"`
	FlapDuration               pulumi.IntPtrInput                                                   `pulumi:"flapDuration"`
	FlapRate                   pulumi.IntPtrInput                                                   `pulumi:"flapRate"`
	FlapTimeout                pulumi.IntPtrInput                                                   `pulumi:"flapTimeout"`
	Flapguard                  pulumi.StringPtrInput                                                `pulumi:"flapguard"`
	FlowControl                pulumi.StringPtrInput                                                `pulumi:"flowControl"`
	FortilinkPort              pulumi.IntPtrInput                                                   `pulumi:"fortilinkPort"`
	FortiswitchAcls            SwitchControllerManagedSwitchPortFortiswitchAclArrayInput            `pulumi:"fortiswitchAcls"`
	IgmpSnooping               pulumi.StringPtrInput                                                `pulumi:"igmpSnooping"`
	IgmpSnoopingFloodReports   pulumi.StringPtrInput                                                `pulumi:"igmpSnoopingFloodReports"`
	IgmpsFloodReports          pulumi.StringPtrInput                                                `pulumi:"igmpsFloodReports"`
	IgmpsFloodTraffic          pulumi.StringPtrInput                                                `pulumi:"igmpsFloodTraffic"`
	InterfaceTags              SwitchControllerManagedSwitchPortInterfaceTagArrayInput              `pulumi:"interfaceTags"`
	IpSourceGuard              pulumi.StringPtrInput                                                `pulumi:"ipSourceGuard"`
	IslLocalTrunkName          pulumi.StringPtrInput                                                `pulumi:"islLocalTrunkName"`
	IslPeerDeviceName          pulumi.StringPtrInput                                                `pulumi:"islPeerDeviceName"`
	IslPeerDeviceSn            pulumi.StringPtrInput                                                `pulumi:"islPeerDeviceSn"`
	IslPeerPortName            pulumi.StringPtrInput                                                `pulumi:"islPeerPortName"`
	LacpSpeed                  pulumi.StringPtrInput                                                `pulumi:"lacpSpeed"`
	LearningLimit              pulumi.IntPtrInput                                                   `pulumi:"learningLimit"`
	LinkStatus                 pulumi.StringPtrInput                                                `pulumi:"linkStatus"`
	LldpProfile                pulumi.StringPtrInput                                                `pulumi:"lldpProfile"`
	LldpStatus                 pulumi.StringPtrInput                                                `pulumi:"lldpStatus"`
	LoopGuard                  pulumi.StringPtrInput                                                `pulumi:"loopGuard"`
	LoopGuardTimeout           pulumi.IntPtrInput                                                   `pulumi:"loopGuardTimeout"`
	MacAddr                    pulumi.StringPtrInput                                                `pulumi:"macAddr"`
	MatchedDppIntfTags         pulumi.StringPtrInput                                                `pulumi:"matchedDppIntfTags"`
	MatchedDppPolicy           pulumi.StringPtrInput                                                `pulumi:"matchedDppPolicy"`
	MaxBundle                  pulumi.IntPtrInput                                                   `pulumi:"maxBundle"`
	McastSnoopingFloodTraffic  pulumi.StringPtrInput                                                `pulumi:"mcastSnoopingFloodTraffic"`
	Mclag                      pulumi.StringPtrInput                                                `pulumi:"mclag"`
	MclagIclPort               pulumi.IntPtrInput                                                   `pulumi:"mclagIclPort"`
	MediaType                  pulumi.StringPtrInput                                                `pulumi:"mediaType"`
	MemberWithdrawalBehavior   pulumi.StringPtrInput                                                `pulumi:"memberWithdrawalBehavior"`
	Members                    SwitchControllerManagedSwitchPortMemberArrayInput                    `pulumi:"members"`
	MinBundle                  pulumi.IntPtrInput                                                   `pulumi:"minBundle"`
	Mode                       pulumi.StringPtrInput                                                `pulumi:"mode"`
	P2pPort                    pulumi.IntPtrInput                                                   `pulumi:"p2pPort"`
	PacketSampleRate           pulumi.IntPtrInput                                                   `pulumi:"packetSampleRate"`
	PacketSampler              pulumi.StringPtrInput                                                `pulumi:"packetSampler"`
	PauseMeter                 pulumi.IntPtrInput                                                   `pulumi:"pauseMeter"`
	PauseMeterResume           pulumi.StringPtrInput                                                `pulumi:"pauseMeterResume"`
	PoeCapable                 pulumi.IntPtrInput                                                   `pulumi:"poeCapable"`
	PoeMaxPower                pulumi.StringPtrInput                                                `pulumi:"poeMaxPower"`
	PoeModeBtCabable           pulumi.IntPtrInput                                                   `pulumi:"poeModeBtCabable"`
	PoePortMode                pulumi.StringPtrInput                                                `pulumi:"poePortMode"`
	PoePortPower               pulumi.StringPtrInput                                                `pulumi:"poePortPower"`
	PoePortPriority            pulumi.StringPtrInput                                                `pulumi:"poePortPriority"`
	PoePreStandardDetection    pulumi.StringPtrInput                                                `pulumi:"poePreStandardDetection"`
	PoeStandard                pulumi.StringPtrInput                                                `pulumi:"poeStandard"`
	PoeStatus                  pulumi.StringPtrInput                                                `pulumi:"poeStatus"`
	PortName                   pulumi.StringPtrInput                                                `pulumi:"portName"`
	PortNumber                 pulumi.IntPtrInput                                                   `pulumi:"portNumber"`
	PortOwner                  pulumi.StringPtrInput                                                `pulumi:"portOwner"`
	PortPolicy                 pulumi.StringPtrInput                                                `pulumi:"portPolicy"`
	PortPrefixType             pulumi.IntPtrInput                                                   `pulumi:"portPrefixType"`
	PortSecurityPolicy         pulumi.StringPtrInput                                                `pulumi:"portSecurityPolicy"`
	PortSelectionCriteria      pulumi.StringPtrInput                                                `pulumi:"portSelectionCriteria"`
	PtpPolicy                  pulumi.StringPtrInput                                                `pulumi:"ptpPolicy"`
	PtpStatus                  pulumi.StringPtrInput                                                `pulumi:"ptpStatus"`
	QosPolicy                  pulumi.StringPtrInput                                                `pulumi:"qosPolicy"`
	RestrictedAuthPort         pulumi.IntPtrInput                                                   `pulumi:"restrictedAuthPort"`
	RpvstPort                  pulumi.StringPtrInput                                                `pulumi:"rpvstPort"`
	SampleDirection            pulumi.StringPtrInput                                                `pulumi:"sampleDirection"`
	SflowCounterInterval       pulumi.IntPtrInput                                                   `pulumi:"sflowCounterInterval"`
	SflowSampleRate            pulumi.IntPtrInput                                                   `pulumi:"sflowSampleRate"`
	SflowSampler               pulumi.StringPtrInput                                                `pulumi:"sflowSampler"`
	Speed                      pulumi.StringPtrInput                                                `pulumi:"speed"`
	SpeedMask                  pulumi.IntPtrInput                                                   `pulumi:"speedMask"`
	StackingPort               pulumi.IntPtrInput                                                   `pulumi:"stackingPort"`
	Status                     pulumi.StringPtrInput                                                `pulumi:"status"`
	StickyMac                  pulumi.StringPtrInput                                                `pulumi:"stickyMac"`
	StormControlPolicy         pulumi.StringPtrInput                                                `pulumi:"stormControlPolicy"`
	StpBpduGuard               pulumi.StringPtrInput                                                `pulumi:"stpBpduGuard"`
	StpBpduGuardTimeout        pulumi.IntPtrInput                                                   `pulumi:"stpBpduGuardTimeout"`
	StpRootGuard               pulumi.StringPtrInput                                                `pulumi:"stpRootGuard"`
	StpState                   pulumi.StringPtrInput                                                `pulumi:"stpState"`
	SwitchId                   pulumi.StringPtrInput                                                `pulumi:"switchId"`
	Type                       pulumi.StringPtrInput                                                `pulumi:"type"`
	UntaggedVlans              SwitchControllerManagedSwitchPortUntaggedVlanArrayInput              `pulumi:"untaggedVlans"`
	VirtualPort                pulumi.IntPtrInput                                                   `pulumi:"virtualPort"`
	Vlan                       pulumi.StringPtrInput                                                `pulumi:"vlan"`
}

func (SwitchControllerManagedSwitchPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPort)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortArgs) ToSwitchControllerManagedSwitchPortOutput() SwitchControllerManagedSwitchPortOutput {
	return i.ToSwitchControllerManagedSwitchPortOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortArgs) ToSwitchControllerManagedSwitchPortOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortOutput)
}

func (i SwitchControllerManagedSwitchPortArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPort] {
	return pulumix.Output[SwitchControllerManagedSwitchPort]{
		OutputState: i.ToSwitchControllerManagedSwitchPortOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortArrayInput is an input type that accepts SwitchControllerManagedSwitchPortArray and SwitchControllerManagedSwitchPortArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortArrayInput` via:
//
//	SwitchControllerManagedSwitchPortArray{ SwitchControllerManagedSwitchPortArgs{...} }
type SwitchControllerManagedSwitchPortArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortArrayOutput() SwitchControllerManagedSwitchPortArrayOutput
	ToSwitchControllerManagedSwitchPortArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortArrayOutput
}

type SwitchControllerManagedSwitchPortArray []SwitchControllerManagedSwitchPortInput

func (SwitchControllerManagedSwitchPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPort)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortArray) ToSwitchControllerManagedSwitchPortArrayOutput() SwitchControllerManagedSwitchPortArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortArray) ToSwitchControllerManagedSwitchPortArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortArrayOutput)
}

func (i SwitchControllerManagedSwitchPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPort] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPort]{
		OutputState: i.ToSwitchControllerManagedSwitchPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPort)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortOutput) ToSwitchControllerManagedSwitchPortOutput() SwitchControllerManagedSwitchPortOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortOutput) ToSwitchControllerManagedSwitchPortOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPort] {
	return pulumix.Output[SwitchControllerManagedSwitchPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortOutput) AccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.AccessMode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) AclGroups() SwitchControllerManagedSwitchPortAclGroupArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortAclGroup {
		return v.AclGroups
	}).(SwitchControllerManagedSwitchPortAclGroupArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) AggregatorMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.AggregatorMode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) AllowedVlans() SwitchControllerManagedSwitchPortAllowedVlanArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortAllowedVlan {
		return v.AllowedVlans
	}).(SwitchControllerManagedSwitchPortAllowedVlanArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) AllowedVlansAll() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.AllowedVlansAll }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) ArpInspectionTrust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.ArpInspectionTrust }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) AuthenticatedPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.AuthenticatedPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Bundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Bundle }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) DhcpSnoopOption82Overrides() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortDhcpSnoopOption82Override {
		return v.DhcpSnoopOption82Overrides
	}).(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) DhcpSnoopOption82Trust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.DhcpSnoopOption82Trust }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) DhcpSnooping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.DhcpSnooping }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) DiscardMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.DiscardMode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) EdgePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.EdgePort }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) EncryptedPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.EncryptedPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) ExportTags() SwitchControllerManagedSwitchPortExportTagArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortExportTag {
		return v.ExportTags
	}).(SwitchControllerManagedSwitchPortExportTagArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) ExportTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.ExportTo }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) ExportToPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.ExportToPool }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) ExportToPoolFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.ExportToPoolFlag }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FecCapable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FecCapable }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FecState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.FecState }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FgtPeerDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.FgtPeerDeviceName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FgtPeerPortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.FgtPeerPortName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FiberPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FiberPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FlapDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FlapDuration }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FlapRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FlapRate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FlapTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FlapTimeout }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Flapguard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Flapguard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FlowControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.FlowControl }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FortilinkPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.FortilinkPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) FortiswitchAcls() SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortFortiswitchAcl {
		return v.FortiswitchAcls
	}).(SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IgmpSnooping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IgmpSnooping }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IgmpSnoopingFloodReports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IgmpSnoopingFloodReports }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IgmpsFloodReports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IgmpsFloodReports }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IgmpsFloodTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IgmpsFloodTraffic }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) InterfaceTags() SwitchControllerManagedSwitchPortInterfaceTagArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortInterfaceTag {
		return v.InterfaceTags
	}).(SwitchControllerManagedSwitchPortInterfaceTagArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IpSourceGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IpSourceGuard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IslLocalTrunkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IslLocalTrunkName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IslPeerDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IslPeerDeviceName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IslPeerDeviceSn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IslPeerDeviceSn }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) IslPeerPortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.IslPeerPortName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LacpSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.LacpSpeed }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LearningLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.LearningLimit }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LinkStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.LinkStatus }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LldpProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.LldpProfile }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LldpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.LldpStatus }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LoopGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.LoopGuard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) LoopGuardTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.LoopGuardTimeout }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MacAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.MacAddr }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MatchedDppIntfTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.MatchedDppIntfTags }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MatchedDppPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.MatchedDppPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MaxBundle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.MaxBundle }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) McastSnoopingFloodTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.McastSnoopingFloodTraffic }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Mclag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Mclag }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MclagIclPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.MclagIclPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MemberWithdrawalBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.MemberWithdrawalBehavior }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Members() SwitchControllerManagedSwitchPortMemberArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortMember { return v.Members }).(SwitchControllerManagedSwitchPortMemberArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) MinBundle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.MinBundle }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) P2pPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.P2pPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PacketSampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PacketSampleRate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PacketSampler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PacketSampler }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PauseMeter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PauseMeter }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PauseMeterResume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PauseMeterResume }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoeCapable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PoeCapable }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoeMaxPower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoeMaxPower }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoeModeBtCabable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PoeModeBtCabable }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoePortMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoePortMode }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoePortPower() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoePortPower }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoePortPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoePortPriority }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoePreStandardDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoePreStandardDetection }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoeStandard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoeStandard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PoeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PoeStatus }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PortNumber }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PortOwner }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PortPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortPrefixType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.PortPrefixType }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PortSecurityPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PortSelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PortSelectionCriteria }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PtpPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PtpPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) PtpStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.PtpStatus }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) QosPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.QosPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) RestrictedAuthPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.RestrictedAuthPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) RpvstPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.RpvstPort }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SampleDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.SampleDirection }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SflowCounterInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.SflowCounterInterval }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SflowSampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.SflowSampleRate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SflowSampler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.SflowSampler }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Speed }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SpeedMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.SpeedMask }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StackingPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.StackingPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StickyMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.StickyMac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StormControlPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.StormControlPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StpBpduGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.StpBpduGuard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StpBpduGuardTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.StpBpduGuardTimeout }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StpRootGuard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.StpRootGuard }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) StpState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.StpState }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) UntaggedVlans() SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) []SwitchControllerManagedSwitchPortUntaggedVlan {
		return v.UntaggedVlans
	}).(SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) VirtualPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *int { return v.VirtualPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchPortOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPort) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPort)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortArrayOutput) ToSwitchControllerManagedSwitchPortArrayOutput() SwitchControllerManagedSwitchPortArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortArrayOutput) ToSwitchControllerManagedSwitchPortArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPort] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPort {
		return vs[0].([]SwitchControllerManagedSwitchPort)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortOutput)
}

type SwitchControllerManagedSwitchPortAclGroup struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerManagedSwitchPortAclGroupInput is an input type that accepts SwitchControllerManagedSwitchPortAclGroupArgs and SwitchControllerManagedSwitchPortAclGroupOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortAclGroupInput` via:
//
//	SwitchControllerManagedSwitchPortAclGroupArgs{...}
type SwitchControllerManagedSwitchPortAclGroupInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortAclGroupOutput() SwitchControllerManagedSwitchPortAclGroupOutput
	ToSwitchControllerManagedSwitchPortAclGroupOutputWithContext(context.Context) SwitchControllerManagedSwitchPortAclGroupOutput
}

type SwitchControllerManagedSwitchPortAclGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerManagedSwitchPortAclGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortAclGroup)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortAclGroupArgs) ToSwitchControllerManagedSwitchPortAclGroupOutput() SwitchControllerManagedSwitchPortAclGroupOutput {
	return i.ToSwitchControllerManagedSwitchPortAclGroupOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortAclGroupArgs) ToSwitchControllerManagedSwitchPortAclGroupOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAclGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortAclGroupOutput)
}

func (i SwitchControllerManagedSwitchPortAclGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortAclGroup] {
	return pulumix.Output[SwitchControllerManagedSwitchPortAclGroup]{
		OutputState: i.ToSwitchControllerManagedSwitchPortAclGroupOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortAclGroupArrayInput is an input type that accepts SwitchControllerManagedSwitchPortAclGroupArray and SwitchControllerManagedSwitchPortAclGroupArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortAclGroupArrayInput` via:
//
//	SwitchControllerManagedSwitchPortAclGroupArray{ SwitchControllerManagedSwitchPortAclGroupArgs{...} }
type SwitchControllerManagedSwitchPortAclGroupArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortAclGroupArrayOutput() SwitchControllerManagedSwitchPortAclGroupArrayOutput
	ToSwitchControllerManagedSwitchPortAclGroupArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortAclGroupArrayOutput
}

type SwitchControllerManagedSwitchPortAclGroupArray []SwitchControllerManagedSwitchPortAclGroupInput

func (SwitchControllerManagedSwitchPortAclGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortAclGroup)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortAclGroupArray) ToSwitchControllerManagedSwitchPortAclGroupArrayOutput() SwitchControllerManagedSwitchPortAclGroupArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortAclGroupArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortAclGroupArray) ToSwitchControllerManagedSwitchPortAclGroupArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAclGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortAclGroupArrayOutput)
}

func (i SwitchControllerManagedSwitchPortAclGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortAclGroup] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortAclGroup]{
		OutputState: i.ToSwitchControllerManagedSwitchPortAclGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortAclGroupOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortAclGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortAclGroup)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortAclGroupOutput) ToSwitchControllerManagedSwitchPortAclGroupOutput() SwitchControllerManagedSwitchPortAclGroupOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAclGroupOutput) ToSwitchControllerManagedSwitchPortAclGroupOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAclGroupOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAclGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortAclGroup] {
	return pulumix.Output[SwitchControllerManagedSwitchPortAclGroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortAclGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortAclGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortAclGroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortAclGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortAclGroup)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortAclGroupArrayOutput) ToSwitchControllerManagedSwitchPortAclGroupArrayOutput() SwitchControllerManagedSwitchPortAclGroupArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAclGroupArrayOutput) ToSwitchControllerManagedSwitchPortAclGroupArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAclGroupArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAclGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortAclGroup] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortAclGroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortAclGroupArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortAclGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortAclGroup {
		return vs[0].([]SwitchControllerManagedSwitchPortAclGroup)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortAclGroupOutput)
}

type SwitchControllerManagedSwitchPortAllowedVlan struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerManagedSwitchPortAllowedVlanInput is an input type that accepts SwitchControllerManagedSwitchPortAllowedVlanArgs and SwitchControllerManagedSwitchPortAllowedVlanOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortAllowedVlanInput` via:
//
//	SwitchControllerManagedSwitchPortAllowedVlanArgs{...}
type SwitchControllerManagedSwitchPortAllowedVlanInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortAllowedVlanOutput() SwitchControllerManagedSwitchPortAllowedVlanOutput
	ToSwitchControllerManagedSwitchPortAllowedVlanOutputWithContext(context.Context) SwitchControllerManagedSwitchPortAllowedVlanOutput
}

type SwitchControllerManagedSwitchPortAllowedVlanArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerManagedSwitchPortAllowedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortAllowedVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArgs) ToSwitchControllerManagedSwitchPortAllowedVlanOutput() SwitchControllerManagedSwitchPortAllowedVlanOutput {
	return i.ToSwitchControllerManagedSwitchPortAllowedVlanOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArgs) ToSwitchControllerManagedSwitchPortAllowedVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAllowedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortAllowedVlanOutput)
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortAllowedVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchPortAllowedVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchPortAllowedVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortAllowedVlanArrayInput is an input type that accepts SwitchControllerManagedSwitchPortAllowedVlanArray and SwitchControllerManagedSwitchPortAllowedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortAllowedVlanArrayInput` via:
//
//	SwitchControllerManagedSwitchPortAllowedVlanArray{ SwitchControllerManagedSwitchPortAllowedVlanArgs{...} }
type SwitchControllerManagedSwitchPortAllowedVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutput() SwitchControllerManagedSwitchPortAllowedVlanArrayOutput
	ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortAllowedVlanArrayOutput
}

type SwitchControllerManagedSwitchPortAllowedVlanArray []SwitchControllerManagedSwitchPortAllowedVlanInput

func (SwitchControllerManagedSwitchPortAllowedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortAllowedVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArray) ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutput() SwitchControllerManagedSwitchPortAllowedVlanArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArray) ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAllowedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortAllowedVlanArrayOutput)
}

func (i SwitchControllerManagedSwitchPortAllowedVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortAllowedVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortAllowedVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortAllowedVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortAllowedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortAllowedVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortAllowedVlanOutput) ToSwitchControllerManagedSwitchPortAllowedVlanOutput() SwitchControllerManagedSwitchPortAllowedVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAllowedVlanOutput) ToSwitchControllerManagedSwitchPortAllowedVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAllowedVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAllowedVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortAllowedVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchPortAllowedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortAllowedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortAllowedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortAllowedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortAllowedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortAllowedVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortAllowedVlanArrayOutput) ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutput() SwitchControllerManagedSwitchPortAllowedVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAllowedVlanArrayOutput) ToSwitchControllerManagedSwitchPortAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortAllowedVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortAllowedVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortAllowedVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortAllowedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortAllowedVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortAllowedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortAllowedVlan {
		return vs[0].([]SwitchControllerManagedSwitchPortAllowedVlan)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortAllowedVlanOutput)
}

type SwitchControllerManagedSwitchPortDhcpSnoopOption82Override struct {
	CircuitId *string `pulumi:"circuitId"`
	RemoteId  *string `pulumi:"remoteId"`
	VlanName  *string `pulumi:"vlanName"`
}

// SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideInput is an input type that accepts SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs and SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideInput` via:
//
//	SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs{...}
type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput
	ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutputWithContext(context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput
}

type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs struct {
	CircuitId pulumi.StringPtrInput `pulumi:"circuitId"`
	RemoteId  pulumi.StringPtrInput `pulumi:"remoteId"`
	VlanName  pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortDhcpSnoopOption82Override)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput {
	return i.ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput)
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortDhcpSnoopOption82Override] {
	return pulumix.Output[SwitchControllerManagedSwitchPortDhcpSnoopOption82Override]{
		OutputState: i.ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayInput is an input type that accepts SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray and SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayInput` via:
//
//	SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray{ SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs{...} }
type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput
	ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput
}

type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray []SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideInput

func (SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput)
}

func (i SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override]{
		OutputState: i.ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortDhcpSnoopOption82Override)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortDhcpSnoopOption82Override] {
	return pulumix.Output[SwitchControllerManagedSwitchPortDhcpSnoopOption82Override]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortDhcpSnoopOption82Override) *string { return v.CircuitId }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortDhcpSnoopOption82Override) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortDhcpSnoopOption82Override) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput() SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput) ToSwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortDhcpSnoopOption82Override {
		return vs[0].([]SwitchControllerManagedSwitchPortDhcpSnoopOption82Override)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput)
}

type SwitchControllerManagedSwitchPortExportTag struct {
	TagName *string `pulumi:"tagName"`
}

// SwitchControllerManagedSwitchPortExportTagInput is an input type that accepts SwitchControllerManagedSwitchPortExportTagArgs and SwitchControllerManagedSwitchPortExportTagOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortExportTagInput` via:
//
//	SwitchControllerManagedSwitchPortExportTagArgs{...}
type SwitchControllerManagedSwitchPortExportTagInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortExportTagOutput() SwitchControllerManagedSwitchPortExportTagOutput
	ToSwitchControllerManagedSwitchPortExportTagOutputWithContext(context.Context) SwitchControllerManagedSwitchPortExportTagOutput
}

type SwitchControllerManagedSwitchPortExportTagArgs struct {
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchControllerManagedSwitchPortExportTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortExportTag)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortExportTagArgs) ToSwitchControllerManagedSwitchPortExportTagOutput() SwitchControllerManagedSwitchPortExportTagOutput {
	return i.ToSwitchControllerManagedSwitchPortExportTagOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortExportTagArgs) ToSwitchControllerManagedSwitchPortExportTagOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortExportTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortExportTagOutput)
}

func (i SwitchControllerManagedSwitchPortExportTagArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortExportTag] {
	return pulumix.Output[SwitchControllerManagedSwitchPortExportTag]{
		OutputState: i.ToSwitchControllerManagedSwitchPortExportTagOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortExportTagArrayInput is an input type that accepts SwitchControllerManagedSwitchPortExportTagArray and SwitchControllerManagedSwitchPortExportTagArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortExportTagArrayInput` via:
//
//	SwitchControllerManagedSwitchPortExportTagArray{ SwitchControllerManagedSwitchPortExportTagArgs{...} }
type SwitchControllerManagedSwitchPortExportTagArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortExportTagArrayOutput() SwitchControllerManagedSwitchPortExportTagArrayOutput
	ToSwitchControllerManagedSwitchPortExportTagArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortExportTagArrayOutput
}

type SwitchControllerManagedSwitchPortExportTagArray []SwitchControllerManagedSwitchPortExportTagInput

func (SwitchControllerManagedSwitchPortExportTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortExportTag)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortExportTagArray) ToSwitchControllerManagedSwitchPortExportTagArrayOutput() SwitchControllerManagedSwitchPortExportTagArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortExportTagArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortExportTagArray) ToSwitchControllerManagedSwitchPortExportTagArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortExportTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortExportTagArrayOutput)
}

func (i SwitchControllerManagedSwitchPortExportTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortExportTag] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortExportTag]{
		OutputState: i.ToSwitchControllerManagedSwitchPortExportTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortExportTagOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortExportTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortExportTag)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortExportTagOutput) ToSwitchControllerManagedSwitchPortExportTagOutput() SwitchControllerManagedSwitchPortExportTagOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortExportTagOutput) ToSwitchControllerManagedSwitchPortExportTagOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortExportTagOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortExportTagOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortExportTag] {
	return pulumix.Output[SwitchControllerManagedSwitchPortExportTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortExportTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortExportTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortExportTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortExportTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortExportTag)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortExportTagArrayOutput) ToSwitchControllerManagedSwitchPortExportTagArrayOutput() SwitchControllerManagedSwitchPortExportTagArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortExportTagArrayOutput) ToSwitchControllerManagedSwitchPortExportTagArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortExportTagArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortExportTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortExportTag] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortExportTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortExportTagArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortExportTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortExportTag {
		return vs[0].([]SwitchControllerManagedSwitchPortExportTag)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortExportTagOutput)
}

type SwitchControllerManagedSwitchPortFortiswitchAcl struct {
	Id *int `pulumi:"id"`
}

// SwitchControllerManagedSwitchPortFortiswitchAclInput is an input type that accepts SwitchControllerManagedSwitchPortFortiswitchAclArgs and SwitchControllerManagedSwitchPortFortiswitchAclOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortFortiswitchAclInput` via:
//
//	SwitchControllerManagedSwitchPortFortiswitchAclArgs{...}
type SwitchControllerManagedSwitchPortFortiswitchAclInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortFortiswitchAclOutput() SwitchControllerManagedSwitchPortFortiswitchAclOutput
	ToSwitchControllerManagedSwitchPortFortiswitchAclOutputWithContext(context.Context) SwitchControllerManagedSwitchPortFortiswitchAclOutput
}

type SwitchControllerManagedSwitchPortFortiswitchAclArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SwitchControllerManagedSwitchPortFortiswitchAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortFortiswitchAcl)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArgs) ToSwitchControllerManagedSwitchPortFortiswitchAclOutput() SwitchControllerManagedSwitchPortFortiswitchAclOutput {
	return i.ToSwitchControllerManagedSwitchPortFortiswitchAclOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArgs) ToSwitchControllerManagedSwitchPortFortiswitchAclOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortFortiswitchAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortFortiswitchAclOutput)
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortFortiswitchAcl] {
	return pulumix.Output[SwitchControllerManagedSwitchPortFortiswitchAcl]{
		OutputState: i.ToSwitchControllerManagedSwitchPortFortiswitchAclOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortFortiswitchAclArrayInput is an input type that accepts SwitchControllerManagedSwitchPortFortiswitchAclArray and SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortFortiswitchAclArrayInput` via:
//
//	SwitchControllerManagedSwitchPortFortiswitchAclArray{ SwitchControllerManagedSwitchPortFortiswitchAclArgs{...} }
type SwitchControllerManagedSwitchPortFortiswitchAclArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutput() SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput
	ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput
}

type SwitchControllerManagedSwitchPortFortiswitchAclArray []SwitchControllerManagedSwitchPortFortiswitchAclInput

func (SwitchControllerManagedSwitchPortFortiswitchAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortFortiswitchAcl)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArray) ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutput() SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArray) ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput)
}

func (i SwitchControllerManagedSwitchPortFortiswitchAclArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortFortiswitchAcl] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortFortiswitchAcl]{
		OutputState: i.ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortFortiswitchAclOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortFortiswitchAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortFortiswitchAcl)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclOutput) ToSwitchControllerManagedSwitchPortFortiswitchAclOutput() SwitchControllerManagedSwitchPortFortiswitchAclOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclOutput) ToSwitchControllerManagedSwitchPortFortiswitchAclOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortFortiswitchAclOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortFortiswitchAcl] {
	return pulumix.Output[SwitchControllerManagedSwitchPortFortiswitchAcl]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortFortiswitchAcl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortFortiswitchAcl)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput) ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutput() SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput) ToSwitchControllerManagedSwitchPortFortiswitchAclArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortFortiswitchAcl] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortFortiswitchAcl]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortFortiswitchAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortFortiswitchAcl {
		return vs[0].([]SwitchControllerManagedSwitchPortFortiswitchAcl)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortFortiswitchAclOutput)
}

type SwitchControllerManagedSwitchPortInterfaceTag struct {
	TagName *string `pulumi:"tagName"`
}

// SwitchControllerManagedSwitchPortInterfaceTagInput is an input type that accepts SwitchControllerManagedSwitchPortInterfaceTagArgs and SwitchControllerManagedSwitchPortInterfaceTagOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortInterfaceTagInput` via:
//
//	SwitchControllerManagedSwitchPortInterfaceTagArgs{...}
type SwitchControllerManagedSwitchPortInterfaceTagInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortInterfaceTagOutput() SwitchControllerManagedSwitchPortInterfaceTagOutput
	ToSwitchControllerManagedSwitchPortInterfaceTagOutputWithContext(context.Context) SwitchControllerManagedSwitchPortInterfaceTagOutput
}

type SwitchControllerManagedSwitchPortInterfaceTagArgs struct {
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SwitchControllerManagedSwitchPortInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortInterfaceTag)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArgs) ToSwitchControllerManagedSwitchPortInterfaceTagOutput() SwitchControllerManagedSwitchPortInterfaceTagOutput {
	return i.ToSwitchControllerManagedSwitchPortInterfaceTagOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArgs) ToSwitchControllerManagedSwitchPortInterfaceTagOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortInterfaceTagOutput)
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortInterfaceTag] {
	return pulumix.Output[SwitchControllerManagedSwitchPortInterfaceTag]{
		OutputState: i.ToSwitchControllerManagedSwitchPortInterfaceTagOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortInterfaceTagArrayInput is an input type that accepts SwitchControllerManagedSwitchPortInterfaceTagArray and SwitchControllerManagedSwitchPortInterfaceTagArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortInterfaceTagArrayInput` via:
//
//	SwitchControllerManagedSwitchPortInterfaceTagArray{ SwitchControllerManagedSwitchPortInterfaceTagArgs{...} }
type SwitchControllerManagedSwitchPortInterfaceTagArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutput() SwitchControllerManagedSwitchPortInterfaceTagArrayOutput
	ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortInterfaceTagArrayOutput
}

type SwitchControllerManagedSwitchPortInterfaceTagArray []SwitchControllerManagedSwitchPortInterfaceTagInput

func (SwitchControllerManagedSwitchPortInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortInterfaceTag)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArray) ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutput() SwitchControllerManagedSwitchPortInterfaceTagArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArray) ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortInterfaceTagArrayOutput)
}

func (i SwitchControllerManagedSwitchPortInterfaceTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortInterfaceTag] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortInterfaceTag]{
		OutputState: i.ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortInterfaceTagOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortInterfaceTag)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortInterfaceTagOutput) ToSwitchControllerManagedSwitchPortInterfaceTagOutput() SwitchControllerManagedSwitchPortInterfaceTagOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortInterfaceTagOutput) ToSwitchControllerManagedSwitchPortInterfaceTagOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortInterfaceTagOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortInterfaceTagOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortInterfaceTag] {
	return pulumix.Output[SwitchControllerManagedSwitchPortInterfaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortInterfaceTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortInterfaceTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortInterfaceTag)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortInterfaceTagArrayOutput) ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutput() SwitchControllerManagedSwitchPortInterfaceTagArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortInterfaceTagArrayOutput) ToSwitchControllerManagedSwitchPortInterfaceTagArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortInterfaceTagArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortInterfaceTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortInterfaceTag] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortInterfaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortInterfaceTagArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortInterfaceTag {
		return vs[0].([]SwitchControllerManagedSwitchPortInterfaceTag)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortInterfaceTagOutput)
}

type SwitchControllerManagedSwitchPortMember struct {
	MemberName *string `pulumi:"memberName"`
}

// SwitchControllerManagedSwitchPortMemberInput is an input type that accepts SwitchControllerManagedSwitchPortMemberArgs and SwitchControllerManagedSwitchPortMemberOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortMemberInput` via:
//
//	SwitchControllerManagedSwitchPortMemberArgs{...}
type SwitchControllerManagedSwitchPortMemberInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortMemberOutput() SwitchControllerManagedSwitchPortMemberOutput
	ToSwitchControllerManagedSwitchPortMemberOutputWithContext(context.Context) SwitchControllerManagedSwitchPortMemberOutput
}

type SwitchControllerManagedSwitchPortMemberArgs struct {
	MemberName pulumi.StringPtrInput `pulumi:"memberName"`
}

func (SwitchControllerManagedSwitchPortMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortMember)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortMemberArgs) ToSwitchControllerManagedSwitchPortMemberOutput() SwitchControllerManagedSwitchPortMemberOutput {
	return i.ToSwitchControllerManagedSwitchPortMemberOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortMemberArgs) ToSwitchControllerManagedSwitchPortMemberOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortMemberOutput)
}

func (i SwitchControllerManagedSwitchPortMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortMember] {
	return pulumix.Output[SwitchControllerManagedSwitchPortMember]{
		OutputState: i.ToSwitchControllerManagedSwitchPortMemberOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortMemberArrayInput is an input type that accepts SwitchControllerManagedSwitchPortMemberArray and SwitchControllerManagedSwitchPortMemberArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortMemberArrayInput` via:
//
//	SwitchControllerManagedSwitchPortMemberArray{ SwitchControllerManagedSwitchPortMemberArgs{...} }
type SwitchControllerManagedSwitchPortMemberArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortMemberArrayOutput() SwitchControllerManagedSwitchPortMemberArrayOutput
	ToSwitchControllerManagedSwitchPortMemberArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortMemberArrayOutput
}

type SwitchControllerManagedSwitchPortMemberArray []SwitchControllerManagedSwitchPortMemberInput

func (SwitchControllerManagedSwitchPortMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortMember)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortMemberArray) ToSwitchControllerManagedSwitchPortMemberArrayOutput() SwitchControllerManagedSwitchPortMemberArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortMemberArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortMemberArray) ToSwitchControllerManagedSwitchPortMemberArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortMemberArrayOutput)
}

func (i SwitchControllerManagedSwitchPortMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortMember] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortMember]{
		OutputState: i.ToSwitchControllerManagedSwitchPortMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortMemberOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortMember)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortMemberOutput) ToSwitchControllerManagedSwitchPortMemberOutput() SwitchControllerManagedSwitchPortMemberOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortMemberOutput) ToSwitchControllerManagedSwitchPortMemberOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortMemberOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortMember] {
	return pulumix.Output[SwitchControllerManagedSwitchPortMember]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortMemberOutput) MemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortMember) *string { return v.MemberName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortMember)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortMemberArrayOutput) ToSwitchControllerManagedSwitchPortMemberArrayOutput() SwitchControllerManagedSwitchPortMemberArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortMemberArrayOutput) ToSwitchControllerManagedSwitchPortMemberArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortMemberArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortMember] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortMember]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortMemberArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortMember {
		return vs[0].([]SwitchControllerManagedSwitchPortMember)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortMemberOutput)
}

type SwitchControllerManagedSwitchPortUntaggedVlan struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerManagedSwitchPortUntaggedVlanInput is an input type that accepts SwitchControllerManagedSwitchPortUntaggedVlanArgs and SwitchControllerManagedSwitchPortUntaggedVlanOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortUntaggedVlanInput` via:
//
//	SwitchControllerManagedSwitchPortUntaggedVlanArgs{...}
type SwitchControllerManagedSwitchPortUntaggedVlanInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortUntaggedVlanOutput() SwitchControllerManagedSwitchPortUntaggedVlanOutput
	ToSwitchControllerManagedSwitchPortUntaggedVlanOutputWithContext(context.Context) SwitchControllerManagedSwitchPortUntaggedVlanOutput
}

type SwitchControllerManagedSwitchPortUntaggedVlanArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerManagedSwitchPortUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortUntaggedVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArgs) ToSwitchControllerManagedSwitchPortUntaggedVlanOutput() SwitchControllerManagedSwitchPortUntaggedVlanOutput {
	return i.ToSwitchControllerManagedSwitchPortUntaggedVlanOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArgs) ToSwitchControllerManagedSwitchPortUntaggedVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortUntaggedVlanOutput)
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortUntaggedVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchPortUntaggedVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchPortUntaggedVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchPortUntaggedVlanArrayInput is an input type that accepts SwitchControllerManagedSwitchPortUntaggedVlanArray and SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchPortUntaggedVlanArrayInput` via:
//
//	SwitchControllerManagedSwitchPortUntaggedVlanArray{ SwitchControllerManagedSwitchPortUntaggedVlanArgs{...} }
type SwitchControllerManagedSwitchPortUntaggedVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutput() SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput
	ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput
}

type SwitchControllerManagedSwitchPortUntaggedVlanArray []SwitchControllerManagedSwitchPortUntaggedVlanInput

func (SwitchControllerManagedSwitchPortUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortUntaggedVlan)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArray) ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutput() SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput {
	return i.ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArray) ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput)
}

func (i SwitchControllerManagedSwitchPortUntaggedVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortUntaggedVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortUntaggedVlan]{
		OutputState: i.ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchPortUntaggedVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchPortUntaggedVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanOutput) ToSwitchControllerManagedSwitchPortUntaggedVlanOutput() SwitchControllerManagedSwitchPortUntaggedVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanOutput) ToSwitchControllerManagedSwitchPortUntaggedVlanOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortUntaggedVlanOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchPortUntaggedVlan] {
	return pulumix.Output[SwitchControllerManagedSwitchPortUntaggedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchPortUntaggedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchPortUntaggedVlan)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput) ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutput() SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput) ToSwitchControllerManagedSwitchPortUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchPortUntaggedVlan] {
	return pulumix.Output[[]SwitchControllerManagedSwitchPortUntaggedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchPortUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchPortUntaggedVlan {
		return vs[0].([]SwitchControllerManagedSwitchPortUntaggedVlan)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchPortUntaggedVlanOutput)
}

type SwitchControllerManagedSwitchRemoteLog struct {
	Csv      *string `pulumi:"csv"`
	Facility *string `pulumi:"facility"`
	Name     *string `pulumi:"name"`
	Port     *int    `pulumi:"port"`
	Server   *string `pulumi:"server"`
	Severity *string `pulumi:"severity"`
	Status   *string `pulumi:"status"`
}

// SwitchControllerManagedSwitchRemoteLogInput is an input type that accepts SwitchControllerManagedSwitchRemoteLogArgs and SwitchControllerManagedSwitchRemoteLogOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchRemoteLogInput` via:
//
//	SwitchControllerManagedSwitchRemoteLogArgs{...}
type SwitchControllerManagedSwitchRemoteLogInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchRemoteLogOutput() SwitchControllerManagedSwitchRemoteLogOutput
	ToSwitchControllerManagedSwitchRemoteLogOutputWithContext(context.Context) SwitchControllerManagedSwitchRemoteLogOutput
}

type SwitchControllerManagedSwitchRemoteLogArgs struct {
	Csv      pulumi.StringPtrInput `pulumi:"csv"`
	Facility pulumi.StringPtrInput `pulumi:"facility"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Port     pulumi.IntPtrInput    `pulumi:"port"`
	Server   pulumi.StringPtrInput `pulumi:"server"`
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchControllerManagedSwitchRemoteLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchRemoteLog)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchRemoteLogArgs) ToSwitchControllerManagedSwitchRemoteLogOutput() SwitchControllerManagedSwitchRemoteLogOutput {
	return i.ToSwitchControllerManagedSwitchRemoteLogOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchRemoteLogArgs) ToSwitchControllerManagedSwitchRemoteLogOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRemoteLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchRemoteLogOutput)
}

func (i SwitchControllerManagedSwitchRemoteLogArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchRemoteLog] {
	return pulumix.Output[SwitchControllerManagedSwitchRemoteLog]{
		OutputState: i.ToSwitchControllerManagedSwitchRemoteLogOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchRemoteLogArrayInput is an input type that accepts SwitchControllerManagedSwitchRemoteLogArray and SwitchControllerManagedSwitchRemoteLogArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchRemoteLogArrayInput` via:
//
//	SwitchControllerManagedSwitchRemoteLogArray{ SwitchControllerManagedSwitchRemoteLogArgs{...} }
type SwitchControllerManagedSwitchRemoteLogArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchRemoteLogArrayOutput() SwitchControllerManagedSwitchRemoteLogArrayOutput
	ToSwitchControllerManagedSwitchRemoteLogArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchRemoteLogArrayOutput
}

type SwitchControllerManagedSwitchRemoteLogArray []SwitchControllerManagedSwitchRemoteLogInput

func (SwitchControllerManagedSwitchRemoteLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchRemoteLog)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchRemoteLogArray) ToSwitchControllerManagedSwitchRemoteLogArrayOutput() SwitchControllerManagedSwitchRemoteLogArrayOutput {
	return i.ToSwitchControllerManagedSwitchRemoteLogArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchRemoteLogArray) ToSwitchControllerManagedSwitchRemoteLogArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRemoteLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchRemoteLogArrayOutput)
}

func (i SwitchControllerManagedSwitchRemoteLogArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchRemoteLog] {
	return pulumix.Output[[]SwitchControllerManagedSwitchRemoteLog]{
		OutputState: i.ToSwitchControllerManagedSwitchRemoteLogArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchRemoteLogOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchRemoteLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchRemoteLog)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) ToSwitchControllerManagedSwitchRemoteLogOutput() SwitchControllerManagedSwitchRemoteLogOutput {
	return o
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) ToSwitchControllerManagedSwitchRemoteLogOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRemoteLogOutput {
	return o
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchRemoteLog] {
	return pulumix.Output[SwitchControllerManagedSwitchRemoteLog]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Csv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Csv }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Facility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Facility }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRemoteLogOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRemoteLog) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchRemoteLogArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchRemoteLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchRemoteLog)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchRemoteLogArrayOutput) ToSwitchControllerManagedSwitchRemoteLogArrayOutput() SwitchControllerManagedSwitchRemoteLogArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchRemoteLogArrayOutput) ToSwitchControllerManagedSwitchRemoteLogArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRemoteLogArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchRemoteLogArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchRemoteLog] {
	return pulumix.Output[[]SwitchControllerManagedSwitchRemoteLog]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchRemoteLogArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchRemoteLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchRemoteLog {
		return vs[0].([]SwitchControllerManagedSwitchRemoteLog)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchRemoteLogOutput)
}

type SwitchControllerManagedSwitchRouteOffloadRouter struct {
	RouterIp *string `pulumi:"routerIp"`
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerManagedSwitchRouteOffloadRouterInput is an input type that accepts SwitchControllerManagedSwitchRouteOffloadRouterArgs and SwitchControllerManagedSwitchRouteOffloadRouterOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchRouteOffloadRouterInput` via:
//
//	SwitchControllerManagedSwitchRouteOffloadRouterArgs{...}
type SwitchControllerManagedSwitchRouteOffloadRouterInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchRouteOffloadRouterOutput() SwitchControllerManagedSwitchRouteOffloadRouterOutput
	ToSwitchControllerManagedSwitchRouteOffloadRouterOutputWithContext(context.Context) SwitchControllerManagedSwitchRouteOffloadRouterOutput
}

type SwitchControllerManagedSwitchRouteOffloadRouterArgs struct {
	RouterIp pulumi.StringPtrInput `pulumi:"routerIp"`
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerManagedSwitchRouteOffloadRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchRouteOffloadRouter)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArgs) ToSwitchControllerManagedSwitchRouteOffloadRouterOutput() SwitchControllerManagedSwitchRouteOffloadRouterOutput {
	return i.ToSwitchControllerManagedSwitchRouteOffloadRouterOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArgs) ToSwitchControllerManagedSwitchRouteOffloadRouterOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRouteOffloadRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchRouteOffloadRouterOutput)
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchRouteOffloadRouter] {
	return pulumix.Output[SwitchControllerManagedSwitchRouteOffloadRouter]{
		OutputState: i.ToSwitchControllerManagedSwitchRouteOffloadRouterOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchRouteOffloadRouterArrayInput is an input type that accepts SwitchControllerManagedSwitchRouteOffloadRouterArray and SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchRouteOffloadRouterArrayInput` via:
//
//	SwitchControllerManagedSwitchRouteOffloadRouterArray{ SwitchControllerManagedSwitchRouteOffloadRouterArgs{...} }
type SwitchControllerManagedSwitchRouteOffloadRouterArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutput() SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput
	ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput
}

type SwitchControllerManagedSwitchRouteOffloadRouterArray []SwitchControllerManagedSwitchRouteOffloadRouterInput

func (SwitchControllerManagedSwitchRouteOffloadRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchRouteOffloadRouter)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArray) ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutput() SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput {
	return i.ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArray) ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput)
}

func (i SwitchControllerManagedSwitchRouteOffloadRouterArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchRouteOffloadRouter] {
	return pulumix.Output[[]SwitchControllerManagedSwitchRouteOffloadRouter]{
		OutputState: i.ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchRouteOffloadRouterOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchRouteOffloadRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchRouteOffloadRouter)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterOutput) ToSwitchControllerManagedSwitchRouteOffloadRouterOutput() SwitchControllerManagedSwitchRouteOffloadRouterOutput {
	return o
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterOutput) ToSwitchControllerManagedSwitchRouteOffloadRouterOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRouteOffloadRouterOutput {
	return o
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchRouteOffloadRouter] {
	return pulumix.Output[SwitchControllerManagedSwitchRouteOffloadRouter]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterOutput) RouterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRouteOffloadRouter) *string { return v.RouterIp }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchRouteOffloadRouter) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchRouteOffloadRouter)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput) ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutput() SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput) ToSwitchControllerManagedSwitchRouteOffloadRouterArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchRouteOffloadRouter] {
	return pulumix.Output[[]SwitchControllerManagedSwitchRouteOffloadRouter]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchRouteOffloadRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchRouteOffloadRouter {
		return vs[0].([]SwitchControllerManagedSwitchRouteOffloadRouter)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchRouteOffloadRouterOutput)
}

type SwitchControllerManagedSwitchSnmpCommunity struct {
	Events         *string                                          `pulumi:"events"`
	Hosts          []SwitchControllerManagedSwitchSnmpCommunityHost `pulumi:"hosts"`
	Id             *int                                             `pulumi:"id"`
	Name           *string                                          `pulumi:"name"`
	QueryV1Port    *int                                             `pulumi:"queryV1Port"`
	QueryV1Status  *string                                          `pulumi:"queryV1Status"`
	QueryV2cPort   *int                                             `pulumi:"queryV2cPort"`
	QueryV2cStatus *string                                          `pulumi:"queryV2cStatus"`
	Status         *string                                          `pulumi:"status"`
	TrapV1Lport    *int                                             `pulumi:"trapV1Lport"`
	TrapV1Rport    *int                                             `pulumi:"trapV1Rport"`
	TrapV1Status   *string                                          `pulumi:"trapV1Status"`
	TrapV2cLport   *int                                             `pulumi:"trapV2cLport"`
	TrapV2cRport   *int                                             `pulumi:"trapV2cRport"`
	TrapV2cStatus  *string                                          `pulumi:"trapV2cStatus"`
}

// SwitchControllerManagedSwitchSnmpCommunityInput is an input type that accepts SwitchControllerManagedSwitchSnmpCommunityArgs and SwitchControllerManagedSwitchSnmpCommunityOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpCommunityInput` via:
//
//	SwitchControllerManagedSwitchSnmpCommunityArgs{...}
type SwitchControllerManagedSwitchSnmpCommunityInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpCommunityOutput() SwitchControllerManagedSwitchSnmpCommunityOutput
	ToSwitchControllerManagedSwitchSnmpCommunityOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpCommunityOutput
}

type SwitchControllerManagedSwitchSnmpCommunityArgs struct {
	Events         pulumi.StringPtrInput                                    `pulumi:"events"`
	Hosts          SwitchControllerManagedSwitchSnmpCommunityHostArrayInput `pulumi:"hosts"`
	Id             pulumi.IntPtrInput                                       `pulumi:"id"`
	Name           pulumi.StringPtrInput                                    `pulumi:"name"`
	QueryV1Port    pulumi.IntPtrInput                                       `pulumi:"queryV1Port"`
	QueryV1Status  pulumi.StringPtrInput                                    `pulumi:"queryV1Status"`
	QueryV2cPort   pulumi.IntPtrInput                                       `pulumi:"queryV2cPort"`
	QueryV2cStatus pulumi.StringPtrInput                                    `pulumi:"queryV2cStatus"`
	Status         pulumi.StringPtrInput                                    `pulumi:"status"`
	TrapV1Lport    pulumi.IntPtrInput                                       `pulumi:"trapV1Lport"`
	TrapV1Rport    pulumi.IntPtrInput                                       `pulumi:"trapV1Rport"`
	TrapV1Status   pulumi.StringPtrInput                                    `pulumi:"trapV1Status"`
	TrapV2cLport   pulumi.IntPtrInput                                       `pulumi:"trapV2cLport"`
	TrapV2cRport   pulumi.IntPtrInput                                       `pulumi:"trapV2cRport"`
	TrapV2cStatus  pulumi.StringPtrInput                                    `pulumi:"trapV2cStatus"`
}

func (SwitchControllerManagedSwitchSnmpCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunity)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpCommunityArgs) ToSwitchControllerManagedSwitchSnmpCommunityOutput() SwitchControllerManagedSwitchSnmpCommunityOutput {
	return i.ToSwitchControllerManagedSwitchSnmpCommunityOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpCommunityArgs) ToSwitchControllerManagedSwitchSnmpCommunityOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpCommunityOutput)
}

func (i SwitchControllerManagedSwitchSnmpCommunityArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpCommunity] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpCommunity]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpCommunityOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchSnmpCommunityArrayInput is an input type that accepts SwitchControllerManagedSwitchSnmpCommunityArray and SwitchControllerManagedSwitchSnmpCommunityArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpCommunityArrayInput` via:
//
//	SwitchControllerManagedSwitchSnmpCommunityArray{ SwitchControllerManagedSwitchSnmpCommunityArgs{...} }
type SwitchControllerManagedSwitchSnmpCommunityArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpCommunityArrayOutput() SwitchControllerManagedSwitchSnmpCommunityArrayOutput
	ToSwitchControllerManagedSwitchSnmpCommunityArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpCommunityArrayOutput
}

type SwitchControllerManagedSwitchSnmpCommunityArray []SwitchControllerManagedSwitchSnmpCommunityInput

func (SwitchControllerManagedSwitchSnmpCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpCommunity)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpCommunityArray) ToSwitchControllerManagedSwitchSnmpCommunityArrayOutput() SwitchControllerManagedSwitchSnmpCommunityArrayOutput {
	return i.ToSwitchControllerManagedSwitchSnmpCommunityArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpCommunityArray) ToSwitchControllerManagedSwitchSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpCommunityArrayOutput)
}

func (i SwitchControllerManagedSwitchSnmpCommunityArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunity] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunity]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpCommunityArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSnmpCommunityOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunity)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) ToSwitchControllerManagedSwitchSnmpCommunityOutput() SwitchControllerManagedSwitchSnmpCommunityOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) ToSwitchControllerManagedSwitchSnmpCommunityOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpCommunity] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpCommunity]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) Events() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.Events }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) Hosts() SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) []SwitchControllerManagedSwitchSnmpCommunityHost {
		return v.Hosts
	}).(SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) QueryV1Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.QueryV1Port }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) QueryV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.QueryV1Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) QueryV2cPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.QueryV2cPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) QueryV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.QueryV2cStatus }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV1Lport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.TrapV1Lport }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV1Rport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.TrapV1Rport }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV1Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.TrapV1Status }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV2cLport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.TrapV2cLport }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV2cRport() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *int { return v.TrapV2cRport }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityOutput) TrapV2cStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunity) *string { return v.TrapV2cStatus }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSnmpCommunityArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpCommunity)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpCommunityArrayOutput) ToSwitchControllerManagedSwitchSnmpCommunityArrayOutput() SwitchControllerManagedSwitchSnmpCommunityArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityArrayOutput) ToSwitchControllerManagedSwitchSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunity] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunity]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpCommunityArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchSnmpCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchSnmpCommunity {
		return vs[0].([]SwitchControllerManagedSwitchSnmpCommunity)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchSnmpCommunityOutput)
}

type SwitchControllerManagedSwitchSnmpCommunityHost struct {
	Id *int    `pulumi:"id"`
	Ip *string `pulumi:"ip"`
}

// SwitchControllerManagedSwitchSnmpCommunityHostInput is an input type that accepts SwitchControllerManagedSwitchSnmpCommunityHostArgs and SwitchControllerManagedSwitchSnmpCommunityHostOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpCommunityHostInput` via:
//
//	SwitchControllerManagedSwitchSnmpCommunityHostArgs{...}
type SwitchControllerManagedSwitchSnmpCommunityHostInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpCommunityHostOutput() SwitchControllerManagedSwitchSnmpCommunityHostOutput
	ToSwitchControllerManagedSwitchSnmpCommunityHostOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpCommunityHostOutput
}

type SwitchControllerManagedSwitchSnmpCommunityHostArgs struct {
	Id pulumi.IntPtrInput    `pulumi:"id"`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchControllerManagedSwitchSnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArgs) ToSwitchControllerManagedSwitchSnmpCommunityHostOutput() SwitchControllerManagedSwitchSnmpCommunityHostOutput {
	return i.ToSwitchControllerManagedSwitchSnmpCommunityHostOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArgs) ToSwitchControllerManagedSwitchSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpCommunityHostOutput)
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpCommunityHost] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpCommunityHost]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpCommunityHostOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchSnmpCommunityHostArrayInput is an input type that accepts SwitchControllerManagedSwitchSnmpCommunityHostArray and SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpCommunityHostArrayInput` via:
//
//	SwitchControllerManagedSwitchSnmpCommunityHostArray{ SwitchControllerManagedSwitchSnmpCommunityHostArgs{...} }
type SwitchControllerManagedSwitchSnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutput() SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput
	ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput
}

type SwitchControllerManagedSwitchSnmpCommunityHostArray []SwitchControllerManagedSwitchSnmpCommunityHostInput

func (SwitchControllerManagedSwitchSnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArray) ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutput() SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput {
	return i.ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArray) ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput)
}

func (i SwitchControllerManagedSwitchSnmpCommunityHostArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunityHost] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunityHost]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostOutput) ToSwitchControllerManagedSwitchSnmpCommunityHostOutput() SwitchControllerManagedSwitchSnmpCommunityHostOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostOutput) ToSwitchControllerManagedSwitchSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityHostOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpCommunityHost] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput) ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutput() SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput) ToSwitchControllerManagedSwitchSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunityHost] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchSnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchSnmpCommunityHost {
		return vs[0].([]SwitchControllerManagedSwitchSnmpCommunityHost)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchSnmpCommunityHostOutput)
}

type SwitchControllerManagedSwitchSnmpSysinfo struct {
	ContactInfo *string `pulumi:"contactInfo"`
	Description *string `pulumi:"description"`
	EngineId    *string `pulumi:"engineId"`
	Location    *string `pulumi:"location"`
	Status      *string `pulumi:"status"`
}

// SwitchControllerManagedSwitchSnmpSysinfoInput is an input type that accepts SwitchControllerManagedSwitchSnmpSysinfoArgs and SwitchControllerManagedSwitchSnmpSysinfoOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpSysinfoInput` via:
//
//	SwitchControllerManagedSwitchSnmpSysinfoArgs{...}
type SwitchControllerManagedSwitchSnmpSysinfoInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpSysinfoOutput() SwitchControllerManagedSwitchSnmpSysinfoOutput
	ToSwitchControllerManagedSwitchSnmpSysinfoOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpSysinfoOutput
}

type SwitchControllerManagedSwitchSnmpSysinfoArgs struct {
	ContactInfo pulumi.StringPtrInput `pulumi:"contactInfo"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	EngineId    pulumi.StringPtrInput `pulumi:"engineId"`
	Location    pulumi.StringPtrInput `pulumi:"location"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchControllerManagedSwitchSnmpSysinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpSysinfo)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpSysinfoArgs) ToSwitchControllerManagedSwitchSnmpSysinfoOutput() SwitchControllerManagedSwitchSnmpSysinfoOutput {
	return i.ToSwitchControllerManagedSwitchSnmpSysinfoOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpSysinfoArgs) ToSwitchControllerManagedSwitchSnmpSysinfoOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpSysinfoOutput)
}

func (i SwitchControllerManagedSwitchSnmpSysinfoArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpSysinfo] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpSysinfo]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpSysinfoOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchSnmpSysinfoArgs) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutput() SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return i.ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpSysinfoArgs) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpSysinfoOutput).ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchSnmpSysinfoPtrInput is an input type that accepts SwitchControllerManagedSwitchSnmpSysinfoArgs, SwitchControllerManagedSwitchSnmpSysinfoPtr and SwitchControllerManagedSwitchSnmpSysinfoPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpSysinfoPtrInput` via:
//
//	        SwitchControllerManagedSwitchSnmpSysinfoArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchSnmpSysinfoPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutput() SwitchControllerManagedSwitchSnmpSysinfoPtrOutput
	ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpSysinfoPtrOutput
}

type switchControllerManagedSwitchSnmpSysinfoPtrType SwitchControllerManagedSwitchSnmpSysinfoArgs

func SwitchControllerManagedSwitchSnmpSysinfoPtr(v *SwitchControllerManagedSwitchSnmpSysinfoArgs) SwitchControllerManagedSwitchSnmpSysinfoPtrInput {
	return (*switchControllerManagedSwitchSnmpSysinfoPtrType)(v)
}

func (*switchControllerManagedSwitchSnmpSysinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSnmpSysinfo)(nil)).Elem()
}

func (i *switchControllerManagedSwitchSnmpSysinfoPtrType) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutput() SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return i.ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchSnmpSysinfoPtrType) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpSysinfoPtrOutput)
}

func (i *switchControllerManagedSwitchSnmpSysinfoPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSnmpSysinfo] {
	return pulumix.Output[*SwitchControllerManagedSwitchSnmpSysinfo]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSnmpSysinfoOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpSysinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpSysinfo)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ToSwitchControllerManagedSwitchSnmpSysinfoOutput() SwitchControllerManagedSwitchSnmpSysinfoOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ToSwitchControllerManagedSwitchSnmpSysinfoOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutput() SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return o.ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchSnmpSysinfo) *SwitchControllerManagedSwitchSnmpSysinfo {
		return &v
	}).(SwitchControllerManagedSwitchSnmpSysinfoPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpSysinfo] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpSysinfo]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpSysinfo) *string { return v.ContactInfo }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpSysinfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpSysinfo) *string { return v.EngineId }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpSysinfo) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpSysinfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSnmpSysinfoPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSnmpSysinfo)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutput() SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) ToSwitchControllerManagedSwitchSnmpSysinfoPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpSysinfoPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSnmpSysinfo] {
	return pulumix.Output[*SwitchControllerManagedSwitchSnmpSysinfo]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) Elem() SwitchControllerManagedSwitchSnmpSysinfoOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) SwitchControllerManagedSwitchSnmpSysinfo {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchSnmpSysinfo
		return ret
	}).(SwitchControllerManagedSwitchSnmpSysinfoOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.ContactInfo
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) EngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.EngineId
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpSysinfoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpSysinfo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSnmpTrapThreshold struct {
	TrapHighCpuThreshold   *int `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   *int `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold *int `pulumi:"trapLowMemoryThreshold"`
}

// SwitchControllerManagedSwitchSnmpTrapThresholdInput is an input type that accepts SwitchControllerManagedSwitchSnmpTrapThresholdArgs and SwitchControllerManagedSwitchSnmpTrapThresholdOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpTrapThresholdInput` via:
//
//	SwitchControllerManagedSwitchSnmpTrapThresholdArgs{...}
type SwitchControllerManagedSwitchSnmpTrapThresholdInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpTrapThresholdOutput() SwitchControllerManagedSwitchSnmpTrapThresholdOutput
	ToSwitchControllerManagedSwitchSnmpTrapThresholdOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdOutput
}

type SwitchControllerManagedSwitchSnmpTrapThresholdArgs struct {
	TrapHighCpuThreshold   pulumi.IntPtrInput `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   pulumi.IntPtrInput `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold pulumi.IntPtrInput `pulumi:"trapLowMemoryThreshold"`
}

func (SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpTrapThreshold)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ToSwitchControllerManagedSwitchSnmpTrapThresholdOutput() SwitchControllerManagedSwitchSnmpTrapThresholdOutput {
	return i.ToSwitchControllerManagedSwitchSnmpTrapThresholdOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ToSwitchControllerManagedSwitchSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpTrapThresholdOutput)
}

func (i SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpTrapThreshold] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpTrapThreshold]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpTrapThresholdOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput() SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return i.ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpTrapThresholdArgs) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpTrapThresholdOutput).ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchSnmpTrapThresholdPtrInput is an input type that accepts SwitchControllerManagedSwitchSnmpTrapThresholdArgs, SwitchControllerManagedSwitchSnmpTrapThresholdPtr and SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpTrapThresholdPtrInput` via:
//
//	        SwitchControllerManagedSwitchSnmpTrapThresholdArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchSnmpTrapThresholdPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput() SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput
	ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput
}

type switchControllerManagedSwitchSnmpTrapThresholdPtrType SwitchControllerManagedSwitchSnmpTrapThresholdArgs

func SwitchControllerManagedSwitchSnmpTrapThresholdPtr(v *SwitchControllerManagedSwitchSnmpTrapThresholdArgs) SwitchControllerManagedSwitchSnmpTrapThresholdPtrInput {
	return (*switchControllerManagedSwitchSnmpTrapThresholdPtrType)(v)
}

func (*switchControllerManagedSwitchSnmpTrapThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSnmpTrapThreshold)(nil)).Elem()
}

func (i *switchControllerManagedSwitchSnmpTrapThresholdPtrType) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput() SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return i.ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchSnmpTrapThresholdPtrType) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput)
}

func (i *switchControllerManagedSwitchSnmpTrapThresholdPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSnmpTrapThreshold] {
	return pulumix.Output[*SwitchControllerManagedSwitchSnmpTrapThreshold]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSnmpTrapThresholdOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdOutput() SwitchControllerManagedSwitchSnmpTrapThresholdOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput() SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return o.ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchSnmpTrapThreshold) *SwitchControllerManagedSwitchSnmpTrapThreshold {
		return &v
	}).(SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpTrapThreshold] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpTrapThreshold]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) TrapHighCpuThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpTrapThreshold) *int { return v.TrapHighCpuThreshold }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) TrapLogFullThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpTrapThreshold) *int { return v.TrapLogFullThreshold }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdOutput) TrapLowMemoryThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpTrapThreshold) *int { return v.TrapLowMemoryThreshold }).(pulumi.IntPtrOutput)
}

type SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput() SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) ToSwitchControllerManagedSwitchSnmpTrapThresholdPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSnmpTrapThreshold] {
	return pulumix.Output[*SwitchControllerManagedSwitchSnmpTrapThreshold]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) Elem() SwitchControllerManagedSwitchSnmpTrapThresholdOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpTrapThreshold) SwitchControllerManagedSwitchSnmpTrapThreshold {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchSnmpTrapThreshold
		return ret
	}).(SwitchControllerManagedSwitchSnmpTrapThresholdOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) TrapHighCpuThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapHighCpuThreshold
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) TrapLogFullThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapLogFullThreshold
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput) TrapLowMemoryThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSnmpTrapThreshold) *int {
		if v == nil {
			return nil
		}
		return v.TrapLowMemoryThreshold
	}).(pulumi.IntPtrOutput)
}

type SwitchControllerManagedSwitchSnmpUser struct {
	AuthProto     *string `pulumi:"authProto"`
	AuthPwd       *string `pulumi:"authPwd"`
	Name          *string `pulumi:"name"`
	PrivProto     *string `pulumi:"privProto"`
	PrivPwd       *string `pulumi:"privPwd"`
	Queries       *string `pulumi:"queries"`
	QueryPort     *int    `pulumi:"queryPort"`
	SecurityLevel *string `pulumi:"securityLevel"`
}

// SwitchControllerManagedSwitchSnmpUserInput is an input type that accepts SwitchControllerManagedSwitchSnmpUserArgs and SwitchControllerManagedSwitchSnmpUserOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpUserInput` via:
//
//	SwitchControllerManagedSwitchSnmpUserArgs{...}
type SwitchControllerManagedSwitchSnmpUserInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpUserOutput() SwitchControllerManagedSwitchSnmpUserOutput
	ToSwitchControllerManagedSwitchSnmpUserOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpUserOutput
}

type SwitchControllerManagedSwitchSnmpUserArgs struct {
	AuthProto     pulumi.StringPtrInput `pulumi:"authProto"`
	AuthPwd       pulumi.StringPtrInput `pulumi:"authPwd"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	PrivProto     pulumi.StringPtrInput `pulumi:"privProto"`
	PrivPwd       pulumi.StringPtrInput `pulumi:"privPwd"`
	Queries       pulumi.StringPtrInput `pulumi:"queries"`
	QueryPort     pulumi.IntPtrInput    `pulumi:"queryPort"`
	SecurityLevel pulumi.StringPtrInput `pulumi:"securityLevel"`
}

func (SwitchControllerManagedSwitchSnmpUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpUser)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpUserArgs) ToSwitchControllerManagedSwitchSnmpUserOutput() SwitchControllerManagedSwitchSnmpUserOutput {
	return i.ToSwitchControllerManagedSwitchSnmpUserOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpUserArgs) ToSwitchControllerManagedSwitchSnmpUserOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpUserOutput)
}

func (i SwitchControllerManagedSwitchSnmpUserArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpUser] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpUser]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpUserOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchSnmpUserArrayInput is an input type that accepts SwitchControllerManagedSwitchSnmpUserArray and SwitchControllerManagedSwitchSnmpUserArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSnmpUserArrayInput` via:
//
//	SwitchControllerManagedSwitchSnmpUserArray{ SwitchControllerManagedSwitchSnmpUserArgs{...} }
type SwitchControllerManagedSwitchSnmpUserArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSnmpUserArrayOutput() SwitchControllerManagedSwitchSnmpUserArrayOutput
	ToSwitchControllerManagedSwitchSnmpUserArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchSnmpUserArrayOutput
}

type SwitchControllerManagedSwitchSnmpUserArray []SwitchControllerManagedSwitchSnmpUserInput

func (SwitchControllerManagedSwitchSnmpUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpUser)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSnmpUserArray) ToSwitchControllerManagedSwitchSnmpUserArrayOutput() SwitchControllerManagedSwitchSnmpUserArrayOutput {
	return i.ToSwitchControllerManagedSwitchSnmpUserArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSnmpUserArray) ToSwitchControllerManagedSwitchSnmpUserArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSnmpUserArrayOutput)
}

func (i SwitchControllerManagedSwitchSnmpUserArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpUser] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpUser]{
		OutputState: i.ToSwitchControllerManagedSwitchSnmpUserArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSnmpUserOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSnmpUser)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) ToSwitchControllerManagedSwitchSnmpUserOutput() SwitchControllerManagedSwitchSnmpUserOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) ToSwitchControllerManagedSwitchSnmpUserOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpUserOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSnmpUser] {
	return pulumix.Output[SwitchControllerManagedSwitchSnmpUser]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) AuthProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.AuthProto }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) AuthPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.AuthPwd }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) PrivProto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.PrivProto }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) PrivPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.PrivPwd }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) Queries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.Queries }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) QueryPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *int { return v.QueryPort }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchSnmpUserOutput) SecurityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSnmpUser) *string { return v.SecurityLevel }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSnmpUserArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSnmpUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchSnmpUser)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSnmpUserArrayOutput) ToSwitchControllerManagedSwitchSnmpUserArrayOutput() SwitchControllerManagedSwitchSnmpUserArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpUserArrayOutput) ToSwitchControllerManagedSwitchSnmpUserArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSnmpUserArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchSnmpUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchSnmpUser] {
	return pulumix.Output[[]SwitchControllerManagedSwitchSnmpUser]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSnmpUserArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchSnmpUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchSnmpUser {
		return vs[0].([]SwitchControllerManagedSwitchSnmpUser)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchSnmpUserOutput)
}

type SwitchControllerManagedSwitchStaticMac struct {
	Description *string `pulumi:"description"`
	Id          *int    `pulumi:"id"`
	Interface   *string `pulumi:"interface"`
	Mac         *string `pulumi:"mac"`
	Type        *string `pulumi:"type"`
	Vlan        *string `pulumi:"vlan"`
}

// SwitchControllerManagedSwitchStaticMacInput is an input type that accepts SwitchControllerManagedSwitchStaticMacArgs and SwitchControllerManagedSwitchStaticMacOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStaticMacInput` via:
//
//	SwitchControllerManagedSwitchStaticMacArgs{...}
type SwitchControllerManagedSwitchStaticMacInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStaticMacOutput() SwitchControllerManagedSwitchStaticMacOutput
	ToSwitchControllerManagedSwitchStaticMacOutputWithContext(context.Context) SwitchControllerManagedSwitchStaticMacOutput
}

type SwitchControllerManagedSwitchStaticMacArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	Interface   pulumi.StringPtrInput `pulumi:"interface"`
	Mac         pulumi.StringPtrInput `pulumi:"mac"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	Vlan        pulumi.StringPtrInput `pulumi:"vlan"`
}

func (SwitchControllerManagedSwitchStaticMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStaticMac)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStaticMacArgs) ToSwitchControllerManagedSwitchStaticMacOutput() SwitchControllerManagedSwitchStaticMacOutput {
	return i.ToSwitchControllerManagedSwitchStaticMacOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStaticMacArgs) ToSwitchControllerManagedSwitchStaticMacOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStaticMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStaticMacOutput)
}

func (i SwitchControllerManagedSwitchStaticMacArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStaticMac] {
	return pulumix.Output[SwitchControllerManagedSwitchStaticMac]{
		OutputState: i.ToSwitchControllerManagedSwitchStaticMacOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchStaticMacArrayInput is an input type that accepts SwitchControllerManagedSwitchStaticMacArray and SwitchControllerManagedSwitchStaticMacArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStaticMacArrayInput` via:
//
//	SwitchControllerManagedSwitchStaticMacArray{ SwitchControllerManagedSwitchStaticMacArgs{...} }
type SwitchControllerManagedSwitchStaticMacArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStaticMacArrayOutput() SwitchControllerManagedSwitchStaticMacArrayOutput
	ToSwitchControllerManagedSwitchStaticMacArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchStaticMacArrayOutput
}

type SwitchControllerManagedSwitchStaticMacArray []SwitchControllerManagedSwitchStaticMacInput

func (SwitchControllerManagedSwitchStaticMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchStaticMac)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStaticMacArray) ToSwitchControllerManagedSwitchStaticMacArrayOutput() SwitchControllerManagedSwitchStaticMacArrayOutput {
	return i.ToSwitchControllerManagedSwitchStaticMacArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStaticMacArray) ToSwitchControllerManagedSwitchStaticMacArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStaticMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStaticMacArrayOutput)
}

func (i SwitchControllerManagedSwitchStaticMacArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchStaticMac] {
	return pulumix.Output[[]SwitchControllerManagedSwitchStaticMac]{
		OutputState: i.ToSwitchControllerManagedSwitchStaticMacArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchStaticMacOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStaticMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStaticMac)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStaticMacOutput) ToSwitchControllerManagedSwitchStaticMacOutput() SwitchControllerManagedSwitchStaticMacOutput {
	return o
}

func (o SwitchControllerManagedSwitchStaticMacOutput) ToSwitchControllerManagedSwitchStaticMacOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStaticMacOutput {
	return o
}

func (o SwitchControllerManagedSwitchStaticMacOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStaticMac] {
	return pulumix.Output[SwitchControllerManagedSwitchStaticMac]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStaticMacOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStaticMac) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchStaticMacArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStaticMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchStaticMac)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStaticMacArrayOutput) ToSwitchControllerManagedSwitchStaticMacArrayOutput() SwitchControllerManagedSwitchStaticMacArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchStaticMacArrayOutput) ToSwitchControllerManagedSwitchStaticMacArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStaticMacArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchStaticMacArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchStaticMac] {
	return pulumix.Output[[]SwitchControllerManagedSwitchStaticMac]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStaticMacArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchStaticMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchStaticMac {
		return vs[0].([]SwitchControllerManagedSwitchStaticMac)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchStaticMacOutput)
}

type SwitchControllerManagedSwitchStormControl struct {
	Broadcast        *string `pulumi:"broadcast"`
	LocalOverride    *string `pulumi:"localOverride"`
	Rate             *int    `pulumi:"rate"`
	UnknownMulticast *string `pulumi:"unknownMulticast"`
	UnknownUnicast   *string `pulumi:"unknownUnicast"`
}

// SwitchControllerManagedSwitchStormControlInput is an input type that accepts SwitchControllerManagedSwitchStormControlArgs and SwitchControllerManagedSwitchStormControlOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStormControlInput` via:
//
//	SwitchControllerManagedSwitchStormControlArgs{...}
type SwitchControllerManagedSwitchStormControlInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStormControlOutput() SwitchControllerManagedSwitchStormControlOutput
	ToSwitchControllerManagedSwitchStormControlOutputWithContext(context.Context) SwitchControllerManagedSwitchStormControlOutput
}

type SwitchControllerManagedSwitchStormControlArgs struct {
	Broadcast        pulumi.StringPtrInput `pulumi:"broadcast"`
	LocalOverride    pulumi.StringPtrInput `pulumi:"localOverride"`
	Rate             pulumi.IntPtrInput    `pulumi:"rate"`
	UnknownMulticast pulumi.StringPtrInput `pulumi:"unknownMulticast"`
	UnknownUnicast   pulumi.StringPtrInput `pulumi:"unknownUnicast"`
}

func (SwitchControllerManagedSwitchStormControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStormControl)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStormControlArgs) ToSwitchControllerManagedSwitchStormControlOutput() SwitchControllerManagedSwitchStormControlOutput {
	return i.ToSwitchControllerManagedSwitchStormControlOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStormControlArgs) ToSwitchControllerManagedSwitchStormControlOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStormControlOutput)
}

func (i SwitchControllerManagedSwitchStormControlArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStormControl] {
	return pulumix.Output[SwitchControllerManagedSwitchStormControl]{
		OutputState: i.ToSwitchControllerManagedSwitchStormControlOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchStormControlArgs) ToSwitchControllerManagedSwitchStormControlPtrOutput() SwitchControllerManagedSwitchStormControlPtrOutput {
	return i.ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStormControlArgs) ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStormControlOutput).ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchStormControlPtrInput is an input type that accepts SwitchControllerManagedSwitchStormControlArgs, SwitchControllerManagedSwitchStormControlPtr and SwitchControllerManagedSwitchStormControlPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStormControlPtrInput` via:
//
//	        SwitchControllerManagedSwitchStormControlArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchStormControlPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStormControlPtrOutput() SwitchControllerManagedSwitchStormControlPtrOutput
	ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchStormControlPtrOutput
}

type switchControllerManagedSwitchStormControlPtrType SwitchControllerManagedSwitchStormControlArgs

func SwitchControllerManagedSwitchStormControlPtr(v *SwitchControllerManagedSwitchStormControlArgs) SwitchControllerManagedSwitchStormControlPtrInput {
	return (*switchControllerManagedSwitchStormControlPtrType)(v)
}

func (*switchControllerManagedSwitchStormControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchStormControl)(nil)).Elem()
}

func (i *switchControllerManagedSwitchStormControlPtrType) ToSwitchControllerManagedSwitchStormControlPtrOutput() SwitchControllerManagedSwitchStormControlPtrOutput {
	return i.ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchStormControlPtrType) ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStormControlPtrOutput)
}

func (i *switchControllerManagedSwitchStormControlPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchStormControl] {
	return pulumix.Output[*SwitchControllerManagedSwitchStormControl]{
		OutputState: i.ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchStormControlOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStormControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStormControl)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStormControlOutput) ToSwitchControllerManagedSwitchStormControlOutput() SwitchControllerManagedSwitchStormControlOutput {
	return o
}

func (o SwitchControllerManagedSwitchStormControlOutput) ToSwitchControllerManagedSwitchStormControlOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlOutput {
	return o
}

func (o SwitchControllerManagedSwitchStormControlOutput) ToSwitchControllerManagedSwitchStormControlPtrOutput() SwitchControllerManagedSwitchStormControlPtrOutput {
	return o.ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchStormControlOutput) ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchStormControl) *SwitchControllerManagedSwitchStormControl {
		return &v
	}).(SwitchControllerManagedSwitchStormControlPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStormControl] {
	return pulumix.Output[SwitchControllerManagedSwitchStormControl]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStormControlOutput) Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStormControl) *string { return v.Broadcast }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStormControl) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStormControl) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlOutput) UnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStormControl) *string { return v.UnknownMulticast }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlOutput) UnknownUnicast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStormControl) *string { return v.UnknownUnicast }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchStormControlPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStormControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchStormControl)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) ToSwitchControllerManagedSwitchStormControlPtrOutput() SwitchControllerManagedSwitchStormControlPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) ToSwitchControllerManagedSwitchStormControlPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStormControlPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchStormControl] {
	return pulumix.Output[*SwitchControllerManagedSwitchStormControl]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) Elem() SwitchControllerManagedSwitchStormControlOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) SwitchControllerManagedSwitchStormControl {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchStormControl
		return ret
	}).(SwitchControllerManagedSwitchStormControlOutput)
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) Broadcast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.Broadcast
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) UnknownMulticast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.UnknownMulticast
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStormControlPtrOutput) UnknownUnicast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStormControl) *string {
		if v == nil {
			return nil
		}
		return v.UnknownUnicast
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchStpInstance struct {
	Id       *string `pulumi:"id"`
	Priority *string `pulumi:"priority"`
}

// SwitchControllerManagedSwitchStpInstanceInput is an input type that accepts SwitchControllerManagedSwitchStpInstanceArgs and SwitchControllerManagedSwitchStpInstanceOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStpInstanceInput` via:
//
//	SwitchControllerManagedSwitchStpInstanceArgs{...}
type SwitchControllerManagedSwitchStpInstanceInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStpInstanceOutput() SwitchControllerManagedSwitchStpInstanceOutput
	ToSwitchControllerManagedSwitchStpInstanceOutputWithContext(context.Context) SwitchControllerManagedSwitchStpInstanceOutput
}

type SwitchControllerManagedSwitchStpInstanceArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Priority pulumi.StringPtrInput `pulumi:"priority"`
}

func (SwitchControllerManagedSwitchStpInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStpInstance)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStpInstanceArgs) ToSwitchControllerManagedSwitchStpInstanceOutput() SwitchControllerManagedSwitchStpInstanceOutput {
	return i.ToSwitchControllerManagedSwitchStpInstanceOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStpInstanceArgs) ToSwitchControllerManagedSwitchStpInstanceOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStpInstanceOutput)
}

func (i SwitchControllerManagedSwitchStpInstanceArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStpInstance] {
	return pulumix.Output[SwitchControllerManagedSwitchStpInstance]{
		OutputState: i.ToSwitchControllerManagedSwitchStpInstanceOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerManagedSwitchStpInstanceArrayInput is an input type that accepts SwitchControllerManagedSwitchStpInstanceArray and SwitchControllerManagedSwitchStpInstanceArrayOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStpInstanceArrayInput` via:
//
//	SwitchControllerManagedSwitchStpInstanceArray{ SwitchControllerManagedSwitchStpInstanceArgs{...} }
type SwitchControllerManagedSwitchStpInstanceArrayInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStpInstanceArrayOutput() SwitchControllerManagedSwitchStpInstanceArrayOutput
	ToSwitchControllerManagedSwitchStpInstanceArrayOutputWithContext(context.Context) SwitchControllerManagedSwitchStpInstanceArrayOutput
}

type SwitchControllerManagedSwitchStpInstanceArray []SwitchControllerManagedSwitchStpInstanceInput

func (SwitchControllerManagedSwitchStpInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchStpInstance)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStpInstanceArray) ToSwitchControllerManagedSwitchStpInstanceArrayOutput() SwitchControllerManagedSwitchStpInstanceArrayOutput {
	return i.ToSwitchControllerManagedSwitchStpInstanceArrayOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStpInstanceArray) ToSwitchControllerManagedSwitchStpInstanceArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStpInstanceArrayOutput)
}

func (i SwitchControllerManagedSwitchStpInstanceArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchStpInstance] {
	return pulumix.Output[[]SwitchControllerManagedSwitchStpInstance]{
		OutputState: i.ToSwitchControllerManagedSwitchStpInstanceArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchStpInstanceOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStpInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStpInstance)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStpInstanceOutput) ToSwitchControllerManagedSwitchStpInstanceOutput() SwitchControllerManagedSwitchStpInstanceOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpInstanceOutput) ToSwitchControllerManagedSwitchStpInstanceOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpInstanceOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStpInstance] {
	return pulumix.Output[SwitchControllerManagedSwitchStpInstance]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStpInstanceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpInstance) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStpInstanceOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpInstance) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchStpInstanceArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStpInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerManagedSwitchStpInstance)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStpInstanceArrayOutput) ToSwitchControllerManagedSwitchStpInstanceArrayOutput() SwitchControllerManagedSwitchStpInstanceArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpInstanceArrayOutput) ToSwitchControllerManagedSwitchStpInstanceArrayOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpInstanceArrayOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpInstanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerManagedSwitchStpInstance] {
	return pulumix.Output[[]SwitchControllerManagedSwitchStpInstance]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStpInstanceArrayOutput) Index(i pulumi.IntInput) SwitchControllerManagedSwitchStpInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerManagedSwitchStpInstance {
		return vs[0].([]SwitchControllerManagedSwitchStpInstance)[vs[1].(int)]
	}).(SwitchControllerManagedSwitchStpInstanceOutput)
}

type SwitchControllerManagedSwitchStpSettings struct {
	ForwardTime   *int    `pulumi:"forwardTime"`
	HelloTime     *int    `pulumi:"helloTime"`
	LocalOverride *string `pulumi:"localOverride"`
	MaxAge        *int    `pulumi:"maxAge"`
	MaxHops       *int    `pulumi:"maxHops"`
	Name          *string `pulumi:"name"`
	PendingTimer  *int    `pulumi:"pendingTimer"`
	Revision      *int    `pulumi:"revision"`
	Status        *string `pulumi:"status"`
}

// SwitchControllerManagedSwitchStpSettingsInput is an input type that accepts SwitchControllerManagedSwitchStpSettingsArgs and SwitchControllerManagedSwitchStpSettingsOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStpSettingsInput` via:
//
//	SwitchControllerManagedSwitchStpSettingsArgs{...}
type SwitchControllerManagedSwitchStpSettingsInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStpSettingsOutput() SwitchControllerManagedSwitchStpSettingsOutput
	ToSwitchControllerManagedSwitchStpSettingsOutputWithContext(context.Context) SwitchControllerManagedSwitchStpSettingsOutput
}

type SwitchControllerManagedSwitchStpSettingsArgs struct {
	ForwardTime   pulumi.IntPtrInput    `pulumi:"forwardTime"`
	HelloTime     pulumi.IntPtrInput    `pulumi:"helloTime"`
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	MaxAge        pulumi.IntPtrInput    `pulumi:"maxAge"`
	MaxHops       pulumi.IntPtrInput    `pulumi:"maxHops"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	PendingTimer  pulumi.IntPtrInput    `pulumi:"pendingTimer"`
	Revision      pulumi.IntPtrInput    `pulumi:"revision"`
	Status        pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchControllerManagedSwitchStpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStpSettings)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchStpSettingsOutput() SwitchControllerManagedSwitchStpSettingsOutput {
	return i.ToSwitchControllerManagedSwitchStpSettingsOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStpSettingsOutput)
}

func (i SwitchControllerManagedSwitchStpSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStpSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchStpSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchStpSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStpSettingsOutput).ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchStpSettingsPtrInput is an input type that accepts SwitchControllerManagedSwitchStpSettingsArgs, SwitchControllerManagedSwitchStpSettingsPtr and SwitchControllerManagedSwitchStpSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchStpSettingsPtrInput` via:
//
//	        SwitchControllerManagedSwitchStpSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchStpSettingsPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchStpSettingsPtrOutput
	ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchStpSettingsPtrOutput
}

type switchControllerManagedSwitchStpSettingsPtrType SwitchControllerManagedSwitchStpSettingsArgs

func SwitchControllerManagedSwitchStpSettingsPtr(v *SwitchControllerManagedSwitchStpSettingsArgs) SwitchControllerManagedSwitchStpSettingsPtrInput {
	return (*switchControllerManagedSwitchStpSettingsPtrType)(v)
}

func (*switchControllerManagedSwitchStpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchStpSettings)(nil)).Elem()
}

func (i *switchControllerManagedSwitchStpSettingsPtrType) ToSwitchControllerManagedSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchStpSettingsPtrType) ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchStpSettingsPtrOutput)
}

func (i *switchControllerManagedSwitchStpSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchStpSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchStpSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchStpSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchStpSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchStpSettingsOutput() SwitchControllerManagedSwitchStpSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return o.ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchStpSettings) *SwitchControllerManagedSwitchStpSettings {
		return &v
	}).(SwitchControllerManagedSwitchStpSettingsPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchStpSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchStpSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) ForwardTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.ForwardTime }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) HelloTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.HelloTime }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) MaxHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.MaxHops }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) PendingTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.PendingTimer }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchStpSettings) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchStpSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchStpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchStpSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) ToSwitchControllerManagedSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) ToSwitchControllerManagedSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchStpSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchStpSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) Elem() SwitchControllerManagedSwitchStpSettingsOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) SwitchControllerManagedSwitchStpSettings {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchStpSettings
		return ret
	}).(SwitchControllerManagedSwitchStpSettingsOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) ForwardTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.ForwardTime
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) HelloTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.HelloTime
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) MaxHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxHops
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) PendingTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PendingTimer
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

func (o SwitchControllerManagedSwitchStpSettingsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSwitchLog struct {
	LocalOverride *string `pulumi:"localOverride"`
	Severity      *string `pulumi:"severity"`
	Status        *string `pulumi:"status"`
}

// SwitchControllerManagedSwitchSwitchLogInput is an input type that accepts SwitchControllerManagedSwitchSwitchLogArgs and SwitchControllerManagedSwitchSwitchLogOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSwitchLogInput` via:
//
//	SwitchControllerManagedSwitchSwitchLogArgs{...}
type SwitchControllerManagedSwitchSwitchLogInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSwitchLogOutput() SwitchControllerManagedSwitchSwitchLogOutput
	ToSwitchControllerManagedSwitchSwitchLogOutputWithContext(context.Context) SwitchControllerManagedSwitchSwitchLogOutput
}

type SwitchControllerManagedSwitchSwitchLogArgs struct {
	LocalOverride pulumi.StringPtrInput `pulumi:"localOverride"`
	Severity      pulumi.StringPtrInput `pulumi:"severity"`
	Status        pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchControllerManagedSwitchSwitchLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSwitchLog)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSwitchLogArgs) ToSwitchControllerManagedSwitchSwitchLogOutput() SwitchControllerManagedSwitchSwitchLogOutput {
	return i.ToSwitchControllerManagedSwitchSwitchLogOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSwitchLogArgs) ToSwitchControllerManagedSwitchSwitchLogOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchLogOutput)
}

func (i SwitchControllerManagedSwitchSwitchLogArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSwitchLog] {
	return pulumix.Output[SwitchControllerManagedSwitchSwitchLog]{
		OutputState: i.ToSwitchControllerManagedSwitchSwitchLogOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchSwitchLogArgs) ToSwitchControllerManagedSwitchSwitchLogPtrOutput() SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return i.ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSwitchLogArgs) ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchLogOutput).ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchSwitchLogPtrInput is an input type that accepts SwitchControllerManagedSwitchSwitchLogArgs, SwitchControllerManagedSwitchSwitchLogPtr and SwitchControllerManagedSwitchSwitchLogPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSwitchLogPtrInput` via:
//
//	        SwitchControllerManagedSwitchSwitchLogArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchSwitchLogPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSwitchLogPtrOutput() SwitchControllerManagedSwitchSwitchLogPtrOutput
	ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchSwitchLogPtrOutput
}

type switchControllerManagedSwitchSwitchLogPtrType SwitchControllerManagedSwitchSwitchLogArgs

func SwitchControllerManagedSwitchSwitchLogPtr(v *SwitchControllerManagedSwitchSwitchLogArgs) SwitchControllerManagedSwitchSwitchLogPtrInput {
	return (*switchControllerManagedSwitchSwitchLogPtrType)(v)
}

func (*switchControllerManagedSwitchSwitchLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSwitchLog)(nil)).Elem()
}

func (i *switchControllerManagedSwitchSwitchLogPtrType) ToSwitchControllerManagedSwitchSwitchLogPtrOutput() SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return i.ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchSwitchLogPtrType) ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchLogPtrOutput)
}

func (i *switchControllerManagedSwitchSwitchLogPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSwitchLog] {
	return pulumix.Output[*SwitchControllerManagedSwitchSwitchLog]{
		OutputState: i.ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSwitchLogOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSwitchLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSwitchLog)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) ToSwitchControllerManagedSwitchSwitchLogOutput() SwitchControllerManagedSwitchSwitchLogOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) ToSwitchControllerManagedSwitchSwitchLogOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) ToSwitchControllerManagedSwitchSwitchLogPtrOutput() SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return o.ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchSwitchLog) *SwitchControllerManagedSwitchSwitchLog {
		return &v
	}).(SwitchControllerManagedSwitchSwitchLogPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSwitchLog] {
	return pulumix.Output[SwitchControllerManagedSwitchSwitchLog]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSwitchLog) *string { return v.LocalOverride }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSwitchLog) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSwitchLog) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSwitchLogPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSwitchLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSwitchLog)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) ToSwitchControllerManagedSwitchSwitchLogPtrOutput() SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) ToSwitchControllerManagedSwitchSwitchLogPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchLogPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSwitchLog] {
	return pulumix.Output[*SwitchControllerManagedSwitchSwitchLog]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) Elem() SwitchControllerManagedSwitchSwitchLogOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchLog) SwitchControllerManagedSwitchSwitchLog {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchSwitchLog
		return ret
	}).(SwitchControllerManagedSwitchSwitchLogOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) LocalOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.LocalOverride
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchLogPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchLog) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSwitchStpSettings struct {
	Status *string `pulumi:"status"`
}

// SwitchControllerManagedSwitchSwitchStpSettingsInput is an input type that accepts SwitchControllerManagedSwitchSwitchStpSettingsArgs and SwitchControllerManagedSwitchSwitchStpSettingsOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSwitchStpSettingsInput` via:
//
//	SwitchControllerManagedSwitchSwitchStpSettingsArgs{...}
type SwitchControllerManagedSwitchSwitchStpSettingsInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSwitchStpSettingsOutput() SwitchControllerManagedSwitchSwitchStpSettingsOutput
	ToSwitchControllerManagedSwitchSwitchStpSettingsOutputWithContext(context.Context) SwitchControllerManagedSwitchSwitchStpSettingsOutput
}

type SwitchControllerManagedSwitchSwitchStpSettingsArgs struct {
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SwitchControllerManagedSwitchSwitchStpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSwitchStpSettings)(nil)).Elem()
}

func (i SwitchControllerManagedSwitchSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchSwitchStpSettingsOutput() SwitchControllerManagedSwitchSwitchStpSettingsOutput {
	return i.ToSwitchControllerManagedSwitchSwitchStpSettingsOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchStpSettingsOutput)
}

func (i SwitchControllerManagedSwitchSwitchStpSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSwitchStpSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchSwitchStpSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchSwitchStpSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerManagedSwitchSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i SwitchControllerManagedSwitchSwitchStpSettingsArgs) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchStpSettingsOutput).ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx)
}

// SwitchControllerManagedSwitchSwitchStpSettingsPtrInput is an input type that accepts SwitchControllerManagedSwitchSwitchStpSettingsArgs, SwitchControllerManagedSwitchSwitchStpSettingsPtr and SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput values.
// You can construct a concrete instance of `SwitchControllerManagedSwitchSwitchStpSettingsPtrInput` via:
//
//	        SwitchControllerManagedSwitchSwitchStpSettingsArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerManagedSwitchSwitchStpSettingsPtrInput interface {
	pulumi.Input

	ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput
	ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(context.Context) SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput
}

type switchControllerManagedSwitchSwitchStpSettingsPtrType SwitchControllerManagedSwitchSwitchStpSettingsArgs

func SwitchControllerManagedSwitchSwitchStpSettingsPtr(v *SwitchControllerManagedSwitchSwitchStpSettingsArgs) SwitchControllerManagedSwitchSwitchStpSettingsPtrInput {
	return (*switchControllerManagedSwitchSwitchStpSettingsPtrType)(v)
}

func (*switchControllerManagedSwitchSwitchStpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSwitchStpSettings)(nil)).Elem()
}

func (i *switchControllerManagedSwitchSwitchStpSettingsPtrType) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return i.ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (i *switchControllerManagedSwitchSwitchStpSettingsPtrType) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput)
}

func (i *switchControllerManagedSwitchSwitchStpSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSwitchStpSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchSwitchStpSettings]{
		OutputState: i.ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerManagedSwitchSwitchStpSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSwitchStpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerManagedSwitchSwitchStpSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsOutput() SwitchControllerManagedSwitchSwitchStpSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return o.ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(context.Background())
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerManagedSwitchSwitchStpSettings) *SwitchControllerManagedSwitchSwitchStpSettings {
		return &v
	}).(SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput)
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerManagedSwitchSwitchStpSettings] {
	return pulumix.Output[SwitchControllerManagedSwitchSwitchStpSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerManagedSwitchSwitchStpSettings) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerManagedSwitchSwitchStpSettings)(nil)).Elem()
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutput() SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) ToSwitchControllerManagedSwitchSwitchStpSettingsPtrOutputWithContext(ctx context.Context) SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput {
	return o
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerManagedSwitchSwitchStpSettings] {
	return pulumix.Output[*SwitchControllerManagedSwitchSwitchStpSettings]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) Elem() SwitchControllerManagedSwitchSwitchStpSettingsOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchStpSettings) SwitchControllerManagedSwitchSwitchStpSettings {
		if v != nil {
			return *v
		}
		var ret SwitchControllerManagedSwitchSwitchStpSettings
		return ret
	}).(SwitchControllerManagedSwitchSwitchStpSettingsOutput)
}

func (o SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerManagedSwitchSwitchStpSettings) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerQosIpDscpMapMapType struct {
	CosQueue     *int    `pulumi:"cosQueue"`
	Diffserv     *string `pulumi:"diffserv"`
	IpPrecedence *string `pulumi:"ipPrecedence"`
	Name         *string `pulumi:"name"`
	Value        *string `pulumi:"value"`
}

// SwitchControllerQosIpDscpMapMapTypeInput is an input type that accepts SwitchControllerQosIpDscpMapMapTypeArgs and SwitchControllerQosIpDscpMapMapTypeOutput values.
// You can construct a concrete instance of `SwitchControllerQosIpDscpMapMapTypeInput` via:
//
//	SwitchControllerQosIpDscpMapMapTypeArgs{...}
type SwitchControllerQosIpDscpMapMapTypeInput interface {
	pulumi.Input

	ToSwitchControllerQosIpDscpMapMapTypeOutput() SwitchControllerQosIpDscpMapMapTypeOutput
	ToSwitchControllerQosIpDscpMapMapTypeOutputWithContext(context.Context) SwitchControllerQosIpDscpMapMapTypeOutput
}

type SwitchControllerQosIpDscpMapMapTypeArgs struct {
	CosQueue     pulumi.IntPtrInput    `pulumi:"cosQueue"`
	Diffserv     pulumi.StringPtrInput `pulumi:"diffserv"`
	IpPrecedence pulumi.StringPtrInput `pulumi:"ipPrecedence"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SwitchControllerQosIpDscpMapMapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQosIpDscpMapMapType)(nil)).Elem()
}

func (i SwitchControllerQosIpDscpMapMapTypeArgs) ToSwitchControllerQosIpDscpMapMapTypeOutput() SwitchControllerQosIpDscpMapMapTypeOutput {
	return i.ToSwitchControllerQosIpDscpMapMapTypeOutputWithContext(context.Background())
}

func (i SwitchControllerQosIpDscpMapMapTypeArgs) ToSwitchControllerQosIpDscpMapMapTypeOutputWithContext(ctx context.Context) SwitchControllerQosIpDscpMapMapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosIpDscpMapMapTypeOutput)
}

func (i SwitchControllerQosIpDscpMapMapTypeArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQosIpDscpMapMapType] {
	return pulumix.Output[SwitchControllerQosIpDscpMapMapType]{
		OutputState: i.ToSwitchControllerQosIpDscpMapMapTypeOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerQosIpDscpMapMapTypeArrayInput is an input type that accepts SwitchControllerQosIpDscpMapMapTypeArray and SwitchControllerQosIpDscpMapMapTypeArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQosIpDscpMapMapTypeArrayInput` via:
//
//	SwitchControllerQosIpDscpMapMapTypeArray{ SwitchControllerQosIpDscpMapMapTypeArgs{...} }
type SwitchControllerQosIpDscpMapMapTypeArrayInput interface {
	pulumi.Input

	ToSwitchControllerQosIpDscpMapMapTypeArrayOutput() SwitchControllerQosIpDscpMapMapTypeArrayOutput
	ToSwitchControllerQosIpDscpMapMapTypeArrayOutputWithContext(context.Context) SwitchControllerQosIpDscpMapMapTypeArrayOutput
}

type SwitchControllerQosIpDscpMapMapTypeArray []SwitchControllerQosIpDscpMapMapTypeInput

func (SwitchControllerQosIpDscpMapMapTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQosIpDscpMapMapType)(nil)).Elem()
}

func (i SwitchControllerQosIpDscpMapMapTypeArray) ToSwitchControllerQosIpDscpMapMapTypeArrayOutput() SwitchControllerQosIpDscpMapMapTypeArrayOutput {
	return i.ToSwitchControllerQosIpDscpMapMapTypeArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQosIpDscpMapMapTypeArray) ToSwitchControllerQosIpDscpMapMapTypeArrayOutputWithContext(ctx context.Context) SwitchControllerQosIpDscpMapMapTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosIpDscpMapMapTypeArrayOutput)
}

func (i SwitchControllerQosIpDscpMapMapTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQosIpDscpMapMapType] {
	return pulumix.Output[[]SwitchControllerQosIpDscpMapMapType]{
		OutputState: i.ToSwitchControllerQosIpDscpMapMapTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerQosIpDscpMapMapTypeOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosIpDscpMapMapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQosIpDscpMapMapType)(nil)).Elem()
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) ToSwitchControllerQosIpDscpMapMapTypeOutput() SwitchControllerQosIpDscpMapMapTypeOutput {
	return o
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) ToSwitchControllerQosIpDscpMapMapTypeOutputWithContext(ctx context.Context) SwitchControllerQosIpDscpMapMapTypeOutput {
	return o
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQosIpDscpMapMapType] {
	return pulumix.Output[SwitchControllerQosIpDscpMapMapType]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) CosQueue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosIpDscpMapMapType) *int { return v.CosQueue }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) Diffserv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosIpDscpMapMapType) *string { return v.Diffserv }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) IpPrecedence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosIpDscpMapMapType) *string { return v.IpPrecedence }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosIpDscpMapMapType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosIpDscpMapMapTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosIpDscpMapMapType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SwitchControllerQosIpDscpMapMapTypeArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosIpDscpMapMapTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQosIpDscpMapMapType)(nil)).Elem()
}

func (o SwitchControllerQosIpDscpMapMapTypeArrayOutput) ToSwitchControllerQosIpDscpMapMapTypeArrayOutput() SwitchControllerQosIpDscpMapMapTypeArrayOutput {
	return o
}

func (o SwitchControllerQosIpDscpMapMapTypeArrayOutput) ToSwitchControllerQosIpDscpMapMapTypeArrayOutputWithContext(ctx context.Context) SwitchControllerQosIpDscpMapMapTypeArrayOutput {
	return o
}

func (o SwitchControllerQosIpDscpMapMapTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQosIpDscpMapMapType] {
	return pulumix.Output[[]SwitchControllerQosIpDscpMapMapType]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQosIpDscpMapMapTypeArrayOutput) Index(i pulumi.IntInput) SwitchControllerQosIpDscpMapMapTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerQosIpDscpMapMapType {
		return vs[0].([]SwitchControllerQosIpDscpMapMapType)[vs[1].(int)]
	}).(SwitchControllerQosIpDscpMapMapTypeOutput)
}

type SwitchControllerQosQueuePolicyCosQueue struct {
	Description    *string `pulumi:"description"`
	DropPolicy     *string `pulumi:"dropPolicy"`
	Ecn            *string `pulumi:"ecn"`
	MaxRate        *int    `pulumi:"maxRate"`
	MaxRatePercent *int    `pulumi:"maxRatePercent"`
	MinRate        *int    `pulumi:"minRate"`
	MinRatePercent *int    `pulumi:"minRatePercent"`
	Name           *string `pulumi:"name"`
	Weight         *int    `pulumi:"weight"`
}

// SwitchControllerQosQueuePolicyCosQueueInput is an input type that accepts SwitchControllerQosQueuePolicyCosQueueArgs and SwitchControllerQosQueuePolicyCosQueueOutput values.
// You can construct a concrete instance of `SwitchControllerQosQueuePolicyCosQueueInput` via:
//
//	SwitchControllerQosQueuePolicyCosQueueArgs{...}
type SwitchControllerQosQueuePolicyCosQueueInput interface {
	pulumi.Input

	ToSwitchControllerQosQueuePolicyCosQueueOutput() SwitchControllerQosQueuePolicyCosQueueOutput
	ToSwitchControllerQosQueuePolicyCosQueueOutputWithContext(context.Context) SwitchControllerQosQueuePolicyCosQueueOutput
}

type SwitchControllerQosQueuePolicyCosQueueArgs struct {
	Description    pulumi.StringPtrInput `pulumi:"description"`
	DropPolicy     pulumi.StringPtrInput `pulumi:"dropPolicy"`
	Ecn            pulumi.StringPtrInput `pulumi:"ecn"`
	MaxRate        pulumi.IntPtrInput    `pulumi:"maxRate"`
	MaxRatePercent pulumi.IntPtrInput    `pulumi:"maxRatePercent"`
	MinRate        pulumi.IntPtrInput    `pulumi:"minRate"`
	MinRatePercent pulumi.IntPtrInput    `pulumi:"minRatePercent"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
	Weight         pulumi.IntPtrInput    `pulumi:"weight"`
}

func (SwitchControllerQosQueuePolicyCosQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQosQueuePolicyCosQueue)(nil)).Elem()
}

func (i SwitchControllerQosQueuePolicyCosQueueArgs) ToSwitchControllerQosQueuePolicyCosQueueOutput() SwitchControllerQosQueuePolicyCosQueueOutput {
	return i.ToSwitchControllerQosQueuePolicyCosQueueOutputWithContext(context.Background())
}

func (i SwitchControllerQosQueuePolicyCosQueueArgs) ToSwitchControllerQosQueuePolicyCosQueueOutputWithContext(ctx context.Context) SwitchControllerQosQueuePolicyCosQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosQueuePolicyCosQueueOutput)
}

func (i SwitchControllerQosQueuePolicyCosQueueArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQosQueuePolicyCosQueue] {
	return pulumix.Output[SwitchControllerQosQueuePolicyCosQueue]{
		OutputState: i.ToSwitchControllerQosQueuePolicyCosQueueOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerQosQueuePolicyCosQueueArrayInput is an input type that accepts SwitchControllerQosQueuePolicyCosQueueArray and SwitchControllerQosQueuePolicyCosQueueArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQosQueuePolicyCosQueueArrayInput` via:
//
//	SwitchControllerQosQueuePolicyCosQueueArray{ SwitchControllerQosQueuePolicyCosQueueArgs{...} }
type SwitchControllerQosQueuePolicyCosQueueArrayInput interface {
	pulumi.Input

	ToSwitchControllerQosQueuePolicyCosQueueArrayOutput() SwitchControllerQosQueuePolicyCosQueueArrayOutput
	ToSwitchControllerQosQueuePolicyCosQueueArrayOutputWithContext(context.Context) SwitchControllerQosQueuePolicyCosQueueArrayOutput
}

type SwitchControllerQosQueuePolicyCosQueueArray []SwitchControllerQosQueuePolicyCosQueueInput

func (SwitchControllerQosQueuePolicyCosQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQosQueuePolicyCosQueue)(nil)).Elem()
}

func (i SwitchControllerQosQueuePolicyCosQueueArray) ToSwitchControllerQosQueuePolicyCosQueueArrayOutput() SwitchControllerQosQueuePolicyCosQueueArrayOutput {
	return i.ToSwitchControllerQosQueuePolicyCosQueueArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQosQueuePolicyCosQueueArray) ToSwitchControllerQosQueuePolicyCosQueueArrayOutputWithContext(ctx context.Context) SwitchControllerQosQueuePolicyCosQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQosQueuePolicyCosQueueArrayOutput)
}

func (i SwitchControllerQosQueuePolicyCosQueueArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQosQueuePolicyCosQueue] {
	return pulumix.Output[[]SwitchControllerQosQueuePolicyCosQueue]{
		OutputState: i.ToSwitchControllerQosQueuePolicyCosQueueArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerQosQueuePolicyCosQueueOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosQueuePolicyCosQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQosQueuePolicyCosQueue)(nil)).Elem()
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) ToSwitchControllerQosQueuePolicyCosQueueOutput() SwitchControllerQosQueuePolicyCosQueueOutput {
	return o
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) ToSwitchControllerQosQueuePolicyCosQueueOutputWithContext(ctx context.Context) SwitchControllerQosQueuePolicyCosQueueOutput {
	return o
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQosQueuePolicyCosQueue] {
	return pulumix.Output[SwitchControllerQosQueuePolicyCosQueue]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) DropPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *string { return v.DropPolicy }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) Ecn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *string { return v.Ecn }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) MaxRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *int { return v.MaxRate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) MaxRatePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *int { return v.MaxRatePercent }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) MinRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *int { return v.MinRate }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) MinRatePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *int { return v.MinRatePercent }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQosQueuePolicyCosQueueOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQosQueuePolicyCosQueue) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SwitchControllerQosQueuePolicyCosQueueArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQosQueuePolicyCosQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQosQueuePolicyCosQueue)(nil)).Elem()
}

func (o SwitchControllerQosQueuePolicyCosQueueArrayOutput) ToSwitchControllerQosQueuePolicyCosQueueArrayOutput() SwitchControllerQosQueuePolicyCosQueueArrayOutput {
	return o
}

func (o SwitchControllerQosQueuePolicyCosQueueArrayOutput) ToSwitchControllerQosQueuePolicyCosQueueArrayOutputWithContext(ctx context.Context) SwitchControllerQosQueuePolicyCosQueueArrayOutput {
	return o
}

func (o SwitchControllerQosQueuePolicyCosQueueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQosQueuePolicyCosQueue] {
	return pulumix.Output[[]SwitchControllerQosQueuePolicyCosQueue]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQosQueuePolicyCosQueueArrayOutput) Index(i pulumi.IntInput) SwitchControllerQosQueuePolicyCosQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerQosQueuePolicyCosQueue {
		return vs[0].([]SwitchControllerQosQueuePolicyCosQueue)[vs[1].(int)]
	}).(SwitchControllerQosQueuePolicyCosQueueOutput)
}

type SwitchControllerQuarantineTarget struct {
	Description *string                               `pulumi:"description"`
	EntryId     *int                                  `pulumi:"entryId"`
	Mac         *string                               `pulumi:"mac"`
	Tags        []SwitchControllerQuarantineTargetTag `pulumi:"tags"`
}

// SwitchControllerQuarantineTargetInput is an input type that accepts SwitchControllerQuarantineTargetArgs and SwitchControllerQuarantineTargetOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineTargetInput` via:
//
//	SwitchControllerQuarantineTargetArgs{...}
type SwitchControllerQuarantineTargetInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineTargetOutput() SwitchControllerQuarantineTargetOutput
	ToSwitchControllerQuarantineTargetOutputWithContext(context.Context) SwitchControllerQuarantineTargetOutput
}

type SwitchControllerQuarantineTargetArgs struct {
	Description pulumi.StringPtrInput                         `pulumi:"description"`
	EntryId     pulumi.IntPtrInput                            `pulumi:"entryId"`
	Mac         pulumi.StringPtrInput                         `pulumi:"mac"`
	Tags        SwitchControllerQuarantineTargetTagArrayInput `pulumi:"tags"`
}

func (SwitchControllerQuarantineTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQuarantineTarget)(nil)).Elem()
}

func (i SwitchControllerQuarantineTargetArgs) ToSwitchControllerQuarantineTargetOutput() SwitchControllerQuarantineTargetOutput {
	return i.ToSwitchControllerQuarantineTargetOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineTargetArgs) ToSwitchControllerQuarantineTargetOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineTargetOutput)
}

func (i SwitchControllerQuarantineTargetArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQuarantineTarget] {
	return pulumix.Output[SwitchControllerQuarantineTarget]{
		OutputState: i.ToSwitchControllerQuarantineTargetOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerQuarantineTargetArrayInput is an input type that accepts SwitchControllerQuarantineTargetArray and SwitchControllerQuarantineTargetArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineTargetArrayInput` via:
//
//	SwitchControllerQuarantineTargetArray{ SwitchControllerQuarantineTargetArgs{...} }
type SwitchControllerQuarantineTargetArrayInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineTargetArrayOutput() SwitchControllerQuarantineTargetArrayOutput
	ToSwitchControllerQuarantineTargetArrayOutputWithContext(context.Context) SwitchControllerQuarantineTargetArrayOutput
}

type SwitchControllerQuarantineTargetArray []SwitchControllerQuarantineTargetInput

func (SwitchControllerQuarantineTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQuarantineTarget)(nil)).Elem()
}

func (i SwitchControllerQuarantineTargetArray) ToSwitchControllerQuarantineTargetArrayOutput() SwitchControllerQuarantineTargetArrayOutput {
	return i.ToSwitchControllerQuarantineTargetArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineTargetArray) ToSwitchControllerQuarantineTargetArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineTargetArrayOutput)
}

func (i SwitchControllerQuarantineTargetArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQuarantineTarget] {
	return pulumix.Output[[]SwitchControllerQuarantineTarget]{
		OutputState: i.ToSwitchControllerQuarantineTargetArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerQuarantineTargetOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQuarantineTarget)(nil)).Elem()
}

func (o SwitchControllerQuarantineTargetOutput) ToSwitchControllerQuarantineTargetOutput() SwitchControllerQuarantineTargetOutput {
	return o
}

func (o SwitchControllerQuarantineTargetOutput) ToSwitchControllerQuarantineTargetOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetOutput {
	return o
}

func (o SwitchControllerQuarantineTargetOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQuarantineTarget] {
	return pulumix.Output[SwitchControllerQuarantineTarget]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQuarantineTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQuarantineTarget) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQuarantineTargetOutput) EntryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerQuarantineTarget) *int { return v.EntryId }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerQuarantineTargetOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQuarantineTarget) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQuarantineTargetOutput) Tags() SwitchControllerQuarantineTargetTagArrayOutput {
	return o.ApplyT(func(v SwitchControllerQuarantineTarget) []SwitchControllerQuarantineTargetTag { return v.Tags }).(SwitchControllerQuarantineTargetTagArrayOutput)
}

type SwitchControllerQuarantineTargetArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQuarantineTarget)(nil)).Elem()
}

func (o SwitchControllerQuarantineTargetArrayOutput) ToSwitchControllerQuarantineTargetArrayOutput() SwitchControllerQuarantineTargetArrayOutput {
	return o
}

func (o SwitchControllerQuarantineTargetArrayOutput) ToSwitchControllerQuarantineTargetArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetArrayOutput {
	return o
}

func (o SwitchControllerQuarantineTargetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQuarantineTarget] {
	return pulumix.Output[[]SwitchControllerQuarantineTarget]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQuarantineTargetArrayOutput) Index(i pulumi.IntInput) SwitchControllerQuarantineTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerQuarantineTarget {
		return vs[0].([]SwitchControllerQuarantineTarget)[vs[1].(int)]
	}).(SwitchControllerQuarantineTargetOutput)
}

type SwitchControllerQuarantineTargetTag struct {
	Tags *string `pulumi:"tags"`
}

// SwitchControllerQuarantineTargetTagInput is an input type that accepts SwitchControllerQuarantineTargetTagArgs and SwitchControllerQuarantineTargetTagOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineTargetTagInput` via:
//
//	SwitchControllerQuarantineTargetTagArgs{...}
type SwitchControllerQuarantineTargetTagInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineTargetTagOutput() SwitchControllerQuarantineTargetTagOutput
	ToSwitchControllerQuarantineTargetTagOutputWithContext(context.Context) SwitchControllerQuarantineTargetTagOutput
}

type SwitchControllerQuarantineTargetTagArgs struct {
	Tags pulumi.StringPtrInput `pulumi:"tags"`
}

func (SwitchControllerQuarantineTargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQuarantineTargetTag)(nil)).Elem()
}

func (i SwitchControllerQuarantineTargetTagArgs) ToSwitchControllerQuarantineTargetTagOutput() SwitchControllerQuarantineTargetTagOutput {
	return i.ToSwitchControllerQuarantineTargetTagOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineTargetTagArgs) ToSwitchControllerQuarantineTargetTagOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineTargetTagOutput)
}

func (i SwitchControllerQuarantineTargetTagArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQuarantineTargetTag] {
	return pulumix.Output[SwitchControllerQuarantineTargetTag]{
		OutputState: i.ToSwitchControllerQuarantineTargetTagOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerQuarantineTargetTagArrayInput is an input type that accepts SwitchControllerQuarantineTargetTagArray and SwitchControllerQuarantineTargetTagArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineTargetTagArrayInput` via:
//
//	SwitchControllerQuarantineTargetTagArray{ SwitchControllerQuarantineTargetTagArgs{...} }
type SwitchControllerQuarantineTargetTagArrayInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineTargetTagArrayOutput() SwitchControllerQuarantineTargetTagArrayOutput
	ToSwitchControllerQuarantineTargetTagArrayOutputWithContext(context.Context) SwitchControllerQuarantineTargetTagArrayOutput
}

type SwitchControllerQuarantineTargetTagArray []SwitchControllerQuarantineTargetTagInput

func (SwitchControllerQuarantineTargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQuarantineTargetTag)(nil)).Elem()
}

func (i SwitchControllerQuarantineTargetTagArray) ToSwitchControllerQuarantineTargetTagArrayOutput() SwitchControllerQuarantineTargetTagArrayOutput {
	return i.ToSwitchControllerQuarantineTargetTagArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineTargetTagArray) ToSwitchControllerQuarantineTargetTagArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineTargetTagArrayOutput)
}

func (i SwitchControllerQuarantineTargetTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQuarantineTargetTag] {
	return pulumix.Output[[]SwitchControllerQuarantineTargetTag]{
		OutputState: i.ToSwitchControllerQuarantineTargetTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerQuarantineTargetTagOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineTargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerQuarantineTargetTag)(nil)).Elem()
}

func (o SwitchControllerQuarantineTargetTagOutput) ToSwitchControllerQuarantineTargetTagOutput() SwitchControllerQuarantineTargetTagOutput {
	return o
}

func (o SwitchControllerQuarantineTargetTagOutput) ToSwitchControllerQuarantineTargetTagOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetTagOutput {
	return o
}

func (o SwitchControllerQuarantineTargetTagOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerQuarantineTargetTag] {
	return pulumix.Output[SwitchControllerQuarantineTargetTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQuarantineTargetTagOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerQuarantineTargetTag) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

type SwitchControllerQuarantineTargetTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineTargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerQuarantineTargetTag)(nil)).Elem()
}

func (o SwitchControllerQuarantineTargetTagArrayOutput) ToSwitchControllerQuarantineTargetTagArrayOutput() SwitchControllerQuarantineTargetTagArrayOutput {
	return o
}

func (o SwitchControllerQuarantineTargetTagArrayOutput) ToSwitchControllerQuarantineTargetTagArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineTargetTagArrayOutput {
	return o
}

func (o SwitchControllerQuarantineTargetTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerQuarantineTargetTag] {
	return pulumix.Output[[]SwitchControllerQuarantineTargetTag]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerQuarantineTargetTagArrayOutput) Index(i pulumi.IntInput) SwitchControllerQuarantineTargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerQuarantineTargetTag {
		return vs[0].([]SwitchControllerQuarantineTargetTag)[vs[1].(int)]
	}).(SwitchControllerQuarantineTargetTagOutput)
}

type SwitchControllerSecurityPolicy8021XUserGroup struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerSecurityPolicy8021XUserGroupInput is an input type that accepts SwitchControllerSecurityPolicy8021XUserGroupArgs and SwitchControllerSecurityPolicy8021XUserGroupOutput values.
// You can construct a concrete instance of `SwitchControllerSecurityPolicy8021XUserGroupInput` via:
//
//	SwitchControllerSecurityPolicy8021XUserGroupArgs{...}
type SwitchControllerSecurityPolicy8021XUserGroupInput interface {
	pulumi.Input

	ToSwitchControllerSecurityPolicy8021XUserGroupOutput() SwitchControllerSecurityPolicy8021XUserGroupOutput
	ToSwitchControllerSecurityPolicy8021XUserGroupOutputWithContext(context.Context) SwitchControllerSecurityPolicy8021XUserGroupOutput
}

type SwitchControllerSecurityPolicy8021XUserGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerSecurityPolicy8021XUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSecurityPolicy8021XUserGroup)(nil)).Elem()
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArgs) ToSwitchControllerSecurityPolicy8021XUserGroupOutput() SwitchControllerSecurityPolicy8021XUserGroupOutput {
	return i.ToSwitchControllerSecurityPolicy8021XUserGroupOutputWithContext(context.Background())
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArgs) ToSwitchControllerSecurityPolicy8021XUserGroupOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSecurityPolicy8021XUserGroupOutput)
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSecurityPolicy8021XUserGroup] {
	return pulumix.Output[SwitchControllerSecurityPolicy8021XUserGroup]{
		OutputState: i.ToSwitchControllerSecurityPolicy8021XUserGroupOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerSecurityPolicy8021XUserGroupArrayInput is an input type that accepts SwitchControllerSecurityPolicy8021XUserGroupArray and SwitchControllerSecurityPolicy8021XUserGroupArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSecurityPolicy8021XUserGroupArrayInput` via:
//
//	SwitchControllerSecurityPolicy8021XUserGroupArray{ SwitchControllerSecurityPolicy8021XUserGroupArgs{...} }
type SwitchControllerSecurityPolicy8021XUserGroupArrayInput interface {
	pulumi.Input

	ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutput() SwitchControllerSecurityPolicy8021XUserGroupArrayOutput
	ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutputWithContext(context.Context) SwitchControllerSecurityPolicy8021XUserGroupArrayOutput
}

type SwitchControllerSecurityPolicy8021XUserGroupArray []SwitchControllerSecurityPolicy8021XUserGroupInput

func (SwitchControllerSecurityPolicy8021XUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSecurityPolicy8021XUserGroup)(nil)).Elem()
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArray) ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutput() SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
	return i.ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArray) ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSecurityPolicy8021XUserGroupArrayOutput)
}

func (i SwitchControllerSecurityPolicy8021XUserGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSecurityPolicy8021XUserGroup] {
	return pulumix.Output[[]SwitchControllerSecurityPolicy8021XUserGroup]{
		OutputState: i.ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerSecurityPolicy8021XUserGroupOutput struct{ *pulumi.OutputState }

func (SwitchControllerSecurityPolicy8021XUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSecurityPolicy8021XUserGroup)(nil)).Elem()
}

func (o SwitchControllerSecurityPolicy8021XUserGroupOutput) ToSwitchControllerSecurityPolicy8021XUserGroupOutput() SwitchControllerSecurityPolicy8021XUserGroupOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XUserGroupOutput) ToSwitchControllerSecurityPolicy8021XUserGroupOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XUserGroupOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XUserGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSecurityPolicy8021XUserGroup] {
	return pulumix.Output[SwitchControllerSecurityPolicy8021XUserGroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSecurityPolicy8021XUserGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerSecurityPolicy8021XUserGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerSecurityPolicy8021XUserGroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSecurityPolicy8021XUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSecurityPolicy8021XUserGroup)(nil)).Elem()
}

func (o SwitchControllerSecurityPolicy8021XUserGroupArrayOutput) ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutput() SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XUserGroupArrayOutput) ToSwitchControllerSecurityPolicy8021XUserGroupArrayOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XUserGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSecurityPolicy8021XUserGroup] {
	return pulumix.Output[[]SwitchControllerSecurityPolicy8021XUserGroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSecurityPolicy8021XUserGroupArrayOutput) Index(i pulumi.IntInput) SwitchControllerSecurityPolicy8021XUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerSecurityPolicy8021XUserGroup {
		return vs[0].([]SwitchControllerSecurityPolicy8021XUserGroup)[vs[1].(int)]
	}).(SwitchControllerSecurityPolicy8021XUserGroupOutput)
}

type SwitchControllerSnmpCommunityHost struct {
	Id *int    `pulumi:"id"`
	Ip *string `pulumi:"ip"`
}

// SwitchControllerSnmpCommunityHostInput is an input type that accepts SwitchControllerSnmpCommunityHostArgs and SwitchControllerSnmpCommunityHostOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpCommunityHostInput` via:
//
//	SwitchControllerSnmpCommunityHostArgs{...}
type SwitchControllerSnmpCommunityHostInput interface {
	pulumi.Input

	ToSwitchControllerSnmpCommunityHostOutput() SwitchControllerSnmpCommunityHostOutput
	ToSwitchControllerSnmpCommunityHostOutputWithContext(context.Context) SwitchControllerSnmpCommunityHostOutput
}

type SwitchControllerSnmpCommunityHostArgs struct {
	Id pulumi.IntPtrInput    `pulumi:"id"`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchControllerSnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchControllerSnmpCommunityHostArgs) ToSwitchControllerSnmpCommunityHostOutput() SwitchControllerSnmpCommunityHostOutput {
	return i.ToSwitchControllerSnmpCommunityHostOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpCommunityHostArgs) ToSwitchControllerSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpCommunityHostOutput)
}

func (i SwitchControllerSnmpCommunityHostArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSnmpCommunityHost] {
	return pulumix.Output[SwitchControllerSnmpCommunityHost]{
		OutputState: i.ToSwitchControllerSnmpCommunityHostOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerSnmpCommunityHostArrayInput is an input type that accepts SwitchControllerSnmpCommunityHostArray and SwitchControllerSnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpCommunityHostArrayInput` via:
//
//	SwitchControllerSnmpCommunityHostArray{ SwitchControllerSnmpCommunityHostArgs{...} }
type SwitchControllerSnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToSwitchControllerSnmpCommunityHostArrayOutput() SwitchControllerSnmpCommunityHostArrayOutput
	ToSwitchControllerSnmpCommunityHostArrayOutputWithContext(context.Context) SwitchControllerSnmpCommunityHostArrayOutput
}

type SwitchControllerSnmpCommunityHostArray []SwitchControllerSnmpCommunityHostInput

func (SwitchControllerSnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSnmpCommunityHost)(nil)).Elem()
}

func (i SwitchControllerSnmpCommunityHostArray) ToSwitchControllerSnmpCommunityHostArrayOutput() SwitchControllerSnmpCommunityHostArrayOutput {
	return i.ToSwitchControllerSnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpCommunityHostArray) ToSwitchControllerSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpCommunityHostArrayOutput)
}

func (i SwitchControllerSnmpCommunityHostArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSnmpCommunityHost] {
	return pulumix.Output[[]SwitchControllerSnmpCommunityHost]{
		OutputState: i.ToSwitchControllerSnmpCommunityHostArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerSnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchControllerSnmpCommunityHostOutput) ToSwitchControllerSnmpCommunityHostOutput() SwitchControllerSnmpCommunityHostOutput {
	return o
}

func (o SwitchControllerSnmpCommunityHostOutput) ToSwitchControllerSnmpCommunityHostOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityHostOutput {
	return o
}

func (o SwitchControllerSnmpCommunityHostOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSnmpCommunityHost] {
	return pulumix.Output[SwitchControllerSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchControllerSnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SwitchControllerSnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerSnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchControllerSnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSnmpCommunityHost)(nil)).Elem()
}

func (o SwitchControllerSnmpCommunityHostArrayOutput) ToSwitchControllerSnmpCommunityHostArrayOutput() SwitchControllerSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchControllerSnmpCommunityHostArrayOutput) ToSwitchControllerSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityHostArrayOutput {
	return o
}

func (o SwitchControllerSnmpCommunityHostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSnmpCommunityHost] {
	return pulumix.Output[[]SwitchControllerSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) SwitchControllerSnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerSnmpCommunityHost {
		return vs[0].([]SwitchControllerSnmpCommunityHost)[vs[1].(int)]
	}).(SwitchControllerSnmpCommunityHostOutput)
}

type SwitchControllerStpInstanceVlanRange struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerStpInstanceVlanRangeInput is an input type that accepts SwitchControllerStpInstanceVlanRangeArgs and SwitchControllerStpInstanceVlanRangeOutput values.
// You can construct a concrete instance of `SwitchControllerStpInstanceVlanRangeInput` via:
//
//	SwitchControllerStpInstanceVlanRangeArgs{...}
type SwitchControllerStpInstanceVlanRangeInput interface {
	pulumi.Input

	ToSwitchControllerStpInstanceVlanRangeOutput() SwitchControllerStpInstanceVlanRangeOutput
	ToSwitchControllerStpInstanceVlanRangeOutputWithContext(context.Context) SwitchControllerStpInstanceVlanRangeOutput
}

type SwitchControllerStpInstanceVlanRangeArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerStpInstanceVlanRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerStpInstanceVlanRange)(nil)).Elem()
}

func (i SwitchControllerStpInstanceVlanRangeArgs) ToSwitchControllerStpInstanceVlanRangeOutput() SwitchControllerStpInstanceVlanRangeOutput {
	return i.ToSwitchControllerStpInstanceVlanRangeOutputWithContext(context.Background())
}

func (i SwitchControllerStpInstanceVlanRangeArgs) ToSwitchControllerStpInstanceVlanRangeOutputWithContext(ctx context.Context) SwitchControllerStpInstanceVlanRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerStpInstanceVlanRangeOutput)
}

func (i SwitchControllerStpInstanceVlanRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerStpInstanceVlanRange] {
	return pulumix.Output[SwitchControllerStpInstanceVlanRange]{
		OutputState: i.ToSwitchControllerStpInstanceVlanRangeOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerStpInstanceVlanRangeArrayInput is an input type that accepts SwitchControllerStpInstanceVlanRangeArray and SwitchControllerStpInstanceVlanRangeArrayOutput values.
// You can construct a concrete instance of `SwitchControllerStpInstanceVlanRangeArrayInput` via:
//
//	SwitchControllerStpInstanceVlanRangeArray{ SwitchControllerStpInstanceVlanRangeArgs{...} }
type SwitchControllerStpInstanceVlanRangeArrayInput interface {
	pulumi.Input

	ToSwitchControllerStpInstanceVlanRangeArrayOutput() SwitchControllerStpInstanceVlanRangeArrayOutput
	ToSwitchControllerStpInstanceVlanRangeArrayOutputWithContext(context.Context) SwitchControllerStpInstanceVlanRangeArrayOutput
}

type SwitchControllerStpInstanceVlanRangeArray []SwitchControllerStpInstanceVlanRangeInput

func (SwitchControllerStpInstanceVlanRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerStpInstanceVlanRange)(nil)).Elem()
}

func (i SwitchControllerStpInstanceVlanRangeArray) ToSwitchControllerStpInstanceVlanRangeArrayOutput() SwitchControllerStpInstanceVlanRangeArrayOutput {
	return i.ToSwitchControllerStpInstanceVlanRangeArrayOutputWithContext(context.Background())
}

func (i SwitchControllerStpInstanceVlanRangeArray) ToSwitchControllerStpInstanceVlanRangeArrayOutputWithContext(ctx context.Context) SwitchControllerStpInstanceVlanRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerStpInstanceVlanRangeArrayOutput)
}

func (i SwitchControllerStpInstanceVlanRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerStpInstanceVlanRange] {
	return pulumix.Output[[]SwitchControllerStpInstanceVlanRange]{
		OutputState: i.ToSwitchControllerStpInstanceVlanRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerStpInstanceVlanRangeOutput struct{ *pulumi.OutputState }

func (SwitchControllerStpInstanceVlanRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerStpInstanceVlanRange)(nil)).Elem()
}

func (o SwitchControllerStpInstanceVlanRangeOutput) ToSwitchControllerStpInstanceVlanRangeOutput() SwitchControllerStpInstanceVlanRangeOutput {
	return o
}

func (o SwitchControllerStpInstanceVlanRangeOutput) ToSwitchControllerStpInstanceVlanRangeOutputWithContext(ctx context.Context) SwitchControllerStpInstanceVlanRangeOutput {
	return o
}

func (o SwitchControllerStpInstanceVlanRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerStpInstanceVlanRange] {
	return pulumix.Output[SwitchControllerStpInstanceVlanRange]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerStpInstanceVlanRangeOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerStpInstanceVlanRange) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerStpInstanceVlanRangeArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerStpInstanceVlanRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerStpInstanceVlanRange)(nil)).Elem()
}

func (o SwitchControllerStpInstanceVlanRangeArrayOutput) ToSwitchControllerStpInstanceVlanRangeArrayOutput() SwitchControllerStpInstanceVlanRangeArrayOutput {
	return o
}

func (o SwitchControllerStpInstanceVlanRangeArrayOutput) ToSwitchControllerStpInstanceVlanRangeArrayOutputWithContext(ctx context.Context) SwitchControllerStpInstanceVlanRangeArrayOutput {
	return o
}

func (o SwitchControllerStpInstanceVlanRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerStpInstanceVlanRange] {
	return pulumix.Output[[]SwitchControllerStpInstanceVlanRange]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerStpInstanceVlanRangeArrayOutput) Index(i pulumi.IntInput) SwitchControllerStpInstanceVlanRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerStpInstanceVlanRange {
		return vs[0].([]SwitchControllerStpInstanceVlanRange)[vs[1].(int)]
	}).(SwitchControllerStpInstanceVlanRangeOutput)
}

type SwitchControllerSwitchGroupMember struct {
	Name     *string `pulumi:"name"`
	SwitchId *string `pulumi:"switchId"`
}

// SwitchControllerSwitchGroupMemberInput is an input type that accepts SwitchControllerSwitchGroupMemberArgs and SwitchControllerSwitchGroupMemberOutput values.
// You can construct a concrete instance of `SwitchControllerSwitchGroupMemberInput` via:
//
//	SwitchControllerSwitchGroupMemberArgs{...}
type SwitchControllerSwitchGroupMemberInput interface {
	pulumi.Input

	ToSwitchControllerSwitchGroupMemberOutput() SwitchControllerSwitchGroupMemberOutput
	ToSwitchControllerSwitchGroupMemberOutputWithContext(context.Context) SwitchControllerSwitchGroupMemberOutput
}

type SwitchControllerSwitchGroupMemberArgs struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (SwitchControllerSwitchGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSwitchGroupMember)(nil)).Elem()
}

func (i SwitchControllerSwitchGroupMemberArgs) ToSwitchControllerSwitchGroupMemberOutput() SwitchControllerSwitchGroupMemberOutput {
	return i.ToSwitchControllerSwitchGroupMemberOutputWithContext(context.Background())
}

func (i SwitchControllerSwitchGroupMemberArgs) ToSwitchControllerSwitchGroupMemberOutputWithContext(ctx context.Context) SwitchControllerSwitchGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSwitchGroupMemberOutput)
}

func (i SwitchControllerSwitchGroupMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSwitchGroupMember] {
	return pulumix.Output[SwitchControllerSwitchGroupMember]{
		OutputState: i.ToSwitchControllerSwitchGroupMemberOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerSwitchGroupMemberArrayInput is an input type that accepts SwitchControllerSwitchGroupMemberArray and SwitchControllerSwitchGroupMemberArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSwitchGroupMemberArrayInput` via:
//
//	SwitchControllerSwitchGroupMemberArray{ SwitchControllerSwitchGroupMemberArgs{...} }
type SwitchControllerSwitchGroupMemberArrayInput interface {
	pulumi.Input

	ToSwitchControllerSwitchGroupMemberArrayOutput() SwitchControllerSwitchGroupMemberArrayOutput
	ToSwitchControllerSwitchGroupMemberArrayOutputWithContext(context.Context) SwitchControllerSwitchGroupMemberArrayOutput
}

type SwitchControllerSwitchGroupMemberArray []SwitchControllerSwitchGroupMemberInput

func (SwitchControllerSwitchGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSwitchGroupMember)(nil)).Elem()
}

func (i SwitchControllerSwitchGroupMemberArray) ToSwitchControllerSwitchGroupMemberArrayOutput() SwitchControllerSwitchGroupMemberArrayOutput {
	return i.ToSwitchControllerSwitchGroupMemberArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSwitchGroupMemberArray) ToSwitchControllerSwitchGroupMemberArrayOutputWithContext(ctx context.Context) SwitchControllerSwitchGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSwitchGroupMemberArrayOutput)
}

func (i SwitchControllerSwitchGroupMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSwitchGroupMember] {
	return pulumix.Output[[]SwitchControllerSwitchGroupMember]{
		OutputState: i.ToSwitchControllerSwitchGroupMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerSwitchGroupMemberOutput struct{ *pulumi.OutputState }

func (SwitchControllerSwitchGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerSwitchGroupMember)(nil)).Elem()
}

func (o SwitchControllerSwitchGroupMemberOutput) ToSwitchControllerSwitchGroupMemberOutput() SwitchControllerSwitchGroupMemberOutput {
	return o
}

func (o SwitchControllerSwitchGroupMemberOutput) ToSwitchControllerSwitchGroupMemberOutputWithContext(ctx context.Context) SwitchControllerSwitchGroupMemberOutput {
	return o
}

func (o SwitchControllerSwitchGroupMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerSwitchGroupMember] {
	return pulumix.Output[SwitchControllerSwitchGroupMember]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSwitchGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerSwitchGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerSwitchGroupMemberOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerSwitchGroupMember) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchControllerSwitchGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSwitchGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerSwitchGroupMember)(nil)).Elem()
}

func (o SwitchControllerSwitchGroupMemberArrayOutput) ToSwitchControllerSwitchGroupMemberArrayOutput() SwitchControllerSwitchGroupMemberArrayOutput {
	return o
}

func (o SwitchControllerSwitchGroupMemberArrayOutput) ToSwitchControllerSwitchGroupMemberArrayOutputWithContext(ctx context.Context) SwitchControllerSwitchGroupMemberArrayOutput {
	return o
}

func (o SwitchControllerSwitchGroupMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerSwitchGroupMember] {
	return pulumix.Output[[]SwitchControllerSwitchGroupMember]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSwitchGroupMemberArrayOutput) Index(i pulumi.IntInput) SwitchControllerSwitchGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerSwitchGroupMember {
		return vs[0].([]SwitchControllerSwitchGroupMember)[vs[1].(int)]
	}).(SwitchControllerSwitchGroupMemberOutput)
}

type SwitchControllerTrafficSnifferTargetIp struct {
	Description *string `pulumi:"description"`
	Ip          *string `pulumi:"ip"`
}

// SwitchControllerTrafficSnifferTargetIpInput is an input type that accepts SwitchControllerTrafficSnifferTargetIpArgs and SwitchControllerTrafficSnifferTargetIpOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetIpInput` via:
//
//	SwitchControllerTrafficSnifferTargetIpArgs{...}
type SwitchControllerTrafficSnifferTargetIpInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetIpOutput() SwitchControllerTrafficSnifferTargetIpOutput
	ToSwitchControllerTrafficSnifferTargetIpOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetIpOutput
}

type SwitchControllerTrafficSnifferTargetIpArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Ip          pulumi.StringPtrInput `pulumi:"ip"`
}

func (SwitchControllerTrafficSnifferTargetIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetIp)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetIpArgs) ToSwitchControllerTrafficSnifferTargetIpOutput() SwitchControllerTrafficSnifferTargetIpOutput {
	return i.ToSwitchControllerTrafficSnifferTargetIpOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetIpArgs) ToSwitchControllerTrafficSnifferTargetIpOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetIpOutput)
}

func (i SwitchControllerTrafficSnifferTargetIpArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetIp] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetIp]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetIpOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerTrafficSnifferTargetIpArrayInput is an input type that accepts SwitchControllerTrafficSnifferTargetIpArray and SwitchControllerTrafficSnifferTargetIpArrayOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetIpArrayInput` via:
//
//	SwitchControllerTrafficSnifferTargetIpArray{ SwitchControllerTrafficSnifferTargetIpArgs{...} }
type SwitchControllerTrafficSnifferTargetIpArrayInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetIpArrayOutput() SwitchControllerTrafficSnifferTargetIpArrayOutput
	ToSwitchControllerTrafficSnifferTargetIpArrayOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetIpArrayOutput
}

type SwitchControllerTrafficSnifferTargetIpArray []SwitchControllerTrafficSnifferTargetIpInput

func (SwitchControllerTrafficSnifferTargetIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetIp)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetIpArray) ToSwitchControllerTrafficSnifferTargetIpArrayOutput() SwitchControllerTrafficSnifferTargetIpArrayOutput {
	return i.ToSwitchControllerTrafficSnifferTargetIpArrayOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetIpArray) ToSwitchControllerTrafficSnifferTargetIpArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetIpArrayOutput)
}

func (i SwitchControllerTrafficSnifferTargetIpArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetIp] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetIp]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetIpArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerTrafficSnifferTargetIpOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetIp)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetIpOutput) ToSwitchControllerTrafficSnifferTargetIpOutput() SwitchControllerTrafficSnifferTargetIpOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetIpOutput) ToSwitchControllerTrafficSnifferTargetIpOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetIpOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetIpOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetIp] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetIp]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetIpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetIp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerTrafficSnifferTargetIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SwitchControllerTrafficSnifferTargetIpArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetIp)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetIpArrayOutput) ToSwitchControllerTrafficSnifferTargetIpArrayOutput() SwitchControllerTrafficSnifferTargetIpArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetIpArrayOutput) ToSwitchControllerTrafficSnifferTargetIpArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetIpArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetIpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetIp] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetIp]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetIpArrayOutput) Index(i pulumi.IntInput) SwitchControllerTrafficSnifferTargetIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerTrafficSnifferTargetIp {
		return vs[0].([]SwitchControllerTrafficSnifferTargetIp)[vs[1].(int)]
	}).(SwitchControllerTrafficSnifferTargetIpOutput)
}

type SwitchControllerTrafficSnifferTargetMac struct {
	Description *string `pulumi:"description"`
	Mac         *string `pulumi:"mac"`
}

// SwitchControllerTrafficSnifferTargetMacInput is an input type that accepts SwitchControllerTrafficSnifferTargetMacArgs and SwitchControllerTrafficSnifferTargetMacOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetMacInput` via:
//
//	SwitchControllerTrafficSnifferTargetMacArgs{...}
type SwitchControllerTrafficSnifferTargetMacInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetMacOutput() SwitchControllerTrafficSnifferTargetMacOutput
	ToSwitchControllerTrafficSnifferTargetMacOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetMacOutput
}

type SwitchControllerTrafficSnifferTargetMacArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Mac         pulumi.StringPtrInput `pulumi:"mac"`
}

func (SwitchControllerTrafficSnifferTargetMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetMac)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetMacArgs) ToSwitchControllerTrafficSnifferTargetMacOutput() SwitchControllerTrafficSnifferTargetMacOutput {
	return i.ToSwitchControllerTrafficSnifferTargetMacOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetMacArgs) ToSwitchControllerTrafficSnifferTargetMacOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetMacOutput)
}

func (i SwitchControllerTrafficSnifferTargetMacArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetMac] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetMac]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetMacOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerTrafficSnifferTargetMacArrayInput is an input type that accepts SwitchControllerTrafficSnifferTargetMacArray and SwitchControllerTrafficSnifferTargetMacArrayOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetMacArrayInput` via:
//
//	SwitchControllerTrafficSnifferTargetMacArray{ SwitchControllerTrafficSnifferTargetMacArgs{...} }
type SwitchControllerTrafficSnifferTargetMacArrayInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetMacArrayOutput() SwitchControllerTrafficSnifferTargetMacArrayOutput
	ToSwitchControllerTrafficSnifferTargetMacArrayOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetMacArrayOutput
}

type SwitchControllerTrafficSnifferTargetMacArray []SwitchControllerTrafficSnifferTargetMacInput

func (SwitchControllerTrafficSnifferTargetMacArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetMac)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetMacArray) ToSwitchControllerTrafficSnifferTargetMacArrayOutput() SwitchControllerTrafficSnifferTargetMacArrayOutput {
	return i.ToSwitchControllerTrafficSnifferTargetMacArrayOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetMacArray) ToSwitchControllerTrafficSnifferTargetMacArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetMacArrayOutput)
}

func (i SwitchControllerTrafficSnifferTargetMacArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetMac] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetMac]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetMacArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerTrafficSnifferTargetMacOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetMac)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetMacOutput) ToSwitchControllerTrafficSnifferTargetMacOutput() SwitchControllerTrafficSnifferTargetMacOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetMacOutput) ToSwitchControllerTrafficSnifferTargetMacOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetMacOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetMacOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetMac] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetMac]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetMacOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetMac) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerTrafficSnifferTargetMacOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetMac) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

type SwitchControllerTrafficSnifferTargetMacArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetMac)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetMacArrayOutput) ToSwitchControllerTrafficSnifferTargetMacArrayOutput() SwitchControllerTrafficSnifferTargetMacArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetMacArrayOutput) ToSwitchControllerTrafficSnifferTargetMacArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetMacArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetMacArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetMac] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetMac]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetMacArrayOutput) Index(i pulumi.IntInput) SwitchControllerTrafficSnifferTargetMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerTrafficSnifferTargetMac {
		return vs[0].([]SwitchControllerTrafficSnifferTargetMac)[vs[1].(int)]
	}).(SwitchControllerTrafficSnifferTargetMacOutput)
}

type SwitchControllerTrafficSnifferTargetPort struct {
	Description *string                                           `pulumi:"description"`
	InPorts     []SwitchControllerTrafficSnifferTargetPortInPort  `pulumi:"inPorts"`
	OutPorts    []SwitchControllerTrafficSnifferTargetPortOutPort `pulumi:"outPorts"`
	SwitchId    *string                                           `pulumi:"switchId"`
}

// SwitchControllerTrafficSnifferTargetPortInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortArgs and SwitchControllerTrafficSnifferTargetPortOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortArgs{...}
type SwitchControllerTrafficSnifferTargetPortInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortOutput() SwitchControllerTrafficSnifferTargetPortOutput
	ToSwitchControllerTrafficSnifferTargetPortOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortOutput
}

type SwitchControllerTrafficSnifferTargetPortArgs struct {
	Description pulumi.StringPtrInput                                     `pulumi:"description"`
	InPorts     SwitchControllerTrafficSnifferTargetPortInPortArrayInput  `pulumi:"inPorts"`
	OutPorts    SwitchControllerTrafficSnifferTargetPortOutPortArrayInput `pulumi:"outPorts"`
	SwitchId    pulumi.StringPtrInput                                     `pulumi:"switchId"`
}

func (SwitchControllerTrafficSnifferTargetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortArgs) ToSwitchControllerTrafficSnifferTargetPortOutput() SwitchControllerTrafficSnifferTargetPortOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortArgs) ToSwitchControllerTrafficSnifferTargetPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerTrafficSnifferTargetPortArrayInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortArray and SwitchControllerTrafficSnifferTargetPortArrayOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortArrayInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortArray{ SwitchControllerTrafficSnifferTargetPortArgs{...} }
type SwitchControllerTrafficSnifferTargetPortArrayInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortArrayOutput() SwitchControllerTrafficSnifferTargetPortArrayOutput
	ToSwitchControllerTrafficSnifferTargetPortArrayOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortArrayOutput
}

type SwitchControllerTrafficSnifferTargetPortArray []SwitchControllerTrafficSnifferTargetPortInput

func (SwitchControllerTrafficSnifferTargetPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortArray) ToSwitchControllerTrafficSnifferTargetPortArrayOutput() SwitchControllerTrafficSnifferTargetPortArrayOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortArrayOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortArray) ToSwitchControllerTrafficSnifferTargetPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortArrayOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerTrafficSnifferTargetPortOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) ToSwitchControllerTrafficSnifferTargetPortOutput() SwitchControllerTrafficSnifferTargetPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) ToSwitchControllerTrafficSnifferTargetPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPort) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) InPorts() SwitchControllerTrafficSnifferTargetPortInPortArrayOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPort) []SwitchControllerTrafficSnifferTargetPortInPort {
		return v.InPorts
	}).(SwitchControllerTrafficSnifferTargetPortInPortArrayOutput)
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) OutPorts() SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPort) []SwitchControllerTrafficSnifferTargetPortOutPort {
		return v.OutPorts
	}).(SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput)
}

func (o SwitchControllerTrafficSnifferTargetPortOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPort) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type SwitchControllerTrafficSnifferTargetPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortArrayOutput() SwitchControllerTrafficSnifferTargetPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortArrayOutput) Index(i pulumi.IntInput) SwitchControllerTrafficSnifferTargetPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerTrafficSnifferTargetPort {
		return vs[0].([]SwitchControllerTrafficSnifferTargetPort)[vs[1].(int)]
	}).(SwitchControllerTrafficSnifferTargetPortOutput)
}

type SwitchControllerTrafficSnifferTargetPortInPort struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerTrafficSnifferTargetPortInPortInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortInPortArgs and SwitchControllerTrafficSnifferTargetPortInPortOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortInPortInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortInPortArgs{...}
type SwitchControllerTrafficSnifferTargetPortInPortInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortInPortOutput() SwitchControllerTrafficSnifferTargetPortInPortOutput
	ToSwitchControllerTrafficSnifferTargetPortInPortOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortInPortOutput
}

type SwitchControllerTrafficSnifferTargetPortInPortArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerTrafficSnifferTargetPortInPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortInPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArgs) ToSwitchControllerTrafficSnifferTargetPortInPortOutput() SwitchControllerTrafficSnifferTargetPortInPortOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortInPortOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArgs) ToSwitchControllerTrafficSnifferTargetPortInPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortInPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortInPortOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPortInPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPortInPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortInPortOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerTrafficSnifferTargetPortInPortArrayInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortInPortArray and SwitchControllerTrafficSnifferTargetPortInPortArrayOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortInPortArrayInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortInPortArray{ SwitchControllerTrafficSnifferTargetPortInPortArgs{...} }
type SwitchControllerTrafficSnifferTargetPortInPortArrayInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutput() SwitchControllerTrafficSnifferTargetPortInPortArrayOutput
	ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortInPortArrayOutput
}

type SwitchControllerTrafficSnifferTargetPortInPortArray []SwitchControllerTrafficSnifferTargetPortInPortInput

func (SwitchControllerTrafficSnifferTargetPortInPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPortInPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArray) ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutput() SwitchControllerTrafficSnifferTargetPortInPortArrayOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArray) ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortInPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortInPortArrayOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortInPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortInPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortInPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerTrafficSnifferTargetPortInPortOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortInPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortInPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortInPortOutput) ToSwitchControllerTrafficSnifferTargetPortInPortOutput() SwitchControllerTrafficSnifferTargetPortInPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortInPortOutput) ToSwitchControllerTrafficSnifferTargetPortInPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortInPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortInPortOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPortInPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPortInPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortInPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPortInPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerTrafficSnifferTargetPortInPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortInPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPortInPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortInPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutput() SwitchControllerTrafficSnifferTargetPortInPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortInPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortInPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortInPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortInPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortInPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortInPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortInPortArrayOutput) Index(i pulumi.IntInput) SwitchControllerTrafficSnifferTargetPortInPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerTrafficSnifferTargetPortInPort {
		return vs[0].([]SwitchControllerTrafficSnifferTargetPortInPort)[vs[1].(int)]
	}).(SwitchControllerTrafficSnifferTargetPortInPortOutput)
}

type SwitchControllerTrafficSnifferTargetPortOutPort struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerTrafficSnifferTargetPortOutPortInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortOutPortArgs and SwitchControllerTrafficSnifferTargetPortOutPortOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortOutPortInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortOutPortArgs{...}
type SwitchControllerTrafficSnifferTargetPortOutPortInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortOutPortOutput() SwitchControllerTrafficSnifferTargetPortOutPortOutput
	ToSwitchControllerTrafficSnifferTargetPortOutPortOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortOutPortOutput
}

type SwitchControllerTrafficSnifferTargetPortOutPortArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerTrafficSnifferTargetPortOutPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortOutPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArgs) ToSwitchControllerTrafficSnifferTargetPortOutPortOutput() SwitchControllerTrafficSnifferTargetPortOutPortOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortOutPortOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArgs) ToSwitchControllerTrafficSnifferTargetPortOutPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortOutPortOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPortOutPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPortOutPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortOutPortOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerTrafficSnifferTargetPortOutPortArrayInput is an input type that accepts SwitchControllerTrafficSnifferTargetPortOutPortArray and SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput values.
// You can construct a concrete instance of `SwitchControllerTrafficSnifferTargetPortOutPortArrayInput` via:
//
//	SwitchControllerTrafficSnifferTargetPortOutPortArray{ SwitchControllerTrafficSnifferTargetPortOutPortArgs{...} }
type SwitchControllerTrafficSnifferTargetPortOutPortArrayInput interface {
	pulumi.Input

	ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutput() SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput
	ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutputWithContext(context.Context) SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput
}

type SwitchControllerTrafficSnifferTargetPortOutPortArray []SwitchControllerTrafficSnifferTargetPortOutPortInput

func (SwitchControllerTrafficSnifferTargetPortOutPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPortOutPort)(nil)).Elem()
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArray) ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutput() SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput {
	return i.ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutputWithContext(context.Background())
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArray) ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput)
}

func (i SwitchControllerTrafficSnifferTargetPortOutPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortOutPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortOutPort]{
		OutputState: i.ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerTrafficSnifferTargetPortOutPortOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortOutPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortOutPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortOutput) ToSwitchControllerTrafficSnifferTargetPortOutPortOutput() SwitchControllerTrafficSnifferTargetPortOutPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortOutput) ToSwitchControllerTrafficSnifferTargetPortOutPortOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutPortOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerTrafficSnifferTargetPortOutPort] {
	return pulumix.Output[SwitchControllerTrafficSnifferTargetPortOutPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerTrafficSnifferTargetPortOutPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerTrafficSnifferTargetPortOutPort)(nil)).Elem()
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutput() SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput) ToSwitchControllerTrafficSnifferTargetPortOutPortArrayOutputWithContext(ctx context.Context) SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput {
	return o
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortOutPort] {
	return pulumix.Output[[]SwitchControllerTrafficSnifferTargetPortOutPort]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput) Index(i pulumi.IntInput) SwitchControllerTrafficSnifferTargetPortOutPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerTrafficSnifferTargetPortOutPort {
		return vs[0].([]SwitchControllerTrafficSnifferTargetPortOutPort)[vs[1].(int)]
	}).(SwitchControllerTrafficSnifferTargetPortOutPortOutput)
}

type SwitchControllerVlanPolicyAllowedVlan struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerVlanPolicyAllowedVlanInput is an input type that accepts SwitchControllerVlanPolicyAllowedVlanArgs and SwitchControllerVlanPolicyAllowedVlanOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPolicyAllowedVlanInput` via:
//
//	SwitchControllerVlanPolicyAllowedVlanArgs{...}
type SwitchControllerVlanPolicyAllowedVlanInput interface {
	pulumi.Input

	ToSwitchControllerVlanPolicyAllowedVlanOutput() SwitchControllerVlanPolicyAllowedVlanOutput
	ToSwitchControllerVlanPolicyAllowedVlanOutputWithContext(context.Context) SwitchControllerVlanPolicyAllowedVlanOutput
}

type SwitchControllerVlanPolicyAllowedVlanArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerVlanPolicyAllowedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPolicyAllowedVlan)(nil)).Elem()
}

func (i SwitchControllerVlanPolicyAllowedVlanArgs) ToSwitchControllerVlanPolicyAllowedVlanOutput() SwitchControllerVlanPolicyAllowedVlanOutput {
	return i.ToSwitchControllerVlanPolicyAllowedVlanOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPolicyAllowedVlanArgs) ToSwitchControllerVlanPolicyAllowedVlanOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyAllowedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPolicyAllowedVlanOutput)
}

func (i SwitchControllerVlanPolicyAllowedVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPolicyAllowedVlan] {
	return pulumix.Output[SwitchControllerVlanPolicyAllowedVlan]{
		OutputState: i.ToSwitchControllerVlanPolicyAllowedVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerVlanPolicyAllowedVlanArrayInput is an input type that accepts SwitchControllerVlanPolicyAllowedVlanArray and SwitchControllerVlanPolicyAllowedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPolicyAllowedVlanArrayInput` via:
//
//	SwitchControllerVlanPolicyAllowedVlanArray{ SwitchControllerVlanPolicyAllowedVlanArgs{...} }
type SwitchControllerVlanPolicyAllowedVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerVlanPolicyAllowedVlanArrayOutput() SwitchControllerVlanPolicyAllowedVlanArrayOutput
	ToSwitchControllerVlanPolicyAllowedVlanArrayOutputWithContext(context.Context) SwitchControllerVlanPolicyAllowedVlanArrayOutput
}

type SwitchControllerVlanPolicyAllowedVlanArray []SwitchControllerVlanPolicyAllowedVlanInput

func (SwitchControllerVlanPolicyAllowedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanPolicyAllowedVlan)(nil)).Elem()
}

func (i SwitchControllerVlanPolicyAllowedVlanArray) ToSwitchControllerVlanPolicyAllowedVlanArrayOutput() SwitchControllerVlanPolicyAllowedVlanArrayOutput {
	return i.ToSwitchControllerVlanPolicyAllowedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPolicyAllowedVlanArray) ToSwitchControllerVlanPolicyAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyAllowedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPolicyAllowedVlanArrayOutput)
}

func (i SwitchControllerVlanPolicyAllowedVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanPolicyAllowedVlan] {
	return pulumix.Output[[]SwitchControllerVlanPolicyAllowedVlan]{
		OutputState: i.ToSwitchControllerVlanPolicyAllowedVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerVlanPolicyAllowedVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPolicyAllowedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPolicyAllowedVlan)(nil)).Elem()
}

func (o SwitchControllerVlanPolicyAllowedVlanOutput) ToSwitchControllerVlanPolicyAllowedVlanOutput() SwitchControllerVlanPolicyAllowedVlanOutput {
	return o
}

func (o SwitchControllerVlanPolicyAllowedVlanOutput) ToSwitchControllerVlanPolicyAllowedVlanOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyAllowedVlanOutput {
	return o
}

func (o SwitchControllerVlanPolicyAllowedVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPolicyAllowedVlan] {
	return pulumix.Output[SwitchControllerVlanPolicyAllowedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPolicyAllowedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPolicyAllowedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerVlanPolicyAllowedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPolicyAllowedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanPolicyAllowedVlan)(nil)).Elem()
}

func (o SwitchControllerVlanPolicyAllowedVlanArrayOutput) ToSwitchControllerVlanPolicyAllowedVlanArrayOutput() SwitchControllerVlanPolicyAllowedVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanPolicyAllowedVlanArrayOutput) ToSwitchControllerVlanPolicyAllowedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyAllowedVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanPolicyAllowedVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanPolicyAllowedVlan] {
	return pulumix.Output[[]SwitchControllerVlanPolicyAllowedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPolicyAllowedVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerVlanPolicyAllowedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerVlanPolicyAllowedVlan {
		return vs[0].([]SwitchControllerVlanPolicyAllowedVlan)[vs[1].(int)]
	}).(SwitchControllerVlanPolicyAllowedVlanOutput)
}

type SwitchControllerVlanPolicyUntaggedVlan struct {
	VlanName *string `pulumi:"vlanName"`
}

// SwitchControllerVlanPolicyUntaggedVlanInput is an input type that accepts SwitchControllerVlanPolicyUntaggedVlanArgs and SwitchControllerVlanPolicyUntaggedVlanOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPolicyUntaggedVlanInput` via:
//
//	SwitchControllerVlanPolicyUntaggedVlanArgs{...}
type SwitchControllerVlanPolicyUntaggedVlanInput interface {
	pulumi.Input

	ToSwitchControllerVlanPolicyUntaggedVlanOutput() SwitchControllerVlanPolicyUntaggedVlanOutput
	ToSwitchControllerVlanPolicyUntaggedVlanOutputWithContext(context.Context) SwitchControllerVlanPolicyUntaggedVlanOutput
}

type SwitchControllerVlanPolicyUntaggedVlanArgs struct {
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (SwitchControllerVlanPolicyUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPolicyUntaggedVlan)(nil)).Elem()
}

func (i SwitchControllerVlanPolicyUntaggedVlanArgs) ToSwitchControllerVlanPolicyUntaggedVlanOutput() SwitchControllerVlanPolicyUntaggedVlanOutput {
	return i.ToSwitchControllerVlanPolicyUntaggedVlanOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPolicyUntaggedVlanArgs) ToSwitchControllerVlanPolicyUntaggedVlanOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPolicyUntaggedVlanOutput)
}

func (i SwitchControllerVlanPolicyUntaggedVlanArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPolicyUntaggedVlan] {
	return pulumix.Output[SwitchControllerVlanPolicyUntaggedVlan]{
		OutputState: i.ToSwitchControllerVlanPolicyUntaggedVlanOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerVlanPolicyUntaggedVlanArrayInput is an input type that accepts SwitchControllerVlanPolicyUntaggedVlanArray and SwitchControllerVlanPolicyUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPolicyUntaggedVlanArrayInput` via:
//
//	SwitchControllerVlanPolicyUntaggedVlanArray{ SwitchControllerVlanPolicyUntaggedVlanArgs{...} }
type SwitchControllerVlanPolicyUntaggedVlanArrayInput interface {
	pulumi.Input

	ToSwitchControllerVlanPolicyUntaggedVlanArrayOutput() SwitchControllerVlanPolicyUntaggedVlanArrayOutput
	ToSwitchControllerVlanPolicyUntaggedVlanArrayOutputWithContext(context.Context) SwitchControllerVlanPolicyUntaggedVlanArrayOutput
}

type SwitchControllerVlanPolicyUntaggedVlanArray []SwitchControllerVlanPolicyUntaggedVlanInput

func (SwitchControllerVlanPolicyUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanPolicyUntaggedVlan)(nil)).Elem()
}

func (i SwitchControllerVlanPolicyUntaggedVlanArray) ToSwitchControllerVlanPolicyUntaggedVlanArrayOutput() SwitchControllerVlanPolicyUntaggedVlanArrayOutput {
	return i.ToSwitchControllerVlanPolicyUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPolicyUntaggedVlanArray) ToSwitchControllerVlanPolicyUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPolicyUntaggedVlanArrayOutput)
}

func (i SwitchControllerVlanPolicyUntaggedVlanArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanPolicyUntaggedVlan] {
	return pulumix.Output[[]SwitchControllerVlanPolicyUntaggedVlan]{
		OutputState: i.ToSwitchControllerVlanPolicyUntaggedVlanArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerVlanPolicyUntaggedVlanOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPolicyUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPolicyUntaggedVlan)(nil)).Elem()
}

func (o SwitchControllerVlanPolicyUntaggedVlanOutput) ToSwitchControllerVlanPolicyUntaggedVlanOutput() SwitchControllerVlanPolicyUntaggedVlanOutput {
	return o
}

func (o SwitchControllerVlanPolicyUntaggedVlanOutput) ToSwitchControllerVlanPolicyUntaggedVlanOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyUntaggedVlanOutput {
	return o
}

func (o SwitchControllerVlanPolicyUntaggedVlanOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPolicyUntaggedVlan] {
	return pulumix.Output[SwitchControllerVlanPolicyUntaggedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPolicyUntaggedVlanOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPolicyUntaggedVlan) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type SwitchControllerVlanPolicyUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPolicyUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanPolicyUntaggedVlan)(nil)).Elem()
}

func (o SwitchControllerVlanPolicyUntaggedVlanArrayOutput) ToSwitchControllerVlanPolicyUntaggedVlanArrayOutput() SwitchControllerVlanPolicyUntaggedVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanPolicyUntaggedVlanArrayOutput) ToSwitchControllerVlanPolicyUntaggedVlanArrayOutputWithContext(ctx context.Context) SwitchControllerVlanPolicyUntaggedVlanArrayOutput {
	return o
}

func (o SwitchControllerVlanPolicyUntaggedVlanArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanPolicyUntaggedVlan] {
	return pulumix.Output[[]SwitchControllerVlanPolicyUntaggedVlan]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPolicyUntaggedVlanArrayOutput) Index(i pulumi.IntInput) SwitchControllerVlanPolicyUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerVlanPolicyUntaggedVlan {
		return vs[0].([]SwitchControllerVlanPolicyUntaggedVlan)[vs[1].(int)]
	}).(SwitchControllerVlanPolicyUntaggedVlanOutput)
}

type SwitchControllerVlanPortalMessageOverrides struct {
	AuthDisclaimerPage  *string `pulumi:"authDisclaimerPage"`
	AuthLoginFailedPage *string `pulumi:"authLoginFailedPage"`
	AuthLoginPage       *string `pulumi:"authLoginPage"`
	AuthRejectPage      *string `pulumi:"authRejectPage"`
}

// SwitchControllerVlanPortalMessageOverridesInput is an input type that accepts SwitchControllerVlanPortalMessageOverridesArgs and SwitchControllerVlanPortalMessageOverridesOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPortalMessageOverridesInput` via:
//
//	SwitchControllerVlanPortalMessageOverridesArgs{...}
type SwitchControllerVlanPortalMessageOverridesInput interface {
	pulumi.Input

	ToSwitchControllerVlanPortalMessageOverridesOutput() SwitchControllerVlanPortalMessageOverridesOutput
	ToSwitchControllerVlanPortalMessageOverridesOutputWithContext(context.Context) SwitchControllerVlanPortalMessageOverridesOutput
}

type SwitchControllerVlanPortalMessageOverridesArgs struct {
	AuthDisclaimerPage  pulumi.StringPtrInput `pulumi:"authDisclaimerPage"`
	AuthLoginFailedPage pulumi.StringPtrInput `pulumi:"authLoginFailedPage"`
	AuthLoginPage       pulumi.StringPtrInput `pulumi:"authLoginPage"`
	AuthRejectPage      pulumi.StringPtrInput `pulumi:"authRejectPage"`
}

func (SwitchControllerVlanPortalMessageOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPortalMessageOverrides)(nil)).Elem()
}

func (i SwitchControllerVlanPortalMessageOverridesArgs) ToSwitchControllerVlanPortalMessageOverridesOutput() SwitchControllerVlanPortalMessageOverridesOutput {
	return i.ToSwitchControllerVlanPortalMessageOverridesOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPortalMessageOverridesArgs) ToSwitchControllerVlanPortalMessageOverridesOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPortalMessageOverridesOutput)
}

func (i SwitchControllerVlanPortalMessageOverridesArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPortalMessageOverrides] {
	return pulumix.Output[SwitchControllerVlanPortalMessageOverrides]{
		OutputState: i.ToSwitchControllerVlanPortalMessageOverridesOutputWithContext(ctx).OutputState,
	}
}

func (i SwitchControllerVlanPortalMessageOverridesArgs) ToSwitchControllerVlanPortalMessageOverridesPtrOutput() SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return i.ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i SwitchControllerVlanPortalMessageOverridesArgs) ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPortalMessageOverridesOutput).ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx)
}

// SwitchControllerVlanPortalMessageOverridesPtrInput is an input type that accepts SwitchControllerVlanPortalMessageOverridesArgs, SwitchControllerVlanPortalMessageOverridesPtr and SwitchControllerVlanPortalMessageOverridesPtrOutput values.
// You can construct a concrete instance of `SwitchControllerVlanPortalMessageOverridesPtrInput` via:
//
//	        SwitchControllerVlanPortalMessageOverridesArgs{...}
//
//	or:
//
//	        nil
type SwitchControllerVlanPortalMessageOverridesPtrInput interface {
	pulumi.Input

	ToSwitchControllerVlanPortalMessageOverridesPtrOutput() SwitchControllerVlanPortalMessageOverridesPtrOutput
	ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(context.Context) SwitchControllerVlanPortalMessageOverridesPtrOutput
}

type switchControllerVlanPortalMessageOverridesPtrType SwitchControllerVlanPortalMessageOverridesArgs

func SwitchControllerVlanPortalMessageOverridesPtr(v *SwitchControllerVlanPortalMessageOverridesArgs) SwitchControllerVlanPortalMessageOverridesPtrInput {
	return (*switchControllerVlanPortalMessageOverridesPtrType)(v)
}

func (*switchControllerVlanPortalMessageOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlanPortalMessageOverrides)(nil)).Elem()
}

func (i *switchControllerVlanPortalMessageOverridesPtrType) ToSwitchControllerVlanPortalMessageOverridesPtrOutput() SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return i.ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (i *switchControllerVlanPortalMessageOverridesPtrType) ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanPortalMessageOverridesPtrOutput)
}

func (i *switchControllerVlanPortalMessageOverridesPtrType) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerVlanPortalMessageOverrides] {
	return pulumix.Output[*SwitchControllerVlanPortalMessageOverrides]{
		OutputState: i.ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerVlanPortalMessageOverridesOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPortalMessageOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanPortalMessageOverrides)(nil)).Elem()
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) ToSwitchControllerVlanPortalMessageOverridesOutput() SwitchControllerVlanPortalMessageOverridesOutput {
	return o
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) ToSwitchControllerVlanPortalMessageOverridesOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesOutput {
	return o
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) ToSwitchControllerVlanPortalMessageOverridesPtrOutput() SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return o.ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(context.Background())
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SwitchControllerVlanPortalMessageOverrides) *SwitchControllerVlanPortalMessageOverrides {
		return &v
	}).(SwitchControllerVlanPortalMessageOverridesPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanPortalMessageOverrides] {
	return pulumix.Output[SwitchControllerVlanPortalMessageOverrides]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPortalMessageOverrides) *string { return v.AuthDisclaimerPage }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPortalMessageOverrides) *string { return v.AuthLoginFailedPage }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPortalMessageOverrides) *string { return v.AuthLoginPage }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanPortalMessageOverrides) *string { return v.AuthRejectPage }).(pulumi.StringPtrOutput)
}

type SwitchControllerVlanPortalMessageOverridesPtrOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanPortalMessageOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVlanPortalMessageOverrides)(nil)).Elem()
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) ToSwitchControllerVlanPortalMessageOverridesPtrOutput() SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return o
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) ToSwitchControllerVlanPortalMessageOverridesPtrOutputWithContext(ctx context.Context) SwitchControllerVlanPortalMessageOverridesPtrOutput {
	return o
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerVlanPortalMessageOverrides] {
	return pulumix.Output[*SwitchControllerVlanPortalMessageOverrides]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) Elem() SwitchControllerVlanPortalMessageOverridesOutput {
	return o.ApplyT(func(v *SwitchControllerVlanPortalMessageOverrides) SwitchControllerVlanPortalMessageOverrides {
		if v != nil {
			return *v
		}
		var ret SwitchControllerVlanPortalMessageOverrides
		return ret
	}).(SwitchControllerVlanPortalMessageOverridesOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) AuthDisclaimerPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthDisclaimerPage
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) AuthLoginFailedPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginFailedPage
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) AuthLoginPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthLoginPage
	}).(pulumi.StringPtrOutput)
}

func (o SwitchControllerVlanPortalMessageOverridesPtrOutput) AuthRejectPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVlanPortalMessageOverrides) *string {
		if v == nil {
			return nil
		}
		return v.AuthRejectPage
	}).(pulumi.StringPtrOutput)
}

type SwitchControllerVlanSelectedUsergroup struct {
	Name *string `pulumi:"name"`
}

// SwitchControllerVlanSelectedUsergroupInput is an input type that accepts SwitchControllerVlanSelectedUsergroupArgs and SwitchControllerVlanSelectedUsergroupOutput values.
// You can construct a concrete instance of `SwitchControllerVlanSelectedUsergroupInput` via:
//
//	SwitchControllerVlanSelectedUsergroupArgs{...}
type SwitchControllerVlanSelectedUsergroupInput interface {
	pulumi.Input

	ToSwitchControllerVlanSelectedUsergroupOutput() SwitchControllerVlanSelectedUsergroupOutput
	ToSwitchControllerVlanSelectedUsergroupOutputWithContext(context.Context) SwitchControllerVlanSelectedUsergroupOutput
}

type SwitchControllerVlanSelectedUsergroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SwitchControllerVlanSelectedUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanSelectedUsergroup)(nil)).Elem()
}

func (i SwitchControllerVlanSelectedUsergroupArgs) ToSwitchControllerVlanSelectedUsergroupOutput() SwitchControllerVlanSelectedUsergroupOutput {
	return i.ToSwitchControllerVlanSelectedUsergroupOutputWithContext(context.Background())
}

func (i SwitchControllerVlanSelectedUsergroupArgs) ToSwitchControllerVlanSelectedUsergroupOutputWithContext(ctx context.Context) SwitchControllerVlanSelectedUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanSelectedUsergroupOutput)
}

func (i SwitchControllerVlanSelectedUsergroupArgs) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanSelectedUsergroup] {
	return pulumix.Output[SwitchControllerVlanSelectedUsergroup]{
		OutputState: i.ToSwitchControllerVlanSelectedUsergroupOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerVlanSelectedUsergroupArrayInput is an input type that accepts SwitchControllerVlanSelectedUsergroupArray and SwitchControllerVlanSelectedUsergroupArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVlanSelectedUsergroupArrayInput` via:
//
//	SwitchControllerVlanSelectedUsergroupArray{ SwitchControllerVlanSelectedUsergroupArgs{...} }
type SwitchControllerVlanSelectedUsergroupArrayInput interface {
	pulumi.Input

	ToSwitchControllerVlanSelectedUsergroupArrayOutput() SwitchControllerVlanSelectedUsergroupArrayOutput
	ToSwitchControllerVlanSelectedUsergroupArrayOutputWithContext(context.Context) SwitchControllerVlanSelectedUsergroupArrayOutput
}

type SwitchControllerVlanSelectedUsergroupArray []SwitchControllerVlanSelectedUsergroupInput

func (SwitchControllerVlanSelectedUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanSelectedUsergroup)(nil)).Elem()
}

func (i SwitchControllerVlanSelectedUsergroupArray) ToSwitchControllerVlanSelectedUsergroupArrayOutput() SwitchControllerVlanSelectedUsergroupArrayOutput {
	return i.ToSwitchControllerVlanSelectedUsergroupArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVlanSelectedUsergroupArray) ToSwitchControllerVlanSelectedUsergroupArrayOutputWithContext(ctx context.Context) SwitchControllerVlanSelectedUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVlanSelectedUsergroupArrayOutput)
}

func (i SwitchControllerVlanSelectedUsergroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanSelectedUsergroup] {
	return pulumix.Output[[]SwitchControllerVlanSelectedUsergroup]{
		OutputState: i.ToSwitchControllerVlanSelectedUsergroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerVlanSelectedUsergroupOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanSelectedUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchControllerVlanSelectedUsergroup)(nil)).Elem()
}

func (o SwitchControllerVlanSelectedUsergroupOutput) ToSwitchControllerVlanSelectedUsergroupOutput() SwitchControllerVlanSelectedUsergroupOutput {
	return o
}

func (o SwitchControllerVlanSelectedUsergroupOutput) ToSwitchControllerVlanSelectedUsergroupOutputWithContext(ctx context.Context) SwitchControllerVlanSelectedUsergroupOutput {
	return o
}

func (o SwitchControllerVlanSelectedUsergroupOutput) ToOutput(ctx context.Context) pulumix.Output[SwitchControllerVlanSelectedUsergroup] {
	return pulumix.Output[SwitchControllerVlanSelectedUsergroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanSelectedUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchControllerVlanSelectedUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SwitchControllerVlanSelectedUsergroupArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVlanSelectedUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchControllerVlanSelectedUsergroup)(nil)).Elem()
}

func (o SwitchControllerVlanSelectedUsergroupArrayOutput) ToSwitchControllerVlanSelectedUsergroupArrayOutput() SwitchControllerVlanSelectedUsergroupArrayOutput {
	return o
}

func (o SwitchControllerVlanSelectedUsergroupArrayOutput) ToSwitchControllerVlanSelectedUsergroupArrayOutputWithContext(ctx context.Context) SwitchControllerVlanSelectedUsergroupArrayOutput {
	return o
}

func (o SwitchControllerVlanSelectedUsergroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SwitchControllerVlanSelectedUsergroup] {
	return pulumix.Output[[]SwitchControllerVlanSelectedUsergroup]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerVlanSelectedUsergroupArrayOutput) Index(i pulumi.IntInput) SwitchControllerVlanSelectedUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchControllerVlanSelectedUsergroup {
		return vs[0].([]SwitchControllerVlanSelectedUsergroup)[vs[1].(int)]
	}).(SwitchControllerVlanSelectedUsergroupOutput)
}

type SystemAPIUserSettingTrusthost struct {
	Ipv4Trusthost string `pulumi:"ipv4Trusthost"`
	Type          string `pulumi:"type"`
}

// SystemAPIUserSettingTrusthostInput is an input type that accepts SystemAPIUserSettingTrusthostArgs and SystemAPIUserSettingTrusthostOutput values.
// You can construct a concrete instance of `SystemAPIUserSettingTrusthostInput` via:
//
//	SystemAPIUserSettingTrusthostArgs{...}
type SystemAPIUserSettingTrusthostInput interface {
	pulumi.Input

	ToSystemAPIUserSettingTrusthostOutput() SystemAPIUserSettingTrusthostOutput
	ToSystemAPIUserSettingTrusthostOutputWithContext(context.Context) SystemAPIUserSettingTrusthostOutput
}

type SystemAPIUserSettingTrusthostArgs struct {
	Ipv4Trusthost pulumi.StringInput `pulumi:"ipv4Trusthost"`
	Type          pulumi.StringInput `pulumi:"type"`
}

func (SystemAPIUserSettingTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAPIUserSettingTrusthost)(nil)).Elem()
}

func (i SystemAPIUserSettingTrusthostArgs) ToSystemAPIUserSettingTrusthostOutput() SystemAPIUserSettingTrusthostOutput {
	return i.ToSystemAPIUserSettingTrusthostOutputWithContext(context.Background())
}

func (i SystemAPIUserSettingTrusthostArgs) ToSystemAPIUserSettingTrusthostOutputWithContext(ctx context.Context) SystemAPIUserSettingTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAPIUserSettingTrusthostOutput)
}

func (i SystemAPIUserSettingTrusthostArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAPIUserSettingTrusthost] {
	return pulumix.Output[SystemAPIUserSettingTrusthost]{
		OutputState: i.ToSystemAPIUserSettingTrusthostOutputWithContext(ctx).OutputState,
	}
}

// SystemAPIUserSettingTrusthostArrayInput is an input type that accepts SystemAPIUserSettingTrusthostArray and SystemAPIUserSettingTrusthostArrayOutput values.
// You can construct a concrete instance of `SystemAPIUserSettingTrusthostArrayInput` via:
//
//	SystemAPIUserSettingTrusthostArray{ SystemAPIUserSettingTrusthostArgs{...} }
type SystemAPIUserSettingTrusthostArrayInput interface {
	pulumi.Input

	ToSystemAPIUserSettingTrusthostArrayOutput() SystemAPIUserSettingTrusthostArrayOutput
	ToSystemAPIUserSettingTrusthostArrayOutputWithContext(context.Context) SystemAPIUserSettingTrusthostArrayOutput
}

type SystemAPIUserSettingTrusthostArray []SystemAPIUserSettingTrusthostInput

func (SystemAPIUserSettingTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAPIUserSettingTrusthost)(nil)).Elem()
}

func (i SystemAPIUserSettingTrusthostArray) ToSystemAPIUserSettingTrusthostArrayOutput() SystemAPIUserSettingTrusthostArrayOutput {
	return i.ToSystemAPIUserSettingTrusthostArrayOutputWithContext(context.Background())
}

func (i SystemAPIUserSettingTrusthostArray) ToSystemAPIUserSettingTrusthostArrayOutputWithContext(ctx context.Context) SystemAPIUserSettingTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAPIUserSettingTrusthostArrayOutput)
}

func (i SystemAPIUserSettingTrusthostArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAPIUserSettingTrusthost] {
	return pulumix.Output[[]SystemAPIUserSettingTrusthost]{
		OutputState: i.ToSystemAPIUserSettingTrusthostArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAPIUserSettingTrusthostOutput struct{ *pulumi.OutputState }

func (SystemAPIUserSettingTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAPIUserSettingTrusthost)(nil)).Elem()
}

func (o SystemAPIUserSettingTrusthostOutput) ToSystemAPIUserSettingTrusthostOutput() SystemAPIUserSettingTrusthostOutput {
	return o
}

func (o SystemAPIUserSettingTrusthostOutput) ToSystemAPIUserSettingTrusthostOutputWithContext(ctx context.Context) SystemAPIUserSettingTrusthostOutput {
	return o
}

func (o SystemAPIUserSettingTrusthostOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAPIUserSettingTrusthost] {
	return pulumix.Output[SystemAPIUserSettingTrusthost]{
		OutputState: o.OutputState,
	}
}

func (o SystemAPIUserSettingTrusthostOutput) Ipv4Trusthost() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAPIUserSettingTrusthost) string { return v.Ipv4Trusthost }).(pulumi.StringOutput)
}

func (o SystemAPIUserSettingTrusthostOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SystemAPIUserSettingTrusthost) string { return v.Type }).(pulumi.StringOutput)
}

type SystemAPIUserSettingTrusthostArrayOutput struct{ *pulumi.OutputState }

func (SystemAPIUserSettingTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAPIUserSettingTrusthost)(nil)).Elem()
}

func (o SystemAPIUserSettingTrusthostArrayOutput) ToSystemAPIUserSettingTrusthostArrayOutput() SystemAPIUserSettingTrusthostArrayOutput {
	return o
}

func (o SystemAPIUserSettingTrusthostArrayOutput) ToSystemAPIUserSettingTrusthostArrayOutputWithContext(ctx context.Context) SystemAPIUserSettingTrusthostArrayOutput {
	return o
}

func (o SystemAPIUserSettingTrusthostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAPIUserSettingTrusthost] {
	return pulumix.Output[[]SystemAPIUserSettingTrusthost]{
		OutputState: o.OutputState,
	}
}

func (o SystemAPIUserSettingTrusthostArrayOutput) Index(i pulumi.IntInput) SystemAPIUserSettingTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAPIUserSettingTrusthost {
		return vs[0].([]SystemAPIUserSettingTrusthost)[vs[1].(int)]
	}).(SystemAPIUserSettingTrusthostOutput)
}

type SystemAccprofileFwgrpPermission struct {
	Address  *string `pulumi:"address"`
	Others   *string `pulumi:"others"`
	Policy   *string `pulumi:"policy"`
	Schedule *string `pulumi:"schedule"`
	Service  *string `pulumi:"service"`
}

// SystemAccprofileFwgrpPermissionInput is an input type that accepts SystemAccprofileFwgrpPermissionArgs and SystemAccprofileFwgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileFwgrpPermissionInput` via:
//
//	SystemAccprofileFwgrpPermissionArgs{...}
type SystemAccprofileFwgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput
	ToSystemAccprofileFwgrpPermissionOutputWithContext(context.Context) SystemAccprofileFwgrpPermissionOutput
}

type SystemAccprofileFwgrpPermissionArgs struct {
	Address  pulumi.StringPtrInput `pulumi:"address"`
	Others   pulumi.StringPtrInput `pulumi:"others"`
	Policy   pulumi.StringPtrInput `pulumi:"policy"`
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	Service  pulumi.StringPtrInput `pulumi:"service"`
}

func (SystemAccprofileFwgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput {
	return i.ToSystemAccprofileFwgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionOutput)
}

func (i SystemAccprofileFwgrpPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileFwgrpPermission] {
	return pulumix.Output[SystemAccprofileFwgrpPermission]{
		OutputState: i.ToSystemAccprofileFwgrpPermissionOutputWithContext(ctx).OutputState,
	}
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return i.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileFwgrpPermissionArgs) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionOutput).ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileFwgrpPermissionPtrInput is an input type that accepts SystemAccprofileFwgrpPermissionArgs, SystemAccprofileFwgrpPermissionPtr and SystemAccprofileFwgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileFwgrpPermissionPtrInput` via:
//
//	        SystemAccprofileFwgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileFwgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput
	ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileFwgrpPermissionPtrOutput
}

type systemAccprofileFwgrpPermissionPtrType SystemAccprofileFwgrpPermissionArgs

func SystemAccprofileFwgrpPermissionPtr(v *SystemAccprofileFwgrpPermissionArgs) SystemAccprofileFwgrpPermissionPtrInput {
	return (*systemAccprofileFwgrpPermissionPtrType)(v)
}

func (*systemAccprofileFwgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileFwgrpPermissionPtrType) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return i.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileFwgrpPermissionPtrType) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileFwgrpPermissionPtrOutput)
}

func (i *systemAccprofileFwgrpPermissionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileFwgrpPermission] {
	return pulumix.Output[*SystemAccprofileFwgrpPermission]{
		OutputState: i.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemAccprofileFwgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileFwgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionOutput() SystemAccprofileFwgrpPermissionOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return o.ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileFwgrpPermissionOutput) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileFwgrpPermission) *SystemAccprofileFwgrpPermission {
		return &v
	}).(SystemAccprofileFwgrpPermissionPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileFwgrpPermission] {
	return pulumix.Output[SystemAccprofileFwgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileFwgrpPermissionOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Others }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileFwgrpPermission) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type SystemAccprofileFwgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileFwgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileFwgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) ToSystemAccprofileFwgrpPermissionPtrOutput() SystemAccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) ToSystemAccprofileFwgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileFwgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileFwgrpPermission] {
	return pulumix.Output[*SystemAccprofileFwgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Elem() SystemAccprofileFwgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) SystemAccprofileFwgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileFwgrpPermission
		return ret
	}).(SystemAccprofileFwgrpPermissionOutput)
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Others() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Others
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileFwgrpPermissionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileFwgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileLoggrpPermission struct {
	Config       *string `pulumi:"config"`
	DataAccess   *string `pulumi:"dataAccess"`
	ReportAccess *string `pulumi:"reportAccess"`
	ThreatWeight *string `pulumi:"threatWeight"`
}

// SystemAccprofileLoggrpPermissionInput is an input type that accepts SystemAccprofileLoggrpPermissionArgs and SystemAccprofileLoggrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileLoggrpPermissionInput` via:
//
//	SystemAccprofileLoggrpPermissionArgs{...}
type SystemAccprofileLoggrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput
	ToSystemAccprofileLoggrpPermissionOutputWithContext(context.Context) SystemAccprofileLoggrpPermissionOutput
}

type SystemAccprofileLoggrpPermissionArgs struct {
	Config       pulumi.StringPtrInput `pulumi:"config"`
	DataAccess   pulumi.StringPtrInput `pulumi:"dataAccess"`
	ReportAccess pulumi.StringPtrInput `pulumi:"reportAccess"`
	ThreatWeight pulumi.StringPtrInput `pulumi:"threatWeight"`
}

func (SystemAccprofileLoggrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput {
	return i.ToSystemAccprofileLoggrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionOutput)
}

func (i SystemAccprofileLoggrpPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileLoggrpPermission] {
	return pulumix.Output[SystemAccprofileLoggrpPermission]{
		OutputState: i.ToSystemAccprofileLoggrpPermissionOutputWithContext(ctx).OutputState,
	}
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return i.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileLoggrpPermissionArgs) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionOutput).ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileLoggrpPermissionPtrInput is an input type that accepts SystemAccprofileLoggrpPermissionArgs, SystemAccprofileLoggrpPermissionPtr and SystemAccprofileLoggrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileLoggrpPermissionPtrInput` via:
//
//	        SystemAccprofileLoggrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileLoggrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput
	ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileLoggrpPermissionPtrOutput
}

type systemAccprofileLoggrpPermissionPtrType SystemAccprofileLoggrpPermissionArgs

func SystemAccprofileLoggrpPermissionPtr(v *SystemAccprofileLoggrpPermissionArgs) SystemAccprofileLoggrpPermissionPtrInput {
	return (*systemAccprofileLoggrpPermissionPtrType)(v)
}

func (*systemAccprofileLoggrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (i *systemAccprofileLoggrpPermissionPtrType) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return i.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileLoggrpPermissionPtrType) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileLoggrpPermissionPtrOutput)
}

func (i *systemAccprofileLoggrpPermissionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileLoggrpPermission] {
	return pulumix.Output[*SystemAccprofileLoggrpPermission]{
		OutputState: i.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemAccprofileLoggrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileLoggrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionOutput() SystemAccprofileLoggrpPermissionOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return o.ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileLoggrpPermissionOutput) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileLoggrpPermission) *SystemAccprofileLoggrpPermission {
		return &v
	}).(SystemAccprofileLoggrpPermissionPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileLoggrpPermission] {
	return pulumix.Output[SystemAccprofileLoggrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileLoggrpPermissionOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.Config }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.DataAccess }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.ReportAccess }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileLoggrpPermission) *string { return v.ThreatWeight }).(pulumi.StringPtrOutput)
}

type SystemAccprofileLoggrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileLoggrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileLoggrpPermission)(nil)).Elem()
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ToSystemAccprofileLoggrpPermissionPtrOutput() SystemAccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ToSystemAccprofileLoggrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileLoggrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileLoggrpPermission] {
	return pulumix.Output[*SystemAccprofileLoggrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) Elem() SystemAccprofileLoggrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) SystemAccprofileLoggrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileLoggrpPermission
		return ret
	}).(SystemAccprofileLoggrpPermissionOutput)
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) DataAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataAccess
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ReportAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ReportAccess
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileLoggrpPermissionPtrOutput) ThreatWeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileLoggrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ThreatWeight
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileNetgrpPermission struct {
	Cfg           *string `pulumi:"cfg"`
	PacketCapture *string `pulumi:"packetCapture"`
	RouteCfg      *string `pulumi:"routeCfg"`
}

// SystemAccprofileNetgrpPermissionInput is an input type that accepts SystemAccprofileNetgrpPermissionArgs and SystemAccprofileNetgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileNetgrpPermissionInput` via:
//
//	SystemAccprofileNetgrpPermissionArgs{...}
type SystemAccprofileNetgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput
	ToSystemAccprofileNetgrpPermissionOutputWithContext(context.Context) SystemAccprofileNetgrpPermissionOutput
}

type SystemAccprofileNetgrpPermissionArgs struct {
	Cfg           pulumi.StringPtrInput `pulumi:"cfg"`
	PacketCapture pulumi.StringPtrInput `pulumi:"packetCapture"`
	RouteCfg      pulumi.StringPtrInput `pulumi:"routeCfg"`
}

func (SystemAccprofileNetgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput {
	return i.ToSystemAccprofileNetgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionOutput)
}

func (i SystemAccprofileNetgrpPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileNetgrpPermission] {
	return pulumix.Output[SystemAccprofileNetgrpPermission]{
		OutputState: i.ToSystemAccprofileNetgrpPermissionOutputWithContext(ctx).OutputState,
	}
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return i.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileNetgrpPermissionArgs) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionOutput).ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileNetgrpPermissionPtrInput is an input type that accepts SystemAccprofileNetgrpPermissionArgs, SystemAccprofileNetgrpPermissionPtr and SystemAccprofileNetgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileNetgrpPermissionPtrInput` via:
//
//	        SystemAccprofileNetgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileNetgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput
	ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileNetgrpPermissionPtrOutput
}

type systemAccprofileNetgrpPermissionPtrType SystemAccprofileNetgrpPermissionArgs

func SystemAccprofileNetgrpPermissionPtr(v *SystemAccprofileNetgrpPermissionArgs) SystemAccprofileNetgrpPermissionPtrInput {
	return (*systemAccprofileNetgrpPermissionPtrType)(v)
}

func (*systemAccprofileNetgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileNetgrpPermissionPtrType) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return i.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileNetgrpPermissionPtrType) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileNetgrpPermissionPtrOutput)
}

func (i *systemAccprofileNetgrpPermissionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileNetgrpPermission] {
	return pulumix.Output[*SystemAccprofileNetgrpPermission]{
		OutputState: i.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemAccprofileNetgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileNetgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionOutput() SystemAccprofileNetgrpPermissionOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return o.ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileNetgrpPermissionOutput) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileNetgrpPermission) *SystemAccprofileNetgrpPermission {
		return &v
	}).(SystemAccprofileNetgrpPermissionPtrOutput)
}

func (o SystemAccprofileNetgrpPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileNetgrpPermission] {
	return pulumix.Output[SystemAccprofileNetgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileNetgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileNetgrpPermissionOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.PacketCapture }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileNetgrpPermissionOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileNetgrpPermission) *string { return v.RouteCfg }).(pulumi.StringPtrOutput)
}

type SystemAccprofileNetgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileNetgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileNetgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) ToSystemAccprofileNetgrpPermissionPtrOutput() SystemAccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) ToSystemAccprofileNetgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileNetgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileNetgrpPermission] {
	return pulumix.Output[*SystemAccprofileNetgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) Elem() SystemAccprofileNetgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) SystemAccprofileNetgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileNetgrpPermission
		return ret
	}).(SystemAccprofileNetgrpPermissionOutput)
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) PacketCapture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.PacketCapture
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileNetgrpPermissionPtrOutput) RouteCfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileNetgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.RouteCfg
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileSysgrpPermission struct {
	Admin *string `pulumi:"admin"`
	Cfg   *string `pulumi:"cfg"`
	Mnt   *string `pulumi:"mnt"`
	Upd   *string `pulumi:"upd"`
}

// SystemAccprofileSysgrpPermissionInput is an input type that accepts SystemAccprofileSysgrpPermissionArgs and SystemAccprofileSysgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileSysgrpPermissionInput` via:
//
//	SystemAccprofileSysgrpPermissionArgs{...}
type SystemAccprofileSysgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput
	ToSystemAccprofileSysgrpPermissionOutputWithContext(context.Context) SystemAccprofileSysgrpPermissionOutput
}

type SystemAccprofileSysgrpPermissionArgs struct {
	Admin pulumi.StringPtrInput `pulumi:"admin"`
	Cfg   pulumi.StringPtrInput `pulumi:"cfg"`
	Mnt   pulumi.StringPtrInput `pulumi:"mnt"`
	Upd   pulumi.StringPtrInput `pulumi:"upd"`
}

func (SystemAccprofileSysgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput {
	return i.ToSystemAccprofileSysgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionOutput)
}

func (i SystemAccprofileSysgrpPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileSysgrpPermission] {
	return pulumix.Output[SystemAccprofileSysgrpPermission]{
		OutputState: i.ToSystemAccprofileSysgrpPermissionOutputWithContext(ctx).OutputState,
	}
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return i.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileSysgrpPermissionArgs) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionOutput).ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileSysgrpPermissionPtrInput is an input type that accepts SystemAccprofileSysgrpPermissionArgs, SystemAccprofileSysgrpPermissionPtr and SystemAccprofileSysgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileSysgrpPermissionPtrInput` via:
//
//	        SystemAccprofileSysgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileSysgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput
	ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileSysgrpPermissionPtrOutput
}

type systemAccprofileSysgrpPermissionPtrType SystemAccprofileSysgrpPermissionArgs

func SystemAccprofileSysgrpPermissionPtr(v *SystemAccprofileSysgrpPermissionArgs) SystemAccprofileSysgrpPermissionPtrInput {
	return (*systemAccprofileSysgrpPermissionPtrType)(v)
}

func (*systemAccprofileSysgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileSysgrpPermissionPtrType) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return i.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileSysgrpPermissionPtrType) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileSysgrpPermissionPtrOutput)
}

func (i *systemAccprofileSysgrpPermissionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileSysgrpPermission] {
	return pulumix.Output[*SystemAccprofileSysgrpPermission]{
		OutputState: i.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemAccprofileSysgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileSysgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionOutput() SystemAccprofileSysgrpPermissionOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return o.ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileSysgrpPermissionOutput) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileSysgrpPermission) *SystemAccprofileSysgrpPermission {
		return &v
	}).(SystemAccprofileSysgrpPermissionPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileSysgrpPermission] {
	return pulumix.Output[SystemAccprofileSysgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileSysgrpPermissionOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Admin }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Cfg }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Mnt }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileSysgrpPermission) *string { return v.Upd }).(pulumi.StringPtrOutput)
}

type SystemAccprofileSysgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileSysgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileSysgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) ToSystemAccprofileSysgrpPermissionPtrOutput() SystemAccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) ToSystemAccprofileSysgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileSysgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileSysgrpPermission] {
	return pulumix.Output[*SystemAccprofileSysgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Elem() SystemAccprofileSysgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) SystemAccprofileSysgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileSysgrpPermission
		return ret
	}).(SystemAccprofileSysgrpPermissionOutput)
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Cfg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Cfg
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Mnt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Mnt
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileSysgrpPermissionPtrOutput) Upd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileSysgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Upd
	}).(pulumi.StringPtrOutput)
}

type SystemAccprofileUtmgrpPermission struct {
	Antivirus          *string `pulumi:"antivirus"`
	ApplicationControl *string `pulumi:"applicationControl"`
	Casb               *string `pulumi:"casb"`
	DataLeakPrevention *string `pulumi:"dataLeakPrevention"`
	DataLossPrevention *string `pulumi:"dataLossPrevention"`
	Dnsfilter          *string `pulumi:"dnsfilter"`
	Emailfilter        *string `pulumi:"emailfilter"`
	EndpointControl    *string `pulumi:"endpointControl"`
	FileFilter         *string `pulumi:"fileFilter"`
	Icap               *string `pulumi:"icap"`
	Ips                *string `pulumi:"ips"`
	Spamfilter         *string `pulumi:"spamfilter"`
	Videofilter        *string `pulumi:"videofilter"`
	VirtualPatch       *string `pulumi:"virtualPatch"`
	Voip               *string `pulumi:"voip"`
	Waf                *string `pulumi:"waf"`
	Webfilter          *string `pulumi:"webfilter"`
}

// SystemAccprofileUtmgrpPermissionInput is an input type that accepts SystemAccprofileUtmgrpPermissionArgs and SystemAccprofileUtmgrpPermissionOutput values.
// You can construct a concrete instance of `SystemAccprofileUtmgrpPermissionInput` via:
//
//	SystemAccprofileUtmgrpPermissionArgs{...}
type SystemAccprofileUtmgrpPermissionInput interface {
	pulumi.Input

	ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput
	ToSystemAccprofileUtmgrpPermissionOutputWithContext(context.Context) SystemAccprofileUtmgrpPermissionOutput
}

type SystemAccprofileUtmgrpPermissionArgs struct {
	Antivirus          pulumi.StringPtrInput `pulumi:"antivirus"`
	ApplicationControl pulumi.StringPtrInput `pulumi:"applicationControl"`
	Casb               pulumi.StringPtrInput `pulumi:"casb"`
	DataLeakPrevention pulumi.StringPtrInput `pulumi:"dataLeakPrevention"`
	DataLossPrevention pulumi.StringPtrInput `pulumi:"dataLossPrevention"`
	Dnsfilter          pulumi.StringPtrInput `pulumi:"dnsfilter"`
	Emailfilter        pulumi.StringPtrInput `pulumi:"emailfilter"`
	EndpointControl    pulumi.StringPtrInput `pulumi:"endpointControl"`
	FileFilter         pulumi.StringPtrInput `pulumi:"fileFilter"`
	Icap               pulumi.StringPtrInput `pulumi:"icap"`
	Ips                pulumi.StringPtrInput `pulumi:"ips"`
	Spamfilter         pulumi.StringPtrInput `pulumi:"spamfilter"`
	Videofilter        pulumi.StringPtrInput `pulumi:"videofilter"`
	VirtualPatch       pulumi.StringPtrInput `pulumi:"virtualPatch"`
	Voip               pulumi.StringPtrInput `pulumi:"voip"`
	Waf                pulumi.StringPtrInput `pulumi:"waf"`
	Webfilter          pulumi.StringPtrInput `pulumi:"webfilter"`
}

func (SystemAccprofileUtmgrpPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput {
	return i.ToSystemAccprofileUtmgrpPermissionOutputWithContext(context.Background())
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionOutput)
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileUtmgrpPermission] {
	return pulumix.Output[SystemAccprofileUtmgrpPermission]{
		OutputState: i.ToSystemAccprofileUtmgrpPermissionOutputWithContext(ctx).OutputState,
	}
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return i.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i SystemAccprofileUtmgrpPermissionArgs) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionOutput).ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx)
}

// SystemAccprofileUtmgrpPermissionPtrInput is an input type that accepts SystemAccprofileUtmgrpPermissionArgs, SystemAccprofileUtmgrpPermissionPtr and SystemAccprofileUtmgrpPermissionPtrOutput values.
// You can construct a concrete instance of `SystemAccprofileUtmgrpPermissionPtrInput` via:
//
//	        SystemAccprofileUtmgrpPermissionArgs{...}
//
//	or:
//
//	        nil
type SystemAccprofileUtmgrpPermissionPtrInput interface {
	pulumi.Input

	ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput
	ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Context) SystemAccprofileUtmgrpPermissionPtrOutput
}

type systemAccprofileUtmgrpPermissionPtrType SystemAccprofileUtmgrpPermissionArgs

func SystemAccprofileUtmgrpPermissionPtr(v *SystemAccprofileUtmgrpPermissionArgs) SystemAccprofileUtmgrpPermissionPtrInput {
	return (*systemAccprofileUtmgrpPermissionPtrType)(v)
}

func (*systemAccprofileUtmgrpPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (i *systemAccprofileUtmgrpPermissionPtrType) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return i.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (i *systemAccprofileUtmgrpPermissionPtrType) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccprofileUtmgrpPermissionPtrOutput)
}

func (i *systemAccprofileUtmgrpPermissionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileUtmgrpPermission] {
	return pulumix.Output[*SystemAccprofileUtmgrpPermission]{
		OutputState: i.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemAccprofileUtmgrpPermissionOutput struct{ *pulumi.OutputState }

func (SystemAccprofileUtmgrpPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionOutput() SystemAccprofileUtmgrpPermissionOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return o.ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(context.Background())
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemAccprofileUtmgrpPermission) *SystemAccprofileUtmgrpPermission {
		return &v
	}).(SystemAccprofileUtmgrpPermissionPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAccprofileUtmgrpPermission] {
	return pulumix.Output[SystemAccprofileUtmgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileUtmgrpPermissionOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Antivirus }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.ApplicationControl }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Casb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Casb }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) DataLeakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.DataLeakPrevention }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.DataLossPrevention }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Dnsfilter }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Emailfilter }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.EndpointControl }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.FileFilter }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Icap }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Ips }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Spamfilter }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Videofilter }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) VirtualPatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.VirtualPatch }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Voip }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAccprofileUtmgrpPermission) *string { return v.Webfilter }).(pulumi.StringPtrOutput)
}

type SystemAccprofileUtmgrpPermissionPtrOutput struct{ *pulumi.OutputState }

func (SystemAccprofileUtmgrpPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccprofileUtmgrpPermission)(nil)).Elem()
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ToSystemAccprofileUtmgrpPermissionPtrOutput() SystemAccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ToSystemAccprofileUtmgrpPermissionPtrOutputWithContext(ctx context.Context) SystemAccprofileUtmgrpPermissionPtrOutput {
	return o
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemAccprofileUtmgrpPermission] {
	return pulumix.Output[*SystemAccprofileUtmgrpPermission]{
		OutputState: o.OutputState,
	}
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Elem() SystemAccprofileUtmgrpPermissionOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) SystemAccprofileUtmgrpPermission {
		if v != nil {
			return *v
		}
		var ret SystemAccprofileUtmgrpPermission
		return ret
	}).(SystemAccprofileUtmgrpPermissionOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Antivirus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Antivirus
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) ApplicationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationControl
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Casb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Casb
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) DataLeakPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataLeakPrevention
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) DataLossPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.DataLossPrevention
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Dnsfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Dnsfilter
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Emailfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Emailfilter
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) EndpointControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.EndpointControl
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) FileFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.FileFilter
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Icap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Icap
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Spamfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Spamfilter
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Videofilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Videofilter
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) VirtualPatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.VirtualPatch
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Voip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Voip
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Waf
	}).(pulumi.StringPtrOutput)
}

func (o SystemAccprofileUtmgrpPermissionPtrOutput) Webfilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccprofileUtmgrpPermission) *string {
		if v == nil {
			return nil
		}
		return v.Webfilter
	}).(pulumi.StringPtrOutput)
}

type SystemAcmeAccount struct {
	CaUrl      *string `pulumi:"caUrl"`
	Email      *string `pulumi:"email"`
	Id         *string `pulumi:"id"`
	Privatekey *string `pulumi:"privatekey"`
	Status     *string `pulumi:"status"`
	Url        *string `pulumi:"url"`
}

// SystemAcmeAccountInput is an input type that accepts SystemAcmeAccountArgs and SystemAcmeAccountOutput values.
// You can construct a concrete instance of `SystemAcmeAccountInput` via:
//
//	SystemAcmeAccountArgs{...}
type SystemAcmeAccountInput interface {
	pulumi.Input

	ToSystemAcmeAccountOutput() SystemAcmeAccountOutput
	ToSystemAcmeAccountOutputWithContext(context.Context) SystemAcmeAccountOutput
}

type SystemAcmeAccountArgs struct {
	CaUrl      pulumi.StringPtrInput `pulumi:"caUrl"`
	Email      pulumi.StringPtrInput `pulumi:"email"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	Privatekey pulumi.StringPtrInput `pulumi:"privatekey"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	Url        pulumi.StringPtrInput `pulumi:"url"`
}

func (SystemAcmeAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeAccount)(nil)).Elem()
}

func (i SystemAcmeAccountArgs) ToSystemAcmeAccountOutput() SystemAcmeAccountOutput {
	return i.ToSystemAcmeAccountOutputWithContext(context.Background())
}

func (i SystemAcmeAccountArgs) ToSystemAcmeAccountOutputWithContext(ctx context.Context) SystemAcmeAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeAccountOutput)
}

func (i SystemAcmeAccountArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAcmeAccount] {
	return pulumix.Output[SystemAcmeAccount]{
		OutputState: i.ToSystemAcmeAccountOutputWithContext(ctx).OutputState,
	}
}

// SystemAcmeAccountArrayInput is an input type that accepts SystemAcmeAccountArray and SystemAcmeAccountArrayOutput values.
// You can construct a concrete instance of `SystemAcmeAccountArrayInput` via:
//
//	SystemAcmeAccountArray{ SystemAcmeAccountArgs{...} }
type SystemAcmeAccountArrayInput interface {
	pulumi.Input

	ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput
	ToSystemAcmeAccountArrayOutputWithContext(context.Context) SystemAcmeAccountArrayOutput
}

type SystemAcmeAccountArray []SystemAcmeAccountInput

func (SystemAcmeAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeAccount)(nil)).Elem()
}

func (i SystemAcmeAccountArray) ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput {
	return i.ToSystemAcmeAccountArrayOutputWithContext(context.Background())
}

func (i SystemAcmeAccountArray) ToSystemAcmeAccountArrayOutputWithContext(ctx context.Context) SystemAcmeAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeAccountArrayOutput)
}

func (i SystemAcmeAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAcmeAccount] {
	return pulumix.Output[[]SystemAcmeAccount]{
		OutputState: i.ToSystemAcmeAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAcmeAccountOutput struct{ *pulumi.OutputState }

func (SystemAcmeAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeAccount)(nil)).Elem()
}

func (o SystemAcmeAccountOutput) ToSystemAcmeAccountOutput() SystemAcmeAccountOutput {
	return o
}

func (o SystemAcmeAccountOutput) ToSystemAcmeAccountOutputWithContext(ctx context.Context) SystemAcmeAccountOutput {
	return o
}

func (o SystemAcmeAccountOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAcmeAccount] {
	return pulumix.Output[SystemAcmeAccount]{
		OutputState: o.OutputState,
	}
}

func (o SystemAcmeAccountOutput) CaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.CaUrl }).(pulumi.StringPtrOutput)
}

func (o SystemAcmeAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o SystemAcmeAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SystemAcmeAccountOutput) Privatekey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Privatekey }).(pulumi.StringPtrOutput)
}

func (o SystemAcmeAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemAcmeAccountOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeAccount) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SystemAcmeAccountArrayOutput struct{ *pulumi.OutputState }

func (SystemAcmeAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeAccount)(nil)).Elem()
}

func (o SystemAcmeAccountArrayOutput) ToSystemAcmeAccountArrayOutput() SystemAcmeAccountArrayOutput {
	return o
}

func (o SystemAcmeAccountArrayOutput) ToSystemAcmeAccountArrayOutputWithContext(ctx context.Context) SystemAcmeAccountArrayOutput {
	return o
}

func (o SystemAcmeAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAcmeAccount] {
	return pulumix.Output[[]SystemAcmeAccount]{
		OutputState: o.OutputState,
	}
}

func (o SystemAcmeAccountArrayOutput) Index(i pulumi.IntInput) SystemAcmeAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAcmeAccount {
		return vs[0].([]SystemAcmeAccount)[vs[1].(int)]
	}).(SystemAcmeAccountOutput)
}

type SystemAcmeInterface struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemAcmeInterfaceInput is an input type that accepts SystemAcmeInterfaceArgs and SystemAcmeInterfaceOutput values.
// You can construct a concrete instance of `SystemAcmeInterfaceInput` via:
//
//	SystemAcmeInterfaceArgs{...}
type SystemAcmeInterfaceInput interface {
	pulumi.Input

	ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput
	ToSystemAcmeInterfaceOutputWithContext(context.Context) SystemAcmeInterfaceOutput
}

type SystemAcmeInterfaceArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemAcmeInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeInterface)(nil)).Elem()
}

func (i SystemAcmeInterfaceArgs) ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput {
	return i.ToSystemAcmeInterfaceOutputWithContext(context.Background())
}

func (i SystemAcmeInterfaceArgs) ToSystemAcmeInterfaceOutputWithContext(ctx context.Context) SystemAcmeInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeInterfaceOutput)
}

func (i SystemAcmeInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAcmeInterface] {
	return pulumix.Output[SystemAcmeInterface]{
		OutputState: i.ToSystemAcmeInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemAcmeInterfaceArrayInput is an input type that accepts SystemAcmeInterfaceArray and SystemAcmeInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemAcmeInterfaceArrayInput` via:
//
//	SystemAcmeInterfaceArray{ SystemAcmeInterfaceArgs{...} }
type SystemAcmeInterfaceArrayInput interface {
	pulumi.Input

	ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput
	ToSystemAcmeInterfaceArrayOutputWithContext(context.Context) SystemAcmeInterfaceArrayOutput
}

type SystemAcmeInterfaceArray []SystemAcmeInterfaceInput

func (SystemAcmeInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeInterface)(nil)).Elem()
}

func (i SystemAcmeInterfaceArray) ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput {
	return i.ToSystemAcmeInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemAcmeInterfaceArray) ToSystemAcmeInterfaceArrayOutputWithContext(ctx context.Context) SystemAcmeInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAcmeInterfaceArrayOutput)
}

func (i SystemAcmeInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAcmeInterface] {
	return pulumix.Output[[]SystemAcmeInterface]{
		OutputState: i.ToSystemAcmeInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAcmeInterfaceOutput struct{ *pulumi.OutputState }

func (SystemAcmeInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAcmeInterface)(nil)).Elem()
}

func (o SystemAcmeInterfaceOutput) ToSystemAcmeInterfaceOutput() SystemAcmeInterfaceOutput {
	return o
}

func (o SystemAcmeInterfaceOutput) ToSystemAcmeInterfaceOutputWithContext(ctx context.Context) SystemAcmeInterfaceOutput {
	return o
}

func (o SystemAcmeInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAcmeInterface] {
	return pulumix.Output[SystemAcmeInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemAcmeInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAcmeInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemAcmeInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemAcmeInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAcmeInterface)(nil)).Elem()
}

func (o SystemAcmeInterfaceArrayOutput) ToSystemAcmeInterfaceArrayOutput() SystemAcmeInterfaceArrayOutput {
	return o
}

func (o SystemAcmeInterfaceArrayOutput) ToSystemAcmeInterfaceArrayOutputWithContext(ctx context.Context) SystemAcmeInterfaceArrayOutput {
	return o
}

func (o SystemAcmeInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAcmeInterface] {
	return pulumix.Output[[]SystemAcmeInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemAcmeInterfaceArrayOutput) Index(i pulumi.IntInput) SystemAcmeInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAcmeInterface {
		return vs[0].([]SystemAcmeInterface)[vs[1].(int)]
	}).(SystemAcmeInterfaceOutput)
}

type SystemAdminGuestUsergroup struct {
	Name *string `pulumi:"name"`
}

// SystemAdminGuestUsergroupInput is an input type that accepts SystemAdminGuestUsergroupArgs and SystemAdminGuestUsergroupOutput values.
// You can construct a concrete instance of `SystemAdminGuestUsergroupInput` via:
//
//	SystemAdminGuestUsergroupArgs{...}
type SystemAdminGuestUsergroupInput interface {
	pulumi.Input

	ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput
	ToSystemAdminGuestUsergroupOutputWithContext(context.Context) SystemAdminGuestUsergroupOutput
}

type SystemAdminGuestUsergroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAdminGuestUsergroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuestUsergroup)(nil)).Elem()
}

func (i SystemAdminGuestUsergroupArgs) ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput {
	return i.ToSystemAdminGuestUsergroupOutputWithContext(context.Background())
}

func (i SystemAdminGuestUsergroupArgs) ToSystemAdminGuestUsergroupOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuestUsergroupOutput)
}

func (i SystemAdminGuestUsergroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuestUsergroup] {
	return pulumix.Output[SystemAdminGuestUsergroup]{
		OutputState: i.ToSystemAdminGuestUsergroupOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuestUsergroupArrayInput is an input type that accepts SystemAdminGuestUsergroupArray and SystemAdminGuestUsergroupArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuestUsergroupArrayInput` via:
//
//	SystemAdminGuestUsergroupArray{ SystemAdminGuestUsergroupArgs{...} }
type SystemAdminGuestUsergroupArrayInput interface {
	pulumi.Input

	ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput
	ToSystemAdminGuestUsergroupArrayOutputWithContext(context.Context) SystemAdminGuestUsergroupArrayOutput
}

type SystemAdminGuestUsergroupArray []SystemAdminGuestUsergroupInput

func (SystemAdminGuestUsergroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuestUsergroup)(nil)).Elem()
}

func (i SystemAdminGuestUsergroupArray) ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput {
	return i.ToSystemAdminGuestUsergroupArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuestUsergroupArray) ToSystemAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuestUsergroupArrayOutput)
}

func (i SystemAdminGuestUsergroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuestUsergroup] {
	return pulumix.Output[[]SystemAdminGuestUsergroup]{
		OutputState: i.ToSystemAdminGuestUsergroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuestUsergroupOutput struct{ *pulumi.OutputState }

func (SystemAdminGuestUsergroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuestUsergroup)(nil)).Elem()
}

func (o SystemAdminGuestUsergroupOutput) ToSystemAdminGuestUsergroupOutput() SystemAdminGuestUsergroupOutput {
	return o
}

func (o SystemAdminGuestUsergroupOutput) ToSystemAdminGuestUsergroupOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupOutput {
	return o
}

func (o SystemAdminGuestUsergroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuestUsergroup] {
	return pulumix.Output[SystemAdminGuestUsergroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuestUsergroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuestUsergroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAdminGuestUsergroupArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuestUsergroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuestUsergroup)(nil)).Elem()
}

func (o SystemAdminGuestUsergroupArrayOutput) ToSystemAdminGuestUsergroupArrayOutput() SystemAdminGuestUsergroupArrayOutput {
	return o
}

func (o SystemAdminGuestUsergroupArrayOutput) ToSystemAdminGuestUsergroupArrayOutputWithContext(ctx context.Context) SystemAdminGuestUsergroupArrayOutput {
	return o
}

func (o SystemAdminGuestUsergroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuestUsergroup] {
	return pulumix.Output[[]SystemAdminGuestUsergroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuestUsergroupArrayOutput) Index(i pulumi.IntInput) SystemAdminGuestUsergroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuestUsergroup {
		return vs[0].([]SystemAdminGuestUsergroup)[vs[1].(int)]
	}).(SystemAdminGuestUsergroupOutput)
}

type SystemAdminGuiDashboard struct {
	Columns    *int                            `pulumi:"columns"`
	Id         *int                            `pulumi:"id"`
	LayoutType *string                         `pulumi:"layoutType"`
	Name       *string                         `pulumi:"name"`
	Scope      *string                         `pulumi:"scope"`
	Widgets    []SystemAdminGuiDashboardWidget `pulumi:"widgets"`
}

// SystemAdminGuiDashboardInput is an input type that accepts SystemAdminGuiDashboardArgs and SystemAdminGuiDashboardOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardInput` via:
//
//	SystemAdminGuiDashboardArgs{...}
type SystemAdminGuiDashboardInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput
	ToSystemAdminGuiDashboardOutputWithContext(context.Context) SystemAdminGuiDashboardOutput
}

type SystemAdminGuiDashboardArgs struct {
	Columns    pulumi.IntPtrInput                      `pulumi:"columns"`
	Id         pulumi.IntPtrInput                      `pulumi:"id"`
	LayoutType pulumi.StringPtrInput                   `pulumi:"layoutType"`
	Name       pulumi.StringPtrInput                   `pulumi:"name"`
	Scope      pulumi.StringPtrInput                   `pulumi:"scope"`
	Widgets    SystemAdminGuiDashboardWidgetArrayInput `pulumi:"widgets"`
}

func (SystemAdminGuiDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboard)(nil)).Elem()
}

func (i SystemAdminGuiDashboardArgs) ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput {
	return i.ToSystemAdminGuiDashboardOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardArgs) ToSystemAdminGuiDashboardOutputWithContext(ctx context.Context) SystemAdminGuiDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardOutput)
}

func (i SystemAdminGuiDashboardArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboard] {
	return pulumix.Output[SystemAdminGuiDashboard]{
		OutputState: i.ToSystemAdminGuiDashboardOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiDashboardArrayInput is an input type that accepts SystemAdminGuiDashboardArray and SystemAdminGuiDashboardArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardArrayInput` via:
//
//	SystemAdminGuiDashboardArray{ SystemAdminGuiDashboardArgs{...} }
type SystemAdminGuiDashboardArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput
	ToSystemAdminGuiDashboardArrayOutputWithContext(context.Context) SystemAdminGuiDashboardArrayOutput
}

type SystemAdminGuiDashboardArray []SystemAdminGuiDashboardInput

func (SystemAdminGuiDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboard)(nil)).Elem()
}

func (i SystemAdminGuiDashboardArray) ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput {
	return i.ToSystemAdminGuiDashboardArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardArray) ToSystemAdminGuiDashboardArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardArrayOutput)
}

func (i SystemAdminGuiDashboardArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboard] {
	return pulumix.Output[[]SystemAdminGuiDashboard]{
		OutputState: i.ToSystemAdminGuiDashboardArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiDashboardOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboard)(nil)).Elem()
}

func (o SystemAdminGuiDashboardOutput) ToSystemAdminGuiDashboardOutput() SystemAdminGuiDashboardOutput {
	return o
}

func (o SystemAdminGuiDashboardOutput) ToSystemAdminGuiDashboardOutputWithContext(ctx context.Context) SystemAdminGuiDashboardOutput {
	return o
}

func (o SystemAdminGuiDashboardOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboard] {
	return pulumix.Output[SystemAdminGuiDashboard]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardOutput) Columns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *int { return v.Columns }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardOutput) LayoutType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.LayoutType }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardOutput) Widgets() SystemAdminGuiDashboardWidgetArrayOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboard) []SystemAdminGuiDashboardWidget { return v.Widgets }).(SystemAdminGuiDashboardWidgetArrayOutput)
}

type SystemAdminGuiDashboardArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboard)(nil)).Elem()
}

func (o SystemAdminGuiDashboardArrayOutput) ToSystemAdminGuiDashboardArrayOutput() SystemAdminGuiDashboardArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardArrayOutput) ToSystemAdminGuiDashboardArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboard] {
	return pulumix.Output[[]SystemAdminGuiDashboard]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboard {
		return vs[0].([]SystemAdminGuiDashboard)[vs[1].(int)]
	}).(SystemAdminGuiDashboardOutput)
}

type SystemAdminGuiDashboardWidget struct {
	FabricDevice  *string                               `pulumi:"fabricDevice"`
	Filters       []SystemAdminGuiDashboardWidgetFilter `pulumi:"filters"`
	Height        *int                                  `pulumi:"height"`
	Id            *int                                  `pulumi:"id"`
	Industry      *string                               `pulumi:"industry"`
	Interface     *string                               `pulumi:"interface"`
	Region        *string                               `pulumi:"region"`
	ReportBy      *string                               `pulumi:"reportBy"`
	SortBy        *string                               `pulumi:"sortBy"`
	Timeframe     *string                               `pulumi:"timeframe"`
	Title         *string                               `pulumi:"title"`
	Type          *string                               `pulumi:"type"`
	Visualization *string                               `pulumi:"visualization"`
	Width         *int                                  `pulumi:"width"`
	XPos          *int                                  `pulumi:"xPos"`
	YPos          *int                                  `pulumi:"yPos"`
}

// SystemAdminGuiDashboardWidgetInput is an input type that accepts SystemAdminGuiDashboardWidgetArgs and SystemAdminGuiDashboardWidgetOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetInput` via:
//
//	SystemAdminGuiDashboardWidgetArgs{...}
type SystemAdminGuiDashboardWidgetInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput
	ToSystemAdminGuiDashboardWidgetOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetOutput
}

type SystemAdminGuiDashboardWidgetArgs struct {
	FabricDevice  pulumi.StringPtrInput                         `pulumi:"fabricDevice"`
	Filters       SystemAdminGuiDashboardWidgetFilterArrayInput `pulumi:"filters"`
	Height        pulumi.IntPtrInput                            `pulumi:"height"`
	Id            pulumi.IntPtrInput                            `pulumi:"id"`
	Industry      pulumi.StringPtrInput                         `pulumi:"industry"`
	Interface     pulumi.StringPtrInput                         `pulumi:"interface"`
	Region        pulumi.StringPtrInput                         `pulumi:"region"`
	ReportBy      pulumi.StringPtrInput                         `pulumi:"reportBy"`
	SortBy        pulumi.StringPtrInput                         `pulumi:"sortBy"`
	Timeframe     pulumi.StringPtrInput                         `pulumi:"timeframe"`
	Title         pulumi.StringPtrInput                         `pulumi:"title"`
	Type          pulumi.StringPtrInput                         `pulumi:"type"`
	Visualization pulumi.StringPtrInput                         `pulumi:"visualization"`
	Width         pulumi.IntPtrInput                            `pulumi:"width"`
	XPos          pulumi.IntPtrInput                            `pulumi:"xPos"`
	YPos          pulumi.IntPtrInput                            `pulumi:"yPos"`
}

func (SystemAdminGuiDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetArgs) ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput {
	return i.ToSystemAdminGuiDashboardWidgetOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetArgs) ToSystemAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetOutput)
}

func (i SystemAdminGuiDashboardWidgetArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboardWidget] {
	return pulumix.Output[SystemAdminGuiDashboardWidget]{
		OutputState: i.ToSystemAdminGuiDashboardWidgetOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiDashboardWidgetArrayInput is an input type that accepts SystemAdminGuiDashboardWidgetArray and SystemAdminGuiDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetArrayInput` via:
//
//	SystemAdminGuiDashboardWidgetArray{ SystemAdminGuiDashboardWidgetArgs{...} }
type SystemAdminGuiDashboardWidgetArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput
	ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetArrayOutput
}

type SystemAdminGuiDashboardWidgetArray []SystemAdminGuiDashboardWidgetInput

func (SystemAdminGuiDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetArray) ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput {
	return i.ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetArray) ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetArrayOutput)
}

func (i SystemAdminGuiDashboardWidgetArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboardWidget] {
	return pulumix.Output[[]SystemAdminGuiDashboardWidget]{
		OutputState: i.ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiDashboardWidgetOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetOutput) ToSystemAdminGuiDashboardWidgetOutput() SystemAdminGuiDashboardWidgetOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetOutput) ToSystemAdminGuiDashboardWidgetOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboardWidget] {
	return pulumix.Output[SystemAdminGuiDashboardWidget]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardWidgetOutput) FabricDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.FabricDevice }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Filters() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) []SystemAdminGuiDashboardWidgetFilter { return v.Filters }).(SystemAdminGuiDashboardWidgetFilterArrayOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Height }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Industry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Industry }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) ReportBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.ReportBy }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Visualization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *string { return v.Visualization }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) XPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.XPos }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetOutput) YPos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidget) *int { return v.YPos }).(pulumi.IntPtrOutput)
}

type SystemAdminGuiDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidget)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) ToSystemAdminGuiDashboardWidgetArrayOutput() SystemAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) ToSystemAdminGuiDashboardWidgetArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboardWidget] {
	return pulumix.Output[[]SystemAdminGuiDashboardWidget]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardWidgetArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboardWidget {
		return vs[0].([]SystemAdminGuiDashboardWidget)[vs[1].(int)]
	}).(SystemAdminGuiDashboardWidgetOutput)
}

type SystemAdminGuiDashboardWidgetFilter struct {
	Id    *int    `pulumi:"id"`
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// SystemAdminGuiDashboardWidgetFilterInput is an input type that accepts SystemAdminGuiDashboardWidgetFilterArgs and SystemAdminGuiDashboardWidgetFilterOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetFilterInput` via:
//
//	SystemAdminGuiDashboardWidgetFilterArgs{...}
type SystemAdminGuiDashboardWidgetFilterInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput
	ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetFilterOutput
}

type SystemAdminGuiDashboardWidgetFilterArgs struct {
	Id    pulumi.IntPtrInput    `pulumi:"id"`
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAdminGuiDashboardWidgetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetFilterArgs) ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput {
	return i.ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetFilterArgs) ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetFilterOutput)
}

func (i SystemAdminGuiDashboardWidgetFilterArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboardWidgetFilter] {
	return pulumix.Output[SystemAdminGuiDashboardWidgetFilter]{
		OutputState: i.ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiDashboardWidgetFilterArrayInput is an input type that accepts SystemAdminGuiDashboardWidgetFilterArray and SystemAdminGuiDashboardWidgetFilterArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiDashboardWidgetFilterArrayInput` via:
//
//	SystemAdminGuiDashboardWidgetFilterArray{ SystemAdminGuiDashboardWidgetFilterArgs{...} }
type SystemAdminGuiDashboardWidgetFilterArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput
	ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput
}

type SystemAdminGuiDashboardWidgetFilterArray []SystemAdminGuiDashboardWidgetFilterInput

func (SystemAdminGuiDashboardWidgetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (i SystemAdminGuiDashboardWidgetFilterArray) ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return i.ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiDashboardWidgetFilterArray) ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiDashboardWidgetFilterArrayOutput)
}

func (i SystemAdminGuiDashboardWidgetFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboardWidgetFilter] {
	return pulumix.Output[[]SystemAdminGuiDashboardWidgetFilter]{
		OutputState: i.ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiDashboardWidgetFilterOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) ToSystemAdminGuiDashboardWidgetFilterOutput() SystemAdminGuiDashboardWidgetFilterOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) ToSystemAdminGuiDashboardWidgetFilterOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiDashboardWidgetFilter] {
	return pulumix.Output[SystemAdminGuiDashboardWidgetFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SystemAdminGuiDashboardWidgetFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiDashboardWidgetFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiDashboardWidgetFilterArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiDashboardWidgetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiDashboardWidgetFilter)(nil)).Elem()
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) ToSystemAdminGuiDashboardWidgetFilterArrayOutput() SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) ToSystemAdminGuiDashboardWidgetFilterArrayOutputWithContext(ctx context.Context) SystemAdminGuiDashboardWidgetFilterArrayOutput {
	return o
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiDashboardWidgetFilter] {
	return pulumix.Output[[]SystemAdminGuiDashboardWidgetFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiDashboardWidgetFilterArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiDashboardWidgetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiDashboardWidgetFilter {
		return vs[0].([]SystemAdminGuiDashboardWidgetFilter)[vs[1].(int)]
	}).(SystemAdminGuiDashboardWidgetFilterOutput)
}

type SystemAdminGuiGlobalMenuFavorite struct {
	Id *string `pulumi:"id"`
}

// SystemAdminGuiGlobalMenuFavoriteInput is an input type that accepts SystemAdminGuiGlobalMenuFavoriteArgs and SystemAdminGuiGlobalMenuFavoriteOutput values.
// You can construct a concrete instance of `SystemAdminGuiGlobalMenuFavoriteInput` via:
//
//	SystemAdminGuiGlobalMenuFavoriteArgs{...}
type SystemAdminGuiGlobalMenuFavoriteInput interface {
	pulumi.Input

	ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput
	ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(context.Context) SystemAdminGuiGlobalMenuFavoriteOutput
}

type SystemAdminGuiGlobalMenuFavoriteArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiGlobalMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiGlobalMenuFavoriteArgs) ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput {
	return i.ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(context.Background())
}

func (i SystemAdminGuiGlobalMenuFavoriteArgs) ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiGlobalMenuFavoriteOutput)
}

func (i SystemAdminGuiGlobalMenuFavoriteArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiGlobalMenuFavorite] {
	return pulumix.Output[SystemAdminGuiGlobalMenuFavorite]{
		OutputState: i.ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiGlobalMenuFavoriteArrayInput is an input type that accepts SystemAdminGuiGlobalMenuFavoriteArray and SystemAdminGuiGlobalMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiGlobalMenuFavoriteArrayInput` via:
//
//	SystemAdminGuiGlobalMenuFavoriteArray{ SystemAdminGuiGlobalMenuFavoriteArgs{...} }
type SystemAdminGuiGlobalMenuFavoriteArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput
	ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput
}

type SystemAdminGuiGlobalMenuFavoriteArray []SystemAdminGuiGlobalMenuFavoriteInput

func (SystemAdminGuiGlobalMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiGlobalMenuFavoriteArray) ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return i.ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiGlobalMenuFavoriteArray) ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiGlobalMenuFavoriteArrayOutput)
}

func (i SystemAdminGuiGlobalMenuFavoriteArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiGlobalMenuFavorite] {
	return pulumix.Output[[]SystemAdminGuiGlobalMenuFavorite]{
		OutputState: i.ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiGlobalMenuFavoriteOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiGlobalMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) ToSystemAdminGuiGlobalMenuFavoriteOutput() SystemAdminGuiGlobalMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) ToSystemAdminGuiGlobalMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiGlobalMenuFavorite] {
	return pulumix.Output[SystemAdminGuiGlobalMenuFavorite]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiGlobalMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiGlobalMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiGlobalMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiGlobalMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiGlobalMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) ToSystemAdminGuiGlobalMenuFavoriteArrayOutput() SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) ToSystemAdminGuiGlobalMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiGlobalMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiGlobalMenuFavorite] {
	return pulumix.Output[[]SystemAdminGuiGlobalMenuFavorite]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiGlobalMenuFavoriteArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiGlobalMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiGlobalMenuFavorite {
		return vs[0].([]SystemAdminGuiGlobalMenuFavorite)[vs[1].(int)]
	}).(SystemAdminGuiGlobalMenuFavoriteOutput)
}

type SystemAdminGuiNewFeatureAcknowledge struct {
	Id *string `pulumi:"id"`
}

// SystemAdminGuiNewFeatureAcknowledgeInput is an input type that accepts SystemAdminGuiNewFeatureAcknowledgeArgs and SystemAdminGuiNewFeatureAcknowledgeOutput values.
// You can construct a concrete instance of `SystemAdminGuiNewFeatureAcknowledgeInput` via:
//
//	SystemAdminGuiNewFeatureAcknowledgeArgs{...}
type SystemAdminGuiNewFeatureAcknowledgeInput interface {
	pulumi.Input

	ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput
	ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput
}

type SystemAdminGuiNewFeatureAcknowledgeArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiNewFeatureAcknowledgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i SystemAdminGuiNewFeatureAcknowledgeArgs) ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput {
	return i.ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(context.Background())
}

func (i SystemAdminGuiNewFeatureAcknowledgeArgs) ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiNewFeatureAcknowledgeOutput)
}

func (i SystemAdminGuiNewFeatureAcknowledgeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiNewFeatureAcknowledge] {
	return pulumix.Output[SystemAdminGuiNewFeatureAcknowledge]{
		OutputState: i.ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiNewFeatureAcknowledgeArrayInput is an input type that accepts SystemAdminGuiNewFeatureAcknowledgeArray and SystemAdminGuiNewFeatureAcknowledgeArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiNewFeatureAcknowledgeArrayInput` via:
//
//	SystemAdminGuiNewFeatureAcknowledgeArray{ SystemAdminGuiNewFeatureAcknowledgeArgs{...} }
type SystemAdminGuiNewFeatureAcknowledgeArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput
	ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput
}

type SystemAdminGuiNewFeatureAcknowledgeArray []SystemAdminGuiNewFeatureAcknowledgeInput

func (SystemAdminGuiNewFeatureAcknowledgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (i SystemAdminGuiNewFeatureAcknowledgeArray) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return i.ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiNewFeatureAcknowledgeArray) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiNewFeatureAcknowledgeArrayOutput)
}

func (i SystemAdminGuiNewFeatureAcknowledgeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiNewFeatureAcknowledge] {
	return pulumix.Output[[]SystemAdminGuiNewFeatureAcknowledge]{
		OutputState: i.ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiNewFeatureAcknowledgeOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiNewFeatureAcknowledgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) ToSystemAdminGuiNewFeatureAcknowledgeOutput() SystemAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) ToSystemAdminGuiNewFeatureAcknowledgeOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiNewFeatureAcknowledge] {
	return pulumix.Output[SystemAdminGuiNewFeatureAcknowledge]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiNewFeatureAcknowledgeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiNewFeatureAcknowledge) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiNewFeatureAcknowledgeArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiNewFeatureAcknowledge)(nil)).Elem()
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutput() SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ToSystemAdminGuiNewFeatureAcknowledgeArrayOutputWithContext(ctx context.Context) SystemAdminGuiNewFeatureAcknowledgeArrayOutput {
	return o
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiNewFeatureAcknowledge] {
	return pulumix.Output[[]SystemAdminGuiNewFeatureAcknowledge]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiNewFeatureAcknowledgeArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiNewFeatureAcknowledgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiNewFeatureAcknowledge {
		return vs[0].([]SystemAdminGuiNewFeatureAcknowledge)[vs[1].(int)]
	}).(SystemAdminGuiNewFeatureAcknowledgeOutput)
}

type SystemAdminGuiVdomMenuFavorite struct {
	Id *string `pulumi:"id"`
}

// SystemAdminGuiVdomMenuFavoriteInput is an input type that accepts SystemAdminGuiVdomMenuFavoriteArgs and SystemAdminGuiVdomMenuFavoriteOutput values.
// You can construct a concrete instance of `SystemAdminGuiVdomMenuFavoriteInput` via:
//
//	SystemAdminGuiVdomMenuFavoriteArgs{...}
type SystemAdminGuiVdomMenuFavoriteInput interface {
	pulumi.Input

	ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput
	ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(context.Context) SystemAdminGuiVdomMenuFavoriteOutput
}

type SystemAdminGuiVdomMenuFavoriteArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SystemAdminGuiVdomMenuFavoriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiVdomMenuFavoriteArgs) ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput {
	return i.ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(context.Background())
}

func (i SystemAdminGuiVdomMenuFavoriteArgs) ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiVdomMenuFavoriteOutput)
}

func (i SystemAdminGuiVdomMenuFavoriteArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiVdomMenuFavorite] {
	return pulumix.Output[SystemAdminGuiVdomMenuFavorite]{
		OutputState: i.ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminGuiVdomMenuFavoriteArrayInput is an input type that accepts SystemAdminGuiVdomMenuFavoriteArray and SystemAdminGuiVdomMenuFavoriteArrayOutput values.
// You can construct a concrete instance of `SystemAdminGuiVdomMenuFavoriteArrayInput` via:
//
//	SystemAdminGuiVdomMenuFavoriteArray{ SystemAdminGuiVdomMenuFavoriteArgs{...} }
type SystemAdminGuiVdomMenuFavoriteArrayInput interface {
	pulumi.Input

	ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput
	ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput
}

type SystemAdminGuiVdomMenuFavoriteArray []SystemAdminGuiVdomMenuFavoriteInput

func (SystemAdminGuiVdomMenuFavoriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (i SystemAdminGuiVdomMenuFavoriteArray) ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return i.ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(context.Background())
}

func (i SystemAdminGuiVdomMenuFavoriteArray) ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminGuiVdomMenuFavoriteArrayOutput)
}

func (i SystemAdminGuiVdomMenuFavoriteArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiVdomMenuFavorite] {
	return pulumix.Output[[]SystemAdminGuiVdomMenuFavorite]{
		OutputState: i.ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminGuiVdomMenuFavoriteOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiVdomMenuFavoriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) ToSystemAdminGuiVdomMenuFavoriteOutput() SystemAdminGuiVdomMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) ToSystemAdminGuiVdomMenuFavoriteOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminGuiVdomMenuFavorite] {
	return pulumix.Output[SystemAdminGuiVdomMenuFavorite]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiVdomMenuFavoriteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminGuiVdomMenuFavorite) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemAdminGuiVdomMenuFavoriteArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminGuiVdomMenuFavoriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminGuiVdomMenuFavorite)(nil)).Elem()
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) ToSystemAdminGuiVdomMenuFavoriteArrayOutput() SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) ToSystemAdminGuiVdomMenuFavoriteArrayOutputWithContext(ctx context.Context) SystemAdminGuiVdomMenuFavoriteArrayOutput {
	return o
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminGuiVdomMenuFavorite] {
	return pulumix.Output[[]SystemAdminGuiVdomMenuFavorite]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminGuiVdomMenuFavoriteArrayOutput) Index(i pulumi.IntInput) SystemAdminGuiVdomMenuFavoriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminGuiVdomMenuFavorite {
		return vs[0].([]SystemAdminGuiVdomMenuFavorite)[vs[1].(int)]
	}).(SystemAdminGuiVdomMenuFavoriteOutput)
}

type SystemAdminLoginTime struct {
	LastFailedLogin *string `pulumi:"lastFailedLogin"`
	LastLogin       *string `pulumi:"lastLogin"`
	UsrName         *string `pulumi:"usrName"`
}

// SystemAdminLoginTimeInput is an input type that accepts SystemAdminLoginTimeArgs and SystemAdminLoginTimeOutput values.
// You can construct a concrete instance of `SystemAdminLoginTimeInput` via:
//
//	SystemAdminLoginTimeArgs{...}
type SystemAdminLoginTimeInput interface {
	pulumi.Input

	ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput
	ToSystemAdminLoginTimeOutputWithContext(context.Context) SystemAdminLoginTimeOutput
}

type SystemAdminLoginTimeArgs struct {
	LastFailedLogin pulumi.StringPtrInput `pulumi:"lastFailedLogin"`
	LastLogin       pulumi.StringPtrInput `pulumi:"lastLogin"`
	UsrName         pulumi.StringPtrInput `pulumi:"usrName"`
}

func (SystemAdminLoginTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminLoginTime)(nil)).Elem()
}

func (i SystemAdminLoginTimeArgs) ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput {
	return i.ToSystemAdminLoginTimeOutputWithContext(context.Background())
}

func (i SystemAdminLoginTimeArgs) ToSystemAdminLoginTimeOutputWithContext(ctx context.Context) SystemAdminLoginTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminLoginTimeOutput)
}

func (i SystemAdminLoginTimeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminLoginTime] {
	return pulumix.Output[SystemAdminLoginTime]{
		OutputState: i.ToSystemAdminLoginTimeOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminLoginTimeArrayInput is an input type that accepts SystemAdminLoginTimeArray and SystemAdminLoginTimeArrayOutput values.
// You can construct a concrete instance of `SystemAdminLoginTimeArrayInput` via:
//
//	SystemAdminLoginTimeArray{ SystemAdminLoginTimeArgs{...} }
type SystemAdminLoginTimeArrayInput interface {
	pulumi.Input

	ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput
	ToSystemAdminLoginTimeArrayOutputWithContext(context.Context) SystemAdminLoginTimeArrayOutput
}

type SystemAdminLoginTimeArray []SystemAdminLoginTimeInput

func (SystemAdminLoginTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminLoginTime)(nil)).Elem()
}

func (i SystemAdminLoginTimeArray) ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput {
	return i.ToSystemAdminLoginTimeArrayOutputWithContext(context.Background())
}

func (i SystemAdminLoginTimeArray) ToSystemAdminLoginTimeArrayOutputWithContext(ctx context.Context) SystemAdminLoginTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminLoginTimeArrayOutput)
}

func (i SystemAdminLoginTimeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminLoginTime] {
	return pulumix.Output[[]SystemAdminLoginTime]{
		OutputState: i.ToSystemAdminLoginTimeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminLoginTimeOutput struct{ *pulumi.OutputState }

func (SystemAdminLoginTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminLoginTime)(nil)).Elem()
}

func (o SystemAdminLoginTimeOutput) ToSystemAdminLoginTimeOutput() SystemAdminLoginTimeOutput {
	return o
}

func (o SystemAdminLoginTimeOutput) ToSystemAdminLoginTimeOutputWithContext(ctx context.Context) SystemAdminLoginTimeOutput {
	return o
}

func (o SystemAdminLoginTimeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminLoginTime] {
	return pulumix.Output[SystemAdminLoginTime]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminLoginTimeOutput) LastFailedLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.LastFailedLogin }).(pulumi.StringPtrOutput)
}

func (o SystemAdminLoginTimeOutput) LastLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.LastLogin }).(pulumi.StringPtrOutput)
}

func (o SystemAdminLoginTimeOutput) UsrName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminLoginTime) *string { return v.UsrName }).(pulumi.StringPtrOutput)
}

type SystemAdminLoginTimeArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminLoginTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminLoginTime)(nil)).Elem()
}

func (o SystemAdminLoginTimeArrayOutput) ToSystemAdminLoginTimeArrayOutput() SystemAdminLoginTimeArrayOutput {
	return o
}

func (o SystemAdminLoginTimeArrayOutput) ToSystemAdminLoginTimeArrayOutputWithContext(ctx context.Context) SystemAdminLoginTimeArrayOutput {
	return o
}

func (o SystemAdminLoginTimeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminLoginTime] {
	return pulumix.Output[[]SystemAdminLoginTime]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminLoginTimeArrayOutput) Index(i pulumi.IntInput) SystemAdminLoginTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminLoginTime {
		return vs[0].([]SystemAdminLoginTime)[vs[1].(int)]
	}).(SystemAdminLoginTimeOutput)
}

type SystemAdminVdom struct {
	Name *string `pulumi:"name"`
}

// SystemAdminVdomInput is an input type that accepts SystemAdminVdomArgs and SystemAdminVdomOutput values.
// You can construct a concrete instance of `SystemAdminVdomInput` via:
//
//	SystemAdminVdomArgs{...}
type SystemAdminVdomInput interface {
	pulumi.Input

	ToSystemAdminVdomOutput() SystemAdminVdomOutput
	ToSystemAdminVdomOutputWithContext(context.Context) SystemAdminVdomOutput
}

type SystemAdminVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminVdom)(nil)).Elem()
}

func (i SystemAdminVdomArgs) ToSystemAdminVdomOutput() SystemAdminVdomOutput {
	return i.ToSystemAdminVdomOutputWithContext(context.Background())
}

func (i SystemAdminVdomArgs) ToSystemAdminVdomOutputWithContext(ctx context.Context) SystemAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminVdomOutput)
}

func (i SystemAdminVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAdminVdom] {
	return pulumix.Output[SystemAdminVdom]{
		OutputState: i.ToSystemAdminVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemAdminVdomArrayInput is an input type that accepts SystemAdminVdomArray and SystemAdminVdomArrayOutput values.
// You can construct a concrete instance of `SystemAdminVdomArrayInput` via:
//
//	SystemAdminVdomArray{ SystemAdminVdomArgs{...} }
type SystemAdminVdomArrayInput interface {
	pulumi.Input

	ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput
	ToSystemAdminVdomArrayOutputWithContext(context.Context) SystemAdminVdomArrayOutput
}

type SystemAdminVdomArray []SystemAdminVdomInput

func (SystemAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminVdom)(nil)).Elem()
}

func (i SystemAdminVdomArray) ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput {
	return i.ToSystemAdminVdomArrayOutputWithContext(context.Background())
}

func (i SystemAdminVdomArray) ToSystemAdminVdomArrayOutputWithContext(ctx context.Context) SystemAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAdminVdomArrayOutput)
}

func (i SystemAdminVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminVdom] {
	return pulumix.Output[[]SystemAdminVdom]{
		OutputState: i.ToSystemAdminVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAdminVdomOutput struct{ *pulumi.OutputState }

func (SystemAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAdminVdom)(nil)).Elem()
}

func (o SystemAdminVdomOutput) ToSystemAdminVdomOutput() SystemAdminVdomOutput {
	return o
}

func (o SystemAdminVdomOutput) ToSystemAdminVdomOutputWithContext(ctx context.Context) SystemAdminVdomOutput {
	return o
}

func (o SystemAdminVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAdminVdom] {
	return pulumix.Output[SystemAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAdminVdom)(nil)).Elem()
}

func (o SystemAdminVdomArrayOutput) ToSystemAdminVdomArrayOutput() SystemAdminVdomArrayOutput {
	return o
}

func (o SystemAdminVdomArrayOutput) ToSystemAdminVdomArrayOutputWithContext(ctx context.Context) SystemAdminVdomArrayOutput {
	return o
}

func (o SystemAdminVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAdminVdom] {
	return pulumix.Output[[]SystemAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemAdminVdomArrayOutput) Index(i pulumi.IntInput) SystemAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAdminVdom {
		return vs[0].([]SystemAdminVdom)[vs[1].(int)]
	}).(SystemAdminVdomOutput)
}

type SystemAlarmGroup struct {
	AdminAuthFailureThreshold  *int                                `pulumi:"adminAuthFailureThreshold"`
	AdminAuthLockoutThreshold  *int                                `pulumi:"adminAuthLockoutThreshold"`
	DecryptionFailureThreshold *int                                `pulumi:"decryptionFailureThreshold"`
	EncryptionFailureThreshold *int                                `pulumi:"encryptionFailureThreshold"`
	FwPolicyId                 *int                                `pulumi:"fwPolicyId"`
	FwPolicyIdThreshold        *int                                `pulumi:"fwPolicyIdThreshold"`
	FwPolicyViolations         []SystemAlarmGroupFwPolicyViolation `pulumi:"fwPolicyViolations"`
	Id                         *int                                `pulumi:"id"`
	LogFullWarningThreshold    *int                                `pulumi:"logFullWarningThreshold"`
	Period                     *int                                `pulumi:"period"`
	ReplayAttemptThreshold     *int                                `pulumi:"replayAttemptThreshold"`
	SelfTestFailureThreshold   *int                                `pulumi:"selfTestFailureThreshold"`
	UserAuthFailureThreshold   *int                                `pulumi:"userAuthFailureThreshold"`
	UserAuthLockoutThreshold   *int                                `pulumi:"userAuthLockoutThreshold"`
}

// SystemAlarmGroupInput is an input type that accepts SystemAlarmGroupArgs and SystemAlarmGroupOutput values.
// You can construct a concrete instance of `SystemAlarmGroupInput` via:
//
//	SystemAlarmGroupArgs{...}
type SystemAlarmGroupInput interface {
	pulumi.Input

	ToSystemAlarmGroupOutput() SystemAlarmGroupOutput
	ToSystemAlarmGroupOutputWithContext(context.Context) SystemAlarmGroupOutput
}

type SystemAlarmGroupArgs struct {
	AdminAuthFailureThreshold  pulumi.IntPtrInput                          `pulumi:"adminAuthFailureThreshold"`
	AdminAuthLockoutThreshold  pulumi.IntPtrInput                          `pulumi:"adminAuthLockoutThreshold"`
	DecryptionFailureThreshold pulumi.IntPtrInput                          `pulumi:"decryptionFailureThreshold"`
	EncryptionFailureThreshold pulumi.IntPtrInput                          `pulumi:"encryptionFailureThreshold"`
	FwPolicyId                 pulumi.IntPtrInput                          `pulumi:"fwPolicyId"`
	FwPolicyIdThreshold        pulumi.IntPtrInput                          `pulumi:"fwPolicyIdThreshold"`
	FwPolicyViolations         SystemAlarmGroupFwPolicyViolationArrayInput `pulumi:"fwPolicyViolations"`
	Id                         pulumi.IntPtrInput                          `pulumi:"id"`
	LogFullWarningThreshold    pulumi.IntPtrInput                          `pulumi:"logFullWarningThreshold"`
	Period                     pulumi.IntPtrInput                          `pulumi:"period"`
	ReplayAttemptThreshold     pulumi.IntPtrInput                          `pulumi:"replayAttemptThreshold"`
	SelfTestFailureThreshold   pulumi.IntPtrInput                          `pulumi:"selfTestFailureThreshold"`
	UserAuthFailureThreshold   pulumi.IntPtrInput                          `pulumi:"userAuthFailureThreshold"`
	UserAuthLockoutThreshold   pulumi.IntPtrInput                          `pulumi:"userAuthLockoutThreshold"`
}

func (SystemAlarmGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroup)(nil)).Elem()
}

func (i SystemAlarmGroupArgs) ToSystemAlarmGroupOutput() SystemAlarmGroupOutput {
	return i.ToSystemAlarmGroupOutputWithContext(context.Background())
}

func (i SystemAlarmGroupArgs) ToSystemAlarmGroupOutputWithContext(ctx context.Context) SystemAlarmGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupOutput)
}

func (i SystemAlarmGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAlarmGroup] {
	return pulumix.Output[SystemAlarmGroup]{
		OutputState: i.ToSystemAlarmGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemAlarmGroupArrayInput is an input type that accepts SystemAlarmGroupArray and SystemAlarmGroupArrayOutput values.
// You can construct a concrete instance of `SystemAlarmGroupArrayInput` via:
//
//	SystemAlarmGroupArray{ SystemAlarmGroupArgs{...} }
type SystemAlarmGroupArrayInput interface {
	pulumi.Input

	ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput
	ToSystemAlarmGroupArrayOutputWithContext(context.Context) SystemAlarmGroupArrayOutput
}

type SystemAlarmGroupArray []SystemAlarmGroupInput

func (SystemAlarmGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroup)(nil)).Elem()
}

func (i SystemAlarmGroupArray) ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput {
	return i.ToSystemAlarmGroupArrayOutputWithContext(context.Background())
}

func (i SystemAlarmGroupArray) ToSystemAlarmGroupArrayOutputWithContext(ctx context.Context) SystemAlarmGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupArrayOutput)
}

func (i SystemAlarmGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAlarmGroup] {
	return pulumix.Output[[]SystemAlarmGroup]{
		OutputState: i.ToSystemAlarmGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAlarmGroupOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroup)(nil)).Elem()
}

func (o SystemAlarmGroupOutput) ToSystemAlarmGroupOutput() SystemAlarmGroupOutput {
	return o
}

func (o SystemAlarmGroupOutput) ToSystemAlarmGroupOutputWithContext(ctx context.Context) SystemAlarmGroupOutput {
	return o
}

func (o SystemAlarmGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAlarmGroup] {
	return pulumix.Output[SystemAlarmGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemAlarmGroupOutput) AdminAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.AdminAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) AdminAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.AdminAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) DecryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.DecryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) EncryptionFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.EncryptionFailureThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) FwPolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.FwPolicyId }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) FwPolicyIdThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.FwPolicyIdThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) FwPolicyViolations() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o.ApplyT(func(v SystemAlarmGroup) []SystemAlarmGroupFwPolicyViolation { return v.FwPolicyViolations }).(SystemAlarmGroupFwPolicyViolationArrayOutput)
}

func (o SystemAlarmGroupOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) LogFullWarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.LogFullWarningThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) ReplayAttemptThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.ReplayAttemptThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) SelfTestFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.SelfTestFailureThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) UserAuthFailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.UserAuthFailureThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupOutput) UserAuthLockoutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroup) *int { return v.UserAuthLockoutThreshold }).(pulumi.IntPtrOutput)
}

type SystemAlarmGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroup)(nil)).Elem()
}

func (o SystemAlarmGroupArrayOutput) ToSystemAlarmGroupArrayOutput() SystemAlarmGroupArrayOutput {
	return o
}

func (o SystemAlarmGroupArrayOutput) ToSystemAlarmGroupArrayOutputWithContext(ctx context.Context) SystemAlarmGroupArrayOutput {
	return o
}

func (o SystemAlarmGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAlarmGroup] {
	return pulumix.Output[[]SystemAlarmGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemAlarmGroupArrayOutput) Index(i pulumi.IntInput) SystemAlarmGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAlarmGroup {
		return vs[0].([]SystemAlarmGroup)[vs[1].(int)]
	}).(SystemAlarmGroupOutput)
}

type SystemAlarmGroupFwPolicyViolation struct {
	DstIp     *string `pulumi:"dstIp"`
	DstPort   *int    `pulumi:"dstPort"`
	Id        *int    `pulumi:"id"`
	SrcIp     *string `pulumi:"srcIp"`
	SrcPort   *int    `pulumi:"srcPort"`
	Threshold *int    `pulumi:"threshold"`
}

// SystemAlarmGroupFwPolicyViolationInput is an input type that accepts SystemAlarmGroupFwPolicyViolationArgs and SystemAlarmGroupFwPolicyViolationOutput values.
// You can construct a concrete instance of `SystemAlarmGroupFwPolicyViolationInput` via:
//
//	SystemAlarmGroupFwPolicyViolationArgs{...}
type SystemAlarmGroupFwPolicyViolationInput interface {
	pulumi.Input

	ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput
	ToSystemAlarmGroupFwPolicyViolationOutputWithContext(context.Context) SystemAlarmGroupFwPolicyViolationOutput
}

type SystemAlarmGroupFwPolicyViolationArgs struct {
	DstIp     pulumi.StringPtrInput `pulumi:"dstIp"`
	DstPort   pulumi.IntPtrInput    `pulumi:"dstPort"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	SrcIp     pulumi.StringPtrInput `pulumi:"srcIp"`
	SrcPort   pulumi.IntPtrInput    `pulumi:"srcPort"`
	Threshold pulumi.IntPtrInput    `pulumi:"threshold"`
}

func (SystemAlarmGroupFwPolicyViolationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i SystemAlarmGroupFwPolicyViolationArgs) ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput {
	return i.ToSystemAlarmGroupFwPolicyViolationOutputWithContext(context.Background())
}

func (i SystemAlarmGroupFwPolicyViolationArgs) ToSystemAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupFwPolicyViolationOutput)
}

func (i SystemAlarmGroupFwPolicyViolationArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAlarmGroupFwPolicyViolation] {
	return pulumix.Output[SystemAlarmGroupFwPolicyViolation]{
		OutputState: i.ToSystemAlarmGroupFwPolicyViolationOutputWithContext(ctx).OutputState,
	}
}

// SystemAlarmGroupFwPolicyViolationArrayInput is an input type that accepts SystemAlarmGroupFwPolicyViolationArray and SystemAlarmGroupFwPolicyViolationArrayOutput values.
// You can construct a concrete instance of `SystemAlarmGroupFwPolicyViolationArrayInput` via:
//
//	SystemAlarmGroupFwPolicyViolationArray{ SystemAlarmGroupFwPolicyViolationArgs{...} }
type SystemAlarmGroupFwPolicyViolationArrayInput interface {
	pulumi.Input

	ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput
	ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput
}

type SystemAlarmGroupFwPolicyViolationArray []SystemAlarmGroupFwPolicyViolationInput

func (SystemAlarmGroupFwPolicyViolationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (i SystemAlarmGroupFwPolicyViolationArray) ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return i.ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(context.Background())
}

func (i SystemAlarmGroupFwPolicyViolationArray) ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAlarmGroupFwPolicyViolationArrayOutput)
}

func (i SystemAlarmGroupFwPolicyViolationArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAlarmGroupFwPolicyViolation] {
	return pulumix.Output[[]SystemAlarmGroupFwPolicyViolation]{
		OutputState: i.ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAlarmGroupFwPolicyViolationOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupFwPolicyViolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o SystemAlarmGroupFwPolicyViolationOutput) ToSystemAlarmGroupFwPolicyViolationOutput() SystemAlarmGroupFwPolicyViolationOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationOutput) ToSystemAlarmGroupFwPolicyViolationOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAlarmGroupFwPolicyViolation] {
	return pulumix.Output[SystemAlarmGroupFwPolicyViolation]{
		OutputState: o.OutputState,
	}
}

func (o SystemAlarmGroupFwPolicyViolationOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

func (o SystemAlarmGroupFwPolicyViolationOutput) DstPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.DstPort }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupFwPolicyViolationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupFwPolicyViolationOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

func (o SystemAlarmGroupFwPolicyViolationOutput) SrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.SrcPort }).(pulumi.IntPtrOutput)
}

func (o SystemAlarmGroupFwPolicyViolationOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAlarmGroupFwPolicyViolation) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

type SystemAlarmGroupFwPolicyViolationArrayOutput struct{ *pulumi.OutputState }

func (SystemAlarmGroupFwPolicyViolationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAlarmGroupFwPolicyViolation)(nil)).Elem()
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) ToSystemAlarmGroupFwPolicyViolationArrayOutput() SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) ToSystemAlarmGroupFwPolicyViolationArrayOutputWithContext(ctx context.Context) SystemAlarmGroupFwPolicyViolationArrayOutput {
	return o
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAlarmGroupFwPolicyViolation] {
	return pulumix.Output[[]SystemAlarmGroupFwPolicyViolation]{
		OutputState: o.OutputState,
	}
}

func (o SystemAlarmGroupFwPolicyViolationArrayOutput) Index(i pulumi.IntInput) SystemAlarmGroupFwPolicyViolationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAlarmGroupFwPolicyViolation {
		return vs[0].([]SystemAlarmGroupFwPolicyViolation)[vs[1].(int)]
	}).(SystemAlarmGroupFwPolicyViolationOutput)
}

type SystemApiUserTrusthost struct {
	Id            *int    `pulumi:"id"`
	Ipv4Trusthost *string `pulumi:"ipv4Trusthost"`
	Ipv6Trusthost *string `pulumi:"ipv6Trusthost"`
	Type          *string `pulumi:"type"`
}

// SystemApiUserTrusthostInput is an input type that accepts SystemApiUserTrusthostArgs and SystemApiUserTrusthostOutput values.
// You can construct a concrete instance of `SystemApiUserTrusthostInput` via:
//
//	SystemApiUserTrusthostArgs{...}
type SystemApiUserTrusthostInput interface {
	pulumi.Input

	ToSystemApiUserTrusthostOutput() SystemApiUserTrusthostOutput
	ToSystemApiUserTrusthostOutputWithContext(context.Context) SystemApiUserTrusthostOutput
}

type SystemApiUserTrusthostArgs struct {
	Id            pulumi.IntPtrInput    `pulumi:"id"`
	Ipv4Trusthost pulumi.StringPtrInput `pulumi:"ipv4Trusthost"`
	Ipv6Trusthost pulumi.StringPtrInput `pulumi:"ipv6Trusthost"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemApiUserTrusthostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiUserTrusthost)(nil)).Elem()
}

func (i SystemApiUserTrusthostArgs) ToSystemApiUserTrusthostOutput() SystemApiUserTrusthostOutput {
	return i.ToSystemApiUserTrusthostOutputWithContext(context.Background())
}

func (i SystemApiUserTrusthostArgs) ToSystemApiUserTrusthostOutputWithContext(ctx context.Context) SystemApiUserTrusthostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiUserTrusthostOutput)
}

func (i SystemApiUserTrusthostArgs) ToOutput(ctx context.Context) pulumix.Output[SystemApiUserTrusthost] {
	return pulumix.Output[SystemApiUserTrusthost]{
		OutputState: i.ToSystemApiUserTrusthostOutputWithContext(ctx).OutputState,
	}
}

// SystemApiUserTrusthostArrayInput is an input type that accepts SystemApiUserTrusthostArray and SystemApiUserTrusthostArrayOutput values.
// You can construct a concrete instance of `SystemApiUserTrusthostArrayInput` via:
//
//	SystemApiUserTrusthostArray{ SystemApiUserTrusthostArgs{...} }
type SystemApiUserTrusthostArrayInput interface {
	pulumi.Input

	ToSystemApiUserTrusthostArrayOutput() SystemApiUserTrusthostArrayOutput
	ToSystemApiUserTrusthostArrayOutputWithContext(context.Context) SystemApiUserTrusthostArrayOutput
}

type SystemApiUserTrusthostArray []SystemApiUserTrusthostInput

func (SystemApiUserTrusthostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiUserTrusthost)(nil)).Elem()
}

func (i SystemApiUserTrusthostArray) ToSystemApiUserTrusthostArrayOutput() SystemApiUserTrusthostArrayOutput {
	return i.ToSystemApiUserTrusthostArrayOutputWithContext(context.Background())
}

func (i SystemApiUserTrusthostArray) ToSystemApiUserTrusthostArrayOutputWithContext(ctx context.Context) SystemApiUserTrusthostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiUserTrusthostArrayOutput)
}

func (i SystemApiUserTrusthostArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemApiUserTrusthost] {
	return pulumix.Output[[]SystemApiUserTrusthost]{
		OutputState: i.ToSystemApiUserTrusthostArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemApiUserTrusthostOutput struct{ *pulumi.OutputState }

func (SystemApiUserTrusthostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiUserTrusthost)(nil)).Elem()
}

func (o SystemApiUserTrusthostOutput) ToSystemApiUserTrusthostOutput() SystemApiUserTrusthostOutput {
	return o
}

func (o SystemApiUserTrusthostOutput) ToSystemApiUserTrusthostOutputWithContext(ctx context.Context) SystemApiUserTrusthostOutput {
	return o
}

func (o SystemApiUserTrusthostOutput) ToOutput(ctx context.Context) pulumix.Output[SystemApiUserTrusthost] {
	return pulumix.Output[SystemApiUserTrusthost]{
		OutputState: o.OutputState,
	}
}

func (o SystemApiUserTrusthostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemApiUserTrusthost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemApiUserTrusthostOutput) Ipv4Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiUserTrusthost) *string { return v.Ipv4Trusthost }).(pulumi.StringPtrOutput)
}

func (o SystemApiUserTrusthostOutput) Ipv6Trusthost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiUserTrusthost) *string { return v.Ipv6Trusthost }).(pulumi.StringPtrOutput)
}

func (o SystemApiUserTrusthostOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiUserTrusthost) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemApiUserTrusthostArrayOutput struct{ *pulumi.OutputState }

func (SystemApiUserTrusthostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiUserTrusthost)(nil)).Elem()
}

func (o SystemApiUserTrusthostArrayOutput) ToSystemApiUserTrusthostArrayOutput() SystemApiUserTrusthostArrayOutput {
	return o
}

func (o SystemApiUserTrusthostArrayOutput) ToSystemApiUserTrusthostArrayOutputWithContext(ctx context.Context) SystemApiUserTrusthostArrayOutput {
	return o
}

func (o SystemApiUserTrusthostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemApiUserTrusthost] {
	return pulumix.Output[[]SystemApiUserTrusthost]{
		OutputState: o.OutputState,
	}
}

func (o SystemApiUserTrusthostArrayOutput) Index(i pulumi.IntInput) SystemApiUserTrusthostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemApiUserTrusthost {
		return vs[0].([]SystemApiUserTrusthost)[vs[1].(int)]
	}).(SystemApiUserTrusthostOutput)
}

type SystemApiUserVdom struct {
	Name *string `pulumi:"name"`
}

// SystemApiUserVdomInput is an input type that accepts SystemApiUserVdomArgs and SystemApiUserVdomOutput values.
// You can construct a concrete instance of `SystemApiUserVdomInput` via:
//
//	SystemApiUserVdomArgs{...}
type SystemApiUserVdomInput interface {
	pulumi.Input

	ToSystemApiUserVdomOutput() SystemApiUserVdomOutput
	ToSystemApiUserVdomOutputWithContext(context.Context) SystemApiUserVdomOutput
}

type SystemApiUserVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemApiUserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiUserVdom)(nil)).Elem()
}

func (i SystemApiUserVdomArgs) ToSystemApiUserVdomOutput() SystemApiUserVdomOutput {
	return i.ToSystemApiUserVdomOutputWithContext(context.Background())
}

func (i SystemApiUserVdomArgs) ToSystemApiUserVdomOutputWithContext(ctx context.Context) SystemApiUserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiUserVdomOutput)
}

func (i SystemApiUserVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemApiUserVdom] {
	return pulumix.Output[SystemApiUserVdom]{
		OutputState: i.ToSystemApiUserVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemApiUserVdomArrayInput is an input type that accepts SystemApiUserVdomArray and SystemApiUserVdomArrayOutput values.
// You can construct a concrete instance of `SystemApiUserVdomArrayInput` via:
//
//	SystemApiUserVdomArray{ SystemApiUserVdomArgs{...} }
type SystemApiUserVdomArrayInput interface {
	pulumi.Input

	ToSystemApiUserVdomArrayOutput() SystemApiUserVdomArrayOutput
	ToSystemApiUserVdomArrayOutputWithContext(context.Context) SystemApiUserVdomArrayOutput
}

type SystemApiUserVdomArray []SystemApiUserVdomInput

func (SystemApiUserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiUserVdom)(nil)).Elem()
}

func (i SystemApiUserVdomArray) ToSystemApiUserVdomArrayOutput() SystemApiUserVdomArrayOutput {
	return i.ToSystemApiUserVdomArrayOutputWithContext(context.Background())
}

func (i SystemApiUserVdomArray) ToSystemApiUserVdomArrayOutputWithContext(ctx context.Context) SystemApiUserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemApiUserVdomArrayOutput)
}

func (i SystemApiUserVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemApiUserVdom] {
	return pulumix.Output[[]SystemApiUserVdom]{
		OutputState: i.ToSystemApiUserVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemApiUserVdomOutput struct{ *pulumi.OutputState }

func (SystemApiUserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemApiUserVdom)(nil)).Elem()
}

func (o SystemApiUserVdomOutput) ToSystemApiUserVdomOutput() SystemApiUserVdomOutput {
	return o
}

func (o SystemApiUserVdomOutput) ToSystemApiUserVdomOutputWithContext(ctx context.Context) SystemApiUserVdomOutput {
	return o
}

func (o SystemApiUserVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemApiUserVdom] {
	return pulumix.Output[SystemApiUserVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemApiUserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemApiUserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemApiUserVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemApiUserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemApiUserVdom)(nil)).Elem()
}

func (o SystemApiUserVdomArrayOutput) ToSystemApiUserVdomArrayOutput() SystemApiUserVdomArrayOutput {
	return o
}

func (o SystemApiUserVdomArrayOutput) ToSystemApiUserVdomArrayOutputWithContext(ctx context.Context) SystemApiUserVdomArrayOutput {
	return o
}

func (o SystemApiUserVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemApiUserVdom] {
	return pulumix.Output[[]SystemApiUserVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemApiUserVdomArrayOutput) Index(i pulumi.IntInput) SystemApiUserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemApiUserVdom {
		return vs[0].([]SystemApiUserVdom)[vs[1].(int)]
	}).(SystemApiUserVdomOutput)
}

type SystemAutomationActionEmailTo struct {
	Name *string `pulumi:"name"`
}

// SystemAutomationActionEmailToInput is an input type that accepts SystemAutomationActionEmailToArgs and SystemAutomationActionEmailToOutput values.
// You can construct a concrete instance of `SystemAutomationActionEmailToInput` via:
//
//	SystemAutomationActionEmailToArgs{...}
type SystemAutomationActionEmailToInput interface {
	pulumi.Input

	ToSystemAutomationActionEmailToOutput() SystemAutomationActionEmailToOutput
	ToSystemAutomationActionEmailToOutputWithContext(context.Context) SystemAutomationActionEmailToOutput
}

type SystemAutomationActionEmailToArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationActionEmailToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionEmailTo)(nil)).Elem()
}

func (i SystemAutomationActionEmailToArgs) ToSystemAutomationActionEmailToOutput() SystemAutomationActionEmailToOutput {
	return i.ToSystemAutomationActionEmailToOutputWithContext(context.Background())
}

func (i SystemAutomationActionEmailToArgs) ToSystemAutomationActionEmailToOutputWithContext(ctx context.Context) SystemAutomationActionEmailToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionEmailToOutput)
}

func (i SystemAutomationActionEmailToArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionEmailTo] {
	return pulumix.Output[SystemAutomationActionEmailTo]{
		OutputState: i.ToSystemAutomationActionEmailToOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationActionEmailToArrayInput is an input type that accepts SystemAutomationActionEmailToArray and SystemAutomationActionEmailToArrayOutput values.
// You can construct a concrete instance of `SystemAutomationActionEmailToArrayInput` via:
//
//	SystemAutomationActionEmailToArray{ SystemAutomationActionEmailToArgs{...} }
type SystemAutomationActionEmailToArrayInput interface {
	pulumi.Input

	ToSystemAutomationActionEmailToArrayOutput() SystemAutomationActionEmailToArrayOutput
	ToSystemAutomationActionEmailToArrayOutputWithContext(context.Context) SystemAutomationActionEmailToArrayOutput
}

type SystemAutomationActionEmailToArray []SystemAutomationActionEmailToInput

func (SystemAutomationActionEmailToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionEmailTo)(nil)).Elem()
}

func (i SystemAutomationActionEmailToArray) ToSystemAutomationActionEmailToArrayOutput() SystemAutomationActionEmailToArrayOutput {
	return i.ToSystemAutomationActionEmailToArrayOutputWithContext(context.Background())
}

func (i SystemAutomationActionEmailToArray) ToSystemAutomationActionEmailToArrayOutputWithContext(ctx context.Context) SystemAutomationActionEmailToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionEmailToArrayOutput)
}

func (i SystemAutomationActionEmailToArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionEmailTo] {
	return pulumix.Output[[]SystemAutomationActionEmailTo]{
		OutputState: i.ToSystemAutomationActionEmailToArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationActionEmailToOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionEmailToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionEmailTo)(nil)).Elem()
}

func (o SystemAutomationActionEmailToOutput) ToSystemAutomationActionEmailToOutput() SystemAutomationActionEmailToOutput {
	return o
}

func (o SystemAutomationActionEmailToOutput) ToSystemAutomationActionEmailToOutputWithContext(ctx context.Context) SystemAutomationActionEmailToOutput {
	return o
}

func (o SystemAutomationActionEmailToOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionEmailTo] {
	return pulumix.Output[SystemAutomationActionEmailTo]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionEmailToOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionEmailTo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationActionEmailToArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionEmailToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionEmailTo)(nil)).Elem()
}

func (o SystemAutomationActionEmailToArrayOutput) ToSystemAutomationActionEmailToArrayOutput() SystemAutomationActionEmailToArrayOutput {
	return o
}

func (o SystemAutomationActionEmailToArrayOutput) ToSystemAutomationActionEmailToArrayOutputWithContext(ctx context.Context) SystemAutomationActionEmailToArrayOutput {
	return o
}

func (o SystemAutomationActionEmailToArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionEmailTo] {
	return pulumix.Output[[]SystemAutomationActionEmailTo]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionEmailToArrayOutput) Index(i pulumi.IntInput) SystemAutomationActionEmailToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationActionEmailTo {
		return vs[0].([]SystemAutomationActionEmailTo)[vs[1].(int)]
	}).(SystemAutomationActionEmailToOutput)
}

type SystemAutomationActionHeader struct {
	Header *string `pulumi:"header"`
}

// SystemAutomationActionHeaderInput is an input type that accepts SystemAutomationActionHeaderArgs and SystemAutomationActionHeaderOutput values.
// You can construct a concrete instance of `SystemAutomationActionHeaderInput` via:
//
//	SystemAutomationActionHeaderArgs{...}
type SystemAutomationActionHeaderInput interface {
	pulumi.Input

	ToSystemAutomationActionHeaderOutput() SystemAutomationActionHeaderOutput
	ToSystemAutomationActionHeaderOutputWithContext(context.Context) SystemAutomationActionHeaderOutput
}

type SystemAutomationActionHeaderArgs struct {
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (SystemAutomationActionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionHeader)(nil)).Elem()
}

func (i SystemAutomationActionHeaderArgs) ToSystemAutomationActionHeaderOutput() SystemAutomationActionHeaderOutput {
	return i.ToSystemAutomationActionHeaderOutputWithContext(context.Background())
}

func (i SystemAutomationActionHeaderArgs) ToSystemAutomationActionHeaderOutputWithContext(ctx context.Context) SystemAutomationActionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionHeaderOutput)
}

func (i SystemAutomationActionHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionHeader] {
	return pulumix.Output[SystemAutomationActionHeader]{
		OutputState: i.ToSystemAutomationActionHeaderOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationActionHeaderArrayInput is an input type that accepts SystemAutomationActionHeaderArray and SystemAutomationActionHeaderArrayOutput values.
// You can construct a concrete instance of `SystemAutomationActionHeaderArrayInput` via:
//
//	SystemAutomationActionHeaderArray{ SystemAutomationActionHeaderArgs{...} }
type SystemAutomationActionHeaderArrayInput interface {
	pulumi.Input

	ToSystemAutomationActionHeaderArrayOutput() SystemAutomationActionHeaderArrayOutput
	ToSystemAutomationActionHeaderArrayOutputWithContext(context.Context) SystemAutomationActionHeaderArrayOutput
}

type SystemAutomationActionHeaderArray []SystemAutomationActionHeaderInput

func (SystemAutomationActionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionHeader)(nil)).Elem()
}

func (i SystemAutomationActionHeaderArray) ToSystemAutomationActionHeaderArrayOutput() SystemAutomationActionHeaderArrayOutput {
	return i.ToSystemAutomationActionHeaderArrayOutputWithContext(context.Background())
}

func (i SystemAutomationActionHeaderArray) ToSystemAutomationActionHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationActionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionHeaderArrayOutput)
}

func (i SystemAutomationActionHeaderArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionHeader] {
	return pulumix.Output[[]SystemAutomationActionHeader]{
		OutputState: i.ToSystemAutomationActionHeaderArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationActionHeaderOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionHeader)(nil)).Elem()
}

func (o SystemAutomationActionHeaderOutput) ToSystemAutomationActionHeaderOutput() SystemAutomationActionHeaderOutput {
	return o
}

func (o SystemAutomationActionHeaderOutput) ToSystemAutomationActionHeaderOutputWithContext(ctx context.Context) SystemAutomationActionHeaderOutput {
	return o
}

func (o SystemAutomationActionHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionHeader] {
	return pulumix.Output[SystemAutomationActionHeader]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionHeaderOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionHeader) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type SystemAutomationActionHeaderArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionHeader)(nil)).Elem()
}

func (o SystemAutomationActionHeaderArrayOutput) ToSystemAutomationActionHeaderArrayOutput() SystemAutomationActionHeaderArrayOutput {
	return o
}

func (o SystemAutomationActionHeaderArrayOutput) ToSystemAutomationActionHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationActionHeaderArrayOutput {
	return o
}

func (o SystemAutomationActionHeaderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionHeader] {
	return pulumix.Output[[]SystemAutomationActionHeader]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionHeaderArrayOutput) Index(i pulumi.IntInput) SystemAutomationActionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationActionHeader {
		return vs[0].([]SystemAutomationActionHeader)[vs[1].(int)]
	}).(SystemAutomationActionHeaderOutput)
}

type SystemAutomationActionHttpHeader struct {
	Id    *int    `pulumi:"id"`
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// SystemAutomationActionHttpHeaderInput is an input type that accepts SystemAutomationActionHttpHeaderArgs and SystemAutomationActionHttpHeaderOutput values.
// You can construct a concrete instance of `SystemAutomationActionHttpHeaderInput` via:
//
//	SystemAutomationActionHttpHeaderArgs{...}
type SystemAutomationActionHttpHeaderInput interface {
	pulumi.Input

	ToSystemAutomationActionHttpHeaderOutput() SystemAutomationActionHttpHeaderOutput
	ToSystemAutomationActionHttpHeaderOutputWithContext(context.Context) SystemAutomationActionHttpHeaderOutput
}

type SystemAutomationActionHttpHeaderArgs struct {
	Id    pulumi.IntPtrInput    `pulumi:"id"`
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAutomationActionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionHttpHeader)(nil)).Elem()
}

func (i SystemAutomationActionHttpHeaderArgs) ToSystemAutomationActionHttpHeaderOutput() SystemAutomationActionHttpHeaderOutput {
	return i.ToSystemAutomationActionHttpHeaderOutputWithContext(context.Background())
}

func (i SystemAutomationActionHttpHeaderArgs) ToSystemAutomationActionHttpHeaderOutputWithContext(ctx context.Context) SystemAutomationActionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionHttpHeaderOutput)
}

func (i SystemAutomationActionHttpHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionHttpHeader] {
	return pulumix.Output[SystemAutomationActionHttpHeader]{
		OutputState: i.ToSystemAutomationActionHttpHeaderOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationActionHttpHeaderArrayInput is an input type that accepts SystemAutomationActionHttpHeaderArray and SystemAutomationActionHttpHeaderArrayOutput values.
// You can construct a concrete instance of `SystemAutomationActionHttpHeaderArrayInput` via:
//
//	SystemAutomationActionHttpHeaderArray{ SystemAutomationActionHttpHeaderArgs{...} }
type SystemAutomationActionHttpHeaderArrayInput interface {
	pulumi.Input

	ToSystemAutomationActionHttpHeaderArrayOutput() SystemAutomationActionHttpHeaderArrayOutput
	ToSystemAutomationActionHttpHeaderArrayOutputWithContext(context.Context) SystemAutomationActionHttpHeaderArrayOutput
}

type SystemAutomationActionHttpHeaderArray []SystemAutomationActionHttpHeaderInput

func (SystemAutomationActionHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionHttpHeader)(nil)).Elem()
}

func (i SystemAutomationActionHttpHeaderArray) ToSystemAutomationActionHttpHeaderArrayOutput() SystemAutomationActionHttpHeaderArrayOutput {
	return i.ToSystemAutomationActionHttpHeaderArrayOutputWithContext(context.Background())
}

func (i SystemAutomationActionHttpHeaderArray) ToSystemAutomationActionHttpHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationActionHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionHttpHeaderArrayOutput)
}

func (i SystemAutomationActionHttpHeaderArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionHttpHeader] {
	return pulumix.Output[[]SystemAutomationActionHttpHeader]{
		OutputState: i.ToSystemAutomationActionHttpHeaderArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationActionHttpHeaderOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionHttpHeader)(nil)).Elem()
}

func (o SystemAutomationActionHttpHeaderOutput) ToSystemAutomationActionHttpHeaderOutput() SystemAutomationActionHttpHeaderOutput {
	return o
}

func (o SystemAutomationActionHttpHeaderOutput) ToSystemAutomationActionHttpHeaderOutputWithContext(ctx context.Context) SystemAutomationActionHttpHeaderOutput {
	return o
}

func (o SystemAutomationActionHttpHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionHttpHeader] {
	return pulumix.Output[SystemAutomationActionHttpHeader]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionHttpHeaderOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionHttpHeader) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAutomationActionHttpHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionHttpHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationActionHttpHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionHttpHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAutomationActionHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionHttpHeader)(nil)).Elem()
}

func (o SystemAutomationActionHttpHeaderArrayOutput) ToSystemAutomationActionHttpHeaderArrayOutput() SystemAutomationActionHttpHeaderArrayOutput {
	return o
}

func (o SystemAutomationActionHttpHeaderArrayOutput) ToSystemAutomationActionHttpHeaderArrayOutputWithContext(ctx context.Context) SystemAutomationActionHttpHeaderArrayOutput {
	return o
}

func (o SystemAutomationActionHttpHeaderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionHttpHeader] {
	return pulumix.Output[[]SystemAutomationActionHttpHeader]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionHttpHeaderArrayOutput) Index(i pulumi.IntInput) SystemAutomationActionHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationActionHttpHeader {
		return vs[0].([]SystemAutomationActionHttpHeader)[vs[1].(int)]
	}).(SystemAutomationActionHttpHeaderOutput)
}

type SystemAutomationActionSdnConnector struct {
	Name *string `pulumi:"name"`
}

// SystemAutomationActionSdnConnectorInput is an input type that accepts SystemAutomationActionSdnConnectorArgs and SystemAutomationActionSdnConnectorOutput values.
// You can construct a concrete instance of `SystemAutomationActionSdnConnectorInput` via:
//
//	SystemAutomationActionSdnConnectorArgs{...}
type SystemAutomationActionSdnConnectorInput interface {
	pulumi.Input

	ToSystemAutomationActionSdnConnectorOutput() SystemAutomationActionSdnConnectorOutput
	ToSystemAutomationActionSdnConnectorOutputWithContext(context.Context) SystemAutomationActionSdnConnectorOutput
}

type SystemAutomationActionSdnConnectorArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationActionSdnConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionSdnConnector)(nil)).Elem()
}

func (i SystemAutomationActionSdnConnectorArgs) ToSystemAutomationActionSdnConnectorOutput() SystemAutomationActionSdnConnectorOutput {
	return i.ToSystemAutomationActionSdnConnectorOutputWithContext(context.Background())
}

func (i SystemAutomationActionSdnConnectorArgs) ToSystemAutomationActionSdnConnectorOutputWithContext(ctx context.Context) SystemAutomationActionSdnConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionSdnConnectorOutput)
}

func (i SystemAutomationActionSdnConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionSdnConnector] {
	return pulumix.Output[SystemAutomationActionSdnConnector]{
		OutputState: i.ToSystemAutomationActionSdnConnectorOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationActionSdnConnectorArrayInput is an input type that accepts SystemAutomationActionSdnConnectorArray and SystemAutomationActionSdnConnectorArrayOutput values.
// You can construct a concrete instance of `SystemAutomationActionSdnConnectorArrayInput` via:
//
//	SystemAutomationActionSdnConnectorArray{ SystemAutomationActionSdnConnectorArgs{...} }
type SystemAutomationActionSdnConnectorArrayInput interface {
	pulumi.Input

	ToSystemAutomationActionSdnConnectorArrayOutput() SystemAutomationActionSdnConnectorArrayOutput
	ToSystemAutomationActionSdnConnectorArrayOutputWithContext(context.Context) SystemAutomationActionSdnConnectorArrayOutput
}

type SystemAutomationActionSdnConnectorArray []SystemAutomationActionSdnConnectorInput

func (SystemAutomationActionSdnConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionSdnConnector)(nil)).Elem()
}

func (i SystemAutomationActionSdnConnectorArray) ToSystemAutomationActionSdnConnectorArrayOutput() SystemAutomationActionSdnConnectorArrayOutput {
	return i.ToSystemAutomationActionSdnConnectorArrayOutputWithContext(context.Background())
}

func (i SystemAutomationActionSdnConnectorArray) ToSystemAutomationActionSdnConnectorArrayOutputWithContext(ctx context.Context) SystemAutomationActionSdnConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationActionSdnConnectorArrayOutput)
}

func (i SystemAutomationActionSdnConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionSdnConnector] {
	return pulumix.Output[[]SystemAutomationActionSdnConnector]{
		OutputState: i.ToSystemAutomationActionSdnConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationActionSdnConnectorOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionSdnConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationActionSdnConnector)(nil)).Elem()
}

func (o SystemAutomationActionSdnConnectorOutput) ToSystemAutomationActionSdnConnectorOutput() SystemAutomationActionSdnConnectorOutput {
	return o
}

func (o SystemAutomationActionSdnConnectorOutput) ToSystemAutomationActionSdnConnectorOutputWithContext(ctx context.Context) SystemAutomationActionSdnConnectorOutput {
	return o
}

func (o SystemAutomationActionSdnConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationActionSdnConnector] {
	return pulumix.Output[SystemAutomationActionSdnConnector]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionSdnConnectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationActionSdnConnector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationActionSdnConnectorArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationActionSdnConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationActionSdnConnector)(nil)).Elem()
}

func (o SystemAutomationActionSdnConnectorArrayOutput) ToSystemAutomationActionSdnConnectorArrayOutput() SystemAutomationActionSdnConnectorArrayOutput {
	return o
}

func (o SystemAutomationActionSdnConnectorArrayOutput) ToSystemAutomationActionSdnConnectorArrayOutputWithContext(ctx context.Context) SystemAutomationActionSdnConnectorArrayOutput {
	return o
}

func (o SystemAutomationActionSdnConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationActionSdnConnector] {
	return pulumix.Output[[]SystemAutomationActionSdnConnector]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationActionSdnConnectorArrayOutput) Index(i pulumi.IntInput) SystemAutomationActionSdnConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationActionSdnConnector {
		return vs[0].([]SystemAutomationActionSdnConnector)[vs[1].(int)]
	}).(SystemAutomationActionSdnConnectorOutput)
}

type SystemAutomationDestinationDestination struct {
	Name *string `pulumi:"name"`
}

// SystemAutomationDestinationDestinationInput is an input type that accepts SystemAutomationDestinationDestinationArgs and SystemAutomationDestinationDestinationOutput values.
// You can construct a concrete instance of `SystemAutomationDestinationDestinationInput` via:
//
//	SystemAutomationDestinationDestinationArgs{...}
type SystemAutomationDestinationDestinationInput interface {
	pulumi.Input

	ToSystemAutomationDestinationDestinationOutput() SystemAutomationDestinationDestinationOutput
	ToSystemAutomationDestinationDestinationOutputWithContext(context.Context) SystemAutomationDestinationDestinationOutput
}

type SystemAutomationDestinationDestinationArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationDestinationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationDestinationDestination)(nil)).Elem()
}

func (i SystemAutomationDestinationDestinationArgs) ToSystemAutomationDestinationDestinationOutput() SystemAutomationDestinationDestinationOutput {
	return i.ToSystemAutomationDestinationDestinationOutputWithContext(context.Background())
}

func (i SystemAutomationDestinationDestinationArgs) ToSystemAutomationDestinationDestinationOutputWithContext(ctx context.Context) SystemAutomationDestinationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationDestinationDestinationOutput)
}

func (i SystemAutomationDestinationDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationDestinationDestination] {
	return pulumix.Output[SystemAutomationDestinationDestination]{
		OutputState: i.ToSystemAutomationDestinationDestinationOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationDestinationDestinationArrayInput is an input type that accepts SystemAutomationDestinationDestinationArray and SystemAutomationDestinationDestinationArrayOutput values.
// You can construct a concrete instance of `SystemAutomationDestinationDestinationArrayInput` via:
//
//	SystemAutomationDestinationDestinationArray{ SystemAutomationDestinationDestinationArgs{...} }
type SystemAutomationDestinationDestinationArrayInput interface {
	pulumi.Input

	ToSystemAutomationDestinationDestinationArrayOutput() SystemAutomationDestinationDestinationArrayOutput
	ToSystemAutomationDestinationDestinationArrayOutputWithContext(context.Context) SystemAutomationDestinationDestinationArrayOutput
}

type SystemAutomationDestinationDestinationArray []SystemAutomationDestinationDestinationInput

func (SystemAutomationDestinationDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationDestinationDestination)(nil)).Elem()
}

func (i SystemAutomationDestinationDestinationArray) ToSystemAutomationDestinationDestinationArrayOutput() SystemAutomationDestinationDestinationArrayOutput {
	return i.ToSystemAutomationDestinationDestinationArrayOutputWithContext(context.Background())
}

func (i SystemAutomationDestinationDestinationArray) ToSystemAutomationDestinationDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationDestinationDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationDestinationDestinationArrayOutput)
}

func (i SystemAutomationDestinationDestinationArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationDestinationDestination] {
	return pulumix.Output[[]SystemAutomationDestinationDestination]{
		OutputState: i.ToSystemAutomationDestinationDestinationArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationDestinationDestinationOutput struct{ *pulumi.OutputState }

func (SystemAutomationDestinationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationDestinationDestination)(nil)).Elem()
}

func (o SystemAutomationDestinationDestinationOutput) ToSystemAutomationDestinationDestinationOutput() SystemAutomationDestinationDestinationOutput {
	return o
}

func (o SystemAutomationDestinationDestinationOutput) ToSystemAutomationDestinationDestinationOutputWithContext(ctx context.Context) SystemAutomationDestinationDestinationOutput {
	return o
}

func (o SystemAutomationDestinationDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationDestinationDestination] {
	return pulumix.Output[SystemAutomationDestinationDestination]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationDestinationDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationDestinationDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationDestinationDestinationArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationDestinationDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationDestinationDestination)(nil)).Elem()
}

func (o SystemAutomationDestinationDestinationArrayOutput) ToSystemAutomationDestinationDestinationArrayOutput() SystemAutomationDestinationDestinationArrayOutput {
	return o
}

func (o SystemAutomationDestinationDestinationArrayOutput) ToSystemAutomationDestinationDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationDestinationDestinationArrayOutput {
	return o
}

func (o SystemAutomationDestinationDestinationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationDestinationDestination] {
	return pulumix.Output[[]SystemAutomationDestinationDestination]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationDestinationDestinationArrayOutput) Index(i pulumi.IntInput) SystemAutomationDestinationDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationDestinationDestination {
		return vs[0].([]SystemAutomationDestinationDestination)[vs[1].(int)]
	}).(SystemAutomationDestinationDestinationOutput)
}

type SystemAutomationStitchAction struct {
	Action   *string `pulumi:"action"`
	Delay    *int    `pulumi:"delay"`
	Id       *int    `pulumi:"id"`
	Required *string `pulumi:"required"`
}

// SystemAutomationStitchActionInput is an input type that accepts SystemAutomationStitchActionArgs and SystemAutomationStitchActionOutput values.
// You can construct a concrete instance of `SystemAutomationStitchActionInput` via:
//
//	SystemAutomationStitchActionArgs{...}
type SystemAutomationStitchActionInput interface {
	pulumi.Input

	ToSystemAutomationStitchActionOutput() SystemAutomationStitchActionOutput
	ToSystemAutomationStitchActionOutputWithContext(context.Context) SystemAutomationStitchActionOutput
}

type SystemAutomationStitchActionArgs struct {
	Action   pulumi.StringPtrInput `pulumi:"action"`
	Delay    pulumi.IntPtrInput    `pulumi:"delay"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Required pulumi.StringPtrInput `pulumi:"required"`
}

func (SystemAutomationStitchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationStitchAction)(nil)).Elem()
}

func (i SystemAutomationStitchActionArgs) ToSystemAutomationStitchActionOutput() SystemAutomationStitchActionOutput {
	return i.ToSystemAutomationStitchActionOutputWithContext(context.Background())
}

func (i SystemAutomationStitchActionArgs) ToSystemAutomationStitchActionOutputWithContext(ctx context.Context) SystemAutomationStitchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchActionOutput)
}

func (i SystemAutomationStitchActionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationStitchAction] {
	return pulumix.Output[SystemAutomationStitchAction]{
		OutputState: i.ToSystemAutomationStitchActionOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationStitchActionArrayInput is an input type that accepts SystemAutomationStitchActionArray and SystemAutomationStitchActionArrayOutput values.
// You can construct a concrete instance of `SystemAutomationStitchActionArrayInput` via:
//
//	SystemAutomationStitchActionArray{ SystemAutomationStitchActionArgs{...} }
type SystemAutomationStitchActionArrayInput interface {
	pulumi.Input

	ToSystemAutomationStitchActionArrayOutput() SystemAutomationStitchActionArrayOutput
	ToSystemAutomationStitchActionArrayOutputWithContext(context.Context) SystemAutomationStitchActionArrayOutput
}

type SystemAutomationStitchActionArray []SystemAutomationStitchActionInput

func (SystemAutomationStitchActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationStitchAction)(nil)).Elem()
}

func (i SystemAutomationStitchActionArray) ToSystemAutomationStitchActionArrayOutput() SystemAutomationStitchActionArrayOutput {
	return i.ToSystemAutomationStitchActionArrayOutputWithContext(context.Background())
}

func (i SystemAutomationStitchActionArray) ToSystemAutomationStitchActionArrayOutputWithContext(ctx context.Context) SystemAutomationStitchActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchActionArrayOutput)
}

func (i SystemAutomationStitchActionArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationStitchAction] {
	return pulumix.Output[[]SystemAutomationStitchAction]{
		OutputState: i.ToSystemAutomationStitchActionArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationStitchActionOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationStitchAction)(nil)).Elem()
}

func (o SystemAutomationStitchActionOutput) ToSystemAutomationStitchActionOutput() SystemAutomationStitchActionOutput {
	return o
}

func (o SystemAutomationStitchActionOutput) ToSystemAutomationStitchActionOutputWithContext(ctx context.Context) SystemAutomationStitchActionOutput {
	return o
}

func (o SystemAutomationStitchActionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationStitchAction] {
	return pulumix.Output[SystemAutomationStitchAction]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationStitchActionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationStitchAction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationStitchActionOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationStitchAction) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

func (o SystemAutomationStitchActionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationStitchAction) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAutomationStitchActionOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationStitchAction) *string { return v.Required }).(pulumi.StringPtrOutput)
}

type SystemAutomationStitchActionArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationStitchAction)(nil)).Elem()
}

func (o SystemAutomationStitchActionArrayOutput) ToSystemAutomationStitchActionArrayOutput() SystemAutomationStitchActionArrayOutput {
	return o
}

func (o SystemAutomationStitchActionArrayOutput) ToSystemAutomationStitchActionArrayOutputWithContext(ctx context.Context) SystemAutomationStitchActionArrayOutput {
	return o
}

func (o SystemAutomationStitchActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationStitchAction] {
	return pulumix.Output[[]SystemAutomationStitchAction]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationStitchActionArrayOutput) Index(i pulumi.IntInput) SystemAutomationStitchActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationStitchAction {
		return vs[0].([]SystemAutomationStitchAction)[vs[1].(int)]
	}).(SystemAutomationStitchActionOutput)
}

type SystemAutomationStitchDestination struct {
	Name *string `pulumi:"name"`
}

// SystemAutomationStitchDestinationInput is an input type that accepts SystemAutomationStitchDestinationArgs and SystemAutomationStitchDestinationOutput values.
// You can construct a concrete instance of `SystemAutomationStitchDestinationInput` via:
//
//	SystemAutomationStitchDestinationArgs{...}
type SystemAutomationStitchDestinationInput interface {
	pulumi.Input

	ToSystemAutomationStitchDestinationOutput() SystemAutomationStitchDestinationOutput
	ToSystemAutomationStitchDestinationOutputWithContext(context.Context) SystemAutomationStitchDestinationOutput
}

type SystemAutomationStitchDestinationArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationStitchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationStitchDestination)(nil)).Elem()
}

func (i SystemAutomationStitchDestinationArgs) ToSystemAutomationStitchDestinationOutput() SystemAutomationStitchDestinationOutput {
	return i.ToSystemAutomationStitchDestinationOutputWithContext(context.Background())
}

func (i SystemAutomationStitchDestinationArgs) ToSystemAutomationStitchDestinationOutputWithContext(ctx context.Context) SystemAutomationStitchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchDestinationOutput)
}

func (i SystemAutomationStitchDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationStitchDestination] {
	return pulumix.Output[SystemAutomationStitchDestination]{
		OutputState: i.ToSystemAutomationStitchDestinationOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationStitchDestinationArrayInput is an input type that accepts SystemAutomationStitchDestinationArray and SystemAutomationStitchDestinationArrayOutput values.
// You can construct a concrete instance of `SystemAutomationStitchDestinationArrayInput` via:
//
//	SystemAutomationStitchDestinationArray{ SystemAutomationStitchDestinationArgs{...} }
type SystemAutomationStitchDestinationArrayInput interface {
	pulumi.Input

	ToSystemAutomationStitchDestinationArrayOutput() SystemAutomationStitchDestinationArrayOutput
	ToSystemAutomationStitchDestinationArrayOutputWithContext(context.Context) SystemAutomationStitchDestinationArrayOutput
}

type SystemAutomationStitchDestinationArray []SystemAutomationStitchDestinationInput

func (SystemAutomationStitchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationStitchDestination)(nil)).Elem()
}

func (i SystemAutomationStitchDestinationArray) ToSystemAutomationStitchDestinationArrayOutput() SystemAutomationStitchDestinationArrayOutput {
	return i.ToSystemAutomationStitchDestinationArrayOutputWithContext(context.Background())
}

func (i SystemAutomationStitchDestinationArray) ToSystemAutomationStitchDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationStitchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchDestinationArrayOutput)
}

func (i SystemAutomationStitchDestinationArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationStitchDestination] {
	return pulumix.Output[[]SystemAutomationStitchDestination]{
		OutputState: i.ToSystemAutomationStitchDestinationArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationStitchDestinationOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationStitchDestination)(nil)).Elem()
}

func (o SystemAutomationStitchDestinationOutput) ToSystemAutomationStitchDestinationOutput() SystemAutomationStitchDestinationOutput {
	return o
}

func (o SystemAutomationStitchDestinationOutput) ToSystemAutomationStitchDestinationOutputWithContext(ctx context.Context) SystemAutomationStitchDestinationOutput {
	return o
}

func (o SystemAutomationStitchDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationStitchDestination] {
	return pulumix.Output[SystemAutomationStitchDestination]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationStitchDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationStitchDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationStitchDestinationArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationStitchDestination)(nil)).Elem()
}

func (o SystemAutomationStitchDestinationArrayOutput) ToSystemAutomationStitchDestinationArrayOutput() SystemAutomationStitchDestinationArrayOutput {
	return o
}

func (o SystemAutomationStitchDestinationArrayOutput) ToSystemAutomationStitchDestinationArrayOutputWithContext(ctx context.Context) SystemAutomationStitchDestinationArrayOutput {
	return o
}

func (o SystemAutomationStitchDestinationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationStitchDestination] {
	return pulumix.Output[[]SystemAutomationStitchDestination]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationStitchDestinationArrayOutput) Index(i pulumi.IntInput) SystemAutomationStitchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationStitchDestination {
		return vs[0].([]SystemAutomationStitchDestination)[vs[1].(int)]
	}).(SystemAutomationStitchDestinationOutput)
}

type SystemAutomationTriggerField struct {
	Id    *int    `pulumi:"id"`
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// SystemAutomationTriggerFieldInput is an input type that accepts SystemAutomationTriggerFieldArgs and SystemAutomationTriggerFieldOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerFieldInput` via:
//
//	SystemAutomationTriggerFieldArgs{...}
type SystemAutomationTriggerFieldInput interface {
	pulumi.Input

	ToSystemAutomationTriggerFieldOutput() SystemAutomationTriggerFieldOutput
	ToSystemAutomationTriggerFieldOutputWithContext(context.Context) SystemAutomationTriggerFieldOutput
}

type SystemAutomationTriggerFieldArgs struct {
	Id    pulumi.IntPtrInput    `pulumi:"id"`
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemAutomationTriggerFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerField)(nil)).Elem()
}

func (i SystemAutomationTriggerFieldArgs) ToSystemAutomationTriggerFieldOutput() SystemAutomationTriggerFieldOutput {
	return i.ToSystemAutomationTriggerFieldOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerFieldArgs) ToSystemAutomationTriggerFieldOutputWithContext(ctx context.Context) SystemAutomationTriggerFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerFieldOutput)
}

func (i SystemAutomationTriggerFieldArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerField] {
	return pulumix.Output[SystemAutomationTriggerField]{
		OutputState: i.ToSystemAutomationTriggerFieldOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationTriggerFieldArrayInput is an input type that accepts SystemAutomationTriggerFieldArray and SystemAutomationTriggerFieldArrayOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerFieldArrayInput` via:
//
//	SystemAutomationTriggerFieldArray{ SystemAutomationTriggerFieldArgs{...} }
type SystemAutomationTriggerFieldArrayInput interface {
	pulumi.Input

	ToSystemAutomationTriggerFieldArrayOutput() SystemAutomationTriggerFieldArrayOutput
	ToSystemAutomationTriggerFieldArrayOutputWithContext(context.Context) SystemAutomationTriggerFieldArrayOutput
}

type SystemAutomationTriggerFieldArray []SystemAutomationTriggerFieldInput

func (SystemAutomationTriggerFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerField)(nil)).Elem()
}

func (i SystemAutomationTriggerFieldArray) ToSystemAutomationTriggerFieldArrayOutput() SystemAutomationTriggerFieldArrayOutput {
	return i.ToSystemAutomationTriggerFieldArrayOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerFieldArray) ToSystemAutomationTriggerFieldArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerFieldArrayOutput)
}

func (i SystemAutomationTriggerFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerField] {
	return pulumix.Output[[]SystemAutomationTriggerField]{
		OutputState: i.ToSystemAutomationTriggerFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationTriggerFieldOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerField)(nil)).Elem()
}

func (o SystemAutomationTriggerFieldOutput) ToSystemAutomationTriggerFieldOutput() SystemAutomationTriggerFieldOutput {
	return o
}

func (o SystemAutomationTriggerFieldOutput) ToSystemAutomationTriggerFieldOutputWithContext(ctx context.Context) SystemAutomationTriggerFieldOutput {
	return o
}

func (o SystemAutomationTriggerFieldOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerField] {
	return pulumix.Output[SystemAutomationTriggerField]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerFieldOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationTriggerField) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemAutomationTriggerFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationTriggerField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationTriggerFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationTriggerField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemAutomationTriggerFieldArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerField)(nil)).Elem()
}

func (o SystemAutomationTriggerFieldArrayOutput) ToSystemAutomationTriggerFieldArrayOutput() SystemAutomationTriggerFieldArrayOutput {
	return o
}

func (o SystemAutomationTriggerFieldArrayOutput) ToSystemAutomationTriggerFieldArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerFieldArrayOutput {
	return o
}

func (o SystemAutomationTriggerFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerField] {
	return pulumix.Output[[]SystemAutomationTriggerField]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerFieldArrayOutput) Index(i pulumi.IntInput) SystemAutomationTriggerFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationTriggerField {
		return vs[0].([]SystemAutomationTriggerField)[vs[1].(int)]
	}).(SystemAutomationTriggerFieldOutput)
}

type SystemAutomationTriggerLogidBlock struct {
	Id *int `pulumi:"id"`
}

// SystemAutomationTriggerLogidBlockInput is an input type that accepts SystemAutomationTriggerLogidBlockArgs and SystemAutomationTriggerLogidBlockOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerLogidBlockInput` via:
//
//	SystemAutomationTriggerLogidBlockArgs{...}
type SystemAutomationTriggerLogidBlockInput interface {
	pulumi.Input

	ToSystemAutomationTriggerLogidBlockOutput() SystemAutomationTriggerLogidBlockOutput
	ToSystemAutomationTriggerLogidBlockOutputWithContext(context.Context) SystemAutomationTriggerLogidBlockOutput
}

type SystemAutomationTriggerLogidBlockArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemAutomationTriggerLogidBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerLogidBlock)(nil)).Elem()
}

func (i SystemAutomationTriggerLogidBlockArgs) ToSystemAutomationTriggerLogidBlockOutput() SystemAutomationTriggerLogidBlockOutput {
	return i.ToSystemAutomationTriggerLogidBlockOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerLogidBlockArgs) ToSystemAutomationTriggerLogidBlockOutputWithContext(ctx context.Context) SystemAutomationTriggerLogidBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerLogidBlockOutput)
}

func (i SystemAutomationTriggerLogidBlockArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerLogidBlock] {
	return pulumix.Output[SystemAutomationTriggerLogidBlock]{
		OutputState: i.ToSystemAutomationTriggerLogidBlockOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationTriggerLogidBlockArrayInput is an input type that accepts SystemAutomationTriggerLogidBlockArray and SystemAutomationTriggerLogidBlockArrayOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerLogidBlockArrayInput` via:
//
//	SystemAutomationTriggerLogidBlockArray{ SystemAutomationTriggerLogidBlockArgs{...} }
type SystemAutomationTriggerLogidBlockArrayInput interface {
	pulumi.Input

	ToSystemAutomationTriggerLogidBlockArrayOutput() SystemAutomationTriggerLogidBlockArrayOutput
	ToSystemAutomationTriggerLogidBlockArrayOutputWithContext(context.Context) SystemAutomationTriggerLogidBlockArrayOutput
}

type SystemAutomationTriggerLogidBlockArray []SystemAutomationTriggerLogidBlockInput

func (SystemAutomationTriggerLogidBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerLogidBlock)(nil)).Elem()
}

func (i SystemAutomationTriggerLogidBlockArray) ToSystemAutomationTriggerLogidBlockArrayOutput() SystemAutomationTriggerLogidBlockArrayOutput {
	return i.ToSystemAutomationTriggerLogidBlockArrayOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerLogidBlockArray) ToSystemAutomationTriggerLogidBlockArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerLogidBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerLogidBlockArrayOutput)
}

func (i SystemAutomationTriggerLogidBlockArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerLogidBlock] {
	return pulumix.Output[[]SystemAutomationTriggerLogidBlock]{
		OutputState: i.ToSystemAutomationTriggerLogidBlockArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationTriggerLogidBlockOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerLogidBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerLogidBlock)(nil)).Elem()
}

func (o SystemAutomationTriggerLogidBlockOutput) ToSystemAutomationTriggerLogidBlockOutput() SystemAutomationTriggerLogidBlockOutput {
	return o
}

func (o SystemAutomationTriggerLogidBlockOutput) ToSystemAutomationTriggerLogidBlockOutputWithContext(ctx context.Context) SystemAutomationTriggerLogidBlockOutput {
	return o
}

func (o SystemAutomationTriggerLogidBlockOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerLogidBlock] {
	return pulumix.Output[SystemAutomationTriggerLogidBlock]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerLogidBlockOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemAutomationTriggerLogidBlock) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemAutomationTriggerLogidBlockArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerLogidBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerLogidBlock)(nil)).Elem()
}

func (o SystemAutomationTriggerLogidBlockArrayOutput) ToSystemAutomationTriggerLogidBlockArrayOutput() SystemAutomationTriggerLogidBlockArrayOutput {
	return o
}

func (o SystemAutomationTriggerLogidBlockArrayOutput) ToSystemAutomationTriggerLogidBlockArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerLogidBlockArrayOutput {
	return o
}

func (o SystemAutomationTriggerLogidBlockArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerLogidBlock] {
	return pulumix.Output[[]SystemAutomationTriggerLogidBlock]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerLogidBlockArrayOutput) Index(i pulumi.IntInput) SystemAutomationTriggerLogidBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationTriggerLogidBlock {
		return vs[0].([]SystemAutomationTriggerLogidBlock)[vs[1].(int)]
	}).(SystemAutomationTriggerLogidBlockOutput)
}

type SystemAutomationTriggerVdom struct {
	Name *string `pulumi:"name"`
}

// SystemAutomationTriggerVdomInput is an input type that accepts SystemAutomationTriggerVdomArgs and SystemAutomationTriggerVdomOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerVdomInput` via:
//
//	SystemAutomationTriggerVdomArgs{...}
type SystemAutomationTriggerVdomInput interface {
	pulumi.Input

	ToSystemAutomationTriggerVdomOutput() SystemAutomationTriggerVdomOutput
	ToSystemAutomationTriggerVdomOutputWithContext(context.Context) SystemAutomationTriggerVdomOutput
}

type SystemAutomationTriggerVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemAutomationTriggerVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerVdom)(nil)).Elem()
}

func (i SystemAutomationTriggerVdomArgs) ToSystemAutomationTriggerVdomOutput() SystemAutomationTriggerVdomOutput {
	return i.ToSystemAutomationTriggerVdomOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerVdomArgs) ToSystemAutomationTriggerVdomOutputWithContext(ctx context.Context) SystemAutomationTriggerVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerVdomOutput)
}

func (i SystemAutomationTriggerVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerVdom] {
	return pulumix.Output[SystemAutomationTriggerVdom]{
		OutputState: i.ToSystemAutomationTriggerVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemAutomationTriggerVdomArrayInput is an input type that accepts SystemAutomationTriggerVdomArray and SystemAutomationTriggerVdomArrayOutput values.
// You can construct a concrete instance of `SystemAutomationTriggerVdomArrayInput` via:
//
//	SystemAutomationTriggerVdomArray{ SystemAutomationTriggerVdomArgs{...} }
type SystemAutomationTriggerVdomArrayInput interface {
	pulumi.Input

	ToSystemAutomationTriggerVdomArrayOutput() SystemAutomationTriggerVdomArrayOutput
	ToSystemAutomationTriggerVdomArrayOutputWithContext(context.Context) SystemAutomationTriggerVdomArrayOutput
}

type SystemAutomationTriggerVdomArray []SystemAutomationTriggerVdomInput

func (SystemAutomationTriggerVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerVdom)(nil)).Elem()
}

func (i SystemAutomationTriggerVdomArray) ToSystemAutomationTriggerVdomArrayOutput() SystemAutomationTriggerVdomArrayOutput {
	return i.ToSystemAutomationTriggerVdomArrayOutputWithContext(context.Background())
}

func (i SystemAutomationTriggerVdomArray) ToSystemAutomationTriggerVdomArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationTriggerVdomArrayOutput)
}

func (i SystemAutomationTriggerVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerVdom] {
	return pulumix.Output[[]SystemAutomationTriggerVdom]{
		OutputState: i.ToSystemAutomationTriggerVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemAutomationTriggerVdomOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemAutomationTriggerVdom)(nil)).Elem()
}

func (o SystemAutomationTriggerVdomOutput) ToSystemAutomationTriggerVdomOutput() SystemAutomationTriggerVdomOutput {
	return o
}

func (o SystemAutomationTriggerVdomOutput) ToSystemAutomationTriggerVdomOutputWithContext(ctx context.Context) SystemAutomationTriggerVdomOutput {
	return o
}

func (o SystemAutomationTriggerVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemAutomationTriggerVdom] {
	return pulumix.Output[SystemAutomationTriggerVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemAutomationTriggerVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemAutomationTriggerVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationTriggerVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemAutomationTriggerVdom)(nil)).Elem()
}

func (o SystemAutomationTriggerVdomArrayOutput) ToSystemAutomationTriggerVdomArrayOutput() SystemAutomationTriggerVdomArrayOutput {
	return o
}

func (o SystemAutomationTriggerVdomArrayOutput) ToSystemAutomationTriggerVdomArrayOutputWithContext(ctx context.Context) SystemAutomationTriggerVdomArrayOutput {
	return o
}

func (o SystemAutomationTriggerVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemAutomationTriggerVdom] {
	return pulumix.Output[[]SystemAutomationTriggerVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemAutomationTriggerVdomArrayOutput) Index(i pulumi.IntInput) SystemAutomationTriggerVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemAutomationTriggerVdom {
		return vs[0].([]SystemAutomationTriggerVdom)[vs[1].(int)]
	}).(SystemAutomationTriggerVdomOutput)
}

type SystemCentralManagementServerList struct {
	AddrType       *string `pulumi:"addrType"`
	Fqdn           *string `pulumi:"fqdn"`
	Id             *int    `pulumi:"id"`
	ServerAddress  *string `pulumi:"serverAddress"`
	ServerAddress6 *string `pulumi:"serverAddress6"`
	ServerType     *string `pulumi:"serverType"`
}

// SystemCentralManagementServerListInput is an input type that accepts SystemCentralManagementServerListArgs and SystemCentralManagementServerListOutput values.
// You can construct a concrete instance of `SystemCentralManagementServerListInput` via:
//
//	SystemCentralManagementServerListArgs{...}
type SystemCentralManagementServerListInput interface {
	pulumi.Input

	ToSystemCentralManagementServerListOutput() SystemCentralManagementServerListOutput
	ToSystemCentralManagementServerListOutputWithContext(context.Context) SystemCentralManagementServerListOutput
}

type SystemCentralManagementServerListArgs struct {
	AddrType       pulumi.StringPtrInput `pulumi:"addrType"`
	Fqdn           pulumi.StringPtrInput `pulumi:"fqdn"`
	Id             pulumi.IntPtrInput    `pulumi:"id"`
	ServerAddress  pulumi.StringPtrInput `pulumi:"serverAddress"`
	ServerAddress6 pulumi.StringPtrInput `pulumi:"serverAddress6"`
	ServerType     pulumi.StringPtrInput `pulumi:"serverType"`
}

func (SystemCentralManagementServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCentralManagementServerList)(nil)).Elem()
}

func (i SystemCentralManagementServerListArgs) ToSystemCentralManagementServerListOutput() SystemCentralManagementServerListOutput {
	return i.ToSystemCentralManagementServerListOutputWithContext(context.Background())
}

func (i SystemCentralManagementServerListArgs) ToSystemCentralManagementServerListOutputWithContext(ctx context.Context) SystemCentralManagementServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCentralManagementServerListOutput)
}

func (i SystemCentralManagementServerListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCentralManagementServerList] {
	return pulumix.Output[SystemCentralManagementServerList]{
		OutputState: i.ToSystemCentralManagementServerListOutputWithContext(ctx).OutputState,
	}
}

// SystemCentralManagementServerListArrayInput is an input type that accepts SystemCentralManagementServerListArray and SystemCentralManagementServerListArrayOutput values.
// You can construct a concrete instance of `SystemCentralManagementServerListArrayInput` via:
//
//	SystemCentralManagementServerListArray{ SystemCentralManagementServerListArgs{...} }
type SystemCentralManagementServerListArrayInput interface {
	pulumi.Input

	ToSystemCentralManagementServerListArrayOutput() SystemCentralManagementServerListArrayOutput
	ToSystemCentralManagementServerListArrayOutputWithContext(context.Context) SystemCentralManagementServerListArrayOutput
}

type SystemCentralManagementServerListArray []SystemCentralManagementServerListInput

func (SystemCentralManagementServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCentralManagementServerList)(nil)).Elem()
}

func (i SystemCentralManagementServerListArray) ToSystemCentralManagementServerListArrayOutput() SystemCentralManagementServerListArrayOutput {
	return i.ToSystemCentralManagementServerListArrayOutputWithContext(context.Background())
}

func (i SystemCentralManagementServerListArray) ToSystemCentralManagementServerListArrayOutputWithContext(ctx context.Context) SystemCentralManagementServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCentralManagementServerListArrayOutput)
}

func (i SystemCentralManagementServerListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemCentralManagementServerList] {
	return pulumix.Output[[]SystemCentralManagementServerList]{
		OutputState: i.ToSystemCentralManagementServerListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemCentralManagementServerListOutput struct{ *pulumi.OutputState }

func (SystemCentralManagementServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCentralManagementServerList)(nil)).Elem()
}

func (o SystemCentralManagementServerListOutput) ToSystemCentralManagementServerListOutput() SystemCentralManagementServerListOutput {
	return o
}

func (o SystemCentralManagementServerListOutput) ToSystemCentralManagementServerListOutputWithContext(ctx context.Context) SystemCentralManagementServerListOutput {
	return o
}

func (o SystemCentralManagementServerListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCentralManagementServerList] {
	return pulumix.Output[SystemCentralManagementServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemCentralManagementServerListOutput) AddrType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *string { return v.AddrType }).(pulumi.StringPtrOutput)
}

func (o SystemCentralManagementServerListOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

func (o SystemCentralManagementServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemCentralManagementServerListOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

func (o SystemCentralManagementServerListOutput) ServerAddress6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *string { return v.ServerAddress6 }).(pulumi.StringPtrOutput)
}

func (o SystemCentralManagementServerListOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCentralManagementServerList) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

type SystemCentralManagementServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemCentralManagementServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCentralManagementServerList)(nil)).Elem()
}

func (o SystemCentralManagementServerListArrayOutput) ToSystemCentralManagementServerListArrayOutput() SystemCentralManagementServerListArrayOutput {
	return o
}

func (o SystemCentralManagementServerListArrayOutput) ToSystemCentralManagementServerListArrayOutputWithContext(ctx context.Context) SystemCentralManagementServerListArrayOutput {
	return o
}

func (o SystemCentralManagementServerListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemCentralManagementServerList] {
	return pulumix.Output[[]SystemCentralManagementServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemCentralManagementServerListArrayOutput) Index(i pulumi.IntInput) SystemCentralManagementServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCentralManagementServerList {
		return vs[0].([]SystemCentralManagementServerList)[vs[1].(int)]
	}).(SystemCentralManagementServerListOutput)
}

type SystemClusterSyncDownIntfsBeforeSessSync struct {
	Name *string `pulumi:"name"`
}

// SystemClusterSyncDownIntfsBeforeSessSyncInput is an input type that accepts SystemClusterSyncDownIntfsBeforeSessSyncArgs and SystemClusterSyncDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `SystemClusterSyncDownIntfsBeforeSessSyncInput` via:
//
//	SystemClusterSyncDownIntfsBeforeSessSyncArgs{...}
type SystemClusterSyncDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToSystemClusterSyncDownIntfsBeforeSessSyncOutput() SystemClusterSyncDownIntfsBeforeSessSyncOutput
	ToSystemClusterSyncDownIntfsBeforeSessSyncOutputWithContext(context.Context) SystemClusterSyncDownIntfsBeforeSessSyncOutput
}

type SystemClusterSyncDownIntfsBeforeSessSyncArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemClusterSyncDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArgs) ToSystemClusterSyncDownIntfsBeforeSessSyncOutput() SystemClusterSyncDownIntfsBeforeSessSyncOutput {
	return i.ToSystemClusterSyncDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArgs) ToSystemClusterSyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemClusterSyncDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncDownIntfsBeforeSessSyncOutput)
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArgs) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncDownIntfsBeforeSessSync] {
	return pulumix.Output[SystemClusterSyncDownIntfsBeforeSessSync]{
		OutputState: i.ToSystemClusterSyncDownIntfsBeforeSessSyncOutputWithContext(ctx).OutputState,
	}
}

// SystemClusterSyncDownIntfsBeforeSessSyncArrayInput is an input type that accepts SystemClusterSyncDownIntfsBeforeSessSyncArray and SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `SystemClusterSyncDownIntfsBeforeSessSyncArrayInput` via:
//
//	SystemClusterSyncDownIntfsBeforeSessSyncArray{ SystemClusterSyncDownIntfsBeforeSessSyncArgs{...} }
type SystemClusterSyncDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutput() SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput
	ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput
}

type SystemClusterSyncDownIntfsBeforeSessSyncArray []SystemClusterSyncDownIntfsBeforeSessSyncInput

func (SystemClusterSyncDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArray) ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutput() SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput {
	return i.ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArray) ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput)
}

func (i SystemClusterSyncDownIntfsBeforeSessSyncArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncDownIntfsBeforeSessSync] {
	return pulumix.Output[[]SystemClusterSyncDownIntfsBeforeSessSync]{
		OutputState: i.ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemClusterSyncDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncOutput) ToSystemClusterSyncDownIntfsBeforeSessSyncOutput() SystemClusterSyncDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncOutput) ToSystemClusterSyncDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemClusterSyncDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncOutput) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncDownIntfsBeforeSessSync] {
	return pulumix.Output[SystemClusterSyncDownIntfsBeforeSessSync]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput) ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutput() SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput) ToSystemClusterSyncDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncDownIntfsBeforeSessSync] {
	return pulumix.Output[[]SystemClusterSyncDownIntfsBeforeSessSync]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) SystemClusterSyncDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClusterSyncDownIntfsBeforeSessSync {
		return vs[0].([]SystemClusterSyncDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(SystemClusterSyncDownIntfsBeforeSessSyncOutput)
}

type SystemClusterSyncSessionSyncFilter struct {
	CustomServices []SystemClusterSyncSessionSyncFilterCustomService `pulumi:"customServices"`
	Dstaddr        *string                                           `pulumi:"dstaddr"`
	Dstaddr6       *string                                           `pulumi:"dstaddr6"`
	Dstintf        *string                                           `pulumi:"dstintf"`
	Srcaddr        *string                                           `pulumi:"srcaddr"`
	Srcaddr6       *string                                           `pulumi:"srcaddr6"`
	Srcintf        *string                                           `pulumi:"srcintf"`
}

// SystemClusterSyncSessionSyncFilterInput is an input type that accepts SystemClusterSyncSessionSyncFilterArgs and SystemClusterSyncSessionSyncFilterOutput values.
// You can construct a concrete instance of `SystemClusterSyncSessionSyncFilterInput` via:
//
//	SystemClusterSyncSessionSyncFilterArgs{...}
type SystemClusterSyncSessionSyncFilterInput interface {
	pulumi.Input

	ToSystemClusterSyncSessionSyncFilterOutput() SystemClusterSyncSessionSyncFilterOutput
	ToSystemClusterSyncSessionSyncFilterOutputWithContext(context.Context) SystemClusterSyncSessionSyncFilterOutput
}

type SystemClusterSyncSessionSyncFilterArgs struct {
	CustomServices SystemClusterSyncSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	Dstaddr        pulumi.StringPtrInput                                     `pulumi:"dstaddr"`
	Dstaddr6       pulumi.StringPtrInput                                     `pulumi:"dstaddr6"`
	Dstintf        pulumi.StringPtrInput                                     `pulumi:"dstintf"`
	Srcaddr        pulumi.StringPtrInput                                     `pulumi:"srcaddr"`
	Srcaddr6       pulumi.StringPtrInput                                     `pulumi:"srcaddr6"`
	Srcintf        pulumi.StringPtrInput                                     `pulumi:"srcintf"`
}

func (SystemClusterSyncSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSessionSyncFilter)(nil)).Elem()
}

func (i SystemClusterSyncSessionSyncFilterArgs) ToSystemClusterSyncSessionSyncFilterOutput() SystemClusterSyncSessionSyncFilterOutput {
	return i.ToSystemClusterSyncSessionSyncFilterOutputWithContext(context.Background())
}

func (i SystemClusterSyncSessionSyncFilterArgs) ToSystemClusterSyncSessionSyncFilterOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSessionSyncFilterOutput)
}

func (i SystemClusterSyncSessionSyncFilterArgs) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSessionSyncFilter] {
	return pulumix.Output[SystemClusterSyncSessionSyncFilter]{
		OutputState: i.ToSystemClusterSyncSessionSyncFilterOutputWithContext(ctx).OutputState,
	}
}

func (i SystemClusterSyncSessionSyncFilterArgs) ToSystemClusterSyncSessionSyncFilterPtrOutput() SystemClusterSyncSessionSyncFilterPtrOutput {
	return i.ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i SystemClusterSyncSessionSyncFilterArgs) ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSessionSyncFilterOutput).ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx)
}

// SystemClusterSyncSessionSyncFilterPtrInput is an input type that accepts SystemClusterSyncSessionSyncFilterArgs, SystemClusterSyncSessionSyncFilterPtr and SystemClusterSyncSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `SystemClusterSyncSessionSyncFilterPtrInput` via:
//
//	        SystemClusterSyncSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type SystemClusterSyncSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToSystemClusterSyncSessionSyncFilterPtrOutput() SystemClusterSyncSessionSyncFilterPtrOutput
	ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(context.Context) SystemClusterSyncSessionSyncFilterPtrOutput
}

type systemClusterSyncSessionSyncFilterPtrType SystemClusterSyncSessionSyncFilterArgs

func SystemClusterSyncSessionSyncFilterPtr(v *SystemClusterSyncSessionSyncFilterArgs) SystemClusterSyncSessionSyncFilterPtrInput {
	return (*systemClusterSyncSessionSyncFilterPtrType)(v)
}

func (*systemClusterSyncSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemClusterSyncSessionSyncFilter)(nil)).Elem()
}

func (i *systemClusterSyncSessionSyncFilterPtrType) ToSystemClusterSyncSessionSyncFilterPtrOutput() SystemClusterSyncSessionSyncFilterPtrOutput {
	return i.ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *systemClusterSyncSessionSyncFilterPtrType) ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSessionSyncFilterPtrOutput)
}

func (i *systemClusterSyncSessionSyncFilterPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemClusterSyncSessionSyncFilter] {
	return pulumix.Output[*SystemClusterSyncSessionSyncFilter]{
		OutputState: i.ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemClusterSyncSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSessionSyncFilter)(nil)).Elem()
}

func (o SystemClusterSyncSessionSyncFilterOutput) ToSystemClusterSyncSessionSyncFilterOutput() SystemClusterSyncSessionSyncFilterOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterOutput) ToSystemClusterSyncSessionSyncFilterOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterOutput) ToSystemClusterSyncSessionSyncFilterPtrOutput() SystemClusterSyncSessionSyncFilterPtrOutput {
	return o.ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o SystemClusterSyncSessionSyncFilterOutput) ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemClusterSyncSessionSyncFilter) *SystemClusterSyncSessionSyncFilter {
		return &v
	}).(SystemClusterSyncSessionSyncFilterPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSessionSyncFilter] {
	return pulumix.Output[SystemClusterSyncSessionSyncFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSessionSyncFilterOutput) CustomServices() SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) []SystemClusterSyncSessionSyncFilterCustomService {
		return v.CustomServices
	}).(SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type SystemClusterSyncSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemClusterSyncSessionSyncFilter)(nil)).Elem()
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) ToSystemClusterSyncSessionSyncFilterPtrOutput() SystemClusterSyncSessionSyncFilterPtrOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) ToSystemClusterSyncSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterPtrOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemClusterSyncSessionSyncFilter] {
	return pulumix.Output[*SystemClusterSyncSessionSyncFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Elem() SystemClusterSyncSessionSyncFilterOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) SystemClusterSyncSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret SystemClusterSyncSessionSyncFilter
		return ret
	}).(SystemClusterSyncSessionSyncFilterOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) CustomServices() SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) []SystemClusterSyncSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemClusterSyncSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type SystemClusterSyncSessionSyncFilterCustomService struct {
	DstPortRange *string `pulumi:"dstPortRange"`
	Id           *int    `pulumi:"id"`
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// SystemClusterSyncSessionSyncFilterCustomServiceInput is an input type that accepts SystemClusterSyncSessionSyncFilterCustomServiceArgs and SystemClusterSyncSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `SystemClusterSyncSessionSyncFilterCustomServiceInput` via:
//
//	SystemClusterSyncSessionSyncFilterCustomServiceArgs{...}
type SystemClusterSyncSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToSystemClusterSyncSessionSyncFilterCustomServiceOutput() SystemClusterSyncSessionSyncFilterCustomServiceOutput
	ToSystemClusterSyncSessionSyncFilterCustomServiceOutputWithContext(context.Context) SystemClusterSyncSessionSyncFilterCustomServiceOutput
}

type SystemClusterSyncSessionSyncFilterCustomServiceArgs struct {
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (SystemClusterSyncSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArgs) ToSystemClusterSyncSessionSyncFilterCustomServiceOutput() SystemClusterSyncSessionSyncFilterCustomServiceOutput {
	return i.ToSystemClusterSyncSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArgs) ToSystemClusterSyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSessionSyncFilterCustomServiceOutput)
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSessionSyncFilterCustomService] {
	return pulumix.Output[SystemClusterSyncSessionSyncFilterCustomService]{
		OutputState: i.ToSystemClusterSyncSessionSyncFilterCustomServiceOutputWithContext(ctx).OutputState,
	}
}

// SystemClusterSyncSessionSyncFilterCustomServiceArrayInput is an input type that accepts SystemClusterSyncSessionSyncFilterCustomServiceArray and SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `SystemClusterSyncSessionSyncFilterCustomServiceArrayInput` via:
//
//	SystemClusterSyncSessionSyncFilterCustomServiceArray{ SystemClusterSyncSessionSyncFilterCustomServiceArgs{...} }
type SystemClusterSyncSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutput() SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput
	ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput
}

type SystemClusterSyncSessionSyncFilterCustomServiceArray []SystemClusterSyncSessionSyncFilterCustomServiceInput

func (SystemClusterSyncSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArray) ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutput() SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return i.ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArray) ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput)
}

func (i SystemClusterSyncSessionSyncFilterCustomServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncSessionSyncFilterCustomService] {
	return pulumix.Output[[]SystemClusterSyncSessionSyncFilterCustomService]{
		OutputState: i.ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemClusterSyncSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) ToSystemClusterSyncSessionSyncFilterCustomServiceOutput() SystemClusterSyncSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) ToSystemClusterSyncSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSessionSyncFilterCustomService] {
	return pulumix.Output[SystemClusterSyncSessionSyncFilterCustomService]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilterCustomService) *string { return v.DstPortRange }).(pulumi.StringPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSessionSyncFilterCustomService) *string { return v.SrcPortRange }).(pulumi.StringPtrOutput)
}

type SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput) ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutput() SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput) ToSystemClusterSyncSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncSessionSyncFilterCustomService] {
	return pulumix.Output[[]SystemClusterSyncSessionSyncFilterCustomService]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) SystemClusterSyncSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClusterSyncSessionSyncFilterCustomService {
		return vs[0].([]SystemClusterSyncSessionSyncFilterCustomService)[vs[1].(int)]
	}).(SystemClusterSyncSessionSyncFilterCustomServiceOutput)
}

type SystemClusterSyncSyncvd struct {
	Name *string `pulumi:"name"`
}

// SystemClusterSyncSyncvdInput is an input type that accepts SystemClusterSyncSyncvdArgs and SystemClusterSyncSyncvdOutput values.
// You can construct a concrete instance of `SystemClusterSyncSyncvdInput` via:
//
//	SystemClusterSyncSyncvdArgs{...}
type SystemClusterSyncSyncvdInput interface {
	pulumi.Input

	ToSystemClusterSyncSyncvdOutput() SystemClusterSyncSyncvdOutput
	ToSystemClusterSyncSyncvdOutputWithContext(context.Context) SystemClusterSyncSyncvdOutput
}

type SystemClusterSyncSyncvdArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemClusterSyncSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSyncvd)(nil)).Elem()
}

func (i SystemClusterSyncSyncvdArgs) ToSystemClusterSyncSyncvdOutput() SystemClusterSyncSyncvdOutput {
	return i.ToSystemClusterSyncSyncvdOutputWithContext(context.Background())
}

func (i SystemClusterSyncSyncvdArgs) ToSystemClusterSyncSyncvdOutputWithContext(ctx context.Context) SystemClusterSyncSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSyncvdOutput)
}

func (i SystemClusterSyncSyncvdArgs) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSyncvd] {
	return pulumix.Output[SystemClusterSyncSyncvd]{
		OutputState: i.ToSystemClusterSyncSyncvdOutputWithContext(ctx).OutputState,
	}
}

// SystemClusterSyncSyncvdArrayInput is an input type that accepts SystemClusterSyncSyncvdArray and SystemClusterSyncSyncvdArrayOutput values.
// You can construct a concrete instance of `SystemClusterSyncSyncvdArrayInput` via:
//
//	SystemClusterSyncSyncvdArray{ SystemClusterSyncSyncvdArgs{...} }
type SystemClusterSyncSyncvdArrayInput interface {
	pulumi.Input

	ToSystemClusterSyncSyncvdArrayOutput() SystemClusterSyncSyncvdArrayOutput
	ToSystemClusterSyncSyncvdArrayOutputWithContext(context.Context) SystemClusterSyncSyncvdArrayOutput
}

type SystemClusterSyncSyncvdArray []SystemClusterSyncSyncvdInput

func (SystemClusterSyncSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncSyncvd)(nil)).Elem()
}

func (i SystemClusterSyncSyncvdArray) ToSystemClusterSyncSyncvdArrayOutput() SystemClusterSyncSyncvdArrayOutput {
	return i.ToSystemClusterSyncSyncvdArrayOutputWithContext(context.Background())
}

func (i SystemClusterSyncSyncvdArray) ToSystemClusterSyncSyncvdArrayOutputWithContext(ctx context.Context) SystemClusterSyncSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemClusterSyncSyncvdArrayOutput)
}

func (i SystemClusterSyncSyncvdArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncSyncvd] {
	return pulumix.Output[[]SystemClusterSyncSyncvd]{
		OutputState: i.ToSystemClusterSyncSyncvdArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemClusterSyncSyncvdOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemClusterSyncSyncvd)(nil)).Elem()
}

func (o SystemClusterSyncSyncvdOutput) ToSystemClusterSyncSyncvdOutput() SystemClusterSyncSyncvdOutput {
	return o
}

func (o SystemClusterSyncSyncvdOutput) ToSystemClusterSyncSyncvdOutputWithContext(ctx context.Context) SystemClusterSyncSyncvdOutput {
	return o
}

func (o SystemClusterSyncSyncvdOutput) ToOutput(ctx context.Context) pulumix.Output[SystemClusterSyncSyncvd] {
	return pulumix.Output[SystemClusterSyncSyncvd]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemClusterSyncSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemClusterSyncSyncvdArrayOutput struct{ *pulumi.OutputState }

func (SystemClusterSyncSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemClusterSyncSyncvd)(nil)).Elem()
}

func (o SystemClusterSyncSyncvdArrayOutput) ToSystemClusterSyncSyncvdArrayOutput() SystemClusterSyncSyncvdArrayOutput {
	return o
}

func (o SystemClusterSyncSyncvdArrayOutput) ToSystemClusterSyncSyncvdArrayOutputWithContext(ctx context.Context) SystemClusterSyncSyncvdArrayOutput {
	return o
}

func (o SystemClusterSyncSyncvdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemClusterSyncSyncvd] {
	return pulumix.Output[[]SystemClusterSyncSyncvd]{
		OutputState: o.OutputState,
	}
}

func (o SystemClusterSyncSyncvdArrayOutput) Index(i pulumi.IntInput) SystemClusterSyncSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemClusterSyncSyncvd {
		return vs[0].([]SystemClusterSyncSyncvd)[vs[1].(int)]
	}).(SystemClusterSyncSyncvdOutput)
}

type SystemCsfFabricConnector struct {
	Accprofile               *string                        `pulumi:"accprofile"`
	ConfigurationWriteAccess *string                        `pulumi:"configurationWriteAccess"`
	Serial                   *string                        `pulumi:"serial"`
	Vdoms                    []SystemCsfFabricConnectorVdom `pulumi:"vdoms"`
}

// SystemCsfFabricConnectorInput is an input type that accepts SystemCsfFabricConnectorArgs and SystemCsfFabricConnectorOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorInput` via:
//
//	SystemCsfFabricConnectorArgs{...}
type SystemCsfFabricConnectorInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput
	ToSystemCsfFabricConnectorOutputWithContext(context.Context) SystemCsfFabricConnectorOutput
}

type SystemCsfFabricConnectorArgs struct {
	Accprofile               pulumi.StringPtrInput                  `pulumi:"accprofile"`
	ConfigurationWriteAccess pulumi.StringPtrInput                  `pulumi:"configurationWriteAccess"`
	Serial                   pulumi.StringPtrInput                  `pulumi:"serial"`
	Vdoms                    SystemCsfFabricConnectorVdomArrayInput `pulumi:"vdoms"`
}

func (SystemCsfFabricConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnector)(nil)).Elem()
}

func (i SystemCsfFabricConnectorArgs) ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput {
	return i.ToSystemCsfFabricConnectorOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorArgs) ToSystemCsfFabricConnectorOutputWithContext(ctx context.Context) SystemCsfFabricConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorOutput)
}

func (i SystemCsfFabricConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricConnector] {
	return pulumix.Output[SystemCsfFabricConnector]{
		OutputState: i.ToSystemCsfFabricConnectorOutputWithContext(ctx).OutputState,
	}
}

// SystemCsfFabricConnectorArrayInput is an input type that accepts SystemCsfFabricConnectorArray and SystemCsfFabricConnectorArrayOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorArrayInput` via:
//
//	SystemCsfFabricConnectorArray{ SystemCsfFabricConnectorArgs{...} }
type SystemCsfFabricConnectorArrayInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput
	ToSystemCsfFabricConnectorArrayOutputWithContext(context.Context) SystemCsfFabricConnectorArrayOutput
}

type SystemCsfFabricConnectorArray []SystemCsfFabricConnectorInput

func (SystemCsfFabricConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnector)(nil)).Elem()
}

func (i SystemCsfFabricConnectorArray) ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput {
	return i.ToSystemCsfFabricConnectorArrayOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorArray) ToSystemCsfFabricConnectorArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorArrayOutput)
}

func (i SystemCsfFabricConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricConnector] {
	return pulumix.Output[[]SystemCsfFabricConnector]{
		OutputState: i.ToSystemCsfFabricConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemCsfFabricConnectorOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnector)(nil)).Elem()
}

func (o SystemCsfFabricConnectorOutput) ToSystemCsfFabricConnectorOutput() SystemCsfFabricConnectorOutput {
	return o
}

func (o SystemCsfFabricConnectorOutput) ToSystemCsfFabricConnectorOutputWithContext(ctx context.Context) SystemCsfFabricConnectorOutput {
	return o
}

func (o SystemCsfFabricConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricConnector] {
	return pulumix.Output[SystemCsfFabricConnector]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricConnectorOutput) Accprofile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.Accprofile }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricConnectorOutput) ConfigurationWriteAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.ConfigurationWriteAccess }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricConnectorOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricConnectorOutput) Vdoms() SystemCsfFabricConnectorVdomArrayOutput {
	return o.ApplyT(func(v SystemCsfFabricConnector) []SystemCsfFabricConnectorVdom { return v.Vdoms }).(SystemCsfFabricConnectorVdomArrayOutput)
}

type SystemCsfFabricConnectorArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnector)(nil)).Elem()
}

func (o SystemCsfFabricConnectorArrayOutput) ToSystemCsfFabricConnectorArrayOutput() SystemCsfFabricConnectorArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorArrayOutput) ToSystemCsfFabricConnectorArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricConnector] {
	return pulumix.Output[[]SystemCsfFabricConnector]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricConnectorArrayOutput) Index(i pulumi.IntInput) SystemCsfFabricConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfFabricConnector {
		return vs[0].([]SystemCsfFabricConnector)[vs[1].(int)]
	}).(SystemCsfFabricConnectorOutput)
}

type SystemCsfFabricConnectorVdom struct {
	Name *string `pulumi:"name"`
}

// SystemCsfFabricConnectorVdomInput is an input type that accepts SystemCsfFabricConnectorVdomArgs and SystemCsfFabricConnectorVdomOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorVdomInput` via:
//
//	SystemCsfFabricConnectorVdomArgs{...}
type SystemCsfFabricConnectorVdomInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorVdomOutput() SystemCsfFabricConnectorVdomOutput
	ToSystemCsfFabricConnectorVdomOutputWithContext(context.Context) SystemCsfFabricConnectorVdomOutput
}

type SystemCsfFabricConnectorVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemCsfFabricConnectorVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnectorVdom)(nil)).Elem()
}

func (i SystemCsfFabricConnectorVdomArgs) ToSystemCsfFabricConnectorVdomOutput() SystemCsfFabricConnectorVdomOutput {
	return i.ToSystemCsfFabricConnectorVdomOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorVdomArgs) ToSystemCsfFabricConnectorVdomOutputWithContext(ctx context.Context) SystemCsfFabricConnectorVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorVdomOutput)
}

func (i SystemCsfFabricConnectorVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricConnectorVdom] {
	return pulumix.Output[SystemCsfFabricConnectorVdom]{
		OutputState: i.ToSystemCsfFabricConnectorVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemCsfFabricConnectorVdomArrayInput is an input type that accepts SystemCsfFabricConnectorVdomArray and SystemCsfFabricConnectorVdomArrayOutput values.
// You can construct a concrete instance of `SystemCsfFabricConnectorVdomArrayInput` via:
//
//	SystemCsfFabricConnectorVdomArray{ SystemCsfFabricConnectorVdomArgs{...} }
type SystemCsfFabricConnectorVdomArrayInput interface {
	pulumi.Input

	ToSystemCsfFabricConnectorVdomArrayOutput() SystemCsfFabricConnectorVdomArrayOutput
	ToSystemCsfFabricConnectorVdomArrayOutputWithContext(context.Context) SystemCsfFabricConnectorVdomArrayOutput
}

type SystemCsfFabricConnectorVdomArray []SystemCsfFabricConnectorVdomInput

func (SystemCsfFabricConnectorVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnectorVdom)(nil)).Elem()
}

func (i SystemCsfFabricConnectorVdomArray) ToSystemCsfFabricConnectorVdomArrayOutput() SystemCsfFabricConnectorVdomArrayOutput {
	return i.ToSystemCsfFabricConnectorVdomArrayOutputWithContext(context.Background())
}

func (i SystemCsfFabricConnectorVdomArray) ToSystemCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricConnectorVdomArrayOutput)
}

func (i SystemCsfFabricConnectorVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricConnectorVdom] {
	return pulumix.Output[[]SystemCsfFabricConnectorVdom]{
		OutputState: i.ToSystemCsfFabricConnectorVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemCsfFabricConnectorVdomOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricConnectorVdom)(nil)).Elem()
}

func (o SystemCsfFabricConnectorVdomOutput) ToSystemCsfFabricConnectorVdomOutput() SystemCsfFabricConnectorVdomOutput {
	return o
}

func (o SystemCsfFabricConnectorVdomOutput) ToSystemCsfFabricConnectorVdomOutputWithContext(ctx context.Context) SystemCsfFabricConnectorVdomOutput {
	return o
}

func (o SystemCsfFabricConnectorVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricConnectorVdom] {
	return pulumix.Output[SystemCsfFabricConnectorVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricConnectorVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricConnectorVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemCsfFabricConnectorVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricConnectorVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricConnectorVdom)(nil)).Elem()
}

func (o SystemCsfFabricConnectorVdomArrayOutput) ToSystemCsfFabricConnectorVdomArrayOutput() SystemCsfFabricConnectorVdomArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorVdomArrayOutput) ToSystemCsfFabricConnectorVdomArrayOutputWithContext(ctx context.Context) SystemCsfFabricConnectorVdomArrayOutput {
	return o
}

func (o SystemCsfFabricConnectorVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricConnectorVdom] {
	return pulumix.Output[[]SystemCsfFabricConnectorVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricConnectorVdomArrayOutput) Index(i pulumi.IntInput) SystemCsfFabricConnectorVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfFabricConnectorVdom {
		return vs[0].([]SystemCsfFabricConnectorVdom)[vs[1].(int)]
	}).(SystemCsfFabricConnectorVdomOutput)
}

type SystemCsfFabricDevice struct {
	AccessToken *string `pulumi:"accessToken"`
	DeviceIp    *string `pulumi:"deviceIp"`
	DeviceType  *string `pulumi:"deviceType"`
	HttpsPort   *int    `pulumi:"httpsPort"`
	Login       *string `pulumi:"login"`
	Name        *string `pulumi:"name"`
	Password    *string `pulumi:"password"`
}

// SystemCsfFabricDeviceInput is an input type that accepts SystemCsfFabricDeviceArgs and SystemCsfFabricDeviceOutput values.
// You can construct a concrete instance of `SystemCsfFabricDeviceInput` via:
//
//	SystemCsfFabricDeviceArgs{...}
type SystemCsfFabricDeviceInput interface {
	pulumi.Input

	ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput
	ToSystemCsfFabricDeviceOutputWithContext(context.Context) SystemCsfFabricDeviceOutput
}

type SystemCsfFabricDeviceArgs struct {
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	DeviceIp    pulumi.StringPtrInput `pulumi:"deviceIp"`
	DeviceType  pulumi.StringPtrInput `pulumi:"deviceType"`
	HttpsPort   pulumi.IntPtrInput    `pulumi:"httpsPort"`
	Login       pulumi.StringPtrInput `pulumi:"login"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Password    pulumi.StringPtrInput `pulumi:"password"`
}

func (SystemCsfFabricDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricDevice)(nil)).Elem()
}

func (i SystemCsfFabricDeviceArgs) ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput {
	return i.ToSystemCsfFabricDeviceOutputWithContext(context.Background())
}

func (i SystemCsfFabricDeviceArgs) ToSystemCsfFabricDeviceOutputWithContext(ctx context.Context) SystemCsfFabricDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricDeviceOutput)
}

func (i SystemCsfFabricDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricDevice] {
	return pulumix.Output[SystemCsfFabricDevice]{
		OutputState: i.ToSystemCsfFabricDeviceOutputWithContext(ctx).OutputState,
	}
}

// SystemCsfFabricDeviceArrayInput is an input type that accepts SystemCsfFabricDeviceArray and SystemCsfFabricDeviceArrayOutput values.
// You can construct a concrete instance of `SystemCsfFabricDeviceArrayInput` via:
//
//	SystemCsfFabricDeviceArray{ SystemCsfFabricDeviceArgs{...} }
type SystemCsfFabricDeviceArrayInput interface {
	pulumi.Input

	ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput
	ToSystemCsfFabricDeviceArrayOutputWithContext(context.Context) SystemCsfFabricDeviceArrayOutput
}

type SystemCsfFabricDeviceArray []SystemCsfFabricDeviceInput

func (SystemCsfFabricDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricDevice)(nil)).Elem()
}

func (i SystemCsfFabricDeviceArray) ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput {
	return i.ToSystemCsfFabricDeviceArrayOutputWithContext(context.Background())
}

func (i SystemCsfFabricDeviceArray) ToSystemCsfFabricDeviceArrayOutputWithContext(ctx context.Context) SystemCsfFabricDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfFabricDeviceArrayOutput)
}

func (i SystemCsfFabricDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricDevice] {
	return pulumix.Output[[]SystemCsfFabricDevice]{
		OutputState: i.ToSystemCsfFabricDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemCsfFabricDeviceOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfFabricDevice)(nil)).Elem()
}

func (o SystemCsfFabricDeviceOutput) ToSystemCsfFabricDeviceOutput() SystemCsfFabricDeviceOutput {
	return o
}

func (o SystemCsfFabricDeviceOutput) ToSystemCsfFabricDeviceOutputWithContext(ctx context.Context) SystemCsfFabricDeviceOutput {
	return o
}

func (o SystemCsfFabricDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCsfFabricDevice] {
	return pulumix.Output[SystemCsfFabricDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricDeviceOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) DeviceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.DeviceIp }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Login }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemCsfFabricDeviceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfFabricDevice) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SystemCsfFabricDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfFabricDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfFabricDevice)(nil)).Elem()
}

func (o SystemCsfFabricDeviceArrayOutput) ToSystemCsfFabricDeviceArrayOutput() SystemCsfFabricDeviceArrayOutput {
	return o
}

func (o SystemCsfFabricDeviceArrayOutput) ToSystemCsfFabricDeviceArrayOutputWithContext(ctx context.Context) SystemCsfFabricDeviceArrayOutput {
	return o
}

func (o SystemCsfFabricDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfFabricDevice] {
	return pulumix.Output[[]SystemCsfFabricDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfFabricDeviceArrayOutput) Index(i pulumi.IntInput) SystemCsfFabricDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfFabricDevice {
		return vs[0].([]SystemCsfFabricDevice)[vs[1].(int)]
	}).(SystemCsfFabricDeviceOutput)
}

type SystemCsfTrustedList struct {
	Action                  *string `pulumi:"action"`
	AuthorizationType       *string `pulumi:"authorizationType"`
	Certificate             *string `pulumi:"certificate"`
	DownstreamAuthorization *string `pulumi:"downstreamAuthorization"`
	HaMembers               *string `pulumi:"haMembers"`
	Index                   *int    `pulumi:"index"`
	Name                    *string `pulumi:"name"`
	Serial                  *string `pulumi:"serial"`
}

// SystemCsfTrustedListInput is an input type that accepts SystemCsfTrustedListArgs and SystemCsfTrustedListOutput values.
// You can construct a concrete instance of `SystemCsfTrustedListInput` via:
//
//	SystemCsfTrustedListArgs{...}
type SystemCsfTrustedListInput interface {
	pulumi.Input

	ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput
	ToSystemCsfTrustedListOutputWithContext(context.Context) SystemCsfTrustedListOutput
}

type SystemCsfTrustedListArgs struct {
	Action                  pulumi.StringPtrInput `pulumi:"action"`
	AuthorizationType       pulumi.StringPtrInput `pulumi:"authorizationType"`
	Certificate             pulumi.StringPtrInput `pulumi:"certificate"`
	DownstreamAuthorization pulumi.StringPtrInput `pulumi:"downstreamAuthorization"`
	HaMembers               pulumi.StringPtrInput `pulumi:"haMembers"`
	Index                   pulumi.IntPtrInput    `pulumi:"index"`
	Name                    pulumi.StringPtrInput `pulumi:"name"`
	Serial                  pulumi.StringPtrInput `pulumi:"serial"`
}

func (SystemCsfTrustedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfTrustedList)(nil)).Elem()
}

func (i SystemCsfTrustedListArgs) ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput {
	return i.ToSystemCsfTrustedListOutputWithContext(context.Background())
}

func (i SystemCsfTrustedListArgs) ToSystemCsfTrustedListOutputWithContext(ctx context.Context) SystemCsfTrustedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfTrustedListOutput)
}

func (i SystemCsfTrustedListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCsfTrustedList] {
	return pulumix.Output[SystemCsfTrustedList]{
		OutputState: i.ToSystemCsfTrustedListOutputWithContext(ctx).OutputState,
	}
}

// SystemCsfTrustedListArrayInput is an input type that accepts SystemCsfTrustedListArray and SystemCsfTrustedListArrayOutput values.
// You can construct a concrete instance of `SystemCsfTrustedListArrayInput` via:
//
//	SystemCsfTrustedListArray{ SystemCsfTrustedListArgs{...} }
type SystemCsfTrustedListArrayInput interface {
	pulumi.Input

	ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput
	ToSystemCsfTrustedListArrayOutputWithContext(context.Context) SystemCsfTrustedListArrayOutput
}

type SystemCsfTrustedListArray []SystemCsfTrustedListInput

func (SystemCsfTrustedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfTrustedList)(nil)).Elem()
}

func (i SystemCsfTrustedListArray) ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput {
	return i.ToSystemCsfTrustedListArrayOutputWithContext(context.Background())
}

func (i SystemCsfTrustedListArray) ToSystemCsfTrustedListArrayOutputWithContext(ctx context.Context) SystemCsfTrustedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCsfTrustedListArrayOutput)
}

func (i SystemCsfTrustedListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfTrustedList] {
	return pulumix.Output[[]SystemCsfTrustedList]{
		OutputState: i.ToSystemCsfTrustedListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemCsfTrustedListOutput struct{ *pulumi.OutputState }

func (SystemCsfTrustedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCsfTrustedList)(nil)).Elem()
}

func (o SystemCsfTrustedListOutput) ToSystemCsfTrustedListOutput() SystemCsfTrustedListOutput {
	return o
}

func (o SystemCsfTrustedListOutput) ToSystemCsfTrustedListOutputWithContext(ctx context.Context) SystemCsfTrustedListOutput {
	return o
}

func (o SystemCsfTrustedListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCsfTrustedList] {
	return pulumix.Output[SystemCsfTrustedList]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfTrustedListOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) DownstreamAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.DownstreamAuthorization }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) HaMembers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.HaMembers }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

func (o SystemCsfTrustedListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemCsfTrustedListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCsfTrustedList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

type SystemCsfTrustedListArrayOutput struct{ *pulumi.OutputState }

func (SystemCsfTrustedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemCsfTrustedList)(nil)).Elem()
}

func (o SystemCsfTrustedListArrayOutput) ToSystemCsfTrustedListArrayOutput() SystemCsfTrustedListArrayOutput {
	return o
}

func (o SystemCsfTrustedListArrayOutput) ToSystemCsfTrustedListArrayOutputWithContext(ctx context.Context) SystemCsfTrustedListArrayOutput {
	return o
}

func (o SystemCsfTrustedListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemCsfTrustedList] {
	return pulumix.Output[[]SystemCsfTrustedList]{
		OutputState: o.OutputState,
	}
}

func (o SystemCsfTrustedListArrayOutput) Index(i pulumi.IntInput) SystemCsfTrustedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemCsfTrustedList {
		return vs[0].([]SystemCsfTrustedList)[vs[1].(int)]
	}).(SystemCsfTrustedListOutput)
}

type SystemDdnsDdnsServerAddr struct {
	Addr *string `pulumi:"addr"`
}

// SystemDdnsDdnsServerAddrInput is an input type that accepts SystemDdnsDdnsServerAddrArgs and SystemDdnsDdnsServerAddrOutput values.
// You can construct a concrete instance of `SystemDdnsDdnsServerAddrInput` via:
//
//	SystemDdnsDdnsServerAddrArgs{...}
type SystemDdnsDdnsServerAddrInput interface {
	pulumi.Input

	ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput
	ToSystemDdnsDdnsServerAddrOutputWithContext(context.Context) SystemDdnsDdnsServerAddrOutput
}

type SystemDdnsDdnsServerAddrArgs struct {
	Addr pulumi.StringPtrInput `pulumi:"addr"`
}

func (SystemDdnsDdnsServerAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (i SystemDdnsDdnsServerAddrArgs) ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput {
	return i.ToSystemDdnsDdnsServerAddrOutputWithContext(context.Background())
}

func (i SystemDdnsDdnsServerAddrArgs) ToSystemDdnsDdnsServerAddrOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsDdnsServerAddrOutput)
}

func (i SystemDdnsDdnsServerAddrArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDdnsDdnsServerAddr] {
	return pulumix.Output[SystemDdnsDdnsServerAddr]{
		OutputState: i.ToSystemDdnsDdnsServerAddrOutputWithContext(ctx).OutputState,
	}
}

// SystemDdnsDdnsServerAddrArrayInput is an input type that accepts SystemDdnsDdnsServerAddrArray and SystemDdnsDdnsServerAddrArrayOutput values.
// You can construct a concrete instance of `SystemDdnsDdnsServerAddrArrayInput` via:
//
//	SystemDdnsDdnsServerAddrArray{ SystemDdnsDdnsServerAddrArgs{...} }
type SystemDdnsDdnsServerAddrArrayInput interface {
	pulumi.Input

	ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput
	ToSystemDdnsDdnsServerAddrArrayOutputWithContext(context.Context) SystemDdnsDdnsServerAddrArrayOutput
}

type SystemDdnsDdnsServerAddrArray []SystemDdnsDdnsServerAddrInput

func (SystemDdnsDdnsServerAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (i SystemDdnsDdnsServerAddrArray) ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput {
	return i.ToSystemDdnsDdnsServerAddrArrayOutputWithContext(context.Background())
}

func (i SystemDdnsDdnsServerAddrArray) ToSystemDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsDdnsServerAddrArrayOutput)
}

func (i SystemDdnsDdnsServerAddrArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDdnsDdnsServerAddr] {
	return pulumix.Output[[]SystemDdnsDdnsServerAddr]{
		OutputState: i.ToSystemDdnsDdnsServerAddrArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDdnsDdnsServerAddrOutput struct{ *pulumi.OutputState }

func (SystemDdnsDdnsServerAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (o SystemDdnsDdnsServerAddrOutput) ToSystemDdnsDdnsServerAddrOutput() SystemDdnsDdnsServerAddrOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrOutput) ToSystemDdnsDdnsServerAddrOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDdnsDdnsServerAddr] {
	return pulumix.Output[SystemDdnsDdnsServerAddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemDdnsDdnsServerAddrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDdnsDdnsServerAddr) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

type SystemDdnsDdnsServerAddrArrayOutput struct{ *pulumi.OutputState }

func (SystemDdnsDdnsServerAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsDdnsServerAddr)(nil)).Elem()
}

func (o SystemDdnsDdnsServerAddrArrayOutput) ToSystemDdnsDdnsServerAddrArrayOutput() SystemDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrArrayOutput) ToSystemDdnsDdnsServerAddrArrayOutputWithContext(ctx context.Context) SystemDdnsDdnsServerAddrArrayOutput {
	return o
}

func (o SystemDdnsDdnsServerAddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDdnsDdnsServerAddr] {
	return pulumix.Output[[]SystemDdnsDdnsServerAddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemDdnsDdnsServerAddrArrayOutput) Index(i pulumi.IntInput) SystemDdnsDdnsServerAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDdnsDdnsServerAddr {
		return vs[0].([]SystemDdnsDdnsServerAddr)[vs[1].(int)]
	}).(SystemDdnsDdnsServerAddrOutput)
}

type SystemDdnsMonitorInterface struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemDdnsMonitorInterfaceInput is an input type that accepts SystemDdnsMonitorInterfaceArgs and SystemDdnsMonitorInterfaceOutput values.
// You can construct a concrete instance of `SystemDdnsMonitorInterfaceInput` via:
//
//	SystemDdnsMonitorInterfaceArgs{...}
type SystemDdnsMonitorInterfaceInput interface {
	pulumi.Input

	ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput
	ToSystemDdnsMonitorInterfaceOutputWithContext(context.Context) SystemDdnsMonitorInterfaceOutput
}

type SystemDdnsMonitorInterfaceArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemDdnsMonitorInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsMonitorInterface)(nil)).Elem()
}

func (i SystemDdnsMonitorInterfaceArgs) ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput {
	return i.ToSystemDdnsMonitorInterfaceOutputWithContext(context.Background())
}

func (i SystemDdnsMonitorInterfaceArgs) ToSystemDdnsMonitorInterfaceOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsMonitorInterfaceOutput)
}

func (i SystemDdnsMonitorInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDdnsMonitorInterface] {
	return pulumix.Output[SystemDdnsMonitorInterface]{
		OutputState: i.ToSystemDdnsMonitorInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemDdnsMonitorInterfaceArrayInput is an input type that accepts SystemDdnsMonitorInterfaceArray and SystemDdnsMonitorInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemDdnsMonitorInterfaceArrayInput` via:
//
//	SystemDdnsMonitorInterfaceArray{ SystemDdnsMonitorInterfaceArgs{...} }
type SystemDdnsMonitorInterfaceArrayInput interface {
	pulumi.Input

	ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput
	ToSystemDdnsMonitorInterfaceArrayOutputWithContext(context.Context) SystemDdnsMonitorInterfaceArrayOutput
}

type SystemDdnsMonitorInterfaceArray []SystemDdnsMonitorInterfaceInput

func (SystemDdnsMonitorInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsMonitorInterface)(nil)).Elem()
}

func (i SystemDdnsMonitorInterfaceArray) ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput {
	return i.ToSystemDdnsMonitorInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemDdnsMonitorInterfaceArray) ToSystemDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDdnsMonitorInterfaceArrayOutput)
}

func (i SystemDdnsMonitorInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDdnsMonitorInterface] {
	return pulumix.Output[[]SystemDdnsMonitorInterface]{
		OutputState: i.ToSystemDdnsMonitorInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDdnsMonitorInterfaceOutput struct{ *pulumi.OutputState }

func (SystemDdnsMonitorInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDdnsMonitorInterface)(nil)).Elem()
}

func (o SystemDdnsMonitorInterfaceOutput) ToSystemDdnsMonitorInterfaceOutput() SystemDdnsMonitorInterfaceOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceOutput) ToSystemDdnsMonitorInterfaceOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDdnsMonitorInterface] {
	return pulumix.Output[SystemDdnsMonitorInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemDdnsMonitorInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDdnsMonitorInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemDdnsMonitorInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemDdnsMonitorInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDdnsMonitorInterface)(nil)).Elem()
}

func (o SystemDdnsMonitorInterfaceArrayOutput) ToSystemDdnsMonitorInterfaceArrayOutput() SystemDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceArrayOutput) ToSystemDdnsMonitorInterfaceArrayOutputWithContext(ctx context.Context) SystemDdnsMonitorInterfaceArrayOutput {
	return o
}

func (o SystemDdnsMonitorInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDdnsMonitorInterface] {
	return pulumix.Output[[]SystemDdnsMonitorInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemDdnsMonitorInterfaceArrayOutput) Index(i pulumi.IntInput) SystemDdnsMonitorInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDdnsMonitorInterface {
		return vs[0].([]SystemDdnsMonitorInterface)[vs[1].(int)]
	}).(SystemDdnsMonitorInterfaceOutput)
}

type SystemDhcp6ServerIpRange struct {
	EndIp   *string `pulumi:"endIp"`
	Id      *int    `pulumi:"id"`
	StartIp *string `pulumi:"startIp"`
}

// SystemDhcp6ServerIpRangeInput is an input type that accepts SystemDhcp6ServerIpRangeArgs and SystemDhcp6ServerIpRangeOutput values.
// You can construct a concrete instance of `SystemDhcp6ServerIpRangeInput` via:
//
//	SystemDhcp6ServerIpRangeArgs{...}
type SystemDhcp6ServerIpRangeInput interface {
	pulumi.Input

	ToSystemDhcp6ServerIpRangeOutput() SystemDhcp6ServerIpRangeOutput
	ToSystemDhcp6ServerIpRangeOutputWithContext(context.Context) SystemDhcp6ServerIpRangeOutput
}

type SystemDhcp6ServerIpRangeArgs struct {
	EndIp   pulumi.StringPtrInput `pulumi:"endIp"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (SystemDhcp6ServerIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcp6ServerIpRange)(nil)).Elem()
}

func (i SystemDhcp6ServerIpRangeArgs) ToSystemDhcp6ServerIpRangeOutput() SystemDhcp6ServerIpRangeOutput {
	return i.ToSystemDhcp6ServerIpRangeOutputWithContext(context.Background())
}

func (i SystemDhcp6ServerIpRangeArgs) ToSystemDhcp6ServerIpRangeOutputWithContext(ctx context.Context) SystemDhcp6ServerIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcp6ServerIpRangeOutput)
}

func (i SystemDhcp6ServerIpRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcp6ServerIpRange] {
	return pulumix.Output[SystemDhcp6ServerIpRange]{
		OutputState: i.ToSystemDhcp6ServerIpRangeOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcp6ServerIpRangeArrayInput is an input type that accepts SystemDhcp6ServerIpRangeArray and SystemDhcp6ServerIpRangeArrayOutput values.
// You can construct a concrete instance of `SystemDhcp6ServerIpRangeArrayInput` via:
//
//	SystemDhcp6ServerIpRangeArray{ SystemDhcp6ServerIpRangeArgs{...} }
type SystemDhcp6ServerIpRangeArrayInput interface {
	pulumi.Input

	ToSystemDhcp6ServerIpRangeArrayOutput() SystemDhcp6ServerIpRangeArrayOutput
	ToSystemDhcp6ServerIpRangeArrayOutputWithContext(context.Context) SystemDhcp6ServerIpRangeArrayOutput
}

type SystemDhcp6ServerIpRangeArray []SystemDhcp6ServerIpRangeInput

func (SystemDhcp6ServerIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcp6ServerIpRange)(nil)).Elem()
}

func (i SystemDhcp6ServerIpRangeArray) ToSystemDhcp6ServerIpRangeArrayOutput() SystemDhcp6ServerIpRangeArrayOutput {
	return i.ToSystemDhcp6ServerIpRangeArrayOutputWithContext(context.Background())
}

func (i SystemDhcp6ServerIpRangeArray) ToSystemDhcp6ServerIpRangeArrayOutputWithContext(ctx context.Context) SystemDhcp6ServerIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcp6ServerIpRangeArrayOutput)
}

func (i SystemDhcp6ServerIpRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcp6ServerIpRange] {
	return pulumix.Output[[]SystemDhcp6ServerIpRange]{
		OutputState: i.ToSystemDhcp6ServerIpRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcp6ServerIpRangeOutput struct{ *pulumi.OutputState }

func (SystemDhcp6ServerIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcp6ServerIpRange)(nil)).Elem()
}

func (o SystemDhcp6ServerIpRangeOutput) ToSystemDhcp6ServerIpRangeOutput() SystemDhcp6ServerIpRangeOutput {
	return o
}

func (o SystemDhcp6ServerIpRangeOutput) ToSystemDhcp6ServerIpRangeOutputWithContext(ctx context.Context) SystemDhcp6ServerIpRangeOutput {
	return o
}

func (o SystemDhcp6ServerIpRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcp6ServerIpRange] {
	return pulumix.Output[SystemDhcp6ServerIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcp6ServerIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o SystemDhcp6ServerIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcp6ServerIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type SystemDhcp6ServerIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcp6ServerIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcp6ServerIpRange)(nil)).Elem()
}

func (o SystemDhcp6ServerIpRangeArrayOutput) ToSystemDhcp6ServerIpRangeArrayOutput() SystemDhcp6ServerIpRangeArrayOutput {
	return o
}

func (o SystemDhcp6ServerIpRangeArrayOutput) ToSystemDhcp6ServerIpRangeArrayOutputWithContext(ctx context.Context) SystemDhcp6ServerIpRangeArrayOutput {
	return o
}

func (o SystemDhcp6ServerIpRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcp6ServerIpRange] {
	return pulumix.Output[[]SystemDhcp6ServerIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcp6ServerIpRangeArrayOutput) Index(i pulumi.IntInput) SystemDhcp6ServerIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcp6ServerIpRange {
		return vs[0].([]SystemDhcp6ServerIpRange)[vs[1].(int)]
	}).(SystemDhcp6ServerIpRangeOutput)
}

type SystemDhcp6ServerPrefixRange struct {
	EndPrefix    *string `pulumi:"endPrefix"`
	Id           *int    `pulumi:"id"`
	PrefixLength *int    `pulumi:"prefixLength"`
	StartPrefix  *string `pulumi:"startPrefix"`
}

// SystemDhcp6ServerPrefixRangeInput is an input type that accepts SystemDhcp6ServerPrefixRangeArgs and SystemDhcp6ServerPrefixRangeOutput values.
// You can construct a concrete instance of `SystemDhcp6ServerPrefixRangeInput` via:
//
//	SystemDhcp6ServerPrefixRangeArgs{...}
type SystemDhcp6ServerPrefixRangeInput interface {
	pulumi.Input

	ToSystemDhcp6ServerPrefixRangeOutput() SystemDhcp6ServerPrefixRangeOutput
	ToSystemDhcp6ServerPrefixRangeOutputWithContext(context.Context) SystemDhcp6ServerPrefixRangeOutput
}

type SystemDhcp6ServerPrefixRangeArgs struct {
	EndPrefix    pulumi.StringPtrInput `pulumi:"endPrefix"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	StartPrefix  pulumi.StringPtrInput `pulumi:"startPrefix"`
}

func (SystemDhcp6ServerPrefixRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcp6ServerPrefixRange)(nil)).Elem()
}

func (i SystemDhcp6ServerPrefixRangeArgs) ToSystemDhcp6ServerPrefixRangeOutput() SystemDhcp6ServerPrefixRangeOutput {
	return i.ToSystemDhcp6ServerPrefixRangeOutputWithContext(context.Background())
}

func (i SystemDhcp6ServerPrefixRangeArgs) ToSystemDhcp6ServerPrefixRangeOutputWithContext(ctx context.Context) SystemDhcp6ServerPrefixRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcp6ServerPrefixRangeOutput)
}

func (i SystemDhcp6ServerPrefixRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcp6ServerPrefixRange] {
	return pulumix.Output[SystemDhcp6ServerPrefixRange]{
		OutputState: i.ToSystemDhcp6ServerPrefixRangeOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcp6ServerPrefixRangeArrayInput is an input type that accepts SystemDhcp6ServerPrefixRangeArray and SystemDhcp6ServerPrefixRangeArrayOutput values.
// You can construct a concrete instance of `SystemDhcp6ServerPrefixRangeArrayInput` via:
//
//	SystemDhcp6ServerPrefixRangeArray{ SystemDhcp6ServerPrefixRangeArgs{...} }
type SystemDhcp6ServerPrefixRangeArrayInput interface {
	pulumi.Input

	ToSystemDhcp6ServerPrefixRangeArrayOutput() SystemDhcp6ServerPrefixRangeArrayOutput
	ToSystemDhcp6ServerPrefixRangeArrayOutputWithContext(context.Context) SystemDhcp6ServerPrefixRangeArrayOutput
}

type SystemDhcp6ServerPrefixRangeArray []SystemDhcp6ServerPrefixRangeInput

func (SystemDhcp6ServerPrefixRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcp6ServerPrefixRange)(nil)).Elem()
}

func (i SystemDhcp6ServerPrefixRangeArray) ToSystemDhcp6ServerPrefixRangeArrayOutput() SystemDhcp6ServerPrefixRangeArrayOutput {
	return i.ToSystemDhcp6ServerPrefixRangeArrayOutputWithContext(context.Background())
}

func (i SystemDhcp6ServerPrefixRangeArray) ToSystemDhcp6ServerPrefixRangeArrayOutputWithContext(ctx context.Context) SystemDhcp6ServerPrefixRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcp6ServerPrefixRangeArrayOutput)
}

func (i SystemDhcp6ServerPrefixRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcp6ServerPrefixRange] {
	return pulumix.Output[[]SystemDhcp6ServerPrefixRange]{
		OutputState: i.ToSystemDhcp6ServerPrefixRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcp6ServerPrefixRangeOutput struct{ *pulumi.OutputState }

func (SystemDhcp6ServerPrefixRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcp6ServerPrefixRange)(nil)).Elem()
}

func (o SystemDhcp6ServerPrefixRangeOutput) ToSystemDhcp6ServerPrefixRangeOutput() SystemDhcp6ServerPrefixRangeOutput {
	return o
}

func (o SystemDhcp6ServerPrefixRangeOutput) ToSystemDhcp6ServerPrefixRangeOutputWithContext(ctx context.Context) SystemDhcp6ServerPrefixRangeOutput {
	return o
}

func (o SystemDhcp6ServerPrefixRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcp6ServerPrefixRange] {
	return pulumix.Output[SystemDhcp6ServerPrefixRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcp6ServerPrefixRangeOutput) EndPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerPrefixRange) *string { return v.EndPrefix }).(pulumi.StringPtrOutput)
}

func (o SystemDhcp6ServerPrefixRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerPrefixRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcp6ServerPrefixRangeOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerPrefixRange) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SystemDhcp6ServerPrefixRangeOutput) StartPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcp6ServerPrefixRange) *string { return v.StartPrefix }).(pulumi.StringPtrOutput)
}

type SystemDhcp6ServerPrefixRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcp6ServerPrefixRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcp6ServerPrefixRange)(nil)).Elem()
}

func (o SystemDhcp6ServerPrefixRangeArrayOutput) ToSystemDhcp6ServerPrefixRangeArrayOutput() SystemDhcp6ServerPrefixRangeArrayOutput {
	return o
}

func (o SystemDhcp6ServerPrefixRangeArrayOutput) ToSystemDhcp6ServerPrefixRangeArrayOutputWithContext(ctx context.Context) SystemDhcp6ServerPrefixRangeArrayOutput {
	return o
}

func (o SystemDhcp6ServerPrefixRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcp6ServerPrefixRange] {
	return pulumix.Output[[]SystemDhcp6ServerPrefixRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcp6ServerPrefixRangeArrayOutput) Index(i pulumi.IntInput) SystemDhcp6ServerPrefixRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcp6ServerPrefixRange {
		return vs[0].([]SystemDhcp6ServerPrefixRange)[vs[1].(int)]
	}).(SystemDhcp6ServerPrefixRangeOutput)
}

type SystemDhcpServerExcludeRange struct {
	EndIp      *string                                 `pulumi:"endIp"`
	Id         *int                                    `pulumi:"id"`
	LeaseTime  *int                                    `pulumi:"leaseTime"`
	StartIp    *string                                 `pulumi:"startIp"`
	UciMatch   *string                                 `pulumi:"uciMatch"`
	UciStrings []SystemDhcpServerExcludeRangeUciString `pulumi:"uciStrings"`
	VciMatch   *string                                 `pulumi:"vciMatch"`
	VciStrings []SystemDhcpServerExcludeRangeVciString `pulumi:"vciStrings"`
}

// SystemDhcpServerExcludeRangeInput is an input type that accepts SystemDhcpServerExcludeRangeArgs and SystemDhcpServerExcludeRangeOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeInput` via:
//
//	SystemDhcpServerExcludeRangeArgs{...}
type SystemDhcpServerExcludeRangeInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeOutput() SystemDhcpServerExcludeRangeOutput
	ToSystemDhcpServerExcludeRangeOutputWithContext(context.Context) SystemDhcpServerExcludeRangeOutput
}

type SystemDhcpServerExcludeRangeArgs struct {
	EndIp      pulumi.StringPtrInput                           `pulumi:"endIp"`
	Id         pulumi.IntPtrInput                              `pulumi:"id"`
	LeaseTime  pulumi.IntPtrInput                              `pulumi:"leaseTime"`
	StartIp    pulumi.StringPtrInput                           `pulumi:"startIp"`
	UciMatch   pulumi.StringPtrInput                           `pulumi:"uciMatch"`
	UciStrings SystemDhcpServerExcludeRangeUciStringArrayInput `pulumi:"uciStrings"`
	VciMatch   pulumi.StringPtrInput                           `pulumi:"vciMatch"`
	VciStrings SystemDhcpServerExcludeRangeVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemDhcpServerExcludeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRange)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeArgs) ToSystemDhcpServerExcludeRangeOutput() SystemDhcpServerExcludeRangeOutput {
	return i.ToSystemDhcpServerExcludeRangeOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeArgs) ToSystemDhcpServerExcludeRangeOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeOutput)
}

func (i SystemDhcpServerExcludeRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRange] {
	return pulumix.Output[SystemDhcpServerExcludeRange]{
		OutputState: i.ToSystemDhcpServerExcludeRangeOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerExcludeRangeArrayInput is an input type that accepts SystemDhcpServerExcludeRangeArray and SystemDhcpServerExcludeRangeArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeArrayInput` via:
//
//	SystemDhcpServerExcludeRangeArray{ SystemDhcpServerExcludeRangeArgs{...} }
type SystemDhcpServerExcludeRangeArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeArrayOutput() SystemDhcpServerExcludeRangeArrayOutput
	ToSystemDhcpServerExcludeRangeArrayOutputWithContext(context.Context) SystemDhcpServerExcludeRangeArrayOutput
}

type SystemDhcpServerExcludeRangeArray []SystemDhcpServerExcludeRangeInput

func (SystemDhcpServerExcludeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRange)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeArray) ToSystemDhcpServerExcludeRangeArrayOutput() SystemDhcpServerExcludeRangeArrayOutput {
	return i.ToSystemDhcpServerExcludeRangeArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeArray) ToSystemDhcpServerExcludeRangeArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeArrayOutput)
}

func (i SystemDhcpServerExcludeRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRange] {
	return pulumix.Output[[]SystemDhcpServerExcludeRange]{
		OutputState: i.ToSystemDhcpServerExcludeRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerExcludeRangeOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRange)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeOutput) ToSystemDhcpServerExcludeRangeOutput() SystemDhcpServerExcludeRangeOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeOutput) ToSystemDhcpServerExcludeRangeOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRange] {
	return pulumix.Output[SystemDhcpServerExcludeRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) UciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *string { return v.UciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) UciStrings() SystemDhcpServerExcludeRangeUciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) []SystemDhcpServerExcludeRangeUciString { return v.UciStrings }).(SystemDhcpServerExcludeRangeUciStringArrayOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerExcludeRangeOutput) VciStrings() SystemDhcpServerExcludeRangeVciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRange) []SystemDhcpServerExcludeRangeVciString { return v.VciStrings }).(SystemDhcpServerExcludeRangeVciStringArrayOutput)
}

type SystemDhcpServerExcludeRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRange)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeArrayOutput) ToSystemDhcpServerExcludeRangeArrayOutput() SystemDhcpServerExcludeRangeArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeArrayOutput) ToSystemDhcpServerExcludeRangeArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRange] {
	return pulumix.Output[[]SystemDhcpServerExcludeRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerExcludeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerExcludeRange {
		return vs[0].([]SystemDhcpServerExcludeRange)[vs[1].(int)]
	}).(SystemDhcpServerExcludeRangeOutput)
}

type SystemDhcpServerExcludeRangeUciString struct {
	UciString *string `pulumi:"uciString"`
}

// SystemDhcpServerExcludeRangeUciStringInput is an input type that accepts SystemDhcpServerExcludeRangeUciStringArgs and SystemDhcpServerExcludeRangeUciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeUciStringInput` via:
//
//	SystemDhcpServerExcludeRangeUciStringArgs{...}
type SystemDhcpServerExcludeRangeUciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeUciStringOutput() SystemDhcpServerExcludeRangeUciStringOutput
	ToSystemDhcpServerExcludeRangeUciStringOutputWithContext(context.Context) SystemDhcpServerExcludeRangeUciStringOutput
}

type SystemDhcpServerExcludeRangeUciStringArgs struct {
	UciString pulumi.StringPtrInput `pulumi:"uciString"`
}

func (SystemDhcpServerExcludeRangeUciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRangeUciString)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeUciStringArgs) ToSystemDhcpServerExcludeRangeUciStringOutput() SystemDhcpServerExcludeRangeUciStringOutput {
	return i.ToSystemDhcpServerExcludeRangeUciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeUciStringArgs) ToSystemDhcpServerExcludeRangeUciStringOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeUciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeUciStringOutput)
}

func (i SystemDhcpServerExcludeRangeUciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRangeUciString] {
	return pulumix.Output[SystemDhcpServerExcludeRangeUciString]{
		OutputState: i.ToSystemDhcpServerExcludeRangeUciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerExcludeRangeUciStringArrayInput is an input type that accepts SystemDhcpServerExcludeRangeUciStringArray and SystemDhcpServerExcludeRangeUciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeUciStringArrayInput` via:
//
//	SystemDhcpServerExcludeRangeUciStringArray{ SystemDhcpServerExcludeRangeUciStringArgs{...} }
type SystemDhcpServerExcludeRangeUciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeUciStringArrayOutput() SystemDhcpServerExcludeRangeUciStringArrayOutput
	ToSystemDhcpServerExcludeRangeUciStringArrayOutputWithContext(context.Context) SystemDhcpServerExcludeRangeUciStringArrayOutput
}

type SystemDhcpServerExcludeRangeUciStringArray []SystemDhcpServerExcludeRangeUciStringInput

func (SystemDhcpServerExcludeRangeUciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRangeUciString)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeUciStringArray) ToSystemDhcpServerExcludeRangeUciStringArrayOutput() SystemDhcpServerExcludeRangeUciStringArrayOutput {
	return i.ToSystemDhcpServerExcludeRangeUciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeUciStringArray) ToSystemDhcpServerExcludeRangeUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeUciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeUciStringArrayOutput)
}

func (i SystemDhcpServerExcludeRangeUciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRangeUciString] {
	return pulumix.Output[[]SystemDhcpServerExcludeRangeUciString]{
		OutputState: i.ToSystemDhcpServerExcludeRangeUciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerExcludeRangeUciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeUciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRangeUciString)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeUciStringOutput) ToSystemDhcpServerExcludeRangeUciStringOutput() SystemDhcpServerExcludeRangeUciStringOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeUciStringOutput) ToSystemDhcpServerExcludeRangeUciStringOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeUciStringOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeUciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRangeUciString] {
	return pulumix.Output[SystemDhcpServerExcludeRangeUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeUciStringOutput) UciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRangeUciString) *string { return v.UciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerExcludeRangeUciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeUciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRangeUciString)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeUciStringArrayOutput) ToSystemDhcpServerExcludeRangeUciStringArrayOutput() SystemDhcpServerExcludeRangeUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeUciStringArrayOutput) ToSystemDhcpServerExcludeRangeUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeUciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRangeUciString] {
	return pulumix.Output[[]SystemDhcpServerExcludeRangeUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeUciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerExcludeRangeUciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerExcludeRangeUciString {
		return vs[0].([]SystemDhcpServerExcludeRangeUciString)[vs[1].(int)]
	}).(SystemDhcpServerExcludeRangeUciStringOutput)
}

type SystemDhcpServerExcludeRangeVciString struct {
	VciString *string `pulumi:"vciString"`
}

// SystemDhcpServerExcludeRangeVciStringInput is an input type that accepts SystemDhcpServerExcludeRangeVciStringArgs and SystemDhcpServerExcludeRangeVciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeVciStringInput` via:
//
//	SystemDhcpServerExcludeRangeVciStringArgs{...}
type SystemDhcpServerExcludeRangeVciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeVciStringOutput() SystemDhcpServerExcludeRangeVciStringOutput
	ToSystemDhcpServerExcludeRangeVciStringOutputWithContext(context.Context) SystemDhcpServerExcludeRangeVciStringOutput
}

type SystemDhcpServerExcludeRangeVciStringArgs struct {
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemDhcpServerExcludeRangeVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeVciStringArgs) ToSystemDhcpServerExcludeRangeVciStringOutput() SystemDhcpServerExcludeRangeVciStringOutput {
	return i.ToSystemDhcpServerExcludeRangeVciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeVciStringArgs) ToSystemDhcpServerExcludeRangeVciStringOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeVciStringOutput)
}

func (i SystemDhcpServerExcludeRangeVciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRangeVciString] {
	return pulumix.Output[SystemDhcpServerExcludeRangeVciString]{
		OutputState: i.ToSystemDhcpServerExcludeRangeVciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerExcludeRangeVciStringArrayInput is an input type that accepts SystemDhcpServerExcludeRangeVciStringArray and SystemDhcpServerExcludeRangeVciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerExcludeRangeVciStringArrayInput` via:
//
//	SystemDhcpServerExcludeRangeVciStringArray{ SystemDhcpServerExcludeRangeVciStringArgs{...} }
type SystemDhcpServerExcludeRangeVciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerExcludeRangeVciStringArrayOutput() SystemDhcpServerExcludeRangeVciStringArrayOutput
	ToSystemDhcpServerExcludeRangeVciStringArrayOutputWithContext(context.Context) SystemDhcpServerExcludeRangeVciStringArrayOutput
}

type SystemDhcpServerExcludeRangeVciStringArray []SystemDhcpServerExcludeRangeVciStringInput

func (SystemDhcpServerExcludeRangeVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (i SystemDhcpServerExcludeRangeVciStringArray) ToSystemDhcpServerExcludeRangeVciStringArrayOutput() SystemDhcpServerExcludeRangeVciStringArrayOutput {
	return i.ToSystemDhcpServerExcludeRangeVciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerExcludeRangeVciStringArray) ToSystemDhcpServerExcludeRangeVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerExcludeRangeVciStringArrayOutput)
}

func (i SystemDhcpServerExcludeRangeVciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRangeVciString] {
	return pulumix.Output[[]SystemDhcpServerExcludeRangeVciString]{
		OutputState: i.ToSystemDhcpServerExcludeRangeVciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerExcludeRangeVciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeVciStringOutput) ToSystemDhcpServerExcludeRangeVciStringOutput() SystemDhcpServerExcludeRangeVciStringOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeVciStringOutput) ToSystemDhcpServerExcludeRangeVciStringOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeVciStringOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeVciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerExcludeRangeVciString] {
	return pulumix.Output[SystemDhcpServerExcludeRangeVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerExcludeRangeVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerExcludeRangeVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerExcludeRangeVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerExcludeRangeVciString)(nil)).Elem()
}

func (o SystemDhcpServerExcludeRangeVciStringArrayOutput) ToSystemDhcpServerExcludeRangeVciStringArrayOutput() SystemDhcpServerExcludeRangeVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeVciStringArrayOutput) ToSystemDhcpServerExcludeRangeVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerExcludeRangeVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerExcludeRangeVciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerExcludeRangeVciString] {
	return pulumix.Output[[]SystemDhcpServerExcludeRangeVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerExcludeRangeVciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerExcludeRangeVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerExcludeRangeVciString {
		return vs[0].([]SystemDhcpServerExcludeRangeVciString)[vs[1].(int)]
	}).(SystemDhcpServerExcludeRangeVciStringOutput)
}

type SystemDhcpServerIpRange struct {
	EndIp      *string                            `pulumi:"endIp"`
	Id         *int                               `pulumi:"id"`
	LeaseTime  *int                               `pulumi:"leaseTime"`
	StartIp    *string                            `pulumi:"startIp"`
	UciMatch   *string                            `pulumi:"uciMatch"`
	UciStrings []SystemDhcpServerIpRangeUciString `pulumi:"uciStrings"`
	VciMatch   *string                            `pulumi:"vciMatch"`
	VciStrings []SystemDhcpServerIpRangeVciString `pulumi:"vciStrings"`
}

// SystemDhcpServerIpRangeInput is an input type that accepts SystemDhcpServerIpRangeArgs and SystemDhcpServerIpRangeOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeInput` via:
//
//	SystemDhcpServerIpRangeArgs{...}
type SystemDhcpServerIpRangeInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeOutput() SystemDhcpServerIpRangeOutput
	ToSystemDhcpServerIpRangeOutputWithContext(context.Context) SystemDhcpServerIpRangeOutput
}

type SystemDhcpServerIpRangeArgs struct {
	EndIp      pulumi.StringPtrInput                      `pulumi:"endIp"`
	Id         pulumi.IntPtrInput                         `pulumi:"id"`
	LeaseTime  pulumi.IntPtrInput                         `pulumi:"leaseTime"`
	StartIp    pulumi.StringPtrInput                      `pulumi:"startIp"`
	UciMatch   pulumi.StringPtrInput                      `pulumi:"uciMatch"`
	UciStrings SystemDhcpServerIpRangeUciStringArrayInput `pulumi:"uciStrings"`
	VciMatch   pulumi.StringPtrInput                      `pulumi:"vciMatch"`
	VciStrings SystemDhcpServerIpRangeVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemDhcpServerIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRange)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeArgs) ToSystemDhcpServerIpRangeOutput() SystemDhcpServerIpRangeOutput {
	return i.ToSystemDhcpServerIpRangeOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeArgs) ToSystemDhcpServerIpRangeOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeOutput)
}

func (i SystemDhcpServerIpRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRange] {
	return pulumix.Output[SystemDhcpServerIpRange]{
		OutputState: i.ToSystemDhcpServerIpRangeOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerIpRangeArrayInput is an input type that accepts SystemDhcpServerIpRangeArray and SystemDhcpServerIpRangeArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeArrayInput` via:
//
//	SystemDhcpServerIpRangeArray{ SystemDhcpServerIpRangeArgs{...} }
type SystemDhcpServerIpRangeArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeArrayOutput() SystemDhcpServerIpRangeArrayOutput
	ToSystemDhcpServerIpRangeArrayOutputWithContext(context.Context) SystemDhcpServerIpRangeArrayOutput
}

type SystemDhcpServerIpRangeArray []SystemDhcpServerIpRangeInput

func (SystemDhcpServerIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRange)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeArray) ToSystemDhcpServerIpRangeArrayOutput() SystemDhcpServerIpRangeArrayOutput {
	return i.ToSystemDhcpServerIpRangeArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeArray) ToSystemDhcpServerIpRangeArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeArrayOutput)
}

func (i SystemDhcpServerIpRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRange] {
	return pulumix.Output[[]SystemDhcpServerIpRange]{
		OutputState: i.ToSystemDhcpServerIpRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerIpRangeOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRange)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeOutput) ToSystemDhcpServerIpRangeOutput() SystemDhcpServerIpRangeOutput {
	return o
}

func (o SystemDhcpServerIpRangeOutput) ToSystemDhcpServerIpRangeOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeOutput {
	return o
}

func (o SystemDhcpServerIpRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRange] {
	return pulumix.Output[SystemDhcpServerIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) UciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *string { return v.UciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) UciStrings() SystemDhcpServerIpRangeUciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) []SystemDhcpServerIpRangeUciString { return v.UciStrings }).(SystemDhcpServerIpRangeUciStringArrayOutput)
}

func (o SystemDhcpServerIpRangeOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerIpRangeOutput) VciStrings() SystemDhcpServerIpRangeVciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRange) []SystemDhcpServerIpRangeVciString { return v.VciStrings }).(SystemDhcpServerIpRangeVciStringArrayOutput)
}

type SystemDhcpServerIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRange)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeArrayOutput) ToSystemDhcpServerIpRangeArrayOutput() SystemDhcpServerIpRangeArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeArrayOutput) ToSystemDhcpServerIpRangeArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRange] {
	return pulumix.Output[[]SystemDhcpServerIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerIpRange {
		return vs[0].([]SystemDhcpServerIpRange)[vs[1].(int)]
	}).(SystemDhcpServerIpRangeOutput)
}

type SystemDhcpServerIpRangeUciString struct {
	UciString *string `pulumi:"uciString"`
}

// SystemDhcpServerIpRangeUciStringInput is an input type that accepts SystemDhcpServerIpRangeUciStringArgs and SystemDhcpServerIpRangeUciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeUciStringInput` via:
//
//	SystemDhcpServerIpRangeUciStringArgs{...}
type SystemDhcpServerIpRangeUciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeUciStringOutput() SystemDhcpServerIpRangeUciStringOutput
	ToSystemDhcpServerIpRangeUciStringOutputWithContext(context.Context) SystemDhcpServerIpRangeUciStringOutput
}

type SystemDhcpServerIpRangeUciStringArgs struct {
	UciString pulumi.StringPtrInput `pulumi:"uciString"`
}

func (SystemDhcpServerIpRangeUciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRangeUciString)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeUciStringArgs) ToSystemDhcpServerIpRangeUciStringOutput() SystemDhcpServerIpRangeUciStringOutput {
	return i.ToSystemDhcpServerIpRangeUciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeUciStringArgs) ToSystemDhcpServerIpRangeUciStringOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeUciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeUciStringOutput)
}

func (i SystemDhcpServerIpRangeUciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRangeUciString] {
	return pulumix.Output[SystemDhcpServerIpRangeUciString]{
		OutputState: i.ToSystemDhcpServerIpRangeUciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerIpRangeUciStringArrayInput is an input type that accepts SystemDhcpServerIpRangeUciStringArray and SystemDhcpServerIpRangeUciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeUciStringArrayInput` via:
//
//	SystemDhcpServerIpRangeUciStringArray{ SystemDhcpServerIpRangeUciStringArgs{...} }
type SystemDhcpServerIpRangeUciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeUciStringArrayOutput() SystemDhcpServerIpRangeUciStringArrayOutput
	ToSystemDhcpServerIpRangeUciStringArrayOutputWithContext(context.Context) SystemDhcpServerIpRangeUciStringArrayOutput
}

type SystemDhcpServerIpRangeUciStringArray []SystemDhcpServerIpRangeUciStringInput

func (SystemDhcpServerIpRangeUciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRangeUciString)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeUciStringArray) ToSystemDhcpServerIpRangeUciStringArrayOutput() SystemDhcpServerIpRangeUciStringArrayOutput {
	return i.ToSystemDhcpServerIpRangeUciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeUciStringArray) ToSystemDhcpServerIpRangeUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeUciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeUciStringArrayOutput)
}

func (i SystemDhcpServerIpRangeUciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRangeUciString] {
	return pulumix.Output[[]SystemDhcpServerIpRangeUciString]{
		OutputState: i.ToSystemDhcpServerIpRangeUciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerIpRangeUciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeUciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRangeUciString)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeUciStringOutput) ToSystemDhcpServerIpRangeUciStringOutput() SystemDhcpServerIpRangeUciStringOutput {
	return o
}

func (o SystemDhcpServerIpRangeUciStringOutput) ToSystemDhcpServerIpRangeUciStringOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeUciStringOutput {
	return o
}

func (o SystemDhcpServerIpRangeUciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRangeUciString] {
	return pulumix.Output[SystemDhcpServerIpRangeUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeUciStringOutput) UciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRangeUciString) *string { return v.UciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerIpRangeUciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeUciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRangeUciString)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeUciStringArrayOutput) ToSystemDhcpServerIpRangeUciStringArrayOutput() SystemDhcpServerIpRangeUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeUciStringArrayOutput) ToSystemDhcpServerIpRangeUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeUciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRangeUciString] {
	return pulumix.Output[[]SystemDhcpServerIpRangeUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeUciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerIpRangeUciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerIpRangeUciString {
		return vs[0].([]SystemDhcpServerIpRangeUciString)[vs[1].(int)]
	}).(SystemDhcpServerIpRangeUciStringOutput)
}

type SystemDhcpServerIpRangeVciString struct {
	VciString *string `pulumi:"vciString"`
}

// SystemDhcpServerIpRangeVciStringInput is an input type that accepts SystemDhcpServerIpRangeVciStringArgs and SystemDhcpServerIpRangeVciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeVciStringInput` via:
//
//	SystemDhcpServerIpRangeVciStringArgs{...}
type SystemDhcpServerIpRangeVciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeVciStringOutput() SystemDhcpServerIpRangeVciStringOutput
	ToSystemDhcpServerIpRangeVciStringOutputWithContext(context.Context) SystemDhcpServerIpRangeVciStringOutput
}

type SystemDhcpServerIpRangeVciStringArgs struct {
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemDhcpServerIpRangeVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRangeVciString)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeVciStringArgs) ToSystemDhcpServerIpRangeVciStringOutput() SystemDhcpServerIpRangeVciStringOutput {
	return i.ToSystemDhcpServerIpRangeVciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeVciStringArgs) ToSystemDhcpServerIpRangeVciStringOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeVciStringOutput)
}

func (i SystemDhcpServerIpRangeVciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRangeVciString] {
	return pulumix.Output[SystemDhcpServerIpRangeVciString]{
		OutputState: i.ToSystemDhcpServerIpRangeVciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerIpRangeVciStringArrayInput is an input type that accepts SystemDhcpServerIpRangeVciStringArray and SystemDhcpServerIpRangeVciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerIpRangeVciStringArrayInput` via:
//
//	SystemDhcpServerIpRangeVciStringArray{ SystemDhcpServerIpRangeVciStringArgs{...} }
type SystemDhcpServerIpRangeVciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerIpRangeVciStringArrayOutput() SystemDhcpServerIpRangeVciStringArrayOutput
	ToSystemDhcpServerIpRangeVciStringArrayOutputWithContext(context.Context) SystemDhcpServerIpRangeVciStringArrayOutput
}

type SystemDhcpServerIpRangeVciStringArray []SystemDhcpServerIpRangeVciStringInput

func (SystemDhcpServerIpRangeVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRangeVciString)(nil)).Elem()
}

func (i SystemDhcpServerIpRangeVciStringArray) ToSystemDhcpServerIpRangeVciStringArrayOutput() SystemDhcpServerIpRangeVciStringArrayOutput {
	return i.ToSystemDhcpServerIpRangeVciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerIpRangeVciStringArray) ToSystemDhcpServerIpRangeVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerIpRangeVciStringArrayOutput)
}

func (i SystemDhcpServerIpRangeVciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRangeVciString] {
	return pulumix.Output[[]SystemDhcpServerIpRangeVciString]{
		OutputState: i.ToSystemDhcpServerIpRangeVciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerIpRangeVciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerIpRangeVciString)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeVciStringOutput) ToSystemDhcpServerIpRangeVciStringOutput() SystemDhcpServerIpRangeVciStringOutput {
	return o
}

func (o SystemDhcpServerIpRangeVciStringOutput) ToSystemDhcpServerIpRangeVciStringOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeVciStringOutput {
	return o
}

func (o SystemDhcpServerIpRangeVciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerIpRangeVciString] {
	return pulumix.Output[SystemDhcpServerIpRangeVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerIpRangeVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerIpRangeVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerIpRangeVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerIpRangeVciString)(nil)).Elem()
}

func (o SystemDhcpServerIpRangeVciStringArrayOutput) ToSystemDhcpServerIpRangeVciStringArrayOutput() SystemDhcpServerIpRangeVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeVciStringArrayOutput) ToSystemDhcpServerIpRangeVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerIpRangeVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerIpRangeVciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerIpRangeVciString] {
	return pulumix.Output[[]SystemDhcpServerIpRangeVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerIpRangeVciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerIpRangeVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerIpRangeVciString {
		return vs[0].([]SystemDhcpServerIpRangeVciString)[vs[1].(int)]
	}).(SystemDhcpServerIpRangeVciStringOutput)
}

type SystemDhcpServerOption struct {
	Code       *int                              `pulumi:"code"`
	Id         *int                              `pulumi:"id"`
	Ip         *string                           `pulumi:"ip"`
	Type       *string                           `pulumi:"type"`
	UciMatch   *string                           `pulumi:"uciMatch"`
	UciStrings []SystemDhcpServerOptionUciString `pulumi:"uciStrings"`
	Value      *string                           `pulumi:"value"`
	VciMatch   *string                           `pulumi:"vciMatch"`
	VciStrings []SystemDhcpServerOptionVciString `pulumi:"vciStrings"`
}

// SystemDhcpServerOptionInput is an input type that accepts SystemDhcpServerOptionArgs and SystemDhcpServerOptionOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionInput` via:
//
//	SystemDhcpServerOptionArgs{...}
type SystemDhcpServerOptionInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionOutput() SystemDhcpServerOptionOutput
	ToSystemDhcpServerOptionOutputWithContext(context.Context) SystemDhcpServerOptionOutput
}

type SystemDhcpServerOptionArgs struct {
	Code       pulumi.IntPtrInput                        `pulumi:"code"`
	Id         pulumi.IntPtrInput                        `pulumi:"id"`
	Ip         pulumi.StringPtrInput                     `pulumi:"ip"`
	Type       pulumi.StringPtrInput                     `pulumi:"type"`
	UciMatch   pulumi.StringPtrInput                     `pulumi:"uciMatch"`
	UciStrings SystemDhcpServerOptionUciStringArrayInput `pulumi:"uciStrings"`
	Value      pulumi.StringPtrInput                     `pulumi:"value"`
	VciMatch   pulumi.StringPtrInput                     `pulumi:"vciMatch"`
	VciStrings SystemDhcpServerOptionVciStringArrayInput `pulumi:"vciStrings"`
}

func (SystemDhcpServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOption)(nil)).Elem()
}

func (i SystemDhcpServerOptionArgs) ToSystemDhcpServerOptionOutput() SystemDhcpServerOptionOutput {
	return i.ToSystemDhcpServerOptionOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionArgs) ToSystemDhcpServerOptionOutputWithContext(ctx context.Context) SystemDhcpServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionOutput)
}

func (i SystemDhcpServerOptionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOption] {
	return pulumix.Output[SystemDhcpServerOption]{
		OutputState: i.ToSystemDhcpServerOptionOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerOptionArrayInput is an input type that accepts SystemDhcpServerOptionArray and SystemDhcpServerOptionArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionArrayInput` via:
//
//	SystemDhcpServerOptionArray{ SystemDhcpServerOptionArgs{...} }
type SystemDhcpServerOptionArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionArrayOutput() SystemDhcpServerOptionArrayOutput
	ToSystemDhcpServerOptionArrayOutputWithContext(context.Context) SystemDhcpServerOptionArrayOutput
}

type SystemDhcpServerOptionArray []SystemDhcpServerOptionInput

func (SystemDhcpServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOption)(nil)).Elem()
}

func (i SystemDhcpServerOptionArray) ToSystemDhcpServerOptionArrayOutput() SystemDhcpServerOptionArrayOutput {
	return i.ToSystemDhcpServerOptionArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionArray) ToSystemDhcpServerOptionArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionArrayOutput)
}

func (i SystemDhcpServerOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOption] {
	return pulumix.Output[[]SystemDhcpServerOption]{
		OutputState: i.ToSystemDhcpServerOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerOptionOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOption)(nil)).Elem()
}

func (o SystemDhcpServerOptionOutput) ToSystemDhcpServerOptionOutput() SystemDhcpServerOptionOutput {
	return o
}

func (o SystemDhcpServerOptionOutput) ToSystemDhcpServerOptionOutputWithContext(ctx context.Context) SystemDhcpServerOptionOutput {
	return o
}

func (o SystemDhcpServerOptionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOption] {
	return pulumix.Output[SystemDhcpServerOption]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *int { return v.Code }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerOptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerOptionOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerOptionOutput) UciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *string { return v.UciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerOptionOutput) UciStrings() SystemDhcpServerOptionUciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) []SystemDhcpServerOptionUciString { return v.UciStrings }).(SystemDhcpServerOptionUciStringArrayOutput)
}

func (o SystemDhcpServerOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerOptionOutput) VciMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) *string { return v.VciMatch }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerOptionOutput) VciStrings() SystemDhcpServerOptionVciStringArrayOutput {
	return o.ApplyT(func(v SystemDhcpServerOption) []SystemDhcpServerOptionVciString { return v.VciStrings }).(SystemDhcpServerOptionVciStringArrayOutput)
}

type SystemDhcpServerOptionArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOption)(nil)).Elem()
}

func (o SystemDhcpServerOptionArrayOutput) ToSystemDhcpServerOptionArrayOutput() SystemDhcpServerOptionArrayOutput {
	return o
}

func (o SystemDhcpServerOptionArrayOutput) ToSystemDhcpServerOptionArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionArrayOutput {
	return o
}

func (o SystemDhcpServerOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOption] {
	return pulumix.Output[[]SystemDhcpServerOption]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerOption {
		return vs[0].([]SystemDhcpServerOption)[vs[1].(int)]
	}).(SystemDhcpServerOptionOutput)
}

type SystemDhcpServerOptionUciString struct {
	UciString *string `pulumi:"uciString"`
}

// SystemDhcpServerOptionUciStringInput is an input type that accepts SystemDhcpServerOptionUciStringArgs and SystemDhcpServerOptionUciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionUciStringInput` via:
//
//	SystemDhcpServerOptionUciStringArgs{...}
type SystemDhcpServerOptionUciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionUciStringOutput() SystemDhcpServerOptionUciStringOutput
	ToSystemDhcpServerOptionUciStringOutputWithContext(context.Context) SystemDhcpServerOptionUciStringOutput
}

type SystemDhcpServerOptionUciStringArgs struct {
	UciString pulumi.StringPtrInput `pulumi:"uciString"`
}

func (SystemDhcpServerOptionUciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOptionUciString)(nil)).Elem()
}

func (i SystemDhcpServerOptionUciStringArgs) ToSystemDhcpServerOptionUciStringOutput() SystemDhcpServerOptionUciStringOutput {
	return i.ToSystemDhcpServerOptionUciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionUciStringArgs) ToSystemDhcpServerOptionUciStringOutputWithContext(ctx context.Context) SystemDhcpServerOptionUciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionUciStringOutput)
}

func (i SystemDhcpServerOptionUciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOptionUciString] {
	return pulumix.Output[SystemDhcpServerOptionUciString]{
		OutputState: i.ToSystemDhcpServerOptionUciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerOptionUciStringArrayInput is an input type that accepts SystemDhcpServerOptionUciStringArray and SystemDhcpServerOptionUciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionUciStringArrayInput` via:
//
//	SystemDhcpServerOptionUciStringArray{ SystemDhcpServerOptionUciStringArgs{...} }
type SystemDhcpServerOptionUciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionUciStringArrayOutput() SystemDhcpServerOptionUciStringArrayOutput
	ToSystemDhcpServerOptionUciStringArrayOutputWithContext(context.Context) SystemDhcpServerOptionUciStringArrayOutput
}

type SystemDhcpServerOptionUciStringArray []SystemDhcpServerOptionUciStringInput

func (SystemDhcpServerOptionUciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOptionUciString)(nil)).Elem()
}

func (i SystemDhcpServerOptionUciStringArray) ToSystemDhcpServerOptionUciStringArrayOutput() SystemDhcpServerOptionUciStringArrayOutput {
	return i.ToSystemDhcpServerOptionUciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionUciStringArray) ToSystemDhcpServerOptionUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionUciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionUciStringArrayOutput)
}

func (i SystemDhcpServerOptionUciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOptionUciString] {
	return pulumix.Output[[]SystemDhcpServerOptionUciString]{
		OutputState: i.ToSystemDhcpServerOptionUciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerOptionUciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionUciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOptionUciString)(nil)).Elem()
}

func (o SystemDhcpServerOptionUciStringOutput) ToSystemDhcpServerOptionUciStringOutput() SystemDhcpServerOptionUciStringOutput {
	return o
}

func (o SystemDhcpServerOptionUciStringOutput) ToSystemDhcpServerOptionUciStringOutputWithContext(ctx context.Context) SystemDhcpServerOptionUciStringOutput {
	return o
}

func (o SystemDhcpServerOptionUciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOptionUciString] {
	return pulumix.Output[SystemDhcpServerOptionUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionUciStringOutput) UciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOptionUciString) *string { return v.UciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerOptionUciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionUciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOptionUciString)(nil)).Elem()
}

func (o SystemDhcpServerOptionUciStringArrayOutput) ToSystemDhcpServerOptionUciStringArrayOutput() SystemDhcpServerOptionUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerOptionUciStringArrayOutput) ToSystemDhcpServerOptionUciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionUciStringArrayOutput {
	return o
}

func (o SystemDhcpServerOptionUciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOptionUciString] {
	return pulumix.Output[[]SystemDhcpServerOptionUciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionUciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerOptionUciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerOptionUciString {
		return vs[0].([]SystemDhcpServerOptionUciString)[vs[1].(int)]
	}).(SystemDhcpServerOptionUciStringOutput)
}

type SystemDhcpServerOptionVciString struct {
	VciString *string `pulumi:"vciString"`
}

// SystemDhcpServerOptionVciStringInput is an input type that accepts SystemDhcpServerOptionVciStringArgs and SystemDhcpServerOptionVciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionVciStringInput` via:
//
//	SystemDhcpServerOptionVciStringArgs{...}
type SystemDhcpServerOptionVciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionVciStringOutput() SystemDhcpServerOptionVciStringOutput
	ToSystemDhcpServerOptionVciStringOutputWithContext(context.Context) SystemDhcpServerOptionVciStringOutput
}

type SystemDhcpServerOptionVciStringArgs struct {
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemDhcpServerOptionVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOptionVciString)(nil)).Elem()
}

func (i SystemDhcpServerOptionVciStringArgs) ToSystemDhcpServerOptionVciStringOutput() SystemDhcpServerOptionVciStringOutput {
	return i.ToSystemDhcpServerOptionVciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionVciStringArgs) ToSystemDhcpServerOptionVciStringOutputWithContext(ctx context.Context) SystemDhcpServerOptionVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionVciStringOutput)
}

func (i SystemDhcpServerOptionVciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOptionVciString] {
	return pulumix.Output[SystemDhcpServerOptionVciString]{
		OutputState: i.ToSystemDhcpServerOptionVciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerOptionVciStringArrayInput is an input type that accepts SystemDhcpServerOptionVciStringArray and SystemDhcpServerOptionVciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerOptionVciStringArrayInput` via:
//
//	SystemDhcpServerOptionVciStringArray{ SystemDhcpServerOptionVciStringArgs{...} }
type SystemDhcpServerOptionVciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerOptionVciStringArrayOutput() SystemDhcpServerOptionVciStringArrayOutput
	ToSystemDhcpServerOptionVciStringArrayOutputWithContext(context.Context) SystemDhcpServerOptionVciStringArrayOutput
}

type SystemDhcpServerOptionVciStringArray []SystemDhcpServerOptionVciStringInput

func (SystemDhcpServerOptionVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOptionVciString)(nil)).Elem()
}

func (i SystemDhcpServerOptionVciStringArray) ToSystemDhcpServerOptionVciStringArrayOutput() SystemDhcpServerOptionVciStringArrayOutput {
	return i.ToSystemDhcpServerOptionVciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerOptionVciStringArray) ToSystemDhcpServerOptionVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerOptionVciStringArrayOutput)
}

func (i SystemDhcpServerOptionVciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOptionVciString] {
	return pulumix.Output[[]SystemDhcpServerOptionVciString]{
		OutputState: i.ToSystemDhcpServerOptionVciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerOptionVciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerOptionVciString)(nil)).Elem()
}

func (o SystemDhcpServerOptionVciStringOutput) ToSystemDhcpServerOptionVciStringOutput() SystemDhcpServerOptionVciStringOutput {
	return o
}

func (o SystemDhcpServerOptionVciStringOutput) ToSystemDhcpServerOptionVciStringOutputWithContext(ctx context.Context) SystemDhcpServerOptionVciStringOutput {
	return o
}

func (o SystemDhcpServerOptionVciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerOptionVciString] {
	return pulumix.Output[SystemDhcpServerOptionVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerOptionVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerOptionVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerOptionVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerOptionVciString)(nil)).Elem()
}

func (o SystemDhcpServerOptionVciStringArrayOutput) ToSystemDhcpServerOptionVciStringArrayOutput() SystemDhcpServerOptionVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerOptionVciStringArrayOutput) ToSystemDhcpServerOptionVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerOptionVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerOptionVciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerOptionVciString] {
	return pulumix.Output[[]SystemDhcpServerOptionVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerOptionVciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerOptionVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerOptionVciString {
		return vs[0].([]SystemDhcpServerOptionVciString)[vs[1].(int)]
	}).(SystemDhcpServerOptionVciStringOutput)
}

type SystemDhcpServerReservedAddress struct {
	Action        *string `pulumi:"action"`
	CircuitId     *string `pulumi:"circuitId"`
	CircuitIdType *string `pulumi:"circuitIdType"`
	Description   *string `pulumi:"description"`
	Id            *int    `pulumi:"id"`
	Ip            *string `pulumi:"ip"`
	Mac           *string `pulumi:"mac"`
	RemoteId      *string `pulumi:"remoteId"`
	RemoteIdType  *string `pulumi:"remoteIdType"`
	Type          *string `pulumi:"type"`
}

// SystemDhcpServerReservedAddressInput is an input type that accepts SystemDhcpServerReservedAddressArgs and SystemDhcpServerReservedAddressOutput values.
// You can construct a concrete instance of `SystemDhcpServerReservedAddressInput` via:
//
//	SystemDhcpServerReservedAddressArgs{...}
type SystemDhcpServerReservedAddressInput interface {
	pulumi.Input

	ToSystemDhcpServerReservedAddressOutput() SystemDhcpServerReservedAddressOutput
	ToSystemDhcpServerReservedAddressOutputWithContext(context.Context) SystemDhcpServerReservedAddressOutput
}

type SystemDhcpServerReservedAddressArgs struct {
	Action        pulumi.StringPtrInput `pulumi:"action"`
	CircuitId     pulumi.StringPtrInput `pulumi:"circuitId"`
	CircuitIdType pulumi.StringPtrInput `pulumi:"circuitIdType"`
	Description   pulumi.StringPtrInput `pulumi:"description"`
	Id            pulumi.IntPtrInput    `pulumi:"id"`
	Ip            pulumi.StringPtrInput `pulumi:"ip"`
	Mac           pulumi.StringPtrInput `pulumi:"mac"`
	RemoteId      pulumi.StringPtrInput `pulumi:"remoteId"`
	RemoteIdType  pulumi.StringPtrInput `pulumi:"remoteIdType"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemDhcpServerReservedAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerReservedAddress)(nil)).Elem()
}

func (i SystemDhcpServerReservedAddressArgs) ToSystemDhcpServerReservedAddressOutput() SystemDhcpServerReservedAddressOutput {
	return i.ToSystemDhcpServerReservedAddressOutputWithContext(context.Background())
}

func (i SystemDhcpServerReservedAddressArgs) ToSystemDhcpServerReservedAddressOutputWithContext(ctx context.Context) SystemDhcpServerReservedAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerReservedAddressOutput)
}

func (i SystemDhcpServerReservedAddressArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerReservedAddress] {
	return pulumix.Output[SystemDhcpServerReservedAddress]{
		OutputState: i.ToSystemDhcpServerReservedAddressOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerReservedAddressArrayInput is an input type that accepts SystemDhcpServerReservedAddressArray and SystemDhcpServerReservedAddressArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerReservedAddressArrayInput` via:
//
//	SystemDhcpServerReservedAddressArray{ SystemDhcpServerReservedAddressArgs{...} }
type SystemDhcpServerReservedAddressArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerReservedAddressArrayOutput() SystemDhcpServerReservedAddressArrayOutput
	ToSystemDhcpServerReservedAddressArrayOutputWithContext(context.Context) SystemDhcpServerReservedAddressArrayOutput
}

type SystemDhcpServerReservedAddressArray []SystemDhcpServerReservedAddressInput

func (SystemDhcpServerReservedAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerReservedAddress)(nil)).Elem()
}

func (i SystemDhcpServerReservedAddressArray) ToSystemDhcpServerReservedAddressArrayOutput() SystemDhcpServerReservedAddressArrayOutput {
	return i.ToSystemDhcpServerReservedAddressArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerReservedAddressArray) ToSystemDhcpServerReservedAddressArrayOutputWithContext(ctx context.Context) SystemDhcpServerReservedAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerReservedAddressArrayOutput)
}

func (i SystemDhcpServerReservedAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerReservedAddress] {
	return pulumix.Output[[]SystemDhcpServerReservedAddress]{
		OutputState: i.ToSystemDhcpServerReservedAddressArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerReservedAddressOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerReservedAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerReservedAddress)(nil)).Elem()
}

func (o SystemDhcpServerReservedAddressOutput) ToSystemDhcpServerReservedAddressOutput() SystemDhcpServerReservedAddressOutput {
	return o
}

func (o SystemDhcpServerReservedAddressOutput) ToSystemDhcpServerReservedAddressOutputWithContext(ctx context.Context) SystemDhcpServerReservedAddressOutput {
	return o
}

func (o SystemDhcpServerReservedAddressOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerReservedAddress] {
	return pulumix.Output[SystemDhcpServerReservedAddress]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerReservedAddressOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.CircuitId }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) CircuitIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.CircuitIdType }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) RemoteIdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.RemoteIdType }).(pulumi.StringPtrOutput)
}

func (o SystemDhcpServerReservedAddressOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerReservedAddress) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerReservedAddressArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerReservedAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerReservedAddress)(nil)).Elem()
}

func (o SystemDhcpServerReservedAddressArrayOutput) ToSystemDhcpServerReservedAddressArrayOutput() SystemDhcpServerReservedAddressArrayOutput {
	return o
}

func (o SystemDhcpServerReservedAddressArrayOutput) ToSystemDhcpServerReservedAddressArrayOutputWithContext(ctx context.Context) SystemDhcpServerReservedAddressArrayOutput {
	return o
}

func (o SystemDhcpServerReservedAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerReservedAddress] {
	return pulumix.Output[[]SystemDhcpServerReservedAddress]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerReservedAddressArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerReservedAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerReservedAddress {
		return vs[0].([]SystemDhcpServerReservedAddress)[vs[1].(int)]
	}).(SystemDhcpServerReservedAddressOutput)
}

type SystemDhcpServerTftpServer struct {
	TftpServer *string `pulumi:"tftpServer"`
}

// SystemDhcpServerTftpServerInput is an input type that accepts SystemDhcpServerTftpServerArgs and SystemDhcpServerTftpServerOutput values.
// You can construct a concrete instance of `SystemDhcpServerTftpServerInput` via:
//
//	SystemDhcpServerTftpServerArgs{...}
type SystemDhcpServerTftpServerInput interface {
	pulumi.Input

	ToSystemDhcpServerTftpServerOutput() SystemDhcpServerTftpServerOutput
	ToSystemDhcpServerTftpServerOutputWithContext(context.Context) SystemDhcpServerTftpServerOutput
}

type SystemDhcpServerTftpServerArgs struct {
	TftpServer pulumi.StringPtrInput `pulumi:"tftpServer"`
}

func (SystemDhcpServerTftpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerTftpServer)(nil)).Elem()
}

func (i SystemDhcpServerTftpServerArgs) ToSystemDhcpServerTftpServerOutput() SystemDhcpServerTftpServerOutput {
	return i.ToSystemDhcpServerTftpServerOutputWithContext(context.Background())
}

func (i SystemDhcpServerTftpServerArgs) ToSystemDhcpServerTftpServerOutputWithContext(ctx context.Context) SystemDhcpServerTftpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerTftpServerOutput)
}

func (i SystemDhcpServerTftpServerArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerTftpServer] {
	return pulumix.Output[SystemDhcpServerTftpServer]{
		OutputState: i.ToSystemDhcpServerTftpServerOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerTftpServerArrayInput is an input type that accepts SystemDhcpServerTftpServerArray and SystemDhcpServerTftpServerArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerTftpServerArrayInput` via:
//
//	SystemDhcpServerTftpServerArray{ SystemDhcpServerTftpServerArgs{...} }
type SystemDhcpServerTftpServerArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerTftpServerArrayOutput() SystemDhcpServerTftpServerArrayOutput
	ToSystemDhcpServerTftpServerArrayOutputWithContext(context.Context) SystemDhcpServerTftpServerArrayOutput
}

type SystemDhcpServerTftpServerArray []SystemDhcpServerTftpServerInput

func (SystemDhcpServerTftpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerTftpServer)(nil)).Elem()
}

func (i SystemDhcpServerTftpServerArray) ToSystemDhcpServerTftpServerArrayOutput() SystemDhcpServerTftpServerArrayOutput {
	return i.ToSystemDhcpServerTftpServerArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerTftpServerArray) ToSystemDhcpServerTftpServerArrayOutputWithContext(ctx context.Context) SystemDhcpServerTftpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerTftpServerArrayOutput)
}

func (i SystemDhcpServerTftpServerArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerTftpServer] {
	return pulumix.Output[[]SystemDhcpServerTftpServer]{
		OutputState: i.ToSystemDhcpServerTftpServerArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerTftpServerOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerTftpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerTftpServer)(nil)).Elem()
}

func (o SystemDhcpServerTftpServerOutput) ToSystemDhcpServerTftpServerOutput() SystemDhcpServerTftpServerOutput {
	return o
}

func (o SystemDhcpServerTftpServerOutput) ToSystemDhcpServerTftpServerOutputWithContext(ctx context.Context) SystemDhcpServerTftpServerOutput {
	return o
}

func (o SystemDhcpServerTftpServerOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerTftpServer] {
	return pulumix.Output[SystemDhcpServerTftpServer]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerTftpServerOutput) TftpServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerTftpServer) *string { return v.TftpServer }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerTftpServerArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerTftpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerTftpServer)(nil)).Elem()
}

func (o SystemDhcpServerTftpServerArrayOutput) ToSystemDhcpServerTftpServerArrayOutput() SystemDhcpServerTftpServerArrayOutput {
	return o
}

func (o SystemDhcpServerTftpServerArrayOutput) ToSystemDhcpServerTftpServerArrayOutputWithContext(ctx context.Context) SystemDhcpServerTftpServerArrayOutput {
	return o
}

func (o SystemDhcpServerTftpServerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerTftpServer] {
	return pulumix.Output[[]SystemDhcpServerTftpServer]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerTftpServerArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerTftpServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerTftpServer {
		return vs[0].([]SystemDhcpServerTftpServer)[vs[1].(int)]
	}).(SystemDhcpServerTftpServerOutput)
}

type SystemDhcpServerVciString struct {
	VciString *string `pulumi:"vciString"`
}

// SystemDhcpServerVciStringInput is an input type that accepts SystemDhcpServerVciStringArgs and SystemDhcpServerVciStringOutput values.
// You can construct a concrete instance of `SystemDhcpServerVciStringInput` via:
//
//	SystemDhcpServerVciStringArgs{...}
type SystemDhcpServerVciStringInput interface {
	pulumi.Input

	ToSystemDhcpServerVciStringOutput() SystemDhcpServerVciStringOutput
	ToSystemDhcpServerVciStringOutputWithContext(context.Context) SystemDhcpServerVciStringOutput
}

type SystemDhcpServerVciStringArgs struct {
	VciString pulumi.StringPtrInput `pulumi:"vciString"`
}

func (SystemDhcpServerVciStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerVciString)(nil)).Elem()
}

func (i SystemDhcpServerVciStringArgs) ToSystemDhcpServerVciStringOutput() SystemDhcpServerVciStringOutput {
	return i.ToSystemDhcpServerVciStringOutputWithContext(context.Background())
}

func (i SystemDhcpServerVciStringArgs) ToSystemDhcpServerVciStringOutputWithContext(ctx context.Context) SystemDhcpServerVciStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerVciStringOutput)
}

func (i SystemDhcpServerVciStringArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerVciString] {
	return pulumix.Output[SystemDhcpServerVciString]{
		OutputState: i.ToSystemDhcpServerVciStringOutputWithContext(ctx).OutputState,
	}
}

// SystemDhcpServerVciStringArrayInput is an input type that accepts SystemDhcpServerVciStringArray and SystemDhcpServerVciStringArrayOutput values.
// You can construct a concrete instance of `SystemDhcpServerVciStringArrayInput` via:
//
//	SystemDhcpServerVciStringArray{ SystemDhcpServerVciStringArgs{...} }
type SystemDhcpServerVciStringArrayInput interface {
	pulumi.Input

	ToSystemDhcpServerVciStringArrayOutput() SystemDhcpServerVciStringArrayOutput
	ToSystemDhcpServerVciStringArrayOutputWithContext(context.Context) SystemDhcpServerVciStringArrayOutput
}

type SystemDhcpServerVciStringArray []SystemDhcpServerVciStringInput

func (SystemDhcpServerVciStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerVciString)(nil)).Elem()
}

func (i SystemDhcpServerVciStringArray) ToSystemDhcpServerVciStringArrayOutput() SystemDhcpServerVciStringArrayOutput {
	return i.ToSystemDhcpServerVciStringArrayOutputWithContext(context.Background())
}

func (i SystemDhcpServerVciStringArray) ToSystemDhcpServerVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerVciStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDhcpServerVciStringArrayOutput)
}

func (i SystemDhcpServerVciStringArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerVciString] {
	return pulumix.Output[[]SystemDhcpServerVciString]{
		OutputState: i.ToSystemDhcpServerVciStringArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDhcpServerVciStringOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerVciStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDhcpServerVciString)(nil)).Elem()
}

func (o SystemDhcpServerVciStringOutput) ToSystemDhcpServerVciStringOutput() SystemDhcpServerVciStringOutput {
	return o
}

func (o SystemDhcpServerVciStringOutput) ToSystemDhcpServerVciStringOutputWithContext(ctx context.Context) SystemDhcpServerVciStringOutput {
	return o
}

func (o SystemDhcpServerVciStringOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDhcpServerVciString] {
	return pulumix.Output[SystemDhcpServerVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerVciStringOutput) VciString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDhcpServerVciString) *string { return v.VciString }).(pulumi.StringPtrOutput)
}

type SystemDhcpServerVciStringArrayOutput struct{ *pulumi.OutputState }

func (SystemDhcpServerVciStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDhcpServerVciString)(nil)).Elem()
}

func (o SystemDhcpServerVciStringArrayOutput) ToSystemDhcpServerVciStringArrayOutput() SystemDhcpServerVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerVciStringArrayOutput) ToSystemDhcpServerVciStringArrayOutputWithContext(ctx context.Context) SystemDhcpServerVciStringArrayOutput {
	return o
}

func (o SystemDhcpServerVciStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDhcpServerVciString] {
	return pulumix.Output[[]SystemDhcpServerVciString]{
		OutputState: o.OutputState,
	}
}

func (o SystemDhcpServerVciStringArrayOutput) Index(i pulumi.IntInput) SystemDhcpServerVciStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDhcpServerVciString {
		return vs[0].([]SystemDhcpServerVciString)[vs[1].(int)]
	}).(SystemDhcpServerVciStringOutput)
}

type SystemDnsDatabaseDnsEntry struct {
	CanonicalName *string `pulumi:"canonicalName"`
	Hostname      *string `pulumi:"hostname"`
	Id            *int    `pulumi:"id"`
	Ip            *string `pulumi:"ip"`
	Ipv6          *string `pulumi:"ipv6"`
	Preference    *int    `pulumi:"preference"`
	Status        *string `pulumi:"status"`
	Ttl           *int    `pulumi:"ttl"`
	Type          *string `pulumi:"type"`
}

// SystemDnsDatabaseDnsEntryInput is an input type that accepts SystemDnsDatabaseDnsEntryArgs and SystemDnsDatabaseDnsEntryOutput values.
// You can construct a concrete instance of `SystemDnsDatabaseDnsEntryInput` via:
//
//	SystemDnsDatabaseDnsEntryArgs{...}
type SystemDnsDatabaseDnsEntryInput interface {
	pulumi.Input

	ToSystemDnsDatabaseDnsEntryOutput() SystemDnsDatabaseDnsEntryOutput
	ToSystemDnsDatabaseDnsEntryOutputWithContext(context.Context) SystemDnsDatabaseDnsEntryOutput
}

type SystemDnsDatabaseDnsEntryArgs struct {
	CanonicalName pulumi.StringPtrInput `pulumi:"canonicalName"`
	Hostname      pulumi.StringPtrInput `pulumi:"hostname"`
	Id            pulumi.IntPtrInput    `pulumi:"id"`
	Ip            pulumi.StringPtrInput `pulumi:"ip"`
	Ipv6          pulumi.StringPtrInput `pulumi:"ipv6"`
	Preference    pulumi.IntPtrInput    `pulumi:"preference"`
	Status        pulumi.StringPtrInput `pulumi:"status"`
	Ttl           pulumi.IntPtrInput    `pulumi:"ttl"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemDnsDatabaseDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDatabaseDnsEntry)(nil)).Elem()
}

func (i SystemDnsDatabaseDnsEntryArgs) ToSystemDnsDatabaseDnsEntryOutput() SystemDnsDatabaseDnsEntryOutput {
	return i.ToSystemDnsDatabaseDnsEntryOutputWithContext(context.Background())
}

func (i SystemDnsDatabaseDnsEntryArgs) ToSystemDnsDatabaseDnsEntryOutputWithContext(ctx context.Context) SystemDnsDatabaseDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDatabaseDnsEntryOutput)
}

func (i SystemDnsDatabaseDnsEntryArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDnsDatabaseDnsEntry] {
	return pulumix.Output[SystemDnsDatabaseDnsEntry]{
		OutputState: i.ToSystemDnsDatabaseDnsEntryOutputWithContext(ctx).OutputState,
	}
}

// SystemDnsDatabaseDnsEntryArrayInput is an input type that accepts SystemDnsDatabaseDnsEntryArray and SystemDnsDatabaseDnsEntryArrayOutput values.
// You can construct a concrete instance of `SystemDnsDatabaseDnsEntryArrayInput` via:
//
//	SystemDnsDatabaseDnsEntryArray{ SystemDnsDatabaseDnsEntryArgs{...} }
type SystemDnsDatabaseDnsEntryArrayInput interface {
	pulumi.Input

	ToSystemDnsDatabaseDnsEntryArrayOutput() SystemDnsDatabaseDnsEntryArrayOutput
	ToSystemDnsDatabaseDnsEntryArrayOutputWithContext(context.Context) SystemDnsDatabaseDnsEntryArrayOutput
}

type SystemDnsDatabaseDnsEntryArray []SystemDnsDatabaseDnsEntryInput

func (SystemDnsDatabaseDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDatabaseDnsEntry)(nil)).Elem()
}

func (i SystemDnsDatabaseDnsEntryArray) ToSystemDnsDatabaseDnsEntryArrayOutput() SystemDnsDatabaseDnsEntryArrayOutput {
	return i.ToSystemDnsDatabaseDnsEntryArrayOutputWithContext(context.Background())
}

func (i SystemDnsDatabaseDnsEntryArray) ToSystemDnsDatabaseDnsEntryArrayOutputWithContext(ctx context.Context) SystemDnsDatabaseDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDatabaseDnsEntryArrayOutput)
}

func (i SystemDnsDatabaseDnsEntryArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsDatabaseDnsEntry] {
	return pulumix.Output[[]SystemDnsDatabaseDnsEntry]{
		OutputState: i.ToSystemDnsDatabaseDnsEntryArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDnsDatabaseDnsEntryOutput struct{ *pulumi.OutputState }

func (SystemDnsDatabaseDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDatabaseDnsEntry)(nil)).Elem()
}

func (o SystemDnsDatabaseDnsEntryOutput) ToSystemDnsDatabaseDnsEntryOutput() SystemDnsDatabaseDnsEntryOutput {
	return o
}

func (o SystemDnsDatabaseDnsEntryOutput) ToSystemDnsDatabaseDnsEntryOutputWithContext(ctx context.Context) SystemDnsDatabaseDnsEntryOutput {
	return o
}

func (o SystemDnsDatabaseDnsEntryOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDnsDatabaseDnsEntry] {
	return pulumix.Output[SystemDnsDatabaseDnsEntry]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsDatabaseDnsEntryOutput) CanonicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.CanonicalName }).(pulumi.StringPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

func (o SystemDnsDatabaseDnsEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDatabaseDnsEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemDnsDatabaseDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsDatabaseDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDatabaseDnsEntry)(nil)).Elem()
}

func (o SystemDnsDatabaseDnsEntryArrayOutput) ToSystemDnsDatabaseDnsEntryArrayOutput() SystemDnsDatabaseDnsEntryArrayOutput {
	return o
}

func (o SystemDnsDatabaseDnsEntryArrayOutput) ToSystemDnsDatabaseDnsEntryArrayOutputWithContext(ctx context.Context) SystemDnsDatabaseDnsEntryArrayOutput {
	return o
}

func (o SystemDnsDatabaseDnsEntryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsDatabaseDnsEntry] {
	return pulumix.Output[[]SystemDnsDatabaseDnsEntry]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsDatabaseDnsEntryArrayOutput) Index(i pulumi.IntInput) SystemDnsDatabaseDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsDatabaseDnsEntry {
		return vs[0].([]SystemDnsDatabaseDnsEntry)[vs[1].(int)]
	}).(SystemDnsDatabaseDnsEntryOutput)
}

type SystemDnsDomain struct {
	Domain *string `pulumi:"domain"`
}

// SystemDnsDomainInput is an input type that accepts SystemDnsDomainArgs and SystemDnsDomainOutput values.
// You can construct a concrete instance of `SystemDnsDomainInput` via:
//
//	SystemDnsDomainArgs{...}
type SystemDnsDomainInput interface {
	pulumi.Input

	ToSystemDnsDomainOutput() SystemDnsDomainOutput
	ToSystemDnsDomainOutputWithContext(context.Context) SystemDnsDomainOutput
}

type SystemDnsDomainArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (SystemDnsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDomain)(nil)).Elem()
}

func (i SystemDnsDomainArgs) ToSystemDnsDomainOutput() SystemDnsDomainOutput {
	return i.ToSystemDnsDomainOutputWithContext(context.Background())
}

func (i SystemDnsDomainArgs) ToSystemDnsDomainOutputWithContext(ctx context.Context) SystemDnsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDomainOutput)
}

func (i SystemDnsDomainArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDnsDomain] {
	return pulumix.Output[SystemDnsDomain]{
		OutputState: i.ToSystemDnsDomainOutputWithContext(ctx).OutputState,
	}
}

// SystemDnsDomainArrayInput is an input type that accepts SystemDnsDomainArray and SystemDnsDomainArrayOutput values.
// You can construct a concrete instance of `SystemDnsDomainArrayInput` via:
//
//	SystemDnsDomainArray{ SystemDnsDomainArgs{...} }
type SystemDnsDomainArrayInput interface {
	pulumi.Input

	ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput
	ToSystemDnsDomainArrayOutputWithContext(context.Context) SystemDnsDomainArrayOutput
}

type SystemDnsDomainArray []SystemDnsDomainInput

func (SystemDnsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDomain)(nil)).Elem()
}

func (i SystemDnsDomainArray) ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput {
	return i.ToSystemDnsDomainArrayOutputWithContext(context.Background())
}

func (i SystemDnsDomainArray) ToSystemDnsDomainArrayOutputWithContext(ctx context.Context) SystemDnsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsDomainArrayOutput)
}

func (i SystemDnsDomainArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsDomain] {
	return pulumix.Output[[]SystemDnsDomain]{
		OutputState: i.ToSystemDnsDomainArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDnsDomainOutput struct{ *pulumi.OutputState }

func (SystemDnsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsDomain)(nil)).Elem()
}

func (o SystemDnsDomainOutput) ToSystemDnsDomainOutput() SystemDnsDomainOutput {
	return o
}

func (o SystemDnsDomainOutput) ToSystemDnsDomainOutputWithContext(ctx context.Context) SystemDnsDomainOutput {
	return o
}

func (o SystemDnsDomainOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDnsDomain] {
	return pulumix.Output[SystemDnsDomain]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsDomainOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsDomain) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type SystemDnsDomainArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsDomain)(nil)).Elem()
}

func (o SystemDnsDomainArrayOutput) ToSystemDnsDomainArrayOutput() SystemDnsDomainArrayOutput {
	return o
}

func (o SystemDnsDomainArrayOutput) ToSystemDnsDomainArrayOutputWithContext(ctx context.Context) SystemDnsDomainArrayOutput {
	return o
}

func (o SystemDnsDomainArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsDomain] {
	return pulumix.Output[[]SystemDnsDomain]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsDomainArrayOutput) Index(i pulumi.IntInput) SystemDnsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsDomain {
		return vs[0].([]SystemDnsDomain)[vs[1].(int)]
	}).(SystemDnsDomainOutput)
}

type SystemDnsServerHostname struct {
	Hostname *string `pulumi:"hostname"`
}

// SystemDnsServerHostnameInput is an input type that accepts SystemDnsServerHostnameArgs and SystemDnsServerHostnameOutput values.
// You can construct a concrete instance of `SystemDnsServerHostnameInput` via:
//
//	SystemDnsServerHostnameArgs{...}
type SystemDnsServerHostnameInput interface {
	pulumi.Input

	ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput
	ToSystemDnsServerHostnameOutputWithContext(context.Context) SystemDnsServerHostnameOutput
}

type SystemDnsServerHostnameArgs struct {
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (SystemDnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsServerHostname)(nil)).Elem()
}

func (i SystemDnsServerHostnameArgs) ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput {
	return i.ToSystemDnsServerHostnameOutputWithContext(context.Background())
}

func (i SystemDnsServerHostnameArgs) ToSystemDnsServerHostnameOutputWithContext(ctx context.Context) SystemDnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsServerHostnameOutput)
}

func (i SystemDnsServerHostnameArgs) ToOutput(ctx context.Context) pulumix.Output[SystemDnsServerHostname] {
	return pulumix.Output[SystemDnsServerHostname]{
		OutputState: i.ToSystemDnsServerHostnameOutputWithContext(ctx).OutputState,
	}
}

// SystemDnsServerHostnameArrayInput is an input type that accepts SystemDnsServerHostnameArray and SystemDnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `SystemDnsServerHostnameArrayInput` via:
//
//	SystemDnsServerHostnameArray{ SystemDnsServerHostnameArgs{...} }
type SystemDnsServerHostnameArrayInput interface {
	pulumi.Input

	ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput
	ToSystemDnsServerHostnameArrayOutputWithContext(context.Context) SystemDnsServerHostnameArrayOutput
}

type SystemDnsServerHostnameArray []SystemDnsServerHostnameInput

func (SystemDnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsServerHostname)(nil)).Elem()
}

func (i SystemDnsServerHostnameArray) ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput {
	return i.ToSystemDnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i SystemDnsServerHostnameArray) ToSystemDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemDnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsServerHostnameArrayOutput)
}

func (i SystemDnsServerHostnameArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsServerHostname] {
	return pulumix.Output[[]SystemDnsServerHostname]{
		OutputState: i.ToSystemDnsServerHostnameArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemDnsServerHostnameOutput struct{ *pulumi.OutputState }

func (SystemDnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDnsServerHostname)(nil)).Elem()
}

func (o SystemDnsServerHostnameOutput) ToSystemDnsServerHostnameOutput() SystemDnsServerHostnameOutput {
	return o
}

func (o SystemDnsServerHostnameOutput) ToSystemDnsServerHostnameOutputWithContext(ctx context.Context) SystemDnsServerHostnameOutput {
	return o
}

func (o SystemDnsServerHostnameOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDnsServerHostname] {
	return pulumix.Output[SystemDnsServerHostname]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type SystemDnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemDnsServerHostname)(nil)).Elem()
}

func (o SystemDnsServerHostnameArrayOutput) ToSystemDnsServerHostnameArrayOutput() SystemDnsServerHostnameArrayOutput {
	return o
}

func (o SystemDnsServerHostnameArrayOutput) ToSystemDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemDnsServerHostnameArrayOutput {
	return o
}

func (o SystemDnsServerHostnameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemDnsServerHostname] {
	return pulumix.Output[[]SystemDnsServerHostname]{
		OutputState: o.OutputState,
	}
}

func (o SystemDnsServerHostnameArrayOutput) Index(i pulumi.IntInput) SystemDnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemDnsServerHostname {
		return vs[0].([]SystemDnsServerHostname)[vs[1].(int)]
	}).(SystemDnsServerHostnameOutput)
}

type SystemEvpnExportRt struct {
	RouteTarget *string `pulumi:"routeTarget"`
}

// SystemEvpnExportRtInput is an input type that accepts SystemEvpnExportRtArgs and SystemEvpnExportRtOutput values.
// You can construct a concrete instance of `SystemEvpnExportRtInput` via:
//
//	SystemEvpnExportRtArgs{...}
type SystemEvpnExportRtInput interface {
	pulumi.Input

	ToSystemEvpnExportRtOutput() SystemEvpnExportRtOutput
	ToSystemEvpnExportRtOutputWithContext(context.Context) SystemEvpnExportRtOutput
}

type SystemEvpnExportRtArgs struct {
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (SystemEvpnExportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemEvpnExportRt)(nil)).Elem()
}

func (i SystemEvpnExportRtArgs) ToSystemEvpnExportRtOutput() SystemEvpnExportRtOutput {
	return i.ToSystemEvpnExportRtOutputWithContext(context.Background())
}

func (i SystemEvpnExportRtArgs) ToSystemEvpnExportRtOutputWithContext(ctx context.Context) SystemEvpnExportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnExportRtOutput)
}

func (i SystemEvpnExportRtArgs) ToOutput(ctx context.Context) pulumix.Output[SystemEvpnExportRt] {
	return pulumix.Output[SystemEvpnExportRt]{
		OutputState: i.ToSystemEvpnExportRtOutputWithContext(ctx).OutputState,
	}
}

// SystemEvpnExportRtArrayInput is an input type that accepts SystemEvpnExportRtArray and SystemEvpnExportRtArrayOutput values.
// You can construct a concrete instance of `SystemEvpnExportRtArrayInput` via:
//
//	SystemEvpnExportRtArray{ SystemEvpnExportRtArgs{...} }
type SystemEvpnExportRtArrayInput interface {
	pulumi.Input

	ToSystemEvpnExportRtArrayOutput() SystemEvpnExportRtArrayOutput
	ToSystemEvpnExportRtArrayOutputWithContext(context.Context) SystemEvpnExportRtArrayOutput
}

type SystemEvpnExportRtArray []SystemEvpnExportRtInput

func (SystemEvpnExportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemEvpnExportRt)(nil)).Elem()
}

func (i SystemEvpnExportRtArray) ToSystemEvpnExportRtArrayOutput() SystemEvpnExportRtArrayOutput {
	return i.ToSystemEvpnExportRtArrayOutputWithContext(context.Background())
}

func (i SystemEvpnExportRtArray) ToSystemEvpnExportRtArrayOutputWithContext(ctx context.Context) SystemEvpnExportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnExportRtArrayOutput)
}

func (i SystemEvpnExportRtArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemEvpnExportRt] {
	return pulumix.Output[[]SystemEvpnExportRt]{
		OutputState: i.ToSystemEvpnExportRtArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemEvpnExportRtOutput struct{ *pulumi.OutputState }

func (SystemEvpnExportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemEvpnExportRt)(nil)).Elem()
}

func (o SystemEvpnExportRtOutput) ToSystemEvpnExportRtOutput() SystemEvpnExportRtOutput {
	return o
}

func (o SystemEvpnExportRtOutput) ToSystemEvpnExportRtOutputWithContext(ctx context.Context) SystemEvpnExportRtOutput {
	return o
}

func (o SystemEvpnExportRtOutput) ToOutput(ctx context.Context) pulumix.Output[SystemEvpnExportRt] {
	return pulumix.Output[SystemEvpnExportRt]{
		OutputState: o.OutputState,
	}
}

func (o SystemEvpnExportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemEvpnExportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type SystemEvpnExportRtArrayOutput struct{ *pulumi.OutputState }

func (SystemEvpnExportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemEvpnExportRt)(nil)).Elem()
}

func (o SystemEvpnExportRtArrayOutput) ToSystemEvpnExportRtArrayOutput() SystemEvpnExportRtArrayOutput {
	return o
}

func (o SystemEvpnExportRtArrayOutput) ToSystemEvpnExportRtArrayOutputWithContext(ctx context.Context) SystemEvpnExportRtArrayOutput {
	return o
}

func (o SystemEvpnExportRtArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemEvpnExportRt] {
	return pulumix.Output[[]SystemEvpnExportRt]{
		OutputState: o.OutputState,
	}
}

func (o SystemEvpnExportRtArrayOutput) Index(i pulumi.IntInput) SystemEvpnExportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemEvpnExportRt {
		return vs[0].([]SystemEvpnExportRt)[vs[1].(int)]
	}).(SystemEvpnExportRtOutput)
}

type SystemEvpnImportRt struct {
	RouteTarget *string `pulumi:"routeTarget"`
}

// SystemEvpnImportRtInput is an input type that accepts SystemEvpnImportRtArgs and SystemEvpnImportRtOutput values.
// You can construct a concrete instance of `SystemEvpnImportRtInput` via:
//
//	SystemEvpnImportRtArgs{...}
type SystemEvpnImportRtInput interface {
	pulumi.Input

	ToSystemEvpnImportRtOutput() SystemEvpnImportRtOutput
	ToSystemEvpnImportRtOutputWithContext(context.Context) SystemEvpnImportRtOutput
}

type SystemEvpnImportRtArgs struct {
	RouteTarget pulumi.StringPtrInput `pulumi:"routeTarget"`
}

func (SystemEvpnImportRtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemEvpnImportRt)(nil)).Elem()
}

func (i SystemEvpnImportRtArgs) ToSystemEvpnImportRtOutput() SystemEvpnImportRtOutput {
	return i.ToSystemEvpnImportRtOutputWithContext(context.Background())
}

func (i SystemEvpnImportRtArgs) ToSystemEvpnImportRtOutputWithContext(ctx context.Context) SystemEvpnImportRtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnImportRtOutput)
}

func (i SystemEvpnImportRtArgs) ToOutput(ctx context.Context) pulumix.Output[SystemEvpnImportRt] {
	return pulumix.Output[SystemEvpnImportRt]{
		OutputState: i.ToSystemEvpnImportRtOutputWithContext(ctx).OutputState,
	}
}

// SystemEvpnImportRtArrayInput is an input type that accepts SystemEvpnImportRtArray and SystemEvpnImportRtArrayOutput values.
// You can construct a concrete instance of `SystemEvpnImportRtArrayInput` via:
//
//	SystemEvpnImportRtArray{ SystemEvpnImportRtArgs{...} }
type SystemEvpnImportRtArrayInput interface {
	pulumi.Input

	ToSystemEvpnImportRtArrayOutput() SystemEvpnImportRtArrayOutput
	ToSystemEvpnImportRtArrayOutputWithContext(context.Context) SystemEvpnImportRtArrayOutput
}

type SystemEvpnImportRtArray []SystemEvpnImportRtInput

func (SystemEvpnImportRtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemEvpnImportRt)(nil)).Elem()
}

func (i SystemEvpnImportRtArray) ToSystemEvpnImportRtArrayOutput() SystemEvpnImportRtArrayOutput {
	return i.ToSystemEvpnImportRtArrayOutputWithContext(context.Background())
}

func (i SystemEvpnImportRtArray) ToSystemEvpnImportRtArrayOutputWithContext(ctx context.Context) SystemEvpnImportRtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnImportRtArrayOutput)
}

func (i SystemEvpnImportRtArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemEvpnImportRt] {
	return pulumix.Output[[]SystemEvpnImportRt]{
		OutputState: i.ToSystemEvpnImportRtArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemEvpnImportRtOutput struct{ *pulumi.OutputState }

func (SystemEvpnImportRtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemEvpnImportRt)(nil)).Elem()
}

func (o SystemEvpnImportRtOutput) ToSystemEvpnImportRtOutput() SystemEvpnImportRtOutput {
	return o
}

func (o SystemEvpnImportRtOutput) ToSystemEvpnImportRtOutputWithContext(ctx context.Context) SystemEvpnImportRtOutput {
	return o
}

func (o SystemEvpnImportRtOutput) ToOutput(ctx context.Context) pulumix.Output[SystemEvpnImportRt] {
	return pulumix.Output[SystemEvpnImportRt]{
		OutputState: o.OutputState,
	}
}

func (o SystemEvpnImportRtOutput) RouteTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemEvpnImportRt) *string { return v.RouteTarget }).(pulumi.StringPtrOutput)
}

type SystemEvpnImportRtArrayOutput struct{ *pulumi.OutputState }

func (SystemEvpnImportRtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemEvpnImportRt)(nil)).Elem()
}

func (o SystemEvpnImportRtArrayOutput) ToSystemEvpnImportRtArrayOutput() SystemEvpnImportRtArrayOutput {
	return o
}

func (o SystemEvpnImportRtArrayOutput) ToSystemEvpnImportRtArrayOutputWithContext(ctx context.Context) SystemEvpnImportRtArrayOutput {
	return o
}

func (o SystemEvpnImportRtArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemEvpnImportRt] {
	return pulumix.Output[[]SystemEvpnImportRt]{
		OutputState: o.OutputState,
	}
}

func (o SystemEvpnImportRtArrayOutput) Index(i pulumi.IntInput) SystemEvpnImportRtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemEvpnImportRt {
		return vs[0].([]SystemEvpnImportRt)[vs[1].(int)]
	}).(SystemEvpnImportRtOutput)
}

type SystemFabricVpnAdvertisedSubnet struct {
	Access          *string `pulumi:"access"`
	BgpNetwork      *int    `pulumi:"bgpNetwork"`
	FirewallAddress *string `pulumi:"firewallAddress"`
	Id              *int    `pulumi:"id"`
	Policies        *int    `pulumi:"policies"`
	Prefix          *string `pulumi:"prefix"`
}

// SystemFabricVpnAdvertisedSubnetInput is an input type that accepts SystemFabricVpnAdvertisedSubnetArgs and SystemFabricVpnAdvertisedSubnetOutput values.
// You can construct a concrete instance of `SystemFabricVpnAdvertisedSubnetInput` via:
//
//	SystemFabricVpnAdvertisedSubnetArgs{...}
type SystemFabricVpnAdvertisedSubnetInput interface {
	pulumi.Input

	ToSystemFabricVpnAdvertisedSubnetOutput() SystemFabricVpnAdvertisedSubnetOutput
	ToSystemFabricVpnAdvertisedSubnetOutputWithContext(context.Context) SystemFabricVpnAdvertisedSubnetOutput
}

type SystemFabricVpnAdvertisedSubnetArgs struct {
	Access          pulumi.StringPtrInput `pulumi:"access"`
	BgpNetwork      pulumi.IntPtrInput    `pulumi:"bgpNetwork"`
	FirewallAddress pulumi.StringPtrInput `pulumi:"firewallAddress"`
	Id              pulumi.IntPtrInput    `pulumi:"id"`
	Policies        pulumi.IntPtrInput    `pulumi:"policies"`
	Prefix          pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SystemFabricVpnAdvertisedSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFabricVpnAdvertisedSubnet)(nil)).Elem()
}

func (i SystemFabricVpnAdvertisedSubnetArgs) ToSystemFabricVpnAdvertisedSubnetOutput() SystemFabricVpnAdvertisedSubnetOutput {
	return i.ToSystemFabricVpnAdvertisedSubnetOutputWithContext(context.Background())
}

func (i SystemFabricVpnAdvertisedSubnetArgs) ToSystemFabricVpnAdvertisedSubnetOutputWithContext(ctx context.Context) SystemFabricVpnAdvertisedSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFabricVpnAdvertisedSubnetOutput)
}

func (i SystemFabricVpnAdvertisedSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[SystemFabricVpnAdvertisedSubnet] {
	return pulumix.Output[SystemFabricVpnAdvertisedSubnet]{
		OutputState: i.ToSystemFabricVpnAdvertisedSubnetOutputWithContext(ctx).OutputState,
	}
}

// SystemFabricVpnAdvertisedSubnetArrayInput is an input type that accepts SystemFabricVpnAdvertisedSubnetArray and SystemFabricVpnAdvertisedSubnetArrayOutput values.
// You can construct a concrete instance of `SystemFabricVpnAdvertisedSubnetArrayInput` via:
//
//	SystemFabricVpnAdvertisedSubnetArray{ SystemFabricVpnAdvertisedSubnetArgs{...} }
type SystemFabricVpnAdvertisedSubnetArrayInput interface {
	pulumi.Input

	ToSystemFabricVpnAdvertisedSubnetArrayOutput() SystemFabricVpnAdvertisedSubnetArrayOutput
	ToSystemFabricVpnAdvertisedSubnetArrayOutputWithContext(context.Context) SystemFabricVpnAdvertisedSubnetArrayOutput
}

type SystemFabricVpnAdvertisedSubnetArray []SystemFabricVpnAdvertisedSubnetInput

func (SystemFabricVpnAdvertisedSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFabricVpnAdvertisedSubnet)(nil)).Elem()
}

func (i SystemFabricVpnAdvertisedSubnetArray) ToSystemFabricVpnAdvertisedSubnetArrayOutput() SystemFabricVpnAdvertisedSubnetArrayOutput {
	return i.ToSystemFabricVpnAdvertisedSubnetArrayOutputWithContext(context.Background())
}

func (i SystemFabricVpnAdvertisedSubnetArray) ToSystemFabricVpnAdvertisedSubnetArrayOutputWithContext(ctx context.Context) SystemFabricVpnAdvertisedSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFabricVpnAdvertisedSubnetArrayOutput)
}

func (i SystemFabricVpnAdvertisedSubnetArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemFabricVpnAdvertisedSubnet] {
	return pulumix.Output[[]SystemFabricVpnAdvertisedSubnet]{
		OutputState: i.ToSystemFabricVpnAdvertisedSubnetArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemFabricVpnAdvertisedSubnetOutput struct{ *pulumi.OutputState }

func (SystemFabricVpnAdvertisedSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFabricVpnAdvertisedSubnet)(nil)).Elem()
}

func (o SystemFabricVpnAdvertisedSubnetOutput) ToSystemFabricVpnAdvertisedSubnetOutput() SystemFabricVpnAdvertisedSubnetOutput {
	return o
}

func (o SystemFabricVpnAdvertisedSubnetOutput) ToSystemFabricVpnAdvertisedSubnetOutputWithContext(ctx context.Context) SystemFabricVpnAdvertisedSubnetOutput {
	return o
}

func (o SystemFabricVpnAdvertisedSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[SystemFabricVpnAdvertisedSubnet] {
	return pulumix.Output[SystemFabricVpnAdvertisedSubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemFabricVpnAdvertisedSubnetOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *string { return v.Access }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnAdvertisedSubnetOutput) BgpNetwork() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *int { return v.BgpNetwork }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnAdvertisedSubnetOutput) FirewallAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *string { return v.FirewallAddress }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnAdvertisedSubnetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnAdvertisedSubnetOutput) Policies() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *int { return v.Policies }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnAdvertisedSubnetOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnAdvertisedSubnet) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SystemFabricVpnAdvertisedSubnetArrayOutput struct{ *pulumi.OutputState }

func (SystemFabricVpnAdvertisedSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFabricVpnAdvertisedSubnet)(nil)).Elem()
}

func (o SystemFabricVpnAdvertisedSubnetArrayOutput) ToSystemFabricVpnAdvertisedSubnetArrayOutput() SystemFabricVpnAdvertisedSubnetArrayOutput {
	return o
}

func (o SystemFabricVpnAdvertisedSubnetArrayOutput) ToSystemFabricVpnAdvertisedSubnetArrayOutputWithContext(ctx context.Context) SystemFabricVpnAdvertisedSubnetArrayOutput {
	return o
}

func (o SystemFabricVpnAdvertisedSubnetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemFabricVpnAdvertisedSubnet] {
	return pulumix.Output[[]SystemFabricVpnAdvertisedSubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemFabricVpnAdvertisedSubnetArrayOutput) Index(i pulumi.IntInput) SystemFabricVpnAdvertisedSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFabricVpnAdvertisedSubnet {
		return vs[0].([]SystemFabricVpnAdvertisedSubnet)[vs[1].(int)]
	}).(SystemFabricVpnAdvertisedSubnetOutput)
}

type SystemFabricVpnOverlay struct {
	BgpNeighbor        *string `pulumi:"bgpNeighbor"`
	BgpNeighborGroup   *string `pulumi:"bgpNeighborGroup"`
	BgpNeighborRange   *int    `pulumi:"bgpNeighborRange"`
	BgpNetwork         *int    `pulumi:"bgpNetwork"`
	Interface          *string `pulumi:"interface"`
	IpsecPhase1        *string `pulumi:"ipsecPhase1"`
	Name               *string `pulumi:"name"`
	OverlayPolicy      *int    `pulumi:"overlayPolicy"`
	OverlayTunnelBlock *string `pulumi:"overlayTunnelBlock"`
	RemoteGw           *string `pulumi:"remoteGw"`
	RoutePolicy        *int    `pulumi:"routePolicy"`
	SdwanMember        *int    `pulumi:"sdwanMember"`
}

// SystemFabricVpnOverlayInput is an input type that accepts SystemFabricVpnOverlayArgs and SystemFabricVpnOverlayOutput values.
// You can construct a concrete instance of `SystemFabricVpnOverlayInput` via:
//
//	SystemFabricVpnOverlayArgs{...}
type SystemFabricVpnOverlayInput interface {
	pulumi.Input

	ToSystemFabricVpnOverlayOutput() SystemFabricVpnOverlayOutput
	ToSystemFabricVpnOverlayOutputWithContext(context.Context) SystemFabricVpnOverlayOutput
}

type SystemFabricVpnOverlayArgs struct {
	BgpNeighbor        pulumi.StringPtrInput `pulumi:"bgpNeighbor"`
	BgpNeighborGroup   pulumi.StringPtrInput `pulumi:"bgpNeighborGroup"`
	BgpNeighborRange   pulumi.IntPtrInput    `pulumi:"bgpNeighborRange"`
	BgpNetwork         pulumi.IntPtrInput    `pulumi:"bgpNetwork"`
	Interface          pulumi.StringPtrInput `pulumi:"interface"`
	IpsecPhase1        pulumi.StringPtrInput `pulumi:"ipsecPhase1"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OverlayPolicy      pulumi.IntPtrInput    `pulumi:"overlayPolicy"`
	OverlayTunnelBlock pulumi.StringPtrInput `pulumi:"overlayTunnelBlock"`
	RemoteGw           pulumi.StringPtrInput `pulumi:"remoteGw"`
	RoutePolicy        pulumi.IntPtrInput    `pulumi:"routePolicy"`
	SdwanMember        pulumi.IntPtrInput    `pulumi:"sdwanMember"`
}

func (SystemFabricVpnOverlayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFabricVpnOverlay)(nil)).Elem()
}

func (i SystemFabricVpnOverlayArgs) ToSystemFabricVpnOverlayOutput() SystemFabricVpnOverlayOutput {
	return i.ToSystemFabricVpnOverlayOutputWithContext(context.Background())
}

func (i SystemFabricVpnOverlayArgs) ToSystemFabricVpnOverlayOutputWithContext(ctx context.Context) SystemFabricVpnOverlayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFabricVpnOverlayOutput)
}

func (i SystemFabricVpnOverlayArgs) ToOutput(ctx context.Context) pulumix.Output[SystemFabricVpnOverlay] {
	return pulumix.Output[SystemFabricVpnOverlay]{
		OutputState: i.ToSystemFabricVpnOverlayOutputWithContext(ctx).OutputState,
	}
}

// SystemFabricVpnOverlayArrayInput is an input type that accepts SystemFabricVpnOverlayArray and SystemFabricVpnOverlayArrayOutput values.
// You can construct a concrete instance of `SystemFabricVpnOverlayArrayInput` via:
//
//	SystemFabricVpnOverlayArray{ SystemFabricVpnOverlayArgs{...} }
type SystemFabricVpnOverlayArrayInput interface {
	pulumi.Input

	ToSystemFabricVpnOverlayArrayOutput() SystemFabricVpnOverlayArrayOutput
	ToSystemFabricVpnOverlayArrayOutputWithContext(context.Context) SystemFabricVpnOverlayArrayOutput
}

type SystemFabricVpnOverlayArray []SystemFabricVpnOverlayInput

func (SystemFabricVpnOverlayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFabricVpnOverlay)(nil)).Elem()
}

func (i SystemFabricVpnOverlayArray) ToSystemFabricVpnOverlayArrayOutput() SystemFabricVpnOverlayArrayOutput {
	return i.ToSystemFabricVpnOverlayArrayOutputWithContext(context.Background())
}

func (i SystemFabricVpnOverlayArray) ToSystemFabricVpnOverlayArrayOutputWithContext(ctx context.Context) SystemFabricVpnOverlayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFabricVpnOverlayArrayOutput)
}

func (i SystemFabricVpnOverlayArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemFabricVpnOverlay] {
	return pulumix.Output[[]SystemFabricVpnOverlay]{
		OutputState: i.ToSystemFabricVpnOverlayArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemFabricVpnOverlayOutput struct{ *pulumi.OutputState }

func (SystemFabricVpnOverlayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFabricVpnOverlay)(nil)).Elem()
}

func (o SystemFabricVpnOverlayOutput) ToSystemFabricVpnOverlayOutput() SystemFabricVpnOverlayOutput {
	return o
}

func (o SystemFabricVpnOverlayOutput) ToSystemFabricVpnOverlayOutputWithContext(ctx context.Context) SystemFabricVpnOverlayOutput {
	return o
}

func (o SystemFabricVpnOverlayOutput) ToOutput(ctx context.Context) pulumix.Output[SystemFabricVpnOverlay] {
	return pulumix.Output[SystemFabricVpnOverlay]{
		OutputState: o.OutputState,
	}
}

func (o SystemFabricVpnOverlayOutput) BgpNeighbor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.BgpNeighbor }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) BgpNeighborGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.BgpNeighborGroup }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) BgpNeighborRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *int { return v.BgpNeighborRange }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) BgpNetwork() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *int { return v.BgpNetwork }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) IpsecPhase1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.IpsecPhase1 }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) OverlayPolicy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *int { return v.OverlayPolicy }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) OverlayTunnelBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.OverlayTunnelBlock }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) RemoteGw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *string { return v.RemoteGw }).(pulumi.StringPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) RoutePolicy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *int { return v.RoutePolicy }).(pulumi.IntPtrOutput)
}

func (o SystemFabricVpnOverlayOutput) SdwanMember() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFabricVpnOverlay) *int { return v.SdwanMember }).(pulumi.IntPtrOutput)
}

type SystemFabricVpnOverlayArrayOutput struct{ *pulumi.OutputState }

func (SystemFabricVpnOverlayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFabricVpnOverlay)(nil)).Elem()
}

func (o SystemFabricVpnOverlayArrayOutput) ToSystemFabricVpnOverlayArrayOutput() SystemFabricVpnOverlayArrayOutput {
	return o
}

func (o SystemFabricVpnOverlayArrayOutput) ToSystemFabricVpnOverlayArrayOutputWithContext(ctx context.Context) SystemFabricVpnOverlayArrayOutput {
	return o
}

func (o SystemFabricVpnOverlayArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemFabricVpnOverlay] {
	return pulumix.Output[[]SystemFabricVpnOverlay]{
		OutputState: o.OutputState,
	}
}

func (o SystemFabricVpnOverlayArrayOutput) Index(i pulumi.IntInput) SystemFabricVpnOverlayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFabricVpnOverlay {
		return vs[0].([]SystemFabricVpnOverlay)[vs[1].(int)]
	}).(SystemFabricVpnOverlayOutput)
}

type SystemFederatedUpgradeNodeList struct {
	CoordinatingFortigate *string `pulumi:"coordinatingFortigate"`
	DeviceType            *string `pulumi:"deviceType"`
	MaximumMinutes        *int    `pulumi:"maximumMinutes"`
	Serial                *string `pulumi:"serial"`
	SetupTime             *string `pulumi:"setupTime"`
	Time                  *string `pulumi:"time"`
	Timing                *string `pulumi:"timing"`
	UpgradePath           *string `pulumi:"upgradePath"`
}

// SystemFederatedUpgradeNodeListInput is an input type that accepts SystemFederatedUpgradeNodeListArgs and SystemFederatedUpgradeNodeListOutput values.
// You can construct a concrete instance of `SystemFederatedUpgradeNodeListInput` via:
//
//	SystemFederatedUpgradeNodeListArgs{...}
type SystemFederatedUpgradeNodeListInput interface {
	pulumi.Input

	ToSystemFederatedUpgradeNodeListOutput() SystemFederatedUpgradeNodeListOutput
	ToSystemFederatedUpgradeNodeListOutputWithContext(context.Context) SystemFederatedUpgradeNodeListOutput
}

type SystemFederatedUpgradeNodeListArgs struct {
	CoordinatingFortigate pulumi.StringPtrInput `pulumi:"coordinatingFortigate"`
	DeviceType            pulumi.StringPtrInput `pulumi:"deviceType"`
	MaximumMinutes        pulumi.IntPtrInput    `pulumi:"maximumMinutes"`
	Serial                pulumi.StringPtrInput `pulumi:"serial"`
	SetupTime             pulumi.StringPtrInput `pulumi:"setupTime"`
	Time                  pulumi.StringPtrInput `pulumi:"time"`
	Timing                pulumi.StringPtrInput `pulumi:"timing"`
	UpgradePath           pulumi.StringPtrInput `pulumi:"upgradePath"`
}

func (SystemFederatedUpgradeNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFederatedUpgradeNodeList)(nil)).Elem()
}

func (i SystemFederatedUpgradeNodeListArgs) ToSystemFederatedUpgradeNodeListOutput() SystemFederatedUpgradeNodeListOutput {
	return i.ToSystemFederatedUpgradeNodeListOutputWithContext(context.Background())
}

func (i SystemFederatedUpgradeNodeListArgs) ToSystemFederatedUpgradeNodeListOutputWithContext(ctx context.Context) SystemFederatedUpgradeNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFederatedUpgradeNodeListOutput)
}

func (i SystemFederatedUpgradeNodeListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemFederatedUpgradeNodeList] {
	return pulumix.Output[SystemFederatedUpgradeNodeList]{
		OutputState: i.ToSystemFederatedUpgradeNodeListOutputWithContext(ctx).OutputState,
	}
}

// SystemFederatedUpgradeNodeListArrayInput is an input type that accepts SystemFederatedUpgradeNodeListArray and SystemFederatedUpgradeNodeListArrayOutput values.
// You can construct a concrete instance of `SystemFederatedUpgradeNodeListArrayInput` via:
//
//	SystemFederatedUpgradeNodeListArray{ SystemFederatedUpgradeNodeListArgs{...} }
type SystemFederatedUpgradeNodeListArrayInput interface {
	pulumi.Input

	ToSystemFederatedUpgradeNodeListArrayOutput() SystemFederatedUpgradeNodeListArrayOutput
	ToSystemFederatedUpgradeNodeListArrayOutputWithContext(context.Context) SystemFederatedUpgradeNodeListArrayOutput
}

type SystemFederatedUpgradeNodeListArray []SystemFederatedUpgradeNodeListInput

func (SystemFederatedUpgradeNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFederatedUpgradeNodeList)(nil)).Elem()
}

func (i SystemFederatedUpgradeNodeListArray) ToSystemFederatedUpgradeNodeListArrayOutput() SystemFederatedUpgradeNodeListArrayOutput {
	return i.ToSystemFederatedUpgradeNodeListArrayOutputWithContext(context.Background())
}

func (i SystemFederatedUpgradeNodeListArray) ToSystemFederatedUpgradeNodeListArrayOutputWithContext(ctx context.Context) SystemFederatedUpgradeNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFederatedUpgradeNodeListArrayOutput)
}

func (i SystemFederatedUpgradeNodeListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemFederatedUpgradeNodeList] {
	return pulumix.Output[[]SystemFederatedUpgradeNodeList]{
		OutputState: i.ToSystemFederatedUpgradeNodeListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemFederatedUpgradeNodeListOutput struct{ *pulumi.OutputState }

func (SystemFederatedUpgradeNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFederatedUpgradeNodeList)(nil)).Elem()
}

func (o SystemFederatedUpgradeNodeListOutput) ToSystemFederatedUpgradeNodeListOutput() SystemFederatedUpgradeNodeListOutput {
	return o
}

func (o SystemFederatedUpgradeNodeListOutput) ToSystemFederatedUpgradeNodeListOutputWithContext(ctx context.Context) SystemFederatedUpgradeNodeListOutput {
	return o
}

func (o SystemFederatedUpgradeNodeListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemFederatedUpgradeNodeList] {
	return pulumix.Output[SystemFederatedUpgradeNodeList]{
		OutputState: o.OutputState,
	}
}

func (o SystemFederatedUpgradeNodeListOutput) CoordinatingFortigate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.CoordinatingFortigate }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) MaximumMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *int { return v.MaximumMinutes }).(pulumi.IntPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) Serial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.Serial }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) SetupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.SetupTime }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.Time }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

func (o SystemFederatedUpgradeNodeListOutput) UpgradePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemFederatedUpgradeNodeList) *string { return v.UpgradePath }).(pulumi.StringPtrOutput)
}

type SystemFederatedUpgradeNodeListArrayOutput struct{ *pulumi.OutputState }

func (SystemFederatedUpgradeNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFederatedUpgradeNodeList)(nil)).Elem()
}

func (o SystemFederatedUpgradeNodeListArrayOutput) ToSystemFederatedUpgradeNodeListArrayOutput() SystemFederatedUpgradeNodeListArrayOutput {
	return o
}

func (o SystemFederatedUpgradeNodeListArrayOutput) ToSystemFederatedUpgradeNodeListArrayOutputWithContext(ctx context.Context) SystemFederatedUpgradeNodeListArrayOutput {
	return o
}

func (o SystemFederatedUpgradeNodeListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemFederatedUpgradeNodeList] {
	return pulumix.Output[[]SystemFederatedUpgradeNodeList]{
		OutputState: o.OutputState,
	}
}

func (o SystemFederatedUpgradeNodeListArrayOutput) Index(i pulumi.IntInput) SystemFederatedUpgradeNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFederatedUpgradeNodeList {
		return vs[0].([]SystemFederatedUpgradeNodeList)[vs[1].(int)]
	}).(SystemFederatedUpgradeNodeListOutput)
}

type SystemGeoipOverrideIp6Range struct {
	EndIp   *string `pulumi:"endIp"`
	Id      *int    `pulumi:"id"`
	StartIp *string `pulumi:"startIp"`
}

// SystemGeoipOverrideIp6RangeInput is an input type that accepts SystemGeoipOverrideIp6RangeArgs and SystemGeoipOverrideIp6RangeOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideIp6RangeInput` via:
//
//	SystemGeoipOverrideIp6RangeArgs{...}
type SystemGeoipOverrideIp6RangeInput interface {
	pulumi.Input

	ToSystemGeoipOverrideIp6RangeOutput() SystemGeoipOverrideIp6RangeOutput
	ToSystemGeoipOverrideIp6RangeOutputWithContext(context.Context) SystemGeoipOverrideIp6RangeOutput
}

type SystemGeoipOverrideIp6RangeArgs struct {
	EndIp   pulumi.StringPtrInput `pulumi:"endIp"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (SystemGeoipOverrideIp6RangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipOverrideIp6Range)(nil)).Elem()
}

func (i SystemGeoipOverrideIp6RangeArgs) ToSystemGeoipOverrideIp6RangeOutput() SystemGeoipOverrideIp6RangeOutput {
	return i.ToSystemGeoipOverrideIp6RangeOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideIp6RangeArgs) ToSystemGeoipOverrideIp6RangeOutputWithContext(ctx context.Context) SystemGeoipOverrideIp6RangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideIp6RangeOutput)
}

func (i SystemGeoipOverrideIp6RangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemGeoipOverrideIp6Range] {
	return pulumix.Output[SystemGeoipOverrideIp6Range]{
		OutputState: i.ToSystemGeoipOverrideIp6RangeOutputWithContext(ctx).OutputState,
	}
}

// SystemGeoipOverrideIp6RangeArrayInput is an input type that accepts SystemGeoipOverrideIp6RangeArray and SystemGeoipOverrideIp6RangeArrayOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideIp6RangeArrayInput` via:
//
//	SystemGeoipOverrideIp6RangeArray{ SystemGeoipOverrideIp6RangeArgs{...} }
type SystemGeoipOverrideIp6RangeArrayInput interface {
	pulumi.Input

	ToSystemGeoipOverrideIp6RangeArrayOutput() SystemGeoipOverrideIp6RangeArrayOutput
	ToSystemGeoipOverrideIp6RangeArrayOutputWithContext(context.Context) SystemGeoipOverrideIp6RangeArrayOutput
}

type SystemGeoipOverrideIp6RangeArray []SystemGeoipOverrideIp6RangeInput

func (SystemGeoipOverrideIp6RangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipOverrideIp6Range)(nil)).Elem()
}

func (i SystemGeoipOverrideIp6RangeArray) ToSystemGeoipOverrideIp6RangeArrayOutput() SystemGeoipOverrideIp6RangeArrayOutput {
	return i.ToSystemGeoipOverrideIp6RangeArrayOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideIp6RangeArray) ToSystemGeoipOverrideIp6RangeArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideIp6RangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideIp6RangeArrayOutput)
}

func (i SystemGeoipOverrideIp6RangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemGeoipOverrideIp6Range] {
	return pulumix.Output[[]SystemGeoipOverrideIp6Range]{
		OutputState: i.ToSystemGeoipOverrideIp6RangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemGeoipOverrideIp6RangeOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideIp6RangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipOverrideIp6Range)(nil)).Elem()
}

func (o SystemGeoipOverrideIp6RangeOutput) ToSystemGeoipOverrideIp6RangeOutput() SystemGeoipOverrideIp6RangeOutput {
	return o
}

func (o SystemGeoipOverrideIp6RangeOutput) ToSystemGeoipOverrideIp6RangeOutputWithContext(ctx context.Context) SystemGeoipOverrideIp6RangeOutput {
	return o
}

func (o SystemGeoipOverrideIp6RangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemGeoipOverrideIp6Range] {
	return pulumix.Output[SystemGeoipOverrideIp6Range]{
		OutputState: o.OutputState,
	}
}

func (o SystemGeoipOverrideIp6RangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIp6Range) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o SystemGeoipOverrideIp6RangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIp6Range) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemGeoipOverrideIp6RangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIp6Range) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type SystemGeoipOverrideIp6RangeArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideIp6RangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipOverrideIp6Range)(nil)).Elem()
}

func (o SystemGeoipOverrideIp6RangeArrayOutput) ToSystemGeoipOverrideIp6RangeArrayOutput() SystemGeoipOverrideIp6RangeArrayOutput {
	return o
}

func (o SystemGeoipOverrideIp6RangeArrayOutput) ToSystemGeoipOverrideIp6RangeArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideIp6RangeArrayOutput {
	return o
}

func (o SystemGeoipOverrideIp6RangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemGeoipOverrideIp6Range] {
	return pulumix.Output[[]SystemGeoipOverrideIp6Range]{
		OutputState: o.OutputState,
	}
}

func (o SystemGeoipOverrideIp6RangeArrayOutput) Index(i pulumi.IntInput) SystemGeoipOverrideIp6RangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemGeoipOverrideIp6Range {
		return vs[0].([]SystemGeoipOverrideIp6Range)[vs[1].(int)]
	}).(SystemGeoipOverrideIp6RangeOutput)
}

type SystemGeoipOverrideIpRange struct {
	EndIp   *string `pulumi:"endIp"`
	Id      *int    `pulumi:"id"`
	StartIp *string `pulumi:"startIp"`
}

// SystemGeoipOverrideIpRangeInput is an input type that accepts SystemGeoipOverrideIpRangeArgs and SystemGeoipOverrideIpRangeOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideIpRangeInput` via:
//
//	SystemGeoipOverrideIpRangeArgs{...}
type SystemGeoipOverrideIpRangeInput interface {
	pulumi.Input

	ToSystemGeoipOverrideIpRangeOutput() SystemGeoipOverrideIpRangeOutput
	ToSystemGeoipOverrideIpRangeOutputWithContext(context.Context) SystemGeoipOverrideIpRangeOutput
}

type SystemGeoipOverrideIpRangeArgs struct {
	EndIp   pulumi.StringPtrInput `pulumi:"endIp"`
	Id      pulumi.IntPtrInput    `pulumi:"id"`
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (SystemGeoipOverrideIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipOverrideIpRange)(nil)).Elem()
}

func (i SystemGeoipOverrideIpRangeArgs) ToSystemGeoipOverrideIpRangeOutput() SystemGeoipOverrideIpRangeOutput {
	return i.ToSystemGeoipOverrideIpRangeOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideIpRangeArgs) ToSystemGeoipOverrideIpRangeOutputWithContext(ctx context.Context) SystemGeoipOverrideIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideIpRangeOutput)
}

func (i SystemGeoipOverrideIpRangeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemGeoipOverrideIpRange] {
	return pulumix.Output[SystemGeoipOverrideIpRange]{
		OutputState: i.ToSystemGeoipOverrideIpRangeOutputWithContext(ctx).OutputState,
	}
}

// SystemGeoipOverrideIpRangeArrayInput is an input type that accepts SystemGeoipOverrideIpRangeArray and SystemGeoipOverrideIpRangeArrayOutput values.
// You can construct a concrete instance of `SystemGeoipOverrideIpRangeArrayInput` via:
//
//	SystemGeoipOverrideIpRangeArray{ SystemGeoipOverrideIpRangeArgs{...} }
type SystemGeoipOverrideIpRangeArrayInput interface {
	pulumi.Input

	ToSystemGeoipOverrideIpRangeArrayOutput() SystemGeoipOverrideIpRangeArrayOutput
	ToSystemGeoipOverrideIpRangeArrayOutputWithContext(context.Context) SystemGeoipOverrideIpRangeArrayOutput
}

type SystemGeoipOverrideIpRangeArray []SystemGeoipOverrideIpRangeInput

func (SystemGeoipOverrideIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipOverrideIpRange)(nil)).Elem()
}

func (i SystemGeoipOverrideIpRangeArray) ToSystemGeoipOverrideIpRangeArrayOutput() SystemGeoipOverrideIpRangeArrayOutput {
	return i.ToSystemGeoipOverrideIpRangeArrayOutputWithContext(context.Background())
}

func (i SystemGeoipOverrideIpRangeArray) ToSystemGeoipOverrideIpRangeArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGeoipOverrideIpRangeArrayOutput)
}

func (i SystemGeoipOverrideIpRangeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemGeoipOverrideIpRange] {
	return pulumix.Output[[]SystemGeoipOverrideIpRange]{
		OutputState: i.ToSystemGeoipOverrideIpRangeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemGeoipOverrideIpRangeOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGeoipOverrideIpRange)(nil)).Elem()
}

func (o SystemGeoipOverrideIpRangeOutput) ToSystemGeoipOverrideIpRangeOutput() SystemGeoipOverrideIpRangeOutput {
	return o
}

func (o SystemGeoipOverrideIpRangeOutput) ToSystemGeoipOverrideIpRangeOutputWithContext(ctx context.Context) SystemGeoipOverrideIpRangeOutput {
	return o
}

func (o SystemGeoipOverrideIpRangeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemGeoipOverrideIpRange] {
	return pulumix.Output[SystemGeoipOverrideIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemGeoipOverrideIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o SystemGeoipOverrideIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemGeoipOverrideIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemGeoipOverrideIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type SystemGeoipOverrideIpRangeArrayOutput struct{ *pulumi.OutputState }

func (SystemGeoipOverrideIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGeoipOverrideIpRange)(nil)).Elem()
}

func (o SystemGeoipOverrideIpRangeArrayOutput) ToSystemGeoipOverrideIpRangeArrayOutput() SystemGeoipOverrideIpRangeArrayOutput {
	return o
}

func (o SystemGeoipOverrideIpRangeArrayOutput) ToSystemGeoipOverrideIpRangeArrayOutputWithContext(ctx context.Context) SystemGeoipOverrideIpRangeArrayOutput {
	return o
}

func (o SystemGeoipOverrideIpRangeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemGeoipOverrideIpRange] {
	return pulumix.Output[[]SystemGeoipOverrideIpRange]{
		OutputState: o.OutputState,
	}
}

func (o SystemGeoipOverrideIpRangeArrayOutput) Index(i pulumi.IntInput) SystemGeoipOverrideIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemGeoipOverrideIpRange {
		return vs[0].([]SystemGeoipOverrideIpRange)[vs[1].(int)]
	}).(SystemGeoipOverrideIpRangeOutput)
}

type SystemGlobalInternetServiceDownloadList struct {
	Id *int `pulumi:"id"`
}

// SystemGlobalInternetServiceDownloadListInput is an input type that accepts SystemGlobalInternetServiceDownloadListArgs and SystemGlobalInternetServiceDownloadListOutput values.
// You can construct a concrete instance of `SystemGlobalInternetServiceDownloadListInput` via:
//
//	SystemGlobalInternetServiceDownloadListArgs{...}
type SystemGlobalInternetServiceDownloadListInput interface {
	pulumi.Input

	ToSystemGlobalInternetServiceDownloadListOutput() SystemGlobalInternetServiceDownloadListOutput
	ToSystemGlobalInternetServiceDownloadListOutputWithContext(context.Context) SystemGlobalInternetServiceDownloadListOutput
}

type SystemGlobalInternetServiceDownloadListArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemGlobalInternetServiceDownloadListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i SystemGlobalInternetServiceDownloadListArgs) ToSystemGlobalInternetServiceDownloadListOutput() SystemGlobalInternetServiceDownloadListOutput {
	return i.ToSystemGlobalInternetServiceDownloadListOutputWithContext(context.Background())
}

func (i SystemGlobalInternetServiceDownloadListArgs) ToSystemGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) SystemGlobalInternetServiceDownloadListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGlobalInternetServiceDownloadListOutput)
}

func (i SystemGlobalInternetServiceDownloadListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemGlobalInternetServiceDownloadList] {
	return pulumix.Output[SystemGlobalInternetServiceDownloadList]{
		OutputState: i.ToSystemGlobalInternetServiceDownloadListOutputWithContext(ctx).OutputState,
	}
}

// SystemGlobalInternetServiceDownloadListArrayInput is an input type that accepts SystemGlobalInternetServiceDownloadListArray and SystemGlobalInternetServiceDownloadListArrayOutput values.
// You can construct a concrete instance of `SystemGlobalInternetServiceDownloadListArrayInput` via:
//
//	SystemGlobalInternetServiceDownloadListArray{ SystemGlobalInternetServiceDownloadListArgs{...} }
type SystemGlobalInternetServiceDownloadListArrayInput interface {
	pulumi.Input

	ToSystemGlobalInternetServiceDownloadListArrayOutput() SystemGlobalInternetServiceDownloadListArrayOutput
	ToSystemGlobalInternetServiceDownloadListArrayOutputWithContext(context.Context) SystemGlobalInternetServiceDownloadListArrayOutput
}

type SystemGlobalInternetServiceDownloadListArray []SystemGlobalInternetServiceDownloadListInput

func (SystemGlobalInternetServiceDownloadListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (i SystemGlobalInternetServiceDownloadListArray) ToSystemGlobalInternetServiceDownloadListArrayOutput() SystemGlobalInternetServiceDownloadListArrayOutput {
	return i.ToSystemGlobalInternetServiceDownloadListArrayOutputWithContext(context.Background())
}

func (i SystemGlobalInternetServiceDownloadListArray) ToSystemGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) SystemGlobalInternetServiceDownloadListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemGlobalInternetServiceDownloadListArrayOutput)
}

func (i SystemGlobalInternetServiceDownloadListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemGlobalInternetServiceDownloadList] {
	return pulumix.Output[[]SystemGlobalInternetServiceDownloadList]{
		OutputState: i.ToSystemGlobalInternetServiceDownloadListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemGlobalInternetServiceDownloadListOutput struct{ *pulumi.OutputState }

func (SystemGlobalInternetServiceDownloadListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o SystemGlobalInternetServiceDownloadListOutput) ToSystemGlobalInternetServiceDownloadListOutput() SystemGlobalInternetServiceDownloadListOutput {
	return o
}

func (o SystemGlobalInternetServiceDownloadListOutput) ToSystemGlobalInternetServiceDownloadListOutputWithContext(ctx context.Context) SystemGlobalInternetServiceDownloadListOutput {
	return o
}

func (o SystemGlobalInternetServiceDownloadListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemGlobalInternetServiceDownloadList] {
	return pulumix.Output[SystemGlobalInternetServiceDownloadList]{
		OutputState: o.OutputState,
	}
}

func (o SystemGlobalInternetServiceDownloadListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemGlobalInternetServiceDownloadList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemGlobalInternetServiceDownloadListArrayOutput struct{ *pulumi.OutputState }

func (SystemGlobalInternetServiceDownloadListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemGlobalInternetServiceDownloadList)(nil)).Elem()
}

func (o SystemGlobalInternetServiceDownloadListArrayOutput) ToSystemGlobalInternetServiceDownloadListArrayOutput() SystemGlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o SystemGlobalInternetServiceDownloadListArrayOutput) ToSystemGlobalInternetServiceDownloadListArrayOutputWithContext(ctx context.Context) SystemGlobalInternetServiceDownloadListArrayOutput {
	return o
}

func (o SystemGlobalInternetServiceDownloadListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemGlobalInternetServiceDownloadList] {
	return pulumix.Output[[]SystemGlobalInternetServiceDownloadList]{
		OutputState: o.OutputState,
	}
}

func (o SystemGlobalInternetServiceDownloadListArrayOutput) Index(i pulumi.IntInput) SystemGlobalInternetServiceDownloadListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemGlobalInternetServiceDownloadList {
		return vs[0].([]SystemGlobalInternetServiceDownloadList)[vs[1].(int)]
	}).(SystemGlobalInternetServiceDownloadListOutput)
}

type SystemHaHaMgmtInterface struct {
	Dst       *string `pulumi:"dst"`
	Gateway   *string `pulumi:"gateway"`
	Gateway6  *string `pulumi:"gateway6"`
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
}

// SystemHaHaMgmtInterfaceInput is an input type that accepts SystemHaHaMgmtInterfaceArgs and SystemHaHaMgmtInterfaceOutput values.
// You can construct a concrete instance of `SystemHaHaMgmtInterfaceInput` via:
//
//	SystemHaHaMgmtInterfaceArgs{...}
type SystemHaHaMgmtInterfaceInput interface {
	pulumi.Input

	ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput
	ToSystemHaHaMgmtInterfaceOutputWithContext(context.Context) SystemHaHaMgmtInterfaceOutput
}

type SystemHaHaMgmtInterfaceArgs struct {
	Dst       pulumi.StringPtrInput `pulumi:"dst"`
	Gateway   pulumi.StringPtrInput `pulumi:"gateway"`
	Gateway6  pulumi.StringPtrInput `pulumi:"gateway6"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
}

func (SystemHaHaMgmtInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaHaMgmtInterface)(nil)).Elem()
}

func (i SystemHaHaMgmtInterfaceArgs) ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput {
	return i.ToSystemHaHaMgmtInterfaceOutputWithContext(context.Background())
}

func (i SystemHaHaMgmtInterfaceArgs) ToSystemHaHaMgmtInterfaceOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaHaMgmtInterfaceOutput)
}

func (i SystemHaHaMgmtInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemHaHaMgmtInterface] {
	return pulumix.Output[SystemHaHaMgmtInterface]{
		OutputState: i.ToSystemHaHaMgmtInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemHaHaMgmtInterfaceArrayInput is an input type that accepts SystemHaHaMgmtInterfaceArray and SystemHaHaMgmtInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemHaHaMgmtInterfaceArrayInput` via:
//
//	SystemHaHaMgmtInterfaceArray{ SystemHaHaMgmtInterfaceArgs{...} }
type SystemHaHaMgmtInterfaceArrayInput interface {
	pulumi.Input

	ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput
	ToSystemHaHaMgmtInterfaceArrayOutputWithContext(context.Context) SystemHaHaMgmtInterfaceArrayOutput
}

type SystemHaHaMgmtInterfaceArray []SystemHaHaMgmtInterfaceInput

func (SystemHaHaMgmtInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaHaMgmtInterface)(nil)).Elem()
}

func (i SystemHaHaMgmtInterfaceArray) ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput {
	return i.ToSystemHaHaMgmtInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemHaHaMgmtInterfaceArray) ToSystemHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaHaMgmtInterfaceArrayOutput)
}

func (i SystemHaHaMgmtInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaHaMgmtInterface] {
	return pulumix.Output[[]SystemHaHaMgmtInterface]{
		OutputState: i.ToSystemHaHaMgmtInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemHaHaMgmtInterfaceOutput struct{ *pulumi.OutputState }

func (SystemHaHaMgmtInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaHaMgmtInterface)(nil)).Elem()
}

func (o SystemHaHaMgmtInterfaceOutput) ToSystemHaHaMgmtInterfaceOutput() SystemHaHaMgmtInterfaceOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceOutput) ToSystemHaHaMgmtInterfaceOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemHaHaMgmtInterface] {
	return pulumix.Output[SystemHaHaMgmtInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaHaMgmtInterfaceOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemHaHaMgmtInterfaceOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaHaMgmtInterface) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

type SystemHaHaMgmtInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemHaHaMgmtInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaHaMgmtInterface)(nil)).Elem()
}

func (o SystemHaHaMgmtInterfaceArrayOutput) ToSystemHaHaMgmtInterfaceArrayOutput() SystemHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceArrayOutput) ToSystemHaHaMgmtInterfaceArrayOutputWithContext(ctx context.Context) SystemHaHaMgmtInterfaceArrayOutput {
	return o
}

func (o SystemHaHaMgmtInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaHaMgmtInterface] {
	return pulumix.Output[[]SystemHaHaMgmtInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaHaMgmtInterfaceArrayOutput) Index(i pulumi.IntInput) SystemHaHaMgmtInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaHaMgmtInterface {
		return vs[0].([]SystemHaHaMgmtInterface)[vs[1].(int)]
	}).(SystemHaHaMgmtInterfaceOutput)
}

type SystemHaSecondaryVcluster struct {
	Monitor                       *string `pulumi:"monitor"`
	Override                      *string `pulumi:"override"`
	OverrideWaitTime              *int    `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   *int    `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    *string `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset *string `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     *string `pulumi:"pingserverSlaveForceReset"`
	Priority                      *int    `pulumi:"priority"`
	VclusterId                    *int    `pulumi:"vclusterId"`
	Vdom                          *string `pulumi:"vdom"`
}

// SystemHaSecondaryVclusterInput is an input type that accepts SystemHaSecondaryVclusterArgs and SystemHaSecondaryVclusterOutput values.
// You can construct a concrete instance of `SystemHaSecondaryVclusterInput` via:
//
//	SystemHaSecondaryVclusterArgs{...}
type SystemHaSecondaryVclusterInput interface {
	pulumi.Input

	ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput
	ToSystemHaSecondaryVclusterOutputWithContext(context.Context) SystemHaSecondaryVclusterOutput
}

type SystemHaSecondaryVclusterArgs struct {
	Monitor                       pulumi.StringPtrInput `pulumi:"monitor"`
	Override                      pulumi.StringPtrInput `pulumi:"override"`
	OverrideWaitTime              pulumi.IntPtrInput    `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   pulumi.IntPtrInput    `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    pulumi.StringPtrInput `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset pulumi.StringPtrInput `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     pulumi.StringPtrInput `pulumi:"pingserverSlaveForceReset"`
	Priority                      pulumi.IntPtrInput    `pulumi:"priority"`
	VclusterId                    pulumi.IntPtrInput    `pulumi:"vclusterId"`
	Vdom                          pulumi.StringPtrInput `pulumi:"vdom"`
}

func (SystemHaSecondaryVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaSecondaryVcluster)(nil)).Elem()
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput {
	return i.ToSystemHaSecondaryVclusterOutputWithContext(context.Background())
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterOutput)
}

func (i SystemHaSecondaryVclusterArgs) ToOutput(ctx context.Context) pulumix.Output[SystemHaSecondaryVcluster] {
	return pulumix.Output[SystemHaSecondaryVcluster]{
		OutputState: i.ToSystemHaSecondaryVclusterOutputWithContext(ctx).OutputState,
	}
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return i.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i SystemHaSecondaryVclusterArgs) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterOutput).ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx)
}

// SystemHaSecondaryVclusterPtrInput is an input type that accepts SystemHaSecondaryVclusterArgs, SystemHaSecondaryVclusterPtr and SystemHaSecondaryVclusterPtrOutput values.
// You can construct a concrete instance of `SystemHaSecondaryVclusterPtrInput` via:
//
//	        SystemHaSecondaryVclusterArgs{...}
//
//	or:
//
//	        nil
type SystemHaSecondaryVclusterPtrInput interface {
	pulumi.Input

	ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput
	ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Context) SystemHaSecondaryVclusterPtrOutput
}

type systemHaSecondaryVclusterPtrType SystemHaSecondaryVclusterArgs

func SystemHaSecondaryVclusterPtr(v *SystemHaSecondaryVclusterArgs) SystemHaSecondaryVclusterPtrInput {
	return (*systemHaSecondaryVclusterPtrType)(v)
}

func (*systemHaSecondaryVclusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemHaSecondaryVcluster)(nil)).Elem()
}

func (i *systemHaSecondaryVclusterPtrType) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return i.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (i *systemHaSecondaryVclusterPtrType) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaSecondaryVclusterPtrOutput)
}

func (i *systemHaSecondaryVclusterPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemHaSecondaryVcluster] {
	return pulumix.Output[*SystemHaSecondaryVcluster]{
		OutputState: i.ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemHaSecondaryVclusterOutput struct{ *pulumi.OutputState }

func (SystemHaSecondaryVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaSecondaryVcluster)(nil)).Elem()
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterOutput() SystemHaSecondaryVclusterOutput {
	return o
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterOutput {
	return o
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return o.ToSystemHaSecondaryVclusterPtrOutputWithContext(context.Background())
}

func (o SystemHaSecondaryVclusterOutput) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemHaSecondaryVcluster) *SystemHaSecondaryVcluster {
		return &v
	}).(SystemHaSecondaryVclusterPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) ToOutput(ctx context.Context) pulumix.Output[SystemHaSecondaryVcluster] {
	return pulumix.Output[SystemHaSecondaryVcluster]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaSecondaryVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaSecondaryVcluster) *string { return v.Vdom }).(pulumi.StringPtrOutput)
}

type SystemHaSecondaryVclusterPtrOutput struct{ *pulumi.OutputState }

func (SystemHaSecondaryVclusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemHaSecondaryVcluster)(nil)).Elem()
}

func (o SystemHaSecondaryVclusterPtrOutput) ToSystemHaSecondaryVclusterPtrOutput() SystemHaSecondaryVclusterPtrOutput {
	return o
}

func (o SystemHaSecondaryVclusterPtrOutput) ToSystemHaSecondaryVclusterPtrOutputWithContext(ctx context.Context) SystemHaSecondaryVclusterPtrOutput {
	return o
}

func (o SystemHaSecondaryVclusterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemHaSecondaryVcluster] {
	return pulumix.Output[*SystemHaSecondaryVcluster]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaSecondaryVclusterPtrOutput) Elem() SystemHaSecondaryVclusterOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) SystemHaSecondaryVcluster {
		if v != nil {
			return *v
		}
		var ret SystemHaSecondaryVcluster
		return ret
	}).(SystemHaSecondaryVclusterOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Monitor
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Override
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.OverrideWaitTime
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.PingserverFailoverThreshold
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverMonitorInterface
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSecondaryForceReset
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.PingserverSlaveForceReset
	}).(pulumi.StringPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *int {
		if v == nil {
			return nil
		}
		return v.VclusterId
	}).(pulumi.IntPtrOutput)
}

func (o SystemHaSecondaryVclusterPtrOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemHaSecondaryVcluster) *string {
		if v == nil {
			return nil
		}
		return v.Vdom
	}).(pulumi.StringPtrOutput)
}

type SystemHaUnicastPeer struct {
	Id     *int    `pulumi:"id"`
	PeerIp *string `pulumi:"peerIp"`
}

// SystemHaUnicastPeerInput is an input type that accepts SystemHaUnicastPeerArgs and SystemHaUnicastPeerOutput values.
// You can construct a concrete instance of `SystemHaUnicastPeerInput` via:
//
//	SystemHaUnicastPeerArgs{...}
type SystemHaUnicastPeerInput interface {
	pulumi.Input

	ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput
	ToSystemHaUnicastPeerOutputWithContext(context.Context) SystemHaUnicastPeerOutput
}

type SystemHaUnicastPeerArgs struct {
	Id     pulumi.IntPtrInput    `pulumi:"id"`
	PeerIp pulumi.StringPtrInput `pulumi:"peerIp"`
}

func (SystemHaUnicastPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaUnicastPeer)(nil)).Elem()
}

func (i SystemHaUnicastPeerArgs) ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput {
	return i.ToSystemHaUnicastPeerOutputWithContext(context.Background())
}

func (i SystemHaUnicastPeerArgs) ToSystemHaUnicastPeerOutputWithContext(ctx context.Context) SystemHaUnicastPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaUnicastPeerOutput)
}

func (i SystemHaUnicastPeerArgs) ToOutput(ctx context.Context) pulumix.Output[SystemHaUnicastPeer] {
	return pulumix.Output[SystemHaUnicastPeer]{
		OutputState: i.ToSystemHaUnicastPeerOutputWithContext(ctx).OutputState,
	}
}

// SystemHaUnicastPeerArrayInput is an input type that accepts SystemHaUnicastPeerArray and SystemHaUnicastPeerArrayOutput values.
// You can construct a concrete instance of `SystemHaUnicastPeerArrayInput` via:
//
//	SystemHaUnicastPeerArray{ SystemHaUnicastPeerArgs{...} }
type SystemHaUnicastPeerArrayInput interface {
	pulumi.Input

	ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput
	ToSystemHaUnicastPeerArrayOutputWithContext(context.Context) SystemHaUnicastPeerArrayOutput
}

type SystemHaUnicastPeerArray []SystemHaUnicastPeerInput

func (SystemHaUnicastPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaUnicastPeer)(nil)).Elem()
}

func (i SystemHaUnicastPeerArray) ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput {
	return i.ToSystemHaUnicastPeerArrayOutputWithContext(context.Background())
}

func (i SystemHaUnicastPeerArray) ToSystemHaUnicastPeerArrayOutputWithContext(ctx context.Context) SystemHaUnicastPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaUnicastPeerArrayOutput)
}

func (i SystemHaUnicastPeerArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaUnicastPeer] {
	return pulumix.Output[[]SystemHaUnicastPeer]{
		OutputState: i.ToSystemHaUnicastPeerArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemHaUnicastPeerOutput struct{ *pulumi.OutputState }

func (SystemHaUnicastPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaUnicastPeer)(nil)).Elem()
}

func (o SystemHaUnicastPeerOutput) ToSystemHaUnicastPeerOutput() SystemHaUnicastPeerOutput {
	return o
}

func (o SystemHaUnicastPeerOutput) ToSystemHaUnicastPeerOutputWithContext(ctx context.Context) SystemHaUnicastPeerOutput {
	return o
}

func (o SystemHaUnicastPeerOutput) ToOutput(ctx context.Context) pulumix.Output[SystemHaUnicastPeer] {
	return pulumix.Output[SystemHaUnicastPeer]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaUnicastPeerOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaUnicastPeer) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemHaUnicastPeerOutput) PeerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaUnicastPeer) *string { return v.PeerIp }).(pulumi.StringPtrOutput)
}

type SystemHaUnicastPeerArrayOutput struct{ *pulumi.OutputState }

func (SystemHaUnicastPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaUnicastPeer)(nil)).Elem()
}

func (o SystemHaUnicastPeerArrayOutput) ToSystemHaUnicastPeerArrayOutput() SystemHaUnicastPeerArrayOutput {
	return o
}

func (o SystemHaUnicastPeerArrayOutput) ToSystemHaUnicastPeerArrayOutputWithContext(ctx context.Context) SystemHaUnicastPeerArrayOutput {
	return o
}

func (o SystemHaUnicastPeerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaUnicastPeer] {
	return pulumix.Output[[]SystemHaUnicastPeer]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaUnicastPeerArrayOutput) Index(i pulumi.IntInput) SystemHaUnicastPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaUnicastPeer {
		return vs[0].([]SystemHaUnicastPeer)[vs[1].(int)]
	}).(SystemHaUnicastPeerOutput)
}

type SystemHaVcluster struct {
	Monitor                       *string                `pulumi:"monitor"`
	Override                      *string                `pulumi:"override"`
	OverrideWaitTime              *int                   `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   *int                   `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    *string                `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset *string                `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     *string                `pulumi:"pingserverSlaveForceReset"`
	Priority                      *int                   `pulumi:"priority"`
	VclusterId                    *int                   `pulumi:"vclusterId"`
	Vdoms                         []SystemHaVclusterVdom `pulumi:"vdoms"`
}

// SystemHaVclusterInput is an input type that accepts SystemHaVclusterArgs and SystemHaVclusterOutput values.
// You can construct a concrete instance of `SystemHaVclusterInput` via:
//
//	SystemHaVclusterArgs{...}
type SystemHaVclusterInput interface {
	pulumi.Input

	ToSystemHaVclusterOutput() SystemHaVclusterOutput
	ToSystemHaVclusterOutputWithContext(context.Context) SystemHaVclusterOutput
}

type SystemHaVclusterArgs struct {
	Monitor                       pulumi.StringPtrInput          `pulumi:"monitor"`
	Override                      pulumi.StringPtrInput          `pulumi:"override"`
	OverrideWaitTime              pulumi.IntPtrInput             `pulumi:"overrideWaitTime"`
	PingserverFailoverThreshold   pulumi.IntPtrInput             `pulumi:"pingserverFailoverThreshold"`
	PingserverMonitorInterface    pulumi.StringPtrInput          `pulumi:"pingserverMonitorInterface"`
	PingserverSecondaryForceReset pulumi.StringPtrInput          `pulumi:"pingserverSecondaryForceReset"`
	PingserverSlaveForceReset     pulumi.StringPtrInput          `pulumi:"pingserverSlaveForceReset"`
	Priority                      pulumi.IntPtrInput             `pulumi:"priority"`
	VclusterId                    pulumi.IntPtrInput             `pulumi:"vclusterId"`
	Vdoms                         SystemHaVclusterVdomArrayInput `pulumi:"vdoms"`
}

func (SystemHaVclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVcluster)(nil)).Elem()
}

func (i SystemHaVclusterArgs) ToSystemHaVclusterOutput() SystemHaVclusterOutput {
	return i.ToSystemHaVclusterOutputWithContext(context.Background())
}

func (i SystemHaVclusterArgs) ToSystemHaVclusterOutputWithContext(ctx context.Context) SystemHaVclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterOutput)
}

func (i SystemHaVclusterArgs) ToOutput(ctx context.Context) pulumix.Output[SystemHaVcluster] {
	return pulumix.Output[SystemHaVcluster]{
		OutputState: i.ToSystemHaVclusterOutputWithContext(ctx).OutputState,
	}
}

// SystemHaVclusterArrayInput is an input type that accepts SystemHaVclusterArray and SystemHaVclusterArrayOutput values.
// You can construct a concrete instance of `SystemHaVclusterArrayInput` via:
//
//	SystemHaVclusterArray{ SystemHaVclusterArgs{...} }
type SystemHaVclusterArrayInput interface {
	pulumi.Input

	ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput
	ToSystemHaVclusterArrayOutputWithContext(context.Context) SystemHaVclusterArrayOutput
}

type SystemHaVclusterArray []SystemHaVclusterInput

func (SystemHaVclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVcluster)(nil)).Elem()
}

func (i SystemHaVclusterArray) ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput {
	return i.ToSystemHaVclusterArrayOutputWithContext(context.Background())
}

func (i SystemHaVclusterArray) ToSystemHaVclusterArrayOutputWithContext(ctx context.Context) SystemHaVclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterArrayOutput)
}

func (i SystemHaVclusterArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaVcluster] {
	return pulumix.Output[[]SystemHaVcluster]{
		OutputState: i.ToSystemHaVclusterArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemHaVclusterOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVcluster)(nil)).Elem()
}

func (o SystemHaVclusterOutput) ToSystemHaVclusterOutput() SystemHaVclusterOutput {
	return o
}

func (o SystemHaVclusterOutput) ToSystemHaVclusterOutputWithContext(ctx context.Context) SystemHaVclusterOutput {
	return o
}

func (o SystemHaVclusterOutput) ToOutput(ctx context.Context) pulumix.Output[SystemHaVcluster] {
	return pulumix.Output[SystemHaVcluster]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaVclusterOutput) Monitor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.Monitor }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) Override() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.Override }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) OverrideWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.OverrideWaitTime }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverFailoverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.PingserverFailoverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverMonitorInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverMonitorInterface }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverSecondaryForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverSecondaryForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) PingserverSlaveForceReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *string { return v.PingserverSlaveForceReset }).(pulumi.StringPtrOutput)
}

func (o SystemHaVclusterOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) VclusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemHaVcluster) *int { return v.VclusterId }).(pulumi.IntPtrOutput)
}

func (o SystemHaVclusterOutput) Vdoms() SystemHaVclusterVdomArrayOutput {
	return o.ApplyT(func(v SystemHaVcluster) []SystemHaVclusterVdom { return v.Vdoms }).(SystemHaVclusterVdomArrayOutput)
}

type SystemHaVclusterArrayOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVcluster)(nil)).Elem()
}

func (o SystemHaVclusterArrayOutput) ToSystemHaVclusterArrayOutput() SystemHaVclusterArrayOutput {
	return o
}

func (o SystemHaVclusterArrayOutput) ToSystemHaVclusterArrayOutputWithContext(ctx context.Context) SystemHaVclusterArrayOutput {
	return o
}

func (o SystemHaVclusterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaVcluster] {
	return pulumix.Output[[]SystemHaVcluster]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaVclusterArrayOutput) Index(i pulumi.IntInput) SystemHaVclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaVcluster {
		return vs[0].([]SystemHaVcluster)[vs[1].(int)]
	}).(SystemHaVclusterOutput)
}

type SystemHaVclusterVdom struct {
	Name *string `pulumi:"name"`
}

// SystemHaVclusterVdomInput is an input type that accepts SystemHaVclusterVdomArgs and SystemHaVclusterVdomOutput values.
// You can construct a concrete instance of `SystemHaVclusterVdomInput` via:
//
//	SystemHaVclusterVdomArgs{...}
type SystemHaVclusterVdomInput interface {
	pulumi.Input

	ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput
	ToSystemHaVclusterVdomOutputWithContext(context.Context) SystemHaVclusterVdomOutput
}

type SystemHaVclusterVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemHaVclusterVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVclusterVdom)(nil)).Elem()
}

func (i SystemHaVclusterVdomArgs) ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput {
	return i.ToSystemHaVclusterVdomOutputWithContext(context.Background())
}

func (i SystemHaVclusterVdomArgs) ToSystemHaVclusterVdomOutputWithContext(ctx context.Context) SystemHaVclusterVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterVdomOutput)
}

func (i SystemHaVclusterVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemHaVclusterVdom] {
	return pulumix.Output[SystemHaVclusterVdom]{
		OutputState: i.ToSystemHaVclusterVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemHaVclusterVdomArrayInput is an input type that accepts SystemHaVclusterVdomArray and SystemHaVclusterVdomArrayOutput values.
// You can construct a concrete instance of `SystemHaVclusterVdomArrayInput` via:
//
//	SystemHaVclusterVdomArray{ SystemHaVclusterVdomArgs{...} }
type SystemHaVclusterVdomArrayInput interface {
	pulumi.Input

	ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput
	ToSystemHaVclusterVdomArrayOutputWithContext(context.Context) SystemHaVclusterVdomArrayOutput
}

type SystemHaVclusterVdomArray []SystemHaVclusterVdomInput

func (SystemHaVclusterVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVclusterVdom)(nil)).Elem()
}

func (i SystemHaVclusterVdomArray) ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput {
	return i.ToSystemHaVclusterVdomArrayOutputWithContext(context.Background())
}

func (i SystemHaVclusterVdomArray) ToSystemHaVclusterVdomArrayOutputWithContext(ctx context.Context) SystemHaVclusterVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemHaVclusterVdomArrayOutput)
}

func (i SystemHaVclusterVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaVclusterVdom] {
	return pulumix.Output[[]SystemHaVclusterVdom]{
		OutputState: i.ToSystemHaVclusterVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemHaVclusterVdomOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemHaVclusterVdom)(nil)).Elem()
}

func (o SystemHaVclusterVdomOutput) ToSystemHaVclusterVdomOutput() SystemHaVclusterVdomOutput {
	return o
}

func (o SystemHaVclusterVdomOutput) ToSystemHaVclusterVdomOutputWithContext(ctx context.Context) SystemHaVclusterVdomOutput {
	return o
}

func (o SystemHaVclusterVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemHaVclusterVdom] {
	return pulumix.Output[SystemHaVclusterVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaVclusterVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemHaVclusterVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemHaVclusterVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemHaVclusterVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemHaVclusterVdom)(nil)).Elem()
}

func (o SystemHaVclusterVdomArrayOutput) ToSystemHaVclusterVdomArrayOutput() SystemHaVclusterVdomArrayOutput {
	return o
}

func (o SystemHaVclusterVdomArrayOutput) ToSystemHaVclusterVdomArrayOutputWithContext(ctx context.Context) SystemHaVclusterVdomArrayOutput {
	return o
}

func (o SystemHaVclusterVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemHaVclusterVdom] {
	return pulumix.Output[[]SystemHaVclusterVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemHaVclusterVdomArrayOutput) Index(i pulumi.IntInput) SystemHaVclusterVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemHaVclusterVdom {
		return vs[0].([]SystemHaVclusterVdom)[vs[1].(int)]
	}).(SystemHaVclusterVdomOutput)
}

type SystemIkeDhGroup14 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup14Input is an input type that accepts SystemIkeDhGroup14Args and SystemIkeDhGroup14Output values.
// You can construct a concrete instance of `SystemIkeDhGroup14Input` via:
//
//	SystemIkeDhGroup14Args{...}
type SystemIkeDhGroup14Input interface {
	pulumi.Input

	ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output
	ToSystemIkeDhGroup14OutputWithContext(context.Context) SystemIkeDhGroup14Output
}

type SystemIkeDhGroup14Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup14Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup14)(nil)).Elem()
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output {
	return i.ToSystemIkeDhGroup14OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14OutputWithContext(ctx context.Context) SystemIkeDhGroup14Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14Output)
}

func (i SystemIkeDhGroup14Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup14] {
	return pulumix.Output[SystemIkeDhGroup14]{
		OutputState: i.ToSystemIkeDhGroup14OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return i.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup14Args) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14Output).ToSystemIkeDhGroup14PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup14PtrInput is an input type that accepts SystemIkeDhGroup14Args, SystemIkeDhGroup14Ptr and SystemIkeDhGroup14PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup14PtrInput` via:
//
//	        SystemIkeDhGroup14Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup14PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput
	ToSystemIkeDhGroup14PtrOutputWithContext(context.Context) SystemIkeDhGroup14PtrOutput
}

type systemIkeDhGroup14PtrType SystemIkeDhGroup14Args

func SystemIkeDhGroup14Ptr(v *SystemIkeDhGroup14Args) SystemIkeDhGroup14PtrInput {
	return (*systemIkeDhGroup14PtrType)(v)
}

func (*systemIkeDhGroup14PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup14)(nil)).Elem()
}

func (i *systemIkeDhGroup14PtrType) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return i.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup14PtrType) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup14PtrOutput)
}

func (i *systemIkeDhGroup14PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup14] {
	return pulumix.Output[*SystemIkeDhGroup14]{
		OutputState: i.ToSystemIkeDhGroup14PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup14Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup14Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup14)(nil)).Elem()
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14Output() SystemIkeDhGroup14Output {
	return o
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14OutputWithContext(ctx context.Context) SystemIkeDhGroup14Output {
	return o
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return o.ToSystemIkeDhGroup14PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup14Output) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup14) *SystemIkeDhGroup14 {
		return &v
	}).(SystemIkeDhGroup14PtrOutput)
}

func (o SystemIkeDhGroup14Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup14] {
	return pulumix.Output[SystemIkeDhGroup14]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup14Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup14Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup14Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup14) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup14PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup14PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup14)(nil)).Elem()
}

func (o SystemIkeDhGroup14PtrOutput) ToSystemIkeDhGroup14PtrOutput() SystemIkeDhGroup14PtrOutput {
	return o
}

func (o SystemIkeDhGroup14PtrOutput) ToSystemIkeDhGroup14PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup14PtrOutput {
	return o
}

func (o SystemIkeDhGroup14PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup14] {
	return pulumix.Output[*SystemIkeDhGroup14]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup14PtrOutput) Elem() SystemIkeDhGroup14Output {
	return o.ApplyT(func(v *SystemIkeDhGroup14) SystemIkeDhGroup14 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup14
		return ret
	}).(SystemIkeDhGroup14Output)
}

func (o SystemIkeDhGroup14PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup14PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup14PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup14) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup15 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup15Input is an input type that accepts SystemIkeDhGroup15Args and SystemIkeDhGroup15Output values.
// You can construct a concrete instance of `SystemIkeDhGroup15Input` via:
//
//	SystemIkeDhGroup15Args{...}
type SystemIkeDhGroup15Input interface {
	pulumi.Input

	ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output
	ToSystemIkeDhGroup15OutputWithContext(context.Context) SystemIkeDhGroup15Output
}

type SystemIkeDhGroup15Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup15Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup15)(nil)).Elem()
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output {
	return i.ToSystemIkeDhGroup15OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15OutputWithContext(ctx context.Context) SystemIkeDhGroup15Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15Output)
}

func (i SystemIkeDhGroup15Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup15] {
	return pulumix.Output[SystemIkeDhGroup15]{
		OutputState: i.ToSystemIkeDhGroup15OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return i.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup15Args) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15Output).ToSystemIkeDhGroup15PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup15PtrInput is an input type that accepts SystemIkeDhGroup15Args, SystemIkeDhGroup15Ptr and SystemIkeDhGroup15PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup15PtrInput` via:
//
//	        SystemIkeDhGroup15Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup15PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput
	ToSystemIkeDhGroup15PtrOutputWithContext(context.Context) SystemIkeDhGroup15PtrOutput
}

type systemIkeDhGroup15PtrType SystemIkeDhGroup15Args

func SystemIkeDhGroup15Ptr(v *SystemIkeDhGroup15Args) SystemIkeDhGroup15PtrInput {
	return (*systemIkeDhGroup15PtrType)(v)
}

func (*systemIkeDhGroup15PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup15)(nil)).Elem()
}

func (i *systemIkeDhGroup15PtrType) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return i.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup15PtrType) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup15PtrOutput)
}

func (i *systemIkeDhGroup15PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup15] {
	return pulumix.Output[*SystemIkeDhGroup15]{
		OutputState: i.ToSystemIkeDhGroup15PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup15Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup15Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup15)(nil)).Elem()
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15Output() SystemIkeDhGroup15Output {
	return o
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15OutputWithContext(ctx context.Context) SystemIkeDhGroup15Output {
	return o
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return o.ToSystemIkeDhGroup15PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup15Output) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup15) *SystemIkeDhGroup15 {
		return &v
	}).(SystemIkeDhGroup15PtrOutput)
}

func (o SystemIkeDhGroup15Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup15] {
	return pulumix.Output[SystemIkeDhGroup15]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup15Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup15Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup15Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup15) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup15PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup15PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup15)(nil)).Elem()
}

func (o SystemIkeDhGroup15PtrOutput) ToSystemIkeDhGroup15PtrOutput() SystemIkeDhGroup15PtrOutput {
	return o
}

func (o SystemIkeDhGroup15PtrOutput) ToSystemIkeDhGroup15PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup15PtrOutput {
	return o
}

func (o SystemIkeDhGroup15PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup15] {
	return pulumix.Output[*SystemIkeDhGroup15]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup15PtrOutput) Elem() SystemIkeDhGroup15Output {
	return o.ApplyT(func(v *SystemIkeDhGroup15) SystemIkeDhGroup15 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup15
		return ret
	}).(SystemIkeDhGroup15Output)
}

func (o SystemIkeDhGroup15PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup15PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup15PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup15) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup16 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup16Input is an input type that accepts SystemIkeDhGroup16Args and SystemIkeDhGroup16Output values.
// You can construct a concrete instance of `SystemIkeDhGroup16Input` via:
//
//	SystemIkeDhGroup16Args{...}
type SystemIkeDhGroup16Input interface {
	pulumi.Input

	ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output
	ToSystemIkeDhGroup16OutputWithContext(context.Context) SystemIkeDhGroup16Output
}

type SystemIkeDhGroup16Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup16Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup16)(nil)).Elem()
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output {
	return i.ToSystemIkeDhGroup16OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16OutputWithContext(ctx context.Context) SystemIkeDhGroup16Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16Output)
}

func (i SystemIkeDhGroup16Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup16] {
	return pulumix.Output[SystemIkeDhGroup16]{
		OutputState: i.ToSystemIkeDhGroup16OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return i.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup16Args) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16Output).ToSystemIkeDhGroup16PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup16PtrInput is an input type that accepts SystemIkeDhGroup16Args, SystemIkeDhGroup16Ptr and SystemIkeDhGroup16PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup16PtrInput` via:
//
//	        SystemIkeDhGroup16Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup16PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput
	ToSystemIkeDhGroup16PtrOutputWithContext(context.Context) SystemIkeDhGroup16PtrOutput
}

type systemIkeDhGroup16PtrType SystemIkeDhGroup16Args

func SystemIkeDhGroup16Ptr(v *SystemIkeDhGroup16Args) SystemIkeDhGroup16PtrInput {
	return (*systemIkeDhGroup16PtrType)(v)
}

func (*systemIkeDhGroup16PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup16)(nil)).Elem()
}

func (i *systemIkeDhGroup16PtrType) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return i.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup16PtrType) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup16PtrOutput)
}

func (i *systemIkeDhGroup16PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup16] {
	return pulumix.Output[*SystemIkeDhGroup16]{
		OutputState: i.ToSystemIkeDhGroup16PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup16Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup16Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup16)(nil)).Elem()
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16Output() SystemIkeDhGroup16Output {
	return o
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16OutputWithContext(ctx context.Context) SystemIkeDhGroup16Output {
	return o
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return o.ToSystemIkeDhGroup16PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup16Output) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup16) *SystemIkeDhGroup16 {
		return &v
	}).(SystemIkeDhGroup16PtrOutput)
}

func (o SystemIkeDhGroup16Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup16] {
	return pulumix.Output[SystemIkeDhGroup16]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup16Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup16Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup16Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup16) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup16PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup16PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup16)(nil)).Elem()
}

func (o SystemIkeDhGroup16PtrOutput) ToSystemIkeDhGroup16PtrOutput() SystemIkeDhGroup16PtrOutput {
	return o
}

func (o SystemIkeDhGroup16PtrOutput) ToSystemIkeDhGroup16PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup16PtrOutput {
	return o
}

func (o SystemIkeDhGroup16PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup16] {
	return pulumix.Output[*SystemIkeDhGroup16]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup16PtrOutput) Elem() SystemIkeDhGroup16Output {
	return o.ApplyT(func(v *SystemIkeDhGroup16) SystemIkeDhGroup16 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup16
		return ret
	}).(SystemIkeDhGroup16Output)
}

func (o SystemIkeDhGroup16PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup16PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup16PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup16) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup17 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup17Input is an input type that accepts SystemIkeDhGroup17Args and SystemIkeDhGroup17Output values.
// You can construct a concrete instance of `SystemIkeDhGroup17Input` via:
//
//	SystemIkeDhGroup17Args{...}
type SystemIkeDhGroup17Input interface {
	pulumi.Input

	ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output
	ToSystemIkeDhGroup17OutputWithContext(context.Context) SystemIkeDhGroup17Output
}

type SystemIkeDhGroup17Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup17Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup17)(nil)).Elem()
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output {
	return i.ToSystemIkeDhGroup17OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17OutputWithContext(ctx context.Context) SystemIkeDhGroup17Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17Output)
}

func (i SystemIkeDhGroup17Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup17] {
	return pulumix.Output[SystemIkeDhGroup17]{
		OutputState: i.ToSystemIkeDhGroup17OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return i.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup17Args) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17Output).ToSystemIkeDhGroup17PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup17PtrInput is an input type that accepts SystemIkeDhGroup17Args, SystemIkeDhGroup17Ptr and SystemIkeDhGroup17PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup17PtrInput` via:
//
//	        SystemIkeDhGroup17Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup17PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput
	ToSystemIkeDhGroup17PtrOutputWithContext(context.Context) SystemIkeDhGroup17PtrOutput
}

type systemIkeDhGroup17PtrType SystemIkeDhGroup17Args

func SystemIkeDhGroup17Ptr(v *SystemIkeDhGroup17Args) SystemIkeDhGroup17PtrInput {
	return (*systemIkeDhGroup17PtrType)(v)
}

func (*systemIkeDhGroup17PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup17)(nil)).Elem()
}

func (i *systemIkeDhGroup17PtrType) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return i.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup17PtrType) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup17PtrOutput)
}

func (i *systemIkeDhGroup17PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup17] {
	return pulumix.Output[*SystemIkeDhGroup17]{
		OutputState: i.ToSystemIkeDhGroup17PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup17Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup17Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup17)(nil)).Elem()
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17Output() SystemIkeDhGroup17Output {
	return o
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17OutputWithContext(ctx context.Context) SystemIkeDhGroup17Output {
	return o
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return o.ToSystemIkeDhGroup17PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup17Output) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup17) *SystemIkeDhGroup17 {
		return &v
	}).(SystemIkeDhGroup17PtrOutput)
}

func (o SystemIkeDhGroup17Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup17] {
	return pulumix.Output[SystemIkeDhGroup17]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup17Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup17Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup17Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup17) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup17PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup17PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup17)(nil)).Elem()
}

func (o SystemIkeDhGroup17PtrOutput) ToSystemIkeDhGroup17PtrOutput() SystemIkeDhGroup17PtrOutput {
	return o
}

func (o SystemIkeDhGroup17PtrOutput) ToSystemIkeDhGroup17PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup17PtrOutput {
	return o
}

func (o SystemIkeDhGroup17PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup17] {
	return pulumix.Output[*SystemIkeDhGroup17]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup17PtrOutput) Elem() SystemIkeDhGroup17Output {
	return o.ApplyT(func(v *SystemIkeDhGroup17) SystemIkeDhGroup17 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup17
		return ret
	}).(SystemIkeDhGroup17Output)
}

func (o SystemIkeDhGroup17PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup17PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup17PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup17) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup18 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup18Input is an input type that accepts SystemIkeDhGroup18Args and SystemIkeDhGroup18Output values.
// You can construct a concrete instance of `SystemIkeDhGroup18Input` via:
//
//	SystemIkeDhGroup18Args{...}
type SystemIkeDhGroup18Input interface {
	pulumi.Input

	ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output
	ToSystemIkeDhGroup18OutputWithContext(context.Context) SystemIkeDhGroup18Output
}

type SystemIkeDhGroup18Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup18Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup18)(nil)).Elem()
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output {
	return i.ToSystemIkeDhGroup18OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18OutputWithContext(ctx context.Context) SystemIkeDhGroup18Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18Output)
}

func (i SystemIkeDhGroup18Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup18] {
	return pulumix.Output[SystemIkeDhGroup18]{
		OutputState: i.ToSystemIkeDhGroup18OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return i.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup18Args) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18Output).ToSystemIkeDhGroup18PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup18PtrInput is an input type that accepts SystemIkeDhGroup18Args, SystemIkeDhGroup18Ptr and SystemIkeDhGroup18PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup18PtrInput` via:
//
//	        SystemIkeDhGroup18Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup18PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput
	ToSystemIkeDhGroup18PtrOutputWithContext(context.Context) SystemIkeDhGroup18PtrOutput
}

type systemIkeDhGroup18PtrType SystemIkeDhGroup18Args

func SystemIkeDhGroup18Ptr(v *SystemIkeDhGroup18Args) SystemIkeDhGroup18PtrInput {
	return (*systemIkeDhGroup18PtrType)(v)
}

func (*systemIkeDhGroup18PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup18)(nil)).Elem()
}

func (i *systemIkeDhGroup18PtrType) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return i.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup18PtrType) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup18PtrOutput)
}

func (i *systemIkeDhGroup18PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup18] {
	return pulumix.Output[*SystemIkeDhGroup18]{
		OutputState: i.ToSystemIkeDhGroup18PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup18Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup18Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup18)(nil)).Elem()
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18Output() SystemIkeDhGroup18Output {
	return o
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18OutputWithContext(ctx context.Context) SystemIkeDhGroup18Output {
	return o
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return o.ToSystemIkeDhGroup18PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup18Output) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup18) *SystemIkeDhGroup18 {
		return &v
	}).(SystemIkeDhGroup18PtrOutput)
}

func (o SystemIkeDhGroup18Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup18] {
	return pulumix.Output[SystemIkeDhGroup18]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup18Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup18Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup18Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup18) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup18PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup18PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup18)(nil)).Elem()
}

func (o SystemIkeDhGroup18PtrOutput) ToSystemIkeDhGroup18PtrOutput() SystemIkeDhGroup18PtrOutput {
	return o
}

func (o SystemIkeDhGroup18PtrOutput) ToSystemIkeDhGroup18PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup18PtrOutput {
	return o
}

func (o SystemIkeDhGroup18PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup18] {
	return pulumix.Output[*SystemIkeDhGroup18]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup18PtrOutput) Elem() SystemIkeDhGroup18Output {
	return o.ApplyT(func(v *SystemIkeDhGroup18) SystemIkeDhGroup18 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup18
		return ret
	}).(SystemIkeDhGroup18Output)
}

func (o SystemIkeDhGroup18PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup18PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup18PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup18) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup19 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup19Input is an input type that accepts SystemIkeDhGroup19Args and SystemIkeDhGroup19Output values.
// You can construct a concrete instance of `SystemIkeDhGroup19Input` via:
//
//	SystemIkeDhGroup19Args{...}
type SystemIkeDhGroup19Input interface {
	pulumi.Input

	ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output
	ToSystemIkeDhGroup19OutputWithContext(context.Context) SystemIkeDhGroup19Output
}

type SystemIkeDhGroup19Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup19Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup19)(nil)).Elem()
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output {
	return i.ToSystemIkeDhGroup19OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19OutputWithContext(ctx context.Context) SystemIkeDhGroup19Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19Output)
}

func (i SystemIkeDhGroup19Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup19] {
	return pulumix.Output[SystemIkeDhGroup19]{
		OutputState: i.ToSystemIkeDhGroup19OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return i.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup19Args) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19Output).ToSystemIkeDhGroup19PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup19PtrInput is an input type that accepts SystemIkeDhGroup19Args, SystemIkeDhGroup19Ptr and SystemIkeDhGroup19PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup19PtrInput` via:
//
//	        SystemIkeDhGroup19Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup19PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput
	ToSystemIkeDhGroup19PtrOutputWithContext(context.Context) SystemIkeDhGroup19PtrOutput
}

type systemIkeDhGroup19PtrType SystemIkeDhGroup19Args

func SystemIkeDhGroup19Ptr(v *SystemIkeDhGroup19Args) SystemIkeDhGroup19PtrInput {
	return (*systemIkeDhGroup19PtrType)(v)
}

func (*systemIkeDhGroup19PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup19)(nil)).Elem()
}

func (i *systemIkeDhGroup19PtrType) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return i.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup19PtrType) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup19PtrOutput)
}

func (i *systemIkeDhGroup19PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup19] {
	return pulumix.Output[*SystemIkeDhGroup19]{
		OutputState: i.ToSystemIkeDhGroup19PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup19Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup19Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup19)(nil)).Elem()
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19Output() SystemIkeDhGroup19Output {
	return o
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19OutputWithContext(ctx context.Context) SystemIkeDhGroup19Output {
	return o
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return o.ToSystemIkeDhGroup19PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup19Output) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup19) *SystemIkeDhGroup19 {
		return &v
	}).(SystemIkeDhGroup19PtrOutput)
}

func (o SystemIkeDhGroup19Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup19] {
	return pulumix.Output[SystemIkeDhGroup19]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup19Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup19Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup19Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup19) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup19PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup19PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup19)(nil)).Elem()
}

func (o SystemIkeDhGroup19PtrOutput) ToSystemIkeDhGroup19PtrOutput() SystemIkeDhGroup19PtrOutput {
	return o
}

func (o SystemIkeDhGroup19PtrOutput) ToSystemIkeDhGroup19PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup19PtrOutput {
	return o
}

func (o SystemIkeDhGroup19PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup19] {
	return pulumix.Output[*SystemIkeDhGroup19]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup19PtrOutput) Elem() SystemIkeDhGroup19Output {
	return o.ApplyT(func(v *SystemIkeDhGroup19) SystemIkeDhGroup19 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup19
		return ret
	}).(SystemIkeDhGroup19Output)
}

func (o SystemIkeDhGroup19PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup19PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup19PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup19) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup1 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup1Input is an input type that accepts SystemIkeDhGroup1Args and SystemIkeDhGroup1Output values.
// You can construct a concrete instance of `SystemIkeDhGroup1Input` via:
//
//	SystemIkeDhGroup1Args{...}
type SystemIkeDhGroup1Input interface {
	pulumi.Input

	ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output
	ToSystemIkeDhGroup1OutputWithContext(context.Context) SystemIkeDhGroup1Output
}

type SystemIkeDhGroup1Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup1)(nil)).Elem()
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output {
	return i.ToSystemIkeDhGroup1OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1OutputWithContext(ctx context.Context) SystemIkeDhGroup1Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1Output)
}

func (i SystemIkeDhGroup1Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup1] {
	return pulumix.Output[SystemIkeDhGroup1]{
		OutputState: i.ToSystemIkeDhGroup1OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return i.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup1Args) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1Output).ToSystemIkeDhGroup1PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup1PtrInput is an input type that accepts SystemIkeDhGroup1Args, SystemIkeDhGroup1Ptr and SystemIkeDhGroup1PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup1PtrInput` via:
//
//	        SystemIkeDhGroup1Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup1PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput
	ToSystemIkeDhGroup1PtrOutputWithContext(context.Context) SystemIkeDhGroup1PtrOutput
}

type systemIkeDhGroup1PtrType SystemIkeDhGroup1Args

func SystemIkeDhGroup1Ptr(v *SystemIkeDhGroup1Args) SystemIkeDhGroup1PtrInput {
	return (*systemIkeDhGroup1PtrType)(v)
}

func (*systemIkeDhGroup1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup1)(nil)).Elem()
}

func (i *systemIkeDhGroup1PtrType) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return i.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup1PtrType) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup1PtrOutput)
}

func (i *systemIkeDhGroup1PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup1] {
	return pulumix.Output[*SystemIkeDhGroup1]{
		OutputState: i.ToSystemIkeDhGroup1PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup1Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup1)(nil)).Elem()
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1Output() SystemIkeDhGroup1Output {
	return o
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1OutputWithContext(ctx context.Context) SystemIkeDhGroup1Output {
	return o
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return o.ToSystemIkeDhGroup1PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup1Output) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup1) *SystemIkeDhGroup1 {
		return &v
	}).(SystemIkeDhGroup1PtrOutput)
}

func (o SystemIkeDhGroup1Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup1] {
	return pulumix.Output[SystemIkeDhGroup1]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup1Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup1Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup1Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup1) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup1PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup1)(nil)).Elem()
}

func (o SystemIkeDhGroup1PtrOutput) ToSystemIkeDhGroup1PtrOutput() SystemIkeDhGroup1PtrOutput {
	return o
}

func (o SystemIkeDhGroup1PtrOutput) ToSystemIkeDhGroup1PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup1PtrOutput {
	return o
}

func (o SystemIkeDhGroup1PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup1] {
	return pulumix.Output[*SystemIkeDhGroup1]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup1PtrOutput) Elem() SystemIkeDhGroup1Output {
	return o.ApplyT(func(v *SystemIkeDhGroup1) SystemIkeDhGroup1 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup1
		return ret
	}).(SystemIkeDhGroup1Output)
}

func (o SystemIkeDhGroup1PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup1PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup1PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup1) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup20 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup20Input is an input type that accepts SystemIkeDhGroup20Args and SystemIkeDhGroup20Output values.
// You can construct a concrete instance of `SystemIkeDhGroup20Input` via:
//
//	SystemIkeDhGroup20Args{...}
type SystemIkeDhGroup20Input interface {
	pulumi.Input

	ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output
	ToSystemIkeDhGroup20OutputWithContext(context.Context) SystemIkeDhGroup20Output
}

type SystemIkeDhGroup20Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup20Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup20)(nil)).Elem()
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output {
	return i.ToSystemIkeDhGroup20OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20OutputWithContext(ctx context.Context) SystemIkeDhGroup20Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20Output)
}

func (i SystemIkeDhGroup20Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup20] {
	return pulumix.Output[SystemIkeDhGroup20]{
		OutputState: i.ToSystemIkeDhGroup20OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return i.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup20Args) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20Output).ToSystemIkeDhGroup20PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup20PtrInput is an input type that accepts SystemIkeDhGroup20Args, SystemIkeDhGroup20Ptr and SystemIkeDhGroup20PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup20PtrInput` via:
//
//	        SystemIkeDhGroup20Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup20PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput
	ToSystemIkeDhGroup20PtrOutputWithContext(context.Context) SystemIkeDhGroup20PtrOutput
}

type systemIkeDhGroup20PtrType SystemIkeDhGroup20Args

func SystemIkeDhGroup20Ptr(v *SystemIkeDhGroup20Args) SystemIkeDhGroup20PtrInput {
	return (*systemIkeDhGroup20PtrType)(v)
}

func (*systemIkeDhGroup20PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup20)(nil)).Elem()
}

func (i *systemIkeDhGroup20PtrType) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return i.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup20PtrType) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup20PtrOutput)
}

func (i *systemIkeDhGroup20PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup20] {
	return pulumix.Output[*SystemIkeDhGroup20]{
		OutputState: i.ToSystemIkeDhGroup20PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup20Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup20)(nil)).Elem()
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20Output() SystemIkeDhGroup20Output {
	return o
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20OutputWithContext(ctx context.Context) SystemIkeDhGroup20Output {
	return o
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return o.ToSystemIkeDhGroup20PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup20Output) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup20) *SystemIkeDhGroup20 {
		return &v
	}).(SystemIkeDhGroup20PtrOutput)
}

func (o SystemIkeDhGroup20Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup20] {
	return pulumix.Output[SystemIkeDhGroup20]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup20Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup20Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup20Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup20) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup20PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup20PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup20)(nil)).Elem()
}

func (o SystemIkeDhGroup20PtrOutput) ToSystemIkeDhGroup20PtrOutput() SystemIkeDhGroup20PtrOutput {
	return o
}

func (o SystemIkeDhGroup20PtrOutput) ToSystemIkeDhGroup20PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup20PtrOutput {
	return o
}

func (o SystemIkeDhGroup20PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup20] {
	return pulumix.Output[*SystemIkeDhGroup20]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup20PtrOutput) Elem() SystemIkeDhGroup20Output {
	return o.ApplyT(func(v *SystemIkeDhGroup20) SystemIkeDhGroup20 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup20
		return ret
	}).(SystemIkeDhGroup20Output)
}

func (o SystemIkeDhGroup20PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup20PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup20PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup20) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup21 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup21Input is an input type that accepts SystemIkeDhGroup21Args and SystemIkeDhGroup21Output values.
// You can construct a concrete instance of `SystemIkeDhGroup21Input` via:
//
//	SystemIkeDhGroup21Args{...}
type SystemIkeDhGroup21Input interface {
	pulumi.Input

	ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output
	ToSystemIkeDhGroup21OutputWithContext(context.Context) SystemIkeDhGroup21Output
}

type SystemIkeDhGroup21Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup21Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup21)(nil)).Elem()
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output {
	return i.ToSystemIkeDhGroup21OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21OutputWithContext(ctx context.Context) SystemIkeDhGroup21Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21Output)
}

func (i SystemIkeDhGroup21Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup21] {
	return pulumix.Output[SystemIkeDhGroup21]{
		OutputState: i.ToSystemIkeDhGroup21OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return i.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup21Args) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21Output).ToSystemIkeDhGroup21PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup21PtrInput is an input type that accepts SystemIkeDhGroup21Args, SystemIkeDhGroup21Ptr and SystemIkeDhGroup21PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup21PtrInput` via:
//
//	        SystemIkeDhGroup21Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup21PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput
	ToSystemIkeDhGroup21PtrOutputWithContext(context.Context) SystemIkeDhGroup21PtrOutput
}

type systemIkeDhGroup21PtrType SystemIkeDhGroup21Args

func SystemIkeDhGroup21Ptr(v *SystemIkeDhGroup21Args) SystemIkeDhGroup21PtrInput {
	return (*systemIkeDhGroup21PtrType)(v)
}

func (*systemIkeDhGroup21PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup21)(nil)).Elem()
}

func (i *systemIkeDhGroup21PtrType) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return i.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup21PtrType) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup21PtrOutput)
}

func (i *systemIkeDhGroup21PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup21] {
	return pulumix.Output[*SystemIkeDhGroup21]{
		OutputState: i.ToSystemIkeDhGroup21PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup21Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup21Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup21)(nil)).Elem()
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21Output() SystemIkeDhGroup21Output {
	return o
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21OutputWithContext(ctx context.Context) SystemIkeDhGroup21Output {
	return o
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return o.ToSystemIkeDhGroup21PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup21Output) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup21) *SystemIkeDhGroup21 {
		return &v
	}).(SystemIkeDhGroup21PtrOutput)
}

func (o SystemIkeDhGroup21Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup21] {
	return pulumix.Output[SystemIkeDhGroup21]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup21Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup21Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup21Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup21) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup21PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup21PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup21)(nil)).Elem()
}

func (o SystemIkeDhGroup21PtrOutput) ToSystemIkeDhGroup21PtrOutput() SystemIkeDhGroup21PtrOutput {
	return o
}

func (o SystemIkeDhGroup21PtrOutput) ToSystemIkeDhGroup21PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup21PtrOutput {
	return o
}

func (o SystemIkeDhGroup21PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup21] {
	return pulumix.Output[*SystemIkeDhGroup21]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup21PtrOutput) Elem() SystemIkeDhGroup21Output {
	return o.ApplyT(func(v *SystemIkeDhGroup21) SystemIkeDhGroup21 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup21
		return ret
	}).(SystemIkeDhGroup21Output)
}

func (o SystemIkeDhGroup21PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup21PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup21PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup21) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup27 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup27Input is an input type that accepts SystemIkeDhGroup27Args and SystemIkeDhGroup27Output values.
// You can construct a concrete instance of `SystemIkeDhGroup27Input` via:
//
//	SystemIkeDhGroup27Args{...}
type SystemIkeDhGroup27Input interface {
	pulumi.Input

	ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output
	ToSystemIkeDhGroup27OutputWithContext(context.Context) SystemIkeDhGroup27Output
}

type SystemIkeDhGroup27Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup27Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup27)(nil)).Elem()
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output {
	return i.ToSystemIkeDhGroup27OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27OutputWithContext(ctx context.Context) SystemIkeDhGroup27Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27Output)
}

func (i SystemIkeDhGroup27Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup27] {
	return pulumix.Output[SystemIkeDhGroup27]{
		OutputState: i.ToSystemIkeDhGroup27OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return i.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup27Args) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27Output).ToSystemIkeDhGroup27PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup27PtrInput is an input type that accepts SystemIkeDhGroup27Args, SystemIkeDhGroup27Ptr and SystemIkeDhGroup27PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup27PtrInput` via:
//
//	        SystemIkeDhGroup27Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup27PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput
	ToSystemIkeDhGroup27PtrOutputWithContext(context.Context) SystemIkeDhGroup27PtrOutput
}

type systemIkeDhGroup27PtrType SystemIkeDhGroup27Args

func SystemIkeDhGroup27Ptr(v *SystemIkeDhGroup27Args) SystemIkeDhGroup27PtrInput {
	return (*systemIkeDhGroup27PtrType)(v)
}

func (*systemIkeDhGroup27PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup27)(nil)).Elem()
}

func (i *systemIkeDhGroup27PtrType) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return i.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup27PtrType) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup27PtrOutput)
}

func (i *systemIkeDhGroup27PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup27] {
	return pulumix.Output[*SystemIkeDhGroup27]{
		OutputState: i.ToSystemIkeDhGroup27PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup27Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup27Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup27)(nil)).Elem()
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27Output() SystemIkeDhGroup27Output {
	return o
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27OutputWithContext(ctx context.Context) SystemIkeDhGroup27Output {
	return o
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return o.ToSystemIkeDhGroup27PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup27Output) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup27) *SystemIkeDhGroup27 {
		return &v
	}).(SystemIkeDhGroup27PtrOutput)
}

func (o SystemIkeDhGroup27Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup27] {
	return pulumix.Output[SystemIkeDhGroup27]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup27Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup27Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup27Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup27) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup27PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup27PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup27)(nil)).Elem()
}

func (o SystemIkeDhGroup27PtrOutput) ToSystemIkeDhGroup27PtrOutput() SystemIkeDhGroup27PtrOutput {
	return o
}

func (o SystemIkeDhGroup27PtrOutput) ToSystemIkeDhGroup27PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup27PtrOutput {
	return o
}

func (o SystemIkeDhGroup27PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup27] {
	return pulumix.Output[*SystemIkeDhGroup27]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup27PtrOutput) Elem() SystemIkeDhGroup27Output {
	return o.ApplyT(func(v *SystemIkeDhGroup27) SystemIkeDhGroup27 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup27
		return ret
	}).(SystemIkeDhGroup27Output)
}

func (o SystemIkeDhGroup27PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup27PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup27PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup27) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup28 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup28Input is an input type that accepts SystemIkeDhGroup28Args and SystemIkeDhGroup28Output values.
// You can construct a concrete instance of `SystemIkeDhGroup28Input` via:
//
//	SystemIkeDhGroup28Args{...}
type SystemIkeDhGroup28Input interface {
	pulumi.Input

	ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output
	ToSystemIkeDhGroup28OutputWithContext(context.Context) SystemIkeDhGroup28Output
}

type SystemIkeDhGroup28Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup28Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup28)(nil)).Elem()
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output {
	return i.ToSystemIkeDhGroup28OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28OutputWithContext(ctx context.Context) SystemIkeDhGroup28Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28Output)
}

func (i SystemIkeDhGroup28Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup28] {
	return pulumix.Output[SystemIkeDhGroup28]{
		OutputState: i.ToSystemIkeDhGroup28OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return i.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup28Args) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28Output).ToSystemIkeDhGroup28PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup28PtrInput is an input type that accepts SystemIkeDhGroup28Args, SystemIkeDhGroup28Ptr and SystemIkeDhGroup28PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup28PtrInput` via:
//
//	        SystemIkeDhGroup28Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup28PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput
	ToSystemIkeDhGroup28PtrOutputWithContext(context.Context) SystemIkeDhGroup28PtrOutput
}

type systemIkeDhGroup28PtrType SystemIkeDhGroup28Args

func SystemIkeDhGroup28Ptr(v *SystemIkeDhGroup28Args) SystemIkeDhGroup28PtrInput {
	return (*systemIkeDhGroup28PtrType)(v)
}

func (*systemIkeDhGroup28PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup28)(nil)).Elem()
}

func (i *systemIkeDhGroup28PtrType) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return i.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup28PtrType) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup28PtrOutput)
}

func (i *systemIkeDhGroup28PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup28] {
	return pulumix.Output[*SystemIkeDhGroup28]{
		OutputState: i.ToSystemIkeDhGroup28PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup28Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup28Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup28)(nil)).Elem()
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28Output() SystemIkeDhGroup28Output {
	return o
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28OutputWithContext(ctx context.Context) SystemIkeDhGroup28Output {
	return o
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return o.ToSystemIkeDhGroup28PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup28Output) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup28) *SystemIkeDhGroup28 {
		return &v
	}).(SystemIkeDhGroup28PtrOutput)
}

func (o SystemIkeDhGroup28Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup28] {
	return pulumix.Output[SystemIkeDhGroup28]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup28Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup28Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup28Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup28) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup28PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup28PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup28)(nil)).Elem()
}

func (o SystemIkeDhGroup28PtrOutput) ToSystemIkeDhGroup28PtrOutput() SystemIkeDhGroup28PtrOutput {
	return o
}

func (o SystemIkeDhGroup28PtrOutput) ToSystemIkeDhGroup28PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup28PtrOutput {
	return o
}

func (o SystemIkeDhGroup28PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup28] {
	return pulumix.Output[*SystemIkeDhGroup28]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup28PtrOutput) Elem() SystemIkeDhGroup28Output {
	return o.ApplyT(func(v *SystemIkeDhGroup28) SystemIkeDhGroup28 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup28
		return ret
	}).(SystemIkeDhGroup28Output)
}

func (o SystemIkeDhGroup28PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup28PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup28PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup28) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup29 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup29Input is an input type that accepts SystemIkeDhGroup29Args and SystemIkeDhGroup29Output values.
// You can construct a concrete instance of `SystemIkeDhGroup29Input` via:
//
//	SystemIkeDhGroup29Args{...}
type SystemIkeDhGroup29Input interface {
	pulumi.Input

	ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output
	ToSystemIkeDhGroup29OutputWithContext(context.Context) SystemIkeDhGroup29Output
}

type SystemIkeDhGroup29Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup29Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup29)(nil)).Elem()
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output {
	return i.ToSystemIkeDhGroup29OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29OutputWithContext(ctx context.Context) SystemIkeDhGroup29Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29Output)
}

func (i SystemIkeDhGroup29Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup29] {
	return pulumix.Output[SystemIkeDhGroup29]{
		OutputState: i.ToSystemIkeDhGroup29OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return i.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup29Args) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29Output).ToSystemIkeDhGroup29PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup29PtrInput is an input type that accepts SystemIkeDhGroup29Args, SystemIkeDhGroup29Ptr and SystemIkeDhGroup29PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup29PtrInput` via:
//
//	        SystemIkeDhGroup29Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup29PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput
	ToSystemIkeDhGroup29PtrOutputWithContext(context.Context) SystemIkeDhGroup29PtrOutput
}

type systemIkeDhGroup29PtrType SystemIkeDhGroup29Args

func SystemIkeDhGroup29Ptr(v *SystemIkeDhGroup29Args) SystemIkeDhGroup29PtrInput {
	return (*systemIkeDhGroup29PtrType)(v)
}

func (*systemIkeDhGroup29PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup29)(nil)).Elem()
}

func (i *systemIkeDhGroup29PtrType) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return i.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup29PtrType) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup29PtrOutput)
}

func (i *systemIkeDhGroup29PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup29] {
	return pulumix.Output[*SystemIkeDhGroup29]{
		OutputState: i.ToSystemIkeDhGroup29PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup29Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup29Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup29)(nil)).Elem()
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29Output() SystemIkeDhGroup29Output {
	return o
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29OutputWithContext(ctx context.Context) SystemIkeDhGroup29Output {
	return o
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return o.ToSystemIkeDhGroup29PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup29Output) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup29) *SystemIkeDhGroup29 {
		return &v
	}).(SystemIkeDhGroup29PtrOutput)
}

func (o SystemIkeDhGroup29Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup29] {
	return pulumix.Output[SystemIkeDhGroup29]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup29Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup29Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup29Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup29) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup29PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup29PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup29)(nil)).Elem()
}

func (o SystemIkeDhGroup29PtrOutput) ToSystemIkeDhGroup29PtrOutput() SystemIkeDhGroup29PtrOutput {
	return o
}

func (o SystemIkeDhGroup29PtrOutput) ToSystemIkeDhGroup29PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup29PtrOutput {
	return o
}

func (o SystemIkeDhGroup29PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup29] {
	return pulumix.Output[*SystemIkeDhGroup29]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup29PtrOutput) Elem() SystemIkeDhGroup29Output {
	return o.ApplyT(func(v *SystemIkeDhGroup29) SystemIkeDhGroup29 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup29
		return ret
	}).(SystemIkeDhGroup29Output)
}

func (o SystemIkeDhGroup29PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup29PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup29PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup29) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup2 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup2Input is an input type that accepts SystemIkeDhGroup2Args and SystemIkeDhGroup2Output values.
// You can construct a concrete instance of `SystemIkeDhGroup2Input` via:
//
//	SystemIkeDhGroup2Args{...}
type SystemIkeDhGroup2Input interface {
	pulumi.Input

	ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output
	ToSystemIkeDhGroup2OutputWithContext(context.Context) SystemIkeDhGroup2Output
}

type SystemIkeDhGroup2Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup2)(nil)).Elem()
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output {
	return i.ToSystemIkeDhGroup2OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2OutputWithContext(ctx context.Context) SystemIkeDhGroup2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2Output)
}

func (i SystemIkeDhGroup2Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup2] {
	return pulumix.Output[SystemIkeDhGroup2]{
		OutputState: i.ToSystemIkeDhGroup2OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return i.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup2Args) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2Output).ToSystemIkeDhGroup2PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup2PtrInput is an input type that accepts SystemIkeDhGroup2Args, SystemIkeDhGroup2Ptr and SystemIkeDhGroup2PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup2PtrInput` via:
//
//	        SystemIkeDhGroup2Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup2PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput
	ToSystemIkeDhGroup2PtrOutputWithContext(context.Context) SystemIkeDhGroup2PtrOutput
}

type systemIkeDhGroup2PtrType SystemIkeDhGroup2Args

func SystemIkeDhGroup2Ptr(v *SystemIkeDhGroup2Args) SystemIkeDhGroup2PtrInput {
	return (*systemIkeDhGroup2PtrType)(v)
}

func (*systemIkeDhGroup2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup2)(nil)).Elem()
}

func (i *systemIkeDhGroup2PtrType) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return i.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup2PtrType) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup2PtrOutput)
}

func (i *systemIkeDhGroup2PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup2] {
	return pulumix.Output[*SystemIkeDhGroup2]{
		OutputState: i.ToSystemIkeDhGroup2PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup2Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup2)(nil)).Elem()
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2Output() SystemIkeDhGroup2Output {
	return o
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2OutputWithContext(ctx context.Context) SystemIkeDhGroup2Output {
	return o
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return o.ToSystemIkeDhGroup2PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup2Output) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup2) *SystemIkeDhGroup2 {
		return &v
	}).(SystemIkeDhGroup2PtrOutput)
}

func (o SystemIkeDhGroup2Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup2] {
	return pulumix.Output[SystemIkeDhGroup2]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup2Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup2Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup2Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup2) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup2PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup2)(nil)).Elem()
}

func (o SystemIkeDhGroup2PtrOutput) ToSystemIkeDhGroup2PtrOutput() SystemIkeDhGroup2PtrOutput {
	return o
}

func (o SystemIkeDhGroup2PtrOutput) ToSystemIkeDhGroup2PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup2PtrOutput {
	return o
}

func (o SystemIkeDhGroup2PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup2] {
	return pulumix.Output[*SystemIkeDhGroup2]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup2PtrOutput) Elem() SystemIkeDhGroup2Output {
	return o.ApplyT(func(v *SystemIkeDhGroup2) SystemIkeDhGroup2 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup2
		return ret
	}).(SystemIkeDhGroup2Output)
}

func (o SystemIkeDhGroup2PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup2PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup2PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup2) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup30 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup30Input is an input type that accepts SystemIkeDhGroup30Args and SystemIkeDhGroup30Output values.
// You can construct a concrete instance of `SystemIkeDhGroup30Input` via:
//
//	SystemIkeDhGroup30Args{...}
type SystemIkeDhGroup30Input interface {
	pulumi.Input

	ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output
	ToSystemIkeDhGroup30OutputWithContext(context.Context) SystemIkeDhGroup30Output
}

type SystemIkeDhGroup30Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup30Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup30)(nil)).Elem()
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output {
	return i.ToSystemIkeDhGroup30OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30OutputWithContext(ctx context.Context) SystemIkeDhGroup30Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30Output)
}

func (i SystemIkeDhGroup30Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup30] {
	return pulumix.Output[SystemIkeDhGroup30]{
		OutputState: i.ToSystemIkeDhGroup30OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return i.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup30Args) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30Output).ToSystemIkeDhGroup30PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup30PtrInput is an input type that accepts SystemIkeDhGroup30Args, SystemIkeDhGroup30Ptr and SystemIkeDhGroup30PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup30PtrInput` via:
//
//	        SystemIkeDhGroup30Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup30PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput
	ToSystemIkeDhGroup30PtrOutputWithContext(context.Context) SystemIkeDhGroup30PtrOutput
}

type systemIkeDhGroup30PtrType SystemIkeDhGroup30Args

func SystemIkeDhGroup30Ptr(v *SystemIkeDhGroup30Args) SystemIkeDhGroup30PtrInput {
	return (*systemIkeDhGroup30PtrType)(v)
}

func (*systemIkeDhGroup30PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup30)(nil)).Elem()
}

func (i *systemIkeDhGroup30PtrType) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return i.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup30PtrType) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup30PtrOutput)
}

func (i *systemIkeDhGroup30PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup30] {
	return pulumix.Output[*SystemIkeDhGroup30]{
		OutputState: i.ToSystemIkeDhGroup30PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup30Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup30Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup30)(nil)).Elem()
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30Output() SystemIkeDhGroup30Output {
	return o
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30OutputWithContext(ctx context.Context) SystemIkeDhGroup30Output {
	return o
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return o.ToSystemIkeDhGroup30PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup30Output) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup30) *SystemIkeDhGroup30 {
		return &v
	}).(SystemIkeDhGroup30PtrOutput)
}

func (o SystemIkeDhGroup30Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup30] {
	return pulumix.Output[SystemIkeDhGroup30]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup30Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup30Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup30Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup30) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup30PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup30PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup30)(nil)).Elem()
}

func (o SystemIkeDhGroup30PtrOutput) ToSystemIkeDhGroup30PtrOutput() SystemIkeDhGroup30PtrOutput {
	return o
}

func (o SystemIkeDhGroup30PtrOutput) ToSystemIkeDhGroup30PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup30PtrOutput {
	return o
}

func (o SystemIkeDhGroup30PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup30] {
	return pulumix.Output[*SystemIkeDhGroup30]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup30PtrOutput) Elem() SystemIkeDhGroup30Output {
	return o.ApplyT(func(v *SystemIkeDhGroup30) SystemIkeDhGroup30 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup30
		return ret
	}).(SystemIkeDhGroup30Output)
}

func (o SystemIkeDhGroup30PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup30PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup30PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup30) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup31 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup31Input is an input type that accepts SystemIkeDhGroup31Args and SystemIkeDhGroup31Output values.
// You can construct a concrete instance of `SystemIkeDhGroup31Input` via:
//
//	SystemIkeDhGroup31Args{...}
type SystemIkeDhGroup31Input interface {
	pulumi.Input

	ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output
	ToSystemIkeDhGroup31OutputWithContext(context.Context) SystemIkeDhGroup31Output
}

type SystemIkeDhGroup31Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup31Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup31)(nil)).Elem()
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output {
	return i.ToSystemIkeDhGroup31OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31OutputWithContext(ctx context.Context) SystemIkeDhGroup31Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31Output)
}

func (i SystemIkeDhGroup31Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup31] {
	return pulumix.Output[SystemIkeDhGroup31]{
		OutputState: i.ToSystemIkeDhGroup31OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return i.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup31Args) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31Output).ToSystemIkeDhGroup31PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup31PtrInput is an input type that accepts SystemIkeDhGroup31Args, SystemIkeDhGroup31Ptr and SystemIkeDhGroup31PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup31PtrInput` via:
//
//	        SystemIkeDhGroup31Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup31PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput
	ToSystemIkeDhGroup31PtrOutputWithContext(context.Context) SystemIkeDhGroup31PtrOutput
}

type systemIkeDhGroup31PtrType SystemIkeDhGroup31Args

func SystemIkeDhGroup31Ptr(v *SystemIkeDhGroup31Args) SystemIkeDhGroup31PtrInput {
	return (*systemIkeDhGroup31PtrType)(v)
}

func (*systemIkeDhGroup31PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup31)(nil)).Elem()
}

func (i *systemIkeDhGroup31PtrType) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return i.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup31PtrType) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup31PtrOutput)
}

func (i *systemIkeDhGroup31PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup31] {
	return pulumix.Output[*SystemIkeDhGroup31]{
		OutputState: i.ToSystemIkeDhGroup31PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup31Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup31Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup31)(nil)).Elem()
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31Output() SystemIkeDhGroup31Output {
	return o
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31OutputWithContext(ctx context.Context) SystemIkeDhGroup31Output {
	return o
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return o.ToSystemIkeDhGroup31PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup31Output) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup31) *SystemIkeDhGroup31 {
		return &v
	}).(SystemIkeDhGroup31PtrOutput)
}

func (o SystemIkeDhGroup31Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup31] {
	return pulumix.Output[SystemIkeDhGroup31]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup31Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup31Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup31Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup31) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup31PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup31PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup31)(nil)).Elem()
}

func (o SystemIkeDhGroup31PtrOutput) ToSystemIkeDhGroup31PtrOutput() SystemIkeDhGroup31PtrOutput {
	return o
}

func (o SystemIkeDhGroup31PtrOutput) ToSystemIkeDhGroup31PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup31PtrOutput {
	return o
}

func (o SystemIkeDhGroup31PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup31] {
	return pulumix.Output[*SystemIkeDhGroup31]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup31PtrOutput) Elem() SystemIkeDhGroup31Output {
	return o.ApplyT(func(v *SystemIkeDhGroup31) SystemIkeDhGroup31 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup31
		return ret
	}).(SystemIkeDhGroup31Output)
}

func (o SystemIkeDhGroup31PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup31PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup31PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup31) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup32 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup32Input is an input type that accepts SystemIkeDhGroup32Args and SystemIkeDhGroup32Output values.
// You can construct a concrete instance of `SystemIkeDhGroup32Input` via:
//
//	SystemIkeDhGroup32Args{...}
type SystemIkeDhGroup32Input interface {
	pulumi.Input

	ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output
	ToSystemIkeDhGroup32OutputWithContext(context.Context) SystemIkeDhGroup32Output
}

type SystemIkeDhGroup32Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup32Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup32)(nil)).Elem()
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output {
	return i.ToSystemIkeDhGroup32OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32OutputWithContext(ctx context.Context) SystemIkeDhGroup32Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32Output)
}

func (i SystemIkeDhGroup32Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup32] {
	return pulumix.Output[SystemIkeDhGroup32]{
		OutputState: i.ToSystemIkeDhGroup32OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return i.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup32Args) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32Output).ToSystemIkeDhGroup32PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup32PtrInput is an input type that accepts SystemIkeDhGroup32Args, SystemIkeDhGroup32Ptr and SystemIkeDhGroup32PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup32PtrInput` via:
//
//	        SystemIkeDhGroup32Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup32PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput
	ToSystemIkeDhGroup32PtrOutputWithContext(context.Context) SystemIkeDhGroup32PtrOutput
}

type systemIkeDhGroup32PtrType SystemIkeDhGroup32Args

func SystemIkeDhGroup32Ptr(v *SystemIkeDhGroup32Args) SystemIkeDhGroup32PtrInput {
	return (*systemIkeDhGroup32PtrType)(v)
}

func (*systemIkeDhGroup32PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup32)(nil)).Elem()
}

func (i *systemIkeDhGroup32PtrType) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return i.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup32PtrType) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup32PtrOutput)
}

func (i *systemIkeDhGroup32PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup32] {
	return pulumix.Output[*SystemIkeDhGroup32]{
		OutputState: i.ToSystemIkeDhGroup32PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup32Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup32Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup32)(nil)).Elem()
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32Output() SystemIkeDhGroup32Output {
	return o
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32OutputWithContext(ctx context.Context) SystemIkeDhGroup32Output {
	return o
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return o.ToSystemIkeDhGroup32PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup32Output) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup32) *SystemIkeDhGroup32 {
		return &v
	}).(SystemIkeDhGroup32PtrOutput)
}

func (o SystemIkeDhGroup32Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup32] {
	return pulumix.Output[SystemIkeDhGroup32]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup32Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup32Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup32Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup32) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup32PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup32PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup32)(nil)).Elem()
}

func (o SystemIkeDhGroup32PtrOutput) ToSystemIkeDhGroup32PtrOutput() SystemIkeDhGroup32PtrOutput {
	return o
}

func (o SystemIkeDhGroup32PtrOutput) ToSystemIkeDhGroup32PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup32PtrOutput {
	return o
}

func (o SystemIkeDhGroup32PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup32] {
	return pulumix.Output[*SystemIkeDhGroup32]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup32PtrOutput) Elem() SystemIkeDhGroup32Output {
	return o.ApplyT(func(v *SystemIkeDhGroup32) SystemIkeDhGroup32 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup32
		return ret
	}).(SystemIkeDhGroup32Output)
}

func (o SystemIkeDhGroup32PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup32PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup32PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup32) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup5 struct {
	KeypairCache *string `pulumi:"keypairCache"`
	KeypairCount *int    `pulumi:"keypairCount"`
	Mode         *string `pulumi:"mode"`
}

// SystemIkeDhGroup5Input is an input type that accepts SystemIkeDhGroup5Args and SystemIkeDhGroup5Output values.
// You can construct a concrete instance of `SystemIkeDhGroup5Input` via:
//
//	SystemIkeDhGroup5Args{...}
type SystemIkeDhGroup5Input interface {
	pulumi.Input

	ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output
	ToSystemIkeDhGroup5OutputWithContext(context.Context) SystemIkeDhGroup5Output
}

type SystemIkeDhGroup5Args struct {
	KeypairCache pulumi.StringPtrInput `pulumi:"keypairCache"`
	KeypairCount pulumi.IntPtrInput    `pulumi:"keypairCount"`
	Mode         pulumi.StringPtrInput `pulumi:"mode"`
}

func (SystemIkeDhGroup5Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup5)(nil)).Elem()
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output {
	return i.ToSystemIkeDhGroup5OutputWithContext(context.Background())
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5OutputWithContext(ctx context.Context) SystemIkeDhGroup5Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5Output)
}

func (i SystemIkeDhGroup5Args) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup5] {
	return pulumix.Output[SystemIkeDhGroup5]{
		OutputState: i.ToSystemIkeDhGroup5OutputWithContext(ctx).OutputState,
	}
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return i.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i SystemIkeDhGroup5Args) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5Output).ToSystemIkeDhGroup5PtrOutputWithContext(ctx)
}

// SystemIkeDhGroup5PtrInput is an input type that accepts SystemIkeDhGroup5Args, SystemIkeDhGroup5Ptr and SystemIkeDhGroup5PtrOutput values.
// You can construct a concrete instance of `SystemIkeDhGroup5PtrInput` via:
//
//	        SystemIkeDhGroup5Args{...}
//
//	or:
//
//	        nil
type SystemIkeDhGroup5PtrInput interface {
	pulumi.Input

	ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput
	ToSystemIkeDhGroup5PtrOutputWithContext(context.Context) SystemIkeDhGroup5PtrOutput
}

type systemIkeDhGroup5PtrType SystemIkeDhGroup5Args

func SystemIkeDhGroup5Ptr(v *SystemIkeDhGroup5Args) SystemIkeDhGroup5PtrInput {
	return (*systemIkeDhGroup5PtrType)(v)
}

func (*systemIkeDhGroup5PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup5)(nil)).Elem()
}

func (i *systemIkeDhGroup5PtrType) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return i.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (i *systemIkeDhGroup5PtrType) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIkeDhGroup5PtrOutput)
}

func (i *systemIkeDhGroup5PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup5] {
	return pulumix.Output[*SystemIkeDhGroup5]{
		OutputState: i.ToSystemIkeDhGroup5PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemIkeDhGroup5Output struct{ *pulumi.OutputState }

func (SystemIkeDhGroup5Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIkeDhGroup5)(nil)).Elem()
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5Output() SystemIkeDhGroup5Output {
	return o
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5OutputWithContext(ctx context.Context) SystemIkeDhGroup5Output {
	return o
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return o.ToSystemIkeDhGroup5PtrOutputWithContext(context.Background())
}

func (o SystemIkeDhGroup5Output) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemIkeDhGroup5) *SystemIkeDhGroup5 {
		return &v
	}).(SystemIkeDhGroup5PtrOutput)
}

func (o SystemIkeDhGroup5Output) ToOutput(ctx context.Context) pulumix.Output[SystemIkeDhGroup5] {
	return pulumix.Output[SystemIkeDhGroup5]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup5Output) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *string { return v.KeypairCache }).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup5Output) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *int { return v.KeypairCount }).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup5Output) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIkeDhGroup5) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SystemIkeDhGroup5PtrOutput struct{ *pulumi.OutputState }

func (SystemIkeDhGroup5PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIkeDhGroup5)(nil)).Elem()
}

func (o SystemIkeDhGroup5PtrOutput) ToSystemIkeDhGroup5PtrOutput() SystemIkeDhGroup5PtrOutput {
	return o
}

func (o SystemIkeDhGroup5PtrOutput) ToSystemIkeDhGroup5PtrOutputWithContext(ctx context.Context) SystemIkeDhGroup5PtrOutput {
	return o
}

func (o SystemIkeDhGroup5PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIkeDhGroup5] {
	return pulumix.Output[*SystemIkeDhGroup5]{
		OutputState: o.OutputState,
	}
}

func (o SystemIkeDhGroup5PtrOutput) Elem() SystemIkeDhGroup5Output {
	return o.ApplyT(func(v *SystemIkeDhGroup5) SystemIkeDhGroup5 {
		if v != nil {
			return *v
		}
		var ret SystemIkeDhGroup5
		return ret
	}).(SystemIkeDhGroup5Output)
}

func (o SystemIkeDhGroup5PtrOutput) KeypairCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.KeypairCache
	}).(pulumi.StringPtrOutput)
}

func (o SystemIkeDhGroup5PtrOutput) KeypairCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *int {
		if v == nil {
			return nil
		}
		return v.KeypairCount
	}).(pulumi.IntPtrOutput)
}

func (o SystemIkeDhGroup5PtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIkeDhGroup5) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type SystemInterfaceClientOption struct {
	Code  *int    `pulumi:"code"`
	Id    *int    `pulumi:"id"`
	Ip    *string `pulumi:"ip"`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// SystemInterfaceClientOptionInput is an input type that accepts SystemInterfaceClientOptionArgs and SystemInterfaceClientOptionOutput values.
// You can construct a concrete instance of `SystemInterfaceClientOptionInput` via:
//
//	SystemInterfaceClientOptionArgs{...}
type SystemInterfaceClientOptionInput interface {
	pulumi.Input

	ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput
	ToSystemInterfaceClientOptionOutputWithContext(context.Context) SystemInterfaceClientOptionOutput
}

type SystemInterfaceClientOptionArgs struct {
	Code  pulumi.IntPtrInput    `pulumi:"code"`
	Id    pulumi.IntPtrInput    `pulumi:"id"`
	Ip    pulumi.StringPtrInput `pulumi:"ip"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SystemInterfaceClientOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceClientOption)(nil)).Elem()
}

func (i SystemInterfaceClientOptionArgs) ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput {
	return i.ToSystemInterfaceClientOptionOutputWithContext(context.Background())
}

func (i SystemInterfaceClientOptionArgs) ToSystemInterfaceClientOptionOutputWithContext(ctx context.Context) SystemInterfaceClientOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceClientOptionOutput)
}

func (i SystemInterfaceClientOptionArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceClientOption] {
	return pulumix.Output[SystemInterfaceClientOption]{
		OutputState: i.ToSystemInterfaceClientOptionOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceClientOptionArrayInput is an input type that accepts SystemInterfaceClientOptionArray and SystemInterfaceClientOptionArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceClientOptionArrayInput` via:
//
//	SystemInterfaceClientOptionArray{ SystemInterfaceClientOptionArgs{...} }
type SystemInterfaceClientOptionArrayInput interface {
	pulumi.Input

	ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput
	ToSystemInterfaceClientOptionArrayOutputWithContext(context.Context) SystemInterfaceClientOptionArrayOutput
}

type SystemInterfaceClientOptionArray []SystemInterfaceClientOptionInput

func (SystemInterfaceClientOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceClientOption)(nil)).Elem()
}

func (i SystemInterfaceClientOptionArray) ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput {
	return i.ToSystemInterfaceClientOptionArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceClientOptionArray) ToSystemInterfaceClientOptionArrayOutputWithContext(ctx context.Context) SystemInterfaceClientOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceClientOptionArrayOutput)
}

func (i SystemInterfaceClientOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceClientOption] {
	return pulumix.Output[[]SystemInterfaceClientOption]{
		OutputState: i.ToSystemInterfaceClientOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceClientOptionOutput struct{ *pulumi.OutputState }

func (SystemInterfaceClientOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceClientOption)(nil)).Elem()
}

func (o SystemInterfaceClientOptionOutput) ToSystemInterfaceClientOptionOutput() SystemInterfaceClientOptionOutput {
	return o
}

func (o SystemInterfaceClientOptionOutput) ToSystemInterfaceClientOptionOutputWithContext(ctx context.Context) SystemInterfaceClientOptionOutput {
	return o
}

func (o SystemInterfaceClientOptionOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceClientOption] {
	return pulumix.Output[SystemInterfaceClientOption]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceClientOptionOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *int { return v.Code }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceClientOptionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceClientOptionOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceClientOptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceClientOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceClientOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SystemInterfaceClientOptionArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceClientOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceClientOption)(nil)).Elem()
}

func (o SystemInterfaceClientOptionArrayOutput) ToSystemInterfaceClientOptionArrayOutput() SystemInterfaceClientOptionArrayOutput {
	return o
}

func (o SystemInterfaceClientOptionArrayOutput) ToSystemInterfaceClientOptionArrayOutputWithContext(ctx context.Context) SystemInterfaceClientOptionArrayOutput {
	return o
}

func (o SystemInterfaceClientOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceClientOption] {
	return pulumix.Output[[]SystemInterfaceClientOption]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceClientOptionArrayOutput) Index(i pulumi.IntInput) SystemInterfaceClientOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceClientOption {
		return vs[0].([]SystemInterfaceClientOption)[vs[1].(int)]
	}).(SystemInterfaceClientOptionOutput)
}

type SystemInterfaceDhcpSnoopingServerList struct {
	Name     *string `pulumi:"name"`
	ServerIp *string `pulumi:"serverIp"`
}

// SystemInterfaceDhcpSnoopingServerListInput is an input type that accepts SystemInterfaceDhcpSnoopingServerListArgs and SystemInterfaceDhcpSnoopingServerListOutput values.
// You can construct a concrete instance of `SystemInterfaceDhcpSnoopingServerListInput` via:
//
//	SystemInterfaceDhcpSnoopingServerListArgs{...}
type SystemInterfaceDhcpSnoopingServerListInput interface {
	pulumi.Input

	ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput
	ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(context.Context) SystemInterfaceDhcpSnoopingServerListOutput
}

type SystemInterfaceDhcpSnoopingServerListArgs struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	ServerIp pulumi.StringPtrInput `pulumi:"serverIp"`
}

func (SystemInterfaceDhcpSnoopingServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i SystemInterfaceDhcpSnoopingServerListArgs) ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput {
	return i.ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(context.Background())
}

func (i SystemInterfaceDhcpSnoopingServerListArgs) ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceDhcpSnoopingServerListOutput)
}

func (i SystemInterfaceDhcpSnoopingServerListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceDhcpSnoopingServerList] {
	return pulumix.Output[SystemInterfaceDhcpSnoopingServerList]{
		OutputState: i.ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceDhcpSnoopingServerListArrayInput is an input type that accepts SystemInterfaceDhcpSnoopingServerListArray and SystemInterfaceDhcpSnoopingServerListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceDhcpSnoopingServerListArrayInput` via:
//
//	SystemInterfaceDhcpSnoopingServerListArray{ SystemInterfaceDhcpSnoopingServerListArgs{...} }
type SystemInterfaceDhcpSnoopingServerListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput
	ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput
}

type SystemInterfaceDhcpSnoopingServerListArray []SystemInterfaceDhcpSnoopingServerListInput

func (SystemInterfaceDhcpSnoopingServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (i SystemInterfaceDhcpSnoopingServerListArray) ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return i.ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceDhcpSnoopingServerListArray) ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceDhcpSnoopingServerListArrayOutput)
}

func (i SystemInterfaceDhcpSnoopingServerListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceDhcpSnoopingServerList] {
	return pulumix.Output[[]SystemInterfaceDhcpSnoopingServerList]{
		OutputState: i.ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceDhcpSnoopingServerListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceDhcpSnoopingServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ToSystemInterfaceDhcpSnoopingServerListOutput() SystemInterfaceDhcpSnoopingServerListOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ToSystemInterfaceDhcpSnoopingServerListOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceDhcpSnoopingServerList] {
	return pulumix.Output[SystemInterfaceDhcpSnoopingServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceDhcpSnoopingServerList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceDhcpSnoopingServerListOutput) ServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceDhcpSnoopingServerList) *string { return v.ServerIp }).(pulumi.StringPtrOutput)
}

type SystemInterfaceDhcpSnoopingServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceDhcpSnoopingServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceDhcpSnoopingServerList)(nil)).Elem()
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) ToSystemInterfaceDhcpSnoopingServerListArrayOutput() SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) ToSystemInterfaceDhcpSnoopingServerListArrayOutputWithContext(ctx context.Context) SystemInterfaceDhcpSnoopingServerListArrayOutput {
	return o
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceDhcpSnoopingServerList] {
	return pulumix.Output[[]SystemInterfaceDhcpSnoopingServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceDhcpSnoopingServerListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceDhcpSnoopingServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceDhcpSnoopingServerList {
		return vs[0].([]SystemInterfaceDhcpSnoopingServerList)[vs[1].(int)]
	}).(SystemInterfaceDhcpSnoopingServerListOutput)
}

type SystemInterfaceFailAlertInterface struct {
	Name *string `pulumi:"name"`
}

// SystemInterfaceFailAlertInterfaceInput is an input type that accepts SystemInterfaceFailAlertInterfaceArgs and SystemInterfaceFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemInterfaceFailAlertInterfaceInput` via:
//
//	SystemInterfaceFailAlertInterfaceArgs{...}
type SystemInterfaceFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput
	ToSystemInterfaceFailAlertInterfaceOutputWithContext(context.Context) SystemInterfaceFailAlertInterfaceOutput
}

type SystemInterfaceFailAlertInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (i SystemInterfaceFailAlertInterfaceArgs) ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput {
	return i.ToSystemInterfaceFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemInterfaceFailAlertInterfaceArgs) ToSystemInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceFailAlertInterfaceOutput)
}

func (i SystemInterfaceFailAlertInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceFailAlertInterface] {
	return pulumix.Output[SystemInterfaceFailAlertInterface]{
		OutputState: i.ToSystemInterfaceFailAlertInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceFailAlertInterfaceArrayInput is an input type that accepts SystemInterfaceFailAlertInterfaceArray and SystemInterfaceFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceFailAlertInterfaceArrayInput` via:
//
//	SystemInterfaceFailAlertInterfaceArray{ SystemInterfaceFailAlertInterfaceArgs{...} }
type SystemInterfaceFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput
	ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(context.Context) SystemInterfaceFailAlertInterfaceArrayOutput
}

type SystemInterfaceFailAlertInterfaceArray []SystemInterfaceFailAlertInterfaceInput

func (SystemInterfaceFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (i SystemInterfaceFailAlertInterfaceArray) ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput {
	return i.ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceFailAlertInterfaceArray) ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceFailAlertInterfaceArrayOutput)
}

func (i SystemInterfaceFailAlertInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceFailAlertInterface] {
	return pulumix.Output[[]SystemInterfaceFailAlertInterface]{
		OutputState: i.ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemInterfaceFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (o SystemInterfaceFailAlertInterfaceOutput) ToSystemInterfaceFailAlertInterfaceOutput() SystemInterfaceFailAlertInterfaceOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceOutput) ToSystemInterfaceFailAlertInterfaceOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceFailAlertInterface] {
	return pulumix.Output[SystemInterfaceFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceFailAlertInterface)(nil)).Elem()
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) ToSystemInterfaceFailAlertInterfaceArrayOutput() SystemInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) ToSystemInterfaceFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceFailAlertInterface] {
	return pulumix.Output[[]SystemInterfaceFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemInterfaceFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceFailAlertInterface {
		return vs[0].([]SystemInterfaceFailAlertInterface)[vs[1].(int)]
	}).(SystemInterfaceFailAlertInterfaceOutput)
}

type SystemInterfaceIpv6 struct {
	Autoconf                  *string                                     `pulumi:"autoconf"`
	CliConn6Status            *int                                        `pulumi:"cliConn6Status"`
	Dhcp6ClientOptions        *string                                     `pulumi:"dhcp6ClientOptions"`
	Dhcp6IapdLists            []SystemInterfaceIpv6Dhcp6IapdList          `pulumi:"dhcp6IapdLists"`
	Dhcp6InformationRequest   *string                                     `pulumi:"dhcp6InformationRequest"`
	Dhcp6PrefixDelegation     *string                                     `pulumi:"dhcp6PrefixDelegation"`
	Dhcp6PrefixHint           *string                                     `pulumi:"dhcp6PrefixHint"`
	Dhcp6PrefixHintPlt        *int                                        `pulumi:"dhcp6PrefixHintPlt"`
	Dhcp6PrefixHintVlt        *int                                        `pulumi:"dhcp6PrefixHintVlt"`
	Dhcp6RelayInterfaceId     *string                                     `pulumi:"dhcp6RelayInterfaceId"`
	Dhcp6RelayIp              *string                                     `pulumi:"dhcp6RelayIp"`
	Dhcp6RelayService         *string                                     `pulumi:"dhcp6RelayService"`
	Dhcp6RelaySourceInterface *string                                     `pulumi:"dhcp6RelaySourceInterface"`
	Dhcp6RelaySourceIp        *string                                     `pulumi:"dhcp6RelaySourceIp"`
	Dhcp6RelayType            *string                                     `pulumi:"dhcp6RelayType"`
	Icmp6SendRedirect         *string                                     `pulumi:"icmp6SendRedirect"`
	InterfaceIdentifier       *string                                     `pulumi:"interfaceIdentifier"`
	Ip6Address                *string                                     `pulumi:"ip6Address"`
	Ip6Allowaccess            *string                                     `pulumi:"ip6Allowaccess"`
	Ip6DefaultLife            *int                                        `pulumi:"ip6DefaultLife"`
	Ip6DelegatedPrefixIaid    *int                                        `pulumi:"ip6DelegatedPrefixIaid"`
	Ip6DelegatedPrefixLists   []SystemInterfaceIpv6Ip6DelegatedPrefixList `pulumi:"ip6DelegatedPrefixLists"`
	Ip6DnsServerOverride      *string                                     `pulumi:"ip6DnsServerOverride"`
	Ip6ExtraAddrs             []SystemInterfaceIpv6Ip6ExtraAddr           `pulumi:"ip6ExtraAddrs"`
	Ip6HopLimit               *int                                        `pulumi:"ip6HopLimit"`
	Ip6LinkMtu                *int                                        `pulumi:"ip6LinkMtu"`
	Ip6ManageFlag             *string                                     `pulumi:"ip6ManageFlag"`
	Ip6MaxInterval            *int                                        `pulumi:"ip6MaxInterval"`
	Ip6MinInterval            *int                                        `pulumi:"ip6MinInterval"`
	Ip6Mode                   *string                                     `pulumi:"ip6Mode"`
	Ip6OtherFlag              *string                                     `pulumi:"ip6OtherFlag"`
	Ip6PrefixLists            []SystemInterfaceIpv6Ip6PrefixList          `pulumi:"ip6PrefixLists"`
	Ip6PrefixMode             *string                                     `pulumi:"ip6PrefixMode"`
	Ip6ReachableTime          *int                                        `pulumi:"ip6ReachableTime"`
	Ip6RetransTime            *int                                        `pulumi:"ip6RetransTime"`
	Ip6SendAdv                *string                                     `pulumi:"ip6SendAdv"`
	Ip6Subnet                 *string                                     `pulumi:"ip6Subnet"`
	Ip6UpstreamInterface      *string                                     `pulumi:"ip6UpstreamInterface"`
	NdCert                    *string                                     `pulumi:"ndCert"`
	NdCgaModifier             *string                                     `pulumi:"ndCgaModifier"`
	NdMode                    *string                                     `pulumi:"ndMode"`
	NdSecurityLevel           *int                                        `pulumi:"ndSecurityLevel"`
	NdTimestampDelta          *int                                        `pulumi:"ndTimestampDelta"`
	NdTimestampFuzz           *int                                        `pulumi:"ndTimestampFuzz"`
	RaSendMtu                 *string                                     `pulumi:"raSendMtu"`
	UniqueAutoconfAddr        *string                                     `pulumi:"uniqueAutoconfAddr"`
	Vrip6LinkLocal            *string                                     `pulumi:"vrip6LinkLocal"`
	Vrrp6s                    []SystemInterfaceIpv6Vrrp6                  `pulumi:"vrrp6s"`
	VrrpVirtualMac6           *string                                     `pulumi:"vrrpVirtualMac6"`
}

// SystemInterfaceIpv6Input is an input type that accepts SystemInterfaceIpv6Args and SystemInterfaceIpv6Output values.
// You can construct a concrete instance of `SystemInterfaceIpv6Input` via:
//
//	SystemInterfaceIpv6Args{...}
type SystemInterfaceIpv6Input interface {
	pulumi.Input

	ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output
	ToSystemInterfaceIpv6OutputWithContext(context.Context) SystemInterfaceIpv6Output
}

type SystemInterfaceIpv6Args struct {
	Autoconf                  pulumi.StringPtrInput                               `pulumi:"autoconf"`
	CliConn6Status            pulumi.IntPtrInput                                  `pulumi:"cliConn6Status"`
	Dhcp6ClientOptions        pulumi.StringPtrInput                               `pulumi:"dhcp6ClientOptions"`
	Dhcp6IapdLists            SystemInterfaceIpv6Dhcp6IapdListArrayInput          `pulumi:"dhcp6IapdLists"`
	Dhcp6InformationRequest   pulumi.StringPtrInput                               `pulumi:"dhcp6InformationRequest"`
	Dhcp6PrefixDelegation     pulumi.StringPtrInput                               `pulumi:"dhcp6PrefixDelegation"`
	Dhcp6PrefixHint           pulumi.StringPtrInput                               `pulumi:"dhcp6PrefixHint"`
	Dhcp6PrefixHintPlt        pulumi.IntPtrInput                                  `pulumi:"dhcp6PrefixHintPlt"`
	Dhcp6PrefixHintVlt        pulumi.IntPtrInput                                  `pulumi:"dhcp6PrefixHintVlt"`
	Dhcp6RelayInterfaceId     pulumi.StringPtrInput                               `pulumi:"dhcp6RelayInterfaceId"`
	Dhcp6RelayIp              pulumi.StringPtrInput                               `pulumi:"dhcp6RelayIp"`
	Dhcp6RelayService         pulumi.StringPtrInput                               `pulumi:"dhcp6RelayService"`
	Dhcp6RelaySourceInterface pulumi.StringPtrInput                               `pulumi:"dhcp6RelaySourceInterface"`
	Dhcp6RelaySourceIp        pulumi.StringPtrInput                               `pulumi:"dhcp6RelaySourceIp"`
	Dhcp6RelayType            pulumi.StringPtrInput                               `pulumi:"dhcp6RelayType"`
	Icmp6SendRedirect         pulumi.StringPtrInput                               `pulumi:"icmp6SendRedirect"`
	InterfaceIdentifier       pulumi.StringPtrInput                               `pulumi:"interfaceIdentifier"`
	Ip6Address                pulumi.StringPtrInput                               `pulumi:"ip6Address"`
	Ip6Allowaccess            pulumi.StringPtrInput                               `pulumi:"ip6Allowaccess"`
	Ip6DefaultLife            pulumi.IntPtrInput                                  `pulumi:"ip6DefaultLife"`
	Ip6DelegatedPrefixIaid    pulumi.IntPtrInput                                  `pulumi:"ip6DelegatedPrefixIaid"`
	Ip6DelegatedPrefixLists   SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput `pulumi:"ip6DelegatedPrefixLists"`
	Ip6DnsServerOverride      pulumi.StringPtrInput                               `pulumi:"ip6DnsServerOverride"`
	Ip6ExtraAddrs             SystemInterfaceIpv6Ip6ExtraAddrArrayInput           `pulumi:"ip6ExtraAddrs"`
	Ip6HopLimit               pulumi.IntPtrInput                                  `pulumi:"ip6HopLimit"`
	Ip6LinkMtu                pulumi.IntPtrInput                                  `pulumi:"ip6LinkMtu"`
	Ip6ManageFlag             pulumi.StringPtrInput                               `pulumi:"ip6ManageFlag"`
	Ip6MaxInterval            pulumi.IntPtrInput                                  `pulumi:"ip6MaxInterval"`
	Ip6MinInterval            pulumi.IntPtrInput                                  `pulumi:"ip6MinInterval"`
	Ip6Mode                   pulumi.StringPtrInput                               `pulumi:"ip6Mode"`
	Ip6OtherFlag              pulumi.StringPtrInput                               `pulumi:"ip6OtherFlag"`
	Ip6PrefixLists            SystemInterfaceIpv6Ip6PrefixListArrayInput          `pulumi:"ip6PrefixLists"`
	Ip6PrefixMode             pulumi.StringPtrInput                               `pulumi:"ip6PrefixMode"`
	Ip6ReachableTime          pulumi.IntPtrInput                                  `pulumi:"ip6ReachableTime"`
	Ip6RetransTime            pulumi.IntPtrInput                                  `pulumi:"ip6RetransTime"`
	Ip6SendAdv                pulumi.StringPtrInput                               `pulumi:"ip6SendAdv"`
	Ip6Subnet                 pulumi.StringPtrInput                               `pulumi:"ip6Subnet"`
	Ip6UpstreamInterface      pulumi.StringPtrInput                               `pulumi:"ip6UpstreamInterface"`
	NdCert                    pulumi.StringPtrInput                               `pulumi:"ndCert"`
	NdCgaModifier             pulumi.StringPtrInput                               `pulumi:"ndCgaModifier"`
	NdMode                    pulumi.StringPtrInput                               `pulumi:"ndMode"`
	NdSecurityLevel           pulumi.IntPtrInput                                  `pulumi:"ndSecurityLevel"`
	NdTimestampDelta          pulumi.IntPtrInput                                  `pulumi:"ndTimestampDelta"`
	NdTimestampFuzz           pulumi.IntPtrInput                                  `pulumi:"ndTimestampFuzz"`
	RaSendMtu                 pulumi.StringPtrInput                               `pulumi:"raSendMtu"`
	UniqueAutoconfAddr        pulumi.StringPtrInput                               `pulumi:"uniqueAutoconfAddr"`
	Vrip6LinkLocal            pulumi.StringPtrInput                               `pulumi:"vrip6LinkLocal"`
	Vrrp6s                    SystemInterfaceIpv6Vrrp6ArrayInput                  `pulumi:"vrrp6s"`
	VrrpVirtualMac6           pulumi.StringPtrInput                               `pulumi:"vrrpVirtualMac6"`
}

func (SystemInterfaceIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output {
	return i.ToSystemInterfaceIpv6OutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Output)
}

func (i SystemInterfaceIpv6Args) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6] {
	return pulumix.Output[SystemInterfaceIpv6]{
		OutputState: i.ToSystemInterfaceIpv6OutputWithContext(ctx).OutputState,
	}
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return i.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Args) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Output).ToSystemInterfaceIpv6PtrOutputWithContext(ctx)
}

// SystemInterfaceIpv6PtrInput is an input type that accepts SystemInterfaceIpv6Args, SystemInterfaceIpv6Ptr and SystemInterfaceIpv6PtrOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6PtrInput` via:
//
//	        SystemInterfaceIpv6Args{...}
//
//	or:
//
//	        nil
type SystemInterfaceIpv6PtrInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput
	ToSystemInterfaceIpv6PtrOutputWithContext(context.Context) SystemInterfaceIpv6PtrOutput
}

type systemInterfaceIpv6PtrType SystemInterfaceIpv6Args

func SystemInterfaceIpv6Ptr(v *SystemInterfaceIpv6Args) SystemInterfaceIpv6PtrInput {
	return (*systemInterfaceIpv6PtrType)(v)
}

func (*systemInterfaceIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterfaceIpv6)(nil)).Elem()
}

func (i *systemInterfaceIpv6PtrType) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return i.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (i *systemInterfaceIpv6PtrType) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6PtrOutput)
}

func (i *systemInterfaceIpv6PtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemInterfaceIpv6] {
	return pulumix.Output[*SystemInterfaceIpv6]{
		OutputState: i.ToSystemInterfaceIpv6PtrOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Output struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6Output() SystemInterfaceIpv6Output {
	return o
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Output {
	return o
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return o.ToSystemInterfaceIpv6PtrOutputWithContext(context.Background())
}

func (o SystemInterfaceIpv6Output) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemInterfaceIpv6) *SystemInterfaceIpv6 {
		return &v
	}).(SystemInterfaceIpv6PtrOutput)
}

func (o SystemInterfaceIpv6Output) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6] {
	return pulumix.Output[SystemInterfaceIpv6]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Output) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Autoconf }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.CliConn6Status }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6ClientOptions }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6IapdLists() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Dhcp6IapdList { return v.Dhcp6IapdLists }).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6InformationRequest }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6PrefixDelegation }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6PrefixHint }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Dhcp6PrefixHintPlt }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Dhcp6PrefixHintVlt }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelayInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayInterfaceId }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayIp }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayService }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelaySourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelaySourceInterface }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelaySourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelaySourceIp }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Dhcp6RelayType }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Icmp6SendRedirect }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.InterfaceIdentifier }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Address }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Allowaccess }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6DefaultLife }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6DelegatedPrefixLists() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6DelegatedPrefixList {
		return v.Ip6DelegatedPrefixLists
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

func (o SystemInterfaceIpv6Output) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6DnsServerOverride }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6ExtraAddrs() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6ExtraAddr { return v.Ip6ExtraAddrs }).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

func (o SystemInterfaceIpv6Output) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6HopLimit }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6LinkMtu }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6ManageFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6MaxInterval }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6MinInterval }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Mode }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6OtherFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6PrefixLists() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6PrefixList { return v.Ip6PrefixLists }).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

func (o SystemInterfaceIpv6Output) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6PrefixMode }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6ReachableTime }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.Ip6RetransTime }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6SendAdv }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6Subnet }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Ip6UpstreamInterface }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdCert }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdCgaModifier }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.NdMode }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdSecurityLevel }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdTimestampDelta }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *int { return v.NdTimestampFuzz }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Output) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.RaSendMtu }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.UniqueAutoconfAddr }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.Vrip6LinkLocal }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Output) Vrrp6s() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) []SystemInterfaceIpv6Vrrp6 { return v.Vrrp6s }).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

func (o SystemInterfaceIpv6Output) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6) *string { return v.VrrpVirtualMac6 }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6PtrOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterfaceIpv6)(nil)).Elem()
}

func (o SystemInterfaceIpv6PtrOutput) ToSystemInterfaceIpv6PtrOutput() SystemInterfaceIpv6PtrOutput {
	return o
}

func (o SystemInterfaceIpv6PtrOutput) ToSystemInterfaceIpv6PtrOutputWithContext(ctx context.Context) SystemInterfaceIpv6PtrOutput {
	return o
}

func (o SystemInterfaceIpv6PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemInterfaceIpv6] {
	return pulumix.Output[*SystemInterfaceIpv6]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6PtrOutput) Elem() SystemInterfaceIpv6Output {
	return o.ApplyT(func(v *SystemInterfaceIpv6) SystemInterfaceIpv6 {
		if v != nil {
			return *v
		}
		var ret SystemInterfaceIpv6
		return ret
	}).(SystemInterfaceIpv6Output)
}

func (o SystemInterfaceIpv6PtrOutput) Autoconf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Autoconf
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) CliConn6Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.CliConn6Status
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6ClientOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6ClientOptions
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6IapdLists() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Dhcp6IapdList {
		if v == nil {
			return nil
		}
		return v.Dhcp6IapdLists
	}).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6InformationRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6InformationRequest
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixDelegation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixDelegation
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHint
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintPlt
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Dhcp6PrefixHintVlt
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayInterfaceId
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayIp
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayService
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelaySourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelaySourceInterface
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelaySourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelaySourceIp
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Dhcp6RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Dhcp6RelayType
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Icmp6SendRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Icmp6SendRedirect
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) InterfaceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Address
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Allowaccess
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6DefaultLife() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DefaultLife
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixIaid
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6DelegatedPrefixLists() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6DelegatedPrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6DelegatedPrefixLists
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6DnsServerOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6DnsServerOverride
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6ExtraAddrs() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6ExtraAddr {
		if v == nil {
			return nil
		}
		return v.Ip6ExtraAddrs
	}).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6HopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6HopLimit
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6LinkMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6LinkMtu
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6ManageFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6ManageFlag
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6MaxInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MaxInterval
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6MinInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6MinInterval
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Mode
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6OtherFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6OtherFlag
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6PrefixLists() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Ip6PrefixList {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixLists
	}).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6PrefixMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6PrefixMode
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6ReachableTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6ReachableTime
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6RetransTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.Ip6RetransTime
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6SendAdv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6SendAdv
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6Subnet
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Ip6UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Ip6UpstreamInterface
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCert
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdCgaModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdCgaModifier
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.NdMode
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdSecurityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdSecurityLevel
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdTimestampDelta() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampDelta
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) NdTimestampFuzz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *int {
		if v == nil {
			return nil
		}
		return v.NdTimestampFuzz
	}).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) RaSendMtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.RaSendMtu
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) UniqueAutoconfAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.UniqueAutoconfAddr
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Vrip6LinkLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Vrip6LinkLocal
	}).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6PtrOutput) Vrrp6s() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) []SystemInterfaceIpv6Vrrp6 {
		if v == nil {
			return nil
		}
		return v.Vrrp6s
	}).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

func (o SystemInterfaceIpv6PtrOutput) VrrpVirtualMac6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemInterfaceIpv6) *string {
		if v == nil {
			return nil
		}
		return v.VrrpVirtualMac6
	}).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Dhcp6IapdList struct {
	Iaid          *int    `pulumi:"iaid"`
	PrefixHint    *string `pulumi:"prefixHint"`
	PrefixHintPlt *int    `pulumi:"prefixHintPlt"`
	PrefixHintVlt *int    `pulumi:"prefixHintVlt"`
}

// SystemInterfaceIpv6Dhcp6IapdListInput is an input type that accepts SystemInterfaceIpv6Dhcp6IapdListArgs and SystemInterfaceIpv6Dhcp6IapdListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Dhcp6IapdListInput` via:
//
//	SystemInterfaceIpv6Dhcp6IapdListArgs{...}
type SystemInterfaceIpv6Dhcp6IapdListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput
	ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput
}

type SystemInterfaceIpv6Dhcp6IapdListArgs struct {
	Iaid          pulumi.IntPtrInput    `pulumi:"iaid"`
	PrefixHint    pulumi.StringPtrInput `pulumi:"prefixHint"`
	PrefixHintPlt pulumi.IntPtrInput    `pulumi:"prefixHintPlt"`
	PrefixHintVlt pulumi.IntPtrInput    `pulumi:"prefixHintVlt"`
}

func (SystemInterfaceIpv6Dhcp6IapdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Dhcp6IapdListArgs) ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput {
	return i.ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Dhcp6IapdListArgs) ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Dhcp6IapdListOutput)
}

func (i SystemInterfaceIpv6Dhcp6IapdListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Dhcp6IapdList] {
	return pulumix.Output[SystemInterfaceIpv6Dhcp6IapdList]{
		OutputState: i.ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Dhcp6IapdListArrayInput is an input type that accepts SystemInterfaceIpv6Dhcp6IapdListArray and SystemInterfaceIpv6Dhcp6IapdListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Dhcp6IapdListArrayInput` via:
//
//	SystemInterfaceIpv6Dhcp6IapdListArray{ SystemInterfaceIpv6Dhcp6IapdListArgs{...} }
type SystemInterfaceIpv6Dhcp6IapdListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput
	ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput
}

type SystemInterfaceIpv6Dhcp6IapdListArray []SystemInterfaceIpv6Dhcp6IapdListInput

func (SystemInterfaceIpv6Dhcp6IapdListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Dhcp6IapdListArray) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return i.ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Dhcp6IapdListArray) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Dhcp6IapdListArrayOutput)
}

func (i SystemInterfaceIpv6Dhcp6IapdListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Dhcp6IapdList] {
	return pulumix.Output[[]SystemInterfaceIpv6Dhcp6IapdList]{
		OutputState: i.ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Dhcp6IapdListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Dhcp6IapdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) ToSystemInterfaceIpv6Dhcp6IapdListOutput() SystemInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) ToSystemInterfaceIpv6Dhcp6IapdListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Dhcp6IapdList] {
	return pulumix.Output[SystemInterfaceIpv6Dhcp6IapdList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) Iaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.Iaid }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *string { return v.PrefixHint }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHintPlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintPlt }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Dhcp6IapdListOutput) PrefixHintVlt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Dhcp6IapdList) *int { return v.PrefixHintVlt }).(pulumi.IntPtrOutput)
}

type SystemInterfaceIpv6Dhcp6IapdListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Dhcp6IapdList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutput() SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ToSystemInterfaceIpv6Dhcp6IapdListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Dhcp6IapdListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Dhcp6IapdList] {
	return pulumix.Output[[]SystemInterfaceIpv6Dhcp6IapdList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Dhcp6IapdListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Dhcp6IapdListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Dhcp6IapdList {
		return vs[0].([]SystemInterfaceIpv6Dhcp6IapdList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Dhcp6IapdListOutput)
}

type SystemInterfaceIpv6Ip6DelegatedPrefixList struct {
	AutonomousFlag      *string `pulumi:"autonomousFlag"`
	DelegatedPrefixIaid *int    `pulumi:"delegatedPrefixIaid"`
	OnlinkFlag          *string `pulumi:"onlinkFlag"`
	PrefixId            *int    `pulumi:"prefixId"`
	Rdnss               *string `pulumi:"rdnss"`
	RdnssService        *string `pulumi:"rdnssService"`
	Subnet              *string `pulumi:"subnet"`
	UpstreamInterface   *string `pulumi:"upstreamInterface"`
}

// SystemInterfaceIpv6Ip6DelegatedPrefixListInput is an input type that accepts SystemInterfaceIpv6Ip6DelegatedPrefixListArgs and SystemInterfaceIpv6Ip6DelegatedPrefixListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6DelegatedPrefixListInput` via:
//
//	SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{...}
type SystemInterfaceIpv6Ip6DelegatedPrefixListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput
	ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArgs struct {
	AutonomousFlag      pulumi.StringPtrInput `pulumi:"autonomousFlag"`
	DelegatedPrefixIaid pulumi.IntPtrInput    `pulumi:"delegatedPrefixIaid"`
	OnlinkFlag          pulumi.StringPtrInput `pulumi:"onlinkFlag"`
	PrefixId            pulumi.IntPtrInput    `pulumi:"prefixId"`
	Rdnss               pulumi.StringPtrInput `pulumi:"rdnss"`
	RdnssService        pulumi.StringPtrInput `pulumi:"rdnssService"`
	Subnet              pulumi.StringPtrInput `pulumi:"subnet"`
	UpstreamInterface   pulumi.StringPtrInput `pulumi:"upstreamInterface"`
}

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6DelegatedPrefixList] {
	return pulumix.Output[SystemInterfaceIpv6Ip6DelegatedPrefixList]{
		OutputState: i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput is an input type that accepts SystemInterfaceIpv6Ip6DelegatedPrefixListArray and SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput` via:
//
//	SystemInterfaceIpv6Ip6DelegatedPrefixListArray{ SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{...} }
type SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
	ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArray []SystemInterfaceIpv6Ip6DelegatedPrefixListInput

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput)
}

func (i SystemInterfaceIpv6Ip6DelegatedPrefixListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6DelegatedPrefixList] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6DelegatedPrefixList]{
		OutputState: i.ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6DelegatedPrefixList] {
	return pulumix.Output[SystemInterfaceIpv6Ip6DelegatedPrefixList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) DelegatedPrefixIaid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *int { return v.DelegatedPrefixIaid }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) PrefixId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *int { return v.PrefixId }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) RdnssService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.RdnssService }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListOutput) UpstreamInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6DelegatedPrefixList) *string { return v.UpstreamInterface }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6DelegatedPrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput() SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToSystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6DelegatedPrefixList] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6DelegatedPrefixList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6DelegatedPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6DelegatedPrefixList {
		return vs[0].([]SystemInterfaceIpv6Ip6DelegatedPrefixList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput)
}

type SystemInterfaceIpv6Ip6ExtraAddr struct {
	Prefix *string `pulumi:"prefix"`
}

// SystemInterfaceIpv6Ip6ExtraAddrInput is an input type that accepts SystemInterfaceIpv6Ip6ExtraAddrArgs and SystemInterfaceIpv6Ip6ExtraAddrOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6ExtraAddrInput` via:
//
//	SystemInterfaceIpv6Ip6ExtraAddrArgs{...}
type SystemInterfaceIpv6Ip6ExtraAddrInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput
	ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput
}

type SystemInterfaceIpv6Ip6ExtraAddrArgs struct {
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SystemInterfaceIpv6Ip6ExtraAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArgs) ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return i.ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArgs) ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6ExtraAddrOutput)
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6ExtraAddr] {
	return pulumix.Output[SystemInterfaceIpv6Ip6ExtraAddr]{
		OutputState: i.ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Ip6ExtraAddrArrayInput is an input type that accepts SystemInterfaceIpv6Ip6ExtraAddrArray and SystemInterfaceIpv6Ip6ExtraAddrArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6ExtraAddrArrayInput` via:
//
//	SystemInterfaceIpv6Ip6ExtraAddrArray{ SystemInterfaceIpv6Ip6ExtraAddrArgs{...} }
type SystemInterfaceIpv6Ip6ExtraAddrArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput
	ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput
}

type SystemInterfaceIpv6Ip6ExtraAddrArray []SystemInterfaceIpv6Ip6ExtraAddrInput

func (SystemInterfaceIpv6Ip6ExtraAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArray) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArray) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput)
}

func (i SystemInterfaceIpv6Ip6ExtraAddrArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6ExtraAddr] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6ExtraAddr]{
		OutputState: i.ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Ip6ExtraAddrOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6ExtraAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) ToSystemInterfaceIpv6Ip6ExtraAddrOutput() SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) ToSystemInterfaceIpv6Ip6ExtraAddrOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6ExtraAddr] {
	return pulumix.Output[SystemInterfaceIpv6Ip6ExtraAddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6ExtraAddrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6ExtraAddr) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6ExtraAddrArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6ExtraAddr)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutput() SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ToSystemInterfaceIpv6Ip6ExtraAddrArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6ExtraAddrArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6ExtraAddr] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6ExtraAddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6ExtraAddrArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6ExtraAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6ExtraAddr {
		return vs[0].([]SystemInterfaceIpv6Ip6ExtraAddr)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6ExtraAddrOutput)
}

type SystemInterfaceIpv6Ip6PrefixList struct {
	AutonomousFlag    *string                                 `pulumi:"autonomousFlag"`
	Dnssls            []SystemInterfaceIpv6Ip6PrefixListDnssl `pulumi:"dnssls"`
	OnlinkFlag        *string                                 `pulumi:"onlinkFlag"`
	PreferredLifeTime *int                                    `pulumi:"preferredLifeTime"`
	Prefix            *string                                 `pulumi:"prefix"`
	Rdnss             *string                                 `pulumi:"rdnss"`
	ValidLifeTime     *int                                    `pulumi:"validLifeTime"`
}

// SystemInterfaceIpv6Ip6PrefixListInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListArgs and SystemInterfaceIpv6Ip6PrefixListOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListArgs{...}
type SystemInterfaceIpv6Ip6PrefixListInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput
	ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListOutput
}

type SystemInterfaceIpv6Ip6PrefixListArgs struct {
	AutonomousFlag    pulumi.StringPtrInput                           `pulumi:"autonomousFlag"`
	Dnssls            SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput `pulumi:"dnssls"`
	OnlinkFlag        pulumi.StringPtrInput                           `pulumi:"onlinkFlag"`
	PreferredLifeTime pulumi.IntPtrInput                              `pulumi:"preferredLifeTime"`
	Prefix            pulumi.StringPtrInput                           `pulumi:"prefix"`
	Rdnss             pulumi.StringPtrInput                           `pulumi:"rdnss"`
	ValidLifeTime     pulumi.IntPtrInput                              `pulumi:"validLifeTime"`
}

func (SystemInterfaceIpv6Ip6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListArgs) ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListArgs) ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListOutput)
}

func (i SystemInterfaceIpv6Ip6PrefixListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6PrefixList] {
	return pulumix.Output[SystemInterfaceIpv6Ip6PrefixList]{
		OutputState: i.ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Ip6PrefixListArrayInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListArray and SystemInterfaceIpv6Ip6PrefixListArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListArrayInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListArray{ SystemInterfaceIpv6Ip6PrefixListArgs{...} }
type SystemInterfaceIpv6Ip6PrefixListArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput
	ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput
}

type SystemInterfaceIpv6Ip6PrefixListArray []SystemInterfaceIpv6Ip6PrefixListInput

func (SystemInterfaceIpv6Ip6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListArray) ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListArray) ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListArrayOutput)
}

func (i SystemInterfaceIpv6Ip6PrefixListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixList] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixList]{
		OutputState: i.ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Ip6PrefixListOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ToSystemInterfaceIpv6Ip6PrefixListOutput() SystemInterfaceIpv6Ip6PrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ToSystemInterfaceIpv6Ip6PrefixListOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6PrefixList] {
	return pulumix.Output[SystemInterfaceIpv6Ip6PrefixList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) AutonomousFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.AutonomousFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) Dnssls() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) []SystemInterfaceIpv6Ip6PrefixListDnssl { return v.Dnssls }).(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) OnlinkFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.OnlinkFlag }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) PreferredLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *int { return v.PreferredLifeTime }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) Rdnss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *string { return v.Rdnss }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Ip6PrefixListOutput) ValidLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixList) *int { return v.ValidLifeTime }).(pulumi.IntPtrOutput)
}

type SystemInterfaceIpv6Ip6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixList)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListArrayOutput() SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixList] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixList]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6PrefixListArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6PrefixList {
		return vs[0].([]SystemInterfaceIpv6Ip6PrefixList)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6PrefixListOutput)
}

type SystemInterfaceIpv6Ip6PrefixListDnssl struct {
	Domain *string `pulumi:"domain"`
}

// SystemInterfaceIpv6Ip6PrefixListDnsslInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListDnsslArgs and SystemInterfaceIpv6Ip6PrefixListDnsslOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListDnsslInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListDnsslArgs{...}
type SystemInterfaceIpv6Ip6PrefixListDnsslInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput
	ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListDnsslOutput)
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6PrefixListDnssl] {
	return pulumix.Output[SystemInterfaceIpv6Ip6PrefixListDnssl]{
		OutputState: i.ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput is an input type that accepts SystemInterfaceIpv6Ip6PrefixListDnsslArray and SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput` via:
//
//	SystemInterfaceIpv6Ip6PrefixListDnsslArray{ SystemInterfaceIpv6Ip6PrefixListDnsslArgs{...} }
type SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput
	ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArray []SystemInterfaceIpv6Ip6PrefixListDnsslInput

func (SystemInterfaceIpv6Ip6PrefixListDnsslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArray) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return i.ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArray) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput)
}

func (i SystemInterfaceIpv6Ip6PrefixListDnsslArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixListDnssl] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixListDnssl]{
		OutputState: i.ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Ip6PrefixListDnsslOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutput() SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Ip6PrefixListDnssl] {
	return pulumix.Output[SystemInterfaceIpv6Ip6PrefixListDnssl]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Ip6PrefixListDnssl) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Ip6PrefixListDnssl)(nil)).Elem()
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput() SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToSystemInterfaceIpv6Ip6PrefixListDnsslArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixListDnssl] {
	return pulumix.Output[[]SystemInterfaceIpv6Ip6PrefixListDnssl]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Ip6PrefixListDnsslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Ip6PrefixListDnssl {
		return vs[0].([]SystemInterfaceIpv6Ip6PrefixListDnssl)[vs[1].(int)]
	}).(SystemInterfaceIpv6Ip6PrefixListDnsslOutput)
}

type SystemInterfaceIpv6Vrrp6 struct {
	AcceptMode  *string `pulumi:"acceptMode"`
	AdvInterval *int    `pulumi:"advInterval"`
	Preempt     *string `pulumi:"preempt"`
	Priority    *int    `pulumi:"priority"`
	StartTime   *int    `pulumi:"startTime"`
	Status      *string `pulumi:"status"`
	Vrdst6      *string `pulumi:"vrdst6"`
	Vrgrp       *int    `pulumi:"vrgrp"`
	Vrid        *int    `pulumi:"vrid"`
	Vrip6       *string `pulumi:"vrip6"`
}

// SystemInterfaceIpv6Vrrp6Input is an input type that accepts SystemInterfaceIpv6Vrrp6Args and SystemInterfaceIpv6Vrrp6Output values.
// You can construct a concrete instance of `SystemInterfaceIpv6Vrrp6Input` via:
//
//	SystemInterfaceIpv6Vrrp6Args{...}
type SystemInterfaceIpv6Vrrp6Input interface {
	pulumi.Input

	ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output
	ToSystemInterfaceIpv6Vrrp6OutputWithContext(context.Context) SystemInterfaceIpv6Vrrp6Output
}

type SystemInterfaceIpv6Vrrp6Args struct {
	AcceptMode  pulumi.StringPtrInput `pulumi:"acceptMode"`
	AdvInterval pulumi.IntPtrInput    `pulumi:"advInterval"`
	Preempt     pulumi.StringPtrInput `pulumi:"preempt"`
	Priority    pulumi.IntPtrInput    `pulumi:"priority"`
	StartTime   pulumi.IntPtrInput    `pulumi:"startTime"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
	Vrdst6      pulumi.StringPtrInput `pulumi:"vrdst6"`
	Vrgrp       pulumi.IntPtrInput    `pulumi:"vrgrp"`
	Vrid        pulumi.IntPtrInput    `pulumi:"vrid"`
	Vrip6       pulumi.StringPtrInput `pulumi:"vrip6"`
}

func (SystemInterfaceIpv6Vrrp6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Vrrp6Args) ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output {
	return i.ToSystemInterfaceIpv6Vrrp6OutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Vrrp6Args) ToSystemInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Vrrp6Output)
}

func (i SystemInterfaceIpv6Vrrp6Args) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Vrrp6] {
	return pulumix.Output[SystemInterfaceIpv6Vrrp6]{
		OutputState: i.ToSystemInterfaceIpv6Vrrp6OutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceIpv6Vrrp6ArrayInput is an input type that accepts SystemInterfaceIpv6Vrrp6Array and SystemInterfaceIpv6Vrrp6ArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceIpv6Vrrp6ArrayInput` via:
//
//	SystemInterfaceIpv6Vrrp6Array{ SystemInterfaceIpv6Vrrp6Args{...} }
type SystemInterfaceIpv6Vrrp6ArrayInput interface {
	pulumi.Input

	ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput
	ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput
}

type SystemInterfaceIpv6Vrrp6Array []SystemInterfaceIpv6Vrrp6Input

func (SystemInterfaceIpv6Vrrp6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (i SystemInterfaceIpv6Vrrp6Array) ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return i.ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceIpv6Vrrp6Array) ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceIpv6Vrrp6ArrayOutput)
}

func (i SystemInterfaceIpv6Vrrp6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Vrrp6] {
	return pulumix.Output[[]SystemInterfaceIpv6Vrrp6]{
		OutputState: i.ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceIpv6Vrrp6Output struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Vrrp6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Vrrp6Output) ToSystemInterfaceIpv6Vrrp6Output() SystemInterfaceIpv6Vrrp6Output {
	return o
}

func (o SystemInterfaceIpv6Vrrp6Output) ToSystemInterfaceIpv6Vrrp6OutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6Output {
	return o
}

func (o SystemInterfaceIpv6Vrrp6Output) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceIpv6Vrrp6] {
	return pulumix.Output[SystemInterfaceIpv6Vrrp6]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Vrrp6Output) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Vrdst6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Vrdst6 }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceIpv6Vrrp6Output) Vrip6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceIpv6Vrrp6) *string { return v.Vrip6 }).(pulumi.StringPtrOutput)
}

type SystemInterfaceIpv6Vrrp6ArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceIpv6Vrrp6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceIpv6Vrrp6)(nil)).Elem()
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) ToSystemInterfaceIpv6Vrrp6ArrayOutput() SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) ToSystemInterfaceIpv6Vrrp6ArrayOutputWithContext(ctx context.Context) SystemInterfaceIpv6Vrrp6ArrayOutput {
	return o
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceIpv6Vrrp6] {
	return pulumix.Output[[]SystemInterfaceIpv6Vrrp6]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceIpv6Vrrp6ArrayOutput) Index(i pulumi.IntInput) SystemInterfaceIpv6Vrrp6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceIpv6Vrrp6 {
		return vs[0].([]SystemInterfaceIpv6Vrrp6)[vs[1].(int)]
	}).(SystemInterfaceIpv6Vrrp6Output)
}

type SystemInterfaceManagedDevice struct {
	Name *string `pulumi:"name"`
}

// SystemInterfaceManagedDeviceInput is an input type that accepts SystemInterfaceManagedDeviceArgs and SystemInterfaceManagedDeviceOutput values.
// You can construct a concrete instance of `SystemInterfaceManagedDeviceInput` via:
//
//	SystemInterfaceManagedDeviceArgs{...}
type SystemInterfaceManagedDeviceInput interface {
	pulumi.Input

	ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput
	ToSystemInterfaceManagedDeviceOutputWithContext(context.Context) SystemInterfaceManagedDeviceOutput
}

type SystemInterfaceManagedDeviceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceManagedDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceManagedDevice)(nil)).Elem()
}

func (i SystemInterfaceManagedDeviceArgs) ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput {
	return i.ToSystemInterfaceManagedDeviceOutputWithContext(context.Background())
}

func (i SystemInterfaceManagedDeviceArgs) ToSystemInterfaceManagedDeviceOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceManagedDeviceOutput)
}

func (i SystemInterfaceManagedDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceManagedDevice] {
	return pulumix.Output[SystemInterfaceManagedDevice]{
		OutputState: i.ToSystemInterfaceManagedDeviceOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceManagedDeviceArrayInput is an input type that accepts SystemInterfaceManagedDeviceArray and SystemInterfaceManagedDeviceArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceManagedDeviceArrayInput` via:
//
//	SystemInterfaceManagedDeviceArray{ SystemInterfaceManagedDeviceArgs{...} }
type SystemInterfaceManagedDeviceArrayInput interface {
	pulumi.Input

	ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput
	ToSystemInterfaceManagedDeviceArrayOutputWithContext(context.Context) SystemInterfaceManagedDeviceArrayOutput
}

type SystemInterfaceManagedDeviceArray []SystemInterfaceManagedDeviceInput

func (SystemInterfaceManagedDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceManagedDevice)(nil)).Elem()
}

func (i SystemInterfaceManagedDeviceArray) ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput {
	return i.ToSystemInterfaceManagedDeviceArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceManagedDeviceArray) ToSystemInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceManagedDeviceArrayOutput)
}

func (i SystemInterfaceManagedDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceManagedDevice] {
	return pulumix.Output[[]SystemInterfaceManagedDevice]{
		OutputState: i.ToSystemInterfaceManagedDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceManagedDeviceOutput struct{ *pulumi.OutputState }

func (SystemInterfaceManagedDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceManagedDevice)(nil)).Elem()
}

func (o SystemInterfaceManagedDeviceOutput) ToSystemInterfaceManagedDeviceOutput() SystemInterfaceManagedDeviceOutput {
	return o
}

func (o SystemInterfaceManagedDeviceOutput) ToSystemInterfaceManagedDeviceOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceOutput {
	return o
}

func (o SystemInterfaceManagedDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceManagedDevice] {
	return pulumix.Output[SystemInterfaceManagedDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceManagedDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceManagedDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceManagedDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceManagedDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceManagedDevice)(nil)).Elem()
}

func (o SystemInterfaceManagedDeviceArrayOutput) ToSystemInterfaceManagedDeviceArrayOutput() SystemInterfaceManagedDeviceArrayOutput {
	return o
}

func (o SystemInterfaceManagedDeviceArrayOutput) ToSystemInterfaceManagedDeviceArrayOutputWithContext(ctx context.Context) SystemInterfaceManagedDeviceArrayOutput {
	return o
}

func (o SystemInterfaceManagedDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceManagedDevice] {
	return pulumix.Output[[]SystemInterfaceManagedDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceManagedDeviceArrayOutput) Index(i pulumi.IntInput) SystemInterfaceManagedDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceManagedDevice {
		return vs[0].([]SystemInterfaceManagedDevice)[vs[1].(int)]
	}).(SystemInterfaceManagedDeviceOutput)
}

type SystemInterfaceMember struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemInterfaceMemberInput is an input type that accepts SystemInterfaceMemberArgs and SystemInterfaceMemberOutput values.
// You can construct a concrete instance of `SystemInterfaceMemberInput` via:
//
//	SystemInterfaceMemberArgs{...}
type SystemInterfaceMemberInput interface {
	pulumi.Input

	ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput
	ToSystemInterfaceMemberOutputWithContext(context.Context) SystemInterfaceMemberOutput
}

type SystemInterfaceMemberArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemInterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceMember)(nil)).Elem()
}

func (i SystemInterfaceMemberArgs) ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput {
	return i.ToSystemInterfaceMemberOutputWithContext(context.Background())
}

func (i SystemInterfaceMemberArgs) ToSystemInterfaceMemberOutputWithContext(ctx context.Context) SystemInterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceMemberOutput)
}

func (i SystemInterfaceMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceMember] {
	return pulumix.Output[SystemInterfaceMember]{
		OutputState: i.ToSystemInterfaceMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceMemberArrayInput is an input type that accepts SystemInterfaceMemberArray and SystemInterfaceMemberArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceMemberArrayInput` via:
//
//	SystemInterfaceMemberArray{ SystemInterfaceMemberArgs{...} }
type SystemInterfaceMemberArrayInput interface {
	pulumi.Input

	ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput
	ToSystemInterfaceMemberArrayOutputWithContext(context.Context) SystemInterfaceMemberArrayOutput
}

type SystemInterfaceMemberArray []SystemInterfaceMemberInput

func (SystemInterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceMember)(nil)).Elem()
}

func (i SystemInterfaceMemberArray) ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput {
	return i.ToSystemInterfaceMemberArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceMemberArray) ToSystemInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemInterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceMemberArrayOutput)
}

func (i SystemInterfaceMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceMember] {
	return pulumix.Output[[]SystemInterfaceMember]{
		OutputState: i.ToSystemInterfaceMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceMemberOutput struct{ *pulumi.OutputState }

func (SystemInterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceMember)(nil)).Elem()
}

func (o SystemInterfaceMemberOutput) ToSystemInterfaceMemberOutput() SystemInterfaceMemberOutput {
	return o
}

func (o SystemInterfaceMemberOutput) ToSystemInterfaceMemberOutputWithContext(ctx context.Context) SystemInterfaceMemberOutput {
	return o
}

func (o SystemInterfaceMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceMember] {
	return pulumix.Output[SystemInterfaceMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemInterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceMember)(nil)).Elem()
}

func (o SystemInterfaceMemberArrayOutput) ToSystemInterfaceMemberArrayOutput() SystemInterfaceMemberArrayOutput {
	return o
}

func (o SystemInterfaceMemberArrayOutput) ToSystemInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemInterfaceMemberArrayOutput {
	return o
}

func (o SystemInterfaceMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceMember] {
	return pulumix.Output[[]SystemInterfaceMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceMemberArrayOutput) Index(i pulumi.IntInput) SystemInterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceMember {
		return vs[0].([]SystemInterfaceMember)[vs[1].(int)]
	}).(SystemInterfaceMemberOutput)
}

type SystemInterfaceSecondaryip struct {
	Allowaccess    *string `pulumi:"allowaccess"`
	Detectprotocol *string `pulumi:"detectprotocol"`
	Detectserver   *string `pulumi:"detectserver"`
	Gwdetect       *string `pulumi:"gwdetect"`
	HaPriority     *int    `pulumi:"haPriority"`
	Id             *int    `pulumi:"id"`
	Ip             *string `pulumi:"ip"`
	PingServStatus *int    `pulumi:"pingServStatus"`
	SecipRelayIp   *string `pulumi:"secipRelayIp"`
}

// SystemInterfaceSecondaryipInput is an input type that accepts SystemInterfaceSecondaryipArgs and SystemInterfaceSecondaryipOutput values.
// You can construct a concrete instance of `SystemInterfaceSecondaryipInput` via:
//
//	SystemInterfaceSecondaryipArgs{...}
type SystemInterfaceSecondaryipInput interface {
	pulumi.Input

	ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput
	ToSystemInterfaceSecondaryipOutputWithContext(context.Context) SystemInterfaceSecondaryipOutput
}

type SystemInterfaceSecondaryipArgs struct {
	Allowaccess    pulumi.StringPtrInput `pulumi:"allowaccess"`
	Detectprotocol pulumi.StringPtrInput `pulumi:"detectprotocol"`
	Detectserver   pulumi.StringPtrInput `pulumi:"detectserver"`
	Gwdetect       pulumi.StringPtrInput `pulumi:"gwdetect"`
	HaPriority     pulumi.IntPtrInput    `pulumi:"haPriority"`
	Id             pulumi.IntPtrInput    `pulumi:"id"`
	Ip             pulumi.StringPtrInput `pulumi:"ip"`
	PingServStatus pulumi.IntPtrInput    `pulumi:"pingServStatus"`
	SecipRelayIp   pulumi.StringPtrInput `pulumi:"secipRelayIp"`
}

func (SystemInterfaceSecondaryipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecondaryip)(nil)).Elem()
}

func (i SystemInterfaceSecondaryipArgs) ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput {
	return i.ToSystemInterfaceSecondaryipOutputWithContext(context.Background())
}

func (i SystemInterfaceSecondaryipArgs) ToSystemInterfaceSecondaryipOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecondaryipOutput)
}

func (i SystemInterfaceSecondaryipArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceSecondaryip] {
	return pulumix.Output[SystemInterfaceSecondaryip]{
		OutputState: i.ToSystemInterfaceSecondaryipOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceSecondaryipArrayInput is an input type that accepts SystemInterfaceSecondaryipArray and SystemInterfaceSecondaryipArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceSecondaryipArrayInput` via:
//
//	SystemInterfaceSecondaryipArray{ SystemInterfaceSecondaryipArgs{...} }
type SystemInterfaceSecondaryipArrayInput interface {
	pulumi.Input

	ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput
	ToSystemInterfaceSecondaryipArrayOutputWithContext(context.Context) SystemInterfaceSecondaryipArrayOutput
}

type SystemInterfaceSecondaryipArray []SystemInterfaceSecondaryipInput

func (SystemInterfaceSecondaryipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecondaryip)(nil)).Elem()
}

func (i SystemInterfaceSecondaryipArray) ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput {
	return i.ToSystemInterfaceSecondaryipArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceSecondaryipArray) ToSystemInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecondaryipArrayOutput)
}

func (i SystemInterfaceSecondaryipArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceSecondaryip] {
	return pulumix.Output[[]SystemInterfaceSecondaryip]{
		OutputState: i.ToSystemInterfaceSecondaryipArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceSecondaryipOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecondaryipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecondaryip)(nil)).Elem()
}

func (o SystemInterfaceSecondaryipOutput) ToSystemInterfaceSecondaryipOutput() SystemInterfaceSecondaryipOutput {
	return o
}

func (o SystemInterfaceSecondaryipOutput) ToSystemInterfaceSecondaryipOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipOutput {
	return o
}

func (o SystemInterfaceSecondaryipOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceSecondaryip] {
	return pulumix.Output[SystemInterfaceSecondaryip]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceSecondaryipOutput) Allowaccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Allowaccess }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) Detectprotocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Detectprotocol }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) Detectserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Detectserver }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) Gwdetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Gwdetect }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) PingServStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *int { return v.PingServStatus }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceSecondaryipOutput) SecipRelayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecondaryip) *string { return v.SecipRelayIp }).(pulumi.StringPtrOutput)
}

type SystemInterfaceSecondaryipArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecondaryipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecondaryip)(nil)).Elem()
}

func (o SystemInterfaceSecondaryipArrayOutput) ToSystemInterfaceSecondaryipArrayOutput() SystemInterfaceSecondaryipArrayOutput {
	return o
}

func (o SystemInterfaceSecondaryipArrayOutput) ToSystemInterfaceSecondaryipArrayOutputWithContext(ctx context.Context) SystemInterfaceSecondaryipArrayOutput {
	return o
}

func (o SystemInterfaceSecondaryipArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceSecondaryip] {
	return pulumix.Output[[]SystemInterfaceSecondaryip]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceSecondaryipArrayOutput) Index(i pulumi.IntInput) SystemInterfaceSecondaryipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceSecondaryip {
		return vs[0].([]SystemInterfaceSecondaryip)[vs[1].(int)]
	}).(SystemInterfaceSecondaryipOutput)
}

type SystemInterfaceSecurityGroup struct {
	Name *string `pulumi:"name"`
}

// SystemInterfaceSecurityGroupInput is an input type that accepts SystemInterfaceSecurityGroupArgs and SystemInterfaceSecurityGroupOutput values.
// You can construct a concrete instance of `SystemInterfaceSecurityGroupInput` via:
//
//	SystemInterfaceSecurityGroupArgs{...}
type SystemInterfaceSecurityGroupInput interface {
	pulumi.Input

	ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput
	ToSystemInterfaceSecurityGroupOutputWithContext(context.Context) SystemInterfaceSecurityGroupOutput
}

type SystemInterfaceSecurityGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (i SystemInterfaceSecurityGroupArgs) ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput {
	return i.ToSystemInterfaceSecurityGroupOutputWithContext(context.Background())
}

func (i SystemInterfaceSecurityGroupArgs) ToSystemInterfaceSecurityGroupOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecurityGroupOutput)
}

func (i SystemInterfaceSecurityGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceSecurityGroup] {
	return pulumix.Output[SystemInterfaceSecurityGroup]{
		OutputState: i.ToSystemInterfaceSecurityGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceSecurityGroupArrayInput is an input type that accepts SystemInterfaceSecurityGroupArray and SystemInterfaceSecurityGroupArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceSecurityGroupArrayInput` via:
//
//	SystemInterfaceSecurityGroupArray{ SystemInterfaceSecurityGroupArgs{...} }
type SystemInterfaceSecurityGroupArrayInput interface {
	pulumi.Input

	ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput
	ToSystemInterfaceSecurityGroupArrayOutputWithContext(context.Context) SystemInterfaceSecurityGroupArrayOutput
}

type SystemInterfaceSecurityGroupArray []SystemInterfaceSecurityGroupInput

func (SystemInterfaceSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (i SystemInterfaceSecurityGroupArray) ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput {
	return i.ToSystemInterfaceSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceSecurityGroupArray) ToSystemInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceSecurityGroupArrayOutput)
}

func (i SystemInterfaceSecurityGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceSecurityGroup] {
	return pulumix.Output[[]SystemInterfaceSecurityGroup]{
		OutputState: i.ToSystemInterfaceSecurityGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceSecurityGroupOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (o SystemInterfaceSecurityGroupOutput) ToSystemInterfaceSecurityGroupOutput() SystemInterfaceSecurityGroupOutput {
	return o
}

func (o SystemInterfaceSecurityGroupOutput) ToSystemInterfaceSecurityGroupOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupOutput {
	return o
}

func (o SystemInterfaceSecurityGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceSecurityGroup] {
	return pulumix.Output[SystemInterfaceSecurityGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceSecurityGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceSecurityGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceSecurityGroup)(nil)).Elem()
}

func (o SystemInterfaceSecurityGroupArrayOutput) ToSystemInterfaceSecurityGroupArrayOutput() SystemInterfaceSecurityGroupArrayOutput {
	return o
}

func (o SystemInterfaceSecurityGroupArrayOutput) ToSystemInterfaceSecurityGroupArrayOutputWithContext(ctx context.Context) SystemInterfaceSecurityGroupArrayOutput {
	return o
}

func (o SystemInterfaceSecurityGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceSecurityGroup] {
	return pulumix.Output[[]SystemInterfaceSecurityGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceSecurityGroupArrayOutput) Index(i pulumi.IntInput) SystemInterfaceSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceSecurityGroup {
		return vs[0].([]SystemInterfaceSecurityGroup)[vs[1].(int)]
	}).(SystemInterfaceSecurityGroupOutput)
}

type SystemInterfaceTagging struct {
	Category *string                     `pulumi:"category"`
	Name     *string                     `pulumi:"name"`
	Tags     []SystemInterfaceTaggingTag `pulumi:"tags"`
}

// SystemInterfaceTaggingInput is an input type that accepts SystemInterfaceTaggingArgs and SystemInterfaceTaggingOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingInput` via:
//
//	SystemInterfaceTaggingArgs{...}
type SystemInterfaceTaggingInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput
	ToSystemInterfaceTaggingOutputWithContext(context.Context) SystemInterfaceTaggingOutput
}

type SystemInterfaceTaggingArgs struct {
	Category pulumi.StringPtrInput               `pulumi:"category"`
	Name     pulumi.StringPtrInput               `pulumi:"name"`
	Tags     SystemInterfaceTaggingTagArrayInput `pulumi:"tags"`
}

func (SystemInterfaceTaggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTagging)(nil)).Elem()
}

func (i SystemInterfaceTaggingArgs) ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput {
	return i.ToSystemInterfaceTaggingOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingArgs) ToSystemInterfaceTaggingOutputWithContext(ctx context.Context) SystemInterfaceTaggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingOutput)
}

func (i SystemInterfaceTaggingArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceTagging] {
	return pulumix.Output[SystemInterfaceTagging]{
		OutputState: i.ToSystemInterfaceTaggingOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceTaggingArrayInput is an input type that accepts SystemInterfaceTaggingArray and SystemInterfaceTaggingArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingArrayInput` via:
//
//	SystemInterfaceTaggingArray{ SystemInterfaceTaggingArgs{...} }
type SystemInterfaceTaggingArrayInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput
	ToSystemInterfaceTaggingArrayOutputWithContext(context.Context) SystemInterfaceTaggingArrayOutput
}

type SystemInterfaceTaggingArray []SystemInterfaceTaggingInput

func (SystemInterfaceTaggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTagging)(nil)).Elem()
}

func (i SystemInterfaceTaggingArray) ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput {
	return i.ToSystemInterfaceTaggingArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingArray) ToSystemInterfaceTaggingArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingArrayOutput)
}

func (i SystemInterfaceTaggingArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceTagging] {
	return pulumix.Output[[]SystemInterfaceTagging]{
		OutputState: i.ToSystemInterfaceTaggingArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceTaggingOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTagging)(nil)).Elem()
}

func (o SystemInterfaceTaggingOutput) ToSystemInterfaceTaggingOutput() SystemInterfaceTaggingOutput {
	return o
}

func (o SystemInterfaceTaggingOutput) ToSystemInterfaceTaggingOutputWithContext(ctx context.Context) SystemInterfaceTaggingOutput {
	return o
}

func (o SystemInterfaceTaggingOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceTagging] {
	return pulumix.Output[SystemInterfaceTagging]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceTaggingOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceTaggingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceTaggingOutput) Tags() SystemInterfaceTaggingTagArrayOutput {
	return o.ApplyT(func(v SystemInterfaceTagging) []SystemInterfaceTaggingTag { return v.Tags }).(SystemInterfaceTaggingTagArrayOutput)
}

type SystemInterfaceTaggingArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTagging)(nil)).Elem()
}

func (o SystemInterfaceTaggingArrayOutput) ToSystemInterfaceTaggingArrayOutput() SystemInterfaceTaggingArrayOutput {
	return o
}

func (o SystemInterfaceTaggingArrayOutput) ToSystemInterfaceTaggingArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingArrayOutput {
	return o
}

func (o SystemInterfaceTaggingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceTagging] {
	return pulumix.Output[[]SystemInterfaceTagging]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceTaggingArrayOutput) Index(i pulumi.IntInput) SystemInterfaceTaggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceTagging {
		return vs[0].([]SystemInterfaceTagging)[vs[1].(int)]
	}).(SystemInterfaceTaggingOutput)
}

type SystemInterfaceTaggingTag struct {
	Name *string `pulumi:"name"`
}

// SystemInterfaceTaggingTagInput is an input type that accepts SystemInterfaceTaggingTagArgs and SystemInterfaceTaggingTagOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingTagInput` via:
//
//	SystemInterfaceTaggingTagArgs{...}
type SystemInterfaceTaggingTagInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput
	ToSystemInterfaceTaggingTagOutputWithContext(context.Context) SystemInterfaceTaggingTagOutput
}

type SystemInterfaceTaggingTagArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemInterfaceTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTaggingTag)(nil)).Elem()
}

func (i SystemInterfaceTaggingTagArgs) ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput {
	return i.ToSystemInterfaceTaggingTagOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingTagArgs) ToSystemInterfaceTaggingTagOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingTagOutput)
}

func (i SystemInterfaceTaggingTagArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceTaggingTag] {
	return pulumix.Output[SystemInterfaceTaggingTag]{
		OutputState: i.ToSystemInterfaceTaggingTagOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceTaggingTagArrayInput is an input type that accepts SystemInterfaceTaggingTagArray and SystemInterfaceTaggingTagArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceTaggingTagArrayInput` via:
//
//	SystemInterfaceTaggingTagArray{ SystemInterfaceTaggingTagArgs{...} }
type SystemInterfaceTaggingTagArrayInput interface {
	pulumi.Input

	ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput
	ToSystemInterfaceTaggingTagArrayOutputWithContext(context.Context) SystemInterfaceTaggingTagArrayOutput
}

type SystemInterfaceTaggingTagArray []SystemInterfaceTaggingTagInput

func (SystemInterfaceTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTaggingTag)(nil)).Elem()
}

func (i SystemInterfaceTaggingTagArray) ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput {
	return i.ToSystemInterfaceTaggingTagArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceTaggingTagArray) ToSystemInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceTaggingTagArrayOutput)
}

func (i SystemInterfaceTaggingTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceTaggingTag] {
	return pulumix.Output[[]SystemInterfaceTaggingTag]{
		OutputState: i.ToSystemInterfaceTaggingTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceTaggingTagOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceTaggingTag)(nil)).Elem()
}

func (o SystemInterfaceTaggingTagOutput) ToSystemInterfaceTaggingTagOutput() SystemInterfaceTaggingTagOutput {
	return o
}

func (o SystemInterfaceTaggingTagOutput) ToSystemInterfaceTaggingTagOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagOutput {
	return o
}

func (o SystemInterfaceTaggingTagOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceTaggingTag] {
	return pulumix.Output[SystemInterfaceTaggingTag]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemInterfaceTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceTaggingTag)(nil)).Elem()
}

func (o SystemInterfaceTaggingTagArrayOutput) ToSystemInterfaceTaggingTagArrayOutput() SystemInterfaceTaggingTagArrayOutput {
	return o
}

func (o SystemInterfaceTaggingTagArrayOutput) ToSystemInterfaceTaggingTagArrayOutputWithContext(ctx context.Context) SystemInterfaceTaggingTagArrayOutput {
	return o
}

func (o SystemInterfaceTaggingTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceTaggingTag] {
	return pulumix.Output[[]SystemInterfaceTaggingTag]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceTaggingTagArrayOutput) Index(i pulumi.IntInput) SystemInterfaceTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceTaggingTag {
		return vs[0].([]SystemInterfaceTaggingTag)[vs[1].(int)]
	}).(SystemInterfaceTaggingTagOutput)
}

type SystemInterfaceVrrp struct {
	AcceptMode         *string                       `pulumi:"acceptMode"`
	AdvInterval        *int                          `pulumi:"advInterval"`
	IgnoreDefaultRoute *string                       `pulumi:"ignoreDefaultRoute"`
	Preempt            *string                       `pulumi:"preempt"`
	Priority           *int                          `pulumi:"priority"`
	ProxyArps          []SystemInterfaceVrrpProxyArp `pulumi:"proxyArps"`
	StartTime          *int                          `pulumi:"startTime"`
	Status             *string                       `pulumi:"status"`
	Version            *string                       `pulumi:"version"`
	Vrdst              *string                       `pulumi:"vrdst"`
	VrdstPriority      *int                          `pulumi:"vrdstPriority"`
	Vrgrp              *int                          `pulumi:"vrgrp"`
	Vrid               *int                          `pulumi:"vrid"`
	Vrip               *string                       `pulumi:"vrip"`
}

// SystemInterfaceVrrpInput is an input type that accepts SystemInterfaceVrrpArgs and SystemInterfaceVrrpOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpInput` via:
//
//	SystemInterfaceVrrpArgs{...}
type SystemInterfaceVrrpInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput
	ToSystemInterfaceVrrpOutputWithContext(context.Context) SystemInterfaceVrrpOutput
}

type SystemInterfaceVrrpArgs struct {
	AcceptMode         pulumi.StringPtrInput                 `pulumi:"acceptMode"`
	AdvInterval        pulumi.IntPtrInput                    `pulumi:"advInterval"`
	IgnoreDefaultRoute pulumi.StringPtrInput                 `pulumi:"ignoreDefaultRoute"`
	Preempt            pulumi.StringPtrInput                 `pulumi:"preempt"`
	Priority           pulumi.IntPtrInput                    `pulumi:"priority"`
	ProxyArps          SystemInterfaceVrrpProxyArpArrayInput `pulumi:"proxyArps"`
	StartTime          pulumi.IntPtrInput                    `pulumi:"startTime"`
	Status             pulumi.StringPtrInput                 `pulumi:"status"`
	Version            pulumi.StringPtrInput                 `pulumi:"version"`
	Vrdst              pulumi.StringPtrInput                 `pulumi:"vrdst"`
	VrdstPriority      pulumi.IntPtrInput                    `pulumi:"vrdstPriority"`
	Vrgrp              pulumi.IntPtrInput                    `pulumi:"vrgrp"`
	Vrid               pulumi.IntPtrInput                    `pulumi:"vrid"`
	Vrip               pulumi.StringPtrInput                 `pulumi:"vrip"`
}

func (SystemInterfaceVrrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrp)(nil)).Elem()
}

func (i SystemInterfaceVrrpArgs) ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput {
	return i.ToSystemInterfaceVrrpOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpArgs) ToSystemInterfaceVrrpOutputWithContext(ctx context.Context) SystemInterfaceVrrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpOutput)
}

func (i SystemInterfaceVrrpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceVrrp] {
	return pulumix.Output[SystemInterfaceVrrp]{
		OutputState: i.ToSystemInterfaceVrrpOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceVrrpArrayInput is an input type that accepts SystemInterfaceVrrpArray and SystemInterfaceVrrpArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpArrayInput` via:
//
//	SystemInterfaceVrrpArray{ SystemInterfaceVrrpArgs{...} }
type SystemInterfaceVrrpArrayInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput
	ToSystemInterfaceVrrpArrayOutputWithContext(context.Context) SystemInterfaceVrrpArrayOutput
}

type SystemInterfaceVrrpArray []SystemInterfaceVrrpInput

func (SystemInterfaceVrrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrp)(nil)).Elem()
}

func (i SystemInterfaceVrrpArray) ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput {
	return i.ToSystemInterfaceVrrpArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpArray) ToSystemInterfaceVrrpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpArrayOutput)
}

func (i SystemInterfaceVrrpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceVrrp] {
	return pulumix.Output[[]SystemInterfaceVrrp]{
		OutputState: i.ToSystemInterfaceVrrpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceVrrpOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrp)(nil)).Elem()
}

func (o SystemInterfaceVrrpOutput) ToSystemInterfaceVrrpOutput() SystemInterfaceVrrpOutput {
	return o
}

func (o SystemInterfaceVrrpOutput) ToSystemInterfaceVrrpOutputWithContext(ctx context.Context) SystemInterfaceVrrpOutput {
	return o
}

func (o SystemInterfaceVrrpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceVrrp] {
	return pulumix.Output[SystemInterfaceVrrp]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceVrrpOutput) AcceptMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.AcceptMode }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) AdvInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.AdvInterval }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) IgnoreDefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.IgnoreDefaultRoute }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Preempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Preempt }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) ProxyArps() SystemInterfaceVrrpProxyArpArrayOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) []SystemInterfaceVrrpProxyArp { return v.ProxyArps }).(SystemInterfaceVrrpProxyArpArrayOutput)
}

func (o SystemInterfaceVrrpOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Vrdst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Vrdst }).(pulumi.StringPtrOutput)
}

func (o SystemInterfaceVrrpOutput) VrdstPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.VrdstPriority }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Vrgrp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Vrgrp }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpOutput) Vrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrp) *string { return v.Vrip }).(pulumi.StringPtrOutput)
}

type SystemInterfaceVrrpArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrp)(nil)).Elem()
}

func (o SystemInterfaceVrrpArrayOutput) ToSystemInterfaceVrrpArrayOutput() SystemInterfaceVrrpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpArrayOutput) ToSystemInterfaceVrrpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceVrrp] {
	return pulumix.Output[[]SystemInterfaceVrrp]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceVrrpArrayOutput) Index(i pulumi.IntInput) SystemInterfaceVrrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceVrrp {
		return vs[0].([]SystemInterfaceVrrp)[vs[1].(int)]
	}).(SystemInterfaceVrrpOutput)
}

type SystemInterfaceVrrpProxyArp struct {
	Id *int    `pulumi:"id"`
	Ip *string `pulumi:"ip"`
}

// SystemInterfaceVrrpProxyArpInput is an input type that accepts SystemInterfaceVrrpProxyArpArgs and SystemInterfaceVrrpProxyArpOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpProxyArpInput` via:
//
//	SystemInterfaceVrrpProxyArpArgs{...}
type SystemInterfaceVrrpProxyArpInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput
	ToSystemInterfaceVrrpProxyArpOutputWithContext(context.Context) SystemInterfaceVrrpProxyArpOutput
}

type SystemInterfaceVrrpProxyArpArgs struct {
	Id pulumi.IntPtrInput    `pulumi:"id"`
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SystemInterfaceVrrpProxyArpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i SystemInterfaceVrrpProxyArpArgs) ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput {
	return i.ToSystemInterfaceVrrpProxyArpOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpProxyArpArgs) ToSystemInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpProxyArpOutput)
}

func (i SystemInterfaceVrrpProxyArpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceVrrpProxyArp] {
	return pulumix.Output[SystemInterfaceVrrpProxyArp]{
		OutputState: i.ToSystemInterfaceVrrpProxyArpOutputWithContext(ctx).OutputState,
	}
}

// SystemInterfaceVrrpProxyArpArrayInput is an input type that accepts SystemInterfaceVrrpProxyArpArray and SystemInterfaceVrrpProxyArpArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceVrrpProxyArpArrayInput` via:
//
//	SystemInterfaceVrrpProxyArpArray{ SystemInterfaceVrrpProxyArpArgs{...} }
type SystemInterfaceVrrpProxyArpArrayInput interface {
	pulumi.Input

	ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput
	ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(context.Context) SystemInterfaceVrrpProxyArpArrayOutput
}

type SystemInterfaceVrrpProxyArpArray []SystemInterfaceVrrpProxyArpInput

func (SystemInterfaceVrrpProxyArpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (i SystemInterfaceVrrpProxyArpArray) ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput {
	return i.ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceVrrpProxyArpArray) ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceVrrpProxyArpArrayOutput)
}

func (i SystemInterfaceVrrpProxyArpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceVrrpProxyArp] {
	return pulumix.Output[[]SystemInterfaceVrrpProxyArp]{
		OutputState: i.ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemInterfaceVrrpProxyArpOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpProxyArpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o SystemInterfaceVrrpProxyArpOutput) ToSystemInterfaceVrrpProxyArpOutput() SystemInterfaceVrrpProxyArpOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpOutput) ToSystemInterfaceVrrpProxyArpOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemInterfaceVrrpProxyArp] {
	return pulumix.Output[SystemInterfaceVrrpProxyArp]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceVrrpProxyArpOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrpProxyArp) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemInterfaceVrrpProxyArpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemInterfaceVrrpProxyArp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SystemInterfaceVrrpProxyArpArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceVrrpProxyArpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterfaceVrrpProxyArp)(nil)).Elem()
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) ToSystemInterfaceVrrpProxyArpArrayOutput() SystemInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) ToSystemInterfaceVrrpProxyArpArrayOutputWithContext(ctx context.Context) SystemInterfaceVrrpProxyArpArrayOutput {
	return o
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemInterfaceVrrpProxyArp] {
	return pulumix.Output[[]SystemInterfaceVrrpProxyArp]{
		OutputState: o.OutputState,
	}
}

func (o SystemInterfaceVrrpProxyArpArrayOutput) Index(i pulumi.IntInput) SystemInterfaceVrrpProxyArpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterfaceVrrpProxyArp {
		return vs[0].([]SystemInterfaceVrrpProxyArp)[vs[1].(int)]
	}).(SystemInterfaceVrrpProxyArpOutput)
}

type SystemIpamPool struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Subnet      *string `pulumi:"subnet"`
}

// SystemIpamPoolInput is an input type that accepts SystemIpamPoolArgs and SystemIpamPoolOutput values.
// You can construct a concrete instance of `SystemIpamPoolInput` via:
//
//	SystemIpamPoolArgs{...}
type SystemIpamPoolInput interface {
	pulumi.Input

	ToSystemIpamPoolOutput() SystemIpamPoolOutput
	ToSystemIpamPoolOutputWithContext(context.Context) SystemIpamPoolOutput
}

type SystemIpamPoolArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Subnet      pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamPool)(nil)).Elem()
}

func (i SystemIpamPoolArgs) ToSystemIpamPoolOutput() SystemIpamPoolOutput {
	return i.ToSystemIpamPoolOutputWithContext(context.Background())
}

func (i SystemIpamPoolArgs) ToSystemIpamPoolOutputWithContext(ctx context.Context) SystemIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamPoolOutput)
}

func (i SystemIpamPoolArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpamPool] {
	return pulumix.Output[SystemIpamPool]{
		OutputState: i.ToSystemIpamPoolOutputWithContext(ctx).OutputState,
	}
}

// SystemIpamPoolArrayInput is an input type that accepts SystemIpamPoolArray and SystemIpamPoolArrayOutput values.
// You can construct a concrete instance of `SystemIpamPoolArrayInput` via:
//
//	SystemIpamPoolArray{ SystemIpamPoolArgs{...} }
type SystemIpamPoolArrayInput interface {
	pulumi.Input

	ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput
	ToSystemIpamPoolArrayOutputWithContext(context.Context) SystemIpamPoolArrayOutput
}

type SystemIpamPoolArray []SystemIpamPoolInput

func (SystemIpamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamPool)(nil)).Elem()
}

func (i SystemIpamPoolArray) ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput {
	return i.ToSystemIpamPoolArrayOutputWithContext(context.Background())
}

func (i SystemIpamPoolArray) ToSystemIpamPoolArrayOutputWithContext(ctx context.Context) SystemIpamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamPoolArrayOutput)
}

func (i SystemIpamPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamPool] {
	return pulumix.Output[[]SystemIpamPool]{
		OutputState: i.ToSystemIpamPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpamPoolOutput struct{ *pulumi.OutputState }

func (SystemIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamPool)(nil)).Elem()
}

func (o SystemIpamPoolOutput) ToSystemIpamPoolOutput() SystemIpamPoolOutput {
	return o
}

func (o SystemIpamPoolOutput) ToSystemIpamPoolOutputWithContext(ctx context.Context) SystemIpamPoolOutput {
	return o
}

func (o SystemIpamPoolOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpamPool] {
	return pulumix.Output[SystemIpamPool]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemIpamPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemIpamPoolOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamPool) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemIpamPoolArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamPool)(nil)).Elem()
}

func (o SystemIpamPoolArrayOutput) ToSystemIpamPoolArrayOutput() SystemIpamPoolArrayOutput {
	return o
}

func (o SystemIpamPoolArrayOutput) ToSystemIpamPoolArrayOutputWithContext(ctx context.Context) SystemIpamPoolArrayOutput {
	return o
}

func (o SystemIpamPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamPool] {
	return pulumix.Output[[]SystemIpamPool]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamPoolArrayOutput) Index(i pulumi.IntInput) SystemIpamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamPool {
		return vs[0].([]SystemIpamPool)[vs[1].(int)]
	}).(SystemIpamPoolOutput)
}

type SystemIpamRule struct {
	Description *string                   `pulumi:"description"`
	Devices     []SystemIpamRuleDevice    `pulumi:"devices"`
	Dhcp        *string                   `pulumi:"dhcp"`
	Interfaces  []SystemIpamRuleInterface `pulumi:"interfaces"`
	Name        *string                   `pulumi:"name"`
	Pools       []SystemIpamRulePool      `pulumi:"pools"`
	Role        *string                   `pulumi:"role"`
}

// SystemIpamRuleInput is an input type that accepts SystemIpamRuleArgs and SystemIpamRuleOutput values.
// You can construct a concrete instance of `SystemIpamRuleInput` via:
//
//	SystemIpamRuleArgs{...}
type SystemIpamRuleInput interface {
	pulumi.Input

	ToSystemIpamRuleOutput() SystemIpamRuleOutput
	ToSystemIpamRuleOutputWithContext(context.Context) SystemIpamRuleOutput
}

type SystemIpamRuleArgs struct {
	Description pulumi.StringPtrInput             `pulumi:"description"`
	Devices     SystemIpamRuleDeviceArrayInput    `pulumi:"devices"`
	Dhcp        pulumi.StringPtrInput             `pulumi:"dhcp"`
	Interfaces  SystemIpamRuleInterfaceArrayInput `pulumi:"interfaces"`
	Name        pulumi.StringPtrInput             `pulumi:"name"`
	Pools       SystemIpamRulePoolArrayInput      `pulumi:"pools"`
	Role        pulumi.StringPtrInput             `pulumi:"role"`
}

func (SystemIpamRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRule)(nil)).Elem()
}

func (i SystemIpamRuleArgs) ToSystemIpamRuleOutput() SystemIpamRuleOutput {
	return i.ToSystemIpamRuleOutputWithContext(context.Background())
}

func (i SystemIpamRuleArgs) ToSystemIpamRuleOutputWithContext(ctx context.Context) SystemIpamRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleOutput)
}

func (i SystemIpamRuleArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRule] {
	return pulumix.Output[SystemIpamRule]{
		OutputState: i.ToSystemIpamRuleOutputWithContext(ctx).OutputState,
	}
}

// SystemIpamRuleArrayInput is an input type that accepts SystemIpamRuleArray and SystemIpamRuleArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleArrayInput` via:
//
//	SystemIpamRuleArray{ SystemIpamRuleArgs{...} }
type SystemIpamRuleArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput
	ToSystemIpamRuleArrayOutputWithContext(context.Context) SystemIpamRuleArrayOutput
}

type SystemIpamRuleArray []SystemIpamRuleInput

func (SystemIpamRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRule)(nil)).Elem()
}

func (i SystemIpamRuleArray) ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput {
	return i.ToSystemIpamRuleArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleArray) ToSystemIpamRuleArrayOutputWithContext(ctx context.Context) SystemIpamRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleArrayOutput)
}

func (i SystemIpamRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRule] {
	return pulumix.Output[[]SystemIpamRule]{
		OutputState: i.ToSystemIpamRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpamRuleOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRule)(nil)).Elem()
}

func (o SystemIpamRuleOutput) ToSystemIpamRuleOutput() SystemIpamRuleOutput {
	return o
}

func (o SystemIpamRuleOutput) ToSystemIpamRuleOutputWithContext(ctx context.Context) SystemIpamRuleOutput {
	return o
}

func (o SystemIpamRuleOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRule] {
	return pulumix.Output[SystemIpamRule]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemIpamRuleOutput) Devices() SystemIpamRuleDeviceArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRuleDevice { return v.Devices }).(SystemIpamRuleDeviceArrayOutput)
}

func (o SystemIpamRuleOutput) Dhcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Dhcp }).(pulumi.StringPtrOutput)
}

func (o SystemIpamRuleOutput) Interfaces() SystemIpamRuleInterfaceArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRuleInterface { return v.Interfaces }).(SystemIpamRuleInterfaceArrayOutput)
}

func (o SystemIpamRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemIpamRuleOutput) Pools() SystemIpamRulePoolArrayOutput {
	return o.ApplyT(func(v SystemIpamRule) []SystemIpamRulePool { return v.Pools }).(SystemIpamRulePoolArrayOutput)
}

func (o SystemIpamRuleOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRule) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRule)(nil)).Elem()
}

func (o SystemIpamRuleArrayOutput) ToSystemIpamRuleArrayOutput() SystemIpamRuleArrayOutput {
	return o
}

func (o SystemIpamRuleArrayOutput) ToSystemIpamRuleArrayOutputWithContext(ctx context.Context) SystemIpamRuleArrayOutput {
	return o
}

func (o SystemIpamRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRule] {
	return pulumix.Output[[]SystemIpamRule]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRule {
		return vs[0].([]SystemIpamRule)[vs[1].(int)]
	}).(SystemIpamRuleOutput)
}

type SystemIpamRuleDevice struct {
	Name *string `pulumi:"name"`
}

// SystemIpamRuleDeviceInput is an input type that accepts SystemIpamRuleDeviceArgs and SystemIpamRuleDeviceOutput values.
// You can construct a concrete instance of `SystemIpamRuleDeviceInput` via:
//
//	SystemIpamRuleDeviceArgs{...}
type SystemIpamRuleDeviceInput interface {
	pulumi.Input

	ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput
	ToSystemIpamRuleDeviceOutputWithContext(context.Context) SystemIpamRuleDeviceOutput
}

type SystemIpamRuleDeviceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRuleDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleDevice)(nil)).Elem()
}

func (i SystemIpamRuleDeviceArgs) ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput {
	return i.ToSystemIpamRuleDeviceOutputWithContext(context.Background())
}

func (i SystemIpamRuleDeviceArgs) ToSystemIpamRuleDeviceOutputWithContext(ctx context.Context) SystemIpamRuleDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleDeviceOutput)
}

func (i SystemIpamRuleDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRuleDevice] {
	return pulumix.Output[SystemIpamRuleDevice]{
		OutputState: i.ToSystemIpamRuleDeviceOutputWithContext(ctx).OutputState,
	}
}

// SystemIpamRuleDeviceArrayInput is an input type that accepts SystemIpamRuleDeviceArray and SystemIpamRuleDeviceArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleDeviceArrayInput` via:
//
//	SystemIpamRuleDeviceArray{ SystemIpamRuleDeviceArgs{...} }
type SystemIpamRuleDeviceArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput
	ToSystemIpamRuleDeviceArrayOutputWithContext(context.Context) SystemIpamRuleDeviceArrayOutput
}

type SystemIpamRuleDeviceArray []SystemIpamRuleDeviceInput

func (SystemIpamRuleDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleDevice)(nil)).Elem()
}

func (i SystemIpamRuleDeviceArray) ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput {
	return i.ToSystemIpamRuleDeviceArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleDeviceArray) ToSystemIpamRuleDeviceArrayOutputWithContext(ctx context.Context) SystemIpamRuleDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleDeviceArrayOutput)
}

func (i SystemIpamRuleDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRuleDevice] {
	return pulumix.Output[[]SystemIpamRuleDevice]{
		OutputState: i.ToSystemIpamRuleDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpamRuleDeviceOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleDevice)(nil)).Elem()
}

func (o SystemIpamRuleDeviceOutput) ToSystemIpamRuleDeviceOutput() SystemIpamRuleDeviceOutput {
	return o
}

func (o SystemIpamRuleDeviceOutput) ToSystemIpamRuleDeviceOutputWithContext(ctx context.Context) SystemIpamRuleDeviceOutput {
	return o
}

func (o SystemIpamRuleDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRuleDevice] {
	return pulumix.Output[SystemIpamRuleDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRuleDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleDevice)(nil)).Elem()
}

func (o SystemIpamRuleDeviceArrayOutput) ToSystemIpamRuleDeviceArrayOutput() SystemIpamRuleDeviceArrayOutput {
	return o
}

func (o SystemIpamRuleDeviceArrayOutput) ToSystemIpamRuleDeviceArrayOutputWithContext(ctx context.Context) SystemIpamRuleDeviceArrayOutput {
	return o
}

func (o SystemIpamRuleDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRuleDevice] {
	return pulumix.Output[[]SystemIpamRuleDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleDeviceArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRuleDevice {
		return vs[0].([]SystemIpamRuleDevice)[vs[1].(int)]
	}).(SystemIpamRuleDeviceOutput)
}

type SystemIpamRuleInterface struct {
	Name *string `pulumi:"name"`
}

// SystemIpamRuleInterfaceInput is an input type that accepts SystemIpamRuleInterfaceArgs and SystemIpamRuleInterfaceOutput values.
// You can construct a concrete instance of `SystemIpamRuleInterfaceInput` via:
//
//	SystemIpamRuleInterfaceArgs{...}
type SystemIpamRuleInterfaceInput interface {
	pulumi.Input

	ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput
	ToSystemIpamRuleInterfaceOutputWithContext(context.Context) SystemIpamRuleInterfaceOutput
}

type SystemIpamRuleInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRuleInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleInterface)(nil)).Elem()
}

func (i SystemIpamRuleInterfaceArgs) ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput {
	return i.ToSystemIpamRuleInterfaceOutputWithContext(context.Background())
}

func (i SystemIpamRuleInterfaceArgs) ToSystemIpamRuleInterfaceOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleInterfaceOutput)
}

func (i SystemIpamRuleInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRuleInterface] {
	return pulumix.Output[SystemIpamRuleInterface]{
		OutputState: i.ToSystemIpamRuleInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemIpamRuleInterfaceArrayInput is an input type that accepts SystemIpamRuleInterfaceArray and SystemIpamRuleInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemIpamRuleInterfaceArrayInput` via:
//
//	SystemIpamRuleInterfaceArray{ SystemIpamRuleInterfaceArgs{...} }
type SystemIpamRuleInterfaceArrayInput interface {
	pulumi.Input

	ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput
	ToSystemIpamRuleInterfaceArrayOutputWithContext(context.Context) SystemIpamRuleInterfaceArrayOutput
}

type SystemIpamRuleInterfaceArray []SystemIpamRuleInterfaceInput

func (SystemIpamRuleInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleInterface)(nil)).Elem()
}

func (i SystemIpamRuleInterfaceArray) ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput {
	return i.ToSystemIpamRuleInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemIpamRuleInterfaceArray) ToSystemIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRuleInterfaceArrayOutput)
}

func (i SystemIpamRuleInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRuleInterface] {
	return pulumix.Output[[]SystemIpamRuleInterface]{
		OutputState: i.ToSystemIpamRuleInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpamRuleInterfaceOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRuleInterface)(nil)).Elem()
}

func (o SystemIpamRuleInterfaceOutput) ToSystemIpamRuleInterfaceOutput() SystemIpamRuleInterfaceOutput {
	return o
}

func (o SystemIpamRuleInterfaceOutput) ToSystemIpamRuleInterfaceOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceOutput {
	return o
}

func (o SystemIpamRuleInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRuleInterface] {
	return pulumix.Output[SystemIpamRuleInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRuleInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRuleInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRuleInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRuleInterface)(nil)).Elem()
}

func (o SystemIpamRuleInterfaceArrayOutput) ToSystemIpamRuleInterfaceArrayOutput() SystemIpamRuleInterfaceArrayOutput {
	return o
}

func (o SystemIpamRuleInterfaceArrayOutput) ToSystemIpamRuleInterfaceArrayOutputWithContext(ctx context.Context) SystemIpamRuleInterfaceArrayOutput {
	return o
}

func (o SystemIpamRuleInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRuleInterface] {
	return pulumix.Output[[]SystemIpamRuleInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRuleInterfaceArrayOutput) Index(i pulumi.IntInput) SystemIpamRuleInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRuleInterface {
		return vs[0].([]SystemIpamRuleInterface)[vs[1].(int)]
	}).(SystemIpamRuleInterfaceOutput)
}

type SystemIpamRulePool struct {
	Name *string `pulumi:"name"`
}

// SystemIpamRulePoolInput is an input type that accepts SystemIpamRulePoolArgs and SystemIpamRulePoolOutput values.
// You can construct a concrete instance of `SystemIpamRulePoolInput` via:
//
//	SystemIpamRulePoolArgs{...}
type SystemIpamRulePoolInput interface {
	pulumi.Input

	ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput
	ToSystemIpamRulePoolOutputWithContext(context.Context) SystemIpamRulePoolOutput
}

type SystemIpamRulePoolArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemIpamRulePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRulePool)(nil)).Elem()
}

func (i SystemIpamRulePoolArgs) ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput {
	return i.ToSystemIpamRulePoolOutputWithContext(context.Background())
}

func (i SystemIpamRulePoolArgs) ToSystemIpamRulePoolOutputWithContext(ctx context.Context) SystemIpamRulePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRulePoolOutput)
}

func (i SystemIpamRulePoolArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRulePool] {
	return pulumix.Output[SystemIpamRulePool]{
		OutputState: i.ToSystemIpamRulePoolOutputWithContext(ctx).OutputState,
	}
}

// SystemIpamRulePoolArrayInput is an input type that accepts SystemIpamRulePoolArray and SystemIpamRulePoolArrayOutput values.
// You can construct a concrete instance of `SystemIpamRulePoolArrayInput` via:
//
//	SystemIpamRulePoolArray{ SystemIpamRulePoolArgs{...} }
type SystemIpamRulePoolArrayInput interface {
	pulumi.Input

	ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput
	ToSystemIpamRulePoolArrayOutputWithContext(context.Context) SystemIpamRulePoolArrayOutput
}

type SystemIpamRulePoolArray []SystemIpamRulePoolInput

func (SystemIpamRulePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRulePool)(nil)).Elem()
}

func (i SystemIpamRulePoolArray) ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput {
	return i.ToSystemIpamRulePoolArrayOutputWithContext(context.Background())
}

func (i SystemIpamRulePoolArray) ToSystemIpamRulePoolArrayOutputWithContext(ctx context.Context) SystemIpamRulePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpamRulePoolArrayOutput)
}

func (i SystemIpamRulePoolArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRulePool] {
	return pulumix.Output[[]SystemIpamRulePool]{
		OutputState: i.ToSystemIpamRulePoolArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpamRulePoolOutput struct{ *pulumi.OutputState }

func (SystemIpamRulePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpamRulePool)(nil)).Elem()
}

func (o SystemIpamRulePoolOutput) ToSystemIpamRulePoolOutput() SystemIpamRulePoolOutput {
	return o
}

func (o SystemIpamRulePoolOutput) ToSystemIpamRulePoolOutputWithContext(ctx context.Context) SystemIpamRulePoolOutput {
	return o
}

func (o SystemIpamRulePoolOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpamRulePool] {
	return pulumix.Output[SystemIpamRulePool]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRulePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpamRulePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemIpamRulePoolArrayOutput struct{ *pulumi.OutputState }

func (SystemIpamRulePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpamRulePool)(nil)).Elem()
}

func (o SystemIpamRulePoolArrayOutput) ToSystemIpamRulePoolArrayOutput() SystemIpamRulePoolArrayOutput {
	return o
}

func (o SystemIpamRulePoolArrayOutput) ToSystemIpamRulePoolArrayOutputWithContext(ctx context.Context) SystemIpamRulePoolArrayOutput {
	return o
}

func (o SystemIpamRulePoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpamRulePool] {
	return pulumix.Output[[]SystemIpamRulePool]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpamRulePoolArrayOutput) Index(i pulumi.IntInput) SystemIpamRulePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpamRulePool {
		return vs[0].([]SystemIpamRulePool)[vs[1].(int)]
	}).(SystemIpamRulePoolOutput)
}

type SystemIpsecAggregateMember struct {
	TunnelName *string `pulumi:"tunnelName"`
}

// SystemIpsecAggregateMemberInput is an input type that accepts SystemIpsecAggregateMemberArgs and SystemIpsecAggregateMemberOutput values.
// You can construct a concrete instance of `SystemIpsecAggregateMemberInput` via:
//
//	SystemIpsecAggregateMemberArgs{...}
type SystemIpsecAggregateMemberInput interface {
	pulumi.Input

	ToSystemIpsecAggregateMemberOutput() SystemIpsecAggregateMemberOutput
	ToSystemIpsecAggregateMemberOutputWithContext(context.Context) SystemIpsecAggregateMemberOutput
}

type SystemIpsecAggregateMemberArgs struct {
	TunnelName pulumi.StringPtrInput `pulumi:"tunnelName"`
}

func (SystemIpsecAggregateMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpsecAggregateMember)(nil)).Elem()
}

func (i SystemIpsecAggregateMemberArgs) ToSystemIpsecAggregateMemberOutput() SystemIpsecAggregateMemberOutput {
	return i.ToSystemIpsecAggregateMemberOutputWithContext(context.Background())
}

func (i SystemIpsecAggregateMemberArgs) ToSystemIpsecAggregateMemberOutputWithContext(ctx context.Context) SystemIpsecAggregateMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecAggregateMemberOutput)
}

func (i SystemIpsecAggregateMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemIpsecAggregateMember] {
	return pulumix.Output[SystemIpsecAggregateMember]{
		OutputState: i.ToSystemIpsecAggregateMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsecAggregateMemberArrayInput is an input type that accepts SystemIpsecAggregateMemberArray and SystemIpsecAggregateMemberArrayOutput values.
// You can construct a concrete instance of `SystemIpsecAggregateMemberArrayInput` via:
//
//	SystemIpsecAggregateMemberArray{ SystemIpsecAggregateMemberArgs{...} }
type SystemIpsecAggregateMemberArrayInput interface {
	pulumi.Input

	ToSystemIpsecAggregateMemberArrayOutput() SystemIpsecAggregateMemberArrayOutput
	ToSystemIpsecAggregateMemberArrayOutputWithContext(context.Context) SystemIpsecAggregateMemberArrayOutput
}

type SystemIpsecAggregateMemberArray []SystemIpsecAggregateMemberInput

func (SystemIpsecAggregateMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpsecAggregateMember)(nil)).Elem()
}

func (i SystemIpsecAggregateMemberArray) ToSystemIpsecAggregateMemberArrayOutput() SystemIpsecAggregateMemberArrayOutput {
	return i.ToSystemIpsecAggregateMemberArrayOutputWithContext(context.Background())
}

func (i SystemIpsecAggregateMemberArray) ToSystemIpsecAggregateMemberArrayOutputWithContext(ctx context.Context) SystemIpsecAggregateMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecAggregateMemberArrayOutput)
}

func (i SystemIpsecAggregateMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpsecAggregateMember] {
	return pulumix.Output[[]SystemIpsecAggregateMember]{
		OutputState: i.ToSystemIpsecAggregateMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemIpsecAggregateMemberOutput struct{ *pulumi.OutputState }

func (SystemIpsecAggregateMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemIpsecAggregateMember)(nil)).Elem()
}

func (o SystemIpsecAggregateMemberOutput) ToSystemIpsecAggregateMemberOutput() SystemIpsecAggregateMemberOutput {
	return o
}

func (o SystemIpsecAggregateMemberOutput) ToSystemIpsecAggregateMemberOutputWithContext(ctx context.Context) SystemIpsecAggregateMemberOutput {
	return o
}

func (o SystemIpsecAggregateMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemIpsecAggregateMember] {
	return pulumix.Output[SystemIpsecAggregateMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsecAggregateMemberOutput) TunnelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemIpsecAggregateMember) *string { return v.TunnelName }).(pulumi.StringPtrOutput)
}

type SystemIpsecAggregateMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemIpsecAggregateMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemIpsecAggregateMember)(nil)).Elem()
}

func (o SystemIpsecAggregateMemberArrayOutput) ToSystemIpsecAggregateMemberArrayOutput() SystemIpsecAggregateMemberArrayOutput {
	return o
}

func (o SystemIpsecAggregateMemberArrayOutput) ToSystemIpsecAggregateMemberArrayOutputWithContext(ctx context.Context) SystemIpsecAggregateMemberArrayOutput {
	return o
}

func (o SystemIpsecAggregateMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemIpsecAggregateMember] {
	return pulumix.Output[[]SystemIpsecAggregateMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsecAggregateMemberArrayOutput) Index(i pulumi.IntInput) SystemIpsecAggregateMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemIpsecAggregateMember {
		return vs[0].([]SystemIpsecAggregateMember)[vs[1].(int)]
	}).(SystemIpsecAggregateMemberOutput)
}

type SystemLinkMonitorRoute struct {
	Subnet *string `pulumi:"subnet"`
}

// SystemLinkMonitorRouteInput is an input type that accepts SystemLinkMonitorRouteArgs and SystemLinkMonitorRouteOutput values.
// You can construct a concrete instance of `SystemLinkMonitorRouteInput` via:
//
//	SystemLinkMonitorRouteArgs{...}
type SystemLinkMonitorRouteInput interface {
	pulumi.Input

	ToSystemLinkMonitorRouteOutput() SystemLinkMonitorRouteOutput
	ToSystemLinkMonitorRouteOutputWithContext(context.Context) SystemLinkMonitorRouteOutput
}

type SystemLinkMonitorRouteArgs struct {
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemLinkMonitorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorRoute)(nil)).Elem()
}

func (i SystemLinkMonitorRouteArgs) ToSystemLinkMonitorRouteOutput() SystemLinkMonitorRouteOutput {
	return i.ToSystemLinkMonitorRouteOutputWithContext(context.Background())
}

func (i SystemLinkMonitorRouteArgs) ToSystemLinkMonitorRouteOutputWithContext(ctx context.Context) SystemLinkMonitorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorRouteOutput)
}

func (i SystemLinkMonitorRouteArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorRoute] {
	return pulumix.Output[SystemLinkMonitorRoute]{
		OutputState: i.ToSystemLinkMonitorRouteOutputWithContext(ctx).OutputState,
	}
}

// SystemLinkMonitorRouteArrayInput is an input type that accepts SystemLinkMonitorRouteArray and SystemLinkMonitorRouteArrayOutput values.
// You can construct a concrete instance of `SystemLinkMonitorRouteArrayInput` via:
//
//	SystemLinkMonitorRouteArray{ SystemLinkMonitorRouteArgs{...} }
type SystemLinkMonitorRouteArrayInput interface {
	pulumi.Input

	ToSystemLinkMonitorRouteArrayOutput() SystemLinkMonitorRouteArrayOutput
	ToSystemLinkMonitorRouteArrayOutputWithContext(context.Context) SystemLinkMonitorRouteArrayOutput
}

type SystemLinkMonitorRouteArray []SystemLinkMonitorRouteInput

func (SystemLinkMonitorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorRoute)(nil)).Elem()
}

func (i SystemLinkMonitorRouteArray) ToSystemLinkMonitorRouteArrayOutput() SystemLinkMonitorRouteArrayOutput {
	return i.ToSystemLinkMonitorRouteArrayOutputWithContext(context.Background())
}

func (i SystemLinkMonitorRouteArray) ToSystemLinkMonitorRouteArrayOutputWithContext(ctx context.Context) SystemLinkMonitorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorRouteArrayOutput)
}

func (i SystemLinkMonitorRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorRoute] {
	return pulumix.Output[[]SystemLinkMonitorRoute]{
		OutputState: i.ToSystemLinkMonitorRouteArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemLinkMonitorRouteOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorRoute)(nil)).Elem()
}

func (o SystemLinkMonitorRouteOutput) ToSystemLinkMonitorRouteOutput() SystemLinkMonitorRouteOutput {
	return o
}

func (o SystemLinkMonitorRouteOutput) ToSystemLinkMonitorRouteOutputWithContext(ctx context.Context) SystemLinkMonitorRouteOutput {
	return o
}

func (o SystemLinkMonitorRouteOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorRoute] {
	return pulumix.Output[SystemLinkMonitorRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorRouteOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorRoute) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemLinkMonitorRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorRoute)(nil)).Elem()
}

func (o SystemLinkMonitorRouteArrayOutput) ToSystemLinkMonitorRouteArrayOutput() SystemLinkMonitorRouteArrayOutput {
	return o
}

func (o SystemLinkMonitorRouteArrayOutput) ToSystemLinkMonitorRouteArrayOutputWithContext(ctx context.Context) SystemLinkMonitorRouteArrayOutput {
	return o
}

func (o SystemLinkMonitorRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorRoute] {
	return pulumix.Output[[]SystemLinkMonitorRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorRouteArrayOutput) Index(i pulumi.IntInput) SystemLinkMonitorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkMonitorRoute {
		return vs[0].([]SystemLinkMonitorRoute)[vs[1].(int)]
	}).(SystemLinkMonitorRouteOutput)
}

type SystemLinkMonitorServer struct {
	Address *string `pulumi:"address"`
}

// SystemLinkMonitorServerInput is an input type that accepts SystemLinkMonitorServerArgs and SystemLinkMonitorServerOutput values.
// You can construct a concrete instance of `SystemLinkMonitorServerInput` via:
//
//	SystemLinkMonitorServerArgs{...}
type SystemLinkMonitorServerInput interface {
	pulumi.Input

	ToSystemLinkMonitorServerOutput() SystemLinkMonitorServerOutput
	ToSystemLinkMonitorServerOutputWithContext(context.Context) SystemLinkMonitorServerOutput
}

type SystemLinkMonitorServerArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (SystemLinkMonitorServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorServer)(nil)).Elem()
}

func (i SystemLinkMonitorServerArgs) ToSystemLinkMonitorServerOutput() SystemLinkMonitorServerOutput {
	return i.ToSystemLinkMonitorServerOutputWithContext(context.Background())
}

func (i SystemLinkMonitorServerArgs) ToSystemLinkMonitorServerOutputWithContext(ctx context.Context) SystemLinkMonitorServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorServerOutput)
}

func (i SystemLinkMonitorServerArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorServer] {
	return pulumix.Output[SystemLinkMonitorServer]{
		OutputState: i.ToSystemLinkMonitorServerOutputWithContext(ctx).OutputState,
	}
}

// SystemLinkMonitorServerArrayInput is an input type that accepts SystemLinkMonitorServerArray and SystemLinkMonitorServerArrayOutput values.
// You can construct a concrete instance of `SystemLinkMonitorServerArrayInput` via:
//
//	SystemLinkMonitorServerArray{ SystemLinkMonitorServerArgs{...} }
type SystemLinkMonitorServerArrayInput interface {
	pulumi.Input

	ToSystemLinkMonitorServerArrayOutput() SystemLinkMonitorServerArrayOutput
	ToSystemLinkMonitorServerArrayOutputWithContext(context.Context) SystemLinkMonitorServerArrayOutput
}

type SystemLinkMonitorServerArray []SystemLinkMonitorServerInput

func (SystemLinkMonitorServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorServer)(nil)).Elem()
}

func (i SystemLinkMonitorServerArray) ToSystemLinkMonitorServerArrayOutput() SystemLinkMonitorServerArrayOutput {
	return i.ToSystemLinkMonitorServerArrayOutputWithContext(context.Background())
}

func (i SystemLinkMonitorServerArray) ToSystemLinkMonitorServerArrayOutputWithContext(ctx context.Context) SystemLinkMonitorServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorServerArrayOutput)
}

func (i SystemLinkMonitorServerArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorServer] {
	return pulumix.Output[[]SystemLinkMonitorServer]{
		OutputState: i.ToSystemLinkMonitorServerArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemLinkMonitorServerOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorServer)(nil)).Elem()
}

func (o SystemLinkMonitorServerOutput) ToSystemLinkMonitorServerOutput() SystemLinkMonitorServerOutput {
	return o
}

func (o SystemLinkMonitorServerOutput) ToSystemLinkMonitorServerOutputWithContext(ctx context.Context) SystemLinkMonitorServerOutput {
	return o
}

func (o SystemLinkMonitorServerOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorServer] {
	return pulumix.Output[SystemLinkMonitorServer]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorServerOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServer) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type SystemLinkMonitorServerArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorServer)(nil)).Elem()
}

func (o SystemLinkMonitorServerArrayOutput) ToSystemLinkMonitorServerArrayOutput() SystemLinkMonitorServerArrayOutput {
	return o
}

func (o SystemLinkMonitorServerArrayOutput) ToSystemLinkMonitorServerArrayOutputWithContext(ctx context.Context) SystemLinkMonitorServerArrayOutput {
	return o
}

func (o SystemLinkMonitorServerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorServer] {
	return pulumix.Output[[]SystemLinkMonitorServer]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorServerArrayOutput) Index(i pulumi.IntInput) SystemLinkMonitorServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkMonitorServer {
		return vs[0].([]SystemLinkMonitorServer)[vs[1].(int)]
	}).(SystemLinkMonitorServerOutput)
}

type SystemLinkMonitorServerList struct {
	Dst      *string `pulumi:"dst"`
	Id       *int    `pulumi:"id"`
	Port     *int    `pulumi:"port"`
	Protocol *string `pulumi:"protocol"`
	Weight   *int    `pulumi:"weight"`
}

// SystemLinkMonitorServerListInput is an input type that accepts SystemLinkMonitorServerListArgs and SystemLinkMonitorServerListOutput values.
// You can construct a concrete instance of `SystemLinkMonitorServerListInput` via:
//
//	SystemLinkMonitorServerListArgs{...}
type SystemLinkMonitorServerListInput interface {
	pulumi.Input

	ToSystemLinkMonitorServerListOutput() SystemLinkMonitorServerListOutput
	ToSystemLinkMonitorServerListOutputWithContext(context.Context) SystemLinkMonitorServerListOutput
}

type SystemLinkMonitorServerListArgs struct {
	Dst      pulumi.StringPtrInput `pulumi:"dst"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Port     pulumi.IntPtrInput    `pulumi:"port"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	Weight   pulumi.IntPtrInput    `pulumi:"weight"`
}

func (SystemLinkMonitorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorServerList)(nil)).Elem()
}

func (i SystemLinkMonitorServerListArgs) ToSystemLinkMonitorServerListOutput() SystemLinkMonitorServerListOutput {
	return i.ToSystemLinkMonitorServerListOutputWithContext(context.Background())
}

func (i SystemLinkMonitorServerListArgs) ToSystemLinkMonitorServerListOutputWithContext(ctx context.Context) SystemLinkMonitorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorServerListOutput)
}

func (i SystemLinkMonitorServerListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorServerList] {
	return pulumix.Output[SystemLinkMonitorServerList]{
		OutputState: i.ToSystemLinkMonitorServerListOutputWithContext(ctx).OutputState,
	}
}

// SystemLinkMonitorServerListArrayInput is an input type that accepts SystemLinkMonitorServerListArray and SystemLinkMonitorServerListArrayOutput values.
// You can construct a concrete instance of `SystemLinkMonitorServerListArrayInput` via:
//
//	SystemLinkMonitorServerListArray{ SystemLinkMonitorServerListArgs{...} }
type SystemLinkMonitorServerListArrayInput interface {
	pulumi.Input

	ToSystemLinkMonitorServerListArrayOutput() SystemLinkMonitorServerListArrayOutput
	ToSystemLinkMonitorServerListArrayOutputWithContext(context.Context) SystemLinkMonitorServerListArrayOutput
}

type SystemLinkMonitorServerListArray []SystemLinkMonitorServerListInput

func (SystemLinkMonitorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorServerList)(nil)).Elem()
}

func (i SystemLinkMonitorServerListArray) ToSystemLinkMonitorServerListArrayOutput() SystemLinkMonitorServerListArrayOutput {
	return i.ToSystemLinkMonitorServerListArrayOutputWithContext(context.Background())
}

func (i SystemLinkMonitorServerListArray) ToSystemLinkMonitorServerListArrayOutputWithContext(ctx context.Context) SystemLinkMonitorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLinkMonitorServerListArrayOutput)
}

func (i SystemLinkMonitorServerListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorServerList] {
	return pulumix.Output[[]SystemLinkMonitorServerList]{
		OutputState: i.ToSystemLinkMonitorServerListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemLinkMonitorServerListOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLinkMonitorServerList)(nil)).Elem()
}

func (o SystemLinkMonitorServerListOutput) ToSystemLinkMonitorServerListOutput() SystemLinkMonitorServerListOutput {
	return o
}

func (o SystemLinkMonitorServerListOutput) ToSystemLinkMonitorServerListOutputWithContext(ctx context.Context) SystemLinkMonitorServerListOutput {
	return o
}

func (o SystemLinkMonitorServerListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLinkMonitorServerList] {
	return pulumix.Output[SystemLinkMonitorServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorServerListOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServerList) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o SystemLinkMonitorServerListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServerList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemLinkMonitorServerListOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServerList) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SystemLinkMonitorServerListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServerList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SystemLinkMonitorServerListOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLinkMonitorServerList) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SystemLinkMonitorServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemLinkMonitorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemLinkMonitorServerList)(nil)).Elem()
}

func (o SystemLinkMonitorServerListArrayOutput) ToSystemLinkMonitorServerListArrayOutput() SystemLinkMonitorServerListArrayOutput {
	return o
}

func (o SystemLinkMonitorServerListArrayOutput) ToSystemLinkMonitorServerListArrayOutputWithContext(ctx context.Context) SystemLinkMonitorServerListArrayOutput {
	return o
}

func (o SystemLinkMonitorServerListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemLinkMonitorServerList] {
	return pulumix.Output[[]SystemLinkMonitorServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemLinkMonitorServerListArrayOutput) Index(i pulumi.IntInput) SystemLinkMonitorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemLinkMonitorServerList {
		return vs[0].([]SystemLinkMonitorServerList)[vs[1].(int)]
	}).(SystemLinkMonitorServerListOutput)
}

type SystemLldpNetworkPolicyGuest struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyGuestInput is an input type that accepts SystemLldpNetworkPolicyGuestArgs and SystemLldpNetworkPolicyGuestOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyGuestInput` via:
//
//	SystemLldpNetworkPolicyGuestArgs{...}
type SystemLldpNetworkPolicyGuestInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyGuestOutput() SystemLldpNetworkPolicyGuestOutput
	ToSystemLldpNetworkPolicyGuestOutputWithContext(context.Context) SystemLldpNetworkPolicyGuestOutput
}

type SystemLldpNetworkPolicyGuestArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyGuestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyGuest)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyGuestArgs) ToSystemLldpNetworkPolicyGuestOutput() SystemLldpNetworkPolicyGuestOutput {
	return i.ToSystemLldpNetworkPolicyGuestOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyGuestArgs) ToSystemLldpNetworkPolicyGuestOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestOutput)
}

func (i SystemLldpNetworkPolicyGuestArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyGuest] {
	return pulumix.Output[SystemLldpNetworkPolicyGuest]{
		OutputState: i.ToSystemLldpNetworkPolicyGuestOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyGuestArgs) ToSystemLldpNetworkPolicyGuestPtrOutput() SystemLldpNetworkPolicyGuestPtrOutput {
	return i.ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyGuestArgs) ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestOutput).ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyGuestPtrInput is an input type that accepts SystemLldpNetworkPolicyGuestArgs, SystemLldpNetworkPolicyGuestPtr and SystemLldpNetworkPolicyGuestPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyGuestPtrInput` via:
//
//	        SystemLldpNetworkPolicyGuestArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyGuestPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyGuestPtrOutput() SystemLldpNetworkPolicyGuestPtrOutput
	ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyGuestPtrOutput
}

type systemLldpNetworkPolicyGuestPtrType SystemLldpNetworkPolicyGuestArgs

func SystemLldpNetworkPolicyGuestPtr(v *SystemLldpNetworkPolicyGuestArgs) SystemLldpNetworkPolicyGuestPtrInput {
	return (*systemLldpNetworkPolicyGuestPtrType)(v)
}

func (*systemLldpNetworkPolicyGuestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyGuest)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyGuestPtrType) ToSystemLldpNetworkPolicyGuestPtrOutput() SystemLldpNetworkPolicyGuestPtrOutput {
	return i.ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyGuestPtrType) ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestPtrOutput)
}

func (i *systemLldpNetworkPolicyGuestPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyGuest] {
	return pulumix.Output[*SystemLldpNetworkPolicyGuest]{
		OutputState: i.ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyGuestOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyGuestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyGuest)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyGuestOutput) ToSystemLldpNetworkPolicyGuestOutput() SystemLldpNetworkPolicyGuestOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestOutput) ToSystemLldpNetworkPolicyGuestOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestOutput) ToSystemLldpNetworkPolicyGuestPtrOutput() SystemLldpNetworkPolicyGuestPtrOutput {
	return o.ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyGuestOutput) ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyGuest) *SystemLldpNetworkPolicyGuest {
		return &v
	}).(SystemLldpNetworkPolicyGuestPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyGuest] {
	return pulumix.Output[SystemLldpNetworkPolicyGuest]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyGuestOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuest) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuest) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuest) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuest) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuest) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyGuestPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyGuestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyGuest)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) ToSystemLldpNetworkPolicyGuestPtrOutput() SystemLldpNetworkPolicyGuestPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) ToSystemLldpNetworkPolicyGuestPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyGuest] {
	return pulumix.Output[*SystemLldpNetworkPolicyGuest]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Elem() SystemLldpNetworkPolicyGuestOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) SystemLldpNetworkPolicyGuest {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyGuest
		return ret
	}).(SystemLldpNetworkPolicyGuestOutput)
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuest) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyGuestVoiceSignaling struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyGuestVoiceSignalingInput is an input type that accepts SystemLldpNetworkPolicyGuestVoiceSignalingArgs and SystemLldpNetworkPolicyGuestVoiceSignalingOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyGuestVoiceSignalingInput` via:
//
//	SystemLldpNetworkPolicyGuestVoiceSignalingArgs{...}
type SystemLldpNetworkPolicyGuestVoiceSignalingInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyGuestVoiceSignalingOutput() SystemLldpNetworkPolicyGuestVoiceSignalingOutput
	ToSystemLldpNetworkPolicyGuestVoiceSignalingOutputWithContext(context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingOutput
}

type SystemLldpNetworkPolicyGuestVoiceSignalingArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyGuestVoiceSignaling)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ToSystemLldpNetworkPolicyGuestVoiceSignalingOutput() SystemLldpNetworkPolicyGuestVoiceSignalingOutput {
	return i.ToSystemLldpNetworkPolicyGuestVoiceSignalingOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ToSystemLldpNetworkPolicyGuestVoiceSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestVoiceSignalingOutput)
}

func (i SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyGuestVoiceSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyGuestVoiceSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyGuestVoiceSignalingOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput() SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyGuestVoiceSignalingArgs) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestVoiceSignalingOutput).ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyGuestVoiceSignalingPtrInput is an input type that accepts SystemLldpNetworkPolicyGuestVoiceSignalingArgs, SystemLldpNetworkPolicyGuestVoiceSignalingPtr and SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyGuestVoiceSignalingPtrInput` via:
//
//	        SystemLldpNetworkPolicyGuestVoiceSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyGuestVoiceSignalingPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput() SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput
	ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput
}

type systemLldpNetworkPolicyGuestVoiceSignalingPtrType SystemLldpNetworkPolicyGuestVoiceSignalingArgs

func SystemLldpNetworkPolicyGuestVoiceSignalingPtr(v *SystemLldpNetworkPolicyGuestVoiceSignalingArgs) SystemLldpNetworkPolicyGuestVoiceSignalingPtrInput {
	return (*systemLldpNetworkPolicyGuestVoiceSignalingPtrType)(v)
}

func (*systemLldpNetworkPolicyGuestVoiceSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyGuestVoiceSignaling)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyGuestVoiceSignalingPtrType) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput() SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyGuestVoiceSignalingPtrType) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput)
}

func (i *systemLldpNetworkPolicyGuestVoiceSignalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyGuestVoiceSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyGuestVoiceSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyGuestVoiceSignalingOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyGuestVoiceSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingOutput() SystemLldpNetworkPolicyGuestVoiceSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput() SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return o.ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyGuestVoiceSignaling) *SystemLldpNetworkPolicyGuestVoiceSignaling {
		return &v
	}).(SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyGuestVoiceSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyGuestVoiceSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuestVoiceSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuestVoiceSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuestVoiceSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuestVoiceSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyGuestVoiceSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyGuestVoiceSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput() SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) ToSystemLldpNetworkPolicyGuestVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyGuestVoiceSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyGuestVoiceSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Elem() SystemLldpNetworkPolicyGuestVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) SystemLldpNetworkPolicyGuestVoiceSignaling {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyGuestVoiceSignaling
		return ret
	}).(SystemLldpNetworkPolicyGuestVoiceSignalingOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyGuestVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicySoftphone struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicySoftphoneInput is an input type that accepts SystemLldpNetworkPolicySoftphoneArgs and SystemLldpNetworkPolicySoftphoneOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicySoftphoneInput` via:
//
//	SystemLldpNetworkPolicySoftphoneArgs{...}
type SystemLldpNetworkPolicySoftphoneInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicySoftphoneOutput() SystemLldpNetworkPolicySoftphoneOutput
	ToSystemLldpNetworkPolicySoftphoneOutputWithContext(context.Context) SystemLldpNetworkPolicySoftphoneOutput
}

type SystemLldpNetworkPolicySoftphoneArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicySoftphoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicySoftphone)(nil)).Elem()
}

func (i SystemLldpNetworkPolicySoftphoneArgs) ToSystemLldpNetworkPolicySoftphoneOutput() SystemLldpNetworkPolicySoftphoneOutput {
	return i.ToSystemLldpNetworkPolicySoftphoneOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicySoftphoneArgs) ToSystemLldpNetworkPolicySoftphoneOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicySoftphoneOutput)
}

func (i SystemLldpNetworkPolicySoftphoneArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicySoftphone] {
	return pulumix.Output[SystemLldpNetworkPolicySoftphone]{
		OutputState: i.ToSystemLldpNetworkPolicySoftphoneOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicySoftphoneArgs) ToSystemLldpNetworkPolicySoftphonePtrOutput() SystemLldpNetworkPolicySoftphonePtrOutput {
	return i.ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicySoftphoneArgs) ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicySoftphoneOutput).ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicySoftphonePtrInput is an input type that accepts SystemLldpNetworkPolicySoftphoneArgs, SystemLldpNetworkPolicySoftphonePtr and SystemLldpNetworkPolicySoftphonePtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicySoftphonePtrInput` via:
//
//	        SystemLldpNetworkPolicySoftphoneArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicySoftphonePtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicySoftphonePtrOutput() SystemLldpNetworkPolicySoftphonePtrOutput
	ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(context.Context) SystemLldpNetworkPolicySoftphonePtrOutput
}

type systemLldpNetworkPolicySoftphonePtrType SystemLldpNetworkPolicySoftphoneArgs

func SystemLldpNetworkPolicySoftphonePtr(v *SystemLldpNetworkPolicySoftphoneArgs) SystemLldpNetworkPolicySoftphonePtrInput {
	return (*systemLldpNetworkPolicySoftphonePtrType)(v)
}

func (*systemLldpNetworkPolicySoftphonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicySoftphone)(nil)).Elem()
}

func (i *systemLldpNetworkPolicySoftphonePtrType) ToSystemLldpNetworkPolicySoftphonePtrOutput() SystemLldpNetworkPolicySoftphonePtrOutput {
	return i.ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicySoftphonePtrType) ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicySoftphonePtrOutput)
}

func (i *systemLldpNetworkPolicySoftphonePtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicySoftphone] {
	return pulumix.Output[*SystemLldpNetworkPolicySoftphone]{
		OutputState: i.ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicySoftphoneOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicySoftphoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicySoftphone)(nil)).Elem()
}

func (o SystemLldpNetworkPolicySoftphoneOutput) ToSystemLldpNetworkPolicySoftphoneOutput() SystemLldpNetworkPolicySoftphoneOutput {
	return o
}

func (o SystemLldpNetworkPolicySoftphoneOutput) ToSystemLldpNetworkPolicySoftphoneOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphoneOutput {
	return o
}

func (o SystemLldpNetworkPolicySoftphoneOutput) ToSystemLldpNetworkPolicySoftphonePtrOutput() SystemLldpNetworkPolicySoftphonePtrOutput {
	return o.ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicySoftphoneOutput) ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicySoftphone) *SystemLldpNetworkPolicySoftphone {
		return &v
	}).(SystemLldpNetworkPolicySoftphonePtrOutput)
}

func (o SystemLldpNetworkPolicySoftphoneOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicySoftphone] {
	return pulumix.Output[SystemLldpNetworkPolicySoftphone]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicySoftphoneOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicySoftphone) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphoneOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicySoftphone) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphoneOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicySoftphone) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphoneOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicySoftphone) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphoneOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicySoftphone) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicySoftphonePtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicySoftphonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicySoftphone)(nil)).Elem()
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) ToSystemLldpNetworkPolicySoftphonePtrOutput() SystemLldpNetworkPolicySoftphonePtrOutput {
	return o
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) ToSystemLldpNetworkPolicySoftphonePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicySoftphonePtrOutput {
	return o
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicySoftphone] {
	return pulumix.Output[*SystemLldpNetworkPolicySoftphone]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Elem() SystemLldpNetworkPolicySoftphoneOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) SystemLldpNetworkPolicySoftphone {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicySoftphone
		return ret
	}).(SystemLldpNetworkPolicySoftphoneOutput)
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicySoftphonePtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicySoftphone) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyStreamingVideo struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyStreamingVideoInput is an input type that accepts SystemLldpNetworkPolicyStreamingVideoArgs and SystemLldpNetworkPolicyStreamingVideoOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyStreamingVideoInput` via:
//
//	SystemLldpNetworkPolicyStreamingVideoArgs{...}
type SystemLldpNetworkPolicyStreamingVideoInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyStreamingVideoOutput() SystemLldpNetworkPolicyStreamingVideoOutput
	ToSystemLldpNetworkPolicyStreamingVideoOutputWithContext(context.Context) SystemLldpNetworkPolicyStreamingVideoOutput
}

type SystemLldpNetworkPolicyStreamingVideoArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyStreamingVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyStreamingVideo)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyStreamingVideoArgs) ToSystemLldpNetworkPolicyStreamingVideoOutput() SystemLldpNetworkPolicyStreamingVideoOutput {
	return i.ToSystemLldpNetworkPolicyStreamingVideoOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyStreamingVideoArgs) ToSystemLldpNetworkPolicyStreamingVideoOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyStreamingVideoOutput)
}

func (i SystemLldpNetworkPolicyStreamingVideoArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyStreamingVideo] {
	return pulumix.Output[SystemLldpNetworkPolicyStreamingVideo]{
		OutputState: i.ToSystemLldpNetworkPolicyStreamingVideoOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyStreamingVideoArgs) ToSystemLldpNetworkPolicyStreamingVideoPtrOutput() SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return i.ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyStreamingVideoArgs) ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyStreamingVideoOutput).ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyStreamingVideoPtrInput is an input type that accepts SystemLldpNetworkPolicyStreamingVideoArgs, SystemLldpNetworkPolicyStreamingVideoPtr and SystemLldpNetworkPolicyStreamingVideoPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyStreamingVideoPtrInput` via:
//
//	        SystemLldpNetworkPolicyStreamingVideoArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyStreamingVideoPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyStreamingVideoPtrOutput() SystemLldpNetworkPolicyStreamingVideoPtrOutput
	ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyStreamingVideoPtrOutput
}

type systemLldpNetworkPolicyStreamingVideoPtrType SystemLldpNetworkPolicyStreamingVideoArgs

func SystemLldpNetworkPolicyStreamingVideoPtr(v *SystemLldpNetworkPolicyStreamingVideoArgs) SystemLldpNetworkPolicyStreamingVideoPtrInput {
	return (*systemLldpNetworkPolicyStreamingVideoPtrType)(v)
}

func (*systemLldpNetworkPolicyStreamingVideoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyStreamingVideo)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyStreamingVideoPtrType) ToSystemLldpNetworkPolicyStreamingVideoPtrOutput() SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return i.ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyStreamingVideoPtrType) ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyStreamingVideoPtrOutput)
}

func (i *systemLldpNetworkPolicyStreamingVideoPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyStreamingVideo] {
	return pulumix.Output[*SystemLldpNetworkPolicyStreamingVideo]{
		OutputState: i.ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyStreamingVideoOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyStreamingVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyStreamingVideo)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) ToSystemLldpNetworkPolicyStreamingVideoOutput() SystemLldpNetworkPolicyStreamingVideoOutput {
	return o
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) ToSystemLldpNetworkPolicyStreamingVideoOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoOutput {
	return o
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) ToSystemLldpNetworkPolicyStreamingVideoPtrOutput() SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return o.ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyStreamingVideo) *SystemLldpNetworkPolicyStreamingVideo {
		return &v
	}).(SystemLldpNetworkPolicyStreamingVideoPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyStreamingVideo] {
	return pulumix.Output[SystemLldpNetworkPolicyStreamingVideo]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyStreamingVideo) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyStreamingVideo) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyStreamingVideo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyStreamingVideo) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyStreamingVideo) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyStreamingVideoPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyStreamingVideoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyStreamingVideo)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) ToSystemLldpNetworkPolicyStreamingVideoPtrOutput() SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) ToSystemLldpNetworkPolicyStreamingVideoPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyStreamingVideoPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyStreamingVideo] {
	return pulumix.Output[*SystemLldpNetworkPolicyStreamingVideo]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Elem() SystemLldpNetworkPolicyStreamingVideoOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) SystemLldpNetworkPolicyStreamingVideo {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyStreamingVideo
		return ret
	}).(SystemLldpNetworkPolicyStreamingVideoOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyStreamingVideoPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyStreamingVideo) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVideoConferencing struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyVideoConferencingInput is an input type that accepts SystemLldpNetworkPolicyVideoConferencingArgs and SystemLldpNetworkPolicyVideoConferencingOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVideoConferencingInput` via:
//
//	SystemLldpNetworkPolicyVideoConferencingArgs{...}
type SystemLldpNetworkPolicyVideoConferencingInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVideoConferencingOutput() SystemLldpNetworkPolicyVideoConferencingOutput
	ToSystemLldpNetworkPolicyVideoConferencingOutputWithContext(context.Context) SystemLldpNetworkPolicyVideoConferencingOutput
}

type SystemLldpNetworkPolicyVideoConferencingArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyVideoConferencingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVideoConferencing)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyVideoConferencingArgs) ToSystemLldpNetworkPolicyVideoConferencingOutput() SystemLldpNetworkPolicyVideoConferencingOutput {
	return i.ToSystemLldpNetworkPolicyVideoConferencingOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVideoConferencingArgs) ToSystemLldpNetworkPolicyVideoConferencingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoConferencingOutput)
}

func (i SystemLldpNetworkPolicyVideoConferencingArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVideoConferencing] {
	return pulumix.Output[SystemLldpNetworkPolicyVideoConferencing]{
		OutputState: i.ToSystemLldpNetworkPolicyVideoConferencingOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyVideoConferencingArgs) ToSystemLldpNetworkPolicyVideoConferencingPtrOutput() SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVideoConferencingArgs) ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoConferencingOutput).ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyVideoConferencingPtrInput is an input type that accepts SystemLldpNetworkPolicyVideoConferencingArgs, SystemLldpNetworkPolicyVideoConferencingPtr and SystemLldpNetworkPolicyVideoConferencingPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVideoConferencingPtrInput` via:
//
//	        SystemLldpNetworkPolicyVideoConferencingArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyVideoConferencingPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVideoConferencingPtrOutput() SystemLldpNetworkPolicyVideoConferencingPtrOutput
	ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyVideoConferencingPtrOutput
}

type systemLldpNetworkPolicyVideoConferencingPtrType SystemLldpNetworkPolicyVideoConferencingArgs

func SystemLldpNetworkPolicyVideoConferencingPtr(v *SystemLldpNetworkPolicyVideoConferencingArgs) SystemLldpNetworkPolicyVideoConferencingPtrInput {
	return (*systemLldpNetworkPolicyVideoConferencingPtrType)(v)
}

func (*systemLldpNetworkPolicyVideoConferencingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVideoConferencing)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyVideoConferencingPtrType) ToSystemLldpNetworkPolicyVideoConferencingPtrOutput() SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyVideoConferencingPtrType) ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoConferencingPtrOutput)
}

func (i *systemLldpNetworkPolicyVideoConferencingPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVideoConferencing] {
	return pulumix.Output[*SystemLldpNetworkPolicyVideoConferencing]{
		OutputState: i.ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyVideoConferencingOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVideoConferencingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVideoConferencing)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) ToSystemLldpNetworkPolicyVideoConferencingOutput() SystemLldpNetworkPolicyVideoConferencingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) ToSystemLldpNetworkPolicyVideoConferencingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) ToSystemLldpNetworkPolicyVideoConferencingPtrOutput() SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return o.ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyVideoConferencing) *SystemLldpNetworkPolicyVideoConferencing {
		return &v
	}).(SystemLldpNetworkPolicyVideoConferencingPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVideoConferencing] {
	return pulumix.Output[SystemLldpNetworkPolicyVideoConferencing]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoConferencing) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoConferencing) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoConferencing) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoConferencing) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoConferencing) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVideoConferencingPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVideoConferencingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVideoConferencing)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) ToSystemLldpNetworkPolicyVideoConferencingPtrOutput() SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) ToSystemLldpNetworkPolicyVideoConferencingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoConferencingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVideoConferencing] {
	return pulumix.Output[*SystemLldpNetworkPolicyVideoConferencing]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Elem() SystemLldpNetworkPolicyVideoConferencingOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) SystemLldpNetworkPolicyVideoConferencing {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyVideoConferencing
		return ret
	}).(SystemLldpNetworkPolicyVideoConferencingOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoConferencingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoConferencing) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVideoSignaling struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyVideoSignalingInput is an input type that accepts SystemLldpNetworkPolicyVideoSignalingArgs and SystemLldpNetworkPolicyVideoSignalingOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVideoSignalingInput` via:
//
//	SystemLldpNetworkPolicyVideoSignalingArgs{...}
type SystemLldpNetworkPolicyVideoSignalingInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVideoSignalingOutput() SystemLldpNetworkPolicyVideoSignalingOutput
	ToSystemLldpNetworkPolicyVideoSignalingOutputWithContext(context.Context) SystemLldpNetworkPolicyVideoSignalingOutput
}

type SystemLldpNetworkPolicyVideoSignalingArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyVideoSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVideoSignaling)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyVideoSignalingArgs) ToSystemLldpNetworkPolicyVideoSignalingOutput() SystemLldpNetworkPolicyVideoSignalingOutput {
	return i.ToSystemLldpNetworkPolicyVideoSignalingOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVideoSignalingArgs) ToSystemLldpNetworkPolicyVideoSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoSignalingOutput)
}

func (i SystemLldpNetworkPolicyVideoSignalingArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVideoSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyVideoSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyVideoSignalingOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyVideoSignalingArgs) ToSystemLldpNetworkPolicyVideoSignalingPtrOutput() SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVideoSignalingArgs) ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoSignalingOutput).ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyVideoSignalingPtrInput is an input type that accepts SystemLldpNetworkPolicyVideoSignalingArgs, SystemLldpNetworkPolicyVideoSignalingPtr and SystemLldpNetworkPolicyVideoSignalingPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVideoSignalingPtrInput` via:
//
//	        SystemLldpNetworkPolicyVideoSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyVideoSignalingPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVideoSignalingPtrOutput() SystemLldpNetworkPolicyVideoSignalingPtrOutput
	ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyVideoSignalingPtrOutput
}

type systemLldpNetworkPolicyVideoSignalingPtrType SystemLldpNetworkPolicyVideoSignalingArgs

func SystemLldpNetworkPolicyVideoSignalingPtr(v *SystemLldpNetworkPolicyVideoSignalingArgs) SystemLldpNetworkPolicyVideoSignalingPtrInput {
	return (*systemLldpNetworkPolicyVideoSignalingPtrType)(v)
}

func (*systemLldpNetworkPolicyVideoSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVideoSignaling)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyVideoSignalingPtrType) ToSystemLldpNetworkPolicyVideoSignalingPtrOutput() SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyVideoSignalingPtrType) ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVideoSignalingPtrOutput)
}

func (i *systemLldpNetworkPolicyVideoSignalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVideoSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyVideoSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyVideoSignalingOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVideoSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVideoSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) ToSystemLldpNetworkPolicyVideoSignalingOutput() SystemLldpNetworkPolicyVideoSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) ToSystemLldpNetworkPolicyVideoSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) ToSystemLldpNetworkPolicyVideoSignalingPtrOutput() SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return o.ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyVideoSignaling) *SystemLldpNetworkPolicyVideoSignaling {
		return &v
	}).(SystemLldpNetworkPolicyVideoSignalingPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVideoSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyVideoSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVideoSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVideoSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVideoSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVideoSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) ToSystemLldpNetworkPolicyVideoSignalingPtrOutput() SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) ToSystemLldpNetworkPolicyVideoSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVideoSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVideoSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyVideoSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Elem() SystemLldpNetworkPolicyVideoSignalingOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) SystemLldpNetworkPolicyVideoSignaling {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyVideoSignaling
		return ret
	}).(SystemLldpNetworkPolicyVideoSignalingOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVideoSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVideoSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVoice struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyVoiceInput is an input type that accepts SystemLldpNetworkPolicyVoiceArgs and SystemLldpNetworkPolicyVoiceOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVoiceInput` via:
//
//	SystemLldpNetworkPolicyVoiceArgs{...}
type SystemLldpNetworkPolicyVoiceInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVoiceOutput() SystemLldpNetworkPolicyVoiceOutput
	ToSystemLldpNetworkPolicyVoiceOutputWithContext(context.Context) SystemLldpNetworkPolicyVoiceOutput
}

type SystemLldpNetworkPolicyVoiceArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyVoiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVoice)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyVoiceArgs) ToSystemLldpNetworkPolicyVoiceOutput() SystemLldpNetworkPolicyVoiceOutput {
	return i.ToSystemLldpNetworkPolicyVoiceOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVoiceArgs) ToSystemLldpNetworkPolicyVoiceOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoiceOutput)
}

func (i SystemLldpNetworkPolicyVoiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVoice] {
	return pulumix.Output[SystemLldpNetworkPolicyVoice]{
		OutputState: i.ToSystemLldpNetworkPolicyVoiceOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyVoiceArgs) ToSystemLldpNetworkPolicyVoicePtrOutput() SystemLldpNetworkPolicyVoicePtrOutput {
	return i.ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVoiceArgs) ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoiceOutput).ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyVoicePtrInput is an input type that accepts SystemLldpNetworkPolicyVoiceArgs, SystemLldpNetworkPolicyVoicePtr and SystemLldpNetworkPolicyVoicePtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVoicePtrInput` via:
//
//	        SystemLldpNetworkPolicyVoiceArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyVoicePtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVoicePtrOutput() SystemLldpNetworkPolicyVoicePtrOutput
	ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(context.Context) SystemLldpNetworkPolicyVoicePtrOutput
}

type systemLldpNetworkPolicyVoicePtrType SystemLldpNetworkPolicyVoiceArgs

func SystemLldpNetworkPolicyVoicePtr(v *SystemLldpNetworkPolicyVoiceArgs) SystemLldpNetworkPolicyVoicePtrInput {
	return (*systemLldpNetworkPolicyVoicePtrType)(v)
}

func (*systemLldpNetworkPolicyVoicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVoice)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyVoicePtrType) ToSystemLldpNetworkPolicyVoicePtrOutput() SystemLldpNetworkPolicyVoicePtrOutput {
	return i.ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyVoicePtrType) ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoicePtrOutput)
}

func (i *systemLldpNetworkPolicyVoicePtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVoice] {
	return pulumix.Output[*SystemLldpNetworkPolicyVoice]{
		OutputState: i.ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyVoiceOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVoiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVoice)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVoiceOutput) ToSystemLldpNetworkPolicyVoiceOutput() SystemLldpNetworkPolicyVoiceOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceOutput) ToSystemLldpNetworkPolicyVoiceOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceOutput) ToSystemLldpNetworkPolicyVoicePtrOutput() SystemLldpNetworkPolicyVoicePtrOutput {
	return o.ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyVoiceOutput) ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyVoice) *SystemLldpNetworkPolicyVoice {
		return &v
	}).(SystemLldpNetworkPolicyVoicePtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVoice] {
	return pulumix.Output[SystemLldpNetworkPolicyVoice]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVoiceOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoice) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoice) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoice) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoice) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoice) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVoicePtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVoicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVoice)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) ToSystemLldpNetworkPolicyVoicePtrOutput() SystemLldpNetworkPolicyVoicePtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) ToSystemLldpNetworkPolicyVoicePtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoicePtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVoice] {
	return pulumix.Output[*SystemLldpNetworkPolicyVoice]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Elem() SystemLldpNetworkPolicyVoiceOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) SystemLldpNetworkPolicyVoice {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyVoice
		return ret
	}).(SystemLldpNetworkPolicyVoiceOutput)
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoicePtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoice) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVoiceSignaling struct {
	Dscp     *int    `pulumi:"dscp"`
	Priority *int    `pulumi:"priority"`
	Status   *string `pulumi:"status"`
	Tag      *string `pulumi:"tag"`
	Vlan     *int    `pulumi:"vlan"`
}

// SystemLldpNetworkPolicyVoiceSignalingInput is an input type that accepts SystemLldpNetworkPolicyVoiceSignalingArgs and SystemLldpNetworkPolicyVoiceSignalingOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVoiceSignalingInput` via:
//
//	SystemLldpNetworkPolicyVoiceSignalingArgs{...}
type SystemLldpNetworkPolicyVoiceSignalingInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVoiceSignalingOutput() SystemLldpNetworkPolicyVoiceSignalingOutput
	ToSystemLldpNetworkPolicyVoiceSignalingOutputWithContext(context.Context) SystemLldpNetworkPolicyVoiceSignalingOutput
}

type SystemLldpNetworkPolicyVoiceSignalingArgs struct {
	Dscp     pulumi.IntPtrInput    `pulumi:"dscp"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Tag      pulumi.StringPtrInput `pulumi:"tag"`
	Vlan     pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (SystemLldpNetworkPolicyVoiceSignalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVoiceSignaling)(nil)).Elem()
}

func (i SystemLldpNetworkPolicyVoiceSignalingArgs) ToSystemLldpNetworkPolicyVoiceSignalingOutput() SystemLldpNetworkPolicyVoiceSignalingOutput {
	return i.ToSystemLldpNetworkPolicyVoiceSignalingOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVoiceSignalingArgs) ToSystemLldpNetworkPolicyVoiceSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoiceSignalingOutput)
}

func (i SystemLldpNetworkPolicyVoiceSignalingArgs) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVoiceSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyVoiceSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyVoiceSignalingOutputWithContext(ctx).OutputState,
	}
}

func (i SystemLldpNetworkPolicyVoiceSignalingArgs) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutput() SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i SystemLldpNetworkPolicyVoiceSignalingArgs) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoiceSignalingOutput).ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx)
}

// SystemLldpNetworkPolicyVoiceSignalingPtrInput is an input type that accepts SystemLldpNetworkPolicyVoiceSignalingArgs, SystemLldpNetworkPolicyVoiceSignalingPtr and SystemLldpNetworkPolicyVoiceSignalingPtrOutput values.
// You can construct a concrete instance of `SystemLldpNetworkPolicyVoiceSignalingPtrInput` via:
//
//	        SystemLldpNetworkPolicyVoiceSignalingArgs{...}
//
//	or:
//
//	        nil
type SystemLldpNetworkPolicyVoiceSignalingPtrInput interface {
	pulumi.Input

	ToSystemLldpNetworkPolicyVoiceSignalingPtrOutput() SystemLldpNetworkPolicyVoiceSignalingPtrOutput
	ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(context.Context) SystemLldpNetworkPolicyVoiceSignalingPtrOutput
}

type systemLldpNetworkPolicyVoiceSignalingPtrType SystemLldpNetworkPolicyVoiceSignalingArgs

func SystemLldpNetworkPolicyVoiceSignalingPtr(v *SystemLldpNetworkPolicyVoiceSignalingArgs) SystemLldpNetworkPolicyVoiceSignalingPtrInput {
	return (*systemLldpNetworkPolicyVoiceSignalingPtrType)(v)
}

func (*systemLldpNetworkPolicyVoiceSignalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVoiceSignaling)(nil)).Elem()
}

func (i *systemLldpNetworkPolicyVoiceSignalingPtrType) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutput() SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return i.ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (i *systemLldpNetworkPolicyVoiceSignalingPtrType) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemLldpNetworkPolicyVoiceSignalingPtrOutput)
}

func (i *systemLldpNetworkPolicyVoiceSignalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVoiceSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyVoiceSignaling]{
		OutputState: i.ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemLldpNetworkPolicyVoiceSignalingOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVoiceSignalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemLldpNetworkPolicyVoiceSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) ToSystemLldpNetworkPolicyVoiceSignalingOutput() SystemLldpNetworkPolicyVoiceSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) ToSystemLldpNetworkPolicyVoiceSignalingOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutput() SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return o.ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(context.Background())
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemLldpNetworkPolicyVoiceSignaling) *SystemLldpNetworkPolicyVoiceSignaling {
		return &v
	}).(SystemLldpNetworkPolicyVoiceSignalingPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) ToOutput(ctx context.Context) pulumix.Output[SystemLldpNetworkPolicyVoiceSignaling] {
	return pulumix.Output[SystemLldpNetworkPolicyVoiceSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoiceSignaling) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoiceSignaling) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoiceSignaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoiceSignaling) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemLldpNetworkPolicyVoiceSignaling) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SystemLldpNetworkPolicyVoiceSignalingPtrOutput struct{ *pulumi.OutputState }

func (SystemLldpNetworkPolicyVoiceSignalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemLldpNetworkPolicyVoiceSignaling)(nil)).Elem()
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutput() SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) ToSystemLldpNetworkPolicyVoiceSignalingPtrOutputWithContext(ctx context.Context) SystemLldpNetworkPolicyVoiceSignalingPtrOutput {
	return o
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemLldpNetworkPolicyVoiceSignaling] {
	return pulumix.Output[*SystemLldpNetworkPolicyVoiceSignaling]{
		OutputState: o.OutputState,
	}
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Elem() SystemLldpNetworkPolicyVoiceSignalingOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) SystemLldpNetworkPolicyVoiceSignaling {
		if v != nil {
			return *v
		}
		var ret SystemLldpNetworkPolicyVoiceSignaling
		return ret
	}).(SystemLldpNetworkPolicyVoiceSignalingOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Dscp
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

func (o SystemLldpNetworkPolicyVoiceSignalingPtrOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemLldpNetworkPolicyVoiceSignaling) *int {
		if v == nil {
			return nil
		}
		return v.Vlan
	}).(pulumi.IntPtrOutput)
}

type SystemMobileTunnelNetwork struct {
	Id        *int    `pulumi:"id"`
	Interface *string `pulumi:"interface"`
	Prefix    *string `pulumi:"prefix"`
}

// SystemMobileTunnelNetworkInput is an input type that accepts SystemMobileTunnelNetworkArgs and SystemMobileTunnelNetworkOutput values.
// You can construct a concrete instance of `SystemMobileTunnelNetworkInput` via:
//
//	SystemMobileTunnelNetworkArgs{...}
type SystemMobileTunnelNetworkInput interface {
	pulumi.Input

	ToSystemMobileTunnelNetworkOutput() SystemMobileTunnelNetworkOutput
	ToSystemMobileTunnelNetworkOutputWithContext(context.Context) SystemMobileTunnelNetworkOutput
}

type SystemMobileTunnelNetworkArgs struct {
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	Prefix    pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SystemMobileTunnelNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemMobileTunnelNetwork)(nil)).Elem()
}

func (i SystemMobileTunnelNetworkArgs) ToSystemMobileTunnelNetworkOutput() SystemMobileTunnelNetworkOutput {
	return i.ToSystemMobileTunnelNetworkOutputWithContext(context.Background())
}

func (i SystemMobileTunnelNetworkArgs) ToSystemMobileTunnelNetworkOutputWithContext(ctx context.Context) SystemMobileTunnelNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobileTunnelNetworkOutput)
}

func (i SystemMobileTunnelNetworkArgs) ToOutput(ctx context.Context) pulumix.Output[SystemMobileTunnelNetwork] {
	return pulumix.Output[SystemMobileTunnelNetwork]{
		OutputState: i.ToSystemMobileTunnelNetworkOutputWithContext(ctx).OutputState,
	}
}

// SystemMobileTunnelNetworkArrayInput is an input type that accepts SystemMobileTunnelNetworkArray and SystemMobileTunnelNetworkArrayOutput values.
// You can construct a concrete instance of `SystemMobileTunnelNetworkArrayInput` via:
//
//	SystemMobileTunnelNetworkArray{ SystemMobileTunnelNetworkArgs{...} }
type SystemMobileTunnelNetworkArrayInput interface {
	pulumi.Input

	ToSystemMobileTunnelNetworkArrayOutput() SystemMobileTunnelNetworkArrayOutput
	ToSystemMobileTunnelNetworkArrayOutputWithContext(context.Context) SystemMobileTunnelNetworkArrayOutput
}

type SystemMobileTunnelNetworkArray []SystemMobileTunnelNetworkInput

func (SystemMobileTunnelNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemMobileTunnelNetwork)(nil)).Elem()
}

func (i SystemMobileTunnelNetworkArray) ToSystemMobileTunnelNetworkArrayOutput() SystemMobileTunnelNetworkArrayOutput {
	return i.ToSystemMobileTunnelNetworkArrayOutputWithContext(context.Background())
}

func (i SystemMobileTunnelNetworkArray) ToSystemMobileTunnelNetworkArrayOutputWithContext(ctx context.Context) SystemMobileTunnelNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobileTunnelNetworkArrayOutput)
}

func (i SystemMobileTunnelNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemMobileTunnelNetwork] {
	return pulumix.Output[[]SystemMobileTunnelNetwork]{
		OutputState: i.ToSystemMobileTunnelNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemMobileTunnelNetworkOutput struct{ *pulumi.OutputState }

func (SystemMobileTunnelNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemMobileTunnelNetwork)(nil)).Elem()
}

func (o SystemMobileTunnelNetworkOutput) ToSystemMobileTunnelNetworkOutput() SystemMobileTunnelNetworkOutput {
	return o
}

func (o SystemMobileTunnelNetworkOutput) ToSystemMobileTunnelNetworkOutputWithContext(ctx context.Context) SystemMobileTunnelNetworkOutput {
	return o
}

func (o SystemMobileTunnelNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[SystemMobileTunnelNetwork] {
	return pulumix.Output[SystemMobileTunnelNetwork]{
		OutputState: o.OutputState,
	}
}

func (o SystemMobileTunnelNetworkOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemMobileTunnelNetwork) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemMobileTunnelNetworkOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemMobileTunnelNetwork) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemMobileTunnelNetworkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemMobileTunnelNetwork) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SystemMobileTunnelNetworkArrayOutput struct{ *pulumi.OutputState }

func (SystemMobileTunnelNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemMobileTunnelNetwork)(nil)).Elem()
}

func (o SystemMobileTunnelNetworkArrayOutput) ToSystemMobileTunnelNetworkArrayOutput() SystemMobileTunnelNetworkArrayOutput {
	return o
}

func (o SystemMobileTunnelNetworkArrayOutput) ToSystemMobileTunnelNetworkArrayOutputWithContext(ctx context.Context) SystemMobileTunnelNetworkArrayOutput {
	return o
}

func (o SystemMobileTunnelNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemMobileTunnelNetwork] {
	return pulumix.Output[[]SystemMobileTunnelNetwork]{
		OutputState: o.OutputState,
	}
}

func (o SystemMobileTunnelNetworkArrayOutput) Index(i pulumi.IntInput) SystemMobileTunnelNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemMobileTunnelNetwork {
		return vs[0].([]SystemMobileTunnelNetwork)[vs[1].(int)]
	}).(SystemMobileTunnelNetworkOutput)
}

type SystemNat64SecondaryPrefix struct {
	Name        *string `pulumi:"name"`
	Nat64Prefix *string `pulumi:"nat64Prefix"`
}

// SystemNat64SecondaryPrefixInput is an input type that accepts SystemNat64SecondaryPrefixArgs and SystemNat64SecondaryPrefixOutput values.
// You can construct a concrete instance of `SystemNat64SecondaryPrefixInput` via:
//
//	SystemNat64SecondaryPrefixArgs{...}
type SystemNat64SecondaryPrefixInput interface {
	pulumi.Input

	ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput
	ToSystemNat64SecondaryPrefixOutputWithContext(context.Context) SystemNat64SecondaryPrefixOutput
}

type SystemNat64SecondaryPrefixArgs struct {
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Nat64Prefix pulumi.StringPtrInput `pulumi:"nat64Prefix"`
}

func (SystemNat64SecondaryPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (i SystemNat64SecondaryPrefixArgs) ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput {
	return i.ToSystemNat64SecondaryPrefixOutputWithContext(context.Background())
}

func (i SystemNat64SecondaryPrefixArgs) ToSystemNat64SecondaryPrefixOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNat64SecondaryPrefixOutput)
}

func (i SystemNat64SecondaryPrefixArgs) ToOutput(ctx context.Context) pulumix.Output[SystemNat64SecondaryPrefix] {
	return pulumix.Output[SystemNat64SecondaryPrefix]{
		OutputState: i.ToSystemNat64SecondaryPrefixOutputWithContext(ctx).OutputState,
	}
}

// SystemNat64SecondaryPrefixArrayInput is an input type that accepts SystemNat64SecondaryPrefixArray and SystemNat64SecondaryPrefixArrayOutput values.
// You can construct a concrete instance of `SystemNat64SecondaryPrefixArrayInput` via:
//
//	SystemNat64SecondaryPrefixArray{ SystemNat64SecondaryPrefixArgs{...} }
type SystemNat64SecondaryPrefixArrayInput interface {
	pulumi.Input

	ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput
	ToSystemNat64SecondaryPrefixArrayOutputWithContext(context.Context) SystemNat64SecondaryPrefixArrayOutput
}

type SystemNat64SecondaryPrefixArray []SystemNat64SecondaryPrefixInput

func (SystemNat64SecondaryPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (i SystemNat64SecondaryPrefixArray) ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput {
	return i.ToSystemNat64SecondaryPrefixArrayOutputWithContext(context.Background())
}

func (i SystemNat64SecondaryPrefixArray) ToSystemNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNat64SecondaryPrefixArrayOutput)
}

func (i SystemNat64SecondaryPrefixArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemNat64SecondaryPrefix] {
	return pulumix.Output[[]SystemNat64SecondaryPrefix]{
		OutputState: i.ToSystemNat64SecondaryPrefixArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemNat64SecondaryPrefixOutput struct{ *pulumi.OutputState }

func (SystemNat64SecondaryPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (o SystemNat64SecondaryPrefixOutput) ToSystemNat64SecondaryPrefixOutput() SystemNat64SecondaryPrefixOutput {
	return o
}

func (o SystemNat64SecondaryPrefixOutput) ToSystemNat64SecondaryPrefixOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixOutput {
	return o
}

func (o SystemNat64SecondaryPrefixOutput) ToOutput(ctx context.Context) pulumix.Output[SystemNat64SecondaryPrefix] {
	return pulumix.Output[SystemNat64SecondaryPrefix]{
		OutputState: o.OutputState,
	}
}

func (o SystemNat64SecondaryPrefixOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNat64SecondaryPrefix) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemNat64SecondaryPrefixOutput) Nat64Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNat64SecondaryPrefix) *string { return v.Nat64Prefix }).(pulumi.StringPtrOutput)
}

type SystemNat64SecondaryPrefixArrayOutput struct{ *pulumi.OutputState }

func (SystemNat64SecondaryPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNat64SecondaryPrefix)(nil)).Elem()
}

func (o SystemNat64SecondaryPrefixArrayOutput) ToSystemNat64SecondaryPrefixArrayOutput() SystemNat64SecondaryPrefixArrayOutput {
	return o
}

func (o SystemNat64SecondaryPrefixArrayOutput) ToSystemNat64SecondaryPrefixArrayOutputWithContext(ctx context.Context) SystemNat64SecondaryPrefixArrayOutput {
	return o
}

func (o SystemNat64SecondaryPrefixArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemNat64SecondaryPrefix] {
	return pulumix.Output[[]SystemNat64SecondaryPrefix]{
		OutputState: o.OutputState,
	}
}

func (o SystemNat64SecondaryPrefixArrayOutput) Index(i pulumi.IntInput) SystemNat64SecondaryPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNat64SecondaryPrefix {
		return vs[0].([]SystemNat64SecondaryPrefix)[vs[1].(int)]
	}).(SystemNat64SecondaryPrefixOutput)
}

type SystemNdProxyMember struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemNdProxyMemberInput is an input type that accepts SystemNdProxyMemberArgs and SystemNdProxyMemberOutput values.
// You can construct a concrete instance of `SystemNdProxyMemberInput` via:
//
//	SystemNdProxyMemberArgs{...}
type SystemNdProxyMemberInput interface {
	pulumi.Input

	ToSystemNdProxyMemberOutput() SystemNdProxyMemberOutput
	ToSystemNdProxyMemberOutputWithContext(context.Context) SystemNdProxyMemberOutput
}

type SystemNdProxyMemberArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemNdProxyMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNdProxyMember)(nil)).Elem()
}

func (i SystemNdProxyMemberArgs) ToSystemNdProxyMemberOutput() SystemNdProxyMemberOutput {
	return i.ToSystemNdProxyMemberOutputWithContext(context.Background())
}

func (i SystemNdProxyMemberArgs) ToSystemNdProxyMemberOutputWithContext(ctx context.Context) SystemNdProxyMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdProxyMemberOutput)
}

func (i SystemNdProxyMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemNdProxyMember] {
	return pulumix.Output[SystemNdProxyMember]{
		OutputState: i.ToSystemNdProxyMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemNdProxyMemberArrayInput is an input type that accepts SystemNdProxyMemberArray and SystemNdProxyMemberArrayOutput values.
// You can construct a concrete instance of `SystemNdProxyMemberArrayInput` via:
//
//	SystemNdProxyMemberArray{ SystemNdProxyMemberArgs{...} }
type SystemNdProxyMemberArrayInput interface {
	pulumi.Input

	ToSystemNdProxyMemberArrayOutput() SystemNdProxyMemberArrayOutput
	ToSystemNdProxyMemberArrayOutputWithContext(context.Context) SystemNdProxyMemberArrayOutput
}

type SystemNdProxyMemberArray []SystemNdProxyMemberInput

func (SystemNdProxyMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNdProxyMember)(nil)).Elem()
}

func (i SystemNdProxyMemberArray) ToSystemNdProxyMemberArrayOutput() SystemNdProxyMemberArrayOutput {
	return i.ToSystemNdProxyMemberArrayOutputWithContext(context.Background())
}

func (i SystemNdProxyMemberArray) ToSystemNdProxyMemberArrayOutputWithContext(ctx context.Context) SystemNdProxyMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNdProxyMemberArrayOutput)
}

func (i SystemNdProxyMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemNdProxyMember] {
	return pulumix.Output[[]SystemNdProxyMember]{
		OutputState: i.ToSystemNdProxyMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemNdProxyMemberOutput struct{ *pulumi.OutputState }

func (SystemNdProxyMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNdProxyMember)(nil)).Elem()
}

func (o SystemNdProxyMemberOutput) ToSystemNdProxyMemberOutput() SystemNdProxyMemberOutput {
	return o
}

func (o SystemNdProxyMemberOutput) ToSystemNdProxyMemberOutputWithContext(ctx context.Context) SystemNdProxyMemberOutput {
	return o
}

func (o SystemNdProxyMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemNdProxyMember] {
	return pulumix.Output[SystemNdProxyMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemNdProxyMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNdProxyMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemNdProxyMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemNdProxyMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNdProxyMember)(nil)).Elem()
}

func (o SystemNdProxyMemberArrayOutput) ToSystemNdProxyMemberArrayOutput() SystemNdProxyMemberArrayOutput {
	return o
}

func (o SystemNdProxyMemberArrayOutput) ToSystemNdProxyMemberArrayOutputWithContext(ctx context.Context) SystemNdProxyMemberArrayOutput {
	return o
}

func (o SystemNdProxyMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemNdProxyMember] {
	return pulumix.Output[[]SystemNdProxyMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemNdProxyMemberArrayOutput) Index(i pulumi.IntInput) SystemNdProxyMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNdProxyMember {
		return vs[0].([]SystemNdProxyMember)[vs[1].(int)]
	}).(SystemNdProxyMemberOutput)
}

type SystemNpuPriorityProtocol struct {
	Bfd  *string `pulumi:"bfd"`
	Bgp  *string `pulumi:"bgp"`
	Slbc *string `pulumi:"slbc"`
}

// SystemNpuPriorityProtocolInput is an input type that accepts SystemNpuPriorityProtocolArgs and SystemNpuPriorityProtocolOutput values.
// You can construct a concrete instance of `SystemNpuPriorityProtocolInput` via:
//
//	SystemNpuPriorityProtocolArgs{...}
type SystemNpuPriorityProtocolInput interface {
	pulumi.Input

	ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput
	ToSystemNpuPriorityProtocolOutputWithContext(context.Context) SystemNpuPriorityProtocolOutput
}

type SystemNpuPriorityProtocolArgs struct {
	Bfd  pulumi.StringPtrInput `pulumi:"bfd"`
	Bgp  pulumi.StringPtrInput `pulumi:"bgp"`
	Slbc pulumi.StringPtrInput `pulumi:"slbc"`
}

func (SystemNpuPriorityProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNpuPriorityProtocol)(nil)).Elem()
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput {
	return i.ToSystemNpuPriorityProtocolOutputWithContext(context.Background())
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolOutput)
}

func (i SystemNpuPriorityProtocolArgs) ToOutput(ctx context.Context) pulumix.Output[SystemNpuPriorityProtocol] {
	return pulumix.Output[SystemNpuPriorityProtocol]{
		OutputState: i.ToSystemNpuPriorityProtocolOutputWithContext(ctx).OutputState,
	}
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return i.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i SystemNpuPriorityProtocolArgs) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolOutput).ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx)
}

// SystemNpuPriorityProtocolPtrInput is an input type that accepts SystemNpuPriorityProtocolArgs, SystemNpuPriorityProtocolPtr and SystemNpuPriorityProtocolPtrOutput values.
// You can construct a concrete instance of `SystemNpuPriorityProtocolPtrInput` via:
//
//	        SystemNpuPriorityProtocolArgs{...}
//
//	or:
//
//	        nil
type SystemNpuPriorityProtocolPtrInput interface {
	pulumi.Input

	ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput
	ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Context) SystemNpuPriorityProtocolPtrOutput
}

type systemNpuPriorityProtocolPtrType SystemNpuPriorityProtocolArgs

func SystemNpuPriorityProtocolPtr(v *SystemNpuPriorityProtocolArgs) SystemNpuPriorityProtocolPtrInput {
	return (*systemNpuPriorityProtocolPtrType)(v)
}

func (*systemNpuPriorityProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpuPriorityProtocol)(nil)).Elem()
}

func (i *systemNpuPriorityProtocolPtrType) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return i.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (i *systemNpuPriorityProtocolPtrType) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNpuPriorityProtocolPtrOutput)
}

func (i *systemNpuPriorityProtocolPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemNpuPriorityProtocol] {
	return pulumix.Output[*SystemNpuPriorityProtocol]{
		OutputState: i.ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemNpuPriorityProtocolOutput struct{ *pulumi.OutputState }

func (SystemNpuPriorityProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNpuPriorityProtocol)(nil)).Elem()
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolOutput() SystemNpuPriorityProtocolOutput {
	return o
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolOutput {
	return o
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return o.ToSystemNpuPriorityProtocolPtrOutputWithContext(context.Background())
}

func (o SystemNpuPriorityProtocolOutput) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemNpuPriorityProtocol) *SystemNpuPriorityProtocol {
		return &v
	}).(SystemNpuPriorityProtocolPtrOutput)
}

func (o SystemNpuPriorityProtocolOutput) ToOutput(ctx context.Context) pulumix.Output[SystemNpuPriorityProtocol] {
	return pulumix.Output[SystemNpuPriorityProtocol]{
		OutputState: o.OutputState,
	}
}

func (o SystemNpuPriorityProtocolOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Bfd }).(pulumi.StringPtrOutput)
}

func (o SystemNpuPriorityProtocolOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Bgp }).(pulumi.StringPtrOutput)
}

func (o SystemNpuPriorityProtocolOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNpuPriorityProtocol) *string { return v.Slbc }).(pulumi.StringPtrOutput)
}

type SystemNpuPriorityProtocolPtrOutput struct{ *pulumi.OutputState }

func (SystemNpuPriorityProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNpuPriorityProtocol)(nil)).Elem()
}

func (o SystemNpuPriorityProtocolPtrOutput) ToSystemNpuPriorityProtocolPtrOutput() SystemNpuPriorityProtocolPtrOutput {
	return o
}

func (o SystemNpuPriorityProtocolPtrOutput) ToSystemNpuPriorityProtocolPtrOutputWithContext(ctx context.Context) SystemNpuPriorityProtocolPtrOutput {
	return o
}

func (o SystemNpuPriorityProtocolPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemNpuPriorityProtocol] {
	return pulumix.Output[*SystemNpuPriorityProtocol]{
		OutputState: o.OutputState,
	}
}

func (o SystemNpuPriorityProtocolPtrOutput) Elem() SystemNpuPriorityProtocolOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) SystemNpuPriorityProtocol {
		if v != nil {
			return *v
		}
		var ret SystemNpuPriorityProtocol
		return ret
	}).(SystemNpuPriorityProtocolOutput)
}

func (o SystemNpuPriorityProtocolPtrOutput) Bfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bfd
	}).(pulumi.StringPtrOutput)
}

func (o SystemNpuPriorityProtocolPtrOutput) Bgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Bgp
	}).(pulumi.StringPtrOutput)
}

func (o SystemNpuPriorityProtocolPtrOutput) Slbc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNpuPriorityProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Slbc
	}).(pulumi.StringPtrOutput)
}

type SystemNtpInterface struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemNtpInterfaceInput is an input type that accepts SystemNtpInterfaceArgs and SystemNtpInterfaceOutput values.
// You can construct a concrete instance of `SystemNtpInterfaceInput` via:
//
//	SystemNtpInterfaceArgs{...}
type SystemNtpInterfaceInput interface {
	pulumi.Input

	ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput
	ToSystemNtpInterfaceOutputWithContext(context.Context) SystemNtpInterfaceOutput
}

type SystemNtpInterfaceArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemNtpInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpInterface)(nil)).Elem()
}

func (i SystemNtpInterfaceArgs) ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput {
	return i.ToSystemNtpInterfaceOutputWithContext(context.Background())
}

func (i SystemNtpInterfaceArgs) ToSystemNtpInterfaceOutputWithContext(ctx context.Context) SystemNtpInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpInterfaceOutput)
}

func (i SystemNtpInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemNtpInterface] {
	return pulumix.Output[SystemNtpInterface]{
		OutputState: i.ToSystemNtpInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemNtpInterfaceArrayInput is an input type that accepts SystemNtpInterfaceArray and SystemNtpInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemNtpInterfaceArrayInput` via:
//
//	SystemNtpInterfaceArray{ SystemNtpInterfaceArgs{...} }
type SystemNtpInterfaceArrayInput interface {
	pulumi.Input

	ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput
	ToSystemNtpInterfaceArrayOutputWithContext(context.Context) SystemNtpInterfaceArrayOutput
}

type SystemNtpInterfaceArray []SystemNtpInterfaceInput

func (SystemNtpInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpInterface)(nil)).Elem()
}

func (i SystemNtpInterfaceArray) ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput {
	return i.ToSystemNtpInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemNtpInterfaceArray) ToSystemNtpInterfaceArrayOutputWithContext(ctx context.Context) SystemNtpInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpInterfaceArrayOutput)
}

func (i SystemNtpInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemNtpInterface] {
	return pulumix.Output[[]SystemNtpInterface]{
		OutputState: i.ToSystemNtpInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemNtpInterfaceOutput struct{ *pulumi.OutputState }

func (SystemNtpInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpInterface)(nil)).Elem()
}

func (o SystemNtpInterfaceOutput) ToSystemNtpInterfaceOutput() SystemNtpInterfaceOutput {
	return o
}

func (o SystemNtpInterfaceOutput) ToSystemNtpInterfaceOutputWithContext(ctx context.Context) SystemNtpInterfaceOutput {
	return o
}

func (o SystemNtpInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemNtpInterface] {
	return pulumix.Output[SystemNtpInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemNtpInterfaceOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpInterface) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemNtpInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpInterface)(nil)).Elem()
}

func (o SystemNtpInterfaceArrayOutput) ToSystemNtpInterfaceArrayOutput() SystemNtpInterfaceArrayOutput {
	return o
}

func (o SystemNtpInterfaceArrayOutput) ToSystemNtpInterfaceArrayOutputWithContext(ctx context.Context) SystemNtpInterfaceArrayOutput {
	return o
}

func (o SystemNtpInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemNtpInterface] {
	return pulumix.Output[[]SystemNtpInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemNtpInterfaceArrayOutput) Index(i pulumi.IntInput) SystemNtpInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNtpInterface {
		return vs[0].([]SystemNtpInterface)[vs[1].(int)]
	}).(SystemNtpInterfaceOutput)
}

type SystemNtpNtpserver struct {
	Authentication        *string `pulumi:"authentication"`
	Id                    *int    `pulumi:"id"`
	Interface             *string `pulumi:"interface"`
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	Key                   *string `pulumi:"key"`
	KeyId                 *int    `pulumi:"keyId"`
	Ntpv3                 *string `pulumi:"ntpv3"`
	Server                *string `pulumi:"server"`
}

// SystemNtpNtpserverInput is an input type that accepts SystemNtpNtpserverArgs and SystemNtpNtpserverOutput values.
// You can construct a concrete instance of `SystemNtpNtpserverInput` via:
//
//	SystemNtpNtpserverArgs{...}
type SystemNtpNtpserverInput interface {
	pulumi.Input

	ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput
	ToSystemNtpNtpserverOutputWithContext(context.Context) SystemNtpNtpserverOutput
}

type SystemNtpNtpserverArgs struct {
	Authentication        pulumi.StringPtrInput `pulumi:"authentication"`
	Id                    pulumi.IntPtrInput    `pulumi:"id"`
	Interface             pulumi.StringPtrInput `pulumi:"interface"`
	InterfaceSelectMethod pulumi.StringPtrInput `pulumi:"interfaceSelectMethod"`
	Key                   pulumi.StringPtrInput `pulumi:"key"`
	KeyId                 pulumi.IntPtrInput    `pulumi:"keyId"`
	Ntpv3                 pulumi.StringPtrInput `pulumi:"ntpv3"`
	Server                pulumi.StringPtrInput `pulumi:"server"`
}

func (SystemNtpNtpserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpNtpserver)(nil)).Elem()
}

func (i SystemNtpNtpserverArgs) ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput {
	return i.ToSystemNtpNtpserverOutputWithContext(context.Background())
}

func (i SystemNtpNtpserverArgs) ToSystemNtpNtpserverOutputWithContext(ctx context.Context) SystemNtpNtpserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpNtpserverOutput)
}

func (i SystemNtpNtpserverArgs) ToOutput(ctx context.Context) pulumix.Output[SystemNtpNtpserver] {
	return pulumix.Output[SystemNtpNtpserver]{
		OutputState: i.ToSystemNtpNtpserverOutputWithContext(ctx).OutputState,
	}
}

// SystemNtpNtpserverArrayInput is an input type that accepts SystemNtpNtpserverArray and SystemNtpNtpserverArrayOutput values.
// You can construct a concrete instance of `SystemNtpNtpserverArrayInput` via:
//
//	SystemNtpNtpserverArray{ SystemNtpNtpserverArgs{...} }
type SystemNtpNtpserverArrayInput interface {
	pulumi.Input

	ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput
	ToSystemNtpNtpserverArrayOutputWithContext(context.Context) SystemNtpNtpserverArrayOutput
}

type SystemNtpNtpserverArray []SystemNtpNtpserverInput

func (SystemNtpNtpserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpNtpserver)(nil)).Elem()
}

func (i SystemNtpNtpserverArray) ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput {
	return i.ToSystemNtpNtpserverArrayOutputWithContext(context.Background())
}

func (i SystemNtpNtpserverArray) ToSystemNtpNtpserverArrayOutputWithContext(ctx context.Context) SystemNtpNtpserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpNtpserverArrayOutput)
}

func (i SystemNtpNtpserverArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemNtpNtpserver] {
	return pulumix.Output[[]SystemNtpNtpserver]{
		OutputState: i.ToSystemNtpNtpserverArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemNtpNtpserverOutput struct{ *pulumi.OutputState }

func (SystemNtpNtpserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemNtpNtpserver)(nil)).Elem()
}

func (o SystemNtpNtpserverOutput) ToSystemNtpNtpserverOutput() SystemNtpNtpserverOutput {
	return o
}

func (o SystemNtpNtpserverOutput) ToSystemNtpNtpserverOutputWithContext(ctx context.Context) SystemNtpNtpserverOutput {
	return o
}

func (o SystemNtpNtpserverOutput) ToOutput(ctx context.Context) pulumix.Output[SystemNtpNtpserver] {
	return pulumix.Output[SystemNtpNtpserver]{
		OutputState: o.OutputState,
	}
}

func (o SystemNtpNtpserverOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o SystemNtpNtpserverOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemNtpNtpserverOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemNtpNtpserverOutput) InterfaceSelectMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.InterfaceSelectMethod }).(pulumi.StringPtrOutput)
}

func (o SystemNtpNtpserverOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SystemNtpNtpserverOutput) KeyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *int { return v.KeyId }).(pulumi.IntPtrOutput)
}

func (o SystemNtpNtpserverOutput) Ntpv3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Ntpv3 }).(pulumi.StringPtrOutput)
}

func (o SystemNtpNtpserverOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemNtpNtpserver) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type SystemNtpNtpserverArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpNtpserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemNtpNtpserver)(nil)).Elem()
}

func (o SystemNtpNtpserverArrayOutput) ToSystemNtpNtpserverArrayOutput() SystemNtpNtpserverArrayOutput {
	return o
}

func (o SystemNtpNtpserverArrayOutput) ToSystemNtpNtpserverArrayOutputWithContext(ctx context.Context) SystemNtpNtpserverArrayOutput {
	return o
}

func (o SystemNtpNtpserverArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemNtpNtpserver] {
	return pulumix.Output[[]SystemNtpNtpserver]{
		OutputState: o.OutputState,
	}
}

func (o SystemNtpNtpserverArrayOutput) Index(i pulumi.IntInput) SystemNtpNtpserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemNtpNtpserver {
		return vs[0].([]SystemNtpNtpserver)[vs[1].(int)]
	}).(SystemNtpNtpserverOutput)
}

type SystemObjectTaggingTag struct {
	Name *string `pulumi:"name"`
}

// SystemObjectTaggingTagInput is an input type that accepts SystemObjectTaggingTagArgs and SystemObjectTaggingTagOutput values.
// You can construct a concrete instance of `SystemObjectTaggingTagInput` via:
//
//	SystemObjectTaggingTagArgs{...}
type SystemObjectTaggingTagInput interface {
	pulumi.Input

	ToSystemObjectTaggingTagOutput() SystemObjectTaggingTagOutput
	ToSystemObjectTaggingTagOutputWithContext(context.Context) SystemObjectTaggingTagOutput
}

type SystemObjectTaggingTagArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemObjectTaggingTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemObjectTaggingTag)(nil)).Elem()
}

func (i SystemObjectTaggingTagArgs) ToSystemObjectTaggingTagOutput() SystemObjectTaggingTagOutput {
	return i.ToSystemObjectTaggingTagOutputWithContext(context.Background())
}

func (i SystemObjectTaggingTagArgs) ToSystemObjectTaggingTagOutputWithContext(ctx context.Context) SystemObjectTaggingTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemObjectTaggingTagOutput)
}

func (i SystemObjectTaggingTagArgs) ToOutput(ctx context.Context) pulumix.Output[SystemObjectTaggingTag] {
	return pulumix.Output[SystemObjectTaggingTag]{
		OutputState: i.ToSystemObjectTaggingTagOutputWithContext(ctx).OutputState,
	}
}

// SystemObjectTaggingTagArrayInput is an input type that accepts SystemObjectTaggingTagArray and SystemObjectTaggingTagArrayOutput values.
// You can construct a concrete instance of `SystemObjectTaggingTagArrayInput` via:
//
//	SystemObjectTaggingTagArray{ SystemObjectTaggingTagArgs{...} }
type SystemObjectTaggingTagArrayInput interface {
	pulumi.Input

	ToSystemObjectTaggingTagArrayOutput() SystemObjectTaggingTagArrayOutput
	ToSystemObjectTaggingTagArrayOutputWithContext(context.Context) SystemObjectTaggingTagArrayOutput
}

type SystemObjectTaggingTagArray []SystemObjectTaggingTagInput

func (SystemObjectTaggingTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemObjectTaggingTag)(nil)).Elem()
}

func (i SystemObjectTaggingTagArray) ToSystemObjectTaggingTagArrayOutput() SystemObjectTaggingTagArrayOutput {
	return i.ToSystemObjectTaggingTagArrayOutputWithContext(context.Background())
}

func (i SystemObjectTaggingTagArray) ToSystemObjectTaggingTagArrayOutputWithContext(ctx context.Context) SystemObjectTaggingTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemObjectTaggingTagArrayOutput)
}

func (i SystemObjectTaggingTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemObjectTaggingTag] {
	return pulumix.Output[[]SystemObjectTaggingTag]{
		OutputState: i.ToSystemObjectTaggingTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemObjectTaggingTagOutput struct{ *pulumi.OutputState }

func (SystemObjectTaggingTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemObjectTaggingTag)(nil)).Elem()
}

func (o SystemObjectTaggingTagOutput) ToSystemObjectTaggingTagOutput() SystemObjectTaggingTagOutput {
	return o
}

func (o SystemObjectTaggingTagOutput) ToSystemObjectTaggingTagOutputWithContext(ctx context.Context) SystemObjectTaggingTagOutput {
	return o
}

func (o SystemObjectTaggingTagOutput) ToOutput(ctx context.Context) pulumix.Output[SystemObjectTaggingTag] {
	return pulumix.Output[SystemObjectTaggingTag]{
		OutputState: o.OutputState,
	}
}

func (o SystemObjectTaggingTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemObjectTaggingTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemObjectTaggingTagArrayOutput struct{ *pulumi.OutputState }

func (SystemObjectTaggingTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemObjectTaggingTag)(nil)).Elem()
}

func (o SystemObjectTaggingTagArrayOutput) ToSystemObjectTaggingTagArrayOutput() SystemObjectTaggingTagArrayOutput {
	return o
}

func (o SystemObjectTaggingTagArrayOutput) ToSystemObjectTaggingTagArrayOutputWithContext(ctx context.Context) SystemObjectTaggingTagArrayOutput {
	return o
}

func (o SystemObjectTaggingTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemObjectTaggingTag] {
	return pulumix.Output[[]SystemObjectTaggingTag]{
		OutputState: o.OutputState,
	}
}

func (o SystemObjectTaggingTagArrayOutput) Index(i pulumi.IntInput) SystemObjectTaggingTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemObjectTaggingTag {
		return vs[0].([]SystemObjectTaggingTag)[vs[1].(int)]
	}).(SystemObjectTaggingTagOutput)
}

type SystemPcpServerPool struct {
	AllowOpcode           *string                               `pulumi:"allowOpcode"`
	AnnouncementCount     *int                                  `pulumi:"announcementCount"`
	ArpReply              *string                               `pulumi:"arpReply"`
	ClientMappingLimit    *int                                  `pulumi:"clientMappingLimit"`
	ClientSubnets         []SystemPcpServerPoolClientSubnet     `pulumi:"clientSubnets"`
	Description           *string                               `pulumi:"description"`
	ExtIntf               *string                               `pulumi:"extIntf"`
	Extip                 *string                               `pulumi:"extip"`
	Extport               *string                               `pulumi:"extport"`
	Id                    *int                                  `pulumi:"id"`
	IntlIntfs             []SystemPcpServerPoolIntlIntf         `pulumi:"intlIntfs"`
	MappingFilterLimit    *int                                  `pulumi:"mappingFilterLimit"`
	MaximalLifetime       *int                                  `pulumi:"maximalLifetime"`
	MinimalLifetime       *int                                  `pulumi:"minimalLifetime"`
	MulticastAnnouncement *string                               `pulumi:"multicastAnnouncement"`
	Name                  *string                               `pulumi:"name"`
	RecycleDelay          *int                                  `pulumi:"recycleDelay"`
	ThirdParty            *string                               `pulumi:"thirdParty"`
	ThirdPartySubnets     []SystemPcpServerPoolThirdPartySubnet `pulumi:"thirdPartySubnets"`
}

// SystemPcpServerPoolInput is an input type that accepts SystemPcpServerPoolArgs and SystemPcpServerPoolOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolInput` via:
//
//	SystemPcpServerPoolArgs{...}
type SystemPcpServerPoolInput interface {
	pulumi.Input

	ToSystemPcpServerPoolOutput() SystemPcpServerPoolOutput
	ToSystemPcpServerPoolOutputWithContext(context.Context) SystemPcpServerPoolOutput
}

type SystemPcpServerPoolArgs struct {
	AllowOpcode           pulumi.StringPtrInput                         `pulumi:"allowOpcode"`
	AnnouncementCount     pulumi.IntPtrInput                            `pulumi:"announcementCount"`
	ArpReply              pulumi.StringPtrInput                         `pulumi:"arpReply"`
	ClientMappingLimit    pulumi.IntPtrInput                            `pulumi:"clientMappingLimit"`
	ClientSubnets         SystemPcpServerPoolClientSubnetArrayInput     `pulumi:"clientSubnets"`
	Description           pulumi.StringPtrInput                         `pulumi:"description"`
	ExtIntf               pulumi.StringPtrInput                         `pulumi:"extIntf"`
	Extip                 pulumi.StringPtrInput                         `pulumi:"extip"`
	Extport               pulumi.StringPtrInput                         `pulumi:"extport"`
	Id                    pulumi.IntPtrInput                            `pulumi:"id"`
	IntlIntfs             SystemPcpServerPoolIntlIntfArrayInput         `pulumi:"intlIntfs"`
	MappingFilterLimit    pulumi.IntPtrInput                            `pulumi:"mappingFilterLimit"`
	MaximalLifetime       pulumi.IntPtrInput                            `pulumi:"maximalLifetime"`
	MinimalLifetime       pulumi.IntPtrInput                            `pulumi:"minimalLifetime"`
	MulticastAnnouncement pulumi.StringPtrInput                         `pulumi:"multicastAnnouncement"`
	Name                  pulumi.StringPtrInput                         `pulumi:"name"`
	RecycleDelay          pulumi.IntPtrInput                            `pulumi:"recycleDelay"`
	ThirdParty            pulumi.StringPtrInput                         `pulumi:"thirdParty"`
	ThirdPartySubnets     SystemPcpServerPoolThirdPartySubnetArrayInput `pulumi:"thirdPartySubnets"`
}

func (SystemPcpServerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPool)(nil)).Elem()
}

func (i SystemPcpServerPoolArgs) ToSystemPcpServerPoolOutput() SystemPcpServerPoolOutput {
	return i.ToSystemPcpServerPoolOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolArgs) ToSystemPcpServerPoolOutputWithContext(ctx context.Context) SystemPcpServerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolOutput)
}

func (i SystemPcpServerPoolArgs) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPool] {
	return pulumix.Output[SystemPcpServerPool]{
		OutputState: i.ToSystemPcpServerPoolOutputWithContext(ctx).OutputState,
	}
}

// SystemPcpServerPoolArrayInput is an input type that accepts SystemPcpServerPoolArray and SystemPcpServerPoolArrayOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolArrayInput` via:
//
//	SystemPcpServerPoolArray{ SystemPcpServerPoolArgs{...} }
type SystemPcpServerPoolArrayInput interface {
	pulumi.Input

	ToSystemPcpServerPoolArrayOutput() SystemPcpServerPoolArrayOutput
	ToSystemPcpServerPoolArrayOutputWithContext(context.Context) SystemPcpServerPoolArrayOutput
}

type SystemPcpServerPoolArray []SystemPcpServerPoolInput

func (SystemPcpServerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPool)(nil)).Elem()
}

func (i SystemPcpServerPoolArray) ToSystemPcpServerPoolArrayOutput() SystemPcpServerPoolArrayOutput {
	return i.ToSystemPcpServerPoolArrayOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolArray) ToSystemPcpServerPoolArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolArrayOutput)
}

func (i SystemPcpServerPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPool] {
	return pulumix.Output[[]SystemPcpServerPool]{
		OutputState: i.ToSystemPcpServerPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemPcpServerPoolOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPool)(nil)).Elem()
}

func (o SystemPcpServerPoolOutput) ToSystemPcpServerPoolOutput() SystemPcpServerPoolOutput {
	return o
}

func (o SystemPcpServerPoolOutput) ToSystemPcpServerPoolOutputWithContext(ctx context.Context) SystemPcpServerPoolOutput {
	return o
}

func (o SystemPcpServerPoolOutput) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPool] {
	return pulumix.Output[SystemPcpServerPool]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolOutput) AllowOpcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.AllowOpcode }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) AnnouncementCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.AnnouncementCount }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) ArpReply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.ArpReply }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) ClientMappingLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.ClientMappingLimit }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) ClientSubnets() SystemPcpServerPoolClientSubnetArrayOutput {
	return o.ApplyT(func(v SystemPcpServerPool) []SystemPcpServerPoolClientSubnet { return v.ClientSubnets }).(SystemPcpServerPoolClientSubnetArrayOutput)
}

func (o SystemPcpServerPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) ExtIntf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.ExtIntf }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) Extip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.Extip }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) Extport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.Extport }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) IntlIntfs() SystemPcpServerPoolIntlIntfArrayOutput {
	return o.ApplyT(func(v SystemPcpServerPool) []SystemPcpServerPoolIntlIntf { return v.IntlIntfs }).(SystemPcpServerPoolIntlIntfArrayOutput)
}

func (o SystemPcpServerPoolOutput) MappingFilterLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.MappingFilterLimit }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) MaximalLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.MaximalLifetime }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) MinimalLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.MinimalLifetime }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) MulticastAnnouncement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.MulticastAnnouncement }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) RecycleDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *int { return v.RecycleDelay }).(pulumi.IntPtrOutput)
}

func (o SystemPcpServerPoolOutput) ThirdParty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPool) *string { return v.ThirdParty }).(pulumi.StringPtrOutput)
}

func (o SystemPcpServerPoolOutput) ThirdPartySubnets() SystemPcpServerPoolThirdPartySubnetArrayOutput {
	return o.ApplyT(func(v SystemPcpServerPool) []SystemPcpServerPoolThirdPartySubnet { return v.ThirdPartySubnets }).(SystemPcpServerPoolThirdPartySubnetArrayOutput)
}

type SystemPcpServerPoolArrayOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPool)(nil)).Elem()
}

func (o SystemPcpServerPoolArrayOutput) ToSystemPcpServerPoolArrayOutput() SystemPcpServerPoolArrayOutput {
	return o
}

func (o SystemPcpServerPoolArrayOutput) ToSystemPcpServerPoolArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolArrayOutput {
	return o
}

func (o SystemPcpServerPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPool] {
	return pulumix.Output[[]SystemPcpServerPool]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolArrayOutput) Index(i pulumi.IntInput) SystemPcpServerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPcpServerPool {
		return vs[0].([]SystemPcpServerPool)[vs[1].(int)]
	}).(SystemPcpServerPoolOutput)
}

type SystemPcpServerPoolClientSubnet struct {
	Subnet *string `pulumi:"subnet"`
}

// SystemPcpServerPoolClientSubnetInput is an input type that accepts SystemPcpServerPoolClientSubnetArgs and SystemPcpServerPoolClientSubnetOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolClientSubnetInput` via:
//
//	SystemPcpServerPoolClientSubnetArgs{...}
type SystemPcpServerPoolClientSubnetInput interface {
	pulumi.Input

	ToSystemPcpServerPoolClientSubnetOutput() SystemPcpServerPoolClientSubnetOutput
	ToSystemPcpServerPoolClientSubnetOutputWithContext(context.Context) SystemPcpServerPoolClientSubnetOutput
}

type SystemPcpServerPoolClientSubnetArgs struct {
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemPcpServerPoolClientSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolClientSubnet)(nil)).Elem()
}

func (i SystemPcpServerPoolClientSubnetArgs) ToSystemPcpServerPoolClientSubnetOutput() SystemPcpServerPoolClientSubnetOutput {
	return i.ToSystemPcpServerPoolClientSubnetOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolClientSubnetArgs) ToSystemPcpServerPoolClientSubnetOutputWithContext(ctx context.Context) SystemPcpServerPoolClientSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolClientSubnetOutput)
}

func (i SystemPcpServerPoolClientSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolClientSubnet] {
	return pulumix.Output[SystemPcpServerPoolClientSubnet]{
		OutputState: i.ToSystemPcpServerPoolClientSubnetOutputWithContext(ctx).OutputState,
	}
}

// SystemPcpServerPoolClientSubnetArrayInput is an input type that accepts SystemPcpServerPoolClientSubnetArray and SystemPcpServerPoolClientSubnetArrayOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolClientSubnetArrayInput` via:
//
//	SystemPcpServerPoolClientSubnetArray{ SystemPcpServerPoolClientSubnetArgs{...} }
type SystemPcpServerPoolClientSubnetArrayInput interface {
	pulumi.Input

	ToSystemPcpServerPoolClientSubnetArrayOutput() SystemPcpServerPoolClientSubnetArrayOutput
	ToSystemPcpServerPoolClientSubnetArrayOutputWithContext(context.Context) SystemPcpServerPoolClientSubnetArrayOutput
}

type SystemPcpServerPoolClientSubnetArray []SystemPcpServerPoolClientSubnetInput

func (SystemPcpServerPoolClientSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolClientSubnet)(nil)).Elem()
}

func (i SystemPcpServerPoolClientSubnetArray) ToSystemPcpServerPoolClientSubnetArrayOutput() SystemPcpServerPoolClientSubnetArrayOutput {
	return i.ToSystemPcpServerPoolClientSubnetArrayOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolClientSubnetArray) ToSystemPcpServerPoolClientSubnetArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolClientSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolClientSubnetArrayOutput)
}

func (i SystemPcpServerPoolClientSubnetArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolClientSubnet] {
	return pulumix.Output[[]SystemPcpServerPoolClientSubnet]{
		OutputState: i.ToSystemPcpServerPoolClientSubnetArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemPcpServerPoolClientSubnetOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolClientSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolClientSubnet)(nil)).Elem()
}

func (o SystemPcpServerPoolClientSubnetOutput) ToSystemPcpServerPoolClientSubnetOutput() SystemPcpServerPoolClientSubnetOutput {
	return o
}

func (o SystemPcpServerPoolClientSubnetOutput) ToSystemPcpServerPoolClientSubnetOutputWithContext(ctx context.Context) SystemPcpServerPoolClientSubnetOutput {
	return o
}

func (o SystemPcpServerPoolClientSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolClientSubnet] {
	return pulumix.Output[SystemPcpServerPoolClientSubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolClientSubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPoolClientSubnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemPcpServerPoolClientSubnetArrayOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolClientSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolClientSubnet)(nil)).Elem()
}

func (o SystemPcpServerPoolClientSubnetArrayOutput) ToSystemPcpServerPoolClientSubnetArrayOutput() SystemPcpServerPoolClientSubnetArrayOutput {
	return o
}

func (o SystemPcpServerPoolClientSubnetArrayOutput) ToSystemPcpServerPoolClientSubnetArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolClientSubnetArrayOutput {
	return o
}

func (o SystemPcpServerPoolClientSubnetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolClientSubnet] {
	return pulumix.Output[[]SystemPcpServerPoolClientSubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolClientSubnetArrayOutput) Index(i pulumi.IntInput) SystemPcpServerPoolClientSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPcpServerPoolClientSubnet {
		return vs[0].([]SystemPcpServerPoolClientSubnet)[vs[1].(int)]
	}).(SystemPcpServerPoolClientSubnetOutput)
}

type SystemPcpServerPoolIntlIntf struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemPcpServerPoolIntlIntfInput is an input type that accepts SystemPcpServerPoolIntlIntfArgs and SystemPcpServerPoolIntlIntfOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolIntlIntfInput` via:
//
//	SystemPcpServerPoolIntlIntfArgs{...}
type SystemPcpServerPoolIntlIntfInput interface {
	pulumi.Input

	ToSystemPcpServerPoolIntlIntfOutput() SystemPcpServerPoolIntlIntfOutput
	ToSystemPcpServerPoolIntlIntfOutputWithContext(context.Context) SystemPcpServerPoolIntlIntfOutput
}

type SystemPcpServerPoolIntlIntfArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemPcpServerPoolIntlIntfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolIntlIntf)(nil)).Elem()
}

func (i SystemPcpServerPoolIntlIntfArgs) ToSystemPcpServerPoolIntlIntfOutput() SystemPcpServerPoolIntlIntfOutput {
	return i.ToSystemPcpServerPoolIntlIntfOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolIntlIntfArgs) ToSystemPcpServerPoolIntlIntfOutputWithContext(ctx context.Context) SystemPcpServerPoolIntlIntfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolIntlIntfOutput)
}

func (i SystemPcpServerPoolIntlIntfArgs) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolIntlIntf] {
	return pulumix.Output[SystemPcpServerPoolIntlIntf]{
		OutputState: i.ToSystemPcpServerPoolIntlIntfOutputWithContext(ctx).OutputState,
	}
}

// SystemPcpServerPoolIntlIntfArrayInput is an input type that accepts SystemPcpServerPoolIntlIntfArray and SystemPcpServerPoolIntlIntfArrayOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolIntlIntfArrayInput` via:
//
//	SystemPcpServerPoolIntlIntfArray{ SystemPcpServerPoolIntlIntfArgs{...} }
type SystemPcpServerPoolIntlIntfArrayInput interface {
	pulumi.Input

	ToSystemPcpServerPoolIntlIntfArrayOutput() SystemPcpServerPoolIntlIntfArrayOutput
	ToSystemPcpServerPoolIntlIntfArrayOutputWithContext(context.Context) SystemPcpServerPoolIntlIntfArrayOutput
}

type SystemPcpServerPoolIntlIntfArray []SystemPcpServerPoolIntlIntfInput

func (SystemPcpServerPoolIntlIntfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolIntlIntf)(nil)).Elem()
}

func (i SystemPcpServerPoolIntlIntfArray) ToSystemPcpServerPoolIntlIntfArrayOutput() SystemPcpServerPoolIntlIntfArrayOutput {
	return i.ToSystemPcpServerPoolIntlIntfArrayOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolIntlIntfArray) ToSystemPcpServerPoolIntlIntfArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolIntlIntfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolIntlIntfArrayOutput)
}

func (i SystemPcpServerPoolIntlIntfArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolIntlIntf] {
	return pulumix.Output[[]SystemPcpServerPoolIntlIntf]{
		OutputState: i.ToSystemPcpServerPoolIntlIntfArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemPcpServerPoolIntlIntfOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolIntlIntfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolIntlIntf)(nil)).Elem()
}

func (o SystemPcpServerPoolIntlIntfOutput) ToSystemPcpServerPoolIntlIntfOutput() SystemPcpServerPoolIntlIntfOutput {
	return o
}

func (o SystemPcpServerPoolIntlIntfOutput) ToSystemPcpServerPoolIntlIntfOutputWithContext(ctx context.Context) SystemPcpServerPoolIntlIntfOutput {
	return o
}

func (o SystemPcpServerPoolIntlIntfOutput) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolIntlIntf] {
	return pulumix.Output[SystemPcpServerPoolIntlIntf]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolIntlIntfOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPoolIntlIntf) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemPcpServerPoolIntlIntfArrayOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolIntlIntfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolIntlIntf)(nil)).Elem()
}

func (o SystemPcpServerPoolIntlIntfArrayOutput) ToSystemPcpServerPoolIntlIntfArrayOutput() SystemPcpServerPoolIntlIntfArrayOutput {
	return o
}

func (o SystemPcpServerPoolIntlIntfArrayOutput) ToSystemPcpServerPoolIntlIntfArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolIntlIntfArrayOutput {
	return o
}

func (o SystemPcpServerPoolIntlIntfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolIntlIntf] {
	return pulumix.Output[[]SystemPcpServerPoolIntlIntf]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolIntlIntfArrayOutput) Index(i pulumi.IntInput) SystemPcpServerPoolIntlIntfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPcpServerPoolIntlIntf {
		return vs[0].([]SystemPcpServerPoolIntlIntf)[vs[1].(int)]
	}).(SystemPcpServerPoolIntlIntfOutput)
}

type SystemPcpServerPoolThirdPartySubnet struct {
	Subnet *string `pulumi:"subnet"`
}

// SystemPcpServerPoolThirdPartySubnetInput is an input type that accepts SystemPcpServerPoolThirdPartySubnetArgs and SystemPcpServerPoolThirdPartySubnetOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolThirdPartySubnetInput` via:
//
//	SystemPcpServerPoolThirdPartySubnetArgs{...}
type SystemPcpServerPoolThirdPartySubnetInput interface {
	pulumi.Input

	ToSystemPcpServerPoolThirdPartySubnetOutput() SystemPcpServerPoolThirdPartySubnetOutput
	ToSystemPcpServerPoolThirdPartySubnetOutputWithContext(context.Context) SystemPcpServerPoolThirdPartySubnetOutput
}

type SystemPcpServerPoolThirdPartySubnetArgs struct {
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (SystemPcpServerPoolThirdPartySubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolThirdPartySubnet)(nil)).Elem()
}

func (i SystemPcpServerPoolThirdPartySubnetArgs) ToSystemPcpServerPoolThirdPartySubnetOutput() SystemPcpServerPoolThirdPartySubnetOutput {
	return i.ToSystemPcpServerPoolThirdPartySubnetOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolThirdPartySubnetArgs) ToSystemPcpServerPoolThirdPartySubnetOutputWithContext(ctx context.Context) SystemPcpServerPoolThirdPartySubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolThirdPartySubnetOutput)
}

func (i SystemPcpServerPoolThirdPartySubnetArgs) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolThirdPartySubnet] {
	return pulumix.Output[SystemPcpServerPoolThirdPartySubnet]{
		OutputState: i.ToSystemPcpServerPoolThirdPartySubnetOutputWithContext(ctx).OutputState,
	}
}

// SystemPcpServerPoolThirdPartySubnetArrayInput is an input type that accepts SystemPcpServerPoolThirdPartySubnetArray and SystemPcpServerPoolThirdPartySubnetArrayOutput values.
// You can construct a concrete instance of `SystemPcpServerPoolThirdPartySubnetArrayInput` via:
//
//	SystemPcpServerPoolThirdPartySubnetArray{ SystemPcpServerPoolThirdPartySubnetArgs{...} }
type SystemPcpServerPoolThirdPartySubnetArrayInput interface {
	pulumi.Input

	ToSystemPcpServerPoolThirdPartySubnetArrayOutput() SystemPcpServerPoolThirdPartySubnetArrayOutput
	ToSystemPcpServerPoolThirdPartySubnetArrayOutputWithContext(context.Context) SystemPcpServerPoolThirdPartySubnetArrayOutput
}

type SystemPcpServerPoolThirdPartySubnetArray []SystemPcpServerPoolThirdPartySubnetInput

func (SystemPcpServerPoolThirdPartySubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolThirdPartySubnet)(nil)).Elem()
}

func (i SystemPcpServerPoolThirdPartySubnetArray) ToSystemPcpServerPoolThirdPartySubnetArrayOutput() SystemPcpServerPoolThirdPartySubnetArrayOutput {
	return i.ToSystemPcpServerPoolThirdPartySubnetArrayOutputWithContext(context.Background())
}

func (i SystemPcpServerPoolThirdPartySubnetArray) ToSystemPcpServerPoolThirdPartySubnetArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolThirdPartySubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPcpServerPoolThirdPartySubnetArrayOutput)
}

func (i SystemPcpServerPoolThirdPartySubnetArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolThirdPartySubnet] {
	return pulumix.Output[[]SystemPcpServerPoolThirdPartySubnet]{
		OutputState: i.ToSystemPcpServerPoolThirdPartySubnetArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemPcpServerPoolThirdPartySubnetOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolThirdPartySubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPcpServerPoolThirdPartySubnet)(nil)).Elem()
}

func (o SystemPcpServerPoolThirdPartySubnetOutput) ToSystemPcpServerPoolThirdPartySubnetOutput() SystemPcpServerPoolThirdPartySubnetOutput {
	return o
}

func (o SystemPcpServerPoolThirdPartySubnetOutput) ToSystemPcpServerPoolThirdPartySubnetOutputWithContext(ctx context.Context) SystemPcpServerPoolThirdPartySubnetOutput {
	return o
}

func (o SystemPcpServerPoolThirdPartySubnetOutput) ToOutput(ctx context.Context) pulumix.Output[SystemPcpServerPoolThirdPartySubnet] {
	return pulumix.Output[SystemPcpServerPoolThirdPartySubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolThirdPartySubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPcpServerPoolThirdPartySubnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type SystemPcpServerPoolThirdPartySubnetArrayOutput struct{ *pulumi.OutputState }

func (SystemPcpServerPoolThirdPartySubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPcpServerPoolThirdPartySubnet)(nil)).Elem()
}

func (o SystemPcpServerPoolThirdPartySubnetArrayOutput) ToSystemPcpServerPoolThirdPartySubnetArrayOutput() SystemPcpServerPoolThirdPartySubnetArrayOutput {
	return o
}

func (o SystemPcpServerPoolThirdPartySubnetArrayOutput) ToSystemPcpServerPoolThirdPartySubnetArrayOutputWithContext(ctx context.Context) SystemPcpServerPoolThirdPartySubnetArrayOutput {
	return o
}

func (o SystemPcpServerPoolThirdPartySubnetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemPcpServerPoolThirdPartySubnet] {
	return pulumix.Output[[]SystemPcpServerPoolThirdPartySubnet]{
		OutputState: o.OutputState,
	}
}

func (o SystemPcpServerPoolThirdPartySubnetArrayOutput) Index(i pulumi.IntInput) SystemPcpServerPoolThirdPartySubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPcpServerPoolThirdPartySubnet {
		return vs[0].([]SystemPcpServerPoolThirdPartySubnet)[vs[1].(int)]
	}).(SystemPcpServerPoolThirdPartySubnetOutput)
}

type SystemPtpServerInterface struct {
	DelayMechanism      *string `pulumi:"delayMechanism"`
	Id                  *int    `pulumi:"id"`
	ServerInterfaceName *string `pulumi:"serverInterfaceName"`
}

// SystemPtpServerInterfaceInput is an input type that accepts SystemPtpServerInterfaceArgs and SystemPtpServerInterfaceOutput values.
// You can construct a concrete instance of `SystemPtpServerInterfaceInput` via:
//
//	SystemPtpServerInterfaceArgs{...}
type SystemPtpServerInterfaceInput interface {
	pulumi.Input

	ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput
	ToSystemPtpServerInterfaceOutputWithContext(context.Context) SystemPtpServerInterfaceOutput
}

type SystemPtpServerInterfaceArgs struct {
	DelayMechanism      pulumi.StringPtrInput `pulumi:"delayMechanism"`
	Id                  pulumi.IntPtrInput    `pulumi:"id"`
	ServerInterfaceName pulumi.StringPtrInput `pulumi:"serverInterfaceName"`
}

func (SystemPtpServerInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPtpServerInterface)(nil)).Elem()
}

func (i SystemPtpServerInterfaceArgs) ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput {
	return i.ToSystemPtpServerInterfaceOutputWithContext(context.Background())
}

func (i SystemPtpServerInterfaceArgs) ToSystemPtpServerInterfaceOutputWithContext(ctx context.Context) SystemPtpServerInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPtpServerInterfaceOutput)
}

func (i SystemPtpServerInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemPtpServerInterface] {
	return pulumix.Output[SystemPtpServerInterface]{
		OutputState: i.ToSystemPtpServerInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemPtpServerInterfaceArrayInput is an input type that accepts SystemPtpServerInterfaceArray and SystemPtpServerInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemPtpServerInterfaceArrayInput` via:
//
//	SystemPtpServerInterfaceArray{ SystemPtpServerInterfaceArgs{...} }
type SystemPtpServerInterfaceArrayInput interface {
	pulumi.Input

	ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput
	ToSystemPtpServerInterfaceArrayOutputWithContext(context.Context) SystemPtpServerInterfaceArrayOutput
}

type SystemPtpServerInterfaceArray []SystemPtpServerInterfaceInput

func (SystemPtpServerInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPtpServerInterface)(nil)).Elem()
}

func (i SystemPtpServerInterfaceArray) ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput {
	return i.ToSystemPtpServerInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemPtpServerInterfaceArray) ToSystemPtpServerInterfaceArrayOutputWithContext(ctx context.Context) SystemPtpServerInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPtpServerInterfaceArrayOutput)
}

func (i SystemPtpServerInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemPtpServerInterface] {
	return pulumix.Output[[]SystemPtpServerInterface]{
		OutputState: i.ToSystemPtpServerInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemPtpServerInterfaceOutput struct{ *pulumi.OutputState }

func (SystemPtpServerInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemPtpServerInterface)(nil)).Elem()
}

func (o SystemPtpServerInterfaceOutput) ToSystemPtpServerInterfaceOutput() SystemPtpServerInterfaceOutput {
	return o
}

func (o SystemPtpServerInterfaceOutput) ToSystemPtpServerInterfaceOutputWithContext(ctx context.Context) SystemPtpServerInterfaceOutput {
	return o
}

func (o SystemPtpServerInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemPtpServerInterface] {
	return pulumix.Output[SystemPtpServerInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemPtpServerInterfaceOutput) DelayMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *string { return v.DelayMechanism }).(pulumi.StringPtrOutput)
}

func (o SystemPtpServerInterfaceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemPtpServerInterfaceOutput) ServerInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemPtpServerInterface) *string { return v.ServerInterfaceName }).(pulumi.StringPtrOutput)
}

type SystemPtpServerInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemPtpServerInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemPtpServerInterface)(nil)).Elem()
}

func (o SystemPtpServerInterfaceArrayOutput) ToSystemPtpServerInterfaceArrayOutput() SystemPtpServerInterfaceArrayOutput {
	return o
}

func (o SystemPtpServerInterfaceArrayOutput) ToSystemPtpServerInterfaceArrayOutputWithContext(ctx context.Context) SystemPtpServerInterfaceArrayOutput {
	return o
}

func (o SystemPtpServerInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemPtpServerInterface] {
	return pulumix.Output[[]SystemPtpServerInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemPtpServerInterfaceArrayOutput) Index(i pulumi.IntInput) SystemPtpServerInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemPtpServerInterface {
		return vs[0].([]SystemPtpServerInterface)[vs[1].(int)]
	}).(SystemPtpServerInterfaceOutput)
}

type SystemReplacemsgGroupAdmin struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupAdminInput is an input type that accepts SystemReplacemsgGroupAdminArgs and SystemReplacemsgGroupAdminOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAdminInput` via:
//
//	SystemReplacemsgGroupAdminArgs{...}
type SystemReplacemsgGroupAdminInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAdminOutput() SystemReplacemsgGroupAdminOutput
	ToSystemReplacemsgGroupAdminOutputWithContext(context.Context) SystemReplacemsgGroupAdminOutput
}

type SystemReplacemsgGroupAdminArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupAdminArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAdmin)(nil)).Elem()
}

func (i SystemReplacemsgGroupAdminArgs) ToSystemReplacemsgGroupAdminOutput() SystemReplacemsgGroupAdminOutput {
	return i.ToSystemReplacemsgGroupAdminOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAdminArgs) ToSystemReplacemsgGroupAdminOutputWithContext(ctx context.Context) SystemReplacemsgGroupAdminOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAdminOutput)
}

func (i SystemReplacemsgGroupAdminArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAdmin] {
	return pulumix.Output[SystemReplacemsgGroupAdmin]{
		OutputState: i.ToSystemReplacemsgGroupAdminOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupAdminArrayInput is an input type that accepts SystemReplacemsgGroupAdminArray and SystemReplacemsgGroupAdminArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAdminArrayInput` via:
//
//	SystemReplacemsgGroupAdminArray{ SystemReplacemsgGroupAdminArgs{...} }
type SystemReplacemsgGroupAdminArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAdminArrayOutput() SystemReplacemsgGroupAdminArrayOutput
	ToSystemReplacemsgGroupAdminArrayOutputWithContext(context.Context) SystemReplacemsgGroupAdminArrayOutput
}

type SystemReplacemsgGroupAdminArray []SystemReplacemsgGroupAdminInput

func (SystemReplacemsgGroupAdminArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAdmin)(nil)).Elem()
}

func (i SystemReplacemsgGroupAdminArray) ToSystemReplacemsgGroupAdminArrayOutput() SystemReplacemsgGroupAdminArrayOutput {
	return i.ToSystemReplacemsgGroupAdminArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAdminArray) ToSystemReplacemsgGroupAdminArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAdminArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAdminArrayOutput)
}

func (i SystemReplacemsgGroupAdminArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAdmin] {
	return pulumix.Output[[]SystemReplacemsgGroupAdmin]{
		OutputState: i.ToSystemReplacemsgGroupAdminArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupAdminOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAdminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAdmin)(nil)).Elem()
}

func (o SystemReplacemsgGroupAdminOutput) ToSystemReplacemsgGroupAdminOutput() SystemReplacemsgGroupAdminOutput {
	return o
}

func (o SystemReplacemsgGroupAdminOutput) ToSystemReplacemsgGroupAdminOutputWithContext(ctx context.Context) SystemReplacemsgGroupAdminOutput {
	return o
}

func (o SystemReplacemsgGroupAdminOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAdmin] {
	return pulumix.Output[SystemReplacemsgGroupAdmin]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAdminOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAdmin) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAdminOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAdmin) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAdminOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAdmin) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAdminOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAdmin) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupAdminArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAdminArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAdmin)(nil)).Elem()
}

func (o SystemReplacemsgGroupAdminArrayOutput) ToSystemReplacemsgGroupAdminArrayOutput() SystemReplacemsgGroupAdminArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAdminArrayOutput) ToSystemReplacemsgGroupAdminArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAdminArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAdminArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAdmin] {
	return pulumix.Output[[]SystemReplacemsgGroupAdmin]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAdminArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupAdminOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupAdmin {
		return vs[0].([]SystemReplacemsgGroupAdmin)[vs[1].(int)]
	}).(SystemReplacemsgGroupAdminOutput)
}

type SystemReplacemsgGroupAlertmail struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupAlertmailInput is an input type that accepts SystemReplacemsgGroupAlertmailArgs and SystemReplacemsgGroupAlertmailOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAlertmailInput` via:
//
//	SystemReplacemsgGroupAlertmailArgs{...}
type SystemReplacemsgGroupAlertmailInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAlertmailOutput() SystemReplacemsgGroupAlertmailOutput
	ToSystemReplacemsgGroupAlertmailOutputWithContext(context.Context) SystemReplacemsgGroupAlertmailOutput
}

type SystemReplacemsgGroupAlertmailArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupAlertmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAlertmail)(nil)).Elem()
}

func (i SystemReplacemsgGroupAlertmailArgs) ToSystemReplacemsgGroupAlertmailOutput() SystemReplacemsgGroupAlertmailOutput {
	return i.ToSystemReplacemsgGroupAlertmailOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAlertmailArgs) ToSystemReplacemsgGroupAlertmailOutputWithContext(ctx context.Context) SystemReplacemsgGroupAlertmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAlertmailOutput)
}

func (i SystemReplacemsgGroupAlertmailArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAlertmail] {
	return pulumix.Output[SystemReplacemsgGroupAlertmail]{
		OutputState: i.ToSystemReplacemsgGroupAlertmailOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupAlertmailArrayInput is an input type that accepts SystemReplacemsgGroupAlertmailArray and SystemReplacemsgGroupAlertmailArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAlertmailArrayInput` via:
//
//	SystemReplacemsgGroupAlertmailArray{ SystemReplacemsgGroupAlertmailArgs{...} }
type SystemReplacemsgGroupAlertmailArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAlertmailArrayOutput() SystemReplacemsgGroupAlertmailArrayOutput
	ToSystemReplacemsgGroupAlertmailArrayOutputWithContext(context.Context) SystemReplacemsgGroupAlertmailArrayOutput
}

type SystemReplacemsgGroupAlertmailArray []SystemReplacemsgGroupAlertmailInput

func (SystemReplacemsgGroupAlertmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAlertmail)(nil)).Elem()
}

func (i SystemReplacemsgGroupAlertmailArray) ToSystemReplacemsgGroupAlertmailArrayOutput() SystemReplacemsgGroupAlertmailArrayOutput {
	return i.ToSystemReplacemsgGroupAlertmailArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAlertmailArray) ToSystemReplacemsgGroupAlertmailArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAlertmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAlertmailArrayOutput)
}

func (i SystemReplacemsgGroupAlertmailArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAlertmail] {
	return pulumix.Output[[]SystemReplacemsgGroupAlertmail]{
		OutputState: i.ToSystemReplacemsgGroupAlertmailArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupAlertmailOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAlertmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAlertmail)(nil)).Elem()
}

func (o SystemReplacemsgGroupAlertmailOutput) ToSystemReplacemsgGroupAlertmailOutput() SystemReplacemsgGroupAlertmailOutput {
	return o
}

func (o SystemReplacemsgGroupAlertmailOutput) ToSystemReplacemsgGroupAlertmailOutputWithContext(ctx context.Context) SystemReplacemsgGroupAlertmailOutput {
	return o
}

func (o SystemReplacemsgGroupAlertmailOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAlertmail] {
	return pulumix.Output[SystemReplacemsgGroupAlertmail]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAlertmailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAlertmail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAlertmailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAlertmail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAlertmailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAlertmail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAlertmailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAlertmail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupAlertmailArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAlertmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAlertmail)(nil)).Elem()
}

func (o SystemReplacemsgGroupAlertmailArrayOutput) ToSystemReplacemsgGroupAlertmailArrayOutput() SystemReplacemsgGroupAlertmailArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAlertmailArrayOutput) ToSystemReplacemsgGroupAlertmailArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAlertmailArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAlertmailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAlertmail] {
	return pulumix.Output[[]SystemReplacemsgGroupAlertmail]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAlertmailArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupAlertmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupAlertmail {
		return vs[0].([]SystemReplacemsgGroupAlertmail)[vs[1].(int)]
	}).(SystemReplacemsgGroupAlertmailOutput)
}

type SystemReplacemsgGroupAuth struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupAuthInput is an input type that accepts SystemReplacemsgGroupAuthArgs and SystemReplacemsgGroupAuthOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAuthInput` via:
//
//	SystemReplacemsgGroupAuthArgs{...}
type SystemReplacemsgGroupAuthInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAuthOutput() SystemReplacemsgGroupAuthOutput
	ToSystemReplacemsgGroupAuthOutputWithContext(context.Context) SystemReplacemsgGroupAuthOutput
}

type SystemReplacemsgGroupAuthArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAuth)(nil)).Elem()
}

func (i SystemReplacemsgGroupAuthArgs) ToSystemReplacemsgGroupAuthOutput() SystemReplacemsgGroupAuthOutput {
	return i.ToSystemReplacemsgGroupAuthOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAuthArgs) ToSystemReplacemsgGroupAuthOutputWithContext(ctx context.Context) SystemReplacemsgGroupAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAuthOutput)
}

func (i SystemReplacemsgGroupAuthArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAuth] {
	return pulumix.Output[SystemReplacemsgGroupAuth]{
		OutputState: i.ToSystemReplacemsgGroupAuthOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupAuthArrayInput is an input type that accepts SystemReplacemsgGroupAuthArray and SystemReplacemsgGroupAuthArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAuthArrayInput` via:
//
//	SystemReplacemsgGroupAuthArray{ SystemReplacemsgGroupAuthArgs{...} }
type SystemReplacemsgGroupAuthArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAuthArrayOutput() SystemReplacemsgGroupAuthArrayOutput
	ToSystemReplacemsgGroupAuthArrayOutputWithContext(context.Context) SystemReplacemsgGroupAuthArrayOutput
}

type SystemReplacemsgGroupAuthArray []SystemReplacemsgGroupAuthInput

func (SystemReplacemsgGroupAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAuth)(nil)).Elem()
}

func (i SystemReplacemsgGroupAuthArray) ToSystemReplacemsgGroupAuthArrayOutput() SystemReplacemsgGroupAuthArrayOutput {
	return i.ToSystemReplacemsgGroupAuthArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAuthArray) ToSystemReplacemsgGroupAuthArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAuthArrayOutput)
}

func (i SystemReplacemsgGroupAuthArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAuth] {
	return pulumix.Output[[]SystemReplacemsgGroupAuth]{
		OutputState: i.ToSystemReplacemsgGroupAuthArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupAuthOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAuth)(nil)).Elem()
}

func (o SystemReplacemsgGroupAuthOutput) ToSystemReplacemsgGroupAuthOutput() SystemReplacemsgGroupAuthOutput {
	return o
}

func (o SystemReplacemsgGroupAuthOutput) ToSystemReplacemsgGroupAuthOutputWithContext(ctx context.Context) SystemReplacemsgGroupAuthOutput {
	return o
}

func (o SystemReplacemsgGroupAuthOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAuth] {
	return pulumix.Output[SystemReplacemsgGroupAuth]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAuthOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAuth) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAuthOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAuth) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAuthOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAuth) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAuthOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAuth) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupAuthArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAuth)(nil)).Elem()
}

func (o SystemReplacemsgGroupAuthArrayOutput) ToSystemReplacemsgGroupAuthArrayOutput() SystemReplacemsgGroupAuthArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAuthArrayOutput) ToSystemReplacemsgGroupAuthArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAuthArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAuthArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAuth] {
	return pulumix.Output[[]SystemReplacemsgGroupAuth]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAuthArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupAuth {
		return vs[0].([]SystemReplacemsgGroupAuth)[vs[1].(int)]
	}).(SystemReplacemsgGroupAuthOutput)
}

type SystemReplacemsgGroupAutomation struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupAutomationInput is an input type that accepts SystemReplacemsgGroupAutomationArgs and SystemReplacemsgGroupAutomationOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAutomationInput` via:
//
//	SystemReplacemsgGroupAutomationArgs{...}
type SystemReplacemsgGroupAutomationInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAutomationOutput() SystemReplacemsgGroupAutomationOutput
	ToSystemReplacemsgGroupAutomationOutputWithContext(context.Context) SystemReplacemsgGroupAutomationOutput
}

type SystemReplacemsgGroupAutomationArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAutomation)(nil)).Elem()
}

func (i SystemReplacemsgGroupAutomationArgs) ToSystemReplacemsgGroupAutomationOutput() SystemReplacemsgGroupAutomationOutput {
	return i.ToSystemReplacemsgGroupAutomationOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAutomationArgs) ToSystemReplacemsgGroupAutomationOutputWithContext(ctx context.Context) SystemReplacemsgGroupAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAutomationOutput)
}

func (i SystemReplacemsgGroupAutomationArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAutomation] {
	return pulumix.Output[SystemReplacemsgGroupAutomation]{
		OutputState: i.ToSystemReplacemsgGroupAutomationOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupAutomationArrayInput is an input type that accepts SystemReplacemsgGroupAutomationArray and SystemReplacemsgGroupAutomationArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupAutomationArrayInput` via:
//
//	SystemReplacemsgGroupAutomationArray{ SystemReplacemsgGroupAutomationArgs{...} }
type SystemReplacemsgGroupAutomationArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupAutomationArrayOutput() SystemReplacemsgGroupAutomationArrayOutput
	ToSystemReplacemsgGroupAutomationArrayOutputWithContext(context.Context) SystemReplacemsgGroupAutomationArrayOutput
}

type SystemReplacemsgGroupAutomationArray []SystemReplacemsgGroupAutomationInput

func (SystemReplacemsgGroupAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAutomation)(nil)).Elem()
}

func (i SystemReplacemsgGroupAutomationArray) ToSystemReplacemsgGroupAutomationArrayOutput() SystemReplacemsgGroupAutomationArrayOutput {
	return i.ToSystemReplacemsgGroupAutomationArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupAutomationArray) ToSystemReplacemsgGroupAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupAutomationArrayOutput)
}

func (i SystemReplacemsgGroupAutomationArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAutomation] {
	return pulumix.Output[[]SystemReplacemsgGroupAutomation]{
		OutputState: i.ToSystemReplacemsgGroupAutomationArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupAutomationOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupAutomation)(nil)).Elem()
}

func (o SystemReplacemsgGroupAutomationOutput) ToSystemReplacemsgGroupAutomationOutput() SystemReplacemsgGroupAutomationOutput {
	return o
}

func (o SystemReplacemsgGroupAutomationOutput) ToSystemReplacemsgGroupAutomationOutputWithContext(ctx context.Context) SystemReplacemsgGroupAutomationOutput {
	return o
}

func (o SystemReplacemsgGroupAutomationOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupAutomation] {
	return pulumix.Output[SystemReplacemsgGroupAutomation]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAutomationOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAutomation) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAutomationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAutomation) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAutomationOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAutomation) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupAutomationOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupAutomation) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupAutomationArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupAutomation)(nil)).Elem()
}

func (o SystemReplacemsgGroupAutomationArrayOutput) ToSystemReplacemsgGroupAutomationArrayOutput() SystemReplacemsgGroupAutomationArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAutomationArrayOutput) ToSystemReplacemsgGroupAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupAutomationArrayOutput {
	return o
}

func (o SystemReplacemsgGroupAutomationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupAutomation] {
	return pulumix.Output[[]SystemReplacemsgGroupAutomation]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupAutomationArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupAutomation {
		return vs[0].([]SystemReplacemsgGroupAutomation)[vs[1].(int)]
	}).(SystemReplacemsgGroupAutomationOutput)
}

type SystemReplacemsgGroupCustomMessage struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupCustomMessageInput is an input type that accepts SystemReplacemsgGroupCustomMessageArgs and SystemReplacemsgGroupCustomMessageOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupCustomMessageInput` via:
//
//	SystemReplacemsgGroupCustomMessageArgs{...}
type SystemReplacemsgGroupCustomMessageInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupCustomMessageOutput() SystemReplacemsgGroupCustomMessageOutput
	ToSystemReplacemsgGroupCustomMessageOutputWithContext(context.Context) SystemReplacemsgGroupCustomMessageOutput
}

type SystemReplacemsgGroupCustomMessageArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupCustomMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupCustomMessage)(nil)).Elem()
}

func (i SystemReplacemsgGroupCustomMessageArgs) ToSystemReplacemsgGroupCustomMessageOutput() SystemReplacemsgGroupCustomMessageOutput {
	return i.ToSystemReplacemsgGroupCustomMessageOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupCustomMessageArgs) ToSystemReplacemsgGroupCustomMessageOutputWithContext(ctx context.Context) SystemReplacemsgGroupCustomMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupCustomMessageOutput)
}

func (i SystemReplacemsgGroupCustomMessageArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupCustomMessage] {
	return pulumix.Output[SystemReplacemsgGroupCustomMessage]{
		OutputState: i.ToSystemReplacemsgGroupCustomMessageOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupCustomMessageArrayInput is an input type that accepts SystemReplacemsgGroupCustomMessageArray and SystemReplacemsgGroupCustomMessageArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupCustomMessageArrayInput` via:
//
//	SystemReplacemsgGroupCustomMessageArray{ SystemReplacemsgGroupCustomMessageArgs{...} }
type SystemReplacemsgGroupCustomMessageArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupCustomMessageArrayOutput() SystemReplacemsgGroupCustomMessageArrayOutput
	ToSystemReplacemsgGroupCustomMessageArrayOutputWithContext(context.Context) SystemReplacemsgGroupCustomMessageArrayOutput
}

type SystemReplacemsgGroupCustomMessageArray []SystemReplacemsgGroupCustomMessageInput

func (SystemReplacemsgGroupCustomMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupCustomMessage)(nil)).Elem()
}

func (i SystemReplacemsgGroupCustomMessageArray) ToSystemReplacemsgGroupCustomMessageArrayOutput() SystemReplacemsgGroupCustomMessageArrayOutput {
	return i.ToSystemReplacemsgGroupCustomMessageArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupCustomMessageArray) ToSystemReplacemsgGroupCustomMessageArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupCustomMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupCustomMessageArrayOutput)
}

func (i SystemReplacemsgGroupCustomMessageArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupCustomMessage] {
	return pulumix.Output[[]SystemReplacemsgGroupCustomMessage]{
		OutputState: i.ToSystemReplacemsgGroupCustomMessageArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupCustomMessageOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupCustomMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupCustomMessage)(nil)).Elem()
}

func (o SystemReplacemsgGroupCustomMessageOutput) ToSystemReplacemsgGroupCustomMessageOutput() SystemReplacemsgGroupCustomMessageOutput {
	return o
}

func (o SystemReplacemsgGroupCustomMessageOutput) ToSystemReplacemsgGroupCustomMessageOutputWithContext(ctx context.Context) SystemReplacemsgGroupCustomMessageOutput {
	return o
}

func (o SystemReplacemsgGroupCustomMessageOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupCustomMessage] {
	return pulumix.Output[SystemReplacemsgGroupCustomMessage]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupCustomMessageOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupCustomMessage) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupCustomMessageOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupCustomMessage) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupCustomMessageOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupCustomMessage) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupCustomMessageOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupCustomMessage) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupCustomMessageArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupCustomMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupCustomMessage)(nil)).Elem()
}

func (o SystemReplacemsgGroupCustomMessageArrayOutput) ToSystemReplacemsgGroupCustomMessageArrayOutput() SystemReplacemsgGroupCustomMessageArrayOutput {
	return o
}

func (o SystemReplacemsgGroupCustomMessageArrayOutput) ToSystemReplacemsgGroupCustomMessageArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupCustomMessageArrayOutput {
	return o
}

func (o SystemReplacemsgGroupCustomMessageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupCustomMessage] {
	return pulumix.Output[[]SystemReplacemsgGroupCustomMessage]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupCustomMessageArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupCustomMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupCustomMessage {
		return vs[0].([]SystemReplacemsgGroupCustomMessage)[vs[1].(int)]
	}).(SystemReplacemsgGroupCustomMessageOutput)
}

type SystemReplacemsgGroupDeviceDetectionPortal struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupDeviceDetectionPortalInput is an input type that accepts SystemReplacemsgGroupDeviceDetectionPortalArgs and SystemReplacemsgGroupDeviceDetectionPortalOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupDeviceDetectionPortalInput` via:
//
//	SystemReplacemsgGroupDeviceDetectionPortalArgs{...}
type SystemReplacemsgGroupDeviceDetectionPortalInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupDeviceDetectionPortalOutput() SystemReplacemsgGroupDeviceDetectionPortalOutput
	ToSystemReplacemsgGroupDeviceDetectionPortalOutputWithContext(context.Context) SystemReplacemsgGroupDeviceDetectionPortalOutput
}

type SystemReplacemsgGroupDeviceDetectionPortalArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupDeviceDetectionPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupDeviceDetectionPortal)(nil)).Elem()
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArgs) ToSystemReplacemsgGroupDeviceDetectionPortalOutput() SystemReplacemsgGroupDeviceDetectionPortalOutput {
	return i.ToSystemReplacemsgGroupDeviceDetectionPortalOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArgs) ToSystemReplacemsgGroupDeviceDetectionPortalOutputWithContext(ctx context.Context) SystemReplacemsgGroupDeviceDetectionPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupDeviceDetectionPortalOutput)
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupDeviceDetectionPortal] {
	return pulumix.Output[SystemReplacemsgGroupDeviceDetectionPortal]{
		OutputState: i.ToSystemReplacemsgGroupDeviceDetectionPortalOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupDeviceDetectionPortalArrayInput is an input type that accepts SystemReplacemsgGroupDeviceDetectionPortalArray and SystemReplacemsgGroupDeviceDetectionPortalArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupDeviceDetectionPortalArrayInput` via:
//
//	SystemReplacemsgGroupDeviceDetectionPortalArray{ SystemReplacemsgGroupDeviceDetectionPortalArgs{...} }
type SystemReplacemsgGroupDeviceDetectionPortalArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutput() SystemReplacemsgGroupDeviceDetectionPortalArrayOutput
	ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutputWithContext(context.Context) SystemReplacemsgGroupDeviceDetectionPortalArrayOutput
}

type SystemReplacemsgGroupDeviceDetectionPortalArray []SystemReplacemsgGroupDeviceDetectionPortalInput

func (SystemReplacemsgGroupDeviceDetectionPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupDeviceDetectionPortal)(nil)).Elem()
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArray) ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutput() SystemReplacemsgGroupDeviceDetectionPortalArrayOutput {
	return i.ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArray) ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupDeviceDetectionPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupDeviceDetectionPortalArrayOutput)
}

func (i SystemReplacemsgGroupDeviceDetectionPortalArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupDeviceDetectionPortal] {
	return pulumix.Output[[]SystemReplacemsgGroupDeviceDetectionPortal]{
		OutputState: i.ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupDeviceDetectionPortalOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupDeviceDetectionPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupDeviceDetectionPortal)(nil)).Elem()
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) ToSystemReplacemsgGroupDeviceDetectionPortalOutput() SystemReplacemsgGroupDeviceDetectionPortalOutput {
	return o
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) ToSystemReplacemsgGroupDeviceDetectionPortalOutputWithContext(ctx context.Context) SystemReplacemsgGroupDeviceDetectionPortalOutput {
	return o
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupDeviceDetectionPortal] {
	return pulumix.Output[SystemReplacemsgGroupDeviceDetectionPortal]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupDeviceDetectionPortal) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupDeviceDetectionPortal) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupDeviceDetectionPortal) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupDeviceDetectionPortalOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupDeviceDetectionPortal) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupDeviceDetectionPortalArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupDeviceDetectionPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupDeviceDetectionPortal)(nil)).Elem()
}

func (o SystemReplacemsgGroupDeviceDetectionPortalArrayOutput) ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutput() SystemReplacemsgGroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o SystemReplacemsgGroupDeviceDetectionPortalArrayOutput) ToSystemReplacemsgGroupDeviceDetectionPortalArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupDeviceDetectionPortalArrayOutput {
	return o
}

func (o SystemReplacemsgGroupDeviceDetectionPortalArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupDeviceDetectionPortal] {
	return pulumix.Output[[]SystemReplacemsgGroupDeviceDetectionPortal]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupDeviceDetectionPortalArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupDeviceDetectionPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupDeviceDetectionPortal {
		return vs[0].([]SystemReplacemsgGroupDeviceDetectionPortal)[vs[1].(int)]
	}).(SystemReplacemsgGroupDeviceDetectionPortalOutput)
}

type SystemReplacemsgGroupEc struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupEcInput is an input type that accepts SystemReplacemsgGroupEcArgs and SystemReplacemsgGroupEcOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupEcInput` via:
//
//	SystemReplacemsgGroupEcArgs{...}
type SystemReplacemsgGroupEcInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupEcOutput() SystemReplacemsgGroupEcOutput
	ToSystemReplacemsgGroupEcOutputWithContext(context.Context) SystemReplacemsgGroupEcOutput
}

type SystemReplacemsgGroupEcArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupEcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupEc)(nil)).Elem()
}

func (i SystemReplacemsgGroupEcArgs) ToSystemReplacemsgGroupEcOutput() SystemReplacemsgGroupEcOutput {
	return i.ToSystemReplacemsgGroupEcOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupEcArgs) ToSystemReplacemsgGroupEcOutputWithContext(ctx context.Context) SystemReplacemsgGroupEcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupEcOutput)
}

func (i SystemReplacemsgGroupEcArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupEc] {
	return pulumix.Output[SystemReplacemsgGroupEc]{
		OutputState: i.ToSystemReplacemsgGroupEcOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupEcArrayInput is an input type that accepts SystemReplacemsgGroupEcArray and SystemReplacemsgGroupEcArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupEcArrayInput` via:
//
//	SystemReplacemsgGroupEcArray{ SystemReplacemsgGroupEcArgs{...} }
type SystemReplacemsgGroupEcArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupEcArrayOutput() SystemReplacemsgGroupEcArrayOutput
	ToSystemReplacemsgGroupEcArrayOutputWithContext(context.Context) SystemReplacemsgGroupEcArrayOutput
}

type SystemReplacemsgGroupEcArray []SystemReplacemsgGroupEcInput

func (SystemReplacemsgGroupEcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupEc)(nil)).Elem()
}

func (i SystemReplacemsgGroupEcArray) ToSystemReplacemsgGroupEcArrayOutput() SystemReplacemsgGroupEcArrayOutput {
	return i.ToSystemReplacemsgGroupEcArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupEcArray) ToSystemReplacemsgGroupEcArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupEcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupEcArrayOutput)
}

func (i SystemReplacemsgGroupEcArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupEc] {
	return pulumix.Output[[]SystemReplacemsgGroupEc]{
		OutputState: i.ToSystemReplacemsgGroupEcArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupEcOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupEcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupEc)(nil)).Elem()
}

func (o SystemReplacemsgGroupEcOutput) ToSystemReplacemsgGroupEcOutput() SystemReplacemsgGroupEcOutput {
	return o
}

func (o SystemReplacemsgGroupEcOutput) ToSystemReplacemsgGroupEcOutputWithContext(ctx context.Context) SystemReplacemsgGroupEcOutput {
	return o
}

func (o SystemReplacemsgGroupEcOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupEc] {
	return pulumix.Output[SystemReplacemsgGroupEc]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupEcOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupEc) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupEcOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupEc) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupEcOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupEc) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupEcOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupEc) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupEcArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupEcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupEc)(nil)).Elem()
}

func (o SystemReplacemsgGroupEcArrayOutput) ToSystemReplacemsgGroupEcArrayOutput() SystemReplacemsgGroupEcArrayOutput {
	return o
}

func (o SystemReplacemsgGroupEcArrayOutput) ToSystemReplacemsgGroupEcArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupEcArrayOutput {
	return o
}

func (o SystemReplacemsgGroupEcArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupEc] {
	return pulumix.Output[[]SystemReplacemsgGroupEc]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupEcArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupEcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupEc {
		return vs[0].([]SystemReplacemsgGroupEc)[vs[1].(int)]
	}).(SystemReplacemsgGroupEcOutput)
}

type SystemReplacemsgGroupFortiguardWf struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupFortiguardWfInput is an input type that accepts SystemReplacemsgGroupFortiguardWfArgs and SystemReplacemsgGroupFortiguardWfOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupFortiguardWfInput` via:
//
//	SystemReplacemsgGroupFortiguardWfArgs{...}
type SystemReplacemsgGroupFortiguardWfInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupFortiguardWfOutput() SystemReplacemsgGroupFortiguardWfOutput
	ToSystemReplacemsgGroupFortiguardWfOutputWithContext(context.Context) SystemReplacemsgGroupFortiguardWfOutput
}

type SystemReplacemsgGroupFortiguardWfArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupFortiguardWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupFortiguardWf)(nil)).Elem()
}

func (i SystemReplacemsgGroupFortiguardWfArgs) ToSystemReplacemsgGroupFortiguardWfOutput() SystemReplacemsgGroupFortiguardWfOutput {
	return i.ToSystemReplacemsgGroupFortiguardWfOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupFortiguardWfArgs) ToSystemReplacemsgGroupFortiguardWfOutputWithContext(ctx context.Context) SystemReplacemsgGroupFortiguardWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupFortiguardWfOutput)
}

func (i SystemReplacemsgGroupFortiguardWfArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupFortiguardWf] {
	return pulumix.Output[SystemReplacemsgGroupFortiguardWf]{
		OutputState: i.ToSystemReplacemsgGroupFortiguardWfOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupFortiguardWfArrayInput is an input type that accepts SystemReplacemsgGroupFortiguardWfArray and SystemReplacemsgGroupFortiguardWfArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupFortiguardWfArrayInput` via:
//
//	SystemReplacemsgGroupFortiguardWfArray{ SystemReplacemsgGroupFortiguardWfArgs{...} }
type SystemReplacemsgGroupFortiguardWfArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupFortiguardWfArrayOutput() SystemReplacemsgGroupFortiguardWfArrayOutput
	ToSystemReplacemsgGroupFortiguardWfArrayOutputWithContext(context.Context) SystemReplacemsgGroupFortiguardWfArrayOutput
}

type SystemReplacemsgGroupFortiguardWfArray []SystemReplacemsgGroupFortiguardWfInput

func (SystemReplacemsgGroupFortiguardWfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupFortiguardWf)(nil)).Elem()
}

func (i SystemReplacemsgGroupFortiguardWfArray) ToSystemReplacemsgGroupFortiguardWfArrayOutput() SystemReplacemsgGroupFortiguardWfArrayOutput {
	return i.ToSystemReplacemsgGroupFortiguardWfArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupFortiguardWfArray) ToSystemReplacemsgGroupFortiguardWfArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupFortiguardWfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupFortiguardWfArrayOutput)
}

func (i SystemReplacemsgGroupFortiguardWfArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupFortiguardWf] {
	return pulumix.Output[[]SystemReplacemsgGroupFortiguardWf]{
		OutputState: i.ToSystemReplacemsgGroupFortiguardWfArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupFortiguardWfOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupFortiguardWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupFortiguardWf)(nil)).Elem()
}

func (o SystemReplacemsgGroupFortiguardWfOutput) ToSystemReplacemsgGroupFortiguardWfOutput() SystemReplacemsgGroupFortiguardWfOutput {
	return o
}

func (o SystemReplacemsgGroupFortiguardWfOutput) ToSystemReplacemsgGroupFortiguardWfOutputWithContext(ctx context.Context) SystemReplacemsgGroupFortiguardWfOutput {
	return o
}

func (o SystemReplacemsgGroupFortiguardWfOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupFortiguardWf] {
	return pulumix.Output[SystemReplacemsgGroupFortiguardWf]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupFortiguardWfOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFortiguardWf) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFortiguardWfOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFortiguardWf) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFortiguardWfOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFortiguardWf) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFortiguardWfOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFortiguardWf) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupFortiguardWfArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupFortiguardWfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupFortiguardWf)(nil)).Elem()
}

func (o SystemReplacemsgGroupFortiguardWfArrayOutput) ToSystemReplacemsgGroupFortiguardWfArrayOutput() SystemReplacemsgGroupFortiguardWfArrayOutput {
	return o
}

func (o SystemReplacemsgGroupFortiguardWfArrayOutput) ToSystemReplacemsgGroupFortiguardWfArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupFortiguardWfArrayOutput {
	return o
}

func (o SystemReplacemsgGroupFortiguardWfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupFortiguardWf] {
	return pulumix.Output[[]SystemReplacemsgGroupFortiguardWf]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupFortiguardWfArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupFortiguardWfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupFortiguardWf {
		return vs[0].([]SystemReplacemsgGroupFortiguardWf)[vs[1].(int)]
	}).(SystemReplacemsgGroupFortiguardWfOutput)
}

type SystemReplacemsgGroupFtp struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupFtpInput is an input type that accepts SystemReplacemsgGroupFtpArgs and SystemReplacemsgGroupFtpOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupFtpInput` via:
//
//	SystemReplacemsgGroupFtpArgs{...}
type SystemReplacemsgGroupFtpInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupFtpOutput() SystemReplacemsgGroupFtpOutput
	ToSystemReplacemsgGroupFtpOutputWithContext(context.Context) SystemReplacemsgGroupFtpOutput
}

type SystemReplacemsgGroupFtpArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupFtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupFtp)(nil)).Elem()
}

func (i SystemReplacemsgGroupFtpArgs) ToSystemReplacemsgGroupFtpOutput() SystemReplacemsgGroupFtpOutput {
	return i.ToSystemReplacemsgGroupFtpOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupFtpArgs) ToSystemReplacemsgGroupFtpOutputWithContext(ctx context.Context) SystemReplacemsgGroupFtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupFtpOutput)
}

func (i SystemReplacemsgGroupFtpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupFtp] {
	return pulumix.Output[SystemReplacemsgGroupFtp]{
		OutputState: i.ToSystemReplacemsgGroupFtpOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupFtpArrayInput is an input type that accepts SystemReplacemsgGroupFtpArray and SystemReplacemsgGroupFtpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupFtpArrayInput` via:
//
//	SystemReplacemsgGroupFtpArray{ SystemReplacemsgGroupFtpArgs{...} }
type SystemReplacemsgGroupFtpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupFtpArrayOutput() SystemReplacemsgGroupFtpArrayOutput
	ToSystemReplacemsgGroupFtpArrayOutputWithContext(context.Context) SystemReplacemsgGroupFtpArrayOutput
}

type SystemReplacemsgGroupFtpArray []SystemReplacemsgGroupFtpInput

func (SystemReplacemsgGroupFtpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupFtp)(nil)).Elem()
}

func (i SystemReplacemsgGroupFtpArray) ToSystemReplacemsgGroupFtpArrayOutput() SystemReplacemsgGroupFtpArrayOutput {
	return i.ToSystemReplacemsgGroupFtpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupFtpArray) ToSystemReplacemsgGroupFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupFtpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupFtpArrayOutput)
}

func (i SystemReplacemsgGroupFtpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupFtp] {
	return pulumix.Output[[]SystemReplacemsgGroupFtp]{
		OutputState: i.ToSystemReplacemsgGroupFtpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupFtpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupFtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupFtp)(nil)).Elem()
}

func (o SystemReplacemsgGroupFtpOutput) ToSystemReplacemsgGroupFtpOutput() SystemReplacemsgGroupFtpOutput {
	return o
}

func (o SystemReplacemsgGroupFtpOutput) ToSystemReplacemsgGroupFtpOutputWithContext(ctx context.Context) SystemReplacemsgGroupFtpOutput {
	return o
}

func (o SystemReplacemsgGroupFtpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupFtp] {
	return pulumix.Output[SystemReplacemsgGroupFtp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupFtpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFtp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFtpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFtp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFtpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFtp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupFtpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupFtp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupFtpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupFtpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupFtp)(nil)).Elem()
}

func (o SystemReplacemsgGroupFtpArrayOutput) ToSystemReplacemsgGroupFtpArrayOutput() SystemReplacemsgGroupFtpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupFtpArrayOutput) ToSystemReplacemsgGroupFtpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupFtpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupFtpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupFtp] {
	return pulumix.Output[[]SystemReplacemsgGroupFtp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupFtpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupFtpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupFtp {
		return vs[0].([]SystemReplacemsgGroupFtp)[vs[1].(int)]
	}).(SystemReplacemsgGroupFtpOutput)
}

type SystemReplacemsgGroupHttp struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupHttpInput is an input type that accepts SystemReplacemsgGroupHttpArgs and SystemReplacemsgGroupHttpOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupHttpInput` via:
//
//	SystemReplacemsgGroupHttpArgs{...}
type SystemReplacemsgGroupHttpInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupHttpOutput() SystemReplacemsgGroupHttpOutput
	ToSystemReplacemsgGroupHttpOutputWithContext(context.Context) SystemReplacemsgGroupHttpOutput
}

type SystemReplacemsgGroupHttpArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupHttp)(nil)).Elem()
}

func (i SystemReplacemsgGroupHttpArgs) ToSystemReplacemsgGroupHttpOutput() SystemReplacemsgGroupHttpOutput {
	return i.ToSystemReplacemsgGroupHttpOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupHttpArgs) ToSystemReplacemsgGroupHttpOutputWithContext(ctx context.Context) SystemReplacemsgGroupHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupHttpOutput)
}

func (i SystemReplacemsgGroupHttpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupHttp] {
	return pulumix.Output[SystemReplacemsgGroupHttp]{
		OutputState: i.ToSystemReplacemsgGroupHttpOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupHttpArrayInput is an input type that accepts SystemReplacemsgGroupHttpArray and SystemReplacemsgGroupHttpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupHttpArrayInput` via:
//
//	SystemReplacemsgGroupHttpArray{ SystemReplacemsgGroupHttpArgs{...} }
type SystemReplacemsgGroupHttpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupHttpArrayOutput() SystemReplacemsgGroupHttpArrayOutput
	ToSystemReplacemsgGroupHttpArrayOutputWithContext(context.Context) SystemReplacemsgGroupHttpArrayOutput
}

type SystemReplacemsgGroupHttpArray []SystemReplacemsgGroupHttpInput

func (SystemReplacemsgGroupHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupHttp)(nil)).Elem()
}

func (i SystemReplacemsgGroupHttpArray) ToSystemReplacemsgGroupHttpArrayOutput() SystemReplacemsgGroupHttpArrayOutput {
	return i.ToSystemReplacemsgGroupHttpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupHttpArray) ToSystemReplacemsgGroupHttpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupHttpArrayOutput)
}

func (i SystemReplacemsgGroupHttpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupHttp] {
	return pulumix.Output[[]SystemReplacemsgGroupHttp]{
		OutputState: i.ToSystemReplacemsgGroupHttpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupHttpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupHttp)(nil)).Elem()
}

func (o SystemReplacemsgGroupHttpOutput) ToSystemReplacemsgGroupHttpOutput() SystemReplacemsgGroupHttpOutput {
	return o
}

func (o SystemReplacemsgGroupHttpOutput) ToSystemReplacemsgGroupHttpOutputWithContext(ctx context.Context) SystemReplacemsgGroupHttpOutput {
	return o
}

func (o SystemReplacemsgGroupHttpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupHttp] {
	return pulumix.Output[SystemReplacemsgGroupHttp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupHttpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupHttp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupHttpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupHttp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupHttpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupHttp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupHttpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupHttp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupHttpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupHttp)(nil)).Elem()
}

func (o SystemReplacemsgGroupHttpArrayOutput) ToSystemReplacemsgGroupHttpArrayOutput() SystemReplacemsgGroupHttpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupHttpArrayOutput) ToSystemReplacemsgGroupHttpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupHttpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupHttpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupHttp] {
	return pulumix.Output[[]SystemReplacemsgGroupHttp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupHttpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupHttp {
		return vs[0].([]SystemReplacemsgGroupHttp)[vs[1].(int)]
	}).(SystemReplacemsgGroupHttpOutput)
}

type SystemReplacemsgGroupIcap struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupIcapInput is an input type that accepts SystemReplacemsgGroupIcapArgs and SystemReplacemsgGroupIcapOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupIcapInput` via:
//
//	SystemReplacemsgGroupIcapArgs{...}
type SystemReplacemsgGroupIcapInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupIcapOutput() SystemReplacemsgGroupIcapOutput
	ToSystemReplacemsgGroupIcapOutputWithContext(context.Context) SystemReplacemsgGroupIcapOutput
}

type SystemReplacemsgGroupIcapArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupIcapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupIcap)(nil)).Elem()
}

func (i SystemReplacemsgGroupIcapArgs) ToSystemReplacemsgGroupIcapOutput() SystemReplacemsgGroupIcapOutput {
	return i.ToSystemReplacemsgGroupIcapOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupIcapArgs) ToSystemReplacemsgGroupIcapOutputWithContext(ctx context.Context) SystemReplacemsgGroupIcapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupIcapOutput)
}

func (i SystemReplacemsgGroupIcapArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupIcap] {
	return pulumix.Output[SystemReplacemsgGroupIcap]{
		OutputState: i.ToSystemReplacemsgGroupIcapOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupIcapArrayInput is an input type that accepts SystemReplacemsgGroupIcapArray and SystemReplacemsgGroupIcapArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupIcapArrayInput` via:
//
//	SystemReplacemsgGroupIcapArray{ SystemReplacemsgGroupIcapArgs{...} }
type SystemReplacemsgGroupIcapArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupIcapArrayOutput() SystemReplacemsgGroupIcapArrayOutput
	ToSystemReplacemsgGroupIcapArrayOutputWithContext(context.Context) SystemReplacemsgGroupIcapArrayOutput
}

type SystemReplacemsgGroupIcapArray []SystemReplacemsgGroupIcapInput

func (SystemReplacemsgGroupIcapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupIcap)(nil)).Elem()
}

func (i SystemReplacemsgGroupIcapArray) ToSystemReplacemsgGroupIcapArrayOutput() SystemReplacemsgGroupIcapArrayOutput {
	return i.ToSystemReplacemsgGroupIcapArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupIcapArray) ToSystemReplacemsgGroupIcapArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupIcapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupIcapArrayOutput)
}

func (i SystemReplacemsgGroupIcapArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupIcap] {
	return pulumix.Output[[]SystemReplacemsgGroupIcap]{
		OutputState: i.ToSystemReplacemsgGroupIcapArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupIcapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupIcapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupIcap)(nil)).Elem()
}

func (o SystemReplacemsgGroupIcapOutput) ToSystemReplacemsgGroupIcapOutput() SystemReplacemsgGroupIcapOutput {
	return o
}

func (o SystemReplacemsgGroupIcapOutput) ToSystemReplacemsgGroupIcapOutputWithContext(ctx context.Context) SystemReplacemsgGroupIcapOutput {
	return o
}

func (o SystemReplacemsgGroupIcapOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupIcap] {
	return pulumix.Output[SystemReplacemsgGroupIcap]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupIcapOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupIcap) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupIcapOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupIcap) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupIcapOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupIcap) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupIcapOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupIcap) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupIcapArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupIcapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupIcap)(nil)).Elem()
}

func (o SystemReplacemsgGroupIcapArrayOutput) ToSystemReplacemsgGroupIcapArrayOutput() SystemReplacemsgGroupIcapArrayOutput {
	return o
}

func (o SystemReplacemsgGroupIcapArrayOutput) ToSystemReplacemsgGroupIcapArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupIcapArrayOutput {
	return o
}

func (o SystemReplacemsgGroupIcapArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupIcap] {
	return pulumix.Output[[]SystemReplacemsgGroupIcap]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupIcapArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupIcapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupIcap {
		return vs[0].([]SystemReplacemsgGroupIcap)[vs[1].(int)]
	}).(SystemReplacemsgGroupIcapOutput)
}

type SystemReplacemsgGroupMail struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupMailInput is an input type that accepts SystemReplacemsgGroupMailArgs and SystemReplacemsgGroupMailOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupMailInput` via:
//
//	SystemReplacemsgGroupMailArgs{...}
type SystemReplacemsgGroupMailInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupMailOutput() SystemReplacemsgGroupMailOutput
	ToSystemReplacemsgGroupMailOutputWithContext(context.Context) SystemReplacemsgGroupMailOutput
}

type SystemReplacemsgGroupMailArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupMailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupMail)(nil)).Elem()
}

func (i SystemReplacemsgGroupMailArgs) ToSystemReplacemsgGroupMailOutput() SystemReplacemsgGroupMailOutput {
	return i.ToSystemReplacemsgGroupMailOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupMailArgs) ToSystemReplacemsgGroupMailOutputWithContext(ctx context.Context) SystemReplacemsgGroupMailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupMailOutput)
}

func (i SystemReplacemsgGroupMailArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupMail] {
	return pulumix.Output[SystemReplacemsgGroupMail]{
		OutputState: i.ToSystemReplacemsgGroupMailOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupMailArrayInput is an input type that accepts SystemReplacemsgGroupMailArray and SystemReplacemsgGroupMailArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupMailArrayInput` via:
//
//	SystemReplacemsgGroupMailArray{ SystemReplacemsgGroupMailArgs{...} }
type SystemReplacemsgGroupMailArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupMailArrayOutput() SystemReplacemsgGroupMailArrayOutput
	ToSystemReplacemsgGroupMailArrayOutputWithContext(context.Context) SystemReplacemsgGroupMailArrayOutput
}

type SystemReplacemsgGroupMailArray []SystemReplacemsgGroupMailInput

func (SystemReplacemsgGroupMailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupMail)(nil)).Elem()
}

func (i SystemReplacemsgGroupMailArray) ToSystemReplacemsgGroupMailArrayOutput() SystemReplacemsgGroupMailArrayOutput {
	return i.ToSystemReplacemsgGroupMailArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupMailArray) ToSystemReplacemsgGroupMailArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupMailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupMailArrayOutput)
}

func (i SystemReplacemsgGroupMailArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupMail] {
	return pulumix.Output[[]SystemReplacemsgGroupMail]{
		OutputState: i.ToSystemReplacemsgGroupMailArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupMailOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupMailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupMail)(nil)).Elem()
}

func (o SystemReplacemsgGroupMailOutput) ToSystemReplacemsgGroupMailOutput() SystemReplacemsgGroupMailOutput {
	return o
}

func (o SystemReplacemsgGroupMailOutput) ToSystemReplacemsgGroupMailOutputWithContext(ctx context.Context) SystemReplacemsgGroupMailOutput {
	return o
}

func (o SystemReplacemsgGroupMailOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupMail] {
	return pulumix.Output[SystemReplacemsgGroupMail]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupMailOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupMail) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupMailOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupMail) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupMailOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupMail) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupMailOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupMail) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupMailArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupMailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupMail)(nil)).Elem()
}

func (o SystemReplacemsgGroupMailArrayOutput) ToSystemReplacemsgGroupMailArrayOutput() SystemReplacemsgGroupMailArrayOutput {
	return o
}

func (o SystemReplacemsgGroupMailArrayOutput) ToSystemReplacemsgGroupMailArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupMailArrayOutput {
	return o
}

func (o SystemReplacemsgGroupMailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupMail] {
	return pulumix.Output[[]SystemReplacemsgGroupMail]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupMailArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupMailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupMail {
		return vs[0].([]SystemReplacemsgGroupMail)[vs[1].(int)]
	}).(SystemReplacemsgGroupMailOutput)
}

type SystemReplacemsgGroupNacQuar struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupNacQuarInput is an input type that accepts SystemReplacemsgGroupNacQuarArgs and SystemReplacemsgGroupNacQuarOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupNacQuarInput` via:
//
//	SystemReplacemsgGroupNacQuarArgs{...}
type SystemReplacemsgGroupNacQuarInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupNacQuarOutput() SystemReplacemsgGroupNacQuarOutput
	ToSystemReplacemsgGroupNacQuarOutputWithContext(context.Context) SystemReplacemsgGroupNacQuarOutput
}

type SystemReplacemsgGroupNacQuarArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupNacQuar)(nil)).Elem()
}

func (i SystemReplacemsgGroupNacQuarArgs) ToSystemReplacemsgGroupNacQuarOutput() SystemReplacemsgGroupNacQuarOutput {
	return i.ToSystemReplacemsgGroupNacQuarOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupNacQuarArgs) ToSystemReplacemsgGroupNacQuarOutputWithContext(ctx context.Context) SystemReplacemsgGroupNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupNacQuarOutput)
}

func (i SystemReplacemsgGroupNacQuarArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupNacQuar] {
	return pulumix.Output[SystemReplacemsgGroupNacQuar]{
		OutputState: i.ToSystemReplacemsgGroupNacQuarOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupNacQuarArrayInput is an input type that accepts SystemReplacemsgGroupNacQuarArray and SystemReplacemsgGroupNacQuarArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupNacQuarArrayInput` via:
//
//	SystemReplacemsgGroupNacQuarArray{ SystemReplacemsgGroupNacQuarArgs{...} }
type SystemReplacemsgGroupNacQuarArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupNacQuarArrayOutput() SystemReplacemsgGroupNacQuarArrayOutput
	ToSystemReplacemsgGroupNacQuarArrayOutputWithContext(context.Context) SystemReplacemsgGroupNacQuarArrayOutput
}

type SystemReplacemsgGroupNacQuarArray []SystemReplacemsgGroupNacQuarInput

func (SystemReplacemsgGroupNacQuarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupNacQuar)(nil)).Elem()
}

func (i SystemReplacemsgGroupNacQuarArray) ToSystemReplacemsgGroupNacQuarArrayOutput() SystemReplacemsgGroupNacQuarArrayOutput {
	return i.ToSystemReplacemsgGroupNacQuarArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupNacQuarArray) ToSystemReplacemsgGroupNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupNacQuarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupNacQuarArrayOutput)
}

func (i SystemReplacemsgGroupNacQuarArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupNacQuar] {
	return pulumix.Output[[]SystemReplacemsgGroupNacQuar]{
		OutputState: i.ToSystemReplacemsgGroupNacQuarArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupNacQuarOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupNacQuar)(nil)).Elem()
}

func (o SystemReplacemsgGroupNacQuarOutput) ToSystemReplacemsgGroupNacQuarOutput() SystemReplacemsgGroupNacQuarOutput {
	return o
}

func (o SystemReplacemsgGroupNacQuarOutput) ToSystemReplacemsgGroupNacQuarOutputWithContext(ctx context.Context) SystemReplacemsgGroupNacQuarOutput {
	return o
}

func (o SystemReplacemsgGroupNacQuarOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupNacQuar] {
	return pulumix.Output[SystemReplacemsgGroupNacQuar]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupNacQuarOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNacQuar) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNacQuarOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNacQuar) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNacQuarOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNacQuar) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNacQuarOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNacQuar) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupNacQuarArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupNacQuarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupNacQuar)(nil)).Elem()
}

func (o SystemReplacemsgGroupNacQuarArrayOutput) ToSystemReplacemsgGroupNacQuarArrayOutput() SystemReplacemsgGroupNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsgGroupNacQuarArrayOutput) ToSystemReplacemsgGroupNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsgGroupNacQuarArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupNacQuar] {
	return pulumix.Output[[]SystemReplacemsgGroupNacQuar]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupNacQuarArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupNacQuarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupNacQuar {
		return vs[0].([]SystemReplacemsgGroupNacQuar)[vs[1].(int)]
	}).(SystemReplacemsgGroupNacQuarOutput)
}

type SystemReplacemsgGroupNntp struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupNntpInput is an input type that accepts SystemReplacemsgGroupNntpArgs and SystemReplacemsgGroupNntpOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupNntpInput` via:
//
//	SystemReplacemsgGroupNntpArgs{...}
type SystemReplacemsgGroupNntpInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupNntpOutput() SystemReplacemsgGroupNntpOutput
	ToSystemReplacemsgGroupNntpOutputWithContext(context.Context) SystemReplacemsgGroupNntpOutput
}

type SystemReplacemsgGroupNntpArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupNntpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupNntp)(nil)).Elem()
}

func (i SystemReplacemsgGroupNntpArgs) ToSystemReplacemsgGroupNntpOutput() SystemReplacemsgGroupNntpOutput {
	return i.ToSystemReplacemsgGroupNntpOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupNntpArgs) ToSystemReplacemsgGroupNntpOutputWithContext(ctx context.Context) SystemReplacemsgGroupNntpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupNntpOutput)
}

func (i SystemReplacemsgGroupNntpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupNntp] {
	return pulumix.Output[SystemReplacemsgGroupNntp]{
		OutputState: i.ToSystemReplacemsgGroupNntpOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupNntpArrayInput is an input type that accepts SystemReplacemsgGroupNntpArray and SystemReplacemsgGroupNntpArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupNntpArrayInput` via:
//
//	SystemReplacemsgGroupNntpArray{ SystemReplacemsgGroupNntpArgs{...} }
type SystemReplacemsgGroupNntpArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupNntpArrayOutput() SystemReplacemsgGroupNntpArrayOutput
	ToSystemReplacemsgGroupNntpArrayOutputWithContext(context.Context) SystemReplacemsgGroupNntpArrayOutput
}

type SystemReplacemsgGroupNntpArray []SystemReplacemsgGroupNntpInput

func (SystemReplacemsgGroupNntpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupNntp)(nil)).Elem()
}

func (i SystemReplacemsgGroupNntpArray) ToSystemReplacemsgGroupNntpArrayOutput() SystemReplacemsgGroupNntpArrayOutput {
	return i.ToSystemReplacemsgGroupNntpArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupNntpArray) ToSystemReplacemsgGroupNntpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupNntpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupNntpArrayOutput)
}

func (i SystemReplacemsgGroupNntpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupNntp] {
	return pulumix.Output[[]SystemReplacemsgGroupNntp]{
		OutputState: i.ToSystemReplacemsgGroupNntpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupNntpOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupNntpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupNntp)(nil)).Elem()
}

func (o SystemReplacemsgGroupNntpOutput) ToSystemReplacemsgGroupNntpOutput() SystemReplacemsgGroupNntpOutput {
	return o
}

func (o SystemReplacemsgGroupNntpOutput) ToSystemReplacemsgGroupNntpOutputWithContext(ctx context.Context) SystemReplacemsgGroupNntpOutput {
	return o
}

func (o SystemReplacemsgGroupNntpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupNntp] {
	return pulumix.Output[SystemReplacemsgGroupNntp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupNntpOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNntp) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNntpOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNntp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNntpOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNntp) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupNntpOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupNntp) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupNntpArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupNntpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupNntp)(nil)).Elem()
}

func (o SystemReplacemsgGroupNntpArrayOutput) ToSystemReplacemsgGroupNntpArrayOutput() SystemReplacemsgGroupNntpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupNntpArrayOutput) ToSystemReplacemsgGroupNntpArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupNntpArrayOutput {
	return o
}

func (o SystemReplacemsgGroupNntpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupNntp] {
	return pulumix.Output[[]SystemReplacemsgGroupNntp]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupNntpArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupNntpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupNntp {
		return vs[0].([]SystemReplacemsgGroupNntp)[vs[1].(int)]
	}).(SystemReplacemsgGroupNntpOutput)
}

type SystemReplacemsgGroupSpam struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupSpamInput is an input type that accepts SystemReplacemsgGroupSpamArgs and SystemReplacemsgGroupSpamOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupSpamInput` via:
//
//	SystemReplacemsgGroupSpamArgs{...}
type SystemReplacemsgGroupSpamInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupSpamOutput() SystemReplacemsgGroupSpamOutput
	ToSystemReplacemsgGroupSpamOutputWithContext(context.Context) SystemReplacemsgGroupSpamOutput
}

type SystemReplacemsgGroupSpamArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupSpamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupSpam)(nil)).Elem()
}

func (i SystemReplacemsgGroupSpamArgs) ToSystemReplacemsgGroupSpamOutput() SystemReplacemsgGroupSpamOutput {
	return i.ToSystemReplacemsgGroupSpamOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupSpamArgs) ToSystemReplacemsgGroupSpamOutputWithContext(ctx context.Context) SystemReplacemsgGroupSpamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupSpamOutput)
}

func (i SystemReplacemsgGroupSpamArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupSpam] {
	return pulumix.Output[SystemReplacemsgGroupSpam]{
		OutputState: i.ToSystemReplacemsgGroupSpamOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupSpamArrayInput is an input type that accepts SystemReplacemsgGroupSpamArray and SystemReplacemsgGroupSpamArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupSpamArrayInput` via:
//
//	SystemReplacemsgGroupSpamArray{ SystemReplacemsgGroupSpamArgs{...} }
type SystemReplacemsgGroupSpamArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupSpamArrayOutput() SystemReplacemsgGroupSpamArrayOutput
	ToSystemReplacemsgGroupSpamArrayOutputWithContext(context.Context) SystemReplacemsgGroupSpamArrayOutput
}

type SystemReplacemsgGroupSpamArray []SystemReplacemsgGroupSpamInput

func (SystemReplacemsgGroupSpamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupSpam)(nil)).Elem()
}

func (i SystemReplacemsgGroupSpamArray) ToSystemReplacemsgGroupSpamArrayOutput() SystemReplacemsgGroupSpamArrayOutput {
	return i.ToSystemReplacemsgGroupSpamArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupSpamArray) ToSystemReplacemsgGroupSpamArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupSpamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupSpamArrayOutput)
}

func (i SystemReplacemsgGroupSpamArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupSpam] {
	return pulumix.Output[[]SystemReplacemsgGroupSpam]{
		OutputState: i.ToSystemReplacemsgGroupSpamArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupSpamOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupSpamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupSpam)(nil)).Elem()
}

func (o SystemReplacemsgGroupSpamOutput) ToSystemReplacemsgGroupSpamOutput() SystemReplacemsgGroupSpamOutput {
	return o
}

func (o SystemReplacemsgGroupSpamOutput) ToSystemReplacemsgGroupSpamOutputWithContext(ctx context.Context) SystemReplacemsgGroupSpamOutput {
	return o
}

func (o SystemReplacemsgGroupSpamOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupSpam] {
	return pulumix.Output[SystemReplacemsgGroupSpam]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupSpamOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSpam) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSpamOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSpam) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSpamOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSpam) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSpamOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSpam) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupSpamArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupSpamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupSpam)(nil)).Elem()
}

func (o SystemReplacemsgGroupSpamArrayOutput) ToSystemReplacemsgGroupSpamArrayOutput() SystemReplacemsgGroupSpamArrayOutput {
	return o
}

func (o SystemReplacemsgGroupSpamArrayOutput) ToSystemReplacemsgGroupSpamArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupSpamArrayOutput {
	return o
}

func (o SystemReplacemsgGroupSpamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupSpam] {
	return pulumix.Output[[]SystemReplacemsgGroupSpam]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupSpamArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupSpamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupSpam {
		return vs[0].([]SystemReplacemsgGroupSpam)[vs[1].(int)]
	}).(SystemReplacemsgGroupSpamOutput)
}

type SystemReplacemsgGroupSslvpn struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupSslvpnInput is an input type that accepts SystemReplacemsgGroupSslvpnArgs and SystemReplacemsgGroupSslvpnOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupSslvpnInput` via:
//
//	SystemReplacemsgGroupSslvpnArgs{...}
type SystemReplacemsgGroupSslvpnInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupSslvpnOutput() SystemReplacemsgGroupSslvpnOutput
	ToSystemReplacemsgGroupSslvpnOutputWithContext(context.Context) SystemReplacemsgGroupSslvpnOutput
}

type SystemReplacemsgGroupSslvpnArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupSslvpn)(nil)).Elem()
}

func (i SystemReplacemsgGroupSslvpnArgs) ToSystemReplacemsgGroupSslvpnOutput() SystemReplacemsgGroupSslvpnOutput {
	return i.ToSystemReplacemsgGroupSslvpnOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupSslvpnArgs) ToSystemReplacemsgGroupSslvpnOutputWithContext(ctx context.Context) SystemReplacemsgGroupSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupSslvpnOutput)
}

func (i SystemReplacemsgGroupSslvpnArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupSslvpn] {
	return pulumix.Output[SystemReplacemsgGroupSslvpn]{
		OutputState: i.ToSystemReplacemsgGroupSslvpnOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupSslvpnArrayInput is an input type that accepts SystemReplacemsgGroupSslvpnArray and SystemReplacemsgGroupSslvpnArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupSslvpnArrayInput` via:
//
//	SystemReplacemsgGroupSslvpnArray{ SystemReplacemsgGroupSslvpnArgs{...} }
type SystemReplacemsgGroupSslvpnArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupSslvpnArrayOutput() SystemReplacemsgGroupSslvpnArrayOutput
	ToSystemReplacemsgGroupSslvpnArrayOutputWithContext(context.Context) SystemReplacemsgGroupSslvpnArrayOutput
}

type SystemReplacemsgGroupSslvpnArray []SystemReplacemsgGroupSslvpnInput

func (SystemReplacemsgGroupSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupSslvpn)(nil)).Elem()
}

func (i SystemReplacemsgGroupSslvpnArray) ToSystemReplacemsgGroupSslvpnArrayOutput() SystemReplacemsgGroupSslvpnArrayOutput {
	return i.ToSystemReplacemsgGroupSslvpnArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupSslvpnArray) ToSystemReplacemsgGroupSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupSslvpnArrayOutput)
}

func (i SystemReplacemsgGroupSslvpnArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupSslvpn] {
	return pulumix.Output[[]SystemReplacemsgGroupSslvpn]{
		OutputState: i.ToSystemReplacemsgGroupSslvpnArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupSslvpnOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupSslvpn)(nil)).Elem()
}

func (o SystemReplacemsgGroupSslvpnOutput) ToSystemReplacemsgGroupSslvpnOutput() SystemReplacemsgGroupSslvpnOutput {
	return o
}

func (o SystemReplacemsgGroupSslvpnOutput) ToSystemReplacemsgGroupSslvpnOutputWithContext(ctx context.Context) SystemReplacemsgGroupSslvpnOutput {
	return o
}

func (o SystemReplacemsgGroupSslvpnOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupSslvpn] {
	return pulumix.Output[SystemReplacemsgGroupSslvpn]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupSslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSslvpn) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSslvpnOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSslvpn) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSslvpnOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSslvpn) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupSslvpnOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupSslvpn) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupSslvpnArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupSslvpn)(nil)).Elem()
}

func (o SystemReplacemsgGroupSslvpnArrayOutput) ToSystemReplacemsgGroupSslvpnArrayOutput() SystemReplacemsgGroupSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsgGroupSslvpnArrayOutput) ToSystemReplacemsgGroupSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsgGroupSslvpnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupSslvpn] {
	return pulumix.Output[[]SystemReplacemsgGroupSslvpn]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupSslvpnArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupSslvpn {
		return vs[0].([]SystemReplacemsgGroupSslvpn)[vs[1].(int)]
	}).(SystemReplacemsgGroupSslvpnOutput)
}

type SystemReplacemsgGroupTrafficQuota struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupTrafficQuotaInput is an input type that accepts SystemReplacemsgGroupTrafficQuotaArgs and SystemReplacemsgGroupTrafficQuotaOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupTrafficQuotaInput` via:
//
//	SystemReplacemsgGroupTrafficQuotaArgs{...}
type SystemReplacemsgGroupTrafficQuotaInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupTrafficQuotaOutput() SystemReplacemsgGroupTrafficQuotaOutput
	ToSystemReplacemsgGroupTrafficQuotaOutputWithContext(context.Context) SystemReplacemsgGroupTrafficQuotaOutput
}

type SystemReplacemsgGroupTrafficQuotaArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupTrafficQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupTrafficQuota)(nil)).Elem()
}

func (i SystemReplacemsgGroupTrafficQuotaArgs) ToSystemReplacemsgGroupTrafficQuotaOutput() SystemReplacemsgGroupTrafficQuotaOutput {
	return i.ToSystemReplacemsgGroupTrafficQuotaOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupTrafficQuotaArgs) ToSystemReplacemsgGroupTrafficQuotaOutputWithContext(ctx context.Context) SystemReplacemsgGroupTrafficQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupTrafficQuotaOutput)
}

func (i SystemReplacemsgGroupTrafficQuotaArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupTrafficQuota] {
	return pulumix.Output[SystemReplacemsgGroupTrafficQuota]{
		OutputState: i.ToSystemReplacemsgGroupTrafficQuotaOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupTrafficQuotaArrayInput is an input type that accepts SystemReplacemsgGroupTrafficQuotaArray and SystemReplacemsgGroupTrafficQuotaArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupTrafficQuotaArrayInput` via:
//
//	SystemReplacemsgGroupTrafficQuotaArray{ SystemReplacemsgGroupTrafficQuotaArgs{...} }
type SystemReplacemsgGroupTrafficQuotaArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupTrafficQuotaArrayOutput() SystemReplacemsgGroupTrafficQuotaArrayOutput
	ToSystemReplacemsgGroupTrafficQuotaArrayOutputWithContext(context.Context) SystemReplacemsgGroupTrafficQuotaArrayOutput
}

type SystemReplacemsgGroupTrafficQuotaArray []SystemReplacemsgGroupTrafficQuotaInput

func (SystemReplacemsgGroupTrafficQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupTrafficQuota)(nil)).Elem()
}

func (i SystemReplacemsgGroupTrafficQuotaArray) ToSystemReplacemsgGroupTrafficQuotaArrayOutput() SystemReplacemsgGroupTrafficQuotaArrayOutput {
	return i.ToSystemReplacemsgGroupTrafficQuotaArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupTrafficQuotaArray) ToSystemReplacemsgGroupTrafficQuotaArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupTrafficQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupTrafficQuotaArrayOutput)
}

func (i SystemReplacemsgGroupTrafficQuotaArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupTrafficQuota] {
	return pulumix.Output[[]SystemReplacemsgGroupTrafficQuota]{
		OutputState: i.ToSystemReplacemsgGroupTrafficQuotaArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupTrafficQuotaOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupTrafficQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupTrafficQuota)(nil)).Elem()
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) ToSystemReplacemsgGroupTrafficQuotaOutput() SystemReplacemsgGroupTrafficQuotaOutput {
	return o
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) ToSystemReplacemsgGroupTrafficQuotaOutputWithContext(ctx context.Context) SystemReplacemsgGroupTrafficQuotaOutput {
	return o
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupTrafficQuota] {
	return pulumix.Output[SystemReplacemsgGroupTrafficQuota]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupTrafficQuota) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupTrafficQuota) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupTrafficQuota) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupTrafficQuotaOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupTrafficQuota) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupTrafficQuotaArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupTrafficQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupTrafficQuota)(nil)).Elem()
}

func (o SystemReplacemsgGroupTrafficQuotaArrayOutput) ToSystemReplacemsgGroupTrafficQuotaArrayOutput() SystemReplacemsgGroupTrafficQuotaArrayOutput {
	return o
}

func (o SystemReplacemsgGroupTrafficQuotaArrayOutput) ToSystemReplacemsgGroupTrafficQuotaArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupTrafficQuotaArrayOutput {
	return o
}

func (o SystemReplacemsgGroupTrafficQuotaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupTrafficQuota] {
	return pulumix.Output[[]SystemReplacemsgGroupTrafficQuota]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupTrafficQuotaArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupTrafficQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupTrafficQuota {
		return vs[0].([]SystemReplacemsgGroupTrafficQuota)[vs[1].(int)]
	}).(SystemReplacemsgGroupTrafficQuotaOutput)
}

type SystemReplacemsgGroupUtm struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupUtmInput is an input type that accepts SystemReplacemsgGroupUtmArgs and SystemReplacemsgGroupUtmOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupUtmInput` via:
//
//	SystemReplacemsgGroupUtmArgs{...}
type SystemReplacemsgGroupUtmInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupUtmOutput() SystemReplacemsgGroupUtmOutput
	ToSystemReplacemsgGroupUtmOutputWithContext(context.Context) SystemReplacemsgGroupUtmOutput
}

type SystemReplacemsgGroupUtmArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupUtmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupUtm)(nil)).Elem()
}

func (i SystemReplacemsgGroupUtmArgs) ToSystemReplacemsgGroupUtmOutput() SystemReplacemsgGroupUtmOutput {
	return i.ToSystemReplacemsgGroupUtmOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupUtmArgs) ToSystemReplacemsgGroupUtmOutputWithContext(ctx context.Context) SystemReplacemsgGroupUtmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupUtmOutput)
}

func (i SystemReplacemsgGroupUtmArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupUtm] {
	return pulumix.Output[SystemReplacemsgGroupUtm]{
		OutputState: i.ToSystemReplacemsgGroupUtmOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupUtmArrayInput is an input type that accepts SystemReplacemsgGroupUtmArray and SystemReplacemsgGroupUtmArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupUtmArrayInput` via:
//
//	SystemReplacemsgGroupUtmArray{ SystemReplacemsgGroupUtmArgs{...} }
type SystemReplacemsgGroupUtmArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupUtmArrayOutput() SystemReplacemsgGroupUtmArrayOutput
	ToSystemReplacemsgGroupUtmArrayOutputWithContext(context.Context) SystemReplacemsgGroupUtmArrayOutput
}

type SystemReplacemsgGroupUtmArray []SystemReplacemsgGroupUtmInput

func (SystemReplacemsgGroupUtmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupUtm)(nil)).Elem()
}

func (i SystemReplacemsgGroupUtmArray) ToSystemReplacemsgGroupUtmArrayOutput() SystemReplacemsgGroupUtmArrayOutput {
	return i.ToSystemReplacemsgGroupUtmArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupUtmArray) ToSystemReplacemsgGroupUtmArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupUtmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupUtmArrayOutput)
}

func (i SystemReplacemsgGroupUtmArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupUtm] {
	return pulumix.Output[[]SystemReplacemsgGroupUtm]{
		OutputState: i.ToSystemReplacemsgGroupUtmArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupUtmOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupUtmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupUtm)(nil)).Elem()
}

func (o SystemReplacemsgGroupUtmOutput) ToSystemReplacemsgGroupUtmOutput() SystemReplacemsgGroupUtmOutput {
	return o
}

func (o SystemReplacemsgGroupUtmOutput) ToSystemReplacemsgGroupUtmOutputWithContext(ctx context.Context) SystemReplacemsgGroupUtmOutput {
	return o
}

func (o SystemReplacemsgGroupUtmOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupUtm] {
	return pulumix.Output[SystemReplacemsgGroupUtm]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupUtmOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupUtm) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupUtmOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupUtm) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupUtmOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupUtm) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupUtmOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupUtm) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupUtmArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupUtmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupUtm)(nil)).Elem()
}

func (o SystemReplacemsgGroupUtmArrayOutput) ToSystemReplacemsgGroupUtmArrayOutput() SystemReplacemsgGroupUtmArrayOutput {
	return o
}

func (o SystemReplacemsgGroupUtmArrayOutput) ToSystemReplacemsgGroupUtmArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupUtmArrayOutput {
	return o
}

func (o SystemReplacemsgGroupUtmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupUtm] {
	return pulumix.Output[[]SystemReplacemsgGroupUtm]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupUtmArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupUtmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupUtm {
		return vs[0].([]SystemReplacemsgGroupUtm)[vs[1].(int)]
	}).(SystemReplacemsgGroupUtmOutput)
}

type SystemReplacemsgGroupWebproxy struct {
	Buffer  *string `pulumi:"buffer"`
	Format  *string `pulumi:"format"`
	Header  *string `pulumi:"header"`
	MsgType *string `pulumi:"msgType"`
}

// SystemReplacemsgGroupWebproxyInput is an input type that accepts SystemReplacemsgGroupWebproxyArgs and SystemReplacemsgGroupWebproxyOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupWebproxyInput` via:
//
//	SystemReplacemsgGroupWebproxyArgs{...}
type SystemReplacemsgGroupWebproxyInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupWebproxyOutput() SystemReplacemsgGroupWebproxyOutput
	ToSystemReplacemsgGroupWebproxyOutputWithContext(context.Context) SystemReplacemsgGroupWebproxyOutput
}

type SystemReplacemsgGroupWebproxyArgs struct {
	Buffer  pulumi.StringPtrInput `pulumi:"buffer"`
	Format  pulumi.StringPtrInput `pulumi:"format"`
	Header  pulumi.StringPtrInput `pulumi:"header"`
	MsgType pulumi.StringPtrInput `pulumi:"msgType"`
}

func (SystemReplacemsgGroupWebproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupWebproxy)(nil)).Elem()
}

func (i SystemReplacemsgGroupWebproxyArgs) ToSystemReplacemsgGroupWebproxyOutput() SystemReplacemsgGroupWebproxyOutput {
	return i.ToSystemReplacemsgGroupWebproxyOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupWebproxyArgs) ToSystemReplacemsgGroupWebproxyOutputWithContext(ctx context.Context) SystemReplacemsgGroupWebproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupWebproxyOutput)
}

func (i SystemReplacemsgGroupWebproxyArgs) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupWebproxy] {
	return pulumix.Output[SystemReplacemsgGroupWebproxy]{
		OutputState: i.ToSystemReplacemsgGroupWebproxyOutputWithContext(ctx).OutputState,
	}
}

// SystemReplacemsgGroupWebproxyArrayInput is an input type that accepts SystemReplacemsgGroupWebproxyArray and SystemReplacemsgGroupWebproxyArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgGroupWebproxyArrayInput` via:
//
//	SystemReplacemsgGroupWebproxyArray{ SystemReplacemsgGroupWebproxyArgs{...} }
type SystemReplacemsgGroupWebproxyArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgGroupWebproxyArrayOutput() SystemReplacemsgGroupWebproxyArrayOutput
	ToSystemReplacemsgGroupWebproxyArrayOutputWithContext(context.Context) SystemReplacemsgGroupWebproxyArrayOutput
}

type SystemReplacemsgGroupWebproxyArray []SystemReplacemsgGroupWebproxyInput

func (SystemReplacemsgGroupWebproxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupWebproxy)(nil)).Elem()
}

func (i SystemReplacemsgGroupWebproxyArray) ToSystemReplacemsgGroupWebproxyArrayOutput() SystemReplacemsgGroupWebproxyArrayOutput {
	return i.ToSystemReplacemsgGroupWebproxyArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgGroupWebproxyArray) ToSystemReplacemsgGroupWebproxyArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupWebproxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgGroupWebproxyArrayOutput)
}

func (i SystemReplacemsgGroupWebproxyArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupWebproxy] {
	return pulumix.Output[[]SystemReplacemsgGroupWebproxy]{
		OutputState: i.ToSystemReplacemsgGroupWebproxyArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemReplacemsgGroupWebproxyOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupWebproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemReplacemsgGroupWebproxy)(nil)).Elem()
}

func (o SystemReplacemsgGroupWebproxyOutput) ToSystemReplacemsgGroupWebproxyOutput() SystemReplacemsgGroupWebproxyOutput {
	return o
}

func (o SystemReplacemsgGroupWebproxyOutput) ToSystemReplacemsgGroupWebproxyOutputWithContext(ctx context.Context) SystemReplacemsgGroupWebproxyOutput {
	return o
}

func (o SystemReplacemsgGroupWebproxyOutput) ToOutput(ctx context.Context) pulumix.Output[SystemReplacemsgGroupWebproxy] {
	return pulumix.Output[SystemReplacemsgGroupWebproxy]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupWebproxyOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupWebproxy) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupWebproxyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupWebproxy) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupWebproxyOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupWebproxy) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgGroupWebproxyOutput) MsgType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemReplacemsgGroupWebproxy) *string { return v.MsgType }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgGroupWebproxyArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgGroupWebproxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemReplacemsgGroupWebproxy)(nil)).Elem()
}

func (o SystemReplacemsgGroupWebproxyArrayOutput) ToSystemReplacemsgGroupWebproxyArrayOutput() SystemReplacemsgGroupWebproxyArrayOutput {
	return o
}

func (o SystemReplacemsgGroupWebproxyArrayOutput) ToSystemReplacemsgGroupWebproxyArrayOutputWithContext(ctx context.Context) SystemReplacemsgGroupWebproxyArrayOutput {
	return o
}

func (o SystemReplacemsgGroupWebproxyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemReplacemsgGroupWebproxy] {
	return pulumix.Output[[]SystemReplacemsgGroupWebproxy]{
		OutputState: o.OutputState,
	}
}

func (o SystemReplacemsgGroupWebproxyArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgGroupWebproxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemReplacemsgGroupWebproxy {
		return vs[0].([]SystemReplacemsgGroupWebproxy)[vs[1].(int)]
	}).(SystemReplacemsgGroupWebproxyOutput)
}

type SystemSamlServiceProvider struct {
	AssertionAttributes []SystemSamlServiceProviderAssertionAttribute `pulumi:"assertionAttributes"`
	IdpEntityId         *string                                       `pulumi:"idpEntityId"`
	IdpSingleLogoutUrl  *string                                       `pulumi:"idpSingleLogoutUrl"`
	IdpSingleSignOnUrl  *string                                       `pulumi:"idpSingleSignOnUrl"`
	Name                *string                                       `pulumi:"name"`
	Prefix              *string                                       `pulumi:"prefix"`
	SpBindingProtocol   *string                                       `pulumi:"spBindingProtocol"`
	SpCert              *string                                       `pulumi:"spCert"`
	SpEntityId          *string                                       `pulumi:"spEntityId"`
	SpPortalUrl         *string                                       `pulumi:"spPortalUrl"`
	SpSingleLogoutUrl   *string                                       `pulumi:"spSingleLogoutUrl"`
	SpSingleSignOnUrl   *string                                       `pulumi:"spSingleSignOnUrl"`
}

// SystemSamlServiceProviderInput is an input type that accepts SystemSamlServiceProviderArgs and SystemSamlServiceProviderOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderInput` via:
//
//	SystemSamlServiceProviderArgs{...}
type SystemSamlServiceProviderInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput
	ToSystemSamlServiceProviderOutputWithContext(context.Context) SystemSamlServiceProviderOutput
}

type SystemSamlServiceProviderArgs struct {
	AssertionAttributes SystemSamlServiceProviderAssertionAttributeArrayInput `pulumi:"assertionAttributes"`
	IdpEntityId         pulumi.StringPtrInput                                 `pulumi:"idpEntityId"`
	IdpSingleLogoutUrl  pulumi.StringPtrInput                                 `pulumi:"idpSingleLogoutUrl"`
	IdpSingleSignOnUrl  pulumi.StringPtrInput                                 `pulumi:"idpSingleSignOnUrl"`
	Name                pulumi.StringPtrInput                                 `pulumi:"name"`
	Prefix              pulumi.StringPtrInput                                 `pulumi:"prefix"`
	SpBindingProtocol   pulumi.StringPtrInput                                 `pulumi:"spBindingProtocol"`
	SpCert              pulumi.StringPtrInput                                 `pulumi:"spCert"`
	SpEntityId          pulumi.StringPtrInput                                 `pulumi:"spEntityId"`
	SpPortalUrl         pulumi.StringPtrInput                                 `pulumi:"spPortalUrl"`
	SpSingleLogoutUrl   pulumi.StringPtrInput                                 `pulumi:"spSingleLogoutUrl"`
	SpSingleSignOnUrl   pulumi.StringPtrInput                                 `pulumi:"spSingleSignOnUrl"`
}

func (SystemSamlServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProvider)(nil)).Elem()
}

func (i SystemSamlServiceProviderArgs) ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput {
	return i.ToSystemSamlServiceProviderOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderArgs) ToSystemSamlServiceProviderOutputWithContext(ctx context.Context) SystemSamlServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderOutput)
}

func (i SystemSamlServiceProviderArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSamlServiceProvider] {
	return pulumix.Output[SystemSamlServiceProvider]{
		OutputState: i.ToSystemSamlServiceProviderOutputWithContext(ctx).OutputState,
	}
}

// SystemSamlServiceProviderArrayInput is an input type that accepts SystemSamlServiceProviderArray and SystemSamlServiceProviderArrayOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderArrayInput` via:
//
//	SystemSamlServiceProviderArray{ SystemSamlServiceProviderArgs{...} }
type SystemSamlServiceProviderArrayInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput
	ToSystemSamlServiceProviderArrayOutputWithContext(context.Context) SystemSamlServiceProviderArrayOutput
}

type SystemSamlServiceProviderArray []SystemSamlServiceProviderInput

func (SystemSamlServiceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProvider)(nil)).Elem()
}

func (i SystemSamlServiceProviderArray) ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput {
	return i.ToSystemSamlServiceProviderArrayOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderArray) ToSystemSamlServiceProviderArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderArrayOutput)
}

func (i SystemSamlServiceProviderArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSamlServiceProvider] {
	return pulumix.Output[[]SystemSamlServiceProvider]{
		OutputState: i.ToSystemSamlServiceProviderArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSamlServiceProviderOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProvider)(nil)).Elem()
}

func (o SystemSamlServiceProviderOutput) ToSystemSamlServiceProviderOutput() SystemSamlServiceProviderOutput {
	return o
}

func (o SystemSamlServiceProviderOutput) ToSystemSamlServiceProviderOutputWithContext(ctx context.Context) SystemSamlServiceProviderOutput {
	return o
}

func (o SystemSamlServiceProviderOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSamlServiceProvider] {
	return pulumix.Output[SystemSamlServiceProvider]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlServiceProviderOutput) AssertionAttributes() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) []SystemSamlServiceProviderAssertionAttribute {
		return v.AssertionAttributes
	}).(SystemSamlServiceProviderAssertionAttributeArrayOutput)
}

func (o SystemSamlServiceProviderOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpEntityId }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) IdpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) IdpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.IdpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpBindingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpBindingProtocol }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpCert }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpPortalUrl }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpSingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpSingleLogoutUrl }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderOutput) SpSingleSignOnUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProvider) *string { return v.SpSingleSignOnUrl }).(pulumi.StringPtrOutput)
}

type SystemSamlServiceProviderArrayOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProvider)(nil)).Elem()
}

func (o SystemSamlServiceProviderArrayOutput) ToSystemSamlServiceProviderArrayOutput() SystemSamlServiceProviderArrayOutput {
	return o
}

func (o SystemSamlServiceProviderArrayOutput) ToSystemSamlServiceProviderArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderArrayOutput {
	return o
}

func (o SystemSamlServiceProviderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSamlServiceProvider] {
	return pulumix.Output[[]SystemSamlServiceProvider]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlServiceProviderArrayOutput) Index(i pulumi.IntInput) SystemSamlServiceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSamlServiceProvider {
		return vs[0].([]SystemSamlServiceProvider)[vs[1].(int)]
	}).(SystemSamlServiceProviderOutput)
}

type SystemSamlServiceProviderAssertionAttribute struct {
	Name *string `pulumi:"name"`
	Type *string `pulumi:"type"`
}

// SystemSamlServiceProviderAssertionAttributeInput is an input type that accepts SystemSamlServiceProviderAssertionAttributeArgs and SystemSamlServiceProviderAssertionAttributeOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderAssertionAttributeInput` via:
//
//	SystemSamlServiceProviderAssertionAttributeArgs{...}
type SystemSamlServiceProviderAssertionAttributeInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput
	ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(context.Context) SystemSamlServiceProviderAssertionAttributeOutput
}

type SystemSamlServiceProviderAssertionAttributeArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SystemSamlServiceProviderAssertionAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SystemSamlServiceProviderAssertionAttributeArgs) ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput {
	return i.ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderAssertionAttributeArgs) ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderAssertionAttributeOutput)
}

func (i SystemSamlServiceProviderAssertionAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSamlServiceProviderAssertionAttribute] {
	return pulumix.Output[SystemSamlServiceProviderAssertionAttribute]{
		OutputState: i.ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(ctx).OutputState,
	}
}

// SystemSamlServiceProviderAssertionAttributeArrayInput is an input type that accepts SystemSamlServiceProviderAssertionAttributeArray and SystemSamlServiceProviderAssertionAttributeArrayOutput values.
// You can construct a concrete instance of `SystemSamlServiceProviderAssertionAttributeArrayInput` via:
//
//	SystemSamlServiceProviderAssertionAttributeArray{ SystemSamlServiceProviderAssertionAttributeArgs{...} }
type SystemSamlServiceProviderAssertionAttributeArrayInput interface {
	pulumi.Input

	ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput
	ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput
}

type SystemSamlServiceProviderAssertionAttributeArray []SystemSamlServiceProviderAssertionAttributeInput

func (SystemSamlServiceProviderAssertionAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (i SystemSamlServiceProviderAssertionAttributeArray) ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return i.ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(context.Background())
}

func (i SystemSamlServiceProviderAssertionAttributeArray) ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSamlServiceProviderAssertionAttributeArrayOutput)
}

func (i SystemSamlServiceProviderAssertionAttributeArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSamlServiceProviderAssertionAttribute] {
	return pulumix.Output[[]SystemSamlServiceProviderAssertionAttribute]{
		OutputState: i.ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSamlServiceProviderAssertionAttributeOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderAssertionAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) ToSystemSamlServiceProviderAssertionAttributeOutput() SystemSamlServiceProviderAssertionAttributeOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) ToSystemSamlServiceProviderAssertionAttributeOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSamlServiceProviderAssertionAttribute] {
	return pulumix.Output[SystemSamlServiceProviderAssertionAttribute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProviderAssertionAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSamlServiceProviderAssertionAttributeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSamlServiceProviderAssertionAttribute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SystemSamlServiceProviderAssertionAttributeArrayOutput struct{ *pulumi.OutputState }

func (SystemSamlServiceProviderAssertionAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSamlServiceProviderAssertionAttribute)(nil)).Elem()
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) ToSystemSamlServiceProviderAssertionAttributeArrayOutput() SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) ToSystemSamlServiceProviderAssertionAttributeArrayOutputWithContext(ctx context.Context) SystemSamlServiceProviderAssertionAttributeArrayOutput {
	return o
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSamlServiceProviderAssertionAttribute] {
	return pulumix.Output[[]SystemSamlServiceProviderAssertionAttribute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSamlServiceProviderAssertionAttributeArrayOutput) Index(i pulumi.IntInput) SystemSamlServiceProviderAssertionAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSamlServiceProviderAssertionAttribute {
		return vs[0].([]SystemSamlServiceProviderAssertionAttribute)[vs[1].(int)]
	}).(SystemSamlServiceProviderAssertionAttributeOutput)
}

type SystemSdnConnectorCompartmentList struct {
	CompartmentId *string `pulumi:"compartmentId"`
}

// SystemSdnConnectorCompartmentListInput is an input type that accepts SystemSdnConnectorCompartmentListArgs and SystemSdnConnectorCompartmentListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorCompartmentListInput` via:
//
//	SystemSdnConnectorCompartmentListArgs{...}
type SystemSdnConnectorCompartmentListInput interface {
	pulumi.Input

	ToSystemSdnConnectorCompartmentListOutput() SystemSdnConnectorCompartmentListOutput
	ToSystemSdnConnectorCompartmentListOutputWithContext(context.Context) SystemSdnConnectorCompartmentListOutput
}

type SystemSdnConnectorCompartmentListArgs struct {
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
}

func (SystemSdnConnectorCompartmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorCompartmentList)(nil)).Elem()
}

func (i SystemSdnConnectorCompartmentListArgs) ToSystemSdnConnectorCompartmentListOutput() SystemSdnConnectorCompartmentListOutput {
	return i.ToSystemSdnConnectorCompartmentListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorCompartmentListArgs) ToSystemSdnConnectorCompartmentListOutputWithContext(ctx context.Context) SystemSdnConnectorCompartmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorCompartmentListOutput)
}

func (i SystemSdnConnectorCompartmentListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorCompartmentList] {
	return pulumix.Output[SystemSdnConnectorCompartmentList]{
		OutputState: i.ToSystemSdnConnectorCompartmentListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorCompartmentListArrayInput is an input type that accepts SystemSdnConnectorCompartmentListArray and SystemSdnConnectorCompartmentListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorCompartmentListArrayInput` via:
//
//	SystemSdnConnectorCompartmentListArray{ SystemSdnConnectorCompartmentListArgs{...} }
type SystemSdnConnectorCompartmentListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorCompartmentListArrayOutput() SystemSdnConnectorCompartmentListArrayOutput
	ToSystemSdnConnectorCompartmentListArrayOutputWithContext(context.Context) SystemSdnConnectorCompartmentListArrayOutput
}

type SystemSdnConnectorCompartmentListArray []SystemSdnConnectorCompartmentListInput

func (SystemSdnConnectorCompartmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorCompartmentList)(nil)).Elem()
}

func (i SystemSdnConnectorCompartmentListArray) ToSystemSdnConnectorCompartmentListArrayOutput() SystemSdnConnectorCompartmentListArrayOutput {
	return i.ToSystemSdnConnectorCompartmentListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorCompartmentListArray) ToSystemSdnConnectorCompartmentListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorCompartmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorCompartmentListArrayOutput)
}

func (i SystemSdnConnectorCompartmentListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorCompartmentList] {
	return pulumix.Output[[]SystemSdnConnectorCompartmentList]{
		OutputState: i.ToSystemSdnConnectorCompartmentListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorCompartmentListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorCompartmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorCompartmentList)(nil)).Elem()
}

func (o SystemSdnConnectorCompartmentListOutput) ToSystemSdnConnectorCompartmentListOutput() SystemSdnConnectorCompartmentListOutput {
	return o
}

func (o SystemSdnConnectorCompartmentListOutput) ToSystemSdnConnectorCompartmentListOutputWithContext(ctx context.Context) SystemSdnConnectorCompartmentListOutput {
	return o
}

func (o SystemSdnConnectorCompartmentListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorCompartmentList] {
	return pulumix.Output[SystemSdnConnectorCompartmentList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorCompartmentListOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorCompartmentList) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorCompartmentListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorCompartmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorCompartmentList)(nil)).Elem()
}

func (o SystemSdnConnectorCompartmentListArrayOutput) ToSystemSdnConnectorCompartmentListArrayOutput() SystemSdnConnectorCompartmentListArrayOutput {
	return o
}

func (o SystemSdnConnectorCompartmentListArrayOutput) ToSystemSdnConnectorCompartmentListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorCompartmentListArrayOutput {
	return o
}

func (o SystemSdnConnectorCompartmentListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorCompartmentList] {
	return pulumix.Output[[]SystemSdnConnectorCompartmentList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorCompartmentListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorCompartmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorCompartmentList {
		return vs[0].([]SystemSdnConnectorCompartmentList)[vs[1].(int)]
	}).(SystemSdnConnectorCompartmentListOutput)
}

type SystemSdnConnectorExternalAccountList struct {
	ExternalId  *string                                           `pulumi:"externalId"`
	RegionLists []SystemSdnConnectorExternalAccountListRegionList `pulumi:"regionLists"`
	RoleArn     *string                                           `pulumi:"roleArn"`
}

// SystemSdnConnectorExternalAccountListInput is an input type that accepts SystemSdnConnectorExternalAccountListArgs and SystemSdnConnectorExternalAccountListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalAccountListInput` via:
//
//	SystemSdnConnectorExternalAccountListArgs{...}
type SystemSdnConnectorExternalAccountListInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalAccountListOutput() SystemSdnConnectorExternalAccountListOutput
	ToSystemSdnConnectorExternalAccountListOutputWithContext(context.Context) SystemSdnConnectorExternalAccountListOutput
}

type SystemSdnConnectorExternalAccountListArgs struct {
	ExternalId  pulumi.StringPtrInput                                     `pulumi:"externalId"`
	RegionLists SystemSdnConnectorExternalAccountListRegionListArrayInput `pulumi:"regionLists"`
	RoleArn     pulumi.StringPtrInput                                     `pulumi:"roleArn"`
}

func (SystemSdnConnectorExternalAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalAccountList)(nil)).Elem()
}

func (i SystemSdnConnectorExternalAccountListArgs) ToSystemSdnConnectorExternalAccountListOutput() SystemSdnConnectorExternalAccountListOutput {
	return i.ToSystemSdnConnectorExternalAccountListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalAccountListArgs) ToSystemSdnConnectorExternalAccountListOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalAccountListOutput)
}

func (i SystemSdnConnectorExternalAccountListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalAccountList] {
	return pulumix.Output[SystemSdnConnectorExternalAccountList]{
		OutputState: i.ToSystemSdnConnectorExternalAccountListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorExternalAccountListArrayInput is an input type that accepts SystemSdnConnectorExternalAccountListArray and SystemSdnConnectorExternalAccountListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalAccountListArrayInput` via:
//
//	SystemSdnConnectorExternalAccountListArray{ SystemSdnConnectorExternalAccountListArgs{...} }
type SystemSdnConnectorExternalAccountListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalAccountListArrayOutput() SystemSdnConnectorExternalAccountListArrayOutput
	ToSystemSdnConnectorExternalAccountListArrayOutputWithContext(context.Context) SystemSdnConnectorExternalAccountListArrayOutput
}

type SystemSdnConnectorExternalAccountListArray []SystemSdnConnectorExternalAccountListInput

func (SystemSdnConnectorExternalAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalAccountList)(nil)).Elem()
}

func (i SystemSdnConnectorExternalAccountListArray) ToSystemSdnConnectorExternalAccountListArrayOutput() SystemSdnConnectorExternalAccountListArrayOutput {
	return i.ToSystemSdnConnectorExternalAccountListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalAccountListArray) ToSystemSdnConnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalAccountListArrayOutput)
}

func (i SystemSdnConnectorExternalAccountListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalAccountList] {
	return pulumix.Output[[]SystemSdnConnectorExternalAccountList]{
		OutputState: i.ToSystemSdnConnectorExternalAccountListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorExternalAccountListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalAccountList)(nil)).Elem()
}

func (o SystemSdnConnectorExternalAccountListOutput) ToSystemSdnConnectorExternalAccountListOutput() SystemSdnConnectorExternalAccountListOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListOutput) ToSystemSdnConnectorExternalAccountListOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalAccountList] {
	return pulumix.Output[SystemSdnConnectorExternalAccountList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalAccountListOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorExternalAccountList) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorExternalAccountListOutput) RegionLists() SystemSdnConnectorExternalAccountListRegionListArrayOutput {
	return o.ApplyT(func(v SystemSdnConnectorExternalAccountList) []SystemSdnConnectorExternalAccountListRegionList {
		return v.RegionLists
	}).(SystemSdnConnectorExternalAccountListRegionListArrayOutput)
}

func (o SystemSdnConnectorExternalAccountListOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorExternalAccountList) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorExternalAccountListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalAccountList)(nil)).Elem()
}

func (o SystemSdnConnectorExternalAccountListArrayOutput) ToSystemSdnConnectorExternalAccountListArrayOutput() SystemSdnConnectorExternalAccountListArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListArrayOutput) ToSystemSdnConnectorExternalAccountListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalAccountList] {
	return pulumix.Output[[]SystemSdnConnectorExternalAccountList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalAccountListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorExternalAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorExternalAccountList {
		return vs[0].([]SystemSdnConnectorExternalAccountList)[vs[1].(int)]
	}).(SystemSdnConnectorExternalAccountListOutput)
}

type SystemSdnConnectorExternalAccountListRegionList struct {
	Region *string `pulumi:"region"`
}

// SystemSdnConnectorExternalAccountListRegionListInput is an input type that accepts SystemSdnConnectorExternalAccountListRegionListArgs and SystemSdnConnectorExternalAccountListRegionListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalAccountListRegionListInput` via:
//
//	SystemSdnConnectorExternalAccountListRegionListArgs{...}
type SystemSdnConnectorExternalAccountListRegionListInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalAccountListRegionListOutput() SystemSdnConnectorExternalAccountListRegionListOutput
	ToSystemSdnConnectorExternalAccountListRegionListOutputWithContext(context.Context) SystemSdnConnectorExternalAccountListRegionListOutput
}

type SystemSdnConnectorExternalAccountListRegionListArgs struct {
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (SystemSdnConnectorExternalAccountListRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SystemSdnConnectorExternalAccountListRegionListArgs) ToSystemSdnConnectorExternalAccountListRegionListOutput() SystemSdnConnectorExternalAccountListRegionListOutput {
	return i.ToSystemSdnConnectorExternalAccountListRegionListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalAccountListRegionListArgs) ToSystemSdnConnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalAccountListRegionListOutput)
}

func (i SystemSdnConnectorExternalAccountListRegionListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalAccountListRegionList] {
	return pulumix.Output[SystemSdnConnectorExternalAccountListRegionList]{
		OutputState: i.ToSystemSdnConnectorExternalAccountListRegionListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorExternalAccountListRegionListArrayInput is an input type that accepts SystemSdnConnectorExternalAccountListRegionListArray and SystemSdnConnectorExternalAccountListRegionListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalAccountListRegionListArrayInput` via:
//
//	SystemSdnConnectorExternalAccountListRegionListArray{ SystemSdnConnectorExternalAccountListRegionListArgs{...} }
type SystemSdnConnectorExternalAccountListRegionListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalAccountListRegionListArrayOutput() SystemSdnConnectorExternalAccountListRegionListArrayOutput
	ToSystemSdnConnectorExternalAccountListRegionListArrayOutputWithContext(context.Context) SystemSdnConnectorExternalAccountListRegionListArrayOutput
}

type SystemSdnConnectorExternalAccountListRegionListArray []SystemSdnConnectorExternalAccountListRegionListInput

func (SystemSdnConnectorExternalAccountListRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalAccountListRegionList)(nil)).Elem()
}

func (i SystemSdnConnectorExternalAccountListRegionListArray) ToSystemSdnConnectorExternalAccountListRegionListArrayOutput() SystemSdnConnectorExternalAccountListRegionListArrayOutput {
	return i.ToSystemSdnConnectorExternalAccountListRegionListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalAccountListRegionListArray) ToSystemSdnConnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalAccountListRegionListArrayOutput)
}

func (i SystemSdnConnectorExternalAccountListRegionListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalAccountListRegionList] {
	return pulumix.Output[[]SystemSdnConnectorExternalAccountListRegionList]{
		OutputState: i.ToSystemSdnConnectorExternalAccountListRegionListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorExternalAccountListRegionListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalAccountListRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SystemSdnConnectorExternalAccountListRegionListOutput) ToSystemSdnConnectorExternalAccountListRegionListOutput() SystemSdnConnectorExternalAccountListRegionListOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListRegionListOutput) ToSystemSdnConnectorExternalAccountListRegionListOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListRegionListOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListRegionListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalAccountListRegionList] {
	return pulumix.Output[SystemSdnConnectorExternalAccountListRegionList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalAccountListRegionListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorExternalAccountListRegionList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorExternalAccountListRegionListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalAccountListRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalAccountListRegionList)(nil)).Elem()
}

func (o SystemSdnConnectorExternalAccountListRegionListArrayOutput) ToSystemSdnConnectorExternalAccountListRegionListArrayOutput() SystemSdnConnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListRegionListArrayOutput) ToSystemSdnConnectorExternalAccountListRegionListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalAccountListRegionListArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalAccountListRegionListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalAccountListRegionList] {
	return pulumix.Output[[]SystemSdnConnectorExternalAccountListRegionList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalAccountListRegionListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorExternalAccountListRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorExternalAccountListRegionList {
		return vs[0].([]SystemSdnConnectorExternalAccountListRegionList)[vs[1].(int)]
	}).(SystemSdnConnectorExternalAccountListRegionListOutput)
}

type SystemSdnConnectorExternalIp struct {
	Name *string `pulumi:"name"`
}

// SystemSdnConnectorExternalIpInput is an input type that accepts SystemSdnConnectorExternalIpArgs and SystemSdnConnectorExternalIpOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalIpInput` via:
//
//	SystemSdnConnectorExternalIpArgs{...}
type SystemSdnConnectorExternalIpInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalIpOutput() SystemSdnConnectorExternalIpOutput
	ToSystemSdnConnectorExternalIpOutputWithContext(context.Context) SystemSdnConnectorExternalIpOutput
}

type SystemSdnConnectorExternalIpArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnConnectorExternalIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalIp)(nil)).Elem()
}

func (i SystemSdnConnectorExternalIpArgs) ToSystemSdnConnectorExternalIpOutput() SystemSdnConnectorExternalIpOutput {
	return i.ToSystemSdnConnectorExternalIpOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalIpArgs) ToSystemSdnConnectorExternalIpOutputWithContext(ctx context.Context) SystemSdnConnectorExternalIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalIpOutput)
}

func (i SystemSdnConnectorExternalIpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalIp] {
	return pulumix.Output[SystemSdnConnectorExternalIp]{
		OutputState: i.ToSystemSdnConnectorExternalIpOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorExternalIpArrayInput is an input type that accepts SystemSdnConnectorExternalIpArray and SystemSdnConnectorExternalIpArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorExternalIpArrayInput` via:
//
//	SystemSdnConnectorExternalIpArray{ SystemSdnConnectorExternalIpArgs{...} }
type SystemSdnConnectorExternalIpArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorExternalIpArrayOutput() SystemSdnConnectorExternalIpArrayOutput
	ToSystemSdnConnectorExternalIpArrayOutputWithContext(context.Context) SystemSdnConnectorExternalIpArrayOutput
}

type SystemSdnConnectorExternalIpArray []SystemSdnConnectorExternalIpInput

func (SystemSdnConnectorExternalIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalIp)(nil)).Elem()
}

func (i SystemSdnConnectorExternalIpArray) ToSystemSdnConnectorExternalIpArrayOutput() SystemSdnConnectorExternalIpArrayOutput {
	return i.ToSystemSdnConnectorExternalIpArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorExternalIpArray) ToSystemSdnConnectorExternalIpArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorExternalIpArrayOutput)
}

func (i SystemSdnConnectorExternalIpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalIp] {
	return pulumix.Output[[]SystemSdnConnectorExternalIp]{
		OutputState: i.ToSystemSdnConnectorExternalIpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorExternalIpOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorExternalIp)(nil)).Elem()
}

func (o SystemSdnConnectorExternalIpOutput) ToSystemSdnConnectorExternalIpOutput() SystemSdnConnectorExternalIpOutput {
	return o
}

func (o SystemSdnConnectorExternalIpOutput) ToSystemSdnConnectorExternalIpOutputWithContext(ctx context.Context) SystemSdnConnectorExternalIpOutput {
	return o
}

func (o SystemSdnConnectorExternalIpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorExternalIp] {
	return pulumix.Output[SystemSdnConnectorExternalIp]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorExternalIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorExternalIpArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorExternalIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorExternalIp)(nil)).Elem()
}

func (o SystemSdnConnectorExternalIpArrayOutput) ToSystemSdnConnectorExternalIpArrayOutput() SystemSdnConnectorExternalIpArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalIpArrayOutput) ToSystemSdnConnectorExternalIpArrayOutputWithContext(ctx context.Context) SystemSdnConnectorExternalIpArrayOutput {
	return o
}

func (o SystemSdnConnectorExternalIpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorExternalIp] {
	return pulumix.Output[[]SystemSdnConnectorExternalIp]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorExternalIpArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorExternalIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorExternalIp {
		return vs[0].([]SystemSdnConnectorExternalIp)[vs[1].(int)]
	}).(SystemSdnConnectorExternalIpOutput)
}

type SystemSdnConnectorForwardingRule struct {
	RuleName *string `pulumi:"ruleName"`
	Target   *string `pulumi:"target"`
}

// SystemSdnConnectorForwardingRuleInput is an input type that accepts SystemSdnConnectorForwardingRuleArgs and SystemSdnConnectorForwardingRuleOutput values.
// You can construct a concrete instance of `SystemSdnConnectorForwardingRuleInput` via:
//
//	SystemSdnConnectorForwardingRuleArgs{...}
type SystemSdnConnectorForwardingRuleInput interface {
	pulumi.Input

	ToSystemSdnConnectorForwardingRuleOutput() SystemSdnConnectorForwardingRuleOutput
	ToSystemSdnConnectorForwardingRuleOutputWithContext(context.Context) SystemSdnConnectorForwardingRuleOutput
}

type SystemSdnConnectorForwardingRuleArgs struct {
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	Target   pulumi.StringPtrInput `pulumi:"target"`
}

func (SystemSdnConnectorForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorForwardingRule)(nil)).Elem()
}

func (i SystemSdnConnectorForwardingRuleArgs) ToSystemSdnConnectorForwardingRuleOutput() SystemSdnConnectorForwardingRuleOutput {
	return i.ToSystemSdnConnectorForwardingRuleOutputWithContext(context.Background())
}

func (i SystemSdnConnectorForwardingRuleArgs) ToSystemSdnConnectorForwardingRuleOutputWithContext(ctx context.Context) SystemSdnConnectorForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorForwardingRuleOutput)
}

func (i SystemSdnConnectorForwardingRuleArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorForwardingRule] {
	return pulumix.Output[SystemSdnConnectorForwardingRule]{
		OutputState: i.ToSystemSdnConnectorForwardingRuleOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorForwardingRuleArrayInput is an input type that accepts SystemSdnConnectorForwardingRuleArray and SystemSdnConnectorForwardingRuleArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorForwardingRuleArrayInput` via:
//
//	SystemSdnConnectorForwardingRuleArray{ SystemSdnConnectorForwardingRuleArgs{...} }
type SystemSdnConnectorForwardingRuleArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorForwardingRuleArrayOutput() SystemSdnConnectorForwardingRuleArrayOutput
	ToSystemSdnConnectorForwardingRuleArrayOutputWithContext(context.Context) SystemSdnConnectorForwardingRuleArrayOutput
}

type SystemSdnConnectorForwardingRuleArray []SystemSdnConnectorForwardingRuleInput

func (SystemSdnConnectorForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorForwardingRule)(nil)).Elem()
}

func (i SystemSdnConnectorForwardingRuleArray) ToSystemSdnConnectorForwardingRuleArrayOutput() SystemSdnConnectorForwardingRuleArrayOutput {
	return i.ToSystemSdnConnectorForwardingRuleArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorForwardingRuleArray) ToSystemSdnConnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SystemSdnConnectorForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorForwardingRuleArrayOutput)
}

func (i SystemSdnConnectorForwardingRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorForwardingRule] {
	return pulumix.Output[[]SystemSdnConnectorForwardingRule]{
		OutputState: i.ToSystemSdnConnectorForwardingRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorForwardingRuleOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorForwardingRule)(nil)).Elem()
}

func (o SystemSdnConnectorForwardingRuleOutput) ToSystemSdnConnectorForwardingRuleOutput() SystemSdnConnectorForwardingRuleOutput {
	return o
}

func (o SystemSdnConnectorForwardingRuleOutput) ToSystemSdnConnectorForwardingRuleOutputWithContext(ctx context.Context) SystemSdnConnectorForwardingRuleOutput {
	return o
}

func (o SystemSdnConnectorForwardingRuleOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorForwardingRule] {
	return pulumix.Output[SystemSdnConnectorForwardingRule]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorForwardingRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorForwardingRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorForwardingRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorForwardingRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorForwardingRule)(nil)).Elem()
}

func (o SystemSdnConnectorForwardingRuleArrayOutput) ToSystemSdnConnectorForwardingRuleArrayOutput() SystemSdnConnectorForwardingRuleArrayOutput {
	return o
}

func (o SystemSdnConnectorForwardingRuleArrayOutput) ToSystemSdnConnectorForwardingRuleArrayOutputWithContext(ctx context.Context) SystemSdnConnectorForwardingRuleArrayOutput {
	return o
}

func (o SystemSdnConnectorForwardingRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorForwardingRule] {
	return pulumix.Output[[]SystemSdnConnectorForwardingRule]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorForwardingRuleArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorForwardingRule {
		return vs[0].([]SystemSdnConnectorForwardingRule)[vs[1].(int)]
	}).(SystemSdnConnectorForwardingRuleOutput)
}

type SystemSdnConnectorGcpProjectList struct {
	GcpZoneLists []SystemSdnConnectorGcpProjectListGcpZoneList `pulumi:"gcpZoneLists"`
	Id           *string                                       `pulumi:"id"`
}

// SystemSdnConnectorGcpProjectListInput is an input type that accepts SystemSdnConnectorGcpProjectListArgs and SystemSdnConnectorGcpProjectListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorGcpProjectListInput` via:
//
//	SystemSdnConnectorGcpProjectListArgs{...}
type SystemSdnConnectorGcpProjectListInput interface {
	pulumi.Input

	ToSystemSdnConnectorGcpProjectListOutput() SystemSdnConnectorGcpProjectListOutput
	ToSystemSdnConnectorGcpProjectListOutputWithContext(context.Context) SystemSdnConnectorGcpProjectListOutput
}

type SystemSdnConnectorGcpProjectListArgs struct {
	GcpZoneLists SystemSdnConnectorGcpProjectListGcpZoneListArrayInput `pulumi:"gcpZoneLists"`
	Id           pulumi.StringPtrInput                                 `pulumi:"id"`
}

func (SystemSdnConnectorGcpProjectListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorGcpProjectList)(nil)).Elem()
}

func (i SystemSdnConnectorGcpProjectListArgs) ToSystemSdnConnectorGcpProjectListOutput() SystemSdnConnectorGcpProjectListOutput {
	return i.ToSystemSdnConnectorGcpProjectListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorGcpProjectListArgs) ToSystemSdnConnectorGcpProjectListOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorGcpProjectListOutput)
}

func (i SystemSdnConnectorGcpProjectListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorGcpProjectList] {
	return pulumix.Output[SystemSdnConnectorGcpProjectList]{
		OutputState: i.ToSystemSdnConnectorGcpProjectListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorGcpProjectListArrayInput is an input type that accepts SystemSdnConnectorGcpProjectListArray and SystemSdnConnectorGcpProjectListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorGcpProjectListArrayInput` via:
//
//	SystemSdnConnectorGcpProjectListArray{ SystemSdnConnectorGcpProjectListArgs{...} }
type SystemSdnConnectorGcpProjectListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorGcpProjectListArrayOutput() SystemSdnConnectorGcpProjectListArrayOutput
	ToSystemSdnConnectorGcpProjectListArrayOutputWithContext(context.Context) SystemSdnConnectorGcpProjectListArrayOutput
}

type SystemSdnConnectorGcpProjectListArray []SystemSdnConnectorGcpProjectListInput

func (SystemSdnConnectorGcpProjectListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorGcpProjectList)(nil)).Elem()
}

func (i SystemSdnConnectorGcpProjectListArray) ToSystemSdnConnectorGcpProjectListArrayOutput() SystemSdnConnectorGcpProjectListArrayOutput {
	return i.ToSystemSdnConnectorGcpProjectListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorGcpProjectListArray) ToSystemSdnConnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorGcpProjectListArrayOutput)
}

func (i SystemSdnConnectorGcpProjectListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorGcpProjectList] {
	return pulumix.Output[[]SystemSdnConnectorGcpProjectList]{
		OutputState: i.ToSystemSdnConnectorGcpProjectListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorGcpProjectListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorGcpProjectListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorGcpProjectList)(nil)).Elem()
}

func (o SystemSdnConnectorGcpProjectListOutput) ToSystemSdnConnectorGcpProjectListOutput() SystemSdnConnectorGcpProjectListOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListOutput) ToSystemSdnConnectorGcpProjectListOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorGcpProjectList] {
	return pulumix.Output[SystemSdnConnectorGcpProjectList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorGcpProjectListOutput) GcpZoneLists() SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput {
	return o.ApplyT(func(v SystemSdnConnectorGcpProjectList) []SystemSdnConnectorGcpProjectListGcpZoneList {
		return v.GcpZoneLists
	}).(SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput)
}

func (o SystemSdnConnectorGcpProjectListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorGcpProjectList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorGcpProjectListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorGcpProjectListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorGcpProjectList)(nil)).Elem()
}

func (o SystemSdnConnectorGcpProjectListArrayOutput) ToSystemSdnConnectorGcpProjectListArrayOutput() SystemSdnConnectorGcpProjectListArrayOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListArrayOutput) ToSystemSdnConnectorGcpProjectListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListArrayOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorGcpProjectList] {
	return pulumix.Output[[]SystemSdnConnectorGcpProjectList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorGcpProjectListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorGcpProjectListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorGcpProjectList {
		return vs[0].([]SystemSdnConnectorGcpProjectList)[vs[1].(int)]
	}).(SystemSdnConnectorGcpProjectListOutput)
}

type SystemSdnConnectorGcpProjectListGcpZoneList struct {
	Name *string `pulumi:"name"`
}

// SystemSdnConnectorGcpProjectListGcpZoneListInput is an input type that accepts SystemSdnConnectorGcpProjectListGcpZoneListArgs and SystemSdnConnectorGcpProjectListGcpZoneListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorGcpProjectListGcpZoneListInput` via:
//
//	SystemSdnConnectorGcpProjectListGcpZoneListArgs{...}
type SystemSdnConnectorGcpProjectListGcpZoneListInput interface {
	pulumi.Input

	ToSystemSdnConnectorGcpProjectListGcpZoneListOutput() SystemSdnConnectorGcpProjectListGcpZoneListOutput
	ToSystemSdnConnectorGcpProjectListGcpZoneListOutputWithContext(context.Context) SystemSdnConnectorGcpProjectListGcpZoneListOutput
}

type SystemSdnConnectorGcpProjectListGcpZoneListArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnConnectorGcpProjectListGcpZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArgs) ToSystemSdnConnectorGcpProjectListGcpZoneListOutput() SystemSdnConnectorGcpProjectListGcpZoneListOutput {
	return i.ToSystemSdnConnectorGcpProjectListGcpZoneListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArgs) ToSystemSdnConnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListGcpZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorGcpProjectListGcpZoneListOutput)
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorGcpProjectListGcpZoneList] {
	return pulumix.Output[SystemSdnConnectorGcpProjectListGcpZoneList]{
		OutputState: i.ToSystemSdnConnectorGcpProjectListGcpZoneListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorGcpProjectListGcpZoneListArrayInput is an input type that accepts SystemSdnConnectorGcpProjectListGcpZoneListArray and SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorGcpProjectListGcpZoneListArrayInput` via:
//
//	SystemSdnConnectorGcpProjectListGcpZoneListArray{ SystemSdnConnectorGcpProjectListGcpZoneListArgs{...} }
type SystemSdnConnectorGcpProjectListGcpZoneListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput
	ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Context) SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput
}

type SystemSdnConnectorGcpProjectListGcpZoneListArray []SystemSdnConnectorGcpProjectListGcpZoneListInput

func (SystemSdnConnectorGcpProjectListGcpZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArray) ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput {
	return i.ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArray) ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput)
}

func (i SystemSdnConnectorGcpProjectListGcpZoneListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorGcpProjectListGcpZoneList] {
	return pulumix.Output[[]SystemSdnConnectorGcpProjectListGcpZoneList]{
		OutputState: i.ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorGcpProjectListGcpZoneListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorGcpProjectListGcpZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListOutput) ToSystemSdnConnectorGcpProjectListGcpZoneListOutput() SystemSdnConnectorGcpProjectListGcpZoneListOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListOutput) ToSystemSdnConnectorGcpProjectListGcpZoneListOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListGcpZoneListOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorGcpProjectListGcpZoneList] {
	return pulumix.Output[SystemSdnConnectorGcpProjectListGcpZoneList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorGcpProjectListGcpZoneList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorGcpProjectListGcpZoneList)(nil)).Elem()
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput) ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutput() SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput) ToSystemSdnConnectorGcpProjectListGcpZoneListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput {
	return o
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorGcpProjectListGcpZoneList] {
	return pulumix.Output[[]SystemSdnConnectorGcpProjectListGcpZoneList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorGcpProjectListGcpZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorGcpProjectListGcpZoneList {
		return vs[0].([]SystemSdnConnectorGcpProjectListGcpZoneList)[vs[1].(int)]
	}).(SystemSdnConnectorGcpProjectListGcpZoneListOutput)
}

type SystemSdnConnectorNic struct {
	Ips  []SystemSdnConnectorNicIp `pulumi:"ips"`
	Name *string                   `pulumi:"name"`
}

// SystemSdnConnectorNicInput is an input type that accepts SystemSdnConnectorNicArgs and SystemSdnConnectorNicOutput values.
// You can construct a concrete instance of `SystemSdnConnectorNicInput` via:
//
//	SystemSdnConnectorNicArgs{...}
type SystemSdnConnectorNicInput interface {
	pulumi.Input

	ToSystemSdnConnectorNicOutput() SystemSdnConnectorNicOutput
	ToSystemSdnConnectorNicOutputWithContext(context.Context) SystemSdnConnectorNicOutput
}

type SystemSdnConnectorNicArgs struct {
	Ips  SystemSdnConnectorNicIpArrayInput `pulumi:"ips"`
	Name pulumi.StringPtrInput             `pulumi:"name"`
}

func (SystemSdnConnectorNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorNic)(nil)).Elem()
}

func (i SystemSdnConnectorNicArgs) ToSystemSdnConnectorNicOutput() SystemSdnConnectorNicOutput {
	return i.ToSystemSdnConnectorNicOutputWithContext(context.Background())
}

func (i SystemSdnConnectorNicArgs) ToSystemSdnConnectorNicOutputWithContext(ctx context.Context) SystemSdnConnectorNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorNicOutput)
}

func (i SystemSdnConnectorNicArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorNic] {
	return pulumix.Output[SystemSdnConnectorNic]{
		OutputState: i.ToSystemSdnConnectorNicOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorNicArrayInput is an input type that accepts SystemSdnConnectorNicArray and SystemSdnConnectorNicArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorNicArrayInput` via:
//
//	SystemSdnConnectorNicArray{ SystemSdnConnectorNicArgs{...} }
type SystemSdnConnectorNicArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorNicArrayOutput() SystemSdnConnectorNicArrayOutput
	ToSystemSdnConnectorNicArrayOutputWithContext(context.Context) SystemSdnConnectorNicArrayOutput
}

type SystemSdnConnectorNicArray []SystemSdnConnectorNicInput

func (SystemSdnConnectorNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorNic)(nil)).Elem()
}

func (i SystemSdnConnectorNicArray) ToSystemSdnConnectorNicArrayOutput() SystemSdnConnectorNicArrayOutput {
	return i.ToSystemSdnConnectorNicArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorNicArray) ToSystemSdnConnectorNicArrayOutputWithContext(ctx context.Context) SystemSdnConnectorNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorNicArrayOutput)
}

func (i SystemSdnConnectorNicArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorNic] {
	return pulumix.Output[[]SystemSdnConnectorNic]{
		OutputState: i.ToSystemSdnConnectorNicArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorNicOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorNic)(nil)).Elem()
}

func (o SystemSdnConnectorNicOutput) ToSystemSdnConnectorNicOutput() SystemSdnConnectorNicOutput {
	return o
}

func (o SystemSdnConnectorNicOutput) ToSystemSdnConnectorNicOutputWithContext(ctx context.Context) SystemSdnConnectorNicOutput {
	return o
}

func (o SystemSdnConnectorNicOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorNic] {
	return pulumix.Output[SystemSdnConnectorNic]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorNicOutput) Ips() SystemSdnConnectorNicIpArrayOutput {
	return o.ApplyT(func(v SystemSdnConnectorNic) []SystemSdnConnectorNicIp { return v.Ips }).(SystemSdnConnectorNicIpArrayOutput)
}

func (o SystemSdnConnectorNicOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorNic) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorNicArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorNic)(nil)).Elem()
}

func (o SystemSdnConnectorNicArrayOutput) ToSystemSdnConnectorNicArrayOutput() SystemSdnConnectorNicArrayOutput {
	return o
}

func (o SystemSdnConnectorNicArrayOutput) ToSystemSdnConnectorNicArrayOutputWithContext(ctx context.Context) SystemSdnConnectorNicArrayOutput {
	return o
}

func (o SystemSdnConnectorNicArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorNic] {
	return pulumix.Output[[]SystemSdnConnectorNic]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorNicArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorNic {
		return vs[0].([]SystemSdnConnectorNic)[vs[1].(int)]
	}).(SystemSdnConnectorNicOutput)
}

type SystemSdnConnectorNicIp struct {
	Name          *string `pulumi:"name"`
	PublicIp      *string `pulumi:"publicIp"`
	ResourceGroup *string `pulumi:"resourceGroup"`
}

// SystemSdnConnectorNicIpInput is an input type that accepts SystemSdnConnectorNicIpArgs and SystemSdnConnectorNicIpOutput values.
// You can construct a concrete instance of `SystemSdnConnectorNicIpInput` via:
//
//	SystemSdnConnectorNicIpArgs{...}
type SystemSdnConnectorNicIpInput interface {
	pulumi.Input

	ToSystemSdnConnectorNicIpOutput() SystemSdnConnectorNicIpOutput
	ToSystemSdnConnectorNicIpOutputWithContext(context.Context) SystemSdnConnectorNicIpOutput
}

type SystemSdnConnectorNicIpArgs struct {
	Name          pulumi.StringPtrInput `pulumi:"name"`
	PublicIp      pulumi.StringPtrInput `pulumi:"publicIp"`
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
}

func (SystemSdnConnectorNicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorNicIp)(nil)).Elem()
}

func (i SystemSdnConnectorNicIpArgs) ToSystemSdnConnectorNicIpOutput() SystemSdnConnectorNicIpOutput {
	return i.ToSystemSdnConnectorNicIpOutputWithContext(context.Background())
}

func (i SystemSdnConnectorNicIpArgs) ToSystemSdnConnectorNicIpOutputWithContext(ctx context.Context) SystemSdnConnectorNicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorNicIpOutput)
}

func (i SystemSdnConnectorNicIpArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorNicIp] {
	return pulumix.Output[SystemSdnConnectorNicIp]{
		OutputState: i.ToSystemSdnConnectorNicIpOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorNicIpArrayInput is an input type that accepts SystemSdnConnectorNicIpArray and SystemSdnConnectorNicIpArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorNicIpArrayInput` via:
//
//	SystemSdnConnectorNicIpArray{ SystemSdnConnectorNicIpArgs{...} }
type SystemSdnConnectorNicIpArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorNicIpArrayOutput() SystemSdnConnectorNicIpArrayOutput
	ToSystemSdnConnectorNicIpArrayOutputWithContext(context.Context) SystemSdnConnectorNicIpArrayOutput
}

type SystemSdnConnectorNicIpArray []SystemSdnConnectorNicIpInput

func (SystemSdnConnectorNicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorNicIp)(nil)).Elem()
}

func (i SystemSdnConnectorNicIpArray) ToSystemSdnConnectorNicIpArrayOutput() SystemSdnConnectorNicIpArrayOutput {
	return i.ToSystemSdnConnectorNicIpArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorNicIpArray) ToSystemSdnConnectorNicIpArrayOutputWithContext(ctx context.Context) SystemSdnConnectorNicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorNicIpArrayOutput)
}

func (i SystemSdnConnectorNicIpArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorNicIp] {
	return pulumix.Output[[]SystemSdnConnectorNicIp]{
		OutputState: i.ToSystemSdnConnectorNicIpArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorNicIpOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorNicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorNicIp)(nil)).Elem()
}

func (o SystemSdnConnectorNicIpOutput) ToSystemSdnConnectorNicIpOutput() SystemSdnConnectorNicIpOutput {
	return o
}

func (o SystemSdnConnectorNicIpOutput) ToSystemSdnConnectorNicIpOutputWithContext(ctx context.Context) SystemSdnConnectorNicIpOutput {
	return o
}

func (o SystemSdnConnectorNicIpOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorNicIp] {
	return pulumix.Output[SystemSdnConnectorNicIp]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorNicIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorNicIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorNicIpOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorNicIp) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorNicIpOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorNicIp) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorNicIpArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorNicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorNicIp)(nil)).Elem()
}

func (o SystemSdnConnectorNicIpArrayOutput) ToSystemSdnConnectorNicIpArrayOutput() SystemSdnConnectorNicIpArrayOutput {
	return o
}

func (o SystemSdnConnectorNicIpArrayOutput) ToSystemSdnConnectorNicIpArrayOutputWithContext(ctx context.Context) SystemSdnConnectorNicIpArrayOutput {
	return o
}

func (o SystemSdnConnectorNicIpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorNicIp] {
	return pulumix.Output[[]SystemSdnConnectorNicIp]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorNicIpArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorNicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorNicIp {
		return vs[0].([]SystemSdnConnectorNicIp)[vs[1].(int)]
	}).(SystemSdnConnectorNicIpOutput)
}

type SystemSdnConnectorOciRegionList struct {
	Region *string `pulumi:"region"`
}

// SystemSdnConnectorOciRegionListInput is an input type that accepts SystemSdnConnectorOciRegionListArgs and SystemSdnConnectorOciRegionListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorOciRegionListInput` via:
//
//	SystemSdnConnectorOciRegionListArgs{...}
type SystemSdnConnectorOciRegionListInput interface {
	pulumi.Input

	ToSystemSdnConnectorOciRegionListOutput() SystemSdnConnectorOciRegionListOutput
	ToSystemSdnConnectorOciRegionListOutputWithContext(context.Context) SystemSdnConnectorOciRegionListOutput
}

type SystemSdnConnectorOciRegionListArgs struct {
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (SystemSdnConnectorOciRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorOciRegionList)(nil)).Elem()
}

func (i SystemSdnConnectorOciRegionListArgs) ToSystemSdnConnectorOciRegionListOutput() SystemSdnConnectorOciRegionListOutput {
	return i.ToSystemSdnConnectorOciRegionListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorOciRegionListArgs) ToSystemSdnConnectorOciRegionListOutputWithContext(ctx context.Context) SystemSdnConnectorOciRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorOciRegionListOutput)
}

func (i SystemSdnConnectorOciRegionListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorOciRegionList] {
	return pulumix.Output[SystemSdnConnectorOciRegionList]{
		OutputState: i.ToSystemSdnConnectorOciRegionListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorOciRegionListArrayInput is an input type that accepts SystemSdnConnectorOciRegionListArray and SystemSdnConnectorOciRegionListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorOciRegionListArrayInput` via:
//
//	SystemSdnConnectorOciRegionListArray{ SystemSdnConnectorOciRegionListArgs{...} }
type SystemSdnConnectorOciRegionListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorOciRegionListArrayOutput() SystemSdnConnectorOciRegionListArrayOutput
	ToSystemSdnConnectorOciRegionListArrayOutputWithContext(context.Context) SystemSdnConnectorOciRegionListArrayOutput
}

type SystemSdnConnectorOciRegionListArray []SystemSdnConnectorOciRegionListInput

func (SystemSdnConnectorOciRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorOciRegionList)(nil)).Elem()
}

func (i SystemSdnConnectorOciRegionListArray) ToSystemSdnConnectorOciRegionListArrayOutput() SystemSdnConnectorOciRegionListArrayOutput {
	return i.ToSystemSdnConnectorOciRegionListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorOciRegionListArray) ToSystemSdnConnectorOciRegionListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorOciRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorOciRegionListArrayOutput)
}

func (i SystemSdnConnectorOciRegionListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorOciRegionList] {
	return pulumix.Output[[]SystemSdnConnectorOciRegionList]{
		OutputState: i.ToSystemSdnConnectorOciRegionListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorOciRegionListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorOciRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorOciRegionList)(nil)).Elem()
}

func (o SystemSdnConnectorOciRegionListOutput) ToSystemSdnConnectorOciRegionListOutput() SystemSdnConnectorOciRegionListOutput {
	return o
}

func (o SystemSdnConnectorOciRegionListOutput) ToSystemSdnConnectorOciRegionListOutputWithContext(ctx context.Context) SystemSdnConnectorOciRegionListOutput {
	return o
}

func (o SystemSdnConnectorOciRegionListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorOciRegionList] {
	return pulumix.Output[SystemSdnConnectorOciRegionList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorOciRegionListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorOciRegionList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorOciRegionListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorOciRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorOciRegionList)(nil)).Elem()
}

func (o SystemSdnConnectorOciRegionListArrayOutput) ToSystemSdnConnectorOciRegionListArrayOutput() SystemSdnConnectorOciRegionListArrayOutput {
	return o
}

func (o SystemSdnConnectorOciRegionListArrayOutput) ToSystemSdnConnectorOciRegionListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorOciRegionListArrayOutput {
	return o
}

func (o SystemSdnConnectorOciRegionListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorOciRegionList] {
	return pulumix.Output[[]SystemSdnConnectorOciRegionList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorOciRegionListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorOciRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorOciRegionList {
		return vs[0].([]SystemSdnConnectorOciRegionList)[vs[1].(int)]
	}).(SystemSdnConnectorOciRegionListOutput)
}

type SystemSdnConnectorRoute struct {
	Name *string `pulumi:"name"`
}

// SystemSdnConnectorRouteInput is an input type that accepts SystemSdnConnectorRouteArgs and SystemSdnConnectorRouteOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteInput` via:
//
//	SystemSdnConnectorRouteArgs{...}
type SystemSdnConnectorRouteInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteOutput() SystemSdnConnectorRouteOutput
	ToSystemSdnConnectorRouteOutputWithContext(context.Context) SystemSdnConnectorRouteOutput
}

type SystemSdnConnectorRouteArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdnConnectorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRoute)(nil)).Elem()
}

func (i SystemSdnConnectorRouteArgs) ToSystemSdnConnectorRouteOutput() SystemSdnConnectorRouteOutput {
	return i.ToSystemSdnConnectorRouteOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteArgs) ToSystemSdnConnectorRouteOutputWithContext(ctx context.Context) SystemSdnConnectorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteOutput)
}

func (i SystemSdnConnectorRouteArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRoute] {
	return pulumix.Output[SystemSdnConnectorRoute]{
		OutputState: i.ToSystemSdnConnectorRouteOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorRouteArrayInput is an input type that accepts SystemSdnConnectorRouteArray and SystemSdnConnectorRouteArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteArrayInput` via:
//
//	SystemSdnConnectorRouteArray{ SystemSdnConnectorRouteArgs{...} }
type SystemSdnConnectorRouteArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteArrayOutput() SystemSdnConnectorRouteArrayOutput
	ToSystemSdnConnectorRouteArrayOutputWithContext(context.Context) SystemSdnConnectorRouteArrayOutput
}

type SystemSdnConnectorRouteArray []SystemSdnConnectorRouteInput

func (SystemSdnConnectorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRoute)(nil)).Elem()
}

func (i SystemSdnConnectorRouteArray) ToSystemSdnConnectorRouteArrayOutput() SystemSdnConnectorRouteArrayOutput {
	return i.ToSystemSdnConnectorRouteArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteArray) ToSystemSdnConnectorRouteArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteArrayOutput)
}

func (i SystemSdnConnectorRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRoute] {
	return pulumix.Output[[]SystemSdnConnectorRoute]{
		OutputState: i.ToSystemSdnConnectorRouteArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorRouteOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRoute)(nil)).Elem()
}

func (o SystemSdnConnectorRouteOutput) ToSystemSdnConnectorRouteOutput() SystemSdnConnectorRouteOutput {
	return o
}

func (o SystemSdnConnectorRouteOutput) ToSystemSdnConnectorRouteOutputWithContext(ctx context.Context) SystemSdnConnectorRouteOutput {
	return o
}

func (o SystemSdnConnectorRouteOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRoute] {
	return pulumix.Output[SystemSdnConnectorRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRoute)(nil)).Elem()
}

func (o SystemSdnConnectorRouteArrayOutput) ToSystemSdnConnectorRouteArrayOutput() SystemSdnConnectorRouteArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteArrayOutput) ToSystemSdnConnectorRouteArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRoute] {
	return pulumix.Output[[]SystemSdnConnectorRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorRoute {
		return vs[0].([]SystemSdnConnectorRoute)[vs[1].(int)]
	}).(SystemSdnConnectorRouteOutput)
}

type SystemSdnConnectorRouteTable struct {
	Name           *string                             `pulumi:"name"`
	ResourceGroup  *string                             `pulumi:"resourceGroup"`
	Routes         []SystemSdnConnectorRouteTableRoute `pulumi:"routes"`
	SubscriptionId *string                             `pulumi:"subscriptionId"`
}

// SystemSdnConnectorRouteTableInput is an input type that accepts SystemSdnConnectorRouteTableArgs and SystemSdnConnectorRouteTableOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteTableInput` via:
//
//	SystemSdnConnectorRouteTableArgs{...}
type SystemSdnConnectorRouteTableInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteTableOutput() SystemSdnConnectorRouteTableOutput
	ToSystemSdnConnectorRouteTableOutputWithContext(context.Context) SystemSdnConnectorRouteTableOutput
}

type SystemSdnConnectorRouteTableArgs struct {
	Name           pulumi.StringPtrInput                       `pulumi:"name"`
	ResourceGroup  pulumi.StringPtrInput                       `pulumi:"resourceGroup"`
	Routes         SystemSdnConnectorRouteTableRouteArrayInput `pulumi:"routes"`
	SubscriptionId pulumi.StringPtrInput                       `pulumi:"subscriptionId"`
}

func (SystemSdnConnectorRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRouteTable)(nil)).Elem()
}

func (i SystemSdnConnectorRouteTableArgs) ToSystemSdnConnectorRouteTableOutput() SystemSdnConnectorRouteTableOutput {
	return i.ToSystemSdnConnectorRouteTableOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteTableArgs) ToSystemSdnConnectorRouteTableOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteTableOutput)
}

func (i SystemSdnConnectorRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRouteTable] {
	return pulumix.Output[SystemSdnConnectorRouteTable]{
		OutputState: i.ToSystemSdnConnectorRouteTableOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorRouteTableArrayInput is an input type that accepts SystemSdnConnectorRouteTableArray and SystemSdnConnectorRouteTableArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteTableArrayInput` via:
//
//	SystemSdnConnectorRouteTableArray{ SystemSdnConnectorRouteTableArgs{...} }
type SystemSdnConnectorRouteTableArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteTableArrayOutput() SystemSdnConnectorRouteTableArrayOutput
	ToSystemSdnConnectorRouteTableArrayOutputWithContext(context.Context) SystemSdnConnectorRouteTableArrayOutput
}

type SystemSdnConnectorRouteTableArray []SystemSdnConnectorRouteTableInput

func (SystemSdnConnectorRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRouteTable)(nil)).Elem()
}

func (i SystemSdnConnectorRouteTableArray) ToSystemSdnConnectorRouteTableArrayOutput() SystemSdnConnectorRouteTableArrayOutput {
	return i.ToSystemSdnConnectorRouteTableArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteTableArray) ToSystemSdnConnectorRouteTableArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteTableArrayOutput)
}

func (i SystemSdnConnectorRouteTableArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRouteTable] {
	return pulumix.Output[[]SystemSdnConnectorRouteTable]{
		OutputState: i.ToSystemSdnConnectorRouteTableArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorRouteTableOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRouteTable)(nil)).Elem()
}

func (o SystemSdnConnectorRouteTableOutput) ToSystemSdnConnectorRouteTableOutput() SystemSdnConnectorRouteTableOutput {
	return o
}

func (o SystemSdnConnectorRouteTableOutput) ToSystemSdnConnectorRouteTableOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableOutput {
	return o
}

func (o SystemSdnConnectorRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRouteTable] {
	return pulumix.Output[SystemSdnConnectorRouteTable]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteTableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorRouteTableOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTable) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorRouteTableOutput) Routes() SystemSdnConnectorRouteTableRouteArrayOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTable) []SystemSdnConnectorRouteTableRoute { return v.Routes }).(SystemSdnConnectorRouteTableRouteArrayOutput)
}

func (o SystemSdnConnectorRouteTableOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTable) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorRouteTableArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRouteTable)(nil)).Elem()
}

func (o SystemSdnConnectorRouteTableArrayOutput) ToSystemSdnConnectorRouteTableArrayOutput() SystemSdnConnectorRouteTableArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteTableArrayOutput) ToSystemSdnConnectorRouteTableArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteTableArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRouteTable] {
	return pulumix.Output[[]SystemSdnConnectorRouteTable]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteTableArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorRouteTable {
		return vs[0].([]SystemSdnConnectorRouteTable)[vs[1].(int)]
	}).(SystemSdnConnectorRouteTableOutput)
}

type SystemSdnConnectorRouteTableRoute struct {
	Name    *string `pulumi:"name"`
	NextHop *string `pulumi:"nextHop"`
}

// SystemSdnConnectorRouteTableRouteInput is an input type that accepts SystemSdnConnectorRouteTableRouteArgs and SystemSdnConnectorRouteTableRouteOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteTableRouteInput` via:
//
//	SystemSdnConnectorRouteTableRouteArgs{...}
type SystemSdnConnectorRouteTableRouteInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteTableRouteOutput() SystemSdnConnectorRouteTableRouteOutput
	ToSystemSdnConnectorRouteTableRouteOutputWithContext(context.Context) SystemSdnConnectorRouteTableRouteOutput
}

type SystemSdnConnectorRouteTableRouteArgs struct {
	Name    pulumi.StringPtrInput `pulumi:"name"`
	NextHop pulumi.StringPtrInput `pulumi:"nextHop"`
}

func (SystemSdnConnectorRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRouteTableRoute)(nil)).Elem()
}

func (i SystemSdnConnectorRouteTableRouteArgs) ToSystemSdnConnectorRouteTableRouteOutput() SystemSdnConnectorRouteTableRouteOutput {
	return i.ToSystemSdnConnectorRouteTableRouteOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteTableRouteArgs) ToSystemSdnConnectorRouteTableRouteOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteTableRouteOutput)
}

func (i SystemSdnConnectorRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRouteTableRoute] {
	return pulumix.Output[SystemSdnConnectorRouteTableRoute]{
		OutputState: i.ToSystemSdnConnectorRouteTableRouteOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorRouteTableRouteArrayInput is an input type that accepts SystemSdnConnectorRouteTableRouteArray and SystemSdnConnectorRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorRouteTableRouteArrayInput` via:
//
//	SystemSdnConnectorRouteTableRouteArray{ SystemSdnConnectorRouteTableRouteArgs{...} }
type SystemSdnConnectorRouteTableRouteArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorRouteTableRouteArrayOutput() SystemSdnConnectorRouteTableRouteArrayOutput
	ToSystemSdnConnectorRouteTableRouteArrayOutputWithContext(context.Context) SystemSdnConnectorRouteTableRouteArrayOutput
}

type SystemSdnConnectorRouteTableRouteArray []SystemSdnConnectorRouteTableRouteInput

func (SystemSdnConnectorRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRouteTableRoute)(nil)).Elem()
}

func (i SystemSdnConnectorRouteTableRouteArray) ToSystemSdnConnectorRouteTableRouteArrayOutput() SystemSdnConnectorRouteTableRouteArrayOutput {
	return i.ToSystemSdnConnectorRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorRouteTableRouteArray) ToSystemSdnConnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorRouteTableRouteArrayOutput)
}

func (i SystemSdnConnectorRouteTableRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRouteTableRoute] {
	return pulumix.Output[[]SystemSdnConnectorRouteTableRoute]{
		OutputState: i.ToSystemSdnConnectorRouteTableRouteArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorRouteTableRouteOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorRouteTableRoute)(nil)).Elem()
}

func (o SystemSdnConnectorRouteTableRouteOutput) ToSystemSdnConnectorRouteTableRouteOutput() SystemSdnConnectorRouteTableRouteOutput {
	return o
}

func (o SystemSdnConnectorRouteTableRouteOutput) ToSystemSdnConnectorRouteTableRouteOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableRouteOutput {
	return o
}

func (o SystemSdnConnectorRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorRouteTableRoute] {
	return pulumix.Output[SystemSdnConnectorRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteTableRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTableRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdnConnectorRouteTableRouteOutput) NextHop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorRouteTableRoute) *string { return v.NextHop }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorRouteTableRoute)(nil)).Elem()
}

func (o SystemSdnConnectorRouteTableRouteArrayOutput) ToSystemSdnConnectorRouteTableRouteArrayOutput() SystemSdnConnectorRouteTableRouteArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteTableRouteArrayOutput) ToSystemSdnConnectorRouteTableRouteArrayOutputWithContext(ctx context.Context) SystemSdnConnectorRouteTableRouteArrayOutput {
	return o
}

func (o SystemSdnConnectorRouteTableRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorRouteTableRoute] {
	return pulumix.Output[[]SystemSdnConnectorRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorRouteTableRouteArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorRouteTableRoute {
		return vs[0].([]SystemSdnConnectorRouteTableRoute)[vs[1].(int)]
	}).(SystemSdnConnectorRouteTableRouteOutput)
}

type SystemSdnConnectorServerList struct {
	Ip *string `pulumi:"ip"`
}

// SystemSdnConnectorServerListInput is an input type that accepts SystemSdnConnectorServerListArgs and SystemSdnConnectorServerListOutput values.
// You can construct a concrete instance of `SystemSdnConnectorServerListInput` via:
//
//	SystemSdnConnectorServerListArgs{...}
type SystemSdnConnectorServerListInput interface {
	pulumi.Input

	ToSystemSdnConnectorServerListOutput() SystemSdnConnectorServerListOutput
	ToSystemSdnConnectorServerListOutputWithContext(context.Context) SystemSdnConnectorServerListOutput
}

type SystemSdnConnectorServerListArgs struct {
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (SystemSdnConnectorServerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorServerList)(nil)).Elem()
}

func (i SystemSdnConnectorServerListArgs) ToSystemSdnConnectorServerListOutput() SystemSdnConnectorServerListOutput {
	return i.ToSystemSdnConnectorServerListOutputWithContext(context.Background())
}

func (i SystemSdnConnectorServerListArgs) ToSystemSdnConnectorServerListOutputWithContext(ctx context.Context) SystemSdnConnectorServerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorServerListOutput)
}

func (i SystemSdnConnectorServerListArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorServerList] {
	return pulumix.Output[SystemSdnConnectorServerList]{
		OutputState: i.ToSystemSdnConnectorServerListOutputWithContext(ctx).OutputState,
	}
}

// SystemSdnConnectorServerListArrayInput is an input type that accepts SystemSdnConnectorServerListArray and SystemSdnConnectorServerListArrayOutput values.
// You can construct a concrete instance of `SystemSdnConnectorServerListArrayInput` via:
//
//	SystemSdnConnectorServerListArray{ SystemSdnConnectorServerListArgs{...} }
type SystemSdnConnectorServerListArrayInput interface {
	pulumi.Input

	ToSystemSdnConnectorServerListArrayOutput() SystemSdnConnectorServerListArrayOutput
	ToSystemSdnConnectorServerListArrayOutputWithContext(context.Context) SystemSdnConnectorServerListArrayOutput
}

type SystemSdnConnectorServerListArray []SystemSdnConnectorServerListInput

func (SystemSdnConnectorServerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorServerList)(nil)).Elem()
}

func (i SystemSdnConnectorServerListArray) ToSystemSdnConnectorServerListArrayOutput() SystemSdnConnectorServerListArrayOutput {
	return i.ToSystemSdnConnectorServerListArrayOutputWithContext(context.Background())
}

func (i SystemSdnConnectorServerListArray) ToSystemSdnConnectorServerListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorServerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdnConnectorServerListArrayOutput)
}

func (i SystemSdnConnectorServerListArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorServerList] {
	return pulumix.Output[[]SystemSdnConnectorServerList]{
		OutputState: i.ToSystemSdnConnectorServerListArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdnConnectorServerListOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorServerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdnConnectorServerList)(nil)).Elem()
}

func (o SystemSdnConnectorServerListOutput) ToSystemSdnConnectorServerListOutput() SystemSdnConnectorServerListOutput {
	return o
}

func (o SystemSdnConnectorServerListOutput) ToSystemSdnConnectorServerListOutputWithContext(ctx context.Context) SystemSdnConnectorServerListOutput {
	return o
}

func (o SystemSdnConnectorServerListOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdnConnectorServerList] {
	return pulumix.Output[SystemSdnConnectorServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorServerListOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdnConnectorServerList) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type SystemSdnConnectorServerListArrayOutput struct{ *pulumi.OutputState }

func (SystemSdnConnectorServerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdnConnectorServerList)(nil)).Elem()
}

func (o SystemSdnConnectorServerListArrayOutput) ToSystemSdnConnectorServerListArrayOutput() SystemSdnConnectorServerListArrayOutput {
	return o
}

func (o SystemSdnConnectorServerListArrayOutput) ToSystemSdnConnectorServerListArrayOutputWithContext(ctx context.Context) SystemSdnConnectorServerListArrayOutput {
	return o
}

func (o SystemSdnConnectorServerListArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdnConnectorServerList] {
	return pulumix.Output[[]SystemSdnConnectorServerList]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdnConnectorServerListArrayOutput) Index(i pulumi.IntInput) SystemSdnConnectorServerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdnConnectorServerList {
		return vs[0].([]SystemSdnConnectorServerList)[vs[1].(int)]
	}).(SystemSdnConnectorServerListOutput)
}

type SystemSdwanDuplication struct {
	Dstaddr6s           []SystemSdwanDuplicationDstaddr6  `pulumi:"dstaddr6s"`
	Dstaddrs            []SystemSdwanDuplicationDstaddr   `pulumi:"dstaddrs"`
	Dstintfs            []SystemSdwanDuplicationDstintf   `pulumi:"dstintfs"`
	Id                  *int                              `pulumi:"id"`
	PacketDeDuplication *string                           `pulumi:"packetDeDuplication"`
	PacketDuplication   *string                           `pulumi:"packetDuplication"`
	ServiceIds          []SystemSdwanDuplicationServiceId `pulumi:"serviceIds"`
	Services            []SystemSdwanDuplicationService   `pulumi:"services"`
	SlaMatchService     *string                           `pulumi:"slaMatchService"`
	Srcaddr6s           []SystemSdwanDuplicationSrcaddr6  `pulumi:"srcaddr6s"`
	Srcaddrs            []SystemSdwanDuplicationSrcaddr   `pulumi:"srcaddrs"`
	Srcintfs            []SystemSdwanDuplicationSrcintf   `pulumi:"srcintfs"`
}

// SystemSdwanDuplicationInput is an input type that accepts SystemSdwanDuplicationArgs and SystemSdwanDuplicationOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationInput` via:
//
//	SystemSdwanDuplicationArgs{...}
type SystemSdwanDuplicationInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput
	ToSystemSdwanDuplicationOutputWithContext(context.Context) SystemSdwanDuplicationOutput
}

type SystemSdwanDuplicationArgs struct {
	Dstaddr6s           SystemSdwanDuplicationDstaddr6ArrayInput  `pulumi:"dstaddr6s"`
	Dstaddrs            SystemSdwanDuplicationDstaddrArrayInput   `pulumi:"dstaddrs"`
	Dstintfs            SystemSdwanDuplicationDstintfArrayInput   `pulumi:"dstintfs"`
	Id                  pulumi.IntPtrInput                        `pulumi:"id"`
	PacketDeDuplication pulumi.StringPtrInput                     `pulumi:"packetDeDuplication"`
	PacketDuplication   pulumi.StringPtrInput                     `pulumi:"packetDuplication"`
	ServiceIds          SystemSdwanDuplicationServiceIdArrayInput `pulumi:"serviceIds"`
	Services            SystemSdwanDuplicationServiceArrayInput   `pulumi:"services"`
	SlaMatchService     pulumi.StringPtrInput                     `pulumi:"slaMatchService"`
	Srcaddr6s           SystemSdwanDuplicationSrcaddr6ArrayInput  `pulumi:"srcaddr6s"`
	Srcaddrs            SystemSdwanDuplicationSrcaddrArrayInput   `pulumi:"srcaddrs"`
	Srcintfs            SystemSdwanDuplicationSrcintfArrayInput   `pulumi:"srcintfs"`
}

func (SystemSdwanDuplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplication)(nil)).Elem()
}

func (i SystemSdwanDuplicationArgs) ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput {
	return i.ToSystemSdwanDuplicationOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationArgs) ToSystemSdwanDuplicationOutputWithContext(ctx context.Context) SystemSdwanDuplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationOutput)
}

func (i SystemSdwanDuplicationArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplication] {
	return pulumix.Output[SystemSdwanDuplication]{
		OutputState: i.ToSystemSdwanDuplicationOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationArrayInput is an input type that accepts SystemSdwanDuplicationArray and SystemSdwanDuplicationArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationArrayInput` via:
//
//	SystemSdwanDuplicationArray{ SystemSdwanDuplicationArgs{...} }
type SystemSdwanDuplicationArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput
	ToSystemSdwanDuplicationArrayOutputWithContext(context.Context) SystemSdwanDuplicationArrayOutput
}

type SystemSdwanDuplicationArray []SystemSdwanDuplicationInput

func (SystemSdwanDuplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplication)(nil)).Elem()
}

func (i SystemSdwanDuplicationArray) ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput {
	return i.ToSystemSdwanDuplicationArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationArray) ToSystemSdwanDuplicationArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationArrayOutput)
}

func (i SystemSdwanDuplicationArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplication] {
	return pulumix.Output[[]SystemSdwanDuplication]{
		OutputState: i.ToSystemSdwanDuplicationArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplication)(nil)).Elem()
}

func (o SystemSdwanDuplicationOutput) ToSystemSdwanDuplicationOutput() SystemSdwanDuplicationOutput {
	return o
}

func (o SystemSdwanDuplicationOutput) ToSystemSdwanDuplicationOutputWithContext(ctx context.Context) SystemSdwanDuplicationOutput {
	return o
}

func (o SystemSdwanDuplicationOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplication] {
	return pulumix.Output[SystemSdwanDuplication]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationOutput) Dstaddr6s() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstaddr6 { return v.Dstaddr6s }).(SystemSdwanDuplicationDstaddr6ArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Dstaddrs() SystemSdwanDuplicationDstaddrArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstaddr { return v.Dstaddrs }).(SystemSdwanDuplicationDstaddrArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Dstintfs() SystemSdwanDuplicationDstintfArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationDstintf { return v.Dstintfs }).(SystemSdwanDuplicationDstintfArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanDuplicationOutput) PacketDeDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.PacketDeDuplication }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanDuplicationOutput) PacketDuplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.PacketDuplication }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanDuplicationOutput) ServiceIds() SystemSdwanDuplicationServiceIdArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationServiceId { return v.ServiceIds }).(SystemSdwanDuplicationServiceIdArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Services() SystemSdwanDuplicationServiceArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationService { return v.Services }).(SystemSdwanDuplicationServiceArrayOutput)
}

func (o SystemSdwanDuplicationOutput) SlaMatchService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) *string { return v.SlaMatchService }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanDuplicationOutput) Srcaddr6s() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcaddr6 { return v.Srcaddr6s }).(SystemSdwanDuplicationSrcaddr6ArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Srcaddrs() SystemSdwanDuplicationSrcaddrArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcaddr { return v.Srcaddrs }).(SystemSdwanDuplicationSrcaddrArrayOutput)
}

func (o SystemSdwanDuplicationOutput) Srcintfs() SystemSdwanDuplicationSrcintfArrayOutput {
	return o.ApplyT(func(v SystemSdwanDuplication) []SystemSdwanDuplicationSrcintf { return v.Srcintfs }).(SystemSdwanDuplicationSrcintfArrayOutput)
}

type SystemSdwanDuplicationArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplication)(nil)).Elem()
}

func (o SystemSdwanDuplicationArrayOutput) ToSystemSdwanDuplicationArrayOutput() SystemSdwanDuplicationArrayOutput {
	return o
}

func (o SystemSdwanDuplicationArrayOutput) ToSystemSdwanDuplicationArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationArrayOutput {
	return o
}

func (o SystemSdwanDuplicationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplication] {
	return pulumix.Output[[]SystemSdwanDuplication]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplication {
		return vs[0].([]SystemSdwanDuplication)[vs[1].(int)]
	}).(SystemSdwanDuplicationOutput)
}

type SystemSdwanDuplicationDstaddr6 struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstaddr6Input is an input type that accepts SystemSdwanDuplicationDstaddr6Args and SystemSdwanDuplicationDstaddr6Output values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddr6Input` via:
//
//	SystemSdwanDuplicationDstaddr6Args{...}
type SystemSdwanDuplicationDstaddr6Input interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output
	ToSystemSdwanDuplicationDstaddr6OutputWithContext(context.Context) SystemSdwanDuplicationDstaddr6Output
}

type SystemSdwanDuplicationDstaddr6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddr6Args) ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output {
	return i.ToSystemSdwanDuplicationDstaddr6OutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddr6Args) ToSystemSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddr6Output)
}

func (i SystemSdwanDuplicationDstaddr6Args) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstaddr6] {
	return pulumix.Output[SystemSdwanDuplicationDstaddr6]{
		OutputState: i.ToSystemSdwanDuplicationDstaddr6OutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationDstaddr6ArrayInput is an input type that accepts SystemSdwanDuplicationDstaddr6Array and SystemSdwanDuplicationDstaddr6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddr6ArrayInput` via:
//
//	SystemSdwanDuplicationDstaddr6Array{ SystemSdwanDuplicationDstaddr6Args{...} }
type SystemSdwanDuplicationDstaddr6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput
	ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput
}

type SystemSdwanDuplicationDstaddr6Array []SystemSdwanDuplicationDstaddr6Input

func (SystemSdwanDuplicationDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddr6Array) ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return i.ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddr6Array) ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddr6ArrayOutput)
}

func (i SystemSdwanDuplicationDstaddr6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstaddr6] {
	return pulumix.Output[[]SystemSdwanDuplicationDstaddr6]{
		OutputState: i.ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationDstaddr6Output struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddr6Output) ToSystemSdwanDuplicationDstaddr6Output() SystemSdwanDuplicationDstaddr6Output {
	return o
}

func (o SystemSdwanDuplicationDstaddr6Output) ToSystemSdwanDuplicationDstaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6Output {
	return o
}

func (o SystemSdwanDuplicationDstaddr6Output) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstaddr6] {
	return pulumix.Output[SystemSdwanDuplicationDstaddr6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) ToSystemSdwanDuplicationDstaddr6ArrayOutput() SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) ToSystemSdwanDuplicationDstaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstaddr6] {
	return pulumix.Output[[]SystemSdwanDuplicationDstaddr6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstaddr6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstaddr6 {
		return vs[0].([]SystemSdwanDuplicationDstaddr6)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstaddr6Output)
}

type SystemSdwanDuplicationDstaddr struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstaddrInput is an input type that accepts SystemSdwanDuplicationDstaddrArgs and SystemSdwanDuplicationDstaddrOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddrInput` via:
//
//	SystemSdwanDuplicationDstaddrArgs{...}
type SystemSdwanDuplicationDstaddrInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput
	ToSystemSdwanDuplicationDstaddrOutputWithContext(context.Context) SystemSdwanDuplicationDstaddrOutput
}

type SystemSdwanDuplicationDstaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddrArgs) ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput {
	return i.ToSystemSdwanDuplicationDstaddrOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddrArgs) ToSystemSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddrOutput)
}

func (i SystemSdwanDuplicationDstaddrArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstaddr] {
	return pulumix.Output[SystemSdwanDuplicationDstaddr]{
		OutputState: i.ToSystemSdwanDuplicationDstaddrOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationDstaddrArrayInput is an input type that accepts SystemSdwanDuplicationDstaddrArray and SystemSdwanDuplicationDstaddrArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstaddrArrayInput` via:
//
//	SystemSdwanDuplicationDstaddrArray{ SystemSdwanDuplicationDstaddrArgs{...} }
type SystemSdwanDuplicationDstaddrArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput
	ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstaddrArrayOutput
}

type SystemSdwanDuplicationDstaddrArray []SystemSdwanDuplicationDstaddrInput

func (SystemSdwanDuplicationDstaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstaddrArray) ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput {
	return i.ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstaddrArray) ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstaddrArrayOutput)
}

func (i SystemSdwanDuplicationDstaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstaddr] {
	return pulumix.Output[[]SystemSdwanDuplicationDstaddr]{
		OutputState: i.ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationDstaddrOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddrOutput) ToSystemSdwanDuplicationDstaddrOutput() SystemSdwanDuplicationDstaddrOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrOutput) ToSystemSdwanDuplicationDstaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstaddr] {
	return pulumix.Output[SystemSdwanDuplicationDstaddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstaddrArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) ToSystemSdwanDuplicationDstaddrArrayOutput() SystemSdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) ToSystemSdwanDuplicationDstaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstaddr] {
	return pulumix.Output[[]SystemSdwanDuplicationDstaddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstaddrArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstaddr {
		return vs[0].([]SystemSdwanDuplicationDstaddr)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstaddrOutput)
}

type SystemSdwanDuplicationDstintf struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationDstintfInput is an input type that accepts SystemSdwanDuplicationDstintfArgs and SystemSdwanDuplicationDstintfOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstintfInput` via:
//
//	SystemSdwanDuplicationDstintfArgs{...}
type SystemSdwanDuplicationDstintfInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput
	ToSystemSdwanDuplicationDstintfOutputWithContext(context.Context) SystemSdwanDuplicationDstintfOutput
}

type SystemSdwanDuplicationDstintfArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstintfArgs) ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput {
	return i.ToSystemSdwanDuplicationDstintfOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstintfArgs) ToSystemSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstintfOutput)
}

func (i SystemSdwanDuplicationDstintfArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstintf] {
	return pulumix.Output[SystemSdwanDuplicationDstintf]{
		OutputState: i.ToSystemSdwanDuplicationDstintfOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationDstintfArrayInput is an input type that accepts SystemSdwanDuplicationDstintfArray and SystemSdwanDuplicationDstintfArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationDstintfArrayInput` via:
//
//	SystemSdwanDuplicationDstintfArray{ SystemSdwanDuplicationDstintfArgs{...} }
type SystemSdwanDuplicationDstintfArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput
	ToSystemSdwanDuplicationDstintfArrayOutputWithContext(context.Context) SystemSdwanDuplicationDstintfArrayOutput
}

type SystemSdwanDuplicationDstintfArray []SystemSdwanDuplicationDstintfInput

func (SystemSdwanDuplicationDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationDstintfArray) ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput {
	return i.ToSystemSdwanDuplicationDstintfArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationDstintfArray) ToSystemSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationDstintfArrayOutput)
}

func (i SystemSdwanDuplicationDstintfArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstintf] {
	return pulumix.Output[[]SystemSdwanDuplicationDstintf]{
		OutputState: i.ToSystemSdwanDuplicationDstintfArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationDstintfOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstintfOutput) ToSystemSdwanDuplicationDstintfOutput() SystemSdwanDuplicationDstintfOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfOutput) ToSystemSdwanDuplicationDstintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationDstintf] {
	return pulumix.Output[SystemSdwanDuplicationDstintf]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationDstintfArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationDstintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationDstintfArrayOutput) ToSystemSdwanDuplicationDstintfArrayOutput() SystemSdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfArrayOutput) ToSystemSdwanDuplicationDstintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationDstintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationDstintfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationDstintf] {
	return pulumix.Output[[]SystemSdwanDuplicationDstintf]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationDstintfArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationDstintf {
		return vs[0].([]SystemSdwanDuplicationDstintf)[vs[1].(int)]
	}).(SystemSdwanDuplicationDstintfOutput)
}

type SystemSdwanDuplicationService struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationServiceInput is an input type that accepts SystemSdwanDuplicationServiceArgs and SystemSdwanDuplicationServiceOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceInput` via:
//
//	SystemSdwanDuplicationServiceArgs{...}
type SystemSdwanDuplicationServiceInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput
	ToSystemSdwanDuplicationServiceOutputWithContext(context.Context) SystemSdwanDuplicationServiceOutput
}

type SystemSdwanDuplicationServiceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationService)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceArgs) ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput {
	return i.ToSystemSdwanDuplicationServiceOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceArgs) ToSystemSdwanDuplicationServiceOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceOutput)
}

func (i SystemSdwanDuplicationServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationService] {
	return pulumix.Output[SystemSdwanDuplicationService]{
		OutputState: i.ToSystemSdwanDuplicationServiceOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationServiceArrayInput is an input type that accepts SystemSdwanDuplicationServiceArray and SystemSdwanDuplicationServiceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceArrayInput` via:
//
//	SystemSdwanDuplicationServiceArray{ SystemSdwanDuplicationServiceArgs{...} }
type SystemSdwanDuplicationServiceArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput
	ToSystemSdwanDuplicationServiceArrayOutputWithContext(context.Context) SystemSdwanDuplicationServiceArrayOutput
}

type SystemSdwanDuplicationServiceArray []SystemSdwanDuplicationServiceInput

func (SystemSdwanDuplicationServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationService)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceArray) ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput {
	return i.ToSystemSdwanDuplicationServiceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceArray) ToSystemSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceArrayOutput)
}

func (i SystemSdwanDuplicationServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationService] {
	return pulumix.Output[[]SystemSdwanDuplicationService]{
		OutputState: i.ToSystemSdwanDuplicationServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationServiceOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationService)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceOutput) ToSystemSdwanDuplicationServiceOutput() SystemSdwanDuplicationServiceOutput {
	return o
}

func (o SystemSdwanDuplicationServiceOutput) ToSystemSdwanDuplicationServiceOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceOutput {
	return o
}

func (o SystemSdwanDuplicationServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationService] {
	return pulumix.Output[SystemSdwanDuplicationService]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationService)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceArrayOutput) ToSystemSdwanDuplicationServiceArrayOutput() SystemSdwanDuplicationServiceArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceArrayOutput) ToSystemSdwanDuplicationServiceArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationService] {
	return pulumix.Output[[]SystemSdwanDuplicationService]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationServiceArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationService {
		return vs[0].([]SystemSdwanDuplicationService)[vs[1].(int)]
	}).(SystemSdwanDuplicationServiceOutput)
}

type SystemSdwanDuplicationServiceId struct {
	Id *int `pulumi:"id"`
}

// SystemSdwanDuplicationServiceIdInput is an input type that accepts SystemSdwanDuplicationServiceIdArgs and SystemSdwanDuplicationServiceIdOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceIdInput` via:
//
//	SystemSdwanDuplicationServiceIdArgs{...}
type SystemSdwanDuplicationServiceIdInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput
	ToSystemSdwanDuplicationServiceIdOutputWithContext(context.Context) SystemSdwanDuplicationServiceIdOutput
}

type SystemSdwanDuplicationServiceIdArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanDuplicationServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceIdArgs) ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput {
	return i.ToSystemSdwanDuplicationServiceIdOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceIdArgs) ToSystemSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceIdOutput)
}

func (i SystemSdwanDuplicationServiceIdArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationServiceId] {
	return pulumix.Output[SystemSdwanDuplicationServiceId]{
		OutputState: i.ToSystemSdwanDuplicationServiceIdOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationServiceIdArrayInput is an input type that accepts SystemSdwanDuplicationServiceIdArray and SystemSdwanDuplicationServiceIdArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationServiceIdArrayInput` via:
//
//	SystemSdwanDuplicationServiceIdArray{ SystemSdwanDuplicationServiceIdArgs{...} }
type SystemSdwanDuplicationServiceIdArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput
	ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(context.Context) SystemSdwanDuplicationServiceIdArrayOutput
}

type SystemSdwanDuplicationServiceIdArray []SystemSdwanDuplicationServiceIdInput

func (SystemSdwanDuplicationServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (i SystemSdwanDuplicationServiceIdArray) ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput {
	return i.ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationServiceIdArray) ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationServiceIdArrayOutput)
}

func (i SystemSdwanDuplicationServiceIdArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationServiceId] {
	return pulumix.Output[[]SystemSdwanDuplicationServiceId]{
		OutputState: i.ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationServiceIdOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceIdOutput) ToSystemSdwanDuplicationServiceIdOutput() SystemSdwanDuplicationServiceIdOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdOutput) ToSystemSdwanDuplicationServiceIdOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationServiceId] {
	return pulumix.Output[SystemSdwanDuplicationServiceId]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanDuplicationServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationServiceId)(nil)).Elem()
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) ToSystemSdwanDuplicationServiceIdArrayOutput() SystemSdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) ToSystemSdwanDuplicationServiceIdArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationServiceIdArrayOutput {
	return o
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationServiceId] {
	return pulumix.Output[[]SystemSdwanDuplicationServiceId]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationServiceIdArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationServiceId {
		return vs[0].([]SystemSdwanDuplicationServiceId)[vs[1].(int)]
	}).(SystemSdwanDuplicationServiceIdOutput)
}

type SystemSdwanDuplicationSrcaddr6 struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcaddr6Input is an input type that accepts SystemSdwanDuplicationSrcaddr6Args and SystemSdwanDuplicationSrcaddr6Output values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddr6Input` via:
//
//	SystemSdwanDuplicationSrcaddr6Args{...}
type SystemSdwanDuplicationSrcaddr6Input interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output
	ToSystemSdwanDuplicationSrcaddr6OutputWithContext(context.Context) SystemSdwanDuplicationSrcaddr6Output
}

type SystemSdwanDuplicationSrcaddr6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddr6Args) ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output {
	return i.ToSystemSdwanDuplicationSrcaddr6OutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddr6Args) ToSystemSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddr6Output)
}

func (i SystemSdwanDuplicationSrcaddr6Args) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcaddr6] {
	return pulumix.Output[SystemSdwanDuplicationSrcaddr6]{
		OutputState: i.ToSystemSdwanDuplicationSrcaddr6OutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationSrcaddr6ArrayInput is an input type that accepts SystemSdwanDuplicationSrcaddr6Array and SystemSdwanDuplicationSrcaddr6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddr6ArrayInput` via:
//
//	SystemSdwanDuplicationSrcaddr6Array{ SystemSdwanDuplicationSrcaddr6Args{...} }
type SystemSdwanDuplicationSrcaddr6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput
	ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput
}

type SystemSdwanDuplicationSrcaddr6Array []SystemSdwanDuplicationSrcaddr6Input

func (SystemSdwanDuplicationSrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddr6Array) ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return i.ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddr6Array) ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddr6ArrayOutput)
}

func (i SystemSdwanDuplicationSrcaddr6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcaddr6] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcaddr6]{
		OutputState: i.ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationSrcaddr6Output struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddr6Output) ToSystemSdwanDuplicationSrcaddr6Output() SystemSdwanDuplicationSrcaddr6Output {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6Output) ToSystemSdwanDuplicationSrcaddr6OutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6Output {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6Output) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcaddr6] {
	return pulumix.Output[SystemSdwanDuplicationSrcaddr6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr6)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) ToSystemSdwanDuplicationSrcaddr6ArrayOutput() SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) ToSystemSdwanDuplicationSrcaddr6ArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddr6ArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcaddr6] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcaddr6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcaddr6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcaddr6 {
		return vs[0].([]SystemSdwanDuplicationSrcaddr6)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcaddr6Output)
}

type SystemSdwanDuplicationSrcaddr struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcaddrInput is an input type that accepts SystemSdwanDuplicationSrcaddrArgs and SystemSdwanDuplicationSrcaddrOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddrInput` via:
//
//	SystemSdwanDuplicationSrcaddrArgs{...}
type SystemSdwanDuplicationSrcaddrInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput
	ToSystemSdwanDuplicationSrcaddrOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddrOutput
}

type SystemSdwanDuplicationSrcaddrArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcaddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddrArgs) ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput {
	return i.ToSystemSdwanDuplicationSrcaddrOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddrArgs) ToSystemSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddrOutput)
}

func (i SystemSdwanDuplicationSrcaddrArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcaddr] {
	return pulumix.Output[SystemSdwanDuplicationSrcaddr]{
		OutputState: i.ToSystemSdwanDuplicationSrcaddrOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationSrcaddrArrayInput is an input type that accepts SystemSdwanDuplicationSrcaddrArray and SystemSdwanDuplicationSrcaddrArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcaddrArrayInput` via:
//
//	SystemSdwanDuplicationSrcaddrArray{ SystemSdwanDuplicationSrcaddrArgs{...} }
type SystemSdwanDuplicationSrcaddrArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput
	ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcaddrArrayOutput
}

type SystemSdwanDuplicationSrcaddrArray []SystemSdwanDuplicationSrcaddrInput

func (SystemSdwanDuplicationSrcaddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcaddrArray) ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput {
	return i.ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcaddrArray) ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcaddrArrayOutput)
}

func (i SystemSdwanDuplicationSrcaddrArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcaddr] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcaddr]{
		OutputState: i.ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationSrcaddrOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddrOutput) ToSystemSdwanDuplicationSrcaddrOutput() SystemSdwanDuplicationSrcaddrOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrOutput) ToSystemSdwanDuplicationSrcaddrOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcaddr] {
	return pulumix.Output[SystemSdwanDuplicationSrcaddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcaddrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcaddr) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcaddrArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcaddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcaddr)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) ToSystemSdwanDuplicationSrcaddrArrayOutput() SystemSdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) ToSystemSdwanDuplicationSrcaddrArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcaddrArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcaddr] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcaddr]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcaddrArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcaddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcaddr {
		return vs[0].([]SystemSdwanDuplicationSrcaddr)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcaddrOutput)
}

type SystemSdwanDuplicationSrcintf struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanDuplicationSrcintfInput is an input type that accepts SystemSdwanDuplicationSrcintfArgs and SystemSdwanDuplicationSrcintfOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcintfInput` via:
//
//	SystemSdwanDuplicationSrcintfArgs{...}
type SystemSdwanDuplicationSrcintfInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput
	ToSystemSdwanDuplicationSrcintfOutputWithContext(context.Context) SystemSdwanDuplicationSrcintfOutput
}

type SystemSdwanDuplicationSrcintfArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanDuplicationSrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcintfArgs) ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput {
	return i.ToSystemSdwanDuplicationSrcintfOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcintfArgs) ToSystemSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcintfOutput)
}

func (i SystemSdwanDuplicationSrcintfArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcintf] {
	return pulumix.Output[SystemSdwanDuplicationSrcintf]{
		OutputState: i.ToSystemSdwanDuplicationSrcintfOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanDuplicationSrcintfArrayInput is an input type that accepts SystemSdwanDuplicationSrcintfArray and SystemSdwanDuplicationSrcintfArrayOutput values.
// You can construct a concrete instance of `SystemSdwanDuplicationSrcintfArrayInput` via:
//
//	SystemSdwanDuplicationSrcintfArray{ SystemSdwanDuplicationSrcintfArgs{...} }
type SystemSdwanDuplicationSrcintfArrayInput interface {
	pulumi.Input

	ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput
	ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(context.Context) SystemSdwanDuplicationSrcintfArrayOutput
}

type SystemSdwanDuplicationSrcintfArray []SystemSdwanDuplicationSrcintfInput

func (SystemSdwanDuplicationSrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (i SystemSdwanDuplicationSrcintfArray) ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput {
	return i.ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(context.Background())
}

func (i SystemSdwanDuplicationSrcintfArray) ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanDuplicationSrcintfArrayOutput)
}

func (i SystemSdwanDuplicationSrcintfArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcintf] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcintf]{
		OutputState: i.ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanDuplicationSrcintfOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcintfOutput) ToSystemSdwanDuplicationSrcintfOutput() SystemSdwanDuplicationSrcintfOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfOutput) ToSystemSdwanDuplicationSrcintfOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanDuplicationSrcintf] {
	return pulumix.Output[SystemSdwanDuplicationSrcintf]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanDuplicationSrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanDuplicationSrcintfArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanDuplicationSrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanDuplicationSrcintf)(nil)).Elem()
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) ToSystemSdwanDuplicationSrcintfArrayOutput() SystemSdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) ToSystemSdwanDuplicationSrcintfArrayOutputWithContext(ctx context.Context) SystemSdwanDuplicationSrcintfArrayOutput {
	return o
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanDuplicationSrcintf] {
	return pulumix.Output[[]SystemSdwanDuplicationSrcintf]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanDuplicationSrcintfArrayOutput) Index(i pulumi.IntInput) SystemSdwanDuplicationSrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanDuplicationSrcintf {
		return vs[0].([]SystemSdwanDuplicationSrcintf)[vs[1].(int)]
	}).(SystemSdwanDuplicationSrcintfOutput)
}

type SystemSdwanFailAlertInterface struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanFailAlertInterfaceInput is an input type that accepts SystemSdwanFailAlertInterfaceArgs and SystemSdwanFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemSdwanFailAlertInterfaceInput` via:
//
//	SystemSdwanFailAlertInterfaceArgs{...}
type SystemSdwanFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput
	ToSystemSdwanFailAlertInterfaceOutputWithContext(context.Context) SystemSdwanFailAlertInterfaceOutput
}

type SystemSdwanFailAlertInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (i SystemSdwanFailAlertInterfaceArgs) ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput {
	return i.ToSystemSdwanFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemSdwanFailAlertInterfaceArgs) ToSystemSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanFailAlertInterfaceOutput)
}

func (i SystemSdwanFailAlertInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanFailAlertInterface] {
	return pulumix.Output[SystemSdwanFailAlertInterface]{
		OutputState: i.ToSystemSdwanFailAlertInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanFailAlertInterfaceArrayInput is an input type that accepts SystemSdwanFailAlertInterfaceArray and SystemSdwanFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanFailAlertInterfaceArrayInput` via:
//
//	SystemSdwanFailAlertInterfaceArray{ SystemSdwanFailAlertInterfaceArgs{...} }
type SystemSdwanFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput
	ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(context.Context) SystemSdwanFailAlertInterfaceArrayOutput
}

type SystemSdwanFailAlertInterfaceArray []SystemSdwanFailAlertInterfaceInput

func (SystemSdwanFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (i SystemSdwanFailAlertInterfaceArray) ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput {
	return i.ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanFailAlertInterfaceArray) ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanFailAlertInterfaceArrayOutput)
}

func (i SystemSdwanFailAlertInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanFailAlertInterface] {
	return pulumix.Output[[]SystemSdwanFailAlertInterface]{
		OutputState: i.ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemSdwanFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (o SystemSdwanFailAlertInterfaceOutput) ToSystemSdwanFailAlertInterfaceOutput() SystemSdwanFailAlertInterfaceOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceOutput) ToSystemSdwanFailAlertInterfaceOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanFailAlertInterface] {
	return pulumix.Output[SystemSdwanFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanFailAlertInterface)(nil)).Elem()
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) ToSystemSdwanFailAlertInterfaceArrayOutput() SystemSdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) ToSystemSdwanFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemSdwanFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanFailAlertInterface] {
	return pulumix.Output[[]SystemSdwanFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemSdwanFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanFailAlertInterface {
		return vs[0].([]SystemSdwanFailAlertInterface)[vs[1].(int)]
	}).(SystemSdwanFailAlertInterfaceOutput)
}

type SystemSdwanHealthCheck struct {
	AddrMode                   *string                        `pulumi:"addrMode"`
	ClassId                    *int                           `pulumi:"classId"`
	DetectMode                 *string                        `pulumi:"detectMode"`
	Diffservcode               *string                        `pulumi:"diffservcode"`
	DnsMatchIp                 *string                        `pulumi:"dnsMatchIp"`
	DnsRequestDomain           *string                        `pulumi:"dnsRequestDomain"`
	EmbedMeasuredHealth        *string                        `pulumi:"embedMeasuredHealth"`
	Failtime                   *int                           `pulumi:"failtime"`
	FtpFile                    *string                        `pulumi:"ftpFile"`
	FtpMode                    *string                        `pulumi:"ftpMode"`
	HaPriority                 *int                           `pulumi:"haPriority"`
	HttpAgent                  *string                        `pulumi:"httpAgent"`
	HttpGet                    *string                        `pulumi:"httpGet"`
	HttpMatch                  *string                        `pulumi:"httpMatch"`
	Interval                   *int                           `pulumi:"interval"`
	Members                    []SystemSdwanHealthCheckMember `pulumi:"members"`
	MosCodec                   *string                        `pulumi:"mosCodec"`
	Name                       *string                        `pulumi:"name"`
	PacketSize                 *int                           `pulumi:"packetSize"`
	Password                   *string                        `pulumi:"password"`
	Port                       *int                           `pulumi:"port"`
	ProbeCount                 *int                           `pulumi:"probeCount"`
	ProbePackets               *string                        `pulumi:"probePackets"`
	ProbeTimeout               *int                           `pulumi:"probeTimeout"`
	Protocol                   *string                        `pulumi:"protocol"`
	QualityMeasuredMethod      *string                        `pulumi:"qualityMeasuredMethod"`
	Recoverytime               *int                           `pulumi:"recoverytime"`
	SecurityMode               *string                        `pulumi:"securityMode"`
	Server                     *string                        `pulumi:"server"`
	SlaFailLogPeriod           *int                           `pulumi:"slaFailLogPeriod"`
	SlaIdRedistribute          *int                           `pulumi:"slaIdRedistribute"`
	SlaPassLogPeriod           *int                           `pulumi:"slaPassLogPeriod"`
	Slas                       []SystemSdwanHealthCheckSla    `pulumi:"slas"`
	Source                     *string                        `pulumi:"source"`
	Source6                    *string                        `pulumi:"source6"`
	SystemDns                  *string                        `pulumi:"systemDns"`
	ThresholdAlertJitter       *int                           `pulumi:"thresholdAlertJitter"`
	ThresholdAlertLatency      *int                           `pulumi:"thresholdAlertLatency"`
	ThresholdAlertPacketloss   *int                           `pulumi:"thresholdAlertPacketloss"`
	ThresholdWarningJitter     *int                           `pulumi:"thresholdWarningJitter"`
	ThresholdWarningLatency    *int                           `pulumi:"thresholdWarningLatency"`
	ThresholdWarningPacketloss *int                           `pulumi:"thresholdWarningPacketloss"`
	UpdateCascadeInterface     *string                        `pulumi:"updateCascadeInterface"`
	UpdateStaticRoute          *string                        `pulumi:"updateStaticRoute"`
	User                       *string                        `pulumi:"user"`
	Vrf                        *int                           `pulumi:"vrf"`
}

// SystemSdwanHealthCheckInput is an input type that accepts SystemSdwanHealthCheckArgs and SystemSdwanHealthCheckOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckInput` via:
//
//	SystemSdwanHealthCheckArgs{...}
type SystemSdwanHealthCheckInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput
	ToSystemSdwanHealthCheckOutputWithContext(context.Context) SystemSdwanHealthCheckOutput
}

type SystemSdwanHealthCheckArgs struct {
	AddrMode                   pulumi.StringPtrInput                  `pulumi:"addrMode"`
	ClassId                    pulumi.IntPtrInput                     `pulumi:"classId"`
	DetectMode                 pulumi.StringPtrInput                  `pulumi:"detectMode"`
	Diffservcode               pulumi.StringPtrInput                  `pulumi:"diffservcode"`
	DnsMatchIp                 pulumi.StringPtrInput                  `pulumi:"dnsMatchIp"`
	DnsRequestDomain           pulumi.StringPtrInput                  `pulumi:"dnsRequestDomain"`
	EmbedMeasuredHealth        pulumi.StringPtrInput                  `pulumi:"embedMeasuredHealth"`
	Failtime                   pulumi.IntPtrInput                     `pulumi:"failtime"`
	FtpFile                    pulumi.StringPtrInput                  `pulumi:"ftpFile"`
	FtpMode                    pulumi.StringPtrInput                  `pulumi:"ftpMode"`
	HaPriority                 pulumi.IntPtrInput                     `pulumi:"haPriority"`
	HttpAgent                  pulumi.StringPtrInput                  `pulumi:"httpAgent"`
	HttpGet                    pulumi.StringPtrInput                  `pulumi:"httpGet"`
	HttpMatch                  pulumi.StringPtrInput                  `pulumi:"httpMatch"`
	Interval                   pulumi.IntPtrInput                     `pulumi:"interval"`
	Members                    SystemSdwanHealthCheckMemberArrayInput `pulumi:"members"`
	MosCodec                   pulumi.StringPtrInput                  `pulumi:"mosCodec"`
	Name                       pulumi.StringPtrInput                  `pulumi:"name"`
	PacketSize                 pulumi.IntPtrInput                     `pulumi:"packetSize"`
	Password                   pulumi.StringPtrInput                  `pulumi:"password"`
	Port                       pulumi.IntPtrInput                     `pulumi:"port"`
	ProbeCount                 pulumi.IntPtrInput                     `pulumi:"probeCount"`
	ProbePackets               pulumi.StringPtrInput                  `pulumi:"probePackets"`
	ProbeTimeout               pulumi.IntPtrInput                     `pulumi:"probeTimeout"`
	Protocol                   pulumi.StringPtrInput                  `pulumi:"protocol"`
	QualityMeasuredMethod      pulumi.StringPtrInput                  `pulumi:"qualityMeasuredMethod"`
	Recoverytime               pulumi.IntPtrInput                     `pulumi:"recoverytime"`
	SecurityMode               pulumi.StringPtrInput                  `pulumi:"securityMode"`
	Server                     pulumi.StringPtrInput                  `pulumi:"server"`
	SlaFailLogPeriod           pulumi.IntPtrInput                     `pulumi:"slaFailLogPeriod"`
	SlaIdRedistribute          pulumi.IntPtrInput                     `pulumi:"slaIdRedistribute"`
	SlaPassLogPeriod           pulumi.IntPtrInput                     `pulumi:"slaPassLogPeriod"`
	Slas                       SystemSdwanHealthCheckSlaArrayInput    `pulumi:"slas"`
	Source                     pulumi.StringPtrInput                  `pulumi:"source"`
	Source6                    pulumi.StringPtrInput                  `pulumi:"source6"`
	SystemDns                  pulumi.StringPtrInput                  `pulumi:"systemDns"`
	ThresholdAlertJitter       pulumi.IntPtrInput                     `pulumi:"thresholdAlertJitter"`
	ThresholdAlertLatency      pulumi.IntPtrInput                     `pulumi:"thresholdAlertLatency"`
	ThresholdAlertPacketloss   pulumi.IntPtrInput                     `pulumi:"thresholdAlertPacketloss"`
	ThresholdWarningJitter     pulumi.IntPtrInput                     `pulumi:"thresholdWarningJitter"`
	ThresholdWarningLatency    pulumi.IntPtrInput                     `pulumi:"thresholdWarningLatency"`
	ThresholdWarningPacketloss pulumi.IntPtrInput                     `pulumi:"thresholdWarningPacketloss"`
	UpdateCascadeInterface     pulumi.StringPtrInput                  `pulumi:"updateCascadeInterface"`
	UpdateStaticRoute          pulumi.StringPtrInput                  `pulumi:"updateStaticRoute"`
	User                       pulumi.StringPtrInput                  `pulumi:"user"`
	Vrf                        pulumi.IntPtrInput                     `pulumi:"vrf"`
}

func (SystemSdwanHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheck)(nil)).Elem()
}

func (i SystemSdwanHealthCheckArgs) ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput {
	return i.ToSystemSdwanHealthCheckOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckArgs) ToSystemSdwanHealthCheckOutputWithContext(ctx context.Context) SystemSdwanHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckOutput)
}

func (i SystemSdwanHealthCheckArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheck] {
	return pulumix.Output[SystemSdwanHealthCheck]{
		OutputState: i.ToSystemSdwanHealthCheckOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanHealthCheckArrayInput is an input type that accepts SystemSdwanHealthCheckArray and SystemSdwanHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckArrayInput` via:
//
//	SystemSdwanHealthCheckArray{ SystemSdwanHealthCheckArgs{...} }
type SystemSdwanHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput
	ToSystemSdwanHealthCheckArrayOutputWithContext(context.Context) SystemSdwanHealthCheckArrayOutput
}

type SystemSdwanHealthCheckArray []SystemSdwanHealthCheckInput

func (SystemSdwanHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheck)(nil)).Elem()
}

func (i SystemSdwanHealthCheckArray) ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput {
	return i.ToSystemSdwanHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckArray) ToSystemSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckArrayOutput)
}

func (i SystemSdwanHealthCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheck] {
	return pulumix.Output[[]SystemSdwanHealthCheck]{
		OutputState: i.ToSystemSdwanHealthCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheck)(nil)).Elem()
}

func (o SystemSdwanHealthCheckOutput) ToSystemSdwanHealthCheckOutput() SystemSdwanHealthCheckOutput {
	return o
}

func (o SystemSdwanHealthCheckOutput) ToSystemSdwanHealthCheckOutputWithContext(ctx context.Context) SystemSdwanHealthCheckOutput {
	return o
}

func (o SystemSdwanHealthCheckOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheck] {
	return pulumix.Output[SystemSdwanHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ClassId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ClassId }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) DetectMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DetectMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) DnsMatchIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DnsMatchIp }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) EmbedMeasuredHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.EmbedMeasuredHealth }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) FtpFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.FtpFile }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) FtpMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.FtpMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Members() SystemSdwanHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) []SystemSdwanHealthCheckMember { return v.Members }).(SystemSdwanHealthCheckMemberArrayOutput)
}

func (o SystemSdwanHealthCheckOutput) MosCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.MosCodec }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) QualityMeasuredMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.QualityMeasuredMethod }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) SlaIdRedistribute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaIdRedistribute }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Slas() SystemSdwanHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) []SystemSdwanHealthCheckSla { return v.Slas }).(SystemSdwanHealthCheckSlaArrayOutput)
}

func (o SystemSdwanHealthCheckOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *string { return v.User }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckOutput) Vrf() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheck) *int { return v.Vrf }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheck)(nil)).Elem()
}

func (o SystemSdwanHealthCheckArrayOutput) ToSystemSdwanHealthCheckArrayOutput() SystemSdwanHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckArrayOutput) ToSystemSdwanHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheck] {
	return pulumix.Output[[]SystemSdwanHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheck {
		return vs[0].([]SystemSdwanHealthCheck)[vs[1].(int)]
	}).(SystemSdwanHealthCheckOutput)
}

type SystemSdwanHealthCheckMember struct {
	SeqNum *int `pulumi:"seqNum"`
}

// SystemSdwanHealthCheckMemberInput is an input type that accepts SystemSdwanHealthCheckMemberArgs and SystemSdwanHealthCheckMemberOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckMemberInput` via:
//
//	SystemSdwanHealthCheckMemberArgs{...}
type SystemSdwanHealthCheckMemberInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput
	ToSystemSdwanHealthCheckMemberOutputWithContext(context.Context) SystemSdwanHealthCheckMemberOutput
}

type SystemSdwanHealthCheckMemberArgs struct {
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemSdwanHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (i SystemSdwanHealthCheckMemberArgs) ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput {
	return i.ToSystemSdwanHealthCheckMemberOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckMemberArgs) ToSystemSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckMemberOutput)
}

func (i SystemSdwanHealthCheckMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheckMember] {
	return pulumix.Output[SystemSdwanHealthCheckMember]{
		OutputState: i.ToSystemSdwanHealthCheckMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanHealthCheckMemberArrayInput is an input type that accepts SystemSdwanHealthCheckMemberArray and SystemSdwanHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckMemberArrayInput` via:
//
//	SystemSdwanHealthCheckMemberArray{ SystemSdwanHealthCheckMemberArgs{...} }
type SystemSdwanHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput
	ToSystemSdwanHealthCheckMemberArrayOutputWithContext(context.Context) SystemSdwanHealthCheckMemberArrayOutput
}

type SystemSdwanHealthCheckMemberArray []SystemSdwanHealthCheckMemberInput

func (SystemSdwanHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (i SystemSdwanHealthCheckMemberArray) ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput {
	return i.ToSystemSdwanHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckMemberArray) ToSystemSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckMemberArrayOutput)
}

func (i SystemSdwanHealthCheckMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheckMember] {
	return pulumix.Output[[]SystemSdwanHealthCheckMember]{
		OutputState: i.ToSystemSdwanHealthCheckMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (o SystemSdwanHealthCheckMemberOutput) ToSystemSdwanHealthCheckMemberOutput() SystemSdwanHealthCheckMemberOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberOutput) ToSystemSdwanHealthCheckMemberOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheckMember] {
	return pulumix.Output[SystemSdwanHealthCheckMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckMember)(nil)).Elem()
}

func (o SystemSdwanHealthCheckMemberArrayOutput) ToSystemSdwanHealthCheckMemberArrayOutput() SystemSdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberArrayOutput) ToSystemSdwanHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckMemberArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheckMember] {
	return pulumix.Output[[]SystemSdwanHealthCheckMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheckMember {
		return vs[0].([]SystemSdwanHealthCheckMember)[vs[1].(int)]
	}).(SystemSdwanHealthCheckMemberOutput)
}

type SystemSdwanHealthCheckSla struct {
	Id                  *int    `pulumi:"id"`
	JitterThreshold     *int    `pulumi:"jitterThreshold"`
	LatencyThreshold    *int    `pulumi:"latencyThreshold"`
	LinkCostFactor      *string `pulumi:"linkCostFactor"`
	MosThreshold        *string `pulumi:"mosThreshold"`
	PacketlossThreshold *int    `pulumi:"packetlossThreshold"`
	PriorityInSla       *int    `pulumi:"priorityInSla"`
	PriorityOutSla      *int    `pulumi:"priorityOutSla"`
}

// SystemSdwanHealthCheckSlaInput is an input type that accepts SystemSdwanHealthCheckSlaArgs and SystemSdwanHealthCheckSlaOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckSlaInput` via:
//
//	SystemSdwanHealthCheckSlaArgs{...}
type SystemSdwanHealthCheckSlaInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput
	ToSystemSdwanHealthCheckSlaOutputWithContext(context.Context) SystemSdwanHealthCheckSlaOutput
}

type SystemSdwanHealthCheckSlaArgs struct {
	Id                  pulumi.IntPtrInput    `pulumi:"id"`
	JitterThreshold     pulumi.IntPtrInput    `pulumi:"jitterThreshold"`
	LatencyThreshold    pulumi.IntPtrInput    `pulumi:"latencyThreshold"`
	LinkCostFactor      pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	MosThreshold        pulumi.StringPtrInput `pulumi:"mosThreshold"`
	PacketlossThreshold pulumi.IntPtrInput    `pulumi:"packetlossThreshold"`
	PriorityInSla       pulumi.IntPtrInput    `pulumi:"priorityInSla"`
	PriorityOutSla      pulumi.IntPtrInput    `pulumi:"priorityOutSla"`
}

func (SystemSdwanHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (i SystemSdwanHealthCheckSlaArgs) ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput {
	return i.ToSystemSdwanHealthCheckSlaOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckSlaArgs) ToSystemSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckSlaOutput)
}

func (i SystemSdwanHealthCheckSlaArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheckSla] {
	return pulumix.Output[SystemSdwanHealthCheckSla]{
		OutputState: i.ToSystemSdwanHealthCheckSlaOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanHealthCheckSlaArrayInput is an input type that accepts SystemSdwanHealthCheckSlaArray and SystemSdwanHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `SystemSdwanHealthCheckSlaArrayInput` via:
//
//	SystemSdwanHealthCheckSlaArray{ SystemSdwanHealthCheckSlaArgs{...} }
type SystemSdwanHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput
	ToSystemSdwanHealthCheckSlaArrayOutputWithContext(context.Context) SystemSdwanHealthCheckSlaArrayOutput
}

type SystemSdwanHealthCheckSlaArray []SystemSdwanHealthCheckSlaInput

func (SystemSdwanHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (i SystemSdwanHealthCheckSlaArray) ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput {
	return i.ToSystemSdwanHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i SystemSdwanHealthCheckSlaArray) ToSystemSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanHealthCheckSlaArrayOutput)
}

func (i SystemSdwanHealthCheckSlaArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheckSla] {
	return pulumix.Output[[]SystemSdwanHealthCheckSla]{
		OutputState: i.ToSystemSdwanHealthCheckSlaArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (o SystemSdwanHealthCheckSlaOutput) ToSystemSdwanHealthCheckSlaOutput() SystemSdwanHealthCheckSlaOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaOutput) ToSystemSdwanHealthCheckSlaOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanHealthCheckSla] {
	return pulumix.Output[SystemSdwanHealthCheckSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) MosThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *string { return v.MosThreshold }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) PriorityInSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PriorityInSla }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanHealthCheckSlaOutput) PriorityOutSla() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanHealthCheckSla) *int { return v.PriorityOutSla }).(pulumi.IntPtrOutput)
}

type SystemSdwanHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanHealthCheckSla)(nil)).Elem()
}

func (o SystemSdwanHealthCheckSlaArrayOutput) ToSystemSdwanHealthCheckSlaArrayOutput() SystemSdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaArrayOutput) ToSystemSdwanHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemSdwanHealthCheckSlaArrayOutput {
	return o
}

func (o SystemSdwanHealthCheckSlaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanHealthCheckSla] {
	return pulumix.Output[[]SystemSdwanHealthCheckSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) SystemSdwanHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanHealthCheckSla {
		return vs[0].([]SystemSdwanHealthCheckSla)[vs[1].(int)]
	}).(SystemSdwanHealthCheckSlaOutput)
}

type SystemSdwanMember struct {
	Comment                   *string `pulumi:"comment"`
	Cost                      *int    `pulumi:"cost"`
	Gateway                   *string `pulumi:"gateway"`
	Gateway6                  *string `pulumi:"gateway6"`
	IngressSpilloverThreshold *int    `pulumi:"ingressSpilloverThreshold"`
	Interface                 *string `pulumi:"interface"`
	PreferredSource           *string `pulumi:"preferredSource"`
	Priority                  *int    `pulumi:"priority"`
	Priority6                 *int    `pulumi:"priority6"`
	SeqNum                    *int    `pulumi:"seqNum"`
	Source                    *string `pulumi:"source"`
	Source6                   *string `pulumi:"source6"`
	SpilloverThreshold        *int    `pulumi:"spilloverThreshold"`
	Status                    *string `pulumi:"status"`
	VolumeRatio               *int    `pulumi:"volumeRatio"`
	Weight                    *int    `pulumi:"weight"`
	Zone                      *string `pulumi:"zone"`
}

// SystemSdwanMemberInput is an input type that accepts SystemSdwanMemberArgs and SystemSdwanMemberOutput values.
// You can construct a concrete instance of `SystemSdwanMemberInput` via:
//
//	SystemSdwanMemberArgs{...}
type SystemSdwanMemberInput interface {
	pulumi.Input

	ToSystemSdwanMemberOutput() SystemSdwanMemberOutput
	ToSystemSdwanMemberOutputWithContext(context.Context) SystemSdwanMemberOutput
}

type SystemSdwanMemberArgs struct {
	Comment                   pulumi.StringPtrInput `pulumi:"comment"`
	Cost                      pulumi.IntPtrInput    `pulumi:"cost"`
	Gateway                   pulumi.StringPtrInput `pulumi:"gateway"`
	Gateway6                  pulumi.StringPtrInput `pulumi:"gateway6"`
	IngressSpilloverThreshold pulumi.IntPtrInput    `pulumi:"ingressSpilloverThreshold"`
	Interface                 pulumi.StringPtrInput `pulumi:"interface"`
	PreferredSource           pulumi.StringPtrInput `pulumi:"preferredSource"`
	Priority                  pulumi.IntPtrInput    `pulumi:"priority"`
	Priority6                 pulumi.IntPtrInput    `pulumi:"priority6"`
	SeqNum                    pulumi.IntPtrInput    `pulumi:"seqNum"`
	Source                    pulumi.StringPtrInput `pulumi:"source"`
	Source6                   pulumi.StringPtrInput `pulumi:"source6"`
	SpilloverThreshold        pulumi.IntPtrInput    `pulumi:"spilloverThreshold"`
	Status                    pulumi.StringPtrInput `pulumi:"status"`
	VolumeRatio               pulumi.IntPtrInput    `pulumi:"volumeRatio"`
	Weight                    pulumi.IntPtrInput    `pulumi:"weight"`
	Zone                      pulumi.StringPtrInput `pulumi:"zone"`
}

func (SystemSdwanMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanMember)(nil)).Elem()
}

func (i SystemSdwanMemberArgs) ToSystemSdwanMemberOutput() SystemSdwanMemberOutput {
	return i.ToSystemSdwanMemberOutputWithContext(context.Background())
}

func (i SystemSdwanMemberArgs) ToSystemSdwanMemberOutputWithContext(ctx context.Context) SystemSdwanMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanMemberOutput)
}

func (i SystemSdwanMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanMember] {
	return pulumix.Output[SystemSdwanMember]{
		OutputState: i.ToSystemSdwanMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanMemberArrayInput is an input type that accepts SystemSdwanMemberArray and SystemSdwanMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanMemberArrayInput` via:
//
//	SystemSdwanMemberArray{ SystemSdwanMemberArgs{...} }
type SystemSdwanMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput
	ToSystemSdwanMemberArrayOutputWithContext(context.Context) SystemSdwanMemberArrayOutput
}

type SystemSdwanMemberArray []SystemSdwanMemberInput

func (SystemSdwanMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanMember)(nil)).Elem()
}

func (i SystemSdwanMemberArray) ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput {
	return i.ToSystemSdwanMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanMemberArray) ToSystemSdwanMemberArrayOutputWithContext(ctx context.Context) SystemSdwanMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanMemberArrayOutput)
}

func (i SystemSdwanMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanMember] {
	return pulumix.Output[[]SystemSdwanMember]{
		OutputState: i.ToSystemSdwanMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanMember)(nil)).Elem()
}

func (o SystemSdwanMemberOutput) ToSystemSdwanMemberOutput() SystemSdwanMemberOutput {
	return o
}

func (o SystemSdwanMemberOutput) ToSystemSdwanMemberOutputWithContext(ctx context.Context) SystemSdwanMemberOutput {
	return o
}

func (o SystemSdwanMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanMember] {
	return pulumix.Output[SystemSdwanMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) PreferredSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.PreferredSource }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Priority6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Priority6 }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanMemberOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanMember) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type SystemSdwanMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanMember)(nil)).Elem()
}

func (o SystemSdwanMemberArrayOutput) ToSystemSdwanMemberArrayOutput() SystemSdwanMemberArrayOutput {
	return o
}

func (o SystemSdwanMemberArrayOutput) ToSystemSdwanMemberArrayOutputWithContext(ctx context.Context) SystemSdwanMemberArrayOutput {
	return o
}

func (o SystemSdwanMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanMember] {
	return pulumix.Output[[]SystemSdwanMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanMember {
		return vs[0].([]SystemSdwanMember)[vs[1].(int)]
	}).(SystemSdwanMemberOutput)
}

type SystemSdwanNeighbor struct {
	HealthCheck           *string                          `pulumi:"healthCheck"`
	Ip                    *string                          `pulumi:"ip"`
	Member                *int                             `pulumi:"member"`
	MemberBlocks          []SystemSdwanNeighborMemberBlock `pulumi:"memberBlocks"`
	MinimumSlaMeetMembers *int                             `pulumi:"minimumSlaMeetMembers"`
	Mode                  *string                          `pulumi:"mode"`
	Role                  *string                          `pulumi:"role"`
	ServiceId             *int                             `pulumi:"serviceId"`
	SlaId                 *int                             `pulumi:"slaId"`
}

// SystemSdwanNeighborInput is an input type that accepts SystemSdwanNeighborArgs and SystemSdwanNeighborOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborInput` via:
//
//	SystemSdwanNeighborArgs{...}
type SystemSdwanNeighborInput interface {
	pulumi.Input

	ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput
	ToSystemSdwanNeighborOutputWithContext(context.Context) SystemSdwanNeighborOutput
}

type SystemSdwanNeighborArgs struct {
	HealthCheck           pulumi.StringPtrInput                    `pulumi:"healthCheck"`
	Ip                    pulumi.StringPtrInput                    `pulumi:"ip"`
	Member                pulumi.IntPtrInput                       `pulumi:"member"`
	MemberBlocks          SystemSdwanNeighborMemberBlockArrayInput `pulumi:"memberBlocks"`
	MinimumSlaMeetMembers pulumi.IntPtrInput                       `pulumi:"minimumSlaMeetMembers"`
	Mode                  pulumi.StringPtrInput                    `pulumi:"mode"`
	Role                  pulumi.StringPtrInput                    `pulumi:"role"`
	ServiceId             pulumi.IntPtrInput                       `pulumi:"serviceId"`
	SlaId                 pulumi.IntPtrInput                       `pulumi:"slaId"`
}

func (SystemSdwanNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighbor)(nil)).Elem()
}

func (i SystemSdwanNeighborArgs) ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput {
	return i.ToSystemSdwanNeighborOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborArgs) ToSystemSdwanNeighborOutputWithContext(ctx context.Context) SystemSdwanNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborOutput)
}

func (i SystemSdwanNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanNeighbor] {
	return pulumix.Output[SystemSdwanNeighbor]{
		OutputState: i.ToSystemSdwanNeighborOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanNeighborArrayInput is an input type that accepts SystemSdwanNeighborArray and SystemSdwanNeighborArrayOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborArrayInput` via:
//
//	SystemSdwanNeighborArray{ SystemSdwanNeighborArgs{...} }
type SystemSdwanNeighborArrayInput interface {
	pulumi.Input

	ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput
	ToSystemSdwanNeighborArrayOutputWithContext(context.Context) SystemSdwanNeighborArrayOutput
}

type SystemSdwanNeighborArray []SystemSdwanNeighborInput

func (SystemSdwanNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighbor)(nil)).Elem()
}

func (i SystemSdwanNeighborArray) ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput {
	return i.ToSystemSdwanNeighborArrayOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborArray) ToSystemSdwanNeighborArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborArrayOutput)
}

func (i SystemSdwanNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanNeighbor] {
	return pulumix.Output[[]SystemSdwanNeighbor]{
		OutputState: i.ToSystemSdwanNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanNeighborOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighbor)(nil)).Elem()
}

func (o SystemSdwanNeighborOutput) ToSystemSdwanNeighborOutput() SystemSdwanNeighborOutput {
	return o
}

func (o SystemSdwanNeighborOutput) ToSystemSdwanNeighborOutputWithContext(ctx context.Context) SystemSdwanNeighborOutput {
	return o
}

func (o SystemSdwanNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanNeighbor] {
	return pulumix.Output[SystemSdwanNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanNeighborOutput) MemberBlocks() SystemSdwanNeighborMemberBlockArrayOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) []SystemSdwanNeighborMemberBlock { return v.MemberBlocks }).(SystemSdwanNeighborMemberBlockArrayOutput)
}

func (o SystemSdwanNeighborOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanNeighborOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanNeighborOutput) ServiceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.ServiceId }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type SystemSdwanNeighborArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighbor)(nil)).Elem()
}

func (o SystemSdwanNeighborArrayOutput) ToSystemSdwanNeighborArrayOutput() SystemSdwanNeighborArrayOutput {
	return o
}

func (o SystemSdwanNeighborArrayOutput) ToSystemSdwanNeighborArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborArrayOutput {
	return o
}

func (o SystemSdwanNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanNeighbor] {
	return pulumix.Output[[]SystemSdwanNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanNeighborArrayOutput) Index(i pulumi.IntInput) SystemSdwanNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanNeighbor {
		return vs[0].([]SystemSdwanNeighbor)[vs[1].(int)]
	}).(SystemSdwanNeighborOutput)
}

type SystemSdwanNeighborMemberBlock struct {
	SeqNum *int `pulumi:"seqNum"`
}

// SystemSdwanNeighborMemberBlockInput is an input type that accepts SystemSdwanNeighborMemberBlockArgs and SystemSdwanNeighborMemberBlockOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborMemberBlockInput` via:
//
//	SystemSdwanNeighborMemberBlockArgs{...}
type SystemSdwanNeighborMemberBlockInput interface {
	pulumi.Input

	ToSystemSdwanNeighborMemberBlockOutput() SystemSdwanNeighborMemberBlockOutput
	ToSystemSdwanNeighborMemberBlockOutputWithContext(context.Context) SystemSdwanNeighborMemberBlockOutput
}

type SystemSdwanNeighborMemberBlockArgs struct {
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemSdwanNeighborMemberBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighborMemberBlock)(nil)).Elem()
}

func (i SystemSdwanNeighborMemberBlockArgs) ToSystemSdwanNeighborMemberBlockOutput() SystemSdwanNeighborMemberBlockOutput {
	return i.ToSystemSdwanNeighborMemberBlockOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborMemberBlockArgs) ToSystemSdwanNeighborMemberBlockOutputWithContext(ctx context.Context) SystemSdwanNeighborMemberBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborMemberBlockOutput)
}

func (i SystemSdwanNeighborMemberBlockArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanNeighborMemberBlock] {
	return pulumix.Output[SystemSdwanNeighborMemberBlock]{
		OutputState: i.ToSystemSdwanNeighborMemberBlockOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanNeighborMemberBlockArrayInput is an input type that accepts SystemSdwanNeighborMemberBlockArray and SystemSdwanNeighborMemberBlockArrayOutput values.
// You can construct a concrete instance of `SystemSdwanNeighborMemberBlockArrayInput` via:
//
//	SystemSdwanNeighborMemberBlockArray{ SystemSdwanNeighborMemberBlockArgs{...} }
type SystemSdwanNeighborMemberBlockArrayInput interface {
	pulumi.Input

	ToSystemSdwanNeighborMemberBlockArrayOutput() SystemSdwanNeighborMemberBlockArrayOutput
	ToSystemSdwanNeighborMemberBlockArrayOutputWithContext(context.Context) SystemSdwanNeighborMemberBlockArrayOutput
}

type SystemSdwanNeighborMemberBlockArray []SystemSdwanNeighborMemberBlockInput

func (SystemSdwanNeighborMemberBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighborMemberBlock)(nil)).Elem()
}

func (i SystemSdwanNeighborMemberBlockArray) ToSystemSdwanNeighborMemberBlockArrayOutput() SystemSdwanNeighborMemberBlockArrayOutput {
	return i.ToSystemSdwanNeighborMemberBlockArrayOutputWithContext(context.Background())
}

func (i SystemSdwanNeighborMemberBlockArray) ToSystemSdwanNeighborMemberBlockArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborMemberBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanNeighborMemberBlockArrayOutput)
}

func (i SystemSdwanNeighborMemberBlockArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanNeighborMemberBlock] {
	return pulumix.Output[[]SystemSdwanNeighborMemberBlock]{
		OutputState: i.ToSystemSdwanNeighborMemberBlockArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanNeighborMemberBlockOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborMemberBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanNeighborMemberBlock)(nil)).Elem()
}

func (o SystemSdwanNeighborMemberBlockOutput) ToSystemSdwanNeighborMemberBlockOutput() SystemSdwanNeighborMemberBlockOutput {
	return o
}

func (o SystemSdwanNeighborMemberBlockOutput) ToSystemSdwanNeighborMemberBlockOutputWithContext(ctx context.Context) SystemSdwanNeighborMemberBlockOutput {
	return o
}

func (o SystemSdwanNeighborMemberBlockOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanNeighborMemberBlock] {
	return pulumix.Output[SystemSdwanNeighborMemberBlock]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanNeighborMemberBlockOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanNeighborMemberBlock) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemSdwanNeighborMemberBlockArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanNeighborMemberBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanNeighborMemberBlock)(nil)).Elem()
}

func (o SystemSdwanNeighborMemberBlockArrayOutput) ToSystemSdwanNeighborMemberBlockArrayOutput() SystemSdwanNeighborMemberBlockArrayOutput {
	return o
}

func (o SystemSdwanNeighborMemberBlockArrayOutput) ToSystemSdwanNeighborMemberBlockArrayOutputWithContext(ctx context.Context) SystemSdwanNeighborMemberBlockArrayOutput {
	return o
}

func (o SystemSdwanNeighborMemberBlockArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanNeighborMemberBlock] {
	return pulumix.Output[[]SystemSdwanNeighborMemberBlock]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanNeighborMemberBlockArrayOutput) Index(i pulumi.IntInput) SystemSdwanNeighborMemberBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanNeighborMemberBlock {
		return vs[0].([]SystemSdwanNeighborMemberBlock)[vs[1].(int)]
	}).(SystemSdwanNeighborMemberBlockOutput)
}

type SystemSdwanService struct {
	AddrMode                         *string                                            `pulumi:"addrMode"`
	AgentExclusive                   *string                                            `pulumi:"agentExclusive"`
	BandwidthWeight                  *int                                               `pulumi:"bandwidthWeight"`
	Default                          *string                                            `pulumi:"default"`
	DscpForward                      *string                                            `pulumi:"dscpForward"`
	DscpForwardTag                   *string                                            `pulumi:"dscpForwardTag"`
	DscpReverse                      *string                                            `pulumi:"dscpReverse"`
	DscpReverseTag                   *string                                            `pulumi:"dscpReverseTag"`
	Dst6s                            []SystemSdwanServiceDst6                           `pulumi:"dst6s"`
	DstNegate                        *string                                            `pulumi:"dstNegate"`
	Dsts                             []SystemSdwanServiceDst                            `pulumi:"dsts"`
	EndPort                          *int                                               `pulumi:"endPort"`
	EndSrcPort                       *int                                               `pulumi:"endSrcPort"`
	Gateway                          *string                                            `pulumi:"gateway"`
	Groups                           []SystemSdwanServiceGroup                          `pulumi:"groups"`
	HashMode                         *string                                            `pulumi:"hashMode"`
	HealthChecks                     []SystemSdwanServiceHealthCheck                    `pulumi:"healthChecks"`
	HoldDownTime                     *int                                               `pulumi:"holdDownTime"`
	Id                               *int                                               `pulumi:"id"`
	InputDeviceNegate                *string                                            `pulumi:"inputDeviceNegate"`
	InputDevices                     []SystemSdwanServiceInputDevice                    `pulumi:"inputDevices"`
	InputZones                       []SystemSdwanServiceInputZone                      `pulumi:"inputZones"`
	InternetService                  *string                                            `pulumi:"internetService"`
	InternetServiceAppCtrlCategories []SystemSdwanServiceInternetServiceAppCtrlCategory `pulumi:"internetServiceAppCtrlCategories"`
	InternetServiceAppCtrlGroups     []SystemSdwanServiceInternetServiceAppCtrlGroup    `pulumi:"internetServiceAppCtrlGroups"`
	InternetServiceAppCtrls          []SystemSdwanServiceInternetServiceAppCtrl         `pulumi:"internetServiceAppCtrls"`
	InternetServiceCustomGroups      []SystemSdwanServiceInternetServiceCustomGroup     `pulumi:"internetServiceCustomGroups"`
	InternetServiceCustoms           []SystemSdwanServiceInternetServiceCustom          `pulumi:"internetServiceCustoms"`
	InternetServiceGroups            []SystemSdwanServiceInternetServiceGroup           `pulumi:"internetServiceGroups"`
	InternetServiceNames             []SystemSdwanServiceInternetServiceName            `pulumi:"internetServiceNames"`
	JitterWeight                     *int                                               `pulumi:"jitterWeight"`
	LatencyWeight                    *int                                               `pulumi:"latencyWeight"`
	LinkCostFactor                   *string                                            `pulumi:"linkCostFactor"`
	LinkCostThreshold                *int                                               `pulumi:"linkCostThreshold"`
	LoadBalance                      *string                                            `pulumi:"loadBalance"`
	MinimumSlaMeetMembers            *int                                               `pulumi:"minimumSlaMeetMembers"`
	Mode                             *string                                            `pulumi:"mode"`
	Name                             *string                                            `pulumi:"name"`
	PacketLossWeight                 *int                                               `pulumi:"packetLossWeight"`
	PassiveMeasurement               *string                                            `pulumi:"passiveMeasurement"`
	PriorityMembers                  []SystemSdwanServicePriorityMember                 `pulumi:"priorityMembers"`
	PriorityZones                    []SystemSdwanServicePriorityZone                   `pulumi:"priorityZones"`
	Protocol                         *int                                               `pulumi:"protocol"`
	QualityLink                      *int                                               `pulumi:"qualityLink"`
	Role                             *string                                            `pulumi:"role"`
	RouteTag                         *int                                               `pulumi:"routeTag"`
	Shortcut                         *string                                            `pulumi:"shortcut"`
	ShortcutStickiness               *string                                            `pulumi:"shortcutStickiness"`
	SlaCompareMethod                 *string                                            `pulumi:"slaCompareMethod"`
	SlaStickiness                    *string                                            `pulumi:"slaStickiness"`
	Slas                             []SystemSdwanServiceSla                            `pulumi:"slas"`
	Src6s                            []SystemSdwanServiceSrc6                           `pulumi:"src6s"`
	SrcNegate                        *string                                            `pulumi:"srcNegate"`
	Srcs                             []SystemSdwanServiceSrc                            `pulumi:"srcs"`
	StandaloneAction                 *string                                            `pulumi:"standaloneAction"`
	StartPort                        *int                                               `pulumi:"startPort"`
	StartSrcPort                     *int                                               `pulumi:"startSrcPort"`
	Status                           *string                                            `pulumi:"status"`
	TieBreak                         *string                                            `pulumi:"tieBreak"`
	Tos                              *string                                            `pulumi:"tos"`
	TosMask                          *string                                            `pulumi:"tosMask"`
	UseShortcutSla                   *string                                            `pulumi:"useShortcutSla"`
	Users                            []SystemSdwanServiceUser                           `pulumi:"users"`
	ZoneMode                         *string                                            `pulumi:"zoneMode"`
}

// SystemSdwanServiceInput is an input type that accepts SystemSdwanServiceArgs and SystemSdwanServiceOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInput` via:
//
//	SystemSdwanServiceArgs{...}
type SystemSdwanServiceInput interface {
	pulumi.Input

	ToSystemSdwanServiceOutput() SystemSdwanServiceOutput
	ToSystemSdwanServiceOutputWithContext(context.Context) SystemSdwanServiceOutput
}

type SystemSdwanServiceArgs struct {
	AddrMode                         pulumi.StringPtrInput                                      `pulumi:"addrMode"`
	AgentExclusive                   pulumi.StringPtrInput                                      `pulumi:"agentExclusive"`
	BandwidthWeight                  pulumi.IntPtrInput                                         `pulumi:"bandwidthWeight"`
	Default                          pulumi.StringPtrInput                                      `pulumi:"default"`
	DscpForward                      pulumi.StringPtrInput                                      `pulumi:"dscpForward"`
	DscpForwardTag                   pulumi.StringPtrInput                                      `pulumi:"dscpForwardTag"`
	DscpReverse                      pulumi.StringPtrInput                                      `pulumi:"dscpReverse"`
	DscpReverseTag                   pulumi.StringPtrInput                                      `pulumi:"dscpReverseTag"`
	Dst6s                            SystemSdwanServiceDst6ArrayInput                           `pulumi:"dst6s"`
	DstNegate                        pulumi.StringPtrInput                                      `pulumi:"dstNegate"`
	Dsts                             SystemSdwanServiceDstArrayInput                            `pulumi:"dsts"`
	EndPort                          pulumi.IntPtrInput                                         `pulumi:"endPort"`
	EndSrcPort                       pulumi.IntPtrInput                                         `pulumi:"endSrcPort"`
	Gateway                          pulumi.StringPtrInput                                      `pulumi:"gateway"`
	Groups                           SystemSdwanServiceGroupArrayInput                          `pulumi:"groups"`
	HashMode                         pulumi.StringPtrInput                                      `pulumi:"hashMode"`
	HealthChecks                     SystemSdwanServiceHealthCheckArrayInput                    `pulumi:"healthChecks"`
	HoldDownTime                     pulumi.IntPtrInput                                         `pulumi:"holdDownTime"`
	Id                               pulumi.IntPtrInput                                         `pulumi:"id"`
	InputDeviceNegate                pulumi.StringPtrInput                                      `pulumi:"inputDeviceNegate"`
	InputDevices                     SystemSdwanServiceInputDeviceArrayInput                    `pulumi:"inputDevices"`
	InputZones                       SystemSdwanServiceInputZoneArrayInput                      `pulumi:"inputZones"`
	InternetService                  pulumi.StringPtrInput                                      `pulumi:"internetService"`
	InternetServiceAppCtrlCategories SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput `pulumi:"internetServiceAppCtrlCategories"`
	InternetServiceAppCtrlGroups     SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput    `pulumi:"internetServiceAppCtrlGroups"`
	InternetServiceAppCtrls          SystemSdwanServiceInternetServiceAppCtrlArrayInput         `pulumi:"internetServiceAppCtrls"`
	InternetServiceCustomGroups      SystemSdwanServiceInternetServiceCustomGroupArrayInput     `pulumi:"internetServiceCustomGroups"`
	InternetServiceCustoms           SystemSdwanServiceInternetServiceCustomArrayInput          `pulumi:"internetServiceCustoms"`
	InternetServiceGroups            SystemSdwanServiceInternetServiceGroupArrayInput           `pulumi:"internetServiceGroups"`
	InternetServiceNames             SystemSdwanServiceInternetServiceNameArrayInput            `pulumi:"internetServiceNames"`
	JitterWeight                     pulumi.IntPtrInput                                         `pulumi:"jitterWeight"`
	LatencyWeight                    pulumi.IntPtrInput                                         `pulumi:"latencyWeight"`
	LinkCostFactor                   pulumi.StringPtrInput                                      `pulumi:"linkCostFactor"`
	LinkCostThreshold                pulumi.IntPtrInput                                         `pulumi:"linkCostThreshold"`
	LoadBalance                      pulumi.StringPtrInput                                      `pulumi:"loadBalance"`
	MinimumSlaMeetMembers            pulumi.IntPtrInput                                         `pulumi:"minimumSlaMeetMembers"`
	Mode                             pulumi.StringPtrInput                                      `pulumi:"mode"`
	Name                             pulumi.StringPtrInput                                      `pulumi:"name"`
	PacketLossWeight                 pulumi.IntPtrInput                                         `pulumi:"packetLossWeight"`
	PassiveMeasurement               pulumi.StringPtrInput                                      `pulumi:"passiveMeasurement"`
	PriorityMembers                  SystemSdwanServicePriorityMemberArrayInput                 `pulumi:"priorityMembers"`
	PriorityZones                    SystemSdwanServicePriorityZoneArrayInput                   `pulumi:"priorityZones"`
	Protocol                         pulumi.IntPtrInput                                         `pulumi:"protocol"`
	QualityLink                      pulumi.IntPtrInput                                         `pulumi:"qualityLink"`
	Role                             pulumi.StringPtrInput                                      `pulumi:"role"`
	RouteTag                         pulumi.IntPtrInput                                         `pulumi:"routeTag"`
	Shortcut                         pulumi.StringPtrInput                                      `pulumi:"shortcut"`
	ShortcutStickiness               pulumi.StringPtrInput                                      `pulumi:"shortcutStickiness"`
	SlaCompareMethod                 pulumi.StringPtrInput                                      `pulumi:"slaCompareMethod"`
	SlaStickiness                    pulumi.StringPtrInput                                      `pulumi:"slaStickiness"`
	Slas                             SystemSdwanServiceSlaArrayInput                            `pulumi:"slas"`
	Src6s                            SystemSdwanServiceSrc6ArrayInput                           `pulumi:"src6s"`
	SrcNegate                        pulumi.StringPtrInput                                      `pulumi:"srcNegate"`
	Srcs                             SystemSdwanServiceSrcArrayInput                            `pulumi:"srcs"`
	StandaloneAction                 pulumi.StringPtrInput                                      `pulumi:"standaloneAction"`
	StartPort                        pulumi.IntPtrInput                                         `pulumi:"startPort"`
	StartSrcPort                     pulumi.IntPtrInput                                         `pulumi:"startSrcPort"`
	Status                           pulumi.StringPtrInput                                      `pulumi:"status"`
	TieBreak                         pulumi.StringPtrInput                                      `pulumi:"tieBreak"`
	Tos                              pulumi.StringPtrInput                                      `pulumi:"tos"`
	TosMask                          pulumi.StringPtrInput                                      `pulumi:"tosMask"`
	UseShortcutSla                   pulumi.StringPtrInput                                      `pulumi:"useShortcutSla"`
	Users                            SystemSdwanServiceUserArrayInput                           `pulumi:"users"`
	ZoneMode                         pulumi.StringPtrInput                                      `pulumi:"zoneMode"`
}

func (SystemSdwanServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanService)(nil)).Elem()
}

func (i SystemSdwanServiceArgs) ToSystemSdwanServiceOutput() SystemSdwanServiceOutput {
	return i.ToSystemSdwanServiceOutputWithContext(context.Background())
}

func (i SystemSdwanServiceArgs) ToSystemSdwanServiceOutputWithContext(ctx context.Context) SystemSdwanServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceOutput)
}

func (i SystemSdwanServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanService] {
	return pulumix.Output[SystemSdwanService]{
		OutputState: i.ToSystemSdwanServiceOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceArrayInput is an input type that accepts SystemSdwanServiceArray and SystemSdwanServiceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceArrayInput` via:
//
//	SystemSdwanServiceArray{ SystemSdwanServiceArgs{...} }
type SystemSdwanServiceArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput
	ToSystemSdwanServiceArrayOutputWithContext(context.Context) SystemSdwanServiceArrayOutput
}

type SystemSdwanServiceArray []SystemSdwanServiceInput

func (SystemSdwanServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanService)(nil)).Elem()
}

func (i SystemSdwanServiceArray) ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput {
	return i.ToSystemSdwanServiceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceArray) ToSystemSdwanServiceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceArrayOutput)
}

func (i SystemSdwanServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanService] {
	return pulumix.Output[[]SystemSdwanService]{
		OutputState: i.ToSystemSdwanServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanService)(nil)).Elem()
}

func (o SystemSdwanServiceOutput) ToSystemSdwanServiceOutput() SystemSdwanServiceOutput {
	return o
}

func (o SystemSdwanServiceOutput) ToSystemSdwanServiceOutputWithContext(ctx context.Context) SystemSdwanServiceOutput {
	return o
}

func (o SystemSdwanServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanService] {
	return pulumix.Output[SystemSdwanService]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) AgentExclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.AgentExclusive }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Dst6s() SystemSdwanServiceDst6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceDst6 { return v.Dst6s }).(SystemSdwanServiceDst6ArrayOutput)
}

func (o SystemSdwanServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Dsts() SystemSdwanServiceDstArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceDst { return v.Dsts }).(SystemSdwanServiceDstArrayOutput)
}

func (o SystemSdwanServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) EndSrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.EndSrcPort }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Groups() SystemSdwanServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceGroup { return v.Groups }).(SystemSdwanServiceGroupArrayOutput)
}

func (o SystemSdwanServiceOutput) HashMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.HashMode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) HealthChecks() SystemSdwanServiceHealthCheckArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceHealthCheck { return v.HealthChecks }).(SystemSdwanServiceHealthCheckArrayOutput)
}

func (o SystemSdwanServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) InputDevices() SystemSdwanServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInputDevice { return v.InputDevices }).(SystemSdwanServiceInputDeviceArrayOutput)
}

func (o SystemSdwanServiceOutput) InputZones() SystemSdwanServiceInputZoneArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInputZone { return v.InputZones }).(SystemSdwanServiceInputZoneArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceAppCtrlCategories() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrlCategory {
		return v.InternetServiceAppCtrlCategories
	}).(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceAppCtrlGroups() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceAppCtrls() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(SystemSdwanServiceInternetServiceAppCtrlArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceCustomGroups() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(SystemSdwanServiceInternetServiceCustomGroupArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceCustoms() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceCustom { return v.InternetServiceCustoms }).(SystemSdwanServiceInternetServiceCustomArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceGroups() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceGroup { return v.InternetServiceGroups }).(SystemSdwanServiceInternetServiceGroupArrayOutput)
}

func (o SystemSdwanServiceOutput) InternetServiceNames() SystemSdwanServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceInternetServiceName { return v.InternetServiceNames }).(SystemSdwanServiceInternetServiceNameArrayOutput)
}

func (o SystemSdwanServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) LoadBalance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.LoadBalance }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) PassiveMeasurement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.PassiveMeasurement }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) PriorityMembers() SystemSdwanServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServicePriorityMember { return v.PriorityMembers }).(SystemSdwanServicePriorityMemberArrayOutput)
}

func (o SystemSdwanServiceOutput) PriorityZones() SystemSdwanServicePriorityZoneArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServicePriorityZone { return v.PriorityZones }).(SystemSdwanServicePriorityZoneArrayOutput)
}

func (o SystemSdwanServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Shortcut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Shortcut }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) ShortcutStickiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.ShortcutStickiness }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) SlaStickiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.SlaStickiness }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Slas() SystemSdwanServiceSlaArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSla { return v.Slas }).(SystemSdwanServiceSlaArrayOutput)
}

func (o SystemSdwanServiceOutput) Src6s() SystemSdwanServiceSrc6ArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSrc6 { return v.Src6s }).(SystemSdwanServiceSrc6ArrayOutput)
}

func (o SystemSdwanServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Srcs() SystemSdwanServiceSrcArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceSrc { return v.Srcs }).(SystemSdwanServiceSrcArrayOutput)
}

func (o SystemSdwanServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) StartSrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *int { return v.StartSrcPort }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) TieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.TieBreak }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) UseShortcutSla() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.UseShortcutSla }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceOutput) Users() SystemSdwanServiceUserArrayOutput {
	return o.ApplyT(func(v SystemSdwanService) []SystemSdwanServiceUser { return v.Users }).(SystemSdwanServiceUserArrayOutput)
}

func (o SystemSdwanServiceOutput) ZoneMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanService) *string { return v.ZoneMode }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanService)(nil)).Elem()
}

func (o SystemSdwanServiceArrayOutput) ToSystemSdwanServiceArrayOutput() SystemSdwanServiceArrayOutput {
	return o
}

func (o SystemSdwanServiceArrayOutput) ToSystemSdwanServiceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceArrayOutput {
	return o
}

func (o SystemSdwanServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanService] {
	return pulumix.Output[[]SystemSdwanService]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanService {
		return vs[0].([]SystemSdwanService)[vs[1].(int)]
	}).(SystemSdwanServiceOutput)
}

type SystemSdwanServiceDst6 struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceDst6Input is an input type that accepts SystemSdwanServiceDst6Args and SystemSdwanServiceDst6Output values.
// You can construct a concrete instance of `SystemSdwanServiceDst6Input` via:
//
//	SystemSdwanServiceDst6Args{...}
type SystemSdwanServiceDst6Input interface {
	pulumi.Input

	ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output
	ToSystemSdwanServiceDst6OutputWithContext(context.Context) SystemSdwanServiceDst6Output
}

type SystemSdwanServiceDst6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst6)(nil)).Elem()
}

func (i SystemSdwanServiceDst6Args) ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output {
	return i.ToSystemSdwanServiceDst6OutputWithContext(context.Background())
}

func (i SystemSdwanServiceDst6Args) ToSystemSdwanServiceDst6OutputWithContext(ctx context.Context) SystemSdwanServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDst6Output)
}

func (i SystemSdwanServiceDst6Args) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceDst6] {
	return pulumix.Output[SystemSdwanServiceDst6]{
		OutputState: i.ToSystemSdwanServiceDst6OutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceDst6ArrayInput is an input type that accepts SystemSdwanServiceDst6Array and SystemSdwanServiceDst6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDst6ArrayInput` via:
//
//	SystemSdwanServiceDst6Array{ SystemSdwanServiceDst6Args{...} }
type SystemSdwanServiceDst6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput
	ToSystemSdwanServiceDst6ArrayOutputWithContext(context.Context) SystemSdwanServiceDst6ArrayOutput
}

type SystemSdwanServiceDst6Array []SystemSdwanServiceDst6Input

func (SystemSdwanServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst6)(nil)).Elem()
}

func (i SystemSdwanServiceDst6Array) ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput {
	return i.ToSystemSdwanServiceDst6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDst6Array) ToSystemSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDst6ArrayOutput)
}

func (i SystemSdwanServiceDst6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceDst6] {
	return pulumix.Output[[]SystemSdwanServiceDst6]{
		OutputState: i.ToSystemSdwanServiceDst6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceDst6Output struct{ *pulumi.OutputState }

func (SystemSdwanServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst6)(nil)).Elem()
}

func (o SystemSdwanServiceDst6Output) ToSystemSdwanServiceDst6Output() SystemSdwanServiceDst6Output {
	return o
}

func (o SystemSdwanServiceDst6Output) ToSystemSdwanServiceDst6OutputWithContext(ctx context.Context) SystemSdwanServiceDst6Output {
	return o
}

func (o SystemSdwanServiceDst6Output) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceDst6] {
	return pulumix.Output[SystemSdwanServiceDst6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst6)(nil)).Elem()
}

func (o SystemSdwanServiceDst6ArrayOutput) ToSystemSdwanServiceDst6ArrayOutput() SystemSdwanServiceDst6ArrayOutput {
	return o
}

func (o SystemSdwanServiceDst6ArrayOutput) ToSystemSdwanServiceDst6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDst6ArrayOutput {
	return o
}

func (o SystemSdwanServiceDst6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceDst6] {
	return pulumix.Output[[]SystemSdwanServiceDst6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceDst6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceDst6 {
		return vs[0].([]SystemSdwanServiceDst6)[vs[1].(int)]
	}).(SystemSdwanServiceDst6Output)
}

type SystemSdwanServiceDst struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceDstInput is an input type that accepts SystemSdwanServiceDstArgs and SystemSdwanServiceDstOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDstInput` via:
//
//	SystemSdwanServiceDstArgs{...}
type SystemSdwanServiceDstInput interface {
	pulumi.Input

	ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput
	ToSystemSdwanServiceDstOutputWithContext(context.Context) SystemSdwanServiceDstOutput
}

type SystemSdwanServiceDstArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst)(nil)).Elem()
}

func (i SystemSdwanServiceDstArgs) ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput {
	return i.ToSystemSdwanServiceDstOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDstArgs) ToSystemSdwanServiceDstOutputWithContext(ctx context.Context) SystemSdwanServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDstOutput)
}

func (i SystemSdwanServiceDstArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceDst] {
	return pulumix.Output[SystemSdwanServiceDst]{
		OutputState: i.ToSystemSdwanServiceDstOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceDstArrayInput is an input type that accepts SystemSdwanServiceDstArray and SystemSdwanServiceDstArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceDstArrayInput` via:
//
//	SystemSdwanServiceDstArray{ SystemSdwanServiceDstArgs{...} }
type SystemSdwanServiceDstArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput
	ToSystemSdwanServiceDstArrayOutputWithContext(context.Context) SystemSdwanServiceDstArrayOutput
}

type SystemSdwanServiceDstArray []SystemSdwanServiceDstInput

func (SystemSdwanServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst)(nil)).Elem()
}

func (i SystemSdwanServiceDstArray) ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput {
	return i.ToSystemSdwanServiceDstArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceDstArray) ToSystemSdwanServiceDstArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceDstArrayOutput)
}

func (i SystemSdwanServiceDstArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceDst] {
	return pulumix.Output[[]SystemSdwanServiceDst]{
		OutputState: i.ToSystemSdwanServiceDstArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceDstOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceDst)(nil)).Elem()
}

func (o SystemSdwanServiceDstOutput) ToSystemSdwanServiceDstOutput() SystemSdwanServiceDstOutput {
	return o
}

func (o SystemSdwanServiceDstOutput) ToSystemSdwanServiceDstOutputWithContext(ctx context.Context) SystemSdwanServiceDstOutput {
	return o
}

func (o SystemSdwanServiceDstOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceDst] {
	return pulumix.Output[SystemSdwanServiceDst]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceDstArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceDst)(nil)).Elem()
}

func (o SystemSdwanServiceDstArrayOutput) ToSystemSdwanServiceDstArrayOutput() SystemSdwanServiceDstArrayOutput {
	return o
}

func (o SystemSdwanServiceDstArrayOutput) ToSystemSdwanServiceDstArrayOutputWithContext(ctx context.Context) SystemSdwanServiceDstArrayOutput {
	return o
}

func (o SystemSdwanServiceDstArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceDst] {
	return pulumix.Output[[]SystemSdwanServiceDst]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceDstArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceDst {
		return vs[0].([]SystemSdwanServiceDst)[vs[1].(int)]
	}).(SystemSdwanServiceDstOutput)
}

type SystemSdwanServiceGroup struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceGroupInput is an input type that accepts SystemSdwanServiceGroupArgs and SystemSdwanServiceGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceGroupInput` via:
//
//	SystemSdwanServiceGroupArgs{...}
type SystemSdwanServiceGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput
	ToSystemSdwanServiceGroupOutputWithContext(context.Context) SystemSdwanServiceGroupOutput
}

type SystemSdwanServiceGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceGroupArgs) ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput {
	return i.ToSystemSdwanServiceGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceGroupArgs) ToSystemSdwanServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceGroupOutput)
}

func (i SystemSdwanServiceGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceGroup] {
	return pulumix.Output[SystemSdwanServiceGroup]{
		OutputState: i.ToSystemSdwanServiceGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceGroupArrayInput is an input type that accepts SystemSdwanServiceGroupArray and SystemSdwanServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceGroupArrayInput` via:
//
//	SystemSdwanServiceGroupArray{ SystemSdwanServiceGroupArgs{...} }
type SystemSdwanServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput
	ToSystemSdwanServiceGroupArrayOutputWithContext(context.Context) SystemSdwanServiceGroupArrayOutput
}

type SystemSdwanServiceGroupArray []SystemSdwanServiceGroupInput

func (SystemSdwanServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceGroupArray) ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput {
	return i.ToSystemSdwanServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceGroupArray) ToSystemSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceGroupArrayOutput)
}

func (i SystemSdwanServiceGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceGroup] {
	return pulumix.Output[[]SystemSdwanServiceGroup]{
		OutputState: i.ToSystemSdwanServiceGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceGroupOutput) ToSystemSdwanServiceGroupOutput() SystemSdwanServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceGroupOutput) ToSystemSdwanServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceGroup] {
	return pulumix.Output[SystemSdwanServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceGroupArrayOutput) ToSystemSdwanServiceGroupArrayOutput() SystemSdwanServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceGroupArrayOutput) ToSystemSdwanServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceGroup] {
	return pulumix.Output[[]SystemSdwanServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceGroup {
		return vs[0].([]SystemSdwanServiceGroup)[vs[1].(int)]
	}).(SystemSdwanServiceGroupOutput)
}

type SystemSdwanServiceHealthCheck struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceHealthCheckInput is an input type that accepts SystemSdwanServiceHealthCheckArgs and SystemSdwanServiceHealthCheckOutput values.
// You can construct a concrete instance of `SystemSdwanServiceHealthCheckInput` via:
//
//	SystemSdwanServiceHealthCheckArgs{...}
type SystemSdwanServiceHealthCheckInput interface {
	pulumi.Input

	ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput
	ToSystemSdwanServiceHealthCheckOutputWithContext(context.Context) SystemSdwanServiceHealthCheckOutput
}

type SystemSdwanServiceHealthCheckArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (i SystemSdwanServiceHealthCheckArgs) ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput {
	return i.ToSystemSdwanServiceHealthCheckOutputWithContext(context.Background())
}

func (i SystemSdwanServiceHealthCheckArgs) ToSystemSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceHealthCheckOutput)
}

func (i SystemSdwanServiceHealthCheckArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceHealthCheck] {
	return pulumix.Output[SystemSdwanServiceHealthCheck]{
		OutputState: i.ToSystemSdwanServiceHealthCheckOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceHealthCheckArrayInput is an input type that accepts SystemSdwanServiceHealthCheckArray and SystemSdwanServiceHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceHealthCheckArrayInput` via:
//
//	SystemSdwanServiceHealthCheckArray{ SystemSdwanServiceHealthCheckArgs{...} }
type SystemSdwanServiceHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput
	ToSystemSdwanServiceHealthCheckArrayOutputWithContext(context.Context) SystemSdwanServiceHealthCheckArrayOutput
}

type SystemSdwanServiceHealthCheckArray []SystemSdwanServiceHealthCheckInput

func (SystemSdwanServiceHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (i SystemSdwanServiceHealthCheckArray) ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput {
	return i.ToSystemSdwanServiceHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceHealthCheckArray) ToSystemSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceHealthCheckArrayOutput)
}

func (i SystemSdwanServiceHealthCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceHealthCheck] {
	return pulumix.Output[[]SystemSdwanServiceHealthCheck]{
		OutputState: i.ToSystemSdwanServiceHealthCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (o SystemSdwanServiceHealthCheckOutput) ToSystemSdwanServiceHealthCheckOutput() SystemSdwanServiceHealthCheckOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckOutput) ToSystemSdwanServiceHealthCheckOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceHealthCheck] {
	return pulumix.Output[SystemSdwanServiceHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceHealthCheck)(nil)).Elem()
}

func (o SystemSdwanServiceHealthCheckArrayOutput) ToSystemSdwanServiceHealthCheckArrayOutput() SystemSdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckArrayOutput) ToSystemSdwanServiceHealthCheckArrayOutputWithContext(ctx context.Context) SystemSdwanServiceHealthCheckArrayOutput {
	return o
}

func (o SystemSdwanServiceHealthCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceHealthCheck] {
	return pulumix.Output[[]SystemSdwanServiceHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceHealthCheck {
		return vs[0].([]SystemSdwanServiceHealthCheck)[vs[1].(int)]
	}).(SystemSdwanServiceHealthCheckOutput)
}

type SystemSdwanServiceInputDevice struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInputDeviceInput is an input type that accepts SystemSdwanServiceInputDeviceArgs and SystemSdwanServiceInputDeviceOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputDeviceInput` via:
//
//	SystemSdwanServiceInputDeviceArgs{...}
type SystemSdwanServiceInputDeviceInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput
	ToSystemSdwanServiceInputDeviceOutputWithContext(context.Context) SystemSdwanServiceInputDeviceOutput
}

type SystemSdwanServiceInputDeviceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (i SystemSdwanServiceInputDeviceArgs) ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput {
	return i.ToSystemSdwanServiceInputDeviceOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputDeviceArgs) ToSystemSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputDeviceOutput)
}

func (i SystemSdwanServiceInputDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInputDevice] {
	return pulumix.Output[SystemSdwanServiceInputDevice]{
		OutputState: i.ToSystemSdwanServiceInputDeviceOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInputDeviceArrayInput is an input type that accepts SystemSdwanServiceInputDeviceArray and SystemSdwanServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputDeviceArrayInput` via:
//
//	SystemSdwanServiceInputDeviceArray{ SystemSdwanServiceInputDeviceArgs{...} }
type SystemSdwanServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput
	ToSystemSdwanServiceInputDeviceArrayOutputWithContext(context.Context) SystemSdwanServiceInputDeviceArrayOutput
}

type SystemSdwanServiceInputDeviceArray []SystemSdwanServiceInputDeviceInput

func (SystemSdwanServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (i SystemSdwanServiceInputDeviceArray) ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput {
	return i.ToSystemSdwanServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputDeviceArray) ToSystemSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputDeviceArrayOutput)
}

func (i SystemSdwanServiceInputDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInputDevice] {
	return pulumix.Output[[]SystemSdwanServiceInputDevice]{
		OutputState: i.ToSystemSdwanServiceInputDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (o SystemSdwanServiceInputDeviceOutput) ToSystemSdwanServiceInputDeviceOutput() SystemSdwanServiceInputDeviceOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceOutput) ToSystemSdwanServiceInputDeviceOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInputDevice] {
	return pulumix.Output[SystemSdwanServiceInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputDevice)(nil)).Elem()
}

func (o SystemSdwanServiceInputDeviceArrayOutput) ToSystemSdwanServiceInputDeviceArrayOutput() SystemSdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceArrayOutput) ToSystemSdwanServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputDeviceArrayOutput {
	return o
}

func (o SystemSdwanServiceInputDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInputDevice] {
	return pulumix.Output[[]SystemSdwanServiceInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInputDevice {
		return vs[0].([]SystemSdwanServiceInputDevice)[vs[1].(int)]
	}).(SystemSdwanServiceInputDeviceOutput)
}

type SystemSdwanServiceInputZone struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInputZoneInput is an input type that accepts SystemSdwanServiceInputZoneArgs and SystemSdwanServiceInputZoneOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputZoneInput` via:
//
//	SystemSdwanServiceInputZoneArgs{...}
type SystemSdwanServiceInputZoneInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput
	ToSystemSdwanServiceInputZoneOutputWithContext(context.Context) SystemSdwanServiceInputZoneOutput
}

type SystemSdwanServiceInputZoneArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInputZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputZone)(nil)).Elem()
}

func (i SystemSdwanServiceInputZoneArgs) ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput {
	return i.ToSystemSdwanServiceInputZoneOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputZoneArgs) ToSystemSdwanServiceInputZoneOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputZoneOutput)
}

func (i SystemSdwanServiceInputZoneArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInputZone] {
	return pulumix.Output[SystemSdwanServiceInputZone]{
		OutputState: i.ToSystemSdwanServiceInputZoneOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInputZoneArrayInput is an input type that accepts SystemSdwanServiceInputZoneArray and SystemSdwanServiceInputZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInputZoneArrayInput` via:
//
//	SystemSdwanServiceInputZoneArray{ SystemSdwanServiceInputZoneArgs{...} }
type SystemSdwanServiceInputZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput
	ToSystemSdwanServiceInputZoneArrayOutputWithContext(context.Context) SystemSdwanServiceInputZoneArrayOutput
}

type SystemSdwanServiceInputZoneArray []SystemSdwanServiceInputZoneInput

func (SystemSdwanServiceInputZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputZone)(nil)).Elem()
}

func (i SystemSdwanServiceInputZoneArray) ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput {
	return i.ToSystemSdwanServiceInputZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInputZoneArray) ToSystemSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInputZoneArrayOutput)
}

func (i SystemSdwanServiceInputZoneArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInputZone] {
	return pulumix.Output[[]SystemSdwanServiceInputZone]{
		OutputState: i.ToSystemSdwanServiceInputZoneArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInputZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInputZone)(nil)).Elem()
}

func (o SystemSdwanServiceInputZoneOutput) ToSystemSdwanServiceInputZoneOutput() SystemSdwanServiceInputZoneOutput {
	return o
}

func (o SystemSdwanServiceInputZoneOutput) ToSystemSdwanServiceInputZoneOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneOutput {
	return o
}

func (o SystemSdwanServiceInputZoneOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInputZone] {
	return pulumix.Output[SystemSdwanServiceInputZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInputZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInputZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInputZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInputZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInputZone)(nil)).Elem()
}

func (o SystemSdwanServiceInputZoneArrayOutput) ToSystemSdwanServiceInputZoneArrayOutput() SystemSdwanServiceInputZoneArrayOutput {
	return o
}

func (o SystemSdwanServiceInputZoneArrayOutput) ToSystemSdwanServiceInputZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInputZoneArrayOutput {
	return o
}

func (o SystemSdwanServiceInputZoneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInputZone] {
	return pulumix.Output[[]SystemSdwanServiceInputZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInputZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInputZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInputZone {
		return vs[0].([]SystemSdwanServiceInputZone)[vs[1].(int)]
	}).(SystemSdwanServiceInputZoneOutput)
}

type SystemSdwanServiceInternetServiceAppCtrl struct {
	Id *int `pulumi:"id"`
}

// SystemSdwanServiceInternetServiceAppCtrlInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlArgs and SystemSdwanServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput
	ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput
}

type SystemSdwanServiceInternetServiceAppCtrlArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlArgs) ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlArgs) ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrl] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrl]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceAppCtrlArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlArray and SystemSdwanServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlArray{ SystemSdwanServiceInternetServiceAppCtrlArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlArray []SystemSdwanServiceInternetServiceAppCtrlInput

func (SystemSdwanServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlArray) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlArray) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlArrayOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrl] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrl]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) ToSystemSdwanServiceInternetServiceAppCtrlOutput() SystemSdwanServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) ToSystemSdwanServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrl] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutput() SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrl] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrl {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlCategory struct {
	Id *int `pulumi:"id"`
}

// SystemSdwanServiceInternetServiceAppCtrlCategoryInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlCategoryArgs and SystemSdwanServiceInternetServiceAppCtrlCategoryOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlCategoryInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlCategoryInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput
	ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlCategory] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlCategory]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlCategoryArray and SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlCategoryArray{ SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArray []SystemSdwanServiceInternetServiceAppCtrlCategoryInput

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlCategoryArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlCategory] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlCategory]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlCategory] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlCategory]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlCategory)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput() SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlCategory] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlCategory]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrlCategory {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrlCategory)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlGroup struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceAppCtrlGroupInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlGroupArgs and SystemSdwanServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlGroupInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlGroupArgs{...}
type SystemSdwanServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput
	ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlGroupOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceAppCtrlGroupArray and SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceAppCtrlGroupArray{ SystemSdwanServiceInternetServiceAppCtrlGroupArgs{...} }
type SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput
	ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArray []SystemSdwanServiceInternetServiceAppCtrlGroupInput

func (SystemSdwanServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArray) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArray) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput)
}

func (i SystemSdwanServiceInternetServiceAppCtrlGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutput() SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceAppCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput() SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemSdwanServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceAppCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceAppCtrlGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceAppCtrlGroupOutput)
}

type SystemSdwanServiceInternetServiceCustom struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceCustomInput is an input type that accepts SystemSdwanServiceInternetServiceCustomArgs and SystemSdwanServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomInput` via:
//
//	SystemSdwanServiceInternetServiceCustomArgs{...}
type SystemSdwanServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput
	ToSystemSdwanServiceInternetServiceCustomOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomOutput
}

type SystemSdwanServiceInternetServiceCustomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomArgs) ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomArgs) ToSystemSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomOutput)
}

func (i SystemSdwanServiceInternetServiceCustomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceCustom] {
	return pulumix.Output[SystemSdwanServiceInternetServiceCustom]{
		OutputState: i.ToSystemSdwanServiceInternetServiceCustomOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceCustomArrayInput is an input type that accepts SystemSdwanServiceInternetServiceCustomArray and SystemSdwanServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomArrayInput` via:
//
//	SystemSdwanServiceInternetServiceCustomArray{ SystemSdwanServiceInternetServiceCustomArgs{...} }
type SystemSdwanServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput
	ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput
}

type SystemSdwanServiceInternetServiceCustomArray []SystemSdwanServiceInternetServiceCustomInput

func (SystemSdwanServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomArray) ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomArray) ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomArrayOutput)
}

func (i SystemSdwanServiceInternetServiceCustomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceCustom] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceCustom]{
		OutputState: i.ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomOutput) ToSystemSdwanServiceInternetServiceCustomOutput() SystemSdwanServiceInternetServiceCustomOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomOutput) ToSystemSdwanServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceCustom] {
	return pulumix.Output[SystemSdwanServiceInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) ToSystemSdwanServiceInternetServiceCustomArrayOutput() SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) ToSystemSdwanServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceCustom] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceCustom {
		return vs[0].([]SystemSdwanServiceInternetServiceCustom)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceCustomOutput)
}

type SystemSdwanServiceInternetServiceCustomGroup struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceCustomGroupInput is an input type that accepts SystemSdwanServiceInternetServiceCustomGroupArgs and SystemSdwanServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomGroupInput` via:
//
//	SystemSdwanServiceInternetServiceCustomGroupArgs{...}
type SystemSdwanServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput
	ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput
}

type SystemSdwanServiceInternetServiceCustomGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomGroupArgs) ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomGroupArgs) ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomGroupOutput)
}

func (i SystemSdwanServiceInternetServiceCustomGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceCustomGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceCustomGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceCustomGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceCustomGroupArray and SystemSdwanServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceCustomGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceCustomGroupArray{ SystemSdwanServiceInternetServiceCustomGroupArgs{...} }
type SystemSdwanServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput
	ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput
}

type SystemSdwanServiceInternetServiceCustomGroupArray []SystemSdwanServiceInternetServiceCustomGroupInput

func (SystemSdwanServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceCustomGroupArray) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceCustomGroupArray) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceCustomGroupArrayOutput)
}

func (i SystemSdwanServiceInternetServiceCustomGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceCustomGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceCustomGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) ToSystemSdwanServiceInternetServiceCustomGroupOutput() SystemSdwanServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) ToSystemSdwanServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceCustomGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceCustomGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutput() SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ToSystemSdwanServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceCustomGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceCustomGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceCustomGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceCustomGroupOutput)
}

type SystemSdwanServiceInternetServiceGroup struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceGroupInput is an input type that accepts SystemSdwanServiceInternetServiceGroupArgs and SystemSdwanServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceGroupInput` via:
//
//	SystemSdwanServiceInternetServiceGroupArgs{...}
type SystemSdwanServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput
	ToSystemSdwanServiceInternetServiceGroupOutputWithContext(context.Context) SystemSdwanServiceInternetServiceGroupOutput
}

type SystemSdwanServiceInternetServiceGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceGroupArgs) ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput {
	return i.ToSystemSdwanServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceGroupArgs) ToSystemSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceGroupOutput)
}

func (i SystemSdwanServiceInternetServiceGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceGroupArrayInput is an input type that accepts SystemSdwanServiceInternetServiceGroupArray and SystemSdwanServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceGroupArrayInput` via:
//
//	SystemSdwanServiceInternetServiceGroupArray{ SystemSdwanServiceInternetServiceGroupArgs{...} }
type SystemSdwanServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput
	ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput
}

type SystemSdwanServiceInternetServiceGroupArray []SystemSdwanServiceInternetServiceGroupInput

func (SystemSdwanServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceGroupArray) ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceGroupArray) ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceGroupArrayOutput)
}

func (i SystemSdwanServiceInternetServiceGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceGroup]{
		OutputState: i.ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceGroupOutput) ToSystemSdwanServiceInternetServiceGroupOutput() SystemSdwanServiceInternetServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupOutput) ToSystemSdwanServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceGroup] {
	return pulumix.Output[SystemSdwanServiceInternetServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) ToSystemSdwanServiceInternetServiceGroupArrayOutput() SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) ToSystemSdwanServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceGroup] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceGroup {
		return vs[0].([]SystemSdwanServiceInternetServiceGroup)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceGroupOutput)
}

type SystemSdwanServiceInternetServiceName struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceInternetServiceNameInput is an input type that accepts SystemSdwanServiceInternetServiceNameArgs and SystemSdwanServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceNameInput` via:
//
//	SystemSdwanServiceInternetServiceNameArgs{...}
type SystemSdwanServiceInternetServiceNameInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput
	ToSystemSdwanServiceInternetServiceNameOutputWithContext(context.Context) SystemSdwanServiceInternetServiceNameOutput
}

type SystemSdwanServiceInternetServiceNameArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceNameArgs) ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput {
	return i.ToSystemSdwanServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceNameArgs) ToSystemSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceNameOutput)
}

func (i SystemSdwanServiceInternetServiceNameArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceName] {
	return pulumix.Output[SystemSdwanServiceInternetServiceName]{
		OutputState: i.ToSystemSdwanServiceInternetServiceNameOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceInternetServiceNameArrayInput is an input type that accepts SystemSdwanServiceInternetServiceNameArray and SystemSdwanServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceInternetServiceNameArrayInput` via:
//
//	SystemSdwanServiceInternetServiceNameArray{ SystemSdwanServiceInternetServiceNameArgs{...} }
type SystemSdwanServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput
	ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(context.Context) SystemSdwanServiceInternetServiceNameArrayOutput
}

type SystemSdwanServiceInternetServiceNameArray []SystemSdwanServiceInternetServiceNameInput

func (SystemSdwanServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (i SystemSdwanServiceInternetServiceNameArray) ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput {
	return i.ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceInternetServiceNameArray) ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceInternetServiceNameArrayOutput)
}

func (i SystemSdwanServiceInternetServiceNameArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceName] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceName]{
		OutputState: i.ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceNameOutput) ToSystemSdwanServiceInternetServiceNameOutput() SystemSdwanServiceInternetServiceNameOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameOutput) ToSystemSdwanServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceInternetServiceName] {
	return pulumix.Output[SystemSdwanServiceInternetServiceName]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceInternetServiceName)(nil)).Elem()
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) ToSystemSdwanServiceInternetServiceNameArrayOutput() SystemSdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) ToSystemSdwanServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemSdwanServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceInternetServiceName] {
	return pulumix.Output[[]SystemSdwanServiceInternetServiceName]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceInternetServiceName {
		return vs[0].([]SystemSdwanServiceInternetServiceName)[vs[1].(int)]
	}).(SystemSdwanServiceInternetServiceNameOutput)
}

type SystemSdwanServicePriorityMember struct {
	SeqNum *int `pulumi:"seqNum"`
}

// SystemSdwanServicePriorityMemberInput is an input type that accepts SystemSdwanServicePriorityMemberArgs and SystemSdwanServicePriorityMemberOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityMemberInput` via:
//
//	SystemSdwanServicePriorityMemberArgs{...}
type SystemSdwanServicePriorityMemberInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput
	ToSystemSdwanServicePriorityMemberOutputWithContext(context.Context) SystemSdwanServicePriorityMemberOutput
}

type SystemSdwanServicePriorityMemberArgs struct {
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemSdwanServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (i SystemSdwanServicePriorityMemberArgs) ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput {
	return i.ToSystemSdwanServicePriorityMemberOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityMemberArgs) ToSystemSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityMemberOutput)
}

func (i SystemSdwanServicePriorityMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServicePriorityMember] {
	return pulumix.Output[SystemSdwanServicePriorityMember]{
		OutputState: i.ToSystemSdwanServicePriorityMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServicePriorityMemberArrayInput is an input type that accepts SystemSdwanServicePriorityMemberArray and SystemSdwanServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityMemberArrayInput` via:
//
//	SystemSdwanServicePriorityMemberArray{ SystemSdwanServicePriorityMemberArgs{...} }
type SystemSdwanServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput
	ToSystemSdwanServicePriorityMemberArrayOutputWithContext(context.Context) SystemSdwanServicePriorityMemberArrayOutput
}

type SystemSdwanServicePriorityMemberArray []SystemSdwanServicePriorityMemberInput

func (SystemSdwanServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (i SystemSdwanServicePriorityMemberArray) ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput {
	return i.ToSystemSdwanServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityMemberArray) ToSystemSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityMemberArrayOutput)
}

func (i SystemSdwanServicePriorityMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServicePriorityMember] {
	return pulumix.Output[[]SystemSdwanServicePriorityMember]{
		OutputState: i.ToSystemSdwanServicePriorityMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (o SystemSdwanServicePriorityMemberOutput) ToSystemSdwanServicePriorityMemberOutput() SystemSdwanServicePriorityMemberOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberOutput) ToSystemSdwanServicePriorityMemberOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServicePriorityMember] {
	return pulumix.Output[SystemSdwanServicePriorityMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemSdwanServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityMember)(nil)).Elem()
}

func (o SystemSdwanServicePriorityMemberArrayOutput) ToSystemSdwanServicePriorityMemberArrayOutput() SystemSdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberArrayOutput) ToSystemSdwanServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityMemberArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServicePriorityMember] {
	return pulumix.Output[[]SystemSdwanServicePriorityMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) SystemSdwanServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServicePriorityMember {
		return vs[0].([]SystemSdwanServicePriorityMember)[vs[1].(int)]
	}).(SystemSdwanServicePriorityMemberOutput)
}

type SystemSdwanServicePriorityZone struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServicePriorityZoneInput is an input type that accepts SystemSdwanServicePriorityZoneArgs and SystemSdwanServicePriorityZoneOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityZoneInput` via:
//
//	SystemSdwanServicePriorityZoneArgs{...}
type SystemSdwanServicePriorityZoneInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput
	ToSystemSdwanServicePriorityZoneOutputWithContext(context.Context) SystemSdwanServicePriorityZoneOutput
}

type SystemSdwanServicePriorityZoneArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServicePriorityZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (i SystemSdwanServicePriorityZoneArgs) ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput {
	return i.ToSystemSdwanServicePriorityZoneOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityZoneArgs) ToSystemSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityZoneOutput)
}

func (i SystemSdwanServicePriorityZoneArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServicePriorityZone] {
	return pulumix.Output[SystemSdwanServicePriorityZone]{
		OutputState: i.ToSystemSdwanServicePriorityZoneOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServicePriorityZoneArrayInput is an input type that accepts SystemSdwanServicePriorityZoneArray and SystemSdwanServicePriorityZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServicePriorityZoneArrayInput` via:
//
//	SystemSdwanServicePriorityZoneArray{ SystemSdwanServicePriorityZoneArgs{...} }
type SystemSdwanServicePriorityZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput
	ToSystemSdwanServicePriorityZoneArrayOutputWithContext(context.Context) SystemSdwanServicePriorityZoneArrayOutput
}

type SystemSdwanServicePriorityZoneArray []SystemSdwanServicePriorityZoneInput

func (SystemSdwanServicePriorityZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (i SystemSdwanServicePriorityZoneArray) ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput {
	return i.ToSystemSdwanServicePriorityZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServicePriorityZoneArray) ToSystemSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServicePriorityZoneArrayOutput)
}

func (i SystemSdwanServicePriorityZoneArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServicePriorityZone] {
	return pulumix.Output[[]SystemSdwanServicePriorityZone]{
		OutputState: i.ToSystemSdwanServicePriorityZoneArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServicePriorityZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (o SystemSdwanServicePriorityZoneOutput) ToSystemSdwanServicePriorityZoneOutput() SystemSdwanServicePriorityZoneOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneOutput) ToSystemSdwanServicePriorityZoneOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServicePriorityZone] {
	return pulumix.Output[SystemSdwanServicePriorityZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServicePriorityZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServicePriorityZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServicePriorityZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServicePriorityZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServicePriorityZone)(nil)).Elem()
}

func (o SystemSdwanServicePriorityZoneArrayOutput) ToSystemSdwanServicePriorityZoneArrayOutput() SystemSdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneArrayOutput) ToSystemSdwanServicePriorityZoneArrayOutputWithContext(ctx context.Context) SystemSdwanServicePriorityZoneArrayOutput {
	return o
}

func (o SystemSdwanServicePriorityZoneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServicePriorityZone] {
	return pulumix.Output[[]SystemSdwanServicePriorityZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServicePriorityZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanServicePriorityZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServicePriorityZone {
		return vs[0].([]SystemSdwanServicePriorityZone)[vs[1].(int)]
	}).(SystemSdwanServicePriorityZoneOutput)
}

type SystemSdwanServiceSla struct {
	HealthCheck *string `pulumi:"healthCheck"`
	Id          *int    `pulumi:"id"`
}

// SystemSdwanServiceSlaInput is an input type that accepts SystemSdwanServiceSlaArgs and SystemSdwanServiceSlaOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSlaInput` via:
//
//	SystemSdwanServiceSlaArgs{...}
type SystemSdwanServiceSlaInput interface {
	pulumi.Input

	ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput
	ToSystemSdwanServiceSlaOutputWithContext(context.Context) SystemSdwanServiceSlaOutput
}

type SystemSdwanServiceSlaArgs struct {
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
}

func (SystemSdwanServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSla)(nil)).Elem()
}

func (i SystemSdwanServiceSlaArgs) ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput {
	return i.ToSystemSdwanServiceSlaOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSlaArgs) ToSystemSdwanServiceSlaOutputWithContext(ctx context.Context) SystemSdwanServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSlaOutput)
}

func (i SystemSdwanServiceSlaArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSla] {
	return pulumix.Output[SystemSdwanServiceSla]{
		OutputState: i.ToSystemSdwanServiceSlaOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceSlaArrayInput is an input type that accepts SystemSdwanServiceSlaArray and SystemSdwanServiceSlaArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSlaArrayInput` via:
//
//	SystemSdwanServiceSlaArray{ SystemSdwanServiceSlaArgs{...} }
type SystemSdwanServiceSlaArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput
	ToSystemSdwanServiceSlaArrayOutputWithContext(context.Context) SystemSdwanServiceSlaArrayOutput
}

type SystemSdwanServiceSlaArray []SystemSdwanServiceSlaInput

func (SystemSdwanServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSla)(nil)).Elem()
}

func (i SystemSdwanServiceSlaArray) ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput {
	return i.ToSystemSdwanServiceSlaArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSlaArray) ToSystemSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSlaArrayOutput)
}

func (i SystemSdwanServiceSlaArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSla] {
	return pulumix.Output[[]SystemSdwanServiceSla]{
		OutputState: i.ToSystemSdwanServiceSlaArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceSlaOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSla)(nil)).Elem()
}

func (o SystemSdwanServiceSlaOutput) ToSystemSdwanServiceSlaOutput() SystemSdwanServiceSlaOutput {
	return o
}

func (o SystemSdwanServiceSlaOutput) ToSystemSdwanServiceSlaOutputWithContext(ctx context.Context) SystemSdwanServiceSlaOutput {
	return o
}

func (o SystemSdwanServiceSlaOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSla] {
	return pulumix.Output[SystemSdwanServiceSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemSdwanServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSla)(nil)).Elem()
}

func (o SystemSdwanServiceSlaArrayOutput) ToSystemSdwanServiceSlaArrayOutput() SystemSdwanServiceSlaArrayOutput {
	return o
}

func (o SystemSdwanServiceSlaArrayOutput) ToSystemSdwanServiceSlaArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSlaArrayOutput {
	return o
}

func (o SystemSdwanServiceSlaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSla] {
	return pulumix.Output[[]SystemSdwanServiceSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSlaArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSla {
		return vs[0].([]SystemSdwanServiceSla)[vs[1].(int)]
	}).(SystemSdwanServiceSlaOutput)
}

type SystemSdwanServiceSrc6 struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceSrc6Input is an input type that accepts SystemSdwanServiceSrc6Args and SystemSdwanServiceSrc6Output values.
// You can construct a concrete instance of `SystemSdwanServiceSrc6Input` via:
//
//	SystemSdwanServiceSrc6Args{...}
type SystemSdwanServiceSrc6Input interface {
	pulumi.Input

	ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output
	ToSystemSdwanServiceSrc6OutputWithContext(context.Context) SystemSdwanServiceSrc6Output
}

type SystemSdwanServiceSrc6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc6)(nil)).Elem()
}

func (i SystemSdwanServiceSrc6Args) ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output {
	return i.ToSystemSdwanServiceSrc6OutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrc6Args) ToSystemSdwanServiceSrc6OutputWithContext(ctx context.Context) SystemSdwanServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrc6Output)
}

func (i SystemSdwanServiceSrc6Args) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSrc6] {
	return pulumix.Output[SystemSdwanServiceSrc6]{
		OutputState: i.ToSystemSdwanServiceSrc6OutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceSrc6ArrayInput is an input type that accepts SystemSdwanServiceSrc6Array and SystemSdwanServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrc6ArrayInput` via:
//
//	SystemSdwanServiceSrc6Array{ SystemSdwanServiceSrc6Args{...} }
type SystemSdwanServiceSrc6ArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput
	ToSystemSdwanServiceSrc6ArrayOutputWithContext(context.Context) SystemSdwanServiceSrc6ArrayOutput
}

type SystemSdwanServiceSrc6Array []SystemSdwanServiceSrc6Input

func (SystemSdwanServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc6)(nil)).Elem()
}

func (i SystemSdwanServiceSrc6Array) ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput {
	return i.ToSystemSdwanServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrc6Array) ToSystemSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrc6ArrayOutput)
}

func (i SystemSdwanServiceSrc6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSrc6] {
	return pulumix.Output[[]SystemSdwanServiceSrc6]{
		OutputState: i.ToSystemSdwanServiceSrc6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceSrc6Output struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc6)(nil)).Elem()
}

func (o SystemSdwanServiceSrc6Output) ToSystemSdwanServiceSrc6Output() SystemSdwanServiceSrc6Output {
	return o
}

func (o SystemSdwanServiceSrc6Output) ToSystemSdwanServiceSrc6OutputWithContext(ctx context.Context) SystemSdwanServiceSrc6Output {
	return o
}

func (o SystemSdwanServiceSrc6Output) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSrc6] {
	return pulumix.Output[SystemSdwanServiceSrc6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc6)(nil)).Elem()
}

func (o SystemSdwanServiceSrc6ArrayOutput) ToSystemSdwanServiceSrc6ArrayOutput() SystemSdwanServiceSrc6ArrayOutput {
	return o
}

func (o SystemSdwanServiceSrc6ArrayOutput) ToSystemSdwanServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrc6ArrayOutput {
	return o
}

func (o SystemSdwanServiceSrc6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSrc6] {
	return pulumix.Output[[]SystemSdwanServiceSrc6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSrc6ArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSrc6 {
		return vs[0].([]SystemSdwanServiceSrc6)[vs[1].(int)]
	}).(SystemSdwanServiceSrc6Output)
}

type SystemSdwanServiceSrc struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceSrcInput is an input type that accepts SystemSdwanServiceSrcArgs and SystemSdwanServiceSrcOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrcInput` via:
//
//	SystemSdwanServiceSrcArgs{...}
type SystemSdwanServiceSrcInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput
	ToSystemSdwanServiceSrcOutputWithContext(context.Context) SystemSdwanServiceSrcOutput
}

type SystemSdwanServiceSrcArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceSrcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc)(nil)).Elem()
}

func (i SystemSdwanServiceSrcArgs) ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput {
	return i.ToSystemSdwanServiceSrcOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrcArgs) ToSystemSdwanServiceSrcOutputWithContext(ctx context.Context) SystemSdwanServiceSrcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrcOutput)
}

func (i SystemSdwanServiceSrcArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSrc] {
	return pulumix.Output[SystemSdwanServiceSrc]{
		OutputState: i.ToSystemSdwanServiceSrcOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceSrcArrayInput is an input type that accepts SystemSdwanServiceSrcArray and SystemSdwanServiceSrcArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceSrcArrayInput` via:
//
//	SystemSdwanServiceSrcArray{ SystemSdwanServiceSrcArgs{...} }
type SystemSdwanServiceSrcArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput
	ToSystemSdwanServiceSrcArrayOutputWithContext(context.Context) SystemSdwanServiceSrcArrayOutput
}

type SystemSdwanServiceSrcArray []SystemSdwanServiceSrcInput

func (SystemSdwanServiceSrcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc)(nil)).Elem()
}

func (i SystemSdwanServiceSrcArray) ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput {
	return i.ToSystemSdwanServiceSrcArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceSrcArray) ToSystemSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceSrcArrayOutput)
}

func (i SystemSdwanServiceSrcArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSrc] {
	return pulumix.Output[[]SystemSdwanServiceSrc]{
		OutputState: i.ToSystemSdwanServiceSrcArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceSrcOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceSrc)(nil)).Elem()
}

func (o SystemSdwanServiceSrcOutput) ToSystemSdwanServiceSrcOutput() SystemSdwanServiceSrcOutput {
	return o
}

func (o SystemSdwanServiceSrcOutput) ToSystemSdwanServiceSrcOutputWithContext(ctx context.Context) SystemSdwanServiceSrcOutput {
	return o
}

func (o SystemSdwanServiceSrcOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceSrc] {
	return pulumix.Output[SystemSdwanServiceSrc]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSrcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceSrc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceSrcArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceSrcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceSrc)(nil)).Elem()
}

func (o SystemSdwanServiceSrcArrayOutput) ToSystemSdwanServiceSrcArrayOutput() SystemSdwanServiceSrcArrayOutput {
	return o
}

func (o SystemSdwanServiceSrcArrayOutput) ToSystemSdwanServiceSrcArrayOutputWithContext(ctx context.Context) SystemSdwanServiceSrcArrayOutput {
	return o
}

func (o SystemSdwanServiceSrcArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceSrc] {
	return pulumix.Output[[]SystemSdwanServiceSrc]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceSrcArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceSrcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceSrc {
		return vs[0].([]SystemSdwanServiceSrc)[vs[1].(int)]
	}).(SystemSdwanServiceSrcOutput)
}

type SystemSdwanServiceUser struct {
	Name *string `pulumi:"name"`
}

// SystemSdwanServiceUserInput is an input type that accepts SystemSdwanServiceUserArgs and SystemSdwanServiceUserOutput values.
// You can construct a concrete instance of `SystemSdwanServiceUserInput` via:
//
//	SystemSdwanServiceUserArgs{...}
type SystemSdwanServiceUserInput interface {
	pulumi.Input

	ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput
	ToSystemSdwanServiceUserOutputWithContext(context.Context) SystemSdwanServiceUserOutput
}

type SystemSdwanServiceUserArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSdwanServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceUser)(nil)).Elem()
}

func (i SystemSdwanServiceUserArgs) ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput {
	return i.ToSystemSdwanServiceUserOutputWithContext(context.Background())
}

func (i SystemSdwanServiceUserArgs) ToSystemSdwanServiceUserOutputWithContext(ctx context.Context) SystemSdwanServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceUserOutput)
}

func (i SystemSdwanServiceUserArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceUser] {
	return pulumix.Output[SystemSdwanServiceUser]{
		OutputState: i.ToSystemSdwanServiceUserOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanServiceUserArrayInput is an input type that accepts SystemSdwanServiceUserArray and SystemSdwanServiceUserArrayOutput values.
// You can construct a concrete instance of `SystemSdwanServiceUserArrayInput` via:
//
//	SystemSdwanServiceUserArray{ SystemSdwanServiceUserArgs{...} }
type SystemSdwanServiceUserArrayInput interface {
	pulumi.Input

	ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput
	ToSystemSdwanServiceUserArrayOutputWithContext(context.Context) SystemSdwanServiceUserArrayOutput
}

type SystemSdwanServiceUserArray []SystemSdwanServiceUserInput

func (SystemSdwanServiceUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceUser)(nil)).Elem()
}

func (i SystemSdwanServiceUserArray) ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput {
	return i.ToSystemSdwanServiceUserArrayOutputWithContext(context.Background())
}

func (i SystemSdwanServiceUserArray) ToSystemSdwanServiceUserArrayOutputWithContext(ctx context.Context) SystemSdwanServiceUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanServiceUserArrayOutput)
}

func (i SystemSdwanServiceUserArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceUser] {
	return pulumix.Output[[]SystemSdwanServiceUser]{
		OutputState: i.ToSystemSdwanServiceUserArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanServiceUserOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanServiceUser)(nil)).Elem()
}

func (o SystemSdwanServiceUserOutput) ToSystemSdwanServiceUserOutput() SystemSdwanServiceUserOutput {
	return o
}

func (o SystemSdwanServiceUserOutput) ToSystemSdwanServiceUserOutputWithContext(ctx context.Context) SystemSdwanServiceUserOutput {
	return o
}

func (o SystemSdwanServiceUserOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanServiceUser] {
	return pulumix.Output[SystemSdwanServiceUser]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanServiceUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSdwanServiceUserArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanServiceUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanServiceUser)(nil)).Elem()
}

func (o SystemSdwanServiceUserArrayOutput) ToSystemSdwanServiceUserArrayOutput() SystemSdwanServiceUserArrayOutput {
	return o
}

func (o SystemSdwanServiceUserArrayOutput) ToSystemSdwanServiceUserArrayOutputWithContext(ctx context.Context) SystemSdwanServiceUserArrayOutput {
	return o
}

func (o SystemSdwanServiceUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanServiceUser] {
	return pulumix.Output[[]SystemSdwanServiceUser]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanServiceUserArrayOutput) Index(i pulumi.IntInput) SystemSdwanServiceUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanServiceUser {
		return vs[0].([]SystemSdwanServiceUser)[vs[1].(int)]
	}).(SystemSdwanServiceUserOutput)
}

type SystemSdwanZone struct {
	MinimumSlaMeetMembers *int    `pulumi:"minimumSlaMeetMembers"`
	Name                  *string `pulumi:"name"`
	ServiceSlaTieBreak    *string `pulumi:"serviceSlaTieBreak"`
}

// SystemSdwanZoneInput is an input type that accepts SystemSdwanZoneArgs and SystemSdwanZoneOutput values.
// You can construct a concrete instance of `SystemSdwanZoneInput` via:
//
//	SystemSdwanZoneArgs{...}
type SystemSdwanZoneInput interface {
	pulumi.Input

	ToSystemSdwanZoneOutput() SystemSdwanZoneOutput
	ToSystemSdwanZoneOutputWithContext(context.Context) SystemSdwanZoneOutput
}

type SystemSdwanZoneArgs struct {
	MinimumSlaMeetMembers pulumi.IntPtrInput    `pulumi:"minimumSlaMeetMembers"`
	Name                  pulumi.StringPtrInput `pulumi:"name"`
	ServiceSlaTieBreak    pulumi.StringPtrInput `pulumi:"serviceSlaTieBreak"`
}

func (SystemSdwanZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanZone)(nil)).Elem()
}

func (i SystemSdwanZoneArgs) ToSystemSdwanZoneOutput() SystemSdwanZoneOutput {
	return i.ToSystemSdwanZoneOutputWithContext(context.Background())
}

func (i SystemSdwanZoneArgs) ToSystemSdwanZoneOutputWithContext(ctx context.Context) SystemSdwanZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanZoneOutput)
}

func (i SystemSdwanZoneArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanZone] {
	return pulumix.Output[SystemSdwanZone]{
		OutputState: i.ToSystemSdwanZoneOutputWithContext(ctx).OutputState,
	}
}

// SystemSdwanZoneArrayInput is an input type that accepts SystemSdwanZoneArray and SystemSdwanZoneArrayOutput values.
// You can construct a concrete instance of `SystemSdwanZoneArrayInput` via:
//
//	SystemSdwanZoneArray{ SystemSdwanZoneArgs{...} }
type SystemSdwanZoneArrayInput interface {
	pulumi.Input

	ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput
	ToSystemSdwanZoneArrayOutputWithContext(context.Context) SystemSdwanZoneArrayOutput
}

type SystemSdwanZoneArray []SystemSdwanZoneInput

func (SystemSdwanZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanZone)(nil)).Elem()
}

func (i SystemSdwanZoneArray) ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput {
	return i.ToSystemSdwanZoneArrayOutputWithContext(context.Background())
}

func (i SystemSdwanZoneArray) ToSystemSdwanZoneArrayOutputWithContext(ctx context.Context) SystemSdwanZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSdwanZoneArrayOutput)
}

func (i SystemSdwanZoneArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanZone] {
	return pulumix.Output[[]SystemSdwanZone]{
		OutputState: i.ToSystemSdwanZoneArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSdwanZoneOutput struct{ *pulumi.OutputState }

func (SystemSdwanZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSdwanZone)(nil)).Elem()
}

func (o SystemSdwanZoneOutput) ToSystemSdwanZoneOutput() SystemSdwanZoneOutput {
	return o
}

func (o SystemSdwanZoneOutput) ToSystemSdwanZoneOutputWithContext(ctx context.Context) SystemSdwanZoneOutput {
	return o
}

func (o SystemSdwanZoneOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSdwanZone] {
	return pulumix.Output[SystemSdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanZoneOutput) MinimumSlaMeetMembers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSdwanZone) *int { return v.MinimumSlaMeetMembers }).(pulumi.IntPtrOutput)
}

func (o SystemSdwanZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemSdwanZoneOutput) ServiceSlaTieBreak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSdwanZone) *string { return v.ServiceSlaTieBreak }).(pulumi.StringPtrOutput)
}

type SystemSdwanZoneArrayOutput struct{ *pulumi.OutputState }

func (SystemSdwanZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSdwanZone)(nil)).Elem()
}

func (o SystemSdwanZoneArrayOutput) ToSystemSdwanZoneArrayOutput() SystemSdwanZoneArrayOutput {
	return o
}

func (o SystemSdwanZoneArrayOutput) ToSystemSdwanZoneArrayOutputWithContext(ctx context.Context) SystemSdwanZoneArrayOutput {
	return o
}

func (o SystemSdwanZoneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSdwanZone] {
	return pulumix.Output[[]SystemSdwanZone]{
		OutputState: o.OutputState,
	}
}

func (o SystemSdwanZoneArrayOutput) Index(i pulumi.IntInput) SystemSdwanZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSdwanZone {
		return vs[0].([]SystemSdwanZone)[vs[1].(int)]
	}).(SystemSdwanZoneOutput)
}

type SystemSessionTtlPort struct {
	EndPort          *int    `pulumi:"endPort"`
	Id               *int    `pulumi:"id"`
	Protocol         *int    `pulumi:"protocol"`
	RefreshDirection *string `pulumi:"refreshDirection"`
	StartPort        *int    `pulumi:"startPort"`
	Timeout          *string `pulumi:"timeout"`
}

// SystemSessionTtlPortInput is an input type that accepts SystemSessionTtlPortArgs and SystemSessionTtlPortOutput values.
// You can construct a concrete instance of `SystemSessionTtlPortInput` via:
//
//	SystemSessionTtlPortArgs{...}
type SystemSessionTtlPortInput interface {
	pulumi.Input

	ToSystemSessionTtlPortOutput() SystemSessionTtlPortOutput
	ToSystemSessionTtlPortOutputWithContext(context.Context) SystemSessionTtlPortOutput
}

type SystemSessionTtlPortArgs struct {
	EndPort          pulumi.IntPtrInput    `pulumi:"endPort"`
	Id               pulumi.IntPtrInput    `pulumi:"id"`
	Protocol         pulumi.IntPtrInput    `pulumi:"protocol"`
	RefreshDirection pulumi.StringPtrInput `pulumi:"refreshDirection"`
	StartPort        pulumi.IntPtrInput    `pulumi:"startPort"`
	Timeout          pulumi.StringPtrInput `pulumi:"timeout"`
}

func (SystemSessionTtlPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionTtlPort)(nil)).Elem()
}

func (i SystemSessionTtlPortArgs) ToSystemSessionTtlPortOutput() SystemSessionTtlPortOutput {
	return i.ToSystemSessionTtlPortOutputWithContext(context.Background())
}

func (i SystemSessionTtlPortArgs) ToSystemSessionTtlPortOutputWithContext(ctx context.Context) SystemSessionTtlPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionTtlPortOutput)
}

func (i SystemSessionTtlPortArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSessionTtlPort] {
	return pulumix.Output[SystemSessionTtlPort]{
		OutputState: i.ToSystemSessionTtlPortOutputWithContext(ctx).OutputState,
	}
}

// SystemSessionTtlPortArrayInput is an input type that accepts SystemSessionTtlPortArray and SystemSessionTtlPortArrayOutput values.
// You can construct a concrete instance of `SystemSessionTtlPortArrayInput` via:
//
//	SystemSessionTtlPortArray{ SystemSessionTtlPortArgs{...} }
type SystemSessionTtlPortArrayInput interface {
	pulumi.Input

	ToSystemSessionTtlPortArrayOutput() SystemSessionTtlPortArrayOutput
	ToSystemSessionTtlPortArrayOutputWithContext(context.Context) SystemSessionTtlPortArrayOutput
}

type SystemSessionTtlPortArray []SystemSessionTtlPortInput

func (SystemSessionTtlPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSessionTtlPort)(nil)).Elem()
}

func (i SystemSessionTtlPortArray) ToSystemSessionTtlPortArrayOutput() SystemSessionTtlPortArrayOutput {
	return i.ToSystemSessionTtlPortArrayOutputWithContext(context.Background())
}

func (i SystemSessionTtlPortArray) ToSystemSessionTtlPortArrayOutputWithContext(ctx context.Context) SystemSessionTtlPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionTtlPortArrayOutput)
}

func (i SystemSessionTtlPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSessionTtlPort] {
	return pulumix.Output[[]SystemSessionTtlPort]{
		OutputState: i.ToSystemSessionTtlPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSessionTtlPortOutput struct{ *pulumi.OutputState }

func (SystemSessionTtlPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionTtlPort)(nil)).Elem()
}

func (o SystemSessionTtlPortOutput) ToSystemSessionTtlPortOutput() SystemSessionTtlPortOutput {
	return o
}

func (o SystemSessionTtlPortOutput) ToSystemSessionTtlPortOutputWithContext(ctx context.Context) SystemSessionTtlPortOutput {
	return o
}

func (o SystemSessionTtlPortOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSessionTtlPort] {
	return pulumix.Output[SystemSessionTtlPort]{
		OutputState: o.OutputState,
	}
}

func (o SystemSessionTtlPortOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o SystemSessionTtlPortOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSessionTtlPortOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

func (o SystemSessionTtlPortOutput) RefreshDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *string { return v.RefreshDirection }).(pulumi.StringPtrOutput)
}

func (o SystemSessionTtlPortOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

func (o SystemSessionTtlPortOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSessionTtlPort) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type SystemSessionTtlPortArrayOutput struct{ *pulumi.OutputState }

func (SystemSessionTtlPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSessionTtlPort)(nil)).Elem()
}

func (o SystemSessionTtlPortArrayOutput) ToSystemSessionTtlPortArrayOutput() SystemSessionTtlPortArrayOutput {
	return o
}

func (o SystemSessionTtlPortArrayOutput) ToSystemSessionTtlPortArrayOutputWithContext(ctx context.Context) SystemSessionTtlPortArrayOutput {
	return o
}

func (o SystemSessionTtlPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSessionTtlPort] {
	return pulumix.Output[[]SystemSessionTtlPort]{
		OutputState: o.OutputState,
	}
}

func (o SystemSessionTtlPortArrayOutput) Index(i pulumi.IntInput) SystemSessionTtlPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSessionTtlPort {
		return vs[0].([]SystemSessionTtlPort)[vs[1].(int)]
	}).(SystemSessionTtlPortOutput)
}

type SystemSettingsGuiDefaultPolicyColumn struct {
	Name *string `pulumi:"name"`
}

// SystemSettingsGuiDefaultPolicyColumnInput is an input type that accepts SystemSettingsGuiDefaultPolicyColumnArgs and SystemSettingsGuiDefaultPolicyColumnOutput values.
// You can construct a concrete instance of `SystemSettingsGuiDefaultPolicyColumnInput` via:
//
//	SystemSettingsGuiDefaultPolicyColumnArgs{...}
type SystemSettingsGuiDefaultPolicyColumnInput interface {
	pulumi.Input

	ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput
	ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(context.Context) SystemSettingsGuiDefaultPolicyColumnOutput
}

type SystemSettingsGuiDefaultPolicyColumnArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSettingsGuiDefaultPolicyColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SystemSettingsGuiDefaultPolicyColumnArgs) ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput {
	return i.ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(context.Background())
}

func (i SystemSettingsGuiDefaultPolicyColumnArgs) ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingsGuiDefaultPolicyColumnOutput)
}

func (i SystemSettingsGuiDefaultPolicyColumnArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSettingsGuiDefaultPolicyColumn] {
	return pulumix.Output[SystemSettingsGuiDefaultPolicyColumn]{
		OutputState: i.ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(ctx).OutputState,
	}
}

// SystemSettingsGuiDefaultPolicyColumnArrayInput is an input type that accepts SystemSettingsGuiDefaultPolicyColumnArray and SystemSettingsGuiDefaultPolicyColumnArrayOutput values.
// You can construct a concrete instance of `SystemSettingsGuiDefaultPolicyColumnArrayInput` via:
//
//	SystemSettingsGuiDefaultPolicyColumnArray{ SystemSettingsGuiDefaultPolicyColumnArgs{...} }
type SystemSettingsGuiDefaultPolicyColumnArrayInput interface {
	pulumi.Input

	ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput
	ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput
}

type SystemSettingsGuiDefaultPolicyColumnArray []SystemSettingsGuiDefaultPolicyColumnInput

func (SystemSettingsGuiDefaultPolicyColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (i SystemSettingsGuiDefaultPolicyColumnArray) ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return i.ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(context.Background())
}

func (i SystemSettingsGuiDefaultPolicyColumnArray) ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSettingsGuiDefaultPolicyColumnArrayOutput)
}

func (i SystemSettingsGuiDefaultPolicyColumnArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSettingsGuiDefaultPolicyColumn] {
	return pulumix.Output[[]SystemSettingsGuiDefaultPolicyColumn]{
		OutputState: i.ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSettingsGuiDefaultPolicyColumnOutput struct{ *pulumi.OutputState }

func (SystemSettingsGuiDefaultPolicyColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) ToSystemSettingsGuiDefaultPolicyColumnOutput() SystemSettingsGuiDefaultPolicyColumnOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) ToSystemSettingsGuiDefaultPolicyColumnOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSettingsGuiDefaultPolicyColumn] {
	return pulumix.Output[SystemSettingsGuiDefaultPolicyColumn]{
		OutputState: o.OutputState,
	}
}

func (o SystemSettingsGuiDefaultPolicyColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSettingsGuiDefaultPolicyColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSettingsGuiDefaultPolicyColumnArrayOutput struct{ *pulumi.OutputState }

func (SystemSettingsGuiDefaultPolicyColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSettingsGuiDefaultPolicyColumn)(nil)).Elem()
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) ToSystemSettingsGuiDefaultPolicyColumnArrayOutput() SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) ToSystemSettingsGuiDefaultPolicyColumnArrayOutputWithContext(ctx context.Context) SystemSettingsGuiDefaultPolicyColumnArrayOutput {
	return o
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSettingsGuiDefaultPolicyColumn] {
	return pulumix.Output[[]SystemSettingsGuiDefaultPolicyColumn]{
		OutputState: o.OutputState,
	}
}

func (o SystemSettingsGuiDefaultPolicyColumnArrayOutput) Index(i pulumi.IntInput) SystemSettingsGuiDefaultPolicyColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSettingsGuiDefaultPolicyColumn {
		return vs[0].([]SystemSettingsGuiDefaultPolicyColumn)[vs[1].(int)]
	}).(SystemSettingsGuiDefaultPolicyColumnOutput)
}

type SystemSnmpCommunityHost struct {
	HaDirect *string `pulumi:"haDirect"`
	HostType *string `pulumi:"hostType"`
	Id       *int    `pulumi:"id"`
	Ip       *string `pulumi:"ip"`
	SourceIp *string `pulumi:"sourceIp"`
}

// SystemSnmpCommunityHostInput is an input type that accepts SystemSnmpCommunityHostArgs and SystemSnmpCommunityHostOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityHostInput` via:
//
//	SystemSnmpCommunityHostArgs{...}
type SystemSnmpCommunityHostInput interface {
	pulumi.Input

	ToSystemSnmpCommunityHostOutput() SystemSnmpCommunityHostOutput
	ToSystemSnmpCommunityHostOutputWithContext(context.Context) SystemSnmpCommunityHostOutput
}

type SystemSnmpCommunityHostArgs struct {
	HaDirect pulumi.StringPtrInput `pulumi:"haDirect"`
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	Id       pulumi.IntPtrInput    `pulumi:"id"`
	Ip       pulumi.StringPtrInput `pulumi:"ip"`
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
}

func (SystemSnmpCommunityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityHost)(nil)).Elem()
}

func (i SystemSnmpCommunityHostArgs) ToSystemSnmpCommunityHostOutput() SystemSnmpCommunityHostOutput {
	return i.ToSystemSnmpCommunityHostOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityHostArgs) ToSystemSnmpCommunityHostOutputWithContext(ctx context.Context) SystemSnmpCommunityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityHostOutput)
}

func (i SystemSnmpCommunityHostArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityHost] {
	return pulumix.Output[SystemSnmpCommunityHost]{
		OutputState: i.ToSystemSnmpCommunityHostOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpCommunityHostArrayInput is an input type that accepts SystemSnmpCommunityHostArray and SystemSnmpCommunityHostArrayOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityHostArrayInput` via:
//
//	SystemSnmpCommunityHostArray{ SystemSnmpCommunityHostArgs{...} }
type SystemSnmpCommunityHostArrayInput interface {
	pulumi.Input

	ToSystemSnmpCommunityHostArrayOutput() SystemSnmpCommunityHostArrayOutput
	ToSystemSnmpCommunityHostArrayOutputWithContext(context.Context) SystemSnmpCommunityHostArrayOutput
}

type SystemSnmpCommunityHostArray []SystemSnmpCommunityHostInput

func (SystemSnmpCommunityHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityHost)(nil)).Elem()
}

func (i SystemSnmpCommunityHostArray) ToSystemSnmpCommunityHostArrayOutput() SystemSnmpCommunityHostArrayOutput {
	return i.ToSystemSnmpCommunityHostArrayOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityHostArray) ToSystemSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityHostArrayOutput)
}

func (i SystemSnmpCommunityHostArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityHost] {
	return pulumix.Output[[]SystemSnmpCommunityHost]{
		OutputState: i.ToSystemSnmpCommunityHostArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpCommunityHostOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityHost)(nil)).Elem()
}

func (o SystemSnmpCommunityHostOutput) ToSystemSnmpCommunityHostOutput() SystemSnmpCommunityHostOutput {
	return o
}

func (o SystemSnmpCommunityHostOutput) ToSystemSnmpCommunityHostOutputWithContext(ctx context.Context) SystemSnmpCommunityHostOutput {
	return o
}

func (o SystemSnmpCommunityHostOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityHost] {
	return pulumix.Output[SystemSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityHostOutput) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHost) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHostOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHost) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSnmpCommunityHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHostOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHost) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

type SystemSnmpCommunityHostArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityHost)(nil)).Elem()
}

func (o SystemSnmpCommunityHostArrayOutput) ToSystemSnmpCommunityHostArrayOutput() SystemSnmpCommunityHostArrayOutput {
	return o
}

func (o SystemSnmpCommunityHostArrayOutput) ToSystemSnmpCommunityHostArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityHostArrayOutput {
	return o
}

func (o SystemSnmpCommunityHostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityHost] {
	return pulumix.Output[[]SystemSnmpCommunityHost]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityHostArrayOutput) Index(i pulumi.IntInput) SystemSnmpCommunityHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSnmpCommunityHost {
		return vs[0].([]SystemSnmpCommunityHost)[vs[1].(int)]
	}).(SystemSnmpCommunityHostOutput)
}

type SystemSnmpCommunityHosts6 struct {
	HaDirect   *string `pulumi:"haDirect"`
	HostType   *string `pulumi:"hostType"`
	Id         *int    `pulumi:"id"`
	Ipv6       *string `pulumi:"ipv6"`
	SourceIpv6 *string `pulumi:"sourceIpv6"`
}

// SystemSnmpCommunityHosts6Input is an input type that accepts SystemSnmpCommunityHosts6Args and SystemSnmpCommunityHosts6Output values.
// You can construct a concrete instance of `SystemSnmpCommunityHosts6Input` via:
//
//	SystemSnmpCommunityHosts6Args{...}
type SystemSnmpCommunityHosts6Input interface {
	pulumi.Input

	ToSystemSnmpCommunityHosts6Output() SystemSnmpCommunityHosts6Output
	ToSystemSnmpCommunityHosts6OutputWithContext(context.Context) SystemSnmpCommunityHosts6Output
}

type SystemSnmpCommunityHosts6Args struct {
	HaDirect   pulumi.StringPtrInput `pulumi:"haDirect"`
	HostType   pulumi.StringPtrInput `pulumi:"hostType"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Ipv6       pulumi.StringPtrInput `pulumi:"ipv6"`
	SourceIpv6 pulumi.StringPtrInput `pulumi:"sourceIpv6"`
}

func (SystemSnmpCommunityHosts6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityHosts6)(nil)).Elem()
}

func (i SystemSnmpCommunityHosts6Args) ToSystemSnmpCommunityHosts6Output() SystemSnmpCommunityHosts6Output {
	return i.ToSystemSnmpCommunityHosts6OutputWithContext(context.Background())
}

func (i SystemSnmpCommunityHosts6Args) ToSystemSnmpCommunityHosts6OutputWithContext(ctx context.Context) SystemSnmpCommunityHosts6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityHosts6Output)
}

func (i SystemSnmpCommunityHosts6Args) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityHosts6] {
	return pulumix.Output[SystemSnmpCommunityHosts6]{
		OutputState: i.ToSystemSnmpCommunityHosts6OutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpCommunityHosts6ArrayInput is an input type that accepts SystemSnmpCommunityHosts6Array and SystemSnmpCommunityHosts6ArrayOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityHosts6ArrayInput` via:
//
//	SystemSnmpCommunityHosts6Array{ SystemSnmpCommunityHosts6Args{...} }
type SystemSnmpCommunityHosts6ArrayInput interface {
	pulumi.Input

	ToSystemSnmpCommunityHosts6ArrayOutput() SystemSnmpCommunityHosts6ArrayOutput
	ToSystemSnmpCommunityHosts6ArrayOutputWithContext(context.Context) SystemSnmpCommunityHosts6ArrayOutput
}

type SystemSnmpCommunityHosts6Array []SystemSnmpCommunityHosts6Input

func (SystemSnmpCommunityHosts6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityHosts6)(nil)).Elem()
}

func (i SystemSnmpCommunityHosts6Array) ToSystemSnmpCommunityHosts6ArrayOutput() SystemSnmpCommunityHosts6ArrayOutput {
	return i.ToSystemSnmpCommunityHosts6ArrayOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityHosts6Array) ToSystemSnmpCommunityHosts6ArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityHosts6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityHosts6ArrayOutput)
}

func (i SystemSnmpCommunityHosts6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityHosts6] {
	return pulumix.Output[[]SystemSnmpCommunityHosts6]{
		OutputState: i.ToSystemSnmpCommunityHosts6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpCommunityHosts6Output struct{ *pulumi.OutputState }

func (SystemSnmpCommunityHosts6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityHosts6)(nil)).Elem()
}

func (o SystemSnmpCommunityHosts6Output) ToSystemSnmpCommunityHosts6Output() SystemSnmpCommunityHosts6Output {
	return o
}

func (o SystemSnmpCommunityHosts6Output) ToSystemSnmpCommunityHosts6OutputWithContext(ctx context.Context) SystemSnmpCommunityHosts6Output {
	return o
}

func (o SystemSnmpCommunityHosts6Output) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityHosts6] {
	return pulumix.Output[SystemSnmpCommunityHosts6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityHosts6Output) HaDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHosts6) *string { return v.HaDirect }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHosts6Output) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHosts6) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHosts6Output) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHosts6) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSnmpCommunityHosts6Output) Ipv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHosts6) *string { return v.Ipv6 }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityHosts6Output) SourceIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityHosts6) *string { return v.SourceIpv6 }).(pulumi.StringPtrOutput)
}

type SystemSnmpCommunityHosts6ArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityHosts6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityHosts6)(nil)).Elem()
}

func (o SystemSnmpCommunityHosts6ArrayOutput) ToSystemSnmpCommunityHosts6ArrayOutput() SystemSnmpCommunityHosts6ArrayOutput {
	return o
}

func (o SystemSnmpCommunityHosts6ArrayOutput) ToSystemSnmpCommunityHosts6ArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityHosts6ArrayOutput {
	return o
}

func (o SystemSnmpCommunityHosts6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityHosts6] {
	return pulumix.Output[[]SystemSnmpCommunityHosts6]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityHosts6ArrayOutput) Index(i pulumi.IntInput) SystemSnmpCommunityHosts6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSnmpCommunityHosts6 {
		return vs[0].([]SystemSnmpCommunityHosts6)[vs[1].(int)]
	}).(SystemSnmpCommunityHosts6Output)
}

type SystemSnmpCommunityVdom struct {
	Name *string `pulumi:"name"`
}

// SystemSnmpCommunityVdomInput is an input type that accepts SystemSnmpCommunityVdomArgs and SystemSnmpCommunityVdomOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityVdomInput` via:
//
//	SystemSnmpCommunityVdomArgs{...}
type SystemSnmpCommunityVdomInput interface {
	pulumi.Input

	ToSystemSnmpCommunityVdomOutput() SystemSnmpCommunityVdomOutput
	ToSystemSnmpCommunityVdomOutputWithContext(context.Context) SystemSnmpCommunityVdomOutput
}

type SystemSnmpCommunityVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSnmpCommunityVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityVdom)(nil)).Elem()
}

func (i SystemSnmpCommunityVdomArgs) ToSystemSnmpCommunityVdomOutput() SystemSnmpCommunityVdomOutput {
	return i.ToSystemSnmpCommunityVdomOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityVdomArgs) ToSystemSnmpCommunityVdomOutputWithContext(ctx context.Context) SystemSnmpCommunityVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityVdomOutput)
}

func (i SystemSnmpCommunityVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityVdom] {
	return pulumix.Output[SystemSnmpCommunityVdom]{
		OutputState: i.ToSystemSnmpCommunityVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpCommunityVdomArrayInput is an input type that accepts SystemSnmpCommunityVdomArray and SystemSnmpCommunityVdomArrayOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityVdomArrayInput` via:
//
//	SystemSnmpCommunityVdomArray{ SystemSnmpCommunityVdomArgs{...} }
type SystemSnmpCommunityVdomArrayInput interface {
	pulumi.Input

	ToSystemSnmpCommunityVdomArrayOutput() SystemSnmpCommunityVdomArrayOutput
	ToSystemSnmpCommunityVdomArrayOutputWithContext(context.Context) SystemSnmpCommunityVdomArrayOutput
}

type SystemSnmpCommunityVdomArray []SystemSnmpCommunityVdomInput

func (SystemSnmpCommunityVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityVdom)(nil)).Elem()
}

func (i SystemSnmpCommunityVdomArray) ToSystemSnmpCommunityVdomArrayOutput() SystemSnmpCommunityVdomArrayOutput {
	return i.ToSystemSnmpCommunityVdomArrayOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityVdomArray) ToSystemSnmpCommunityVdomArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityVdomArrayOutput)
}

func (i SystemSnmpCommunityVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityVdom] {
	return pulumix.Output[[]SystemSnmpCommunityVdom]{
		OutputState: i.ToSystemSnmpCommunityVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpCommunityVdomOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpCommunityVdom)(nil)).Elem()
}

func (o SystemSnmpCommunityVdomOutput) ToSystemSnmpCommunityVdomOutput() SystemSnmpCommunityVdomOutput {
	return o
}

func (o SystemSnmpCommunityVdomOutput) ToSystemSnmpCommunityVdomOutputWithContext(ctx context.Context) SystemSnmpCommunityVdomOutput {
	return o
}

func (o SystemSnmpCommunityVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpCommunityVdom] {
	return pulumix.Output[SystemSnmpCommunityVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpCommunityVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSnmpCommunityVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpCommunityVdom)(nil)).Elem()
}

func (o SystemSnmpCommunityVdomArrayOutput) ToSystemSnmpCommunityVdomArrayOutput() SystemSnmpCommunityVdomArrayOutput {
	return o
}

func (o SystemSnmpCommunityVdomArrayOutput) ToSystemSnmpCommunityVdomArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityVdomArrayOutput {
	return o
}

func (o SystemSnmpCommunityVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpCommunityVdom] {
	return pulumix.Output[[]SystemSnmpCommunityVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityVdomArrayOutput) Index(i pulumi.IntInput) SystemSnmpCommunityVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSnmpCommunityVdom {
		return vs[0].([]SystemSnmpCommunityVdom)[vs[1].(int)]
	}).(SystemSnmpCommunityVdomOutput)
}

type SystemSnmpUserVdom struct {
	Name *string `pulumi:"name"`
}

// SystemSnmpUserVdomInput is an input type that accepts SystemSnmpUserVdomArgs and SystemSnmpUserVdomOutput values.
// You can construct a concrete instance of `SystemSnmpUserVdomInput` via:
//
//	SystemSnmpUserVdomArgs{...}
type SystemSnmpUserVdomInput interface {
	pulumi.Input

	ToSystemSnmpUserVdomOutput() SystemSnmpUserVdomOutput
	ToSystemSnmpUserVdomOutputWithContext(context.Context) SystemSnmpUserVdomOutput
}

type SystemSnmpUserVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSnmpUserVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpUserVdom)(nil)).Elem()
}

func (i SystemSnmpUserVdomArgs) ToSystemSnmpUserVdomOutput() SystemSnmpUserVdomOutput {
	return i.ToSystemSnmpUserVdomOutputWithContext(context.Background())
}

func (i SystemSnmpUserVdomArgs) ToSystemSnmpUserVdomOutputWithContext(ctx context.Context) SystemSnmpUserVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpUserVdomOutput)
}

func (i SystemSnmpUserVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpUserVdom] {
	return pulumix.Output[SystemSnmpUserVdom]{
		OutputState: i.ToSystemSnmpUserVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpUserVdomArrayInput is an input type that accepts SystemSnmpUserVdomArray and SystemSnmpUserVdomArrayOutput values.
// You can construct a concrete instance of `SystemSnmpUserVdomArrayInput` via:
//
//	SystemSnmpUserVdomArray{ SystemSnmpUserVdomArgs{...} }
type SystemSnmpUserVdomArrayInput interface {
	pulumi.Input

	ToSystemSnmpUserVdomArrayOutput() SystemSnmpUserVdomArrayOutput
	ToSystemSnmpUserVdomArrayOutputWithContext(context.Context) SystemSnmpUserVdomArrayOutput
}

type SystemSnmpUserVdomArray []SystemSnmpUserVdomInput

func (SystemSnmpUserVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpUserVdom)(nil)).Elem()
}

func (i SystemSnmpUserVdomArray) ToSystemSnmpUserVdomArrayOutput() SystemSnmpUserVdomArrayOutput {
	return i.ToSystemSnmpUserVdomArrayOutputWithContext(context.Background())
}

func (i SystemSnmpUserVdomArray) ToSystemSnmpUserVdomArrayOutputWithContext(ctx context.Context) SystemSnmpUserVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpUserVdomArrayOutput)
}

func (i SystemSnmpUserVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpUserVdom] {
	return pulumix.Output[[]SystemSnmpUserVdom]{
		OutputState: i.ToSystemSnmpUserVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpUserVdomOutput struct{ *pulumi.OutputState }

func (SystemSnmpUserVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSnmpUserVdom)(nil)).Elem()
}

func (o SystemSnmpUserVdomOutput) ToSystemSnmpUserVdomOutput() SystemSnmpUserVdomOutput {
	return o
}

func (o SystemSnmpUserVdomOutput) ToSystemSnmpUserVdomOutputWithContext(ctx context.Context) SystemSnmpUserVdomOutput {
	return o
}

func (o SystemSnmpUserVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSnmpUserVdom] {
	return pulumix.Output[SystemSnmpUserVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpUserVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSnmpUserVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSnmpUserVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpUserVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSnmpUserVdom)(nil)).Elem()
}

func (o SystemSnmpUserVdomArrayOutput) ToSystemSnmpUserVdomArrayOutput() SystemSnmpUserVdomArrayOutput {
	return o
}

func (o SystemSnmpUserVdomArrayOutput) ToSystemSnmpUserVdomArrayOutputWithContext(ctx context.Context) SystemSnmpUserVdomArrayOutput {
	return o
}

func (o SystemSnmpUserVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSnmpUserVdom] {
	return pulumix.Output[[]SystemSnmpUserVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpUserVdomArrayOutput) Index(i pulumi.IntInput) SystemSnmpUserVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSnmpUserVdom {
		return vs[0].([]SystemSnmpUserVdom)[vs[1].(int)]
	}).(SystemSnmpUserVdomOutput)
}

type SystemSpeedTestScheduleSchedule struct {
	Name *string `pulumi:"name"`
}

// SystemSpeedTestScheduleScheduleInput is an input type that accepts SystemSpeedTestScheduleScheduleArgs and SystemSpeedTestScheduleScheduleOutput values.
// You can construct a concrete instance of `SystemSpeedTestScheduleScheduleInput` via:
//
//	SystemSpeedTestScheduleScheduleArgs{...}
type SystemSpeedTestScheduleScheduleInput interface {
	pulumi.Input

	ToSystemSpeedTestScheduleScheduleOutput() SystemSpeedTestScheduleScheduleOutput
	ToSystemSpeedTestScheduleScheduleOutputWithContext(context.Context) SystemSpeedTestScheduleScheduleOutput
}

type SystemSpeedTestScheduleScheduleArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSpeedTestScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedTestScheduleSchedule)(nil)).Elem()
}

func (i SystemSpeedTestScheduleScheduleArgs) ToSystemSpeedTestScheduleScheduleOutput() SystemSpeedTestScheduleScheduleOutput {
	return i.ToSystemSpeedTestScheduleScheduleOutputWithContext(context.Background())
}

func (i SystemSpeedTestScheduleScheduleArgs) ToSystemSpeedTestScheduleScheduleOutputWithContext(ctx context.Context) SystemSpeedTestScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedTestScheduleScheduleOutput)
}

func (i SystemSpeedTestScheduleScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSpeedTestScheduleSchedule] {
	return pulumix.Output[SystemSpeedTestScheduleSchedule]{
		OutputState: i.ToSystemSpeedTestScheduleScheduleOutputWithContext(ctx).OutputState,
	}
}

// SystemSpeedTestScheduleScheduleArrayInput is an input type that accepts SystemSpeedTestScheduleScheduleArray and SystemSpeedTestScheduleScheduleArrayOutput values.
// You can construct a concrete instance of `SystemSpeedTestScheduleScheduleArrayInput` via:
//
//	SystemSpeedTestScheduleScheduleArray{ SystemSpeedTestScheduleScheduleArgs{...} }
type SystemSpeedTestScheduleScheduleArrayInput interface {
	pulumi.Input

	ToSystemSpeedTestScheduleScheduleArrayOutput() SystemSpeedTestScheduleScheduleArrayOutput
	ToSystemSpeedTestScheduleScheduleArrayOutputWithContext(context.Context) SystemSpeedTestScheduleScheduleArrayOutput
}

type SystemSpeedTestScheduleScheduleArray []SystemSpeedTestScheduleScheduleInput

func (SystemSpeedTestScheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedTestScheduleSchedule)(nil)).Elem()
}

func (i SystemSpeedTestScheduleScheduleArray) ToSystemSpeedTestScheduleScheduleArrayOutput() SystemSpeedTestScheduleScheduleArrayOutput {
	return i.ToSystemSpeedTestScheduleScheduleArrayOutputWithContext(context.Background())
}

func (i SystemSpeedTestScheduleScheduleArray) ToSystemSpeedTestScheduleScheduleArrayOutputWithContext(ctx context.Context) SystemSpeedTestScheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedTestScheduleScheduleArrayOutput)
}

func (i SystemSpeedTestScheduleScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSpeedTestScheduleSchedule] {
	return pulumix.Output[[]SystemSpeedTestScheduleSchedule]{
		OutputState: i.ToSystemSpeedTestScheduleScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSpeedTestScheduleScheduleOutput struct{ *pulumi.OutputState }

func (SystemSpeedTestScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedTestScheduleSchedule)(nil)).Elem()
}

func (o SystemSpeedTestScheduleScheduleOutput) ToSystemSpeedTestScheduleScheduleOutput() SystemSpeedTestScheduleScheduleOutput {
	return o
}

func (o SystemSpeedTestScheduleScheduleOutput) ToSystemSpeedTestScheduleScheduleOutputWithContext(ctx context.Context) SystemSpeedTestScheduleScheduleOutput {
	return o
}

func (o SystemSpeedTestScheduleScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSpeedTestScheduleSchedule] {
	return pulumix.Output[SystemSpeedTestScheduleSchedule]{
		OutputState: o.OutputState,
	}
}

func (o SystemSpeedTestScheduleScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestScheduleSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSpeedTestScheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (SystemSpeedTestScheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedTestScheduleSchedule)(nil)).Elem()
}

func (o SystemSpeedTestScheduleScheduleArrayOutput) ToSystemSpeedTestScheduleScheduleArrayOutput() SystemSpeedTestScheduleScheduleArrayOutput {
	return o
}

func (o SystemSpeedTestScheduleScheduleArrayOutput) ToSystemSpeedTestScheduleScheduleArrayOutputWithContext(ctx context.Context) SystemSpeedTestScheduleScheduleArrayOutput {
	return o
}

func (o SystemSpeedTestScheduleScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSpeedTestScheduleSchedule] {
	return pulumix.Output[[]SystemSpeedTestScheduleSchedule]{
		OutputState: o.OutputState,
	}
}

func (o SystemSpeedTestScheduleScheduleArrayOutput) Index(i pulumi.IntInput) SystemSpeedTestScheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSpeedTestScheduleSchedule {
		return vs[0].([]SystemSpeedTestScheduleSchedule)[vs[1].(int)]
	}).(SystemSpeedTestScheduleScheduleOutput)
}

type SystemSpeedTestServerHost struct {
	Distance  *int    `pulumi:"distance"`
	Id        *int    `pulumi:"id"`
	Ip        *string `pulumi:"ip"`
	Latitude  *string `pulumi:"latitude"`
	Longitude *string `pulumi:"longitude"`
	Password  *string `pulumi:"password"`
	Port      *int    `pulumi:"port"`
	User      *string `pulumi:"user"`
}

// SystemSpeedTestServerHostInput is an input type that accepts SystemSpeedTestServerHostArgs and SystemSpeedTestServerHostOutput values.
// You can construct a concrete instance of `SystemSpeedTestServerHostInput` via:
//
//	SystemSpeedTestServerHostArgs{...}
type SystemSpeedTestServerHostInput interface {
	pulumi.Input

	ToSystemSpeedTestServerHostOutput() SystemSpeedTestServerHostOutput
	ToSystemSpeedTestServerHostOutputWithContext(context.Context) SystemSpeedTestServerHostOutput
}

type SystemSpeedTestServerHostArgs struct {
	Distance  pulumi.IntPtrInput    `pulumi:"distance"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	Ip        pulumi.StringPtrInput `pulumi:"ip"`
	Latitude  pulumi.StringPtrInput `pulumi:"latitude"`
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	User      pulumi.StringPtrInput `pulumi:"user"`
}

func (SystemSpeedTestServerHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedTestServerHost)(nil)).Elem()
}

func (i SystemSpeedTestServerHostArgs) ToSystemSpeedTestServerHostOutput() SystemSpeedTestServerHostOutput {
	return i.ToSystemSpeedTestServerHostOutputWithContext(context.Background())
}

func (i SystemSpeedTestServerHostArgs) ToSystemSpeedTestServerHostOutputWithContext(ctx context.Context) SystemSpeedTestServerHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedTestServerHostOutput)
}

func (i SystemSpeedTestServerHostArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSpeedTestServerHost] {
	return pulumix.Output[SystemSpeedTestServerHost]{
		OutputState: i.ToSystemSpeedTestServerHostOutputWithContext(ctx).OutputState,
	}
}

// SystemSpeedTestServerHostArrayInput is an input type that accepts SystemSpeedTestServerHostArray and SystemSpeedTestServerHostArrayOutput values.
// You can construct a concrete instance of `SystemSpeedTestServerHostArrayInput` via:
//
//	SystemSpeedTestServerHostArray{ SystemSpeedTestServerHostArgs{...} }
type SystemSpeedTestServerHostArrayInput interface {
	pulumi.Input

	ToSystemSpeedTestServerHostArrayOutput() SystemSpeedTestServerHostArrayOutput
	ToSystemSpeedTestServerHostArrayOutputWithContext(context.Context) SystemSpeedTestServerHostArrayOutput
}

type SystemSpeedTestServerHostArray []SystemSpeedTestServerHostInput

func (SystemSpeedTestServerHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedTestServerHost)(nil)).Elem()
}

func (i SystemSpeedTestServerHostArray) ToSystemSpeedTestServerHostArrayOutput() SystemSpeedTestServerHostArrayOutput {
	return i.ToSystemSpeedTestServerHostArrayOutputWithContext(context.Background())
}

func (i SystemSpeedTestServerHostArray) ToSystemSpeedTestServerHostArrayOutputWithContext(ctx context.Context) SystemSpeedTestServerHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSpeedTestServerHostArrayOutput)
}

func (i SystemSpeedTestServerHostArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSpeedTestServerHost] {
	return pulumix.Output[[]SystemSpeedTestServerHost]{
		OutputState: i.ToSystemSpeedTestServerHostArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSpeedTestServerHostOutput struct{ *pulumi.OutputState }

func (SystemSpeedTestServerHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSpeedTestServerHost)(nil)).Elem()
}

func (o SystemSpeedTestServerHostOutput) ToSystemSpeedTestServerHostOutput() SystemSpeedTestServerHostOutput {
	return o
}

func (o SystemSpeedTestServerHostOutput) ToSystemSpeedTestServerHostOutputWithContext(ctx context.Context) SystemSpeedTestServerHostOutput {
	return o
}

func (o SystemSpeedTestServerHostOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSpeedTestServerHost] {
	return pulumix.Output[SystemSpeedTestServerHost]{
		OutputState: o.OutputState,
	}
}

func (o SystemSpeedTestServerHostOutput) Distance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *int { return v.Distance }).(pulumi.IntPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SystemSpeedTestServerHostOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSpeedTestServerHost) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SystemSpeedTestServerHostArrayOutput struct{ *pulumi.OutputState }

func (SystemSpeedTestServerHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSpeedTestServerHost)(nil)).Elem()
}

func (o SystemSpeedTestServerHostArrayOutput) ToSystemSpeedTestServerHostArrayOutput() SystemSpeedTestServerHostArrayOutput {
	return o
}

func (o SystemSpeedTestServerHostArrayOutput) ToSystemSpeedTestServerHostArrayOutputWithContext(ctx context.Context) SystemSpeedTestServerHostArrayOutput {
	return o
}

func (o SystemSpeedTestServerHostArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSpeedTestServerHost] {
	return pulumix.Output[[]SystemSpeedTestServerHost]{
		OutputState: o.OutputState,
	}
}

func (o SystemSpeedTestServerHostArrayOutput) Index(i pulumi.IntInput) SystemSpeedTestServerHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSpeedTestServerHost {
		return vs[0].([]SystemSpeedTestServerHost)[vs[1].(int)]
	}).(SystemSpeedTestServerHostOutput)
}

type SystemSsoAdminVdom struct {
	Name *string `pulumi:"name"`
}

// SystemSsoAdminVdomInput is an input type that accepts SystemSsoAdminVdomArgs and SystemSsoAdminVdomOutput values.
// You can construct a concrete instance of `SystemSsoAdminVdomInput` via:
//
//	SystemSsoAdminVdomArgs{...}
type SystemSsoAdminVdomInput interface {
	pulumi.Input

	ToSystemSsoAdminVdomOutput() SystemSsoAdminVdomOutput
	ToSystemSsoAdminVdomOutputWithContext(context.Context) SystemSsoAdminVdomOutput
}

type SystemSsoAdminVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSsoAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoAdminVdom)(nil)).Elem()
}

func (i SystemSsoAdminVdomArgs) ToSystemSsoAdminVdomOutput() SystemSsoAdminVdomOutput {
	return i.ToSystemSsoAdminVdomOutputWithContext(context.Background())
}

func (i SystemSsoAdminVdomArgs) ToSystemSsoAdminVdomOutputWithContext(ctx context.Context) SystemSsoAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoAdminVdomOutput)
}

func (i SystemSsoAdminVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSsoAdminVdom] {
	return pulumix.Output[SystemSsoAdminVdom]{
		OutputState: i.ToSystemSsoAdminVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemSsoAdminVdomArrayInput is an input type that accepts SystemSsoAdminVdomArray and SystemSsoAdminVdomArrayOutput values.
// You can construct a concrete instance of `SystemSsoAdminVdomArrayInput` via:
//
//	SystemSsoAdminVdomArray{ SystemSsoAdminVdomArgs{...} }
type SystemSsoAdminVdomArrayInput interface {
	pulumi.Input

	ToSystemSsoAdminVdomArrayOutput() SystemSsoAdminVdomArrayOutput
	ToSystemSsoAdminVdomArrayOutputWithContext(context.Context) SystemSsoAdminVdomArrayOutput
}

type SystemSsoAdminVdomArray []SystemSsoAdminVdomInput

func (SystemSsoAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoAdminVdom)(nil)).Elem()
}

func (i SystemSsoAdminVdomArray) ToSystemSsoAdminVdomArrayOutput() SystemSsoAdminVdomArrayOutput {
	return i.ToSystemSsoAdminVdomArrayOutputWithContext(context.Background())
}

func (i SystemSsoAdminVdomArray) ToSystemSsoAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoAdminVdomArrayOutput)
}

func (i SystemSsoAdminVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoAdminVdom] {
	return pulumix.Output[[]SystemSsoAdminVdom]{
		OutputState: i.ToSystemSsoAdminVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSsoAdminVdomOutput struct{ *pulumi.OutputState }

func (SystemSsoAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoAdminVdom)(nil)).Elem()
}

func (o SystemSsoAdminVdomOutput) ToSystemSsoAdminVdomOutput() SystemSsoAdminVdomOutput {
	return o
}

func (o SystemSsoAdminVdomOutput) ToSystemSsoAdminVdomOutputWithContext(ctx context.Context) SystemSsoAdminVdomOutput {
	return o
}

func (o SystemSsoAdminVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSsoAdminVdom] {
	return pulumix.Output[SystemSsoAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoAdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSsoAdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSsoAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoAdminVdom)(nil)).Elem()
}

func (o SystemSsoAdminVdomArrayOutput) ToSystemSsoAdminVdomArrayOutput() SystemSsoAdminVdomArrayOutput {
	return o
}

func (o SystemSsoAdminVdomArrayOutput) ToSystemSsoAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoAdminVdomArrayOutput {
	return o
}

func (o SystemSsoAdminVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoAdminVdom] {
	return pulumix.Output[[]SystemSsoAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoAdminVdomArrayOutput) Index(i pulumi.IntInput) SystemSsoAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSsoAdminVdom {
		return vs[0].([]SystemSsoAdminVdom)[vs[1].(int)]
	}).(SystemSsoAdminVdomOutput)
}

type SystemSsoForticloudAdminVdom struct {
	Name *string `pulumi:"name"`
}

// SystemSsoForticloudAdminVdomInput is an input type that accepts SystemSsoForticloudAdminVdomArgs and SystemSsoForticloudAdminVdomOutput values.
// You can construct a concrete instance of `SystemSsoForticloudAdminVdomInput` via:
//
//	SystemSsoForticloudAdminVdomArgs{...}
type SystemSsoForticloudAdminVdomInput interface {
	pulumi.Input

	ToSystemSsoForticloudAdminVdomOutput() SystemSsoForticloudAdminVdomOutput
	ToSystemSsoForticloudAdminVdomOutputWithContext(context.Context) SystemSsoForticloudAdminVdomOutput
}

type SystemSsoForticloudAdminVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSsoForticloudAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoForticloudAdminVdom)(nil)).Elem()
}

func (i SystemSsoForticloudAdminVdomArgs) ToSystemSsoForticloudAdminVdomOutput() SystemSsoForticloudAdminVdomOutput {
	return i.ToSystemSsoForticloudAdminVdomOutputWithContext(context.Background())
}

func (i SystemSsoForticloudAdminVdomArgs) ToSystemSsoForticloudAdminVdomOutputWithContext(ctx context.Context) SystemSsoForticloudAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoForticloudAdminVdomOutput)
}

func (i SystemSsoForticloudAdminVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSsoForticloudAdminVdom] {
	return pulumix.Output[SystemSsoForticloudAdminVdom]{
		OutputState: i.ToSystemSsoForticloudAdminVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemSsoForticloudAdminVdomArrayInput is an input type that accepts SystemSsoForticloudAdminVdomArray and SystemSsoForticloudAdminVdomArrayOutput values.
// You can construct a concrete instance of `SystemSsoForticloudAdminVdomArrayInput` via:
//
//	SystemSsoForticloudAdminVdomArray{ SystemSsoForticloudAdminVdomArgs{...} }
type SystemSsoForticloudAdminVdomArrayInput interface {
	pulumi.Input

	ToSystemSsoForticloudAdminVdomArrayOutput() SystemSsoForticloudAdminVdomArrayOutput
	ToSystemSsoForticloudAdminVdomArrayOutputWithContext(context.Context) SystemSsoForticloudAdminVdomArrayOutput
}

type SystemSsoForticloudAdminVdomArray []SystemSsoForticloudAdminVdomInput

func (SystemSsoForticloudAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoForticloudAdminVdom)(nil)).Elem()
}

func (i SystemSsoForticloudAdminVdomArray) ToSystemSsoForticloudAdminVdomArrayOutput() SystemSsoForticloudAdminVdomArrayOutput {
	return i.ToSystemSsoForticloudAdminVdomArrayOutputWithContext(context.Background())
}

func (i SystemSsoForticloudAdminVdomArray) ToSystemSsoForticloudAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoForticloudAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoForticloudAdminVdomArrayOutput)
}

func (i SystemSsoForticloudAdminVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoForticloudAdminVdom] {
	return pulumix.Output[[]SystemSsoForticloudAdminVdom]{
		OutputState: i.ToSystemSsoForticloudAdminVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSsoForticloudAdminVdomOutput struct{ *pulumi.OutputState }

func (SystemSsoForticloudAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoForticloudAdminVdom)(nil)).Elem()
}

func (o SystemSsoForticloudAdminVdomOutput) ToSystemSsoForticloudAdminVdomOutput() SystemSsoForticloudAdminVdomOutput {
	return o
}

func (o SystemSsoForticloudAdminVdomOutput) ToSystemSsoForticloudAdminVdomOutputWithContext(ctx context.Context) SystemSsoForticloudAdminVdomOutput {
	return o
}

func (o SystemSsoForticloudAdminVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSsoForticloudAdminVdom] {
	return pulumix.Output[SystemSsoForticloudAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoForticloudAdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSsoForticloudAdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSsoForticloudAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoForticloudAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoForticloudAdminVdom)(nil)).Elem()
}

func (o SystemSsoForticloudAdminVdomArrayOutput) ToSystemSsoForticloudAdminVdomArrayOutput() SystemSsoForticloudAdminVdomArrayOutput {
	return o
}

func (o SystemSsoForticloudAdminVdomArrayOutput) ToSystemSsoForticloudAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoForticloudAdminVdomArrayOutput {
	return o
}

func (o SystemSsoForticloudAdminVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoForticloudAdminVdom] {
	return pulumix.Output[[]SystemSsoForticloudAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoForticloudAdminVdomArrayOutput) Index(i pulumi.IntInput) SystemSsoForticloudAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSsoForticloudAdminVdom {
		return vs[0].([]SystemSsoForticloudAdminVdom)[vs[1].(int)]
	}).(SystemSsoForticloudAdminVdomOutput)
}

type SystemSsoFortigateCloudAdminVdom struct {
	Name *string `pulumi:"name"`
}

// SystemSsoFortigateCloudAdminVdomInput is an input type that accepts SystemSsoFortigateCloudAdminVdomArgs and SystemSsoFortigateCloudAdminVdomOutput values.
// You can construct a concrete instance of `SystemSsoFortigateCloudAdminVdomInput` via:
//
//	SystemSsoFortigateCloudAdminVdomArgs{...}
type SystemSsoFortigateCloudAdminVdomInput interface {
	pulumi.Input

	ToSystemSsoFortigateCloudAdminVdomOutput() SystemSsoFortigateCloudAdminVdomOutput
	ToSystemSsoFortigateCloudAdminVdomOutputWithContext(context.Context) SystemSsoFortigateCloudAdminVdomOutput
}

type SystemSsoFortigateCloudAdminVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemSsoFortigateCloudAdminVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoFortigateCloudAdminVdom)(nil)).Elem()
}

func (i SystemSsoFortigateCloudAdminVdomArgs) ToSystemSsoFortigateCloudAdminVdomOutput() SystemSsoFortigateCloudAdminVdomOutput {
	return i.ToSystemSsoFortigateCloudAdminVdomOutputWithContext(context.Background())
}

func (i SystemSsoFortigateCloudAdminVdomArgs) ToSystemSsoFortigateCloudAdminVdomOutputWithContext(ctx context.Context) SystemSsoFortigateCloudAdminVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoFortigateCloudAdminVdomOutput)
}

func (i SystemSsoFortigateCloudAdminVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSsoFortigateCloudAdminVdom] {
	return pulumix.Output[SystemSsoFortigateCloudAdminVdom]{
		OutputState: i.ToSystemSsoFortigateCloudAdminVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemSsoFortigateCloudAdminVdomArrayInput is an input type that accepts SystemSsoFortigateCloudAdminVdomArray and SystemSsoFortigateCloudAdminVdomArrayOutput values.
// You can construct a concrete instance of `SystemSsoFortigateCloudAdminVdomArrayInput` via:
//
//	SystemSsoFortigateCloudAdminVdomArray{ SystemSsoFortigateCloudAdminVdomArgs{...} }
type SystemSsoFortigateCloudAdminVdomArrayInput interface {
	pulumi.Input

	ToSystemSsoFortigateCloudAdminVdomArrayOutput() SystemSsoFortigateCloudAdminVdomArrayOutput
	ToSystemSsoFortigateCloudAdminVdomArrayOutputWithContext(context.Context) SystemSsoFortigateCloudAdminVdomArrayOutput
}

type SystemSsoFortigateCloudAdminVdomArray []SystemSsoFortigateCloudAdminVdomInput

func (SystemSsoFortigateCloudAdminVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoFortigateCloudAdminVdom)(nil)).Elem()
}

func (i SystemSsoFortigateCloudAdminVdomArray) ToSystemSsoFortigateCloudAdminVdomArrayOutput() SystemSsoFortigateCloudAdminVdomArrayOutput {
	return i.ToSystemSsoFortigateCloudAdminVdomArrayOutputWithContext(context.Background())
}

func (i SystemSsoFortigateCloudAdminVdomArray) ToSystemSsoFortigateCloudAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoFortigateCloudAdminVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSsoFortigateCloudAdminVdomArrayOutput)
}

func (i SystemSsoFortigateCloudAdminVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoFortigateCloudAdminVdom] {
	return pulumix.Output[[]SystemSsoFortigateCloudAdminVdom]{
		OutputState: i.ToSystemSsoFortigateCloudAdminVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSsoFortigateCloudAdminVdomOutput struct{ *pulumi.OutputState }

func (SystemSsoFortigateCloudAdminVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSsoFortigateCloudAdminVdom)(nil)).Elem()
}

func (o SystemSsoFortigateCloudAdminVdomOutput) ToSystemSsoFortigateCloudAdminVdomOutput() SystemSsoFortigateCloudAdminVdomOutput {
	return o
}

func (o SystemSsoFortigateCloudAdminVdomOutput) ToSystemSsoFortigateCloudAdminVdomOutputWithContext(ctx context.Context) SystemSsoFortigateCloudAdminVdomOutput {
	return o
}

func (o SystemSsoFortigateCloudAdminVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSsoFortigateCloudAdminVdom] {
	return pulumix.Output[SystemSsoFortigateCloudAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoFortigateCloudAdminVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSsoFortigateCloudAdminVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemSsoFortigateCloudAdminVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemSsoFortigateCloudAdminVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSsoFortigateCloudAdminVdom)(nil)).Elem()
}

func (o SystemSsoFortigateCloudAdminVdomArrayOutput) ToSystemSsoFortigateCloudAdminVdomArrayOutput() SystemSsoFortigateCloudAdminVdomArrayOutput {
	return o
}

func (o SystemSsoFortigateCloudAdminVdomArrayOutput) ToSystemSsoFortigateCloudAdminVdomArrayOutputWithContext(ctx context.Context) SystemSsoFortigateCloudAdminVdomArrayOutput {
	return o
}

func (o SystemSsoFortigateCloudAdminVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSsoFortigateCloudAdminVdom] {
	return pulumix.Output[[]SystemSsoFortigateCloudAdminVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemSsoFortigateCloudAdminVdomArrayOutput) Index(i pulumi.IntInput) SystemSsoFortigateCloudAdminVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSsoFortigateCloudAdminVdom {
		return vs[0].([]SystemSsoFortigateCloudAdminVdom)[vs[1].(int)]
	}).(SystemSsoFortigateCloudAdminVdomOutput)
}

type SystemStandaloneClusterClusterPeer struct {
	DownIntfsBeforeSessSyncs []SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync `pulumi:"downIntfsBeforeSessSyncs"`
	HbInterval               *int                                                        `pulumi:"hbInterval"`
	HbLostThreshold          *int                                                        `pulumi:"hbLostThreshold"`
	IpsecTunnelSync          *string                                                     `pulumi:"ipsecTunnelSync"`
	Peerip                   *string                                                     `pulumi:"peerip"`
	Peervd                   *string                                                     `pulumi:"peervd"`
	SecondaryAddIpsecRoutes  *string                                                     `pulumi:"secondaryAddIpsecRoutes"`
	SessionSyncFilter        *SystemStandaloneClusterClusterPeerSessionSyncFilter        `pulumi:"sessionSyncFilter"`
	SyncId                   *int                                                        `pulumi:"syncId"`
	Syncvds                  []SystemStandaloneClusterClusterPeerSyncvd                  `pulumi:"syncvds"`
}

// SystemStandaloneClusterClusterPeerInput is an input type that accepts SystemStandaloneClusterClusterPeerArgs and SystemStandaloneClusterClusterPeerOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerInput` via:
//
//	SystemStandaloneClusterClusterPeerArgs{...}
type SystemStandaloneClusterClusterPeerInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerOutput() SystemStandaloneClusterClusterPeerOutput
	ToSystemStandaloneClusterClusterPeerOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerOutput
}

type SystemStandaloneClusterClusterPeerArgs struct {
	DownIntfsBeforeSessSyncs SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayInput `pulumi:"downIntfsBeforeSessSyncs"`
	HbInterval               pulumi.IntPtrInput                                                  `pulumi:"hbInterval"`
	HbLostThreshold          pulumi.IntPtrInput                                                  `pulumi:"hbLostThreshold"`
	IpsecTunnelSync          pulumi.StringPtrInput                                               `pulumi:"ipsecTunnelSync"`
	Peerip                   pulumi.StringPtrInput                                               `pulumi:"peerip"`
	Peervd                   pulumi.StringPtrInput                                               `pulumi:"peervd"`
	SecondaryAddIpsecRoutes  pulumi.StringPtrInput                                               `pulumi:"secondaryAddIpsecRoutes"`
	SessionSyncFilter        SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput         `pulumi:"sessionSyncFilter"`
	SyncId                   pulumi.IntPtrInput                                                  `pulumi:"syncId"`
	Syncvds                  SystemStandaloneClusterClusterPeerSyncvdArrayInput                  `pulumi:"syncvds"`
}

func (SystemStandaloneClusterClusterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeer)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerArgs) ToSystemStandaloneClusterClusterPeerOutput() SystemStandaloneClusterClusterPeerOutput {
	return i.ToSystemStandaloneClusterClusterPeerOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerArgs) ToSystemStandaloneClusterClusterPeerOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerOutput)
}

func (i SystemStandaloneClusterClusterPeerArgs) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeer] {
	return pulumix.Output[SystemStandaloneClusterClusterPeer]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerOutputWithContext(ctx).OutputState,
	}
}

// SystemStandaloneClusterClusterPeerArrayInput is an input type that accepts SystemStandaloneClusterClusterPeerArray and SystemStandaloneClusterClusterPeerArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerArrayInput` via:
//
//	SystemStandaloneClusterClusterPeerArray{ SystemStandaloneClusterClusterPeerArgs{...} }
type SystemStandaloneClusterClusterPeerArrayInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerArrayOutput() SystemStandaloneClusterClusterPeerArrayOutput
	ToSystemStandaloneClusterClusterPeerArrayOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerArrayOutput
}

type SystemStandaloneClusterClusterPeerArray []SystemStandaloneClusterClusterPeerInput

func (SystemStandaloneClusterClusterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeer)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerArray) ToSystemStandaloneClusterClusterPeerArrayOutput() SystemStandaloneClusterClusterPeerArrayOutput {
	return i.ToSystemStandaloneClusterClusterPeerArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerArray) ToSystemStandaloneClusterClusterPeerArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerArrayOutput)
}

func (i SystemStandaloneClusterClusterPeerArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeer] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeer]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemStandaloneClusterClusterPeerOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeer)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerOutput) ToSystemStandaloneClusterClusterPeerOutput() SystemStandaloneClusterClusterPeerOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerOutput) ToSystemStandaloneClusterClusterPeerOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerOutput) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeer] {
	return pulumix.Output[SystemStandaloneClusterClusterPeer]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerOutput) DownIntfsBeforeSessSyncs() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) []SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync {
		return v.DownIntfsBeforeSessSyncs
	}).(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) HbInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *int { return v.HbInterval }).(pulumi.IntPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) HbLostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *int { return v.HbLostThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) IpsecTunnelSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *string { return v.IpsecTunnelSync }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) Peerip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *string { return v.Peerip }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) Peervd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *string { return v.Peervd }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) SecondaryAddIpsecRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *string { return v.SecondaryAddIpsecRoutes }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) SessionSyncFilter() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *SystemStandaloneClusterClusterPeerSessionSyncFilter {
		return v.SessionSyncFilter
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) SyncId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) *int { return v.SyncId }).(pulumi.IntPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerOutput) Syncvds() SystemStandaloneClusterClusterPeerSyncvdArrayOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeer) []SystemStandaloneClusterClusterPeerSyncvd {
		return v.Syncvds
	}).(SystemStandaloneClusterClusterPeerSyncvdArrayOutput)
}

type SystemStandaloneClusterClusterPeerArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeer)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerArrayOutput) ToSystemStandaloneClusterClusterPeerArrayOutput() SystemStandaloneClusterClusterPeerArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerArrayOutput) ToSystemStandaloneClusterClusterPeerArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeer] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeer]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerArrayOutput) Index(i pulumi.IntInput) SystemStandaloneClusterClusterPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneClusterClusterPeer {
		return vs[0].([]SystemStandaloneClusterClusterPeer)[vs[1].(int)]
	}).(SystemStandaloneClusterClusterPeerOutput)
}

type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync struct {
	Name *string `pulumi:"name"`
}

// SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncInput is an input type that accepts SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs and SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncInput` via:
//
//	SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs{...}
type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput
	ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput
}

type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return i.ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx).OutputState,
	}
}

// SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayInput is an input type that accepts SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray and SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayInput` via:
//
//	SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray{ SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs{...} }
type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
	ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput
}

type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray []SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncInput

func (SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return i.ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput)
}

func (i SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput() SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToSystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput) Index(i pulumi.IntInput) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync {
		return vs[0].([]SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSync)[vs[1].(int)]
	}).(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput)
}

type SystemStandaloneClusterClusterPeerSessionSyncFilter struct {
	CustomServices []SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService `pulumi:"customServices"`
	Dstaddr        *string                                                            `pulumi:"dstaddr"`
	Dstaddr6       *string                                                            `pulumi:"dstaddr6"`
	Dstintf        *string                                                            `pulumi:"dstintf"`
	Srcaddr        *string                                                            `pulumi:"srcaddr"`
	Srcaddr6       *string                                                            `pulumi:"srcaddr6"`
	Srcintf        *string                                                            `pulumi:"srcintf"`
}

// SystemStandaloneClusterClusterPeerSessionSyncFilterInput is an input type that accepts SystemStandaloneClusterClusterPeerSessionSyncFilterArgs and SystemStandaloneClusterClusterPeerSessionSyncFilterOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSessionSyncFilterInput` via:
//
//	SystemStandaloneClusterClusterPeerSessionSyncFilterArgs{...}
type SystemStandaloneClusterClusterPeerSessionSyncFilterInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterOutput
	ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterOutput
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterArgs struct {
	CustomServices SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayInput `pulumi:"customServices"`
	Dstaddr        pulumi.StringPtrInput                                                      `pulumi:"dstaddr"`
	Dstaddr6       pulumi.StringPtrInput                                                      `pulumi:"dstaddr6"`
	Dstintf        pulumi.StringPtrInput                                                      `pulumi:"dstintf"`
	Srcaddr        pulumi.StringPtrInput                                                      `pulumi:"srcaddr"`
	Srcaddr6       pulumi.StringPtrInput                                                      `pulumi:"srcaddr6"`
	Srcintf        pulumi.StringPtrInput                                                      `pulumi:"srcintf"`
}

func (SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterOutput {
	return i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSessionSyncFilterOutput)
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilter] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilter]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutputWithContext(ctx).OutputState,
	}
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSessionSyncFilterOutput).ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx)
}

// SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput is an input type that accepts SystemStandaloneClusterClusterPeerSessionSyncFilterArgs, SystemStandaloneClusterClusterPeerSessionSyncFilterPtr and SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput` via:
//
//	        SystemStandaloneClusterClusterPeerSessionSyncFilterArgs{...}
//
//	or:
//
//	        nil
type SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput
	ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput
}

type systemStandaloneClusterClusterPeerSessionSyncFilterPtrType SystemStandaloneClusterClusterPeerSessionSyncFilterArgs

func SystemStandaloneClusterClusterPeerSessionSyncFilterPtr(v *SystemStandaloneClusterClusterPeerSessionSyncFilterArgs) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput {
	return (*systemStandaloneClusterClusterPeerSessionSyncFilterPtrType)(v)
}

func (*systemStandaloneClusterClusterPeerSessionSyncFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemStandaloneClusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (i *systemStandaloneClusterClusterPeerSessionSyncFilterPtrType) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (i *systemStandaloneClusterClusterPeerSessionSyncFilterPtrType) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput)
}

func (i *systemStandaloneClusterClusterPeerSessionSyncFilterPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemStandaloneClusterClusterPeerSessionSyncFilter] {
	return pulumix.Output[*SystemStandaloneClusterClusterPeerSessionSyncFilter]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(context.Background())
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemStandaloneClusterClusterPeerSessionSyncFilter) *SystemStandaloneClusterClusterPeerSessionSyncFilter {
		return &v
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilter] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) CustomServices() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) []SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService {
		return v.CustomServices
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Dstaddr6 }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Dstintf }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Srcaddr6 }).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilter) *string { return v.Srcintf }).(pulumi.StringPtrOutput)
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemStandaloneClusterClusterPeerSessionSyncFilter)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemStandaloneClusterClusterPeerSessionSyncFilter] {
	return pulumix.Output[*SystemStandaloneClusterClusterPeerSessionSyncFilter]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Elem() SystemStandaloneClusterClusterPeerSessionSyncFilterOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) SystemStandaloneClusterClusterPeerSessionSyncFilter {
		if v != nil {
			return *v
		}
		var ret SystemStandaloneClusterClusterPeerSessionSyncFilter
		return ret
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) CustomServices() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) []SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Dstaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstaddr6
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Dstintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Dstintf
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Srcaddr6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcaddr6
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput) Srcintf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemStandaloneClusterClusterPeerSessionSyncFilter) *string {
		if v == nil {
			return nil
		}
		return v.Srcintf
	}).(pulumi.StringPtrOutput)
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService struct {
	DstPortRange *string `pulumi:"dstPortRange"`
	Id           *int    `pulumi:"id"`
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceInput is an input type that accepts SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs and SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceInput` via:
//
//	SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs{...}
type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput
	ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs struct {
	DstPortRange pulumi.StringPtrInput `pulumi:"dstPortRange"`
	Id           pulumi.IntPtrInput    `pulumi:"id"`
	SrcPortRange pulumi.StringPtrInput `pulumi:"srcPortRange"`
}

func (SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx).OutputState,
	}
}

// SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayInput is an input type that accepts SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray and SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayInput` via:
//
//	SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray{ SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs{...} }
type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
	ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray []SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceInput

func (SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput)
}

func (i SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) DstPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService) *string {
		return v.DstPortRange
	}).(pulumi.StringPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput) SrcPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService) *string {
		return v.SrcPortRange
	}).(pulumi.StringPtrOutput)
}

type SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput() SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToSystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput) Index(i pulumi.IntInput) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService {
		return vs[0].([]SystemStandaloneClusterClusterPeerSessionSyncFilterCustomService)[vs[1].(int)]
	}).(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput)
}

type SystemStandaloneClusterClusterPeerSyncvd struct {
	Name *string `pulumi:"name"`
}

// SystemStandaloneClusterClusterPeerSyncvdInput is an input type that accepts SystemStandaloneClusterClusterPeerSyncvdArgs and SystemStandaloneClusterClusterPeerSyncvdOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSyncvdInput` via:
//
//	SystemStandaloneClusterClusterPeerSyncvdArgs{...}
type SystemStandaloneClusterClusterPeerSyncvdInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSyncvdOutput() SystemStandaloneClusterClusterPeerSyncvdOutput
	ToSystemStandaloneClusterClusterPeerSyncvdOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSyncvdOutput
}

type SystemStandaloneClusterClusterPeerSyncvdArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemStandaloneClusterClusterPeerSyncvdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSyncvd)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerSyncvdArgs) ToSystemStandaloneClusterClusterPeerSyncvdOutput() SystemStandaloneClusterClusterPeerSyncvdOutput {
	return i.ToSystemStandaloneClusterClusterPeerSyncvdOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSyncvdArgs) ToSystemStandaloneClusterClusterPeerSyncvdOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSyncvdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSyncvdOutput)
}

func (i SystemStandaloneClusterClusterPeerSyncvdArgs) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSyncvd] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSyncvd]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSyncvdOutputWithContext(ctx).OutputState,
	}
}

// SystemStandaloneClusterClusterPeerSyncvdArrayInput is an input type that accepts SystemStandaloneClusterClusterPeerSyncvdArray and SystemStandaloneClusterClusterPeerSyncvdArrayOutput values.
// You can construct a concrete instance of `SystemStandaloneClusterClusterPeerSyncvdArrayInput` via:
//
//	SystemStandaloneClusterClusterPeerSyncvdArray{ SystemStandaloneClusterClusterPeerSyncvdArgs{...} }
type SystemStandaloneClusterClusterPeerSyncvdArrayInput interface {
	pulumi.Input

	ToSystemStandaloneClusterClusterPeerSyncvdArrayOutput() SystemStandaloneClusterClusterPeerSyncvdArrayOutput
	ToSystemStandaloneClusterClusterPeerSyncvdArrayOutputWithContext(context.Context) SystemStandaloneClusterClusterPeerSyncvdArrayOutput
}

type SystemStandaloneClusterClusterPeerSyncvdArray []SystemStandaloneClusterClusterPeerSyncvdInput

func (SystemStandaloneClusterClusterPeerSyncvdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerSyncvd)(nil)).Elem()
}

func (i SystemStandaloneClusterClusterPeerSyncvdArray) ToSystemStandaloneClusterClusterPeerSyncvdArrayOutput() SystemStandaloneClusterClusterPeerSyncvdArrayOutput {
	return i.ToSystemStandaloneClusterClusterPeerSyncvdArrayOutputWithContext(context.Background())
}

func (i SystemStandaloneClusterClusterPeerSyncvdArray) ToSystemStandaloneClusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSyncvdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemStandaloneClusterClusterPeerSyncvdArrayOutput)
}

func (i SystemStandaloneClusterClusterPeerSyncvdArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerSyncvd] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerSyncvd]{
		OutputState: i.ToSystemStandaloneClusterClusterPeerSyncvdArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemStandaloneClusterClusterPeerSyncvdOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSyncvdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemStandaloneClusterClusterPeerSyncvd)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSyncvdOutput) ToSystemStandaloneClusterClusterPeerSyncvdOutput() SystemStandaloneClusterClusterPeerSyncvdOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSyncvdOutput) ToSystemStandaloneClusterClusterPeerSyncvdOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSyncvdOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSyncvdOutput) ToOutput(ctx context.Context) pulumix.Output[SystemStandaloneClusterClusterPeerSyncvd] {
	return pulumix.Output[SystemStandaloneClusterClusterPeerSyncvd]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSyncvdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemStandaloneClusterClusterPeerSyncvd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemStandaloneClusterClusterPeerSyncvdArrayOutput struct{ *pulumi.OutputState }

func (SystemStandaloneClusterClusterPeerSyncvdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemStandaloneClusterClusterPeerSyncvd)(nil)).Elem()
}

func (o SystemStandaloneClusterClusterPeerSyncvdArrayOutput) ToSystemStandaloneClusterClusterPeerSyncvdArrayOutput() SystemStandaloneClusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSyncvdArrayOutput) ToSystemStandaloneClusterClusterPeerSyncvdArrayOutputWithContext(ctx context.Context) SystemStandaloneClusterClusterPeerSyncvdArrayOutput {
	return o
}

func (o SystemStandaloneClusterClusterPeerSyncvdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemStandaloneClusterClusterPeerSyncvd] {
	return pulumix.Output[[]SystemStandaloneClusterClusterPeerSyncvd]{
		OutputState: o.OutputState,
	}
}

func (o SystemStandaloneClusterClusterPeerSyncvdArrayOutput) Index(i pulumi.IntInput) SystemStandaloneClusterClusterPeerSyncvdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemStandaloneClusterClusterPeerSyncvd {
		return vs[0].([]SystemStandaloneClusterClusterPeerSyncvd)[vs[1].(int)]
	}).(SystemStandaloneClusterClusterPeerSyncvdOutput)
}

type SystemSwitchInterfaceMember struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemSwitchInterfaceMemberInput is an input type that accepts SystemSwitchInterfaceMemberArgs and SystemSwitchInterfaceMemberOutput values.
// You can construct a concrete instance of `SystemSwitchInterfaceMemberInput` via:
//
//	SystemSwitchInterfaceMemberArgs{...}
type SystemSwitchInterfaceMemberInput interface {
	pulumi.Input

	ToSystemSwitchInterfaceMemberOutput() SystemSwitchInterfaceMemberOutput
	ToSystemSwitchInterfaceMemberOutputWithContext(context.Context) SystemSwitchInterfaceMemberOutput
}

type SystemSwitchInterfaceMemberArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemSwitchInterfaceMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchInterfaceMember)(nil)).Elem()
}

func (i SystemSwitchInterfaceMemberArgs) ToSystemSwitchInterfaceMemberOutput() SystemSwitchInterfaceMemberOutput {
	return i.ToSystemSwitchInterfaceMemberOutputWithContext(context.Background())
}

func (i SystemSwitchInterfaceMemberArgs) ToSystemSwitchInterfaceMemberOutputWithContext(ctx context.Context) SystemSwitchInterfaceMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchInterfaceMemberOutput)
}

func (i SystemSwitchInterfaceMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSwitchInterfaceMember] {
	return pulumix.Output[SystemSwitchInterfaceMember]{
		OutputState: i.ToSystemSwitchInterfaceMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemSwitchInterfaceMemberArrayInput is an input type that accepts SystemSwitchInterfaceMemberArray and SystemSwitchInterfaceMemberArrayOutput values.
// You can construct a concrete instance of `SystemSwitchInterfaceMemberArrayInput` via:
//
//	SystemSwitchInterfaceMemberArray{ SystemSwitchInterfaceMemberArgs{...} }
type SystemSwitchInterfaceMemberArrayInput interface {
	pulumi.Input

	ToSystemSwitchInterfaceMemberArrayOutput() SystemSwitchInterfaceMemberArrayOutput
	ToSystemSwitchInterfaceMemberArrayOutputWithContext(context.Context) SystemSwitchInterfaceMemberArrayOutput
}

type SystemSwitchInterfaceMemberArray []SystemSwitchInterfaceMemberInput

func (SystemSwitchInterfaceMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchInterfaceMember)(nil)).Elem()
}

func (i SystemSwitchInterfaceMemberArray) ToSystemSwitchInterfaceMemberArrayOutput() SystemSwitchInterfaceMemberArrayOutput {
	return i.ToSystemSwitchInterfaceMemberArrayOutputWithContext(context.Background())
}

func (i SystemSwitchInterfaceMemberArray) ToSystemSwitchInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemSwitchInterfaceMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchInterfaceMemberArrayOutput)
}

func (i SystemSwitchInterfaceMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSwitchInterfaceMember] {
	return pulumix.Output[[]SystemSwitchInterfaceMember]{
		OutputState: i.ToSystemSwitchInterfaceMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSwitchInterfaceMemberOutput struct{ *pulumi.OutputState }

func (SystemSwitchInterfaceMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchInterfaceMember)(nil)).Elem()
}

func (o SystemSwitchInterfaceMemberOutput) ToSystemSwitchInterfaceMemberOutput() SystemSwitchInterfaceMemberOutput {
	return o
}

func (o SystemSwitchInterfaceMemberOutput) ToSystemSwitchInterfaceMemberOutputWithContext(ctx context.Context) SystemSwitchInterfaceMemberOutput {
	return o
}

func (o SystemSwitchInterfaceMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSwitchInterfaceMember] {
	return pulumix.Output[SystemSwitchInterfaceMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSwitchInterfaceMemberOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSwitchInterfaceMember) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemSwitchInterfaceMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemSwitchInterfaceMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchInterfaceMember)(nil)).Elem()
}

func (o SystemSwitchInterfaceMemberArrayOutput) ToSystemSwitchInterfaceMemberArrayOutput() SystemSwitchInterfaceMemberArrayOutput {
	return o
}

func (o SystemSwitchInterfaceMemberArrayOutput) ToSystemSwitchInterfaceMemberArrayOutputWithContext(ctx context.Context) SystemSwitchInterfaceMemberArrayOutput {
	return o
}

func (o SystemSwitchInterfaceMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSwitchInterfaceMember] {
	return pulumix.Output[[]SystemSwitchInterfaceMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemSwitchInterfaceMemberArrayOutput) Index(i pulumi.IntInput) SystemSwitchInterfaceMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSwitchInterfaceMember {
		return vs[0].([]SystemSwitchInterfaceMember)[vs[1].(int)]
	}).(SystemSwitchInterfaceMemberOutput)
}

type SystemSwitchInterfaceSpanSourcePort struct {
	InterfaceName *string `pulumi:"interfaceName"`
}

// SystemSwitchInterfaceSpanSourcePortInput is an input type that accepts SystemSwitchInterfaceSpanSourcePortArgs and SystemSwitchInterfaceSpanSourcePortOutput values.
// You can construct a concrete instance of `SystemSwitchInterfaceSpanSourcePortInput` via:
//
//	SystemSwitchInterfaceSpanSourcePortArgs{...}
type SystemSwitchInterfaceSpanSourcePortInput interface {
	pulumi.Input

	ToSystemSwitchInterfaceSpanSourcePortOutput() SystemSwitchInterfaceSpanSourcePortOutput
	ToSystemSwitchInterfaceSpanSourcePortOutputWithContext(context.Context) SystemSwitchInterfaceSpanSourcePortOutput
}

type SystemSwitchInterfaceSpanSourcePortArgs struct {
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
}

func (SystemSwitchInterfaceSpanSourcePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchInterfaceSpanSourcePort)(nil)).Elem()
}

func (i SystemSwitchInterfaceSpanSourcePortArgs) ToSystemSwitchInterfaceSpanSourcePortOutput() SystemSwitchInterfaceSpanSourcePortOutput {
	return i.ToSystemSwitchInterfaceSpanSourcePortOutputWithContext(context.Background())
}

func (i SystemSwitchInterfaceSpanSourcePortArgs) ToSystemSwitchInterfaceSpanSourcePortOutputWithContext(ctx context.Context) SystemSwitchInterfaceSpanSourcePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchInterfaceSpanSourcePortOutput)
}

func (i SystemSwitchInterfaceSpanSourcePortArgs) ToOutput(ctx context.Context) pulumix.Output[SystemSwitchInterfaceSpanSourcePort] {
	return pulumix.Output[SystemSwitchInterfaceSpanSourcePort]{
		OutputState: i.ToSystemSwitchInterfaceSpanSourcePortOutputWithContext(ctx).OutputState,
	}
}

// SystemSwitchInterfaceSpanSourcePortArrayInput is an input type that accepts SystemSwitchInterfaceSpanSourcePortArray and SystemSwitchInterfaceSpanSourcePortArrayOutput values.
// You can construct a concrete instance of `SystemSwitchInterfaceSpanSourcePortArrayInput` via:
//
//	SystemSwitchInterfaceSpanSourcePortArray{ SystemSwitchInterfaceSpanSourcePortArgs{...} }
type SystemSwitchInterfaceSpanSourcePortArrayInput interface {
	pulumi.Input

	ToSystemSwitchInterfaceSpanSourcePortArrayOutput() SystemSwitchInterfaceSpanSourcePortArrayOutput
	ToSystemSwitchInterfaceSpanSourcePortArrayOutputWithContext(context.Context) SystemSwitchInterfaceSpanSourcePortArrayOutput
}

type SystemSwitchInterfaceSpanSourcePortArray []SystemSwitchInterfaceSpanSourcePortInput

func (SystemSwitchInterfaceSpanSourcePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchInterfaceSpanSourcePort)(nil)).Elem()
}

func (i SystemSwitchInterfaceSpanSourcePortArray) ToSystemSwitchInterfaceSpanSourcePortArrayOutput() SystemSwitchInterfaceSpanSourcePortArrayOutput {
	return i.ToSystemSwitchInterfaceSpanSourcePortArrayOutputWithContext(context.Background())
}

func (i SystemSwitchInterfaceSpanSourcePortArray) ToSystemSwitchInterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SystemSwitchInterfaceSpanSourcePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSwitchInterfaceSpanSourcePortArrayOutput)
}

func (i SystemSwitchInterfaceSpanSourcePortArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemSwitchInterfaceSpanSourcePort] {
	return pulumix.Output[[]SystemSwitchInterfaceSpanSourcePort]{
		OutputState: i.ToSystemSwitchInterfaceSpanSourcePortArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemSwitchInterfaceSpanSourcePortOutput struct{ *pulumi.OutputState }

func (SystemSwitchInterfaceSpanSourcePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSwitchInterfaceSpanSourcePort)(nil)).Elem()
}

func (o SystemSwitchInterfaceSpanSourcePortOutput) ToSystemSwitchInterfaceSpanSourcePortOutput() SystemSwitchInterfaceSpanSourcePortOutput {
	return o
}

func (o SystemSwitchInterfaceSpanSourcePortOutput) ToSystemSwitchInterfaceSpanSourcePortOutputWithContext(ctx context.Context) SystemSwitchInterfaceSpanSourcePortOutput {
	return o
}

func (o SystemSwitchInterfaceSpanSourcePortOutput) ToOutput(ctx context.Context) pulumix.Output[SystemSwitchInterfaceSpanSourcePort] {
	return pulumix.Output[SystemSwitchInterfaceSpanSourcePort]{
		OutputState: o.OutputState,
	}
}

func (o SystemSwitchInterfaceSpanSourcePortOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemSwitchInterfaceSpanSourcePort) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

type SystemSwitchInterfaceSpanSourcePortArrayOutput struct{ *pulumi.OutputState }

func (SystemSwitchInterfaceSpanSourcePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSwitchInterfaceSpanSourcePort)(nil)).Elem()
}

func (o SystemSwitchInterfaceSpanSourcePortArrayOutput) ToSystemSwitchInterfaceSpanSourcePortArrayOutput() SystemSwitchInterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SystemSwitchInterfaceSpanSourcePortArrayOutput) ToSystemSwitchInterfaceSpanSourcePortArrayOutputWithContext(ctx context.Context) SystemSwitchInterfaceSpanSourcePortArrayOutput {
	return o
}

func (o SystemSwitchInterfaceSpanSourcePortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemSwitchInterfaceSpanSourcePort] {
	return pulumix.Output[[]SystemSwitchInterfaceSpanSourcePort]{
		OutputState: o.OutputState,
	}
}

func (o SystemSwitchInterfaceSpanSourcePortArrayOutput) Index(i pulumi.IntInput) SystemSwitchInterfaceSpanSourcePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSwitchInterfaceSpanSourcePort {
		return vs[0].([]SystemSwitchInterfaceSpanSourcePort)[vs[1].(int)]
	}).(SystemSwitchInterfaceSpanSourcePortOutput)
}

type SystemVdomDnsServerHostname struct {
	Hostname *string `pulumi:"hostname"`
}

// SystemVdomDnsServerHostnameInput is an input type that accepts SystemVdomDnsServerHostnameArgs and SystemVdomDnsServerHostnameOutput values.
// You can construct a concrete instance of `SystemVdomDnsServerHostnameInput` via:
//
//	SystemVdomDnsServerHostnameArgs{...}
type SystemVdomDnsServerHostnameInput interface {
	pulumi.Input

	ToSystemVdomDnsServerHostnameOutput() SystemVdomDnsServerHostnameOutput
	ToSystemVdomDnsServerHostnameOutputWithContext(context.Context) SystemVdomDnsServerHostnameOutput
}

type SystemVdomDnsServerHostnameArgs struct {
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (SystemVdomDnsServerHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomDnsServerHostname)(nil)).Elem()
}

func (i SystemVdomDnsServerHostnameArgs) ToSystemVdomDnsServerHostnameOutput() SystemVdomDnsServerHostnameOutput {
	return i.ToSystemVdomDnsServerHostnameOutputWithContext(context.Background())
}

func (i SystemVdomDnsServerHostnameArgs) ToSystemVdomDnsServerHostnameOutputWithContext(ctx context.Context) SystemVdomDnsServerHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomDnsServerHostnameOutput)
}

func (i SystemVdomDnsServerHostnameArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVdomDnsServerHostname] {
	return pulumix.Output[SystemVdomDnsServerHostname]{
		OutputState: i.ToSystemVdomDnsServerHostnameOutputWithContext(ctx).OutputState,
	}
}

// SystemVdomDnsServerHostnameArrayInput is an input type that accepts SystemVdomDnsServerHostnameArray and SystemVdomDnsServerHostnameArrayOutput values.
// You can construct a concrete instance of `SystemVdomDnsServerHostnameArrayInput` via:
//
//	SystemVdomDnsServerHostnameArray{ SystemVdomDnsServerHostnameArgs{...} }
type SystemVdomDnsServerHostnameArrayInput interface {
	pulumi.Input

	ToSystemVdomDnsServerHostnameArrayOutput() SystemVdomDnsServerHostnameArrayOutput
	ToSystemVdomDnsServerHostnameArrayOutputWithContext(context.Context) SystemVdomDnsServerHostnameArrayOutput
}

type SystemVdomDnsServerHostnameArray []SystemVdomDnsServerHostnameInput

func (SystemVdomDnsServerHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomDnsServerHostname)(nil)).Elem()
}

func (i SystemVdomDnsServerHostnameArray) ToSystemVdomDnsServerHostnameArrayOutput() SystemVdomDnsServerHostnameArrayOutput {
	return i.ToSystemVdomDnsServerHostnameArrayOutputWithContext(context.Background())
}

func (i SystemVdomDnsServerHostnameArray) ToSystemVdomDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemVdomDnsServerHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomDnsServerHostnameArrayOutput)
}

func (i SystemVdomDnsServerHostnameArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVdomDnsServerHostname] {
	return pulumix.Output[[]SystemVdomDnsServerHostname]{
		OutputState: i.ToSystemVdomDnsServerHostnameArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVdomDnsServerHostnameOutput struct{ *pulumi.OutputState }

func (SystemVdomDnsServerHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomDnsServerHostname)(nil)).Elem()
}

func (o SystemVdomDnsServerHostnameOutput) ToSystemVdomDnsServerHostnameOutput() SystemVdomDnsServerHostnameOutput {
	return o
}

func (o SystemVdomDnsServerHostnameOutput) ToSystemVdomDnsServerHostnameOutputWithContext(ctx context.Context) SystemVdomDnsServerHostnameOutput {
	return o
}

func (o SystemVdomDnsServerHostnameOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVdomDnsServerHostname] {
	return pulumix.Output[SystemVdomDnsServerHostname]{
		OutputState: o.OutputState,
	}
}

func (o SystemVdomDnsServerHostnameOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVdomDnsServerHostname) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type SystemVdomDnsServerHostnameArrayOutput struct{ *pulumi.OutputState }

func (SystemVdomDnsServerHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomDnsServerHostname)(nil)).Elem()
}

func (o SystemVdomDnsServerHostnameArrayOutput) ToSystemVdomDnsServerHostnameArrayOutput() SystemVdomDnsServerHostnameArrayOutput {
	return o
}

func (o SystemVdomDnsServerHostnameArrayOutput) ToSystemVdomDnsServerHostnameArrayOutputWithContext(ctx context.Context) SystemVdomDnsServerHostnameArrayOutput {
	return o
}

func (o SystemVdomDnsServerHostnameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVdomDnsServerHostname] {
	return pulumix.Output[[]SystemVdomDnsServerHostname]{
		OutputState: o.OutputState,
	}
}

func (o SystemVdomDnsServerHostnameArrayOutput) Index(i pulumi.IntInput) SystemVdomDnsServerHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVdomDnsServerHostname {
		return vs[0].([]SystemVdomDnsServerHostname)[vs[1].(int)]
	}).(SystemVdomDnsServerHostnameOutput)
}

type SystemVdomExceptionVdom struct {
	Name *string `pulumi:"name"`
}

// SystemVdomExceptionVdomInput is an input type that accepts SystemVdomExceptionVdomArgs and SystemVdomExceptionVdomOutput values.
// You can construct a concrete instance of `SystemVdomExceptionVdomInput` via:
//
//	SystemVdomExceptionVdomArgs{...}
type SystemVdomExceptionVdomInput interface {
	pulumi.Input

	ToSystemVdomExceptionVdomOutput() SystemVdomExceptionVdomOutput
	ToSystemVdomExceptionVdomOutputWithContext(context.Context) SystemVdomExceptionVdomOutput
}

type SystemVdomExceptionVdomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVdomExceptionVdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomExceptionVdom)(nil)).Elem()
}

func (i SystemVdomExceptionVdomArgs) ToSystemVdomExceptionVdomOutput() SystemVdomExceptionVdomOutput {
	return i.ToSystemVdomExceptionVdomOutputWithContext(context.Background())
}

func (i SystemVdomExceptionVdomArgs) ToSystemVdomExceptionVdomOutputWithContext(ctx context.Context) SystemVdomExceptionVdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomExceptionVdomOutput)
}

func (i SystemVdomExceptionVdomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVdomExceptionVdom] {
	return pulumix.Output[SystemVdomExceptionVdom]{
		OutputState: i.ToSystemVdomExceptionVdomOutputWithContext(ctx).OutputState,
	}
}

// SystemVdomExceptionVdomArrayInput is an input type that accepts SystemVdomExceptionVdomArray and SystemVdomExceptionVdomArrayOutput values.
// You can construct a concrete instance of `SystemVdomExceptionVdomArrayInput` via:
//
//	SystemVdomExceptionVdomArray{ SystemVdomExceptionVdomArgs{...} }
type SystemVdomExceptionVdomArrayInput interface {
	pulumi.Input

	ToSystemVdomExceptionVdomArrayOutput() SystemVdomExceptionVdomArrayOutput
	ToSystemVdomExceptionVdomArrayOutputWithContext(context.Context) SystemVdomExceptionVdomArrayOutput
}

type SystemVdomExceptionVdomArray []SystemVdomExceptionVdomInput

func (SystemVdomExceptionVdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomExceptionVdom)(nil)).Elem()
}

func (i SystemVdomExceptionVdomArray) ToSystemVdomExceptionVdomArrayOutput() SystemVdomExceptionVdomArrayOutput {
	return i.ToSystemVdomExceptionVdomArrayOutputWithContext(context.Background())
}

func (i SystemVdomExceptionVdomArray) ToSystemVdomExceptionVdomArrayOutputWithContext(ctx context.Context) SystemVdomExceptionVdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVdomExceptionVdomArrayOutput)
}

func (i SystemVdomExceptionVdomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVdomExceptionVdom] {
	return pulumix.Output[[]SystemVdomExceptionVdom]{
		OutputState: i.ToSystemVdomExceptionVdomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVdomExceptionVdomOutput struct{ *pulumi.OutputState }

func (SystemVdomExceptionVdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVdomExceptionVdom)(nil)).Elem()
}

func (o SystemVdomExceptionVdomOutput) ToSystemVdomExceptionVdomOutput() SystemVdomExceptionVdomOutput {
	return o
}

func (o SystemVdomExceptionVdomOutput) ToSystemVdomExceptionVdomOutputWithContext(ctx context.Context) SystemVdomExceptionVdomOutput {
	return o
}

func (o SystemVdomExceptionVdomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVdomExceptionVdom] {
	return pulumix.Output[SystemVdomExceptionVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemVdomExceptionVdomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVdomExceptionVdom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVdomExceptionVdomArrayOutput struct{ *pulumi.OutputState }

func (SystemVdomExceptionVdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVdomExceptionVdom)(nil)).Elem()
}

func (o SystemVdomExceptionVdomArrayOutput) ToSystemVdomExceptionVdomArrayOutput() SystemVdomExceptionVdomArrayOutput {
	return o
}

func (o SystemVdomExceptionVdomArrayOutput) ToSystemVdomExceptionVdomArrayOutputWithContext(ctx context.Context) SystemVdomExceptionVdomArrayOutput {
	return o
}

func (o SystemVdomExceptionVdomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVdomExceptionVdom] {
	return pulumix.Output[[]SystemVdomExceptionVdom]{
		OutputState: o.OutputState,
	}
}

func (o SystemVdomExceptionVdomArrayOutput) Index(i pulumi.IntInput) SystemVdomExceptionVdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVdomExceptionVdom {
		return vs[0].([]SystemVdomExceptionVdom)[vs[1].(int)]
	}).(SystemVdomExceptionVdomOutput)
}

type SystemVirtualSwitchPort struct {
	Alias *string `pulumi:"alias"`
	Name  *string `pulumi:"name"`
}

// SystemVirtualSwitchPortInput is an input type that accepts SystemVirtualSwitchPortArgs and SystemVirtualSwitchPortOutput values.
// You can construct a concrete instance of `SystemVirtualSwitchPortInput` via:
//
//	SystemVirtualSwitchPortArgs{...}
type SystemVirtualSwitchPortInput interface {
	pulumi.Input

	ToSystemVirtualSwitchPortOutput() SystemVirtualSwitchPortOutput
	ToSystemVirtualSwitchPortOutputWithContext(context.Context) SystemVirtualSwitchPortOutput
}

type SystemVirtualSwitchPortArgs struct {
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	Name  pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualSwitchPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualSwitchPort)(nil)).Elem()
}

func (i SystemVirtualSwitchPortArgs) ToSystemVirtualSwitchPortOutput() SystemVirtualSwitchPortOutput {
	return i.ToSystemVirtualSwitchPortOutputWithContext(context.Background())
}

func (i SystemVirtualSwitchPortArgs) ToSystemVirtualSwitchPortOutputWithContext(ctx context.Context) SystemVirtualSwitchPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualSwitchPortOutput)
}

func (i SystemVirtualSwitchPortArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualSwitchPort] {
	return pulumix.Output[SystemVirtualSwitchPort]{
		OutputState: i.ToSystemVirtualSwitchPortOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualSwitchPortArrayInput is an input type that accepts SystemVirtualSwitchPortArray and SystemVirtualSwitchPortArrayOutput values.
// You can construct a concrete instance of `SystemVirtualSwitchPortArrayInput` via:
//
//	SystemVirtualSwitchPortArray{ SystemVirtualSwitchPortArgs{...} }
type SystemVirtualSwitchPortArrayInput interface {
	pulumi.Input

	ToSystemVirtualSwitchPortArrayOutput() SystemVirtualSwitchPortArrayOutput
	ToSystemVirtualSwitchPortArrayOutputWithContext(context.Context) SystemVirtualSwitchPortArrayOutput
}

type SystemVirtualSwitchPortArray []SystemVirtualSwitchPortInput

func (SystemVirtualSwitchPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualSwitchPort)(nil)).Elem()
}

func (i SystemVirtualSwitchPortArray) ToSystemVirtualSwitchPortArrayOutput() SystemVirtualSwitchPortArrayOutput {
	return i.ToSystemVirtualSwitchPortArrayOutputWithContext(context.Background())
}

func (i SystemVirtualSwitchPortArray) ToSystemVirtualSwitchPortArrayOutputWithContext(ctx context.Context) SystemVirtualSwitchPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualSwitchPortArrayOutput)
}

func (i SystemVirtualSwitchPortArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualSwitchPort] {
	return pulumix.Output[[]SystemVirtualSwitchPort]{
		OutputState: i.ToSystemVirtualSwitchPortArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualSwitchPortOutput struct{ *pulumi.OutputState }

func (SystemVirtualSwitchPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualSwitchPort)(nil)).Elem()
}

func (o SystemVirtualSwitchPortOutput) ToSystemVirtualSwitchPortOutput() SystemVirtualSwitchPortOutput {
	return o
}

func (o SystemVirtualSwitchPortOutput) ToSystemVirtualSwitchPortOutputWithContext(ctx context.Context) SystemVirtualSwitchPortOutput {
	return o
}

func (o SystemVirtualSwitchPortOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualSwitchPort] {
	return pulumix.Output[SystemVirtualSwitchPort]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualSwitchPortOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualSwitchPort) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualSwitchPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualSwitchPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualSwitchPortArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualSwitchPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualSwitchPort)(nil)).Elem()
}

func (o SystemVirtualSwitchPortArrayOutput) ToSystemVirtualSwitchPortArrayOutput() SystemVirtualSwitchPortArrayOutput {
	return o
}

func (o SystemVirtualSwitchPortArrayOutput) ToSystemVirtualSwitchPortArrayOutputWithContext(ctx context.Context) SystemVirtualSwitchPortArrayOutput {
	return o
}

func (o SystemVirtualSwitchPortArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualSwitchPort] {
	return pulumix.Output[[]SystemVirtualSwitchPort]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualSwitchPortArrayOutput) Index(i pulumi.IntInput) SystemVirtualSwitchPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualSwitchPort {
		return vs[0].([]SystemVirtualSwitchPort)[vs[1].(int)]
	}).(SystemVirtualSwitchPortOutput)
}

type SystemVirtualWanLinkFailAlertInterface struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkFailAlertInterfaceInput is an input type that accepts SystemVirtualWanLinkFailAlertInterfaceArgs and SystemVirtualWanLinkFailAlertInterfaceOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkFailAlertInterfaceInput` via:
//
//	SystemVirtualWanLinkFailAlertInterfaceArgs{...}
type SystemVirtualWanLinkFailAlertInterfaceInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkFailAlertInterfaceOutput() SystemVirtualWanLinkFailAlertInterfaceOutput
	ToSystemVirtualWanLinkFailAlertInterfaceOutputWithContext(context.Context) SystemVirtualWanLinkFailAlertInterfaceOutput
}

type SystemVirtualWanLinkFailAlertInterfaceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkFailAlertInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkFailAlertInterface)(nil)).Elem()
}

func (i SystemVirtualWanLinkFailAlertInterfaceArgs) ToSystemVirtualWanLinkFailAlertInterfaceOutput() SystemVirtualWanLinkFailAlertInterfaceOutput {
	return i.ToSystemVirtualWanLinkFailAlertInterfaceOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkFailAlertInterfaceArgs) ToSystemVirtualWanLinkFailAlertInterfaceOutputWithContext(ctx context.Context) SystemVirtualWanLinkFailAlertInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkFailAlertInterfaceOutput)
}

func (i SystemVirtualWanLinkFailAlertInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkFailAlertInterface] {
	return pulumix.Output[SystemVirtualWanLinkFailAlertInterface]{
		OutputState: i.ToSystemVirtualWanLinkFailAlertInterfaceOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkFailAlertInterfaceArrayInput is an input type that accepts SystemVirtualWanLinkFailAlertInterfaceArray and SystemVirtualWanLinkFailAlertInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkFailAlertInterfaceArrayInput` via:
//
//	SystemVirtualWanLinkFailAlertInterfaceArray{ SystemVirtualWanLinkFailAlertInterfaceArgs{...} }
type SystemVirtualWanLinkFailAlertInterfaceArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkFailAlertInterfaceArrayOutput() SystemVirtualWanLinkFailAlertInterfaceArrayOutput
	ToSystemVirtualWanLinkFailAlertInterfaceArrayOutputWithContext(context.Context) SystemVirtualWanLinkFailAlertInterfaceArrayOutput
}

type SystemVirtualWanLinkFailAlertInterfaceArray []SystemVirtualWanLinkFailAlertInterfaceInput

func (SystemVirtualWanLinkFailAlertInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkFailAlertInterface)(nil)).Elem()
}

func (i SystemVirtualWanLinkFailAlertInterfaceArray) ToSystemVirtualWanLinkFailAlertInterfaceArrayOutput() SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
	return i.ToSystemVirtualWanLinkFailAlertInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkFailAlertInterfaceArray) ToSystemVirtualWanLinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkFailAlertInterfaceArrayOutput)
}

func (i SystemVirtualWanLinkFailAlertInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkFailAlertInterface] {
	return pulumix.Output[[]SystemVirtualWanLinkFailAlertInterface]{
		OutputState: i.ToSystemVirtualWanLinkFailAlertInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkFailAlertInterfaceOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkFailAlertInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkFailAlertInterface)(nil)).Elem()
}

func (o SystemVirtualWanLinkFailAlertInterfaceOutput) ToSystemVirtualWanLinkFailAlertInterfaceOutput() SystemVirtualWanLinkFailAlertInterfaceOutput {
	return o
}

func (o SystemVirtualWanLinkFailAlertInterfaceOutput) ToSystemVirtualWanLinkFailAlertInterfaceOutputWithContext(ctx context.Context) SystemVirtualWanLinkFailAlertInterfaceOutput {
	return o
}

func (o SystemVirtualWanLinkFailAlertInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkFailAlertInterface] {
	return pulumix.Output[SystemVirtualWanLinkFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkFailAlertInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkFailAlertInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkFailAlertInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkFailAlertInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkFailAlertInterface)(nil)).Elem()
}

func (o SystemVirtualWanLinkFailAlertInterfaceArrayOutput) ToSystemVirtualWanLinkFailAlertInterfaceArrayOutput() SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkFailAlertInterfaceArrayOutput) ToSystemVirtualWanLinkFailAlertInterfaceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkFailAlertInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkFailAlertInterface] {
	return pulumix.Output[[]SystemVirtualWanLinkFailAlertInterface]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkFailAlertInterfaceArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkFailAlertInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkFailAlertInterface {
		return vs[0].([]SystemVirtualWanLinkFailAlertInterface)[vs[1].(int)]
	}).(SystemVirtualWanLinkFailAlertInterfaceOutput)
}

type SystemVirtualWanLinkHealthCheck struct {
	AddrMode                   *string                                 `pulumi:"addrMode"`
	Diffservcode               *string                                 `pulumi:"diffservcode"`
	DnsRequestDomain           *string                                 `pulumi:"dnsRequestDomain"`
	Failtime                   *int                                    `pulumi:"failtime"`
	HaPriority                 *int                                    `pulumi:"haPriority"`
	HttpAgent                  *string                                 `pulumi:"httpAgent"`
	HttpGet                    *string                                 `pulumi:"httpGet"`
	HttpMatch                  *string                                 `pulumi:"httpMatch"`
	Interval                   *int                                    `pulumi:"interval"`
	Members                    []SystemVirtualWanLinkHealthCheckMember `pulumi:"members"`
	Name                       *string                                 `pulumi:"name"`
	PacketSize                 *int                                    `pulumi:"packetSize"`
	Password                   *string                                 `pulumi:"password"`
	Port                       *int                                    `pulumi:"port"`
	ProbeCount                 *int                                    `pulumi:"probeCount"`
	ProbePackets               *string                                 `pulumi:"probePackets"`
	ProbeTimeout               *int                                    `pulumi:"probeTimeout"`
	Protocol                   *string                                 `pulumi:"protocol"`
	Recoverytime               *int                                    `pulumi:"recoverytime"`
	SecurityMode               *string                                 `pulumi:"securityMode"`
	Server                     *string                                 `pulumi:"server"`
	SlaFailLogPeriod           *int                                    `pulumi:"slaFailLogPeriod"`
	SlaPassLogPeriod           *int                                    `pulumi:"slaPassLogPeriod"`
	Slas                       []SystemVirtualWanLinkHealthCheckSla    `pulumi:"slas"`
	SystemDns                  *string                                 `pulumi:"systemDns"`
	ThresholdAlertJitter       *int                                    `pulumi:"thresholdAlertJitter"`
	ThresholdAlertLatency      *int                                    `pulumi:"thresholdAlertLatency"`
	ThresholdAlertPacketloss   *int                                    `pulumi:"thresholdAlertPacketloss"`
	ThresholdWarningJitter     *int                                    `pulumi:"thresholdWarningJitter"`
	ThresholdWarningLatency    *int                                    `pulumi:"thresholdWarningLatency"`
	ThresholdWarningPacketloss *int                                    `pulumi:"thresholdWarningPacketloss"`
	UpdateCascadeInterface     *string                                 `pulumi:"updateCascadeInterface"`
	UpdateStaticRoute          *string                                 `pulumi:"updateStaticRoute"`
}

// SystemVirtualWanLinkHealthCheckInput is an input type that accepts SystemVirtualWanLinkHealthCheckArgs and SystemVirtualWanLinkHealthCheckOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckInput` via:
//
//	SystemVirtualWanLinkHealthCheckArgs{...}
type SystemVirtualWanLinkHealthCheckInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckOutput() SystemVirtualWanLinkHealthCheckOutput
	ToSystemVirtualWanLinkHealthCheckOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckOutput
}

type SystemVirtualWanLinkHealthCheckArgs struct {
	AddrMode                   pulumi.StringPtrInput                           `pulumi:"addrMode"`
	Diffservcode               pulumi.StringPtrInput                           `pulumi:"diffservcode"`
	DnsRequestDomain           pulumi.StringPtrInput                           `pulumi:"dnsRequestDomain"`
	Failtime                   pulumi.IntPtrInput                              `pulumi:"failtime"`
	HaPriority                 pulumi.IntPtrInput                              `pulumi:"haPriority"`
	HttpAgent                  pulumi.StringPtrInput                           `pulumi:"httpAgent"`
	HttpGet                    pulumi.StringPtrInput                           `pulumi:"httpGet"`
	HttpMatch                  pulumi.StringPtrInput                           `pulumi:"httpMatch"`
	Interval                   pulumi.IntPtrInput                              `pulumi:"interval"`
	Members                    SystemVirtualWanLinkHealthCheckMemberArrayInput `pulumi:"members"`
	Name                       pulumi.StringPtrInput                           `pulumi:"name"`
	PacketSize                 pulumi.IntPtrInput                              `pulumi:"packetSize"`
	Password                   pulumi.StringPtrInput                           `pulumi:"password"`
	Port                       pulumi.IntPtrInput                              `pulumi:"port"`
	ProbeCount                 pulumi.IntPtrInput                              `pulumi:"probeCount"`
	ProbePackets               pulumi.StringPtrInput                           `pulumi:"probePackets"`
	ProbeTimeout               pulumi.IntPtrInput                              `pulumi:"probeTimeout"`
	Protocol                   pulumi.StringPtrInput                           `pulumi:"protocol"`
	Recoverytime               pulumi.IntPtrInput                              `pulumi:"recoverytime"`
	SecurityMode               pulumi.StringPtrInput                           `pulumi:"securityMode"`
	Server                     pulumi.StringPtrInput                           `pulumi:"server"`
	SlaFailLogPeriod           pulumi.IntPtrInput                              `pulumi:"slaFailLogPeriod"`
	SlaPassLogPeriod           pulumi.IntPtrInput                              `pulumi:"slaPassLogPeriod"`
	Slas                       SystemVirtualWanLinkHealthCheckSlaArrayInput    `pulumi:"slas"`
	SystemDns                  pulumi.StringPtrInput                           `pulumi:"systemDns"`
	ThresholdAlertJitter       pulumi.IntPtrInput                              `pulumi:"thresholdAlertJitter"`
	ThresholdAlertLatency      pulumi.IntPtrInput                              `pulumi:"thresholdAlertLatency"`
	ThresholdAlertPacketloss   pulumi.IntPtrInput                              `pulumi:"thresholdAlertPacketloss"`
	ThresholdWarningJitter     pulumi.IntPtrInput                              `pulumi:"thresholdWarningJitter"`
	ThresholdWarningLatency    pulumi.IntPtrInput                              `pulumi:"thresholdWarningLatency"`
	ThresholdWarningPacketloss pulumi.IntPtrInput                              `pulumi:"thresholdWarningPacketloss"`
	UpdateCascadeInterface     pulumi.StringPtrInput                           `pulumi:"updateCascadeInterface"`
	UpdateStaticRoute          pulumi.StringPtrInput                           `pulumi:"updateStaticRoute"`
}

func (SystemVirtualWanLinkHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheck)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckArgs) ToSystemVirtualWanLinkHealthCheckOutput() SystemVirtualWanLinkHealthCheckOutput {
	return i.ToSystemVirtualWanLinkHealthCheckOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckArgs) ToSystemVirtualWanLinkHealthCheckOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckOutput)
}

func (i SystemVirtualWanLinkHealthCheckArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheck] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheck]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkHealthCheckArrayInput is an input type that accepts SystemVirtualWanLinkHealthCheckArray and SystemVirtualWanLinkHealthCheckArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckArrayInput` via:
//
//	SystemVirtualWanLinkHealthCheckArray{ SystemVirtualWanLinkHealthCheckArgs{...} }
type SystemVirtualWanLinkHealthCheckArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckArrayOutput() SystemVirtualWanLinkHealthCheckArrayOutput
	ToSystemVirtualWanLinkHealthCheckArrayOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckArrayOutput
}

type SystemVirtualWanLinkHealthCheckArray []SystemVirtualWanLinkHealthCheckInput

func (SystemVirtualWanLinkHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheck)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckArray) ToSystemVirtualWanLinkHealthCheckArrayOutput() SystemVirtualWanLinkHealthCheckArrayOutput {
	return i.ToSystemVirtualWanLinkHealthCheckArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckArray) ToSystemVirtualWanLinkHealthCheckArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckArrayOutput)
}

func (i SystemVirtualWanLinkHealthCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheck] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheck]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkHealthCheckOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheck)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckOutput) ToSystemVirtualWanLinkHealthCheckOutput() SystemVirtualWanLinkHealthCheckOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckOutput) ToSystemVirtualWanLinkHealthCheckOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheck] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Diffservcode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.Diffservcode }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) DnsRequestDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.DnsRequestDomain }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Failtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.Failtime }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) HaPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.HaPriority }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) HttpAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.HttpAgent }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) HttpGet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.HttpGet }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) HttpMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.HttpMatch }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Members() SystemVirtualWanLinkHealthCheckMemberArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) []SystemVirtualWanLinkHealthCheckMember { return v.Members }).(SystemVirtualWanLinkHealthCheckMemberArrayOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) PacketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.PacketSize }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ProbeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ProbeCount }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ProbePackets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.ProbePackets }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ProbeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ProbeTimeout }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Recoverytime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.Recoverytime }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) SecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.SecurityMode }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) SlaFailLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.SlaFailLogPeriod }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) SlaPassLogPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.SlaPassLogPeriod }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) Slas() SystemVirtualWanLinkHealthCheckSlaArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) []SystemVirtualWanLinkHealthCheckSla { return v.Slas }).(SystemVirtualWanLinkHealthCheckSlaArrayOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) SystemDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.SystemDns }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdAlertJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdAlertJitter }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdAlertLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdAlertLatency }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdAlertPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdAlertPacketloss }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdWarningJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdWarningJitter }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdWarningLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdWarningLatency }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) ThresholdWarningPacketloss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *int { return v.ThresholdWarningPacketloss }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) UpdateCascadeInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.UpdateCascadeInterface }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckOutput) UpdateStaticRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheck) *string { return v.UpdateStaticRoute }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheck)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckArrayOutput) ToSystemVirtualWanLinkHealthCheckArrayOutput() SystemVirtualWanLinkHealthCheckArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckArrayOutput) ToSystemVirtualWanLinkHealthCheckArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheck] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheck]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkHealthCheck {
		return vs[0].([]SystemVirtualWanLinkHealthCheck)[vs[1].(int)]
	}).(SystemVirtualWanLinkHealthCheckOutput)
}

type SystemVirtualWanLinkHealthCheckMember struct {
	SeqNum *int `pulumi:"seqNum"`
}

// SystemVirtualWanLinkHealthCheckMemberInput is an input type that accepts SystemVirtualWanLinkHealthCheckMemberArgs and SystemVirtualWanLinkHealthCheckMemberOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckMemberInput` via:
//
//	SystemVirtualWanLinkHealthCheckMemberArgs{...}
type SystemVirtualWanLinkHealthCheckMemberInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckMemberOutput() SystemVirtualWanLinkHealthCheckMemberOutput
	ToSystemVirtualWanLinkHealthCheckMemberOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckMemberOutput
}

type SystemVirtualWanLinkHealthCheckMemberArgs struct {
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemVirtualWanLinkHealthCheckMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheckMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckMemberArgs) ToSystemVirtualWanLinkHealthCheckMemberOutput() SystemVirtualWanLinkHealthCheckMemberOutput {
	return i.ToSystemVirtualWanLinkHealthCheckMemberOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckMemberArgs) ToSystemVirtualWanLinkHealthCheckMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckMemberOutput)
}

func (i SystemVirtualWanLinkHealthCheckMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheckMember] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheckMember]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkHealthCheckMemberArrayInput is an input type that accepts SystemVirtualWanLinkHealthCheckMemberArray and SystemVirtualWanLinkHealthCheckMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckMemberArrayInput` via:
//
//	SystemVirtualWanLinkHealthCheckMemberArray{ SystemVirtualWanLinkHealthCheckMemberArgs{...} }
type SystemVirtualWanLinkHealthCheckMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckMemberArrayOutput() SystemVirtualWanLinkHealthCheckMemberArrayOutput
	ToSystemVirtualWanLinkHealthCheckMemberArrayOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckMemberArrayOutput
}

type SystemVirtualWanLinkHealthCheckMemberArray []SystemVirtualWanLinkHealthCheckMemberInput

func (SystemVirtualWanLinkHealthCheckMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheckMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckMemberArray) ToSystemVirtualWanLinkHealthCheckMemberArrayOutput() SystemVirtualWanLinkHealthCheckMemberArrayOutput {
	return i.ToSystemVirtualWanLinkHealthCheckMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckMemberArray) ToSystemVirtualWanLinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckMemberArrayOutput)
}

func (i SystemVirtualWanLinkHealthCheckMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheckMember] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheckMember]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkHealthCheckMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheckMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckMemberOutput) ToSystemVirtualWanLinkHealthCheckMemberOutput() SystemVirtualWanLinkHealthCheckMemberOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckMemberOutput) ToSystemVirtualWanLinkHealthCheckMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckMemberOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheckMember] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheckMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkHealthCheckMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheckMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckMemberArrayOutput) ToSystemVirtualWanLinkHealthCheckMemberArrayOutput() SystemVirtualWanLinkHealthCheckMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckMemberArrayOutput) ToSystemVirtualWanLinkHealthCheckMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheckMember] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheckMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkHealthCheckMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkHealthCheckMember {
		return vs[0].([]SystemVirtualWanLinkHealthCheckMember)[vs[1].(int)]
	}).(SystemVirtualWanLinkHealthCheckMemberOutput)
}

type SystemVirtualWanLinkHealthCheckSla struct {
	Id                  *int    `pulumi:"id"`
	JitterThreshold     *int    `pulumi:"jitterThreshold"`
	LatencyThreshold    *int    `pulumi:"latencyThreshold"`
	LinkCostFactor      *string `pulumi:"linkCostFactor"`
	PacketlossThreshold *int    `pulumi:"packetlossThreshold"`
}

// SystemVirtualWanLinkHealthCheckSlaInput is an input type that accepts SystemVirtualWanLinkHealthCheckSlaArgs and SystemVirtualWanLinkHealthCheckSlaOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckSlaInput` via:
//
//	SystemVirtualWanLinkHealthCheckSlaArgs{...}
type SystemVirtualWanLinkHealthCheckSlaInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckSlaOutput() SystemVirtualWanLinkHealthCheckSlaOutput
	ToSystemVirtualWanLinkHealthCheckSlaOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckSlaOutput
}

type SystemVirtualWanLinkHealthCheckSlaArgs struct {
	Id                  pulumi.IntPtrInput    `pulumi:"id"`
	JitterThreshold     pulumi.IntPtrInput    `pulumi:"jitterThreshold"`
	LatencyThreshold    pulumi.IntPtrInput    `pulumi:"latencyThreshold"`
	LinkCostFactor      pulumi.StringPtrInput `pulumi:"linkCostFactor"`
	PacketlossThreshold pulumi.IntPtrInput    `pulumi:"packetlossThreshold"`
}

func (SystemVirtualWanLinkHealthCheckSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheckSla)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckSlaArgs) ToSystemVirtualWanLinkHealthCheckSlaOutput() SystemVirtualWanLinkHealthCheckSlaOutput {
	return i.ToSystemVirtualWanLinkHealthCheckSlaOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckSlaArgs) ToSystemVirtualWanLinkHealthCheckSlaOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckSlaOutput)
}

func (i SystemVirtualWanLinkHealthCheckSlaArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheckSla] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheckSla]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckSlaOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkHealthCheckSlaArrayInput is an input type that accepts SystemVirtualWanLinkHealthCheckSlaArray and SystemVirtualWanLinkHealthCheckSlaArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkHealthCheckSlaArrayInput` via:
//
//	SystemVirtualWanLinkHealthCheckSlaArray{ SystemVirtualWanLinkHealthCheckSlaArgs{...} }
type SystemVirtualWanLinkHealthCheckSlaArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkHealthCheckSlaArrayOutput() SystemVirtualWanLinkHealthCheckSlaArrayOutput
	ToSystemVirtualWanLinkHealthCheckSlaArrayOutputWithContext(context.Context) SystemVirtualWanLinkHealthCheckSlaArrayOutput
}

type SystemVirtualWanLinkHealthCheckSlaArray []SystemVirtualWanLinkHealthCheckSlaInput

func (SystemVirtualWanLinkHealthCheckSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheckSla)(nil)).Elem()
}

func (i SystemVirtualWanLinkHealthCheckSlaArray) ToSystemVirtualWanLinkHealthCheckSlaArrayOutput() SystemVirtualWanLinkHealthCheckSlaArrayOutput {
	return i.ToSystemVirtualWanLinkHealthCheckSlaArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkHealthCheckSlaArray) ToSystemVirtualWanLinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkHealthCheckSlaArrayOutput)
}

func (i SystemVirtualWanLinkHealthCheckSlaArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheckSla] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheckSla]{
		OutputState: i.ToSystemVirtualWanLinkHealthCheckSlaArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkHealthCheckSlaOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkHealthCheckSla)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) ToSystemVirtualWanLinkHealthCheckSlaOutput() SystemVirtualWanLinkHealthCheckSlaOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) ToSystemVirtualWanLinkHealthCheckSlaOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckSlaOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkHealthCheckSla] {
	return pulumix.Output[SystemVirtualWanLinkHealthCheckSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) JitterThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckSla) *int { return v.JitterThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) LatencyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckSla) *int { return v.LatencyThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckSla) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkHealthCheckSlaOutput) PacketlossThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkHealthCheckSla) *int { return v.PacketlossThreshold }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkHealthCheckSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkHealthCheckSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkHealthCheckSla)(nil)).Elem()
}

func (o SystemVirtualWanLinkHealthCheckSlaArrayOutput) ToSystemVirtualWanLinkHealthCheckSlaArrayOutput() SystemVirtualWanLinkHealthCheckSlaArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckSlaArrayOutput) ToSystemVirtualWanLinkHealthCheckSlaArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkHealthCheckSlaArrayOutput {
	return o
}

func (o SystemVirtualWanLinkHealthCheckSlaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkHealthCheckSla] {
	return pulumix.Output[[]SystemVirtualWanLinkHealthCheckSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkHealthCheckSlaArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkHealthCheckSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkHealthCheckSla {
		return vs[0].([]SystemVirtualWanLinkHealthCheckSla)[vs[1].(int)]
	}).(SystemVirtualWanLinkHealthCheckSlaOutput)
}

type SystemVirtualWanLinkMember struct {
	Comment                   *string `pulumi:"comment"`
	Cost                      *int    `pulumi:"cost"`
	Gateway                   *string `pulumi:"gateway"`
	Gateway6                  *string `pulumi:"gateway6"`
	IngressSpilloverThreshold *int    `pulumi:"ingressSpilloverThreshold"`
	Interface                 *string `pulumi:"interface"`
	Priority                  *int    `pulumi:"priority"`
	SeqNum                    *int    `pulumi:"seqNum"`
	Source                    *string `pulumi:"source"`
	Source6                   *string `pulumi:"source6"`
	SpilloverThreshold        *int    `pulumi:"spilloverThreshold"`
	Status                    *string `pulumi:"status"`
	VolumeRatio               *int    `pulumi:"volumeRatio"`
	Weight                    *int    `pulumi:"weight"`
}

// SystemVirtualWanLinkMemberInput is an input type that accepts SystemVirtualWanLinkMemberArgs and SystemVirtualWanLinkMemberOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkMemberInput` via:
//
//	SystemVirtualWanLinkMemberArgs{...}
type SystemVirtualWanLinkMemberInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkMemberOutput() SystemVirtualWanLinkMemberOutput
	ToSystemVirtualWanLinkMemberOutputWithContext(context.Context) SystemVirtualWanLinkMemberOutput
}

type SystemVirtualWanLinkMemberArgs struct {
	Comment                   pulumi.StringPtrInput `pulumi:"comment"`
	Cost                      pulumi.IntPtrInput    `pulumi:"cost"`
	Gateway                   pulumi.StringPtrInput `pulumi:"gateway"`
	Gateway6                  pulumi.StringPtrInput `pulumi:"gateway6"`
	IngressSpilloverThreshold pulumi.IntPtrInput    `pulumi:"ingressSpilloverThreshold"`
	Interface                 pulumi.StringPtrInput `pulumi:"interface"`
	Priority                  pulumi.IntPtrInput    `pulumi:"priority"`
	SeqNum                    pulumi.IntPtrInput    `pulumi:"seqNum"`
	Source                    pulumi.StringPtrInput `pulumi:"source"`
	Source6                   pulumi.StringPtrInput `pulumi:"source6"`
	SpilloverThreshold        pulumi.IntPtrInput    `pulumi:"spilloverThreshold"`
	Status                    pulumi.StringPtrInput `pulumi:"status"`
	VolumeRatio               pulumi.IntPtrInput    `pulumi:"volumeRatio"`
	Weight                    pulumi.IntPtrInput    `pulumi:"weight"`
}

func (SystemVirtualWanLinkMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkMemberArgs) ToSystemVirtualWanLinkMemberOutput() SystemVirtualWanLinkMemberOutput {
	return i.ToSystemVirtualWanLinkMemberOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkMemberArgs) ToSystemVirtualWanLinkMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkMemberOutput)
}

func (i SystemVirtualWanLinkMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkMember] {
	return pulumix.Output[SystemVirtualWanLinkMember]{
		OutputState: i.ToSystemVirtualWanLinkMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkMemberArrayInput is an input type that accepts SystemVirtualWanLinkMemberArray and SystemVirtualWanLinkMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkMemberArrayInput` via:
//
//	SystemVirtualWanLinkMemberArray{ SystemVirtualWanLinkMemberArgs{...} }
type SystemVirtualWanLinkMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkMemberArrayOutput() SystemVirtualWanLinkMemberArrayOutput
	ToSystemVirtualWanLinkMemberArrayOutputWithContext(context.Context) SystemVirtualWanLinkMemberArrayOutput
}

type SystemVirtualWanLinkMemberArray []SystemVirtualWanLinkMemberInput

func (SystemVirtualWanLinkMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkMemberArray) ToSystemVirtualWanLinkMemberArrayOutput() SystemVirtualWanLinkMemberArrayOutput {
	return i.ToSystemVirtualWanLinkMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkMemberArray) ToSystemVirtualWanLinkMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkMemberArrayOutput)
}

func (i SystemVirtualWanLinkMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkMember] {
	return pulumix.Output[[]SystemVirtualWanLinkMember]{
		OutputState: i.ToSystemVirtualWanLinkMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkMemberOutput) ToSystemVirtualWanLinkMemberOutput() SystemVirtualWanLinkMemberOutput {
	return o
}

func (o SystemVirtualWanLinkMemberOutput) ToSystemVirtualWanLinkMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkMemberOutput {
	return o
}

func (o SystemVirtualWanLinkMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkMember] {
	return pulumix.Output[SystemVirtualWanLinkMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkMemberOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.Cost }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Gateway6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Gateway6 }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) IngressSpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.IngressSpilloverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Source6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Source6 }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) SpilloverThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.SpilloverThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) VolumeRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.VolumeRatio }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkMemberArrayOutput) ToSystemVirtualWanLinkMemberArrayOutput() SystemVirtualWanLinkMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkMemberArrayOutput) ToSystemVirtualWanLinkMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkMember] {
	return pulumix.Output[[]SystemVirtualWanLinkMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkMember {
		return vs[0].([]SystemVirtualWanLinkMember)[vs[1].(int)]
	}).(SystemVirtualWanLinkMemberOutput)
}

type SystemVirtualWanLinkNeighbor struct {
	HealthCheck *string `pulumi:"healthCheck"`
	Ip          *string `pulumi:"ip"`
	Member      *int    `pulumi:"member"`
	Role        *string `pulumi:"role"`
	SlaId       *int    `pulumi:"slaId"`
}

// SystemVirtualWanLinkNeighborInput is an input type that accepts SystemVirtualWanLinkNeighborArgs and SystemVirtualWanLinkNeighborOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkNeighborInput` via:
//
//	SystemVirtualWanLinkNeighborArgs{...}
type SystemVirtualWanLinkNeighborInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkNeighborOutput() SystemVirtualWanLinkNeighborOutput
	ToSystemVirtualWanLinkNeighborOutputWithContext(context.Context) SystemVirtualWanLinkNeighborOutput
}

type SystemVirtualWanLinkNeighborArgs struct {
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	Ip          pulumi.StringPtrInput `pulumi:"ip"`
	Member      pulumi.IntPtrInput    `pulumi:"member"`
	Role        pulumi.StringPtrInput `pulumi:"role"`
	SlaId       pulumi.IntPtrInput    `pulumi:"slaId"`
}

func (SystemVirtualWanLinkNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkNeighbor)(nil)).Elem()
}

func (i SystemVirtualWanLinkNeighborArgs) ToSystemVirtualWanLinkNeighborOutput() SystemVirtualWanLinkNeighborOutput {
	return i.ToSystemVirtualWanLinkNeighborOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkNeighborArgs) ToSystemVirtualWanLinkNeighborOutputWithContext(ctx context.Context) SystemVirtualWanLinkNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkNeighborOutput)
}

func (i SystemVirtualWanLinkNeighborArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkNeighbor] {
	return pulumix.Output[SystemVirtualWanLinkNeighbor]{
		OutputState: i.ToSystemVirtualWanLinkNeighborOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkNeighborArrayInput is an input type that accepts SystemVirtualWanLinkNeighborArray and SystemVirtualWanLinkNeighborArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkNeighborArrayInput` via:
//
//	SystemVirtualWanLinkNeighborArray{ SystemVirtualWanLinkNeighborArgs{...} }
type SystemVirtualWanLinkNeighborArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkNeighborArrayOutput() SystemVirtualWanLinkNeighborArrayOutput
	ToSystemVirtualWanLinkNeighborArrayOutputWithContext(context.Context) SystemVirtualWanLinkNeighborArrayOutput
}

type SystemVirtualWanLinkNeighborArray []SystemVirtualWanLinkNeighborInput

func (SystemVirtualWanLinkNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkNeighbor)(nil)).Elem()
}

func (i SystemVirtualWanLinkNeighborArray) ToSystemVirtualWanLinkNeighborArrayOutput() SystemVirtualWanLinkNeighborArrayOutput {
	return i.ToSystemVirtualWanLinkNeighborArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkNeighborArray) ToSystemVirtualWanLinkNeighborArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkNeighborArrayOutput)
}

func (i SystemVirtualWanLinkNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkNeighbor] {
	return pulumix.Output[[]SystemVirtualWanLinkNeighbor]{
		OutputState: i.ToSystemVirtualWanLinkNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkNeighborOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkNeighbor)(nil)).Elem()
}

func (o SystemVirtualWanLinkNeighborOutput) ToSystemVirtualWanLinkNeighborOutput() SystemVirtualWanLinkNeighborOutput {
	return o
}

func (o SystemVirtualWanLinkNeighborOutput) ToSystemVirtualWanLinkNeighborOutputWithContext(ctx context.Context) SystemVirtualWanLinkNeighborOutput {
	return o
}

func (o SystemVirtualWanLinkNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkNeighbor] {
	return pulumix.Output[SystemVirtualWanLinkNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkNeighborOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkNeighbor) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkNeighborOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkNeighbor) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkNeighborOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkNeighbor) *int { return v.Member }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkNeighborOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkNeighbor) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkNeighborOutput) SlaId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkNeighbor) *int { return v.SlaId }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkNeighborArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkNeighbor)(nil)).Elem()
}

func (o SystemVirtualWanLinkNeighborArrayOutput) ToSystemVirtualWanLinkNeighborArrayOutput() SystemVirtualWanLinkNeighborArrayOutput {
	return o
}

func (o SystemVirtualWanLinkNeighborArrayOutput) ToSystemVirtualWanLinkNeighborArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkNeighborArrayOutput {
	return o
}

func (o SystemVirtualWanLinkNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkNeighbor] {
	return pulumix.Output[[]SystemVirtualWanLinkNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkNeighborArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkNeighbor {
		return vs[0].([]SystemVirtualWanLinkNeighbor)[vs[1].(int)]
	}).(SystemVirtualWanLinkNeighborOutput)
}

type SystemVirtualWanLinkService struct {
	AddrMode                     *string                                                  `pulumi:"addrMode"`
	BandwidthWeight              *int                                                     `pulumi:"bandwidthWeight"`
	Default                      *string                                                  `pulumi:"default"`
	DscpForward                  *string                                                  `pulumi:"dscpForward"`
	DscpForwardTag               *string                                                  `pulumi:"dscpForwardTag"`
	DscpReverse                  *string                                                  `pulumi:"dscpReverse"`
	DscpReverseTag               *string                                                  `pulumi:"dscpReverseTag"`
	Dst6s                        []SystemVirtualWanLinkServiceDst6                        `pulumi:"dst6s"`
	DstNegate                    *string                                                  `pulumi:"dstNegate"`
	Dsts                         []SystemVirtualWanLinkServiceDst                         `pulumi:"dsts"`
	EndPort                      *int                                                     `pulumi:"endPort"`
	Gateway                      *string                                                  `pulumi:"gateway"`
	Groups                       []SystemVirtualWanLinkServiceGroup                       `pulumi:"groups"`
	HealthCheck                  *string                                                  `pulumi:"healthCheck"`
	HoldDownTime                 *int                                                     `pulumi:"holdDownTime"`
	Id                           *int                                                     `pulumi:"id"`
	InputDeviceNegate            *string                                                  `pulumi:"inputDeviceNegate"`
	InputDevices                 []SystemVirtualWanLinkServiceInputDevice                 `pulumi:"inputDevices"`
	InternetService              *string                                                  `pulumi:"internetService"`
	InternetServiceAppCtrlGroups []SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup `pulumi:"internetServiceAppCtrlGroups"`
	InternetServiceAppCtrls      []SystemVirtualWanLinkServiceInternetServiceAppCtrl      `pulumi:"internetServiceAppCtrls"`
	InternetServiceCtrlGroups    []SystemVirtualWanLinkServiceInternetServiceCtrlGroup    `pulumi:"internetServiceCtrlGroups"`
	InternetServiceCtrls         []SystemVirtualWanLinkServiceInternetServiceCtrl         `pulumi:"internetServiceCtrls"`
	InternetServiceCustomGroups  []SystemVirtualWanLinkServiceInternetServiceCustomGroup  `pulumi:"internetServiceCustomGroups"`
	InternetServiceCustoms       []SystemVirtualWanLinkServiceInternetServiceCustom       `pulumi:"internetServiceCustoms"`
	InternetServiceGroups        []SystemVirtualWanLinkServiceInternetServiceGroup        `pulumi:"internetServiceGroups"`
	InternetServiceIds           []SystemVirtualWanLinkServiceInternetServiceId           `pulumi:"internetServiceIds"`
	InternetServiceNames         []SystemVirtualWanLinkServiceInternetServiceName         `pulumi:"internetServiceNames"`
	JitterWeight                 *int                                                     `pulumi:"jitterWeight"`
	LatencyWeight                *int                                                     `pulumi:"latencyWeight"`
	LinkCostFactor               *string                                                  `pulumi:"linkCostFactor"`
	LinkCostThreshold            *int                                                     `pulumi:"linkCostThreshold"`
	Member                       *int                                                     `pulumi:"member"`
	Mode                         *string                                                  `pulumi:"mode"`
	Name                         *string                                                  `pulumi:"name"`
	PacketLossWeight             *int                                                     `pulumi:"packetLossWeight"`
	PriorityMembers              []SystemVirtualWanLinkServicePriorityMember              `pulumi:"priorityMembers"`
	Protocol                     *int                                                     `pulumi:"protocol"`
	QualityLink                  *int                                                     `pulumi:"qualityLink"`
	Role                         *string                                                  `pulumi:"role"`
	RouteTag                     *int                                                     `pulumi:"routeTag"`
	SlaCompareMethod             *string                                                  `pulumi:"slaCompareMethod"`
	Slas                         []SystemVirtualWanLinkServiceSla                         `pulumi:"slas"`
	Src6s                        []SystemVirtualWanLinkServiceSrc6                        `pulumi:"src6s"`
	SrcNegate                    *string                                                  `pulumi:"srcNegate"`
	Srcs                         []SystemVirtualWanLinkServiceSrc                         `pulumi:"srcs"`
	StandaloneAction             *string                                                  `pulumi:"standaloneAction"`
	StartPort                    *int                                                     `pulumi:"startPort"`
	Status                       *string                                                  `pulumi:"status"`
	Tos                          *string                                                  `pulumi:"tos"`
	TosMask                      *string                                                  `pulumi:"tosMask"`
	Users                        []SystemVirtualWanLinkServiceUser                        `pulumi:"users"`
}

// SystemVirtualWanLinkServiceInput is an input type that accepts SystemVirtualWanLinkServiceArgs and SystemVirtualWanLinkServiceOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInput` via:
//
//	SystemVirtualWanLinkServiceArgs{...}
type SystemVirtualWanLinkServiceInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceOutput() SystemVirtualWanLinkServiceOutput
	ToSystemVirtualWanLinkServiceOutputWithContext(context.Context) SystemVirtualWanLinkServiceOutput
}

type SystemVirtualWanLinkServiceArgs struct {
	AddrMode                     pulumi.StringPtrInput                                            `pulumi:"addrMode"`
	BandwidthWeight              pulumi.IntPtrInput                                               `pulumi:"bandwidthWeight"`
	Default                      pulumi.StringPtrInput                                            `pulumi:"default"`
	DscpForward                  pulumi.StringPtrInput                                            `pulumi:"dscpForward"`
	DscpForwardTag               pulumi.StringPtrInput                                            `pulumi:"dscpForwardTag"`
	DscpReverse                  pulumi.StringPtrInput                                            `pulumi:"dscpReverse"`
	DscpReverseTag               pulumi.StringPtrInput                                            `pulumi:"dscpReverseTag"`
	Dst6s                        SystemVirtualWanLinkServiceDst6ArrayInput                        `pulumi:"dst6s"`
	DstNegate                    pulumi.StringPtrInput                                            `pulumi:"dstNegate"`
	Dsts                         SystemVirtualWanLinkServiceDstArrayInput                         `pulumi:"dsts"`
	EndPort                      pulumi.IntPtrInput                                               `pulumi:"endPort"`
	Gateway                      pulumi.StringPtrInput                                            `pulumi:"gateway"`
	Groups                       SystemVirtualWanLinkServiceGroupArrayInput                       `pulumi:"groups"`
	HealthCheck                  pulumi.StringPtrInput                                            `pulumi:"healthCheck"`
	HoldDownTime                 pulumi.IntPtrInput                                               `pulumi:"holdDownTime"`
	Id                           pulumi.IntPtrInput                                               `pulumi:"id"`
	InputDeviceNegate            pulumi.StringPtrInput                                            `pulumi:"inputDeviceNegate"`
	InputDevices                 SystemVirtualWanLinkServiceInputDeviceArrayInput                 `pulumi:"inputDevices"`
	InternetService              pulumi.StringPtrInput                                            `pulumi:"internetService"`
	InternetServiceAppCtrlGroups SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayInput `pulumi:"internetServiceAppCtrlGroups"`
	InternetServiceAppCtrls      SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayInput      `pulumi:"internetServiceAppCtrls"`
	InternetServiceCtrlGroups    SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayInput    `pulumi:"internetServiceCtrlGroups"`
	InternetServiceCtrls         SystemVirtualWanLinkServiceInternetServiceCtrlArrayInput         `pulumi:"internetServiceCtrls"`
	InternetServiceCustomGroups  SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayInput  `pulumi:"internetServiceCustomGroups"`
	InternetServiceCustoms       SystemVirtualWanLinkServiceInternetServiceCustomArrayInput       `pulumi:"internetServiceCustoms"`
	InternetServiceGroups        SystemVirtualWanLinkServiceInternetServiceGroupArrayInput        `pulumi:"internetServiceGroups"`
	InternetServiceIds           SystemVirtualWanLinkServiceInternetServiceIdArrayInput           `pulumi:"internetServiceIds"`
	InternetServiceNames         SystemVirtualWanLinkServiceInternetServiceNameArrayInput         `pulumi:"internetServiceNames"`
	JitterWeight                 pulumi.IntPtrInput                                               `pulumi:"jitterWeight"`
	LatencyWeight                pulumi.IntPtrInput                                               `pulumi:"latencyWeight"`
	LinkCostFactor               pulumi.StringPtrInput                                            `pulumi:"linkCostFactor"`
	LinkCostThreshold            pulumi.IntPtrInput                                               `pulumi:"linkCostThreshold"`
	Member                       pulumi.IntPtrInput                                               `pulumi:"member"`
	Mode                         pulumi.StringPtrInput                                            `pulumi:"mode"`
	Name                         pulumi.StringPtrInput                                            `pulumi:"name"`
	PacketLossWeight             pulumi.IntPtrInput                                               `pulumi:"packetLossWeight"`
	PriorityMembers              SystemVirtualWanLinkServicePriorityMemberArrayInput              `pulumi:"priorityMembers"`
	Protocol                     pulumi.IntPtrInput                                               `pulumi:"protocol"`
	QualityLink                  pulumi.IntPtrInput                                               `pulumi:"qualityLink"`
	Role                         pulumi.StringPtrInput                                            `pulumi:"role"`
	RouteTag                     pulumi.IntPtrInput                                               `pulumi:"routeTag"`
	SlaCompareMethod             pulumi.StringPtrInput                                            `pulumi:"slaCompareMethod"`
	Slas                         SystemVirtualWanLinkServiceSlaArrayInput                         `pulumi:"slas"`
	Src6s                        SystemVirtualWanLinkServiceSrc6ArrayInput                        `pulumi:"src6s"`
	SrcNegate                    pulumi.StringPtrInput                                            `pulumi:"srcNegate"`
	Srcs                         SystemVirtualWanLinkServiceSrcArrayInput                         `pulumi:"srcs"`
	StandaloneAction             pulumi.StringPtrInput                                            `pulumi:"standaloneAction"`
	StartPort                    pulumi.IntPtrInput                                               `pulumi:"startPort"`
	Status                       pulumi.StringPtrInput                                            `pulumi:"status"`
	Tos                          pulumi.StringPtrInput                                            `pulumi:"tos"`
	TosMask                      pulumi.StringPtrInput                                            `pulumi:"tosMask"`
	Users                        SystemVirtualWanLinkServiceUserArrayInput                        `pulumi:"users"`
}

func (SystemVirtualWanLinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkService)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceArgs) ToSystemVirtualWanLinkServiceOutput() SystemVirtualWanLinkServiceOutput {
	return i.ToSystemVirtualWanLinkServiceOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceArgs) ToSystemVirtualWanLinkServiceOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceOutput)
}

func (i SystemVirtualWanLinkServiceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkService] {
	return pulumix.Output[SystemVirtualWanLinkService]{
		OutputState: i.ToSystemVirtualWanLinkServiceOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceArrayInput is an input type that accepts SystemVirtualWanLinkServiceArray and SystemVirtualWanLinkServiceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceArrayInput` via:
//
//	SystemVirtualWanLinkServiceArray{ SystemVirtualWanLinkServiceArgs{...} }
type SystemVirtualWanLinkServiceArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceArrayOutput() SystemVirtualWanLinkServiceArrayOutput
	ToSystemVirtualWanLinkServiceArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceArrayOutput
}

type SystemVirtualWanLinkServiceArray []SystemVirtualWanLinkServiceInput

func (SystemVirtualWanLinkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkService)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceArray) ToSystemVirtualWanLinkServiceArrayOutput() SystemVirtualWanLinkServiceArrayOutput {
	return i.ToSystemVirtualWanLinkServiceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceArray) ToSystemVirtualWanLinkServiceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceArrayOutput)
}

func (i SystemVirtualWanLinkServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkService] {
	return pulumix.Output[[]SystemVirtualWanLinkService]{
		OutputState: i.ToSystemVirtualWanLinkServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkService)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceOutput) ToSystemVirtualWanLinkServiceOutput() SystemVirtualWanLinkServiceOutput {
	return o
}

func (o SystemVirtualWanLinkServiceOutput) ToSystemVirtualWanLinkServiceOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceOutput {
	return o
}

func (o SystemVirtualWanLinkServiceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkService] {
	return pulumix.Output[SystemVirtualWanLinkService]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceOutput) AddrMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.AddrMode }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) BandwidthWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.BandwidthWeight }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) DscpForward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.DscpForward }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) DscpForwardTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.DscpForwardTag }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) DscpReverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.DscpReverse }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) DscpReverseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.DscpReverseTag }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Dst6s() SystemVirtualWanLinkServiceDst6ArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceDst6 { return v.Dst6s }).(SystemVirtualWanLinkServiceDst6ArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) DstNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.DstNegate }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Dsts() SystemVirtualWanLinkServiceDstArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceDst { return v.Dsts }).(SystemVirtualWanLinkServiceDstArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Groups() SystemVirtualWanLinkServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceGroup { return v.Groups }).(SystemVirtualWanLinkServiceGroupArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) HoldDownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.HoldDownTime }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InputDeviceNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.InputDeviceNegate }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InputDevices() SystemVirtualWanLinkServiceInputDeviceArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInputDevice { return v.InputDevices }).(SystemVirtualWanLinkServiceInputDeviceArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.InternetService }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceAppCtrlGroups() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup {
		return v.InternetServiceAppCtrlGroups
	}).(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceAppCtrls() SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceAppCtrl {
		return v.InternetServiceAppCtrls
	}).(SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceCtrlGroups() SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceCtrlGroup {
		return v.InternetServiceCtrlGroups
	}).(SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceCtrls() SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceCtrl {
		return v.InternetServiceCtrls
	}).(SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceCustomGroups() SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceCustomGroup {
		return v.InternetServiceCustomGroups
	}).(SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceCustoms() SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceCustom {
		return v.InternetServiceCustoms
	}).(SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceGroups() SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceGroup {
		return v.InternetServiceGroups
	}).(SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceIds() SystemVirtualWanLinkServiceInternetServiceIdArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceId {
		return v.InternetServiceIds
	}).(SystemVirtualWanLinkServiceInternetServiceIdArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) InternetServiceNames() SystemVirtualWanLinkServiceInternetServiceNameArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceInternetServiceName {
		return v.InternetServiceNames
	}).(SystemVirtualWanLinkServiceInternetServiceNameArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) JitterWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.JitterWeight }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) LatencyWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.LatencyWeight }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) LinkCostFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.LinkCostFactor }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) LinkCostThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.LinkCostThreshold }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Member() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.Member }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) PacketLossWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.PacketLossWeight }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) PriorityMembers() SystemVirtualWanLinkServicePriorityMemberArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServicePriorityMember {
		return v.PriorityMembers
	}).(SystemVirtualWanLinkServicePriorityMemberArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.Protocol }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) QualityLink() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.QualityLink }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) RouteTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.RouteTag }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) SlaCompareMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.SlaCompareMethod }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Slas() SystemVirtualWanLinkServiceSlaArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceSla { return v.Slas }).(SystemVirtualWanLinkServiceSlaArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Src6s() SystemVirtualWanLinkServiceSrc6ArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceSrc6 { return v.Src6s }).(SystemVirtualWanLinkServiceSrc6ArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) SrcNegate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.SrcNegate }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Srcs() SystemVirtualWanLinkServiceSrcArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceSrc { return v.Srcs }).(SystemVirtualWanLinkServiceSrcArrayOutput)
}

func (o SystemVirtualWanLinkServiceOutput) StandaloneAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.StandaloneAction }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Tos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.Tos }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) TosMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) *string { return v.TosMask }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceOutput) Users() SystemVirtualWanLinkServiceUserArrayOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkService) []SystemVirtualWanLinkServiceUser { return v.Users }).(SystemVirtualWanLinkServiceUserArrayOutput)
}

type SystemVirtualWanLinkServiceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkService)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceArrayOutput) ToSystemVirtualWanLinkServiceArrayOutput() SystemVirtualWanLinkServiceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceArrayOutput) ToSystemVirtualWanLinkServiceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkService] {
	return pulumix.Output[[]SystemVirtualWanLinkService]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkService {
		return vs[0].([]SystemVirtualWanLinkService)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceOutput)
}

type SystemVirtualWanLinkServiceDst6 struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceDst6Input is an input type that accepts SystemVirtualWanLinkServiceDst6Args and SystemVirtualWanLinkServiceDst6Output values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceDst6Input` via:
//
//	SystemVirtualWanLinkServiceDst6Args{...}
type SystemVirtualWanLinkServiceDst6Input interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceDst6Output() SystemVirtualWanLinkServiceDst6Output
	ToSystemVirtualWanLinkServiceDst6OutputWithContext(context.Context) SystemVirtualWanLinkServiceDst6Output
}

type SystemVirtualWanLinkServiceDst6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceDst6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceDst6)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceDst6Args) ToSystemVirtualWanLinkServiceDst6Output() SystemVirtualWanLinkServiceDst6Output {
	return i.ToSystemVirtualWanLinkServiceDst6OutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceDst6Args) ToSystemVirtualWanLinkServiceDst6OutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDst6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceDst6Output)
}

func (i SystemVirtualWanLinkServiceDst6Args) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceDst6] {
	return pulumix.Output[SystemVirtualWanLinkServiceDst6]{
		OutputState: i.ToSystemVirtualWanLinkServiceDst6OutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceDst6ArrayInput is an input type that accepts SystemVirtualWanLinkServiceDst6Array and SystemVirtualWanLinkServiceDst6ArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceDst6ArrayInput` via:
//
//	SystemVirtualWanLinkServiceDst6Array{ SystemVirtualWanLinkServiceDst6Args{...} }
type SystemVirtualWanLinkServiceDst6ArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceDst6ArrayOutput() SystemVirtualWanLinkServiceDst6ArrayOutput
	ToSystemVirtualWanLinkServiceDst6ArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceDst6ArrayOutput
}

type SystemVirtualWanLinkServiceDst6Array []SystemVirtualWanLinkServiceDst6Input

func (SystemVirtualWanLinkServiceDst6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceDst6)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceDst6Array) ToSystemVirtualWanLinkServiceDst6ArrayOutput() SystemVirtualWanLinkServiceDst6ArrayOutput {
	return i.ToSystemVirtualWanLinkServiceDst6ArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceDst6Array) ToSystemVirtualWanLinkServiceDst6ArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDst6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceDst6ArrayOutput)
}

func (i SystemVirtualWanLinkServiceDst6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceDst6] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceDst6]{
		OutputState: i.ToSystemVirtualWanLinkServiceDst6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceDst6Output struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceDst6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceDst6)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceDst6Output) ToSystemVirtualWanLinkServiceDst6Output() SystemVirtualWanLinkServiceDst6Output {
	return o
}

func (o SystemVirtualWanLinkServiceDst6Output) ToSystemVirtualWanLinkServiceDst6OutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDst6Output {
	return o
}

func (o SystemVirtualWanLinkServiceDst6Output) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceDst6] {
	return pulumix.Output[SystemVirtualWanLinkServiceDst6]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceDst6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceDst6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceDst6ArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceDst6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceDst6)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceDst6ArrayOutput) ToSystemVirtualWanLinkServiceDst6ArrayOutput() SystemVirtualWanLinkServiceDst6ArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDst6ArrayOutput) ToSystemVirtualWanLinkServiceDst6ArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDst6ArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDst6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceDst6] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceDst6]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceDst6ArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceDst6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceDst6 {
		return vs[0].([]SystemVirtualWanLinkServiceDst6)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceDst6Output)
}

type SystemVirtualWanLinkServiceDst struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceDstInput is an input type that accepts SystemVirtualWanLinkServiceDstArgs and SystemVirtualWanLinkServiceDstOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceDstInput` via:
//
//	SystemVirtualWanLinkServiceDstArgs{...}
type SystemVirtualWanLinkServiceDstInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceDstOutput() SystemVirtualWanLinkServiceDstOutput
	ToSystemVirtualWanLinkServiceDstOutputWithContext(context.Context) SystemVirtualWanLinkServiceDstOutput
}

type SystemVirtualWanLinkServiceDstArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceDstArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceDst)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceDstArgs) ToSystemVirtualWanLinkServiceDstOutput() SystemVirtualWanLinkServiceDstOutput {
	return i.ToSystemVirtualWanLinkServiceDstOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceDstArgs) ToSystemVirtualWanLinkServiceDstOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDstOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceDstOutput)
}

func (i SystemVirtualWanLinkServiceDstArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceDst] {
	return pulumix.Output[SystemVirtualWanLinkServiceDst]{
		OutputState: i.ToSystemVirtualWanLinkServiceDstOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceDstArrayInput is an input type that accepts SystemVirtualWanLinkServiceDstArray and SystemVirtualWanLinkServiceDstArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceDstArrayInput` via:
//
//	SystemVirtualWanLinkServiceDstArray{ SystemVirtualWanLinkServiceDstArgs{...} }
type SystemVirtualWanLinkServiceDstArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceDstArrayOutput() SystemVirtualWanLinkServiceDstArrayOutput
	ToSystemVirtualWanLinkServiceDstArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceDstArrayOutput
}

type SystemVirtualWanLinkServiceDstArray []SystemVirtualWanLinkServiceDstInput

func (SystemVirtualWanLinkServiceDstArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceDst)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceDstArray) ToSystemVirtualWanLinkServiceDstArrayOutput() SystemVirtualWanLinkServiceDstArrayOutput {
	return i.ToSystemVirtualWanLinkServiceDstArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceDstArray) ToSystemVirtualWanLinkServiceDstArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDstArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceDstArrayOutput)
}

func (i SystemVirtualWanLinkServiceDstArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceDst] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceDst]{
		OutputState: i.ToSystemVirtualWanLinkServiceDstArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceDstOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceDstOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceDst)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceDstOutput) ToSystemVirtualWanLinkServiceDstOutput() SystemVirtualWanLinkServiceDstOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDstOutput) ToSystemVirtualWanLinkServiceDstOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDstOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDstOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceDst] {
	return pulumix.Output[SystemVirtualWanLinkServiceDst]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceDstOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceDst) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceDstArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceDstArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceDst)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceDstArrayOutput) ToSystemVirtualWanLinkServiceDstArrayOutput() SystemVirtualWanLinkServiceDstArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDstArrayOutput) ToSystemVirtualWanLinkServiceDstArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceDstArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceDstArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceDst] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceDst]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceDstArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceDstOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceDst {
		return vs[0].([]SystemVirtualWanLinkServiceDst)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceDstOutput)
}

type SystemVirtualWanLinkServiceGroup struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceGroupInput is an input type that accepts SystemVirtualWanLinkServiceGroupArgs and SystemVirtualWanLinkServiceGroupOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceGroupInput` via:
//
//	SystemVirtualWanLinkServiceGroupArgs{...}
type SystemVirtualWanLinkServiceGroupInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceGroupOutput() SystemVirtualWanLinkServiceGroupOutput
	ToSystemVirtualWanLinkServiceGroupOutputWithContext(context.Context) SystemVirtualWanLinkServiceGroupOutput
}

type SystemVirtualWanLinkServiceGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceGroupArgs) ToSystemVirtualWanLinkServiceGroupOutput() SystemVirtualWanLinkServiceGroupOutput {
	return i.ToSystemVirtualWanLinkServiceGroupOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceGroupArgs) ToSystemVirtualWanLinkServiceGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceGroupOutput)
}

func (i SystemVirtualWanLinkServiceGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceGroupArrayInput is an input type that accepts SystemVirtualWanLinkServiceGroupArray and SystemVirtualWanLinkServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceGroupArrayInput` via:
//
//	SystemVirtualWanLinkServiceGroupArray{ SystemVirtualWanLinkServiceGroupArgs{...} }
type SystemVirtualWanLinkServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceGroupArrayOutput() SystemVirtualWanLinkServiceGroupArrayOutput
	ToSystemVirtualWanLinkServiceGroupArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceGroupArrayOutput
}

type SystemVirtualWanLinkServiceGroupArray []SystemVirtualWanLinkServiceGroupInput

func (SystemVirtualWanLinkServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceGroupArray) ToSystemVirtualWanLinkServiceGroupArrayOutput() SystemVirtualWanLinkServiceGroupArrayOutput {
	return i.ToSystemVirtualWanLinkServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceGroupArray) ToSystemVirtualWanLinkServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceGroupArrayOutput)
}

func (i SystemVirtualWanLinkServiceGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceGroupOutput) ToSystemVirtualWanLinkServiceGroupOutput() SystemVirtualWanLinkServiceGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceGroupOutput) ToSystemVirtualWanLinkServiceGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceGroupArrayOutput) ToSystemVirtualWanLinkServiceGroupArrayOutput() SystemVirtualWanLinkServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceGroupArrayOutput) ToSystemVirtualWanLinkServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceGroup {
		return vs[0].([]SystemVirtualWanLinkServiceGroup)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceGroupOutput)
}

type SystemVirtualWanLinkServiceInputDevice struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInputDeviceInput is an input type that accepts SystemVirtualWanLinkServiceInputDeviceArgs and SystemVirtualWanLinkServiceInputDeviceOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInputDeviceInput` via:
//
//	SystemVirtualWanLinkServiceInputDeviceArgs{...}
type SystemVirtualWanLinkServiceInputDeviceInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInputDeviceOutput() SystemVirtualWanLinkServiceInputDeviceOutput
	ToSystemVirtualWanLinkServiceInputDeviceOutputWithContext(context.Context) SystemVirtualWanLinkServiceInputDeviceOutput
}

type SystemVirtualWanLinkServiceInputDeviceArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInputDevice)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInputDeviceArgs) ToSystemVirtualWanLinkServiceInputDeviceOutput() SystemVirtualWanLinkServiceInputDeviceOutput {
	return i.ToSystemVirtualWanLinkServiceInputDeviceOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInputDeviceArgs) ToSystemVirtualWanLinkServiceInputDeviceOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInputDeviceOutput)
}

func (i SystemVirtualWanLinkServiceInputDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInputDevice] {
	return pulumix.Output[SystemVirtualWanLinkServiceInputDevice]{
		OutputState: i.ToSystemVirtualWanLinkServiceInputDeviceOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInputDeviceArrayInput is an input type that accepts SystemVirtualWanLinkServiceInputDeviceArray and SystemVirtualWanLinkServiceInputDeviceArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInputDeviceArrayInput` via:
//
//	SystemVirtualWanLinkServiceInputDeviceArray{ SystemVirtualWanLinkServiceInputDeviceArgs{...} }
type SystemVirtualWanLinkServiceInputDeviceArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInputDeviceArrayOutput() SystemVirtualWanLinkServiceInputDeviceArrayOutput
	ToSystemVirtualWanLinkServiceInputDeviceArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInputDeviceArrayOutput
}

type SystemVirtualWanLinkServiceInputDeviceArray []SystemVirtualWanLinkServiceInputDeviceInput

func (SystemVirtualWanLinkServiceInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInputDevice)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInputDeviceArray) ToSystemVirtualWanLinkServiceInputDeviceArrayOutput() SystemVirtualWanLinkServiceInputDeviceArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInputDeviceArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInputDeviceArray) ToSystemVirtualWanLinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInputDeviceArrayOutput)
}

func (i SystemVirtualWanLinkServiceInputDeviceArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInputDevice] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInputDevice]{
		OutputState: i.ToSystemVirtualWanLinkServiceInputDeviceArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInputDeviceOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInputDevice)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInputDeviceOutput) ToSystemVirtualWanLinkServiceInputDeviceOutput() SystemVirtualWanLinkServiceInputDeviceOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInputDeviceOutput) ToSystemVirtualWanLinkServiceInputDeviceOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInputDeviceOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInputDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInputDevice] {
	return pulumix.Output[SystemVirtualWanLinkServiceInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInputDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInputDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInputDevice)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInputDeviceArrayOutput) ToSystemVirtualWanLinkServiceInputDeviceArrayOutput() SystemVirtualWanLinkServiceInputDeviceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInputDeviceArrayOutput) ToSystemVirtualWanLinkServiceInputDeviceArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInputDeviceArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInputDeviceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInputDevice] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInputDevice]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInputDeviceArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInputDevice {
		return vs[0].([]SystemVirtualWanLinkServiceInputDevice)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInputDeviceOutput)
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrl struct {
	Id *int `pulumi:"id"`
}

// SystemVirtualWanLinkServiceInternetServiceAppCtrlInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs and SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceAppCtrlInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs{...}
type SystemVirtualWanLinkServiceInternetServiceAppCtrlInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput
	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrl] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrl]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceAppCtrlArray and SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceAppCtrlArray{ SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlArray []SystemVirtualWanLinkServiceInternetServiceAppCtrlInput

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArray) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArray) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrl] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrl]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrl] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceAppCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceAppCtrl)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrl] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceAppCtrl {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceAppCtrl)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput)
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs and SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs{...}
type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput
	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray and SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray{ SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray []SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupInput

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceAppCtrlGroup)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCtrl struct {
	Id *int `pulumi:"id"`
}

// SystemVirtualWanLinkServiceInternetServiceCtrlInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCtrlArgs and SystemVirtualWanLinkServiceInternetServiceCtrlOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCtrlInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCtrlArgs{...}
type SystemVirtualWanLinkServiceInternetServiceCtrlInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCtrlOutput() SystemVirtualWanLinkServiceInternetServiceCtrlOutput
	ToSystemVirtualWanLinkServiceInternetServiceCtrlOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlOutput
}

type SystemVirtualWanLinkServiceInternetServiceCtrlArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualWanLinkServiceInternetServiceCtrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArgs) ToSystemVirtualWanLinkServiceInternetServiceCtrlOutput() SystemVirtualWanLinkServiceInternetServiceCtrlOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCtrlOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArgs) ToSystemVirtualWanLinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCtrlOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrl] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrl]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCtrlOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceCtrlArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCtrlArray and SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCtrlArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCtrlArray{ SystemVirtualWanLinkServiceInternetServiceCtrlArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceCtrlArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceCtrlArray []SystemVirtualWanLinkServiceInternetServiceCtrlInput

func (SystemVirtualWanLinkServiceInternetServiceCtrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArray) ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArray) ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrl] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrl]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceCtrlOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCtrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlOutput() SystemVirtualWanLinkServiceInternetServiceCtrlOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrl] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceCtrl) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCtrl)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrl] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrl]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceCtrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceCtrl {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceCtrl)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceCtrlOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCtrlGroup struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceCtrlGroupInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs and SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCtrlGroupInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs{...}
type SystemVirtualWanLinkServiceInternetServiceCtrlGroupInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput
	ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput
}

type SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrlGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrlGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray and SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray{ SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray []SystemVirtualWanLinkServiceInternetServiceCtrlGroupInput

func (SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrlGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceCtrlGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCtrlGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceCtrlGroup {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceCtrlGroup)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCustom struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceCustomInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCustomArgs and SystemVirtualWanLinkServiceInternetServiceCustomOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCustomInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCustomArgs{...}
type SystemVirtualWanLinkServiceInternetServiceCustomInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCustomOutput() SystemVirtualWanLinkServiceInternetServiceCustomOutput
	ToSystemVirtualWanLinkServiceInternetServiceCustomOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCustomOutput
}

type SystemVirtualWanLinkServiceInternetServiceCustomArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArgs) ToSystemVirtualWanLinkServiceInternetServiceCustomOutput() SystemVirtualWanLinkServiceInternetServiceCustomOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCustomOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArgs) ToSystemVirtualWanLinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCustomOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustom] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustom]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCustomOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceCustomArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCustomArray and SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCustomArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCustomArray{ SystemVirtualWanLinkServiceInternetServiceCustomArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceCustomArray []SystemVirtualWanLinkServiceInternetServiceCustomInput

func (SystemVirtualWanLinkServiceInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCustom)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArray) ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArray) ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustom] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustom]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomOutput() SystemVirtualWanLinkServiceInternetServiceCustomOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustom] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCustom)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustom] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustom]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceCustom {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceCustom)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceCustomOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCustomGroup struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceCustomGroupInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs and SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCustomGroupInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs{...}
type SystemVirtualWanLinkServiceInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput
	ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput
}

type SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustomGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustomGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceCustomGroupArray and SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceCustomGroupArray{ SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceCustomGroupArray []SystemVirtualWanLinkServiceInternetServiceCustomGroupInput

func (SystemVirtualWanLinkServiceInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArray) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArray) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceCustomGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustomGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustomGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustomGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceCustomGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceCustomGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustomGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceCustomGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceCustomGroup {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceCustomGroup)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput)
}

type SystemVirtualWanLinkServiceInternetServiceGroup struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceGroupInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceGroupArgs and SystemVirtualWanLinkServiceInternetServiceGroupOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceGroupInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceGroupArgs{...}
type SystemVirtualWanLinkServiceInternetServiceGroupInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceGroupOutput() SystemVirtualWanLinkServiceInternetServiceGroupOutput
	ToSystemVirtualWanLinkServiceInternetServiceGroupOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceGroupOutput
}

type SystemVirtualWanLinkServiceInternetServiceGroupArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceGroupOutput() SystemVirtualWanLinkServiceInternetServiceGroupOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceGroupOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArgs) ToSystemVirtualWanLinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceGroupOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceGroupOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceGroupArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceGroupArray and SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceGroupArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceGroupArray{ SystemVirtualWanLinkServiceInternetServiceGroupArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceGroupArray []SystemVirtualWanLinkServiceInternetServiceGroupInput

func (SystemVirtualWanLinkServiceInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceGroup)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArray) ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArray) ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceGroup]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceGroupOutput() SystemVirtualWanLinkServiceInternetServiceGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupOutput) ToSystemVirtualWanLinkServiceInternetServiceGroupOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceGroupOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceGroup] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceGroup)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutput() SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceGroupArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceGroup] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceGroup]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceGroup {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceGroup)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceGroupOutput)
}

type SystemVirtualWanLinkServiceInternetServiceId struct {
	Id *int `pulumi:"id"`
}

// SystemVirtualWanLinkServiceInternetServiceIdInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceIdArgs and SystemVirtualWanLinkServiceInternetServiceIdOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceIdInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceIdArgs{...}
type SystemVirtualWanLinkServiceInternetServiceIdInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceIdOutput() SystemVirtualWanLinkServiceInternetServiceIdOutput
	ToSystemVirtualWanLinkServiceInternetServiceIdOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceIdOutput
}

type SystemVirtualWanLinkServiceInternetServiceIdArgs struct {
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (SystemVirtualWanLinkServiceInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceId)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArgs) ToSystemVirtualWanLinkServiceInternetServiceIdOutput() SystemVirtualWanLinkServiceInternetServiceIdOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceIdOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArgs) ToSystemVirtualWanLinkServiceInternetServiceIdOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceIdOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceId] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceId]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceIdOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceIdArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceIdArray and SystemVirtualWanLinkServiceInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceIdArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceIdArray{ SystemVirtualWanLinkServiceInternetServiceIdArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceIdArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutput() SystemVirtualWanLinkServiceInternetServiceIdArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceIdArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceIdArray []SystemVirtualWanLinkServiceInternetServiceIdInput

func (SystemVirtualWanLinkServiceInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceId)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArray) ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutput() SystemVirtualWanLinkServiceInternetServiceIdArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArray) ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceIdArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceIdArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceId] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceId]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceIdOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceId)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceIdOutput) ToSystemVirtualWanLinkServiceInternetServiceIdOutput() SystemVirtualWanLinkServiceInternetServiceIdOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceIdOutput) ToSystemVirtualWanLinkServiceInternetServiceIdOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceIdOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceIdOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceId] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceId)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceIdArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutput() SystemVirtualWanLinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceIdArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceIdArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceIdArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceIdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceId] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceId]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceIdArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceId {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceId)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceIdOutput)
}

type SystemVirtualWanLinkServiceInternetServiceName struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceInternetServiceNameInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceNameArgs and SystemVirtualWanLinkServiceInternetServiceNameOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceNameInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceNameArgs{...}
type SystemVirtualWanLinkServiceInternetServiceNameInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceNameOutput() SystemVirtualWanLinkServiceInternetServiceNameOutput
	ToSystemVirtualWanLinkServiceInternetServiceNameOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceNameOutput
}

type SystemVirtualWanLinkServiceInternetServiceNameArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceName)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArgs) ToSystemVirtualWanLinkServiceInternetServiceNameOutput() SystemVirtualWanLinkServiceInternetServiceNameOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceNameOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArgs) ToSystemVirtualWanLinkServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceNameOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceName] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceName]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceNameOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceInternetServiceNameArrayInput is an input type that accepts SystemVirtualWanLinkServiceInternetServiceNameArray and SystemVirtualWanLinkServiceInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceInternetServiceNameArrayInput` via:
//
//	SystemVirtualWanLinkServiceInternetServiceNameArray{ SystemVirtualWanLinkServiceInternetServiceNameArgs{...} }
type SystemVirtualWanLinkServiceInternetServiceNameArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutput() SystemVirtualWanLinkServiceInternetServiceNameArrayOutput
	ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceInternetServiceNameArrayOutput
}

type SystemVirtualWanLinkServiceInternetServiceNameArray []SystemVirtualWanLinkServiceInternetServiceNameInput

func (SystemVirtualWanLinkServiceInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceName)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArray) ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutput() SystemVirtualWanLinkServiceInternetServiceNameArrayOutput {
	return i.ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArray) ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceInternetServiceNameArrayOutput)
}

func (i SystemVirtualWanLinkServiceInternetServiceNameArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceName] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceName]{
		OutputState: i.ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceInternetServiceNameOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceName)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceNameOutput) ToSystemVirtualWanLinkServiceInternetServiceNameOutput() SystemVirtualWanLinkServiceInternetServiceNameOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceNameOutput) ToSystemVirtualWanLinkServiceInternetServiceNameOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceNameOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceNameOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceInternetServiceName] {
	return pulumix.Output[SystemVirtualWanLinkServiceInternetServiceName]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceInternetServiceName)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceInternetServiceNameArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutput() SystemVirtualWanLinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceNameArrayOutput) ToSystemVirtualWanLinkServiceInternetServiceNameArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceInternetServiceNameArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceInternetServiceNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceName] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceInternetServiceName]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceInternetServiceNameArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceInternetServiceName {
		return vs[0].([]SystemVirtualWanLinkServiceInternetServiceName)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceInternetServiceNameOutput)
}

type SystemVirtualWanLinkServicePriorityMember struct {
	SeqNum *int `pulumi:"seqNum"`
}

// SystemVirtualWanLinkServicePriorityMemberInput is an input type that accepts SystemVirtualWanLinkServicePriorityMemberArgs and SystemVirtualWanLinkServicePriorityMemberOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServicePriorityMemberInput` via:
//
//	SystemVirtualWanLinkServicePriorityMemberArgs{...}
type SystemVirtualWanLinkServicePriorityMemberInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServicePriorityMemberOutput() SystemVirtualWanLinkServicePriorityMemberOutput
	ToSystemVirtualWanLinkServicePriorityMemberOutputWithContext(context.Context) SystemVirtualWanLinkServicePriorityMemberOutput
}

type SystemVirtualWanLinkServicePriorityMemberArgs struct {
	SeqNum pulumi.IntPtrInput `pulumi:"seqNum"`
}

func (SystemVirtualWanLinkServicePriorityMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServicePriorityMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkServicePriorityMemberArgs) ToSystemVirtualWanLinkServicePriorityMemberOutput() SystemVirtualWanLinkServicePriorityMemberOutput {
	return i.ToSystemVirtualWanLinkServicePriorityMemberOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServicePriorityMemberArgs) ToSystemVirtualWanLinkServicePriorityMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkServicePriorityMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServicePriorityMemberOutput)
}

func (i SystemVirtualWanLinkServicePriorityMemberArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServicePriorityMember] {
	return pulumix.Output[SystemVirtualWanLinkServicePriorityMember]{
		OutputState: i.ToSystemVirtualWanLinkServicePriorityMemberOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServicePriorityMemberArrayInput is an input type that accepts SystemVirtualWanLinkServicePriorityMemberArray and SystemVirtualWanLinkServicePriorityMemberArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServicePriorityMemberArrayInput` via:
//
//	SystemVirtualWanLinkServicePriorityMemberArray{ SystemVirtualWanLinkServicePriorityMemberArgs{...} }
type SystemVirtualWanLinkServicePriorityMemberArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServicePriorityMemberArrayOutput() SystemVirtualWanLinkServicePriorityMemberArrayOutput
	ToSystemVirtualWanLinkServicePriorityMemberArrayOutputWithContext(context.Context) SystemVirtualWanLinkServicePriorityMemberArrayOutput
}

type SystemVirtualWanLinkServicePriorityMemberArray []SystemVirtualWanLinkServicePriorityMemberInput

func (SystemVirtualWanLinkServicePriorityMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServicePriorityMember)(nil)).Elem()
}

func (i SystemVirtualWanLinkServicePriorityMemberArray) ToSystemVirtualWanLinkServicePriorityMemberArrayOutput() SystemVirtualWanLinkServicePriorityMemberArrayOutput {
	return i.ToSystemVirtualWanLinkServicePriorityMemberArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServicePriorityMemberArray) ToSystemVirtualWanLinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServicePriorityMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServicePriorityMemberArrayOutput)
}

func (i SystemVirtualWanLinkServicePriorityMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServicePriorityMember] {
	return pulumix.Output[[]SystemVirtualWanLinkServicePriorityMember]{
		OutputState: i.ToSystemVirtualWanLinkServicePriorityMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServicePriorityMemberOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServicePriorityMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServicePriorityMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkServicePriorityMemberOutput) ToSystemVirtualWanLinkServicePriorityMemberOutput() SystemVirtualWanLinkServicePriorityMemberOutput {
	return o
}

func (o SystemVirtualWanLinkServicePriorityMemberOutput) ToSystemVirtualWanLinkServicePriorityMemberOutputWithContext(ctx context.Context) SystemVirtualWanLinkServicePriorityMemberOutput {
	return o
}

func (o SystemVirtualWanLinkServicePriorityMemberOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServicePriorityMember] {
	return pulumix.Output[SystemVirtualWanLinkServicePriorityMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServicePriorityMemberOutput) SeqNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServicePriorityMember) *int { return v.SeqNum }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkServicePriorityMemberArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServicePriorityMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServicePriorityMember)(nil)).Elem()
}

func (o SystemVirtualWanLinkServicePriorityMemberArrayOutput) ToSystemVirtualWanLinkServicePriorityMemberArrayOutput() SystemVirtualWanLinkServicePriorityMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServicePriorityMemberArrayOutput) ToSystemVirtualWanLinkServicePriorityMemberArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServicePriorityMemberArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServicePriorityMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServicePriorityMember] {
	return pulumix.Output[[]SystemVirtualWanLinkServicePriorityMember]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServicePriorityMemberArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServicePriorityMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServicePriorityMember {
		return vs[0].([]SystemVirtualWanLinkServicePriorityMember)[vs[1].(int)]
	}).(SystemVirtualWanLinkServicePriorityMemberOutput)
}

type SystemVirtualWanLinkServiceSla struct {
	HealthCheck *string `pulumi:"healthCheck"`
	Id          *int    `pulumi:"id"`
}

// SystemVirtualWanLinkServiceSlaInput is an input type that accepts SystemVirtualWanLinkServiceSlaArgs and SystemVirtualWanLinkServiceSlaOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceSlaInput` via:
//
//	SystemVirtualWanLinkServiceSlaArgs{...}
type SystemVirtualWanLinkServiceSlaInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceSlaOutput() SystemVirtualWanLinkServiceSlaOutput
	ToSystemVirtualWanLinkServiceSlaOutputWithContext(context.Context) SystemVirtualWanLinkServiceSlaOutput
}

type SystemVirtualWanLinkServiceSlaArgs struct {
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
}

func (SystemVirtualWanLinkServiceSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceSla)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceSlaArgs) ToSystemVirtualWanLinkServiceSlaOutput() SystemVirtualWanLinkServiceSlaOutput {
	return i.ToSystemVirtualWanLinkServiceSlaOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceSlaArgs) ToSystemVirtualWanLinkServiceSlaOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceSlaOutput)
}

func (i SystemVirtualWanLinkServiceSlaArgs) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceSla] {
	return pulumix.Output[SystemVirtualWanLinkServiceSla]{
		OutputState: i.ToSystemVirtualWanLinkServiceSlaOutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceSlaArrayInput is an input type that accepts SystemVirtualWanLinkServiceSlaArray and SystemVirtualWanLinkServiceSlaArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceSlaArrayInput` via:
//
//	SystemVirtualWanLinkServiceSlaArray{ SystemVirtualWanLinkServiceSlaArgs{...} }
type SystemVirtualWanLinkServiceSlaArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceSlaArrayOutput() SystemVirtualWanLinkServiceSlaArrayOutput
	ToSystemVirtualWanLinkServiceSlaArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceSlaArrayOutput
}

type SystemVirtualWanLinkServiceSlaArray []SystemVirtualWanLinkServiceSlaInput

func (SystemVirtualWanLinkServiceSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceSla)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceSlaArray) ToSystemVirtualWanLinkServiceSlaArrayOutput() SystemVirtualWanLinkServiceSlaArrayOutput {
	return i.ToSystemVirtualWanLinkServiceSlaArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceSlaArray) ToSystemVirtualWanLinkServiceSlaArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceSlaArrayOutput)
}

func (i SystemVirtualWanLinkServiceSlaArray) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceSla] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceSla]{
		OutputState: i.ToSystemVirtualWanLinkServiceSlaArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceSlaOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceSla)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceSlaOutput) ToSystemVirtualWanLinkServiceSlaOutput() SystemVirtualWanLinkServiceSlaOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSlaOutput) ToSystemVirtualWanLinkServiceSlaOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSlaOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSlaOutput) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceSla] {
	return pulumix.Output[SystemVirtualWanLinkServiceSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceSlaOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceSla) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkServiceSlaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceSla) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type SystemVirtualWanLinkServiceSlaArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceSla)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceSlaArrayOutput) ToSystemVirtualWanLinkServiceSlaArrayOutput() SystemVirtualWanLinkServiceSlaArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSlaArrayOutput) ToSystemVirtualWanLinkServiceSlaArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSlaArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSlaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceSla] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceSla]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceSlaArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceSla {
		return vs[0].([]SystemVirtualWanLinkServiceSla)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceSlaOutput)
}

type SystemVirtualWanLinkServiceSrc6 struct {
	Name *string `pulumi:"name"`
}

// SystemVirtualWanLinkServiceSrc6Input is an input type that accepts SystemVirtualWanLinkServiceSrc6Args and SystemVirtualWanLinkServiceSrc6Output values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceSrc6Input` via:
//
//	SystemVirtualWanLinkServiceSrc6Args{...}
type SystemVirtualWanLinkServiceSrc6Input interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceSrc6Output() SystemVirtualWanLinkServiceSrc6Output
	ToSystemVirtualWanLinkServiceSrc6OutputWithContext(context.Context) SystemVirtualWanLinkServiceSrc6Output
}

type SystemVirtualWanLinkServiceSrc6Args struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SystemVirtualWanLinkServiceSrc6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceSrc6)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceSrc6Args) ToSystemVirtualWanLinkServiceSrc6Output() SystemVirtualWanLinkServiceSrc6Output {
	return i.ToSystemVirtualWanLinkServiceSrc6OutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceSrc6Args) ToSystemVirtualWanLinkServiceSrc6OutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSrc6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceSrc6Output)
}

func (i SystemVirtualWanLinkServiceSrc6Args) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceSrc6] {
	return pulumix.Output[SystemVirtualWanLinkServiceSrc6]{
		OutputState: i.ToSystemVirtualWanLinkServiceSrc6OutputWithContext(ctx).OutputState,
	}
}

// SystemVirtualWanLinkServiceSrc6ArrayInput is an input type that accepts SystemVirtualWanLinkServiceSrc6Array and SystemVirtualWanLinkServiceSrc6ArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkServiceSrc6ArrayInput` via:
//
//	SystemVirtualWanLinkServiceSrc6Array{ SystemVirtualWanLinkServiceSrc6Args{...} }
type SystemVirtualWanLinkServiceSrc6ArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkServiceSrc6ArrayOutput() SystemVirtualWanLinkServiceSrc6ArrayOutput
	ToSystemVirtualWanLinkServiceSrc6ArrayOutputWithContext(context.Context) SystemVirtualWanLinkServiceSrc6ArrayOutput
}

type SystemVirtualWanLinkServiceSrc6Array []SystemVirtualWanLinkServiceSrc6Input

func (SystemVirtualWanLinkServiceSrc6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceSrc6)(nil)).Elem()
}

func (i SystemVirtualWanLinkServiceSrc6Array) ToSystemVirtualWanLinkServiceSrc6ArrayOutput() SystemVirtualWanLinkServiceSrc6ArrayOutput {
	return i.ToSystemVirtualWanLinkServiceSrc6ArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkServiceSrc6Array) ToSystemVirtualWanLinkServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSrc6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkServiceSrc6ArrayOutput)
}

func (i SystemVirtualWanLinkServiceSrc6Array) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceSrc6] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceSrc6]{
		OutputState: i.ToSystemVirtualWanLinkServiceSrc6ArrayOutputWithContext(ctx).OutputState,
	}
}

type SystemVirtualWanLinkServiceSrc6Output struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceSrc6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemVirtualWanLinkServiceSrc6)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceSrc6Output) ToSystemVirtualWanLinkServiceSrc6Output() SystemVirtualWanLinkServiceSrc6Output {
	return o
}

func (o SystemVirtualWanLinkServiceSrc6Output) ToSystemVirtualWanLinkServiceSrc6OutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSrc6Output {
	return o
}

func (o SystemVirtualWanLinkServiceSrc6Output) ToOutput(ctx context.Context) pulumix.Output[SystemVirtualWanLinkServiceSrc6] {
	return pulumix.Output[SystemVirtualWanLinkServiceSrc6]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceSrc6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemVirtualWanLinkServiceSrc6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SystemVirtualWanLinkServiceSrc6ArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkServiceSrc6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemVirtualWanLinkServiceSrc6)(nil)).Elem()
}

func (o SystemVirtualWanLinkServiceSrc6ArrayOutput) ToSystemVirtualWanLinkServiceSrc6ArrayOutput() SystemVirtualWanLinkServiceSrc6ArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSrc6ArrayOutput) ToSystemVirtualWanLinkServiceSrc6ArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkServiceSrc6ArrayOutput {
	return o
}

func (o SystemVirtualWanLinkServiceSrc6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SystemVirtualWanLinkServiceSrc6] {
	return pulumix.Output[[]SystemVirtualWanLinkServiceSrc6]{
		OutputState: o.OutputState,
	}
}

func (o SystemVirtualWanLinkServiceSrc6ArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkServiceSrc6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemVirtualWanLinkServiceSrc6 {
		return vs[0].([]SystemVirtualWanLinkServiceSrc6)[vs[1].(int)]
	}).(SystemVirtualWanLinkServiceSrc6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerSettingSerialInput)(nil)).Elem(), LogFortianalyzerSettingSerialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerSettingSerialArrayInput)(nil)).Elem(), LogFortianalyzerSettingSerialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardFilterFreeStyleInput)(nil)).Elem(), LogFortiguardFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardFilterFreeStyleArrayInput)(nil)).Elem(), LogFortiguardFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardOverrideFilterFreeStyleInput)(nil)).Elem(), LogFortiguardOverrideFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortiguardOverrideFilterFreeStyleArrayInput)(nil)).Elem(), LogFortiguardOverrideFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMemoryFilterFreeStyleInput)(nil)).Elem(), LogMemoryFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMemoryFilterFreeStyleArrayInput)(nil)).Elem(), LogMemoryFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogNullDeviceFilterFreeStyleInput)(nil)).Elem(), LogNullDeviceFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogNullDeviceFilterFreeStyleArrayInput)(nil)).Elem(), LogNullDeviceFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingCustomLogFieldInput)(nil)).Elem(), LogSettingCustomLogFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSettingCustomLogFieldArrayInput)(nil)).Elem(), LogSettingCustomLogFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2FilterFreeStyleInput)(nil)).Elem(), LogSyslogd2FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2FilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd2FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideFilterFreeStyleInput)(nil)).Elem(), LogSyslogd2OverrideFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideFilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd2OverrideFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideSettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd2OverrideSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideSettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd2OverrideSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2SettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd2SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2SettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd2SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3FilterFreeStyleInput)(nil)).Elem(), LogSyslogd3FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3FilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd3FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideFilterFreeStyleInput)(nil)).Elem(), LogSyslogd3OverrideFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideFilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd3OverrideFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideSettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd3OverrideSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideSettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd3OverrideSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3SettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd3SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3SettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd3SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4FilterFreeStyleInput)(nil)).Elem(), LogSyslogd4FilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4FilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd4FilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideFilterFreeStyleInput)(nil)).Elem(), LogSyslogd4OverrideFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideFilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogd4OverrideFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideSettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd4OverrideSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideSettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd4OverrideSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4SettingCustomFieldNameInput)(nil)).Elem(), LogSyslogd4SettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4SettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogd4SettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdFilterFreeStyleInput)(nil)).Elem(), LogSyslogdFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdFilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogdFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdOverrideFilterFreeStyleInput)(nil)).Elem(), LogSyslogdOverrideFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdOverrideFilterFreeStyleArrayInput)(nil)).Elem(), LogSyslogdOverrideFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdOverrideSettingCustomFieldNameInput)(nil)).Elem(), LogSyslogdOverrideSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdOverrideSettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogdOverrideSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdSettingCustomFieldNameInput)(nil)).Elem(), LogSyslogdSettingCustomFieldNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogdSettingCustomFieldNameArrayInput)(nil)).Elem(), LogSyslogdSettingCustomFieldNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightApplicationInput)(nil)).Elem(), LogThreatWeightApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightApplicationArrayInput)(nil)).Elem(), LogThreatWeightApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightGeolocationInput)(nil)).Elem(), LogThreatWeightGeolocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightGeolocationArrayInput)(nil)).Elem(), LogThreatWeightGeolocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightIpsInput)(nil)).Elem(), LogThreatWeightIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightIpsPtrInput)(nil)).Elem(), LogThreatWeightIpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightLevelInput)(nil)).Elem(), LogThreatWeightLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightLevelPtrInput)(nil)).Elem(), LogThreatWeightLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightMalwareInput)(nil)).Elem(), LogThreatWeightMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightMalwarePtrInput)(nil)).Elem(), LogThreatWeightMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightWebInput)(nil)).Elem(), LogThreatWeightWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogThreatWeightWebArrayInput)(nil)).Elem(), LogThreatWeightWebArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsFilterFreeStyleInput)(nil)).Elem(), LogWebtrendsFilterFreeStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsFilterFreeStyleArrayInput)(nil)).Elem(), LogWebtrendsFilterFreeStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtServiceChainServiceIndexInput)(nil)).Elem(), NsxtServiceChainServiceIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtServiceChainServiceIndexArrayInput)(nil)).Elem(), NsxtServiceChainServiceIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartCategorySeriesInput)(nil)).Elem(), ReportChartCategorySeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartCategorySeriesPtrInput)(nil)).Elem(), ReportChartCategorySeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnInput)(nil)).Elem(), ReportChartColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnArrayInput)(nil)).Elem(), ReportChartColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnMappingInput)(nil)).Elem(), ReportChartColumnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartColumnMappingArrayInput)(nil)).Elem(), ReportChartColumnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartDrillDownChartInput)(nil)).Elem(), ReportChartDrillDownChartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartDrillDownChartArrayInput)(nil)).Elem(), ReportChartDrillDownChartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartValueSeriesInput)(nil)).Elem(), ReportChartValueSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartValueSeriesPtrInput)(nil)).Elem(), ReportChartValueSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartXSeriesInput)(nil)).Elem(), ReportChartXSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartXSeriesPtrInput)(nil)).Elem(), ReportChartXSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartYSeriesInput)(nil)).Elem(), ReportChartYSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportChartYSeriesPtrInput)(nil)).Elem(), ReportChartYSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetFieldInput)(nil)).Elem(), ReportDatasetFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetFieldArrayInput)(nil)).Elem(), ReportDatasetFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetParameterInput)(nil)).Elem(), ReportDatasetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDatasetParameterArrayInput)(nil)).Elem(), ReportDatasetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemInput)(nil)).Elem(), ReportLayoutBodyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemArrayInput)(nil)).Elem(), ReportLayoutBodyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemListInput)(nil)).Elem(), ReportLayoutBodyItemListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemListArrayInput)(nil)).Elem(), ReportLayoutBodyItemListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemParameterInput)(nil)).Elem(), ReportLayoutBodyItemParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutBodyItemParameterArrayInput)(nil)).Elem(), ReportLayoutBodyItemParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageInput)(nil)).Elem(), ReportLayoutPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPagePtrInput)(nil)).Elem(), ReportLayoutPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterInput)(nil)).Elem(), ReportLayoutPageFooterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterPtrInput)(nil)).Elem(), ReportLayoutPageFooterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterFooterItemInput)(nil)).Elem(), ReportLayoutPageFooterFooterItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageFooterFooterItemArrayInput)(nil)).Elem(), ReportLayoutPageFooterFooterItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderInput)(nil)).Elem(), ReportLayoutPageHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderPtrInput)(nil)).Elem(), ReportLayoutPageHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderHeaderItemInput)(nil)).Elem(), ReportLayoutPageHeaderHeaderItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportLayoutPageHeaderHeaderItemArrayInput)(nil)).Elem(), ReportLayoutPageHeaderHeaderItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessList6RuleInput)(nil)).Elem(), RouterAccessList6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessList6RuleArrayInput)(nil)).Elem(), RouterAccessList6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessListRuleInput)(nil)).Elem(), RouterAccessListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAccessListRuleArrayInput)(nil)).Elem(), RouterAccessListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAspathListRuleInput)(nil)).Elem(), RouterAspathListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterAspathListRuleArrayInput)(nil)).Elem(), RouterAspathListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6MultihopTemplateInput)(nil)).Elem(), RouterBfd6MultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6MultihopTemplateArrayInput)(nil)).Elem(), RouterBfd6MultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6NeighborInput)(nil)).Elem(), RouterBfd6NeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfd6NeighborArrayInput)(nil)).Elem(), RouterBfd6NeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdMultihopTemplateInput)(nil)).Elem(), RouterBfdMultihopTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdMultihopTemplateArrayInput)(nil)).Elem(), RouterBfdMultihopTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdNeighborInput)(nil)).Elem(), RouterBfdNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBfdNeighborArrayInput)(nil)).Elem(), RouterBfdNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdminDistanceInput)(nil)).Elem(), RouterBgpAdminDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdminDistanceArrayInput)(nil)).Elem(), RouterBgpAdminDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddress6Input)(nil)).Elem(), RouterBgpAggregateAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddress6ArrayInput)(nil)).Elem(), RouterBgpAggregateAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddressInput)(nil)).Elem(), RouterBgpAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAggregateAddressArrayInput)(nil)).Elem(), RouterBgpAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpConfederationPeerInput)(nil)).Elem(), RouterBgpConfederationPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpConfederationPeerArrayInput)(nil)).Elem(), RouterBgpConfederationPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborTypeInput)(nil)).Elem(), RouterBgpNeighborTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborTypeArrayInput)(nil)).Elem(), RouterBgpNeighborTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6Input)(nil)).Elem(), RouterBgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertiseInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), RouterBgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborGroupInput)(nil)).Elem(), RouterBgpNeighborGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborGroupArrayInput)(nil)).Elem(), RouterBgpNeighborGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRange6Input)(nil)).Elem(), RouterBgpNeighborRange6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRange6ArrayInput)(nil)).Elem(), RouterBgpNeighborRange6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRangeInput)(nil)).Elem(), RouterBgpNeighborRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNeighborRangeArrayInput)(nil)).Elem(), RouterBgpNeighborRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetwork6TypeInput)(nil)).Elem(), RouterBgpNetwork6TypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetwork6TypeArrayInput)(nil)).Elem(), RouterBgpNetwork6TypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetworkTypeInput)(nil)).Elem(), RouterBgpNetworkTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpNetworkTypeArrayInput)(nil)).Elem(), RouterBgpNetworkTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistribute6Input)(nil)).Elem(), RouterBgpRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistribute6ArrayInput)(nil)).Elem(), RouterBgpRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistributeInput)(nil)).Elem(), RouterBgpRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpRedistributeArrayInput)(nil)).Elem(), RouterBgpRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6Input)(nil)).Elem(), RouterBgpVrf6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6ArrayInput)(nil)).Elem(), RouterBgpVrf6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6LeakTargetInput)(nil)).Elem(), RouterBgpVrf6LeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrf6LeakTargetArrayInput)(nil)).Elem(), RouterBgpVrf6LeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfInput)(nil)).Elem(), RouterBgpVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfArrayInput)(nil)).Elem(), RouterBgpVrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfExportRtInput)(nil)).Elem(), RouterBgpVrfExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfExportRtArrayInput)(nil)).Elem(), RouterBgpVrfExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfImportRtInput)(nil)).Elem(), RouterBgpVrfImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfImportRtArrayInput)(nil)).Elem(), RouterBgpVrfImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6Input)(nil)).Elem(), RouterBgpVrfLeak6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6ArrayInput)(nil)).Elem(), RouterBgpVrfLeak6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6TargetInput)(nil)).Elem(), RouterBgpVrfLeak6TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeak6TargetArrayInput)(nil)).Elem(), RouterBgpVrfLeak6TargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakInput)(nil)).Elem(), RouterBgpVrfLeakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakArrayInput)(nil)).Elem(), RouterBgpVrfLeakArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakTargetInput)(nil)).Elem(), RouterBgpVrfLeakTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpVrfLeakTargetArrayInput)(nil)).Elem(), RouterBgpVrfLeakTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterCommunityListRuleInput)(nil)).Elem(), RouterCommunityListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterCommunityListRuleArrayInput)(nil)).Elem(), RouterCommunityListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterExtcommunityListRuleInput)(nil)).Elem(), RouterExtcommunityListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterExtcommunityListRuleArrayInput)(nil)).Elem(), RouterExtcommunityListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisInterfaceInput)(nil)).Elem(), RouterIsisIsisInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisInterfaceArrayInput)(nil)).Elem(), RouterIsisIsisInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisNetInput)(nil)).Elem(), RouterIsisIsisNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisIsisNetArrayInput)(nil)).Elem(), RouterIsisIsisNetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistribute6Input)(nil)).Elem(), RouterIsisRedistribute6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistribute6ArrayInput)(nil)).Elem(), RouterIsisRedistribute6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistributeInput)(nil)).Elem(), RouterIsisRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisRedistributeArrayInput)(nil)).Elem(), RouterIsisRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddress6Input)(nil)).Elem(), RouterIsisSummaryAddress6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddress6ArrayInput)(nil)).Elem(), RouterIsisSummaryAddress6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddressInput)(nil)).Elem(), RouterIsisSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterIsisSummaryAddressArrayInput)(nil)).Elem(), RouterIsisSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterKeyChainKeyInput)(nil)).Elem(), RouterKeyChainKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterKeyChainKeyArrayInput)(nil)).Elem(), RouterKeyChainKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6InterfaceInput)(nil)).Elem(), RouterMulticast6InterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6InterfaceArrayInput)(nil)).Elem(), RouterMulticast6InterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalInput)(nil)).Elem(), RouterMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalPtrInput)(nil)).Elem(), RouterMulticast6PimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddressInput)(nil)).Elem(), RouterMulticast6PimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticast6PimSmGlobalRpAddressArrayInput)(nil)).Elem(), RouterMulticast6PimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastFlowFlowInput)(nil)).Elem(), RouterMulticastFlowFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastFlowFlowArrayInput)(nil)).Elem(), RouterMulticastFlowFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceInput)(nil)).Elem(), RouterMulticastInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceArrayInput)(nil)).Elem(), RouterMulticastInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceIgmpInput)(nil)).Elem(), RouterMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceIgmpPtrInput)(nil)).Elem(), RouterMulticastInterfaceIgmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceJoinGroupInput)(nil)).Elem(), RouterMulticastInterfaceJoinGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastInterfaceJoinGroupArrayInput)(nil)).Elem(), RouterMulticastInterfaceJoinGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalInput)(nil)).Elem(), RouterMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalPtrInput)(nil)).Elem(), RouterMulticastPimSmGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddressInput)(nil)).Elem(), RouterMulticastPimSmGlobalRpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterMulticastPimSmGlobalRpAddressArrayInput)(nil)).Elem(), RouterMulticastPimSmGlobalRpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaInput)(nil)).Elem(), RouterOspf6AreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaArrayInput)(nil)).Elem(), RouterOspf6AreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaIpsecKeyInput)(nil)).Elem(), RouterOspf6AreaIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6AreaIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaRangeInput)(nil)).Elem(), RouterOspf6AreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaRangeArrayInput)(nil)).Elem(), RouterOspf6AreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkArrayInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKeyInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6AreaVirtualLinkIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6AreaVirtualLinkIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceTypeInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceTypeArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighborInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), RouterOspf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6PassiveInterfaceInput)(nil)).Elem(), RouterOspf6PassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6PassiveInterfaceArrayInput)(nil)).Elem(), RouterOspf6PassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6RedistributeInput)(nil)).Elem(), RouterOspf6RedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6RedistributeArrayInput)(nil)).Elem(), RouterOspf6RedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6SummaryAddressInput)(nil)).Elem(), RouterOspf6SummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspf6SummaryAddressArrayInput)(nil)).Elem(), RouterOspf6SummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaInput)(nil)).Elem(), RouterOspfAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaArrayInput)(nil)).Elem(), RouterOspfAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaFilterListInput)(nil)).Elem(), RouterOspfAreaFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaFilterListArrayInput)(nil)).Elem(), RouterOspfAreaFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaRangeInput)(nil)).Elem(), RouterOspfAreaRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaRangeArrayInput)(nil)).Elem(), RouterOspfAreaRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkInput)(nil)).Elem(), RouterOspfAreaVirtualLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkArrayInput)(nil)).Elem(), RouterOspfAreaVirtualLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5KeyInput)(nil)).Elem(), RouterOspfAreaVirtualLinkMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfAreaVirtualLinkMd5KeyArrayInput)(nil)).Elem(), RouterOspfAreaVirtualLinkMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfDistributeListInput)(nil)).Elem(), RouterOspfDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfDistributeListArrayInput)(nil)).Elem(), RouterOspfDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNeighborTypeInput)(nil)).Elem(), RouterOspfNeighborTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNeighborTypeArrayInput)(nil)).Elem(), RouterOspfNeighborTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNetworkTypeInput)(nil)).Elem(), RouterOspfNetworkTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfNetworkTypeArrayInput)(nil)).Elem(), RouterOspfNetworkTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceTypeInput)(nil)).Elem(), RouterOspfOspfInterfaceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceTypeArrayInput)(nil)).Elem(), RouterOspfOspfInterfaceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceMd5KeyInput)(nil)).Elem(), RouterOspfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), RouterOspfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfPassiveInterfaceInput)(nil)).Elem(), RouterOspfPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfPassiveInterfaceArrayInput)(nil)).Elem(), RouterOspfPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfRedistributeInput)(nil)).Elem(), RouterOspfRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfRedistributeArrayInput)(nil)).Elem(), RouterOspfRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfSummaryAddressInput)(nil)).Elem(), RouterOspfSummaryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterOspfSummaryAddressArrayInput)(nil)).Elem(), RouterOspfSummaryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6DstaddrInput)(nil)).Elem(), RouterPolicy6DstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6DstaddrArrayInput)(nil)).Elem(), RouterPolicy6DstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceCustomInput)(nil)).Elem(), RouterPolicy6InternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceCustomArrayInput)(nil)).Elem(), RouterPolicy6InternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceIdInput)(nil)).Elem(), RouterPolicy6InternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6InternetServiceIdArrayInput)(nil)).Elem(), RouterPolicy6InternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6SrcaddrInput)(nil)).Elem(), RouterPolicy6SrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicy6SrcaddrArrayInput)(nil)).Elem(), RouterPolicy6SrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstInput)(nil)).Elem(), RouterPolicyDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstArrayInput)(nil)).Elem(), RouterPolicyDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstaddrInput)(nil)).Elem(), RouterPolicyDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyDstaddrArrayInput)(nil)).Elem(), RouterPolicyDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInputDeviceInput)(nil)).Elem(), RouterPolicyInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInputDeviceArrayInput)(nil)).Elem(), RouterPolicyInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceCustomInput)(nil)).Elem(), RouterPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceCustomArrayInput)(nil)).Elem(), RouterPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceIdInput)(nil)).Elem(), RouterPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicyInternetServiceIdArrayInput)(nil)).Elem(), RouterPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcInput)(nil)).Elem(), RouterPolicySrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcArrayInput)(nil)).Elem(), RouterPolicySrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcaddrInput)(nil)).Elem(), RouterPolicySrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPolicySrcaddrArrayInput)(nil)).Elem(), RouterPolicySrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixList6RuleInput)(nil)).Elem(), RouterPrefixList6RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixList6RuleArrayInput)(nil)).Elem(), RouterPrefixList6RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixListRuleInput)(nil)).Elem(), RouterPrefixListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterPrefixListRuleArrayInput)(nil)).Elem(), RouterPrefixListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistanceInput)(nil)).Elem(), RouterRipDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistanceArrayInput)(nil)).Elem(), RouterRipDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistributeListInput)(nil)).Elem(), RouterRipDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipDistributeListArrayInput)(nil)).Elem(), RouterRipDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipInterfaceInput)(nil)).Elem(), RouterRipInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipInterfaceArrayInput)(nil)).Elem(), RouterRipInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNeighborInput)(nil)).Elem(), RouterRipNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNeighborArrayInput)(nil)).Elem(), RouterRipNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNetworkInput)(nil)).Elem(), RouterRipNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipNetworkArrayInput)(nil)).Elem(), RouterRipNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipOffsetListInput)(nil)).Elem(), RouterRipOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipOffsetListArrayInput)(nil)).Elem(), RouterRipOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipPassiveInterfaceInput)(nil)).Elem(), RouterRipPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipPassiveInterfaceArrayInput)(nil)).Elem(), RouterRipPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipRedistributeInput)(nil)).Elem(), RouterRipRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipRedistributeArrayInput)(nil)).Elem(), RouterRipRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngAggregateAddressInput)(nil)).Elem(), RouterRipngAggregateAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngAggregateAddressArrayInput)(nil)).Elem(), RouterRipngAggregateAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistanceInput)(nil)).Elem(), RouterRipngDistanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistanceArrayInput)(nil)).Elem(), RouterRipngDistanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistributeListInput)(nil)).Elem(), RouterRipngDistributeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngDistributeListArrayInput)(nil)).Elem(), RouterRipngDistributeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInterfaceInput)(nil)).Elem(), RouterRipngInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngInterfaceArrayInput)(nil)).Elem(), RouterRipngInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNeighborInput)(nil)).Elem(), RouterRipngNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNeighborArrayInput)(nil)).Elem(), RouterRipngNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNetworkInput)(nil)).Elem(), RouterRipngNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngNetworkArrayInput)(nil)).Elem(), RouterRipngNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngOffsetListInput)(nil)).Elem(), RouterRipngOffsetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngOffsetListArrayInput)(nil)).Elem(), RouterRipngOffsetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngPassiveInterfaceInput)(nil)).Elem(), RouterRipngPassiveInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngPassiveInterfaceArrayInput)(nil)).Elem(), RouterRipngPassiveInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngRedistributeInput)(nil)).Elem(), RouterRipngRedistributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRipngRedistributeArrayInput)(nil)).Elem(), RouterRipngRedistributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleInput)(nil)).Elem(), RouterRouteMapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleArrayInput)(nil)).Elem(), RouterRouteMapRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetAspathInput)(nil)).Elem(), RouterRouteMapRuleSetAspathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetAspathArrayInput)(nil)).Elem(), RouterRouteMapRuleSetAspathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetCommunityInput)(nil)).Elem(), RouterRouteMapRuleSetCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetCommunityArrayInput)(nil)).Elem(), RouterRouteMapRuleSetCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetExtcommunityRtInput)(nil)).Elem(), RouterRouteMapRuleSetExtcommunityRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetExtcommunityRtArrayInput)(nil)).Elem(), RouterRouteMapRuleSetExtcommunityRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetExtcommunitySooInput)(nil)).Elem(), RouterRouteMapRuleSetExtcommunitySooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterRouteMapRuleSetExtcommunitySooArrayInput)(nil)).Elem(), RouterRouteMapRuleSetExtcommunitySooArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStatic6SdwanZoneInput)(nil)).Elem(), RouterStatic6SdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStatic6SdwanZoneArrayInput)(nil)).Elem(), RouterStatic6SdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticSdwanZoneInput)(nil)).Elem(), RouterStaticSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticSdwanZoneArrayInput)(nil)).Elem(), RouterStaticSdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6Input)(nil)).Elem(), RouterbgpNeighborConditionalAdvertise6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertise6ArrayInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertise6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertiseInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertiseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterbgpNeighborConditionalAdvertiseArrayInput)(nil)).Elem(), RouterbgpNeighborConditionalAdvertiseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6InterfaceIpsecKeyInput)(nil)).Elem(), Routerospf6Ospf6InterfaceIpsecKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6InterfaceIpsecKeyArrayInput)(nil)).Elem(), Routerospf6Ospf6InterfaceIpsecKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6InterfaceNeighborInput)(nil)).Elem(), Routerospf6Ospf6InterfaceNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Routerospf6Ospf6InterfaceNeighborArrayInput)(nil)).Elem(), Routerospf6Ospf6InterfaceNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfInterfaceMd5KeyInput)(nil)).Elem(), RouterospfOspfInterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterospfOspfInterfaceMd5KeyArrayInput)(nil)).Elem(), RouterospfOspfInterfaceMd5KeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtMetadataInput)(nil)).Elem(), RuleOtdtMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtMetadataArrayInput)(nil)).Elem(), RuleOtdtMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtParameterInput)(nil)).Elem(), RuleOtdtParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtdtParameterArrayInput)(nil)).Elem(), RuleOtdtParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtvpMetadataInput)(nil)).Elem(), RuleOtvpMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleOtvpMetadataArrayInput)(nil)).Elem(), RuleOtvpMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SctpFilterProfilePpidFilterInput)(nil)).Elem(), SctpFilterProfilePpidFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SctpFilterProfilePpidFilterArrayInput)(nil)).Elem(), SctpFilterProfilePpidFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwlEntryInput)(nil)).Elem(), SpamfilterBwlEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwlEntryArrayInput)(nil)).Elem(), SpamfilterBwlEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwordEntryInput)(nil)).Elem(), SpamfilterBwordEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterBwordEntryArrayInput)(nil)).Elem(), SpamfilterBwordEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterDnsblEntryInput)(nil)).Elem(), SpamfilterDnsblEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterDnsblEntryArrayInput)(nil)).Elem(), SpamfilterDnsblEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustEntryInput)(nil)).Elem(), SpamfilterIptrustEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustEntryArrayInput)(nil)).Elem(), SpamfilterIptrustEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderEntryInput)(nil)).Elem(), SpamfilterMheaderEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderEntryArrayInput)(nil)).Elem(), SpamfilterMheaderEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileGmailInput)(nil)).Elem(), SpamfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileGmailPtrInput)(nil)).Elem(), SpamfilterProfileGmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileImapInput)(nil)).Elem(), SpamfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileImapPtrInput)(nil)).Elem(), SpamfilterProfileImapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMapiInput)(nil)).Elem(), SpamfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMapiPtrInput)(nil)).Elem(), SpamfilterProfileMapiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMsnHotmailInput)(nil)).Elem(), SpamfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileMsnHotmailPtrInput)(nil)).Elem(), SpamfilterProfileMsnHotmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfilePop3Input)(nil)).Elem(), SpamfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfilePop3PtrInput)(nil)).Elem(), SpamfilterProfilePop3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileSmtpInput)(nil)).Elem(), SpamfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileSmtpPtrInput)(nil)).Elem(), SpamfilterProfileSmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileYahooMailInput)(nil)).Elem(), SpamfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterProfileYahooMailPtrInput)(nil)).Elem(), SpamfilterProfileYahooMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterInput)(nil)).Elem(), SshFilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterPtrInput)(nil)).Elem(), SshFilterProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterEntryInput)(nil)).Elem(), SshFilterProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterEntryArrayInput)(nil)).Elem(), SshFilterProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterEntryFileTypeInput)(nil)).Elem(), SshFilterProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), SshFilterProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileShellCommandInput)(nil)).Elem(), SshFilterProfileShellCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshFilterProfileShellCommandArrayInput)(nil)).Elem(), SshFilterProfileShellCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclGroupIngressInput)(nil)).Elem(), SwitchControllerAclGroupIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclGroupIngressArrayInput)(nil)).Elem(), SwitchControllerAclGroupIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclIngressActionInput)(nil)).Elem(), SwitchControllerAclIngressActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclIngressActionPtrInput)(nil)).Elem(), SwitchControllerAclIngressActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclIngressClassifierInput)(nil)).Elem(), SwitchControllerAclIngressClassifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAclIngressClassifierPtrInput)(nil)).Elem(), SwitchControllerAclIngressClassifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigCustomSwitchBindingInput)(nil)).Elem(), SwitchControllerAutoConfigCustomSwitchBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerAutoConfigCustomSwitchBindingArrayInput)(nil)).Elem(), SwitchControllerAutoConfigCustomSwitchBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyArrayInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyInterfaceTagInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyPolicyInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayInput)(nil)).Elem(), SwitchControllerDynamicPortPolicyPolicyInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingAggregateInput)(nil)).Elem(), SwitchControllerFlowTrackingAggregateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingAggregateArrayInput)(nil)).Elem(), SwitchControllerFlowTrackingAggregateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingCollectorInput)(nil)).Elem(), SwitchControllerFlowTrackingCollectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFlowTrackingCollectorArrayInput)(nil)).Elem(), SwitchControllerFlowTrackingCollectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsInput)(nil)).Elem(), SwitchControllerFortilinkSettingsNacPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsPtrInput)(nil)).Elem(), SwitchControllerFortilinkSettingsNacPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanInput)(nil)).Elem(), SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayInput)(nil)).Elem(), SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalCustomCommandInput)(nil)).Elem(), SwitchControllerGlobalCustomCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalCustomCommandArrayInput)(nil)).Elem(), SwitchControllerGlobalCustomCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalDisableDiscoveryInput)(nil)).Elem(), SwitchControllerGlobalDisableDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalDisableDiscoveryArrayInput)(nil)).Elem(), SwitchControllerGlobalDisableDiscoveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileCustomTlvInput)(nil)).Elem(), SwitchControllerLldpProfileCustomTlvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileCustomTlvArrayInput)(nil)).Elem(), SwitchControllerLldpProfileCustomTlvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileMedLocationServiceInput)(nil)).Elem(), SwitchControllerLldpProfileMedLocationServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileMedLocationServiceArrayInput)(nil)).Elem(), SwitchControllerLldpProfileMedLocationServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileMedNetworkPolicyInput)(nil)).Elem(), SwitchControllerLldpProfileMedNetworkPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLldpProfileMedNetworkPolicyArrayInput)(nil)).Elem(), SwitchControllerLldpProfileMedNetworkPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationAddressCivicInput)(nil)).Elem(), SwitchControllerLocationAddressCivicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationAddressCivicPtrInput)(nil)).Elem(), SwitchControllerLocationAddressCivicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationCoordinatesInput)(nil)).Elem(), SwitchControllerLocationCoordinatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationCoordinatesPtrInput)(nil)).Elem(), SwitchControllerLocationCoordinatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationElinNumberInput)(nil)).Elem(), SwitchControllerLocationElinNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerLocationElinNumberPtrInput)(nil)).Elem(), SwitchControllerLocationElinNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchCustomCommandInput)(nil)).Elem(), SwitchControllerManagedSwitchCustomCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchCustomCommandArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchCustomCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchDhcpSnoopingStaticClientInput)(nil)).Elem(), SwitchControllerManagedSwitchDhcpSnoopingStaticClientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchDhcpSnoopingStaticClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingInput)(nil)).Elem(), SwitchControllerManagedSwitchIgmpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchIgmpSnoopingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingVlanInput)(nil)).Elem(), SwitchControllerManagedSwitchIgmpSnoopingVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIgmpSnoopingVlanArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchIgmpSnoopingVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardInput)(nil)).Elem(), SwitchControllerManagedSwitchIpSourceGuardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchIpSourceGuardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardBindingEntryInput)(nil)).Elem(), SwitchControllerManagedSwitchIpSourceGuardBindingEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchIpSourceGuardBindingEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcEgressInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorSrcEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcEgressArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorSrcEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcIngressInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorSrcIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchMirrorSrcIngressArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchMirrorSrcIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchN8021xSettingsInput)(nil)).Elem(), SwitchControllerManagedSwitchN8021xSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchN8021xSettingsPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchN8021xSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortInput)(nil)).Elem(), SwitchControllerManagedSwitchPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortAclGroupInput)(nil)).Elem(), SwitchControllerManagedSwitchPortAclGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortAclGroupArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortAclGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortAllowedVlanInput)(nil)).Elem(), SwitchControllerManagedSwitchPortAllowedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortAllowedVlanArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortAllowedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideInput)(nil)).Elem(), SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortExportTagInput)(nil)).Elem(), SwitchControllerManagedSwitchPortExportTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortExportTagArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortExportTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortFortiswitchAclInput)(nil)).Elem(), SwitchControllerManagedSwitchPortFortiswitchAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortFortiswitchAclArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortFortiswitchAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortInterfaceTagInput)(nil)).Elem(), SwitchControllerManagedSwitchPortInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortInterfaceTagArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortMemberInput)(nil)).Elem(), SwitchControllerManagedSwitchPortMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortMemberArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortUntaggedVlanInput)(nil)).Elem(), SwitchControllerManagedSwitchPortUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchPortUntaggedVlanArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchPortUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchRemoteLogInput)(nil)).Elem(), SwitchControllerManagedSwitchRemoteLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchRemoteLogArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchRemoteLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchRouteOffloadRouterInput)(nil)).Elem(), SwitchControllerManagedSwitchRouteOffloadRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchRouteOffloadRouterArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchRouteOffloadRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpCommunityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityHostInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpCommunityHostArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpSysinfoInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpSysinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpSysinfoPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpSysinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpTrapThresholdInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpTrapThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpTrapThresholdPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpTrapThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpUserInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSnmpUserArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchSnmpUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStaticMacInput)(nil)).Elem(), SwitchControllerManagedSwitchStaticMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStaticMacArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchStaticMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStormControlInput)(nil)).Elem(), SwitchControllerManagedSwitchStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStormControlPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchStormControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStpInstanceInput)(nil)).Elem(), SwitchControllerManagedSwitchStpInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStpInstanceArrayInput)(nil)).Elem(), SwitchControllerManagedSwitchStpInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStpSettingsInput)(nil)).Elem(), SwitchControllerManagedSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchStpSettingsPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSwitchLogInput)(nil)).Elem(), SwitchControllerManagedSwitchSwitchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSwitchLogPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchSwitchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSwitchStpSettingsInput)(nil)).Elem(), SwitchControllerManagedSwitchSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerManagedSwitchSwitchStpSettingsPtrInput)(nil)).Elem(), SwitchControllerManagedSwitchSwitchStpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosIpDscpMapMapTypeInput)(nil)).Elem(), SwitchControllerQosIpDscpMapMapTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosIpDscpMapMapTypeArrayInput)(nil)).Elem(), SwitchControllerQosIpDscpMapMapTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosQueuePolicyCosQueueInput)(nil)).Elem(), SwitchControllerQosQueuePolicyCosQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQosQueuePolicyCosQueueArrayInput)(nil)).Elem(), SwitchControllerQosQueuePolicyCosQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineTargetInput)(nil)).Elem(), SwitchControllerQuarantineTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineTargetArrayInput)(nil)).Elem(), SwitchControllerQuarantineTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineTargetTagInput)(nil)).Elem(), SwitchControllerQuarantineTargetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineTargetTagArrayInput)(nil)).Elem(), SwitchControllerQuarantineTargetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSecurityPolicy8021XUserGroupInput)(nil)).Elem(), SwitchControllerSecurityPolicy8021XUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSecurityPolicy8021XUserGroupArrayInput)(nil)).Elem(), SwitchControllerSecurityPolicy8021XUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpCommunityHostInput)(nil)).Elem(), SwitchControllerSnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpCommunityHostArrayInput)(nil)).Elem(), SwitchControllerSnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerStpInstanceVlanRangeInput)(nil)).Elem(), SwitchControllerStpInstanceVlanRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerStpInstanceVlanRangeArrayInput)(nil)).Elem(), SwitchControllerStpInstanceVlanRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSwitchGroupMemberInput)(nil)).Elem(), SwitchControllerSwitchGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSwitchGroupMemberArrayInput)(nil)).Elem(), SwitchControllerSwitchGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetIpInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetIpArrayInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetMacInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetMacArrayInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetMacArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortArrayInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortInPortInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortInPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortInPortArrayInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortInPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortOutPortInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortOutPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerTrafficSnifferTargetPortOutPortArrayInput)(nil)).Elem(), SwitchControllerTrafficSnifferTargetPortOutPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPolicyAllowedVlanInput)(nil)).Elem(), SwitchControllerVlanPolicyAllowedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPolicyAllowedVlanArrayInput)(nil)).Elem(), SwitchControllerVlanPolicyAllowedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPolicyUntaggedVlanInput)(nil)).Elem(), SwitchControllerVlanPolicyUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPolicyUntaggedVlanArrayInput)(nil)).Elem(), SwitchControllerVlanPolicyUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPortalMessageOverridesInput)(nil)).Elem(), SwitchControllerVlanPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanPortalMessageOverridesPtrInput)(nil)).Elem(), SwitchControllerVlanPortalMessageOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanSelectedUsergroupInput)(nil)).Elem(), SwitchControllerVlanSelectedUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVlanSelectedUsergroupArrayInput)(nil)).Elem(), SwitchControllerVlanSelectedUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAPIUserSettingTrusthostInput)(nil)).Elem(), SystemAPIUserSettingTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAPIUserSettingTrusthostArrayInput)(nil)).Elem(), SystemAPIUserSettingTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileFwgrpPermissionInput)(nil)).Elem(), SystemAccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileFwgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileFwgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileLoggrpPermissionInput)(nil)).Elem(), SystemAccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileLoggrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileLoggrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileNetgrpPermissionInput)(nil)).Elem(), SystemAccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileNetgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileNetgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileSysgrpPermissionInput)(nil)).Elem(), SystemAccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileSysgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileSysgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileUtmgrpPermissionInput)(nil)).Elem(), SystemAccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccprofileUtmgrpPermissionPtrInput)(nil)).Elem(), SystemAccprofileUtmgrpPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeAccountInput)(nil)).Elem(), SystemAcmeAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeAccountArrayInput)(nil)).Elem(), SystemAcmeAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeInterfaceInput)(nil)).Elem(), SystemAcmeInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAcmeInterfaceArrayInput)(nil)).Elem(), SystemAcmeInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuestUsergroupInput)(nil)).Elem(), SystemAdminGuestUsergroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuestUsergroupArrayInput)(nil)).Elem(), SystemAdminGuestUsergroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardInput)(nil)).Elem(), SystemAdminGuiDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardArrayInput)(nil)).Elem(), SystemAdminGuiDashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetArrayInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilterInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiDashboardWidgetFilterArrayInput)(nil)).Elem(), SystemAdminGuiDashboardWidgetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiGlobalMenuFavoriteInput)(nil)).Elem(), SystemAdminGuiGlobalMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiGlobalMenuFavoriteArrayInput)(nil)).Elem(), SystemAdminGuiGlobalMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledgeInput)(nil)).Elem(), SystemAdminGuiNewFeatureAcknowledgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiNewFeatureAcknowledgeArrayInput)(nil)).Elem(), SystemAdminGuiNewFeatureAcknowledgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiVdomMenuFavoriteInput)(nil)).Elem(), SystemAdminGuiVdomMenuFavoriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminGuiVdomMenuFavoriteArrayInput)(nil)).Elem(), SystemAdminGuiVdomMenuFavoriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminLoginTimeInput)(nil)).Elem(), SystemAdminLoginTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminLoginTimeArrayInput)(nil)).Elem(), SystemAdminLoginTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminVdomInput)(nil)).Elem(), SystemAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAdminVdomArrayInput)(nil)).Elem(), SystemAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupInput)(nil)).Elem(), SystemAlarmGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupArrayInput)(nil)).Elem(), SystemAlarmGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupFwPolicyViolationInput)(nil)).Elem(), SystemAlarmGroupFwPolicyViolationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAlarmGroupFwPolicyViolationArrayInput)(nil)).Elem(), SystemAlarmGroupFwPolicyViolationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiUserTrusthostInput)(nil)).Elem(), SystemApiUserTrusthostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiUserTrusthostArrayInput)(nil)).Elem(), SystemApiUserTrusthostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiUserVdomInput)(nil)).Elem(), SystemApiUserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemApiUserVdomArrayInput)(nil)).Elem(), SystemApiUserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionEmailToInput)(nil)).Elem(), SystemAutomationActionEmailToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionEmailToArrayInput)(nil)).Elem(), SystemAutomationActionEmailToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionHeaderInput)(nil)).Elem(), SystemAutomationActionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionHeaderArrayInput)(nil)).Elem(), SystemAutomationActionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionHttpHeaderInput)(nil)).Elem(), SystemAutomationActionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionHttpHeaderArrayInput)(nil)).Elem(), SystemAutomationActionHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionSdnConnectorInput)(nil)).Elem(), SystemAutomationActionSdnConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationActionSdnConnectorArrayInput)(nil)).Elem(), SystemAutomationActionSdnConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationDestinationDestinationInput)(nil)).Elem(), SystemAutomationDestinationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationDestinationDestinationArrayInput)(nil)).Elem(), SystemAutomationDestinationDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchActionInput)(nil)).Elem(), SystemAutomationStitchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchActionArrayInput)(nil)).Elem(), SystemAutomationStitchActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchDestinationInput)(nil)).Elem(), SystemAutomationStitchDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchDestinationArrayInput)(nil)).Elem(), SystemAutomationStitchDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerFieldInput)(nil)).Elem(), SystemAutomationTriggerFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerFieldArrayInput)(nil)).Elem(), SystemAutomationTriggerFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerLogidBlockInput)(nil)).Elem(), SystemAutomationTriggerLogidBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerLogidBlockArrayInput)(nil)).Elem(), SystemAutomationTriggerLogidBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerVdomInput)(nil)).Elem(), SystemAutomationTriggerVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationTriggerVdomArrayInput)(nil)).Elem(), SystemAutomationTriggerVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCentralManagementServerListInput)(nil)).Elem(), SystemCentralManagementServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCentralManagementServerListArrayInput)(nil)).Elem(), SystemCentralManagementServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncDownIntfsBeforeSessSyncInput)(nil)).Elem(), SystemClusterSyncDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), SystemClusterSyncDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSessionSyncFilterInput)(nil)).Elem(), SystemClusterSyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSessionSyncFilterPtrInput)(nil)).Elem(), SystemClusterSyncSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSessionSyncFilterCustomServiceInput)(nil)).Elem(), SystemClusterSyncSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), SystemClusterSyncSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSyncvdInput)(nil)).Elem(), SystemClusterSyncSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemClusterSyncSyncvdArrayInput)(nil)).Elem(), SystemClusterSyncSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorInput)(nil)).Elem(), SystemCsfFabricConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorArrayInput)(nil)).Elem(), SystemCsfFabricConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorVdomInput)(nil)).Elem(), SystemCsfFabricConnectorVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricConnectorVdomArrayInput)(nil)).Elem(), SystemCsfFabricConnectorVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricDeviceInput)(nil)).Elem(), SystemCsfFabricDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfFabricDeviceArrayInput)(nil)).Elem(), SystemCsfFabricDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfTrustedListInput)(nil)).Elem(), SystemCsfTrustedListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCsfTrustedListArrayInput)(nil)).Elem(), SystemCsfTrustedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsDdnsServerAddrInput)(nil)).Elem(), SystemDdnsDdnsServerAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsDdnsServerAddrArrayInput)(nil)).Elem(), SystemDdnsDdnsServerAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsMonitorInterfaceInput)(nil)).Elem(), SystemDdnsMonitorInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDdnsMonitorInterfaceArrayInput)(nil)).Elem(), SystemDdnsMonitorInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcp6ServerIpRangeInput)(nil)).Elem(), SystemDhcp6ServerIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcp6ServerIpRangeArrayInput)(nil)).Elem(), SystemDhcp6ServerIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcp6ServerPrefixRangeInput)(nil)).Elem(), SystemDhcp6ServerPrefixRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcp6ServerPrefixRangeArrayInput)(nil)).Elem(), SystemDhcp6ServerPrefixRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeInput)(nil)).Elem(), SystemDhcpServerExcludeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeArrayInput)(nil)).Elem(), SystemDhcpServerExcludeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeUciStringInput)(nil)).Elem(), SystemDhcpServerExcludeRangeUciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeUciStringArrayInput)(nil)).Elem(), SystemDhcpServerExcludeRangeUciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeVciStringInput)(nil)).Elem(), SystemDhcpServerExcludeRangeVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerExcludeRangeVciStringArrayInput)(nil)).Elem(), SystemDhcpServerExcludeRangeVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeInput)(nil)).Elem(), SystemDhcpServerIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeArrayInput)(nil)).Elem(), SystemDhcpServerIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeUciStringInput)(nil)).Elem(), SystemDhcpServerIpRangeUciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeUciStringArrayInput)(nil)).Elem(), SystemDhcpServerIpRangeUciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeVciStringInput)(nil)).Elem(), SystemDhcpServerIpRangeVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerIpRangeVciStringArrayInput)(nil)).Elem(), SystemDhcpServerIpRangeVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionInput)(nil)).Elem(), SystemDhcpServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionArrayInput)(nil)).Elem(), SystemDhcpServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionUciStringInput)(nil)).Elem(), SystemDhcpServerOptionUciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionUciStringArrayInput)(nil)).Elem(), SystemDhcpServerOptionUciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionVciStringInput)(nil)).Elem(), SystemDhcpServerOptionVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerOptionVciStringArrayInput)(nil)).Elem(), SystemDhcpServerOptionVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerReservedAddressInput)(nil)).Elem(), SystemDhcpServerReservedAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerReservedAddressArrayInput)(nil)).Elem(), SystemDhcpServerReservedAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerTftpServerInput)(nil)).Elem(), SystemDhcpServerTftpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerTftpServerArrayInput)(nil)).Elem(), SystemDhcpServerTftpServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerVciStringInput)(nil)).Elem(), SystemDhcpServerVciStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDhcpServerVciStringArrayInput)(nil)).Elem(), SystemDhcpServerVciStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDatabaseDnsEntryInput)(nil)).Elem(), SystemDnsDatabaseDnsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDatabaseDnsEntryArrayInput)(nil)).Elem(), SystemDnsDatabaseDnsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDomainInput)(nil)).Elem(), SystemDnsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsDomainArrayInput)(nil)).Elem(), SystemDnsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsServerHostnameInput)(nil)).Elem(), SystemDnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsServerHostnameArrayInput)(nil)).Elem(), SystemDnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnExportRtInput)(nil)).Elem(), SystemEvpnExportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnExportRtArrayInput)(nil)).Elem(), SystemEvpnExportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnImportRtInput)(nil)).Elem(), SystemEvpnImportRtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnImportRtArrayInput)(nil)).Elem(), SystemEvpnImportRtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFabricVpnAdvertisedSubnetInput)(nil)).Elem(), SystemFabricVpnAdvertisedSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFabricVpnAdvertisedSubnetArrayInput)(nil)).Elem(), SystemFabricVpnAdvertisedSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFabricVpnOverlayInput)(nil)).Elem(), SystemFabricVpnOverlayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFabricVpnOverlayArrayInput)(nil)).Elem(), SystemFabricVpnOverlayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFederatedUpgradeNodeListInput)(nil)).Elem(), SystemFederatedUpgradeNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFederatedUpgradeNodeListArrayInput)(nil)).Elem(), SystemFederatedUpgradeNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideIp6RangeInput)(nil)).Elem(), SystemGeoipOverrideIp6RangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideIp6RangeArrayInput)(nil)).Elem(), SystemGeoipOverrideIp6RangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideIpRangeInput)(nil)).Elem(), SystemGeoipOverrideIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGeoipOverrideIpRangeArrayInput)(nil)).Elem(), SystemGeoipOverrideIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGlobalInternetServiceDownloadListInput)(nil)).Elem(), SystemGlobalInternetServiceDownloadListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemGlobalInternetServiceDownloadListArrayInput)(nil)).Elem(), SystemGlobalInternetServiceDownloadListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaHaMgmtInterfaceInput)(nil)).Elem(), SystemHaHaMgmtInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaHaMgmtInterfaceArrayInput)(nil)).Elem(), SystemHaHaMgmtInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaSecondaryVclusterInput)(nil)).Elem(), SystemHaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaSecondaryVclusterPtrInput)(nil)).Elem(), SystemHaSecondaryVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaUnicastPeerInput)(nil)).Elem(), SystemHaUnicastPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaUnicastPeerArrayInput)(nil)).Elem(), SystemHaUnicastPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterInput)(nil)).Elem(), SystemHaVclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterArrayInput)(nil)).Elem(), SystemHaVclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterVdomInput)(nil)).Elem(), SystemHaVclusterVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemHaVclusterVdomArrayInput)(nil)).Elem(), SystemHaVclusterVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup14Input)(nil)).Elem(), SystemIkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup14PtrInput)(nil)).Elem(), SystemIkeDhGroup14Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup15Input)(nil)).Elem(), SystemIkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup15PtrInput)(nil)).Elem(), SystemIkeDhGroup15Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup16Input)(nil)).Elem(), SystemIkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup16PtrInput)(nil)).Elem(), SystemIkeDhGroup16Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup17Input)(nil)).Elem(), SystemIkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup17PtrInput)(nil)).Elem(), SystemIkeDhGroup17Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup18Input)(nil)).Elem(), SystemIkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup18PtrInput)(nil)).Elem(), SystemIkeDhGroup18Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup19Input)(nil)).Elem(), SystemIkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup19PtrInput)(nil)).Elem(), SystemIkeDhGroup19Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup1Input)(nil)).Elem(), SystemIkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup1PtrInput)(nil)).Elem(), SystemIkeDhGroup1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup20Input)(nil)).Elem(), SystemIkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup20PtrInput)(nil)).Elem(), SystemIkeDhGroup20Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup21Input)(nil)).Elem(), SystemIkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup21PtrInput)(nil)).Elem(), SystemIkeDhGroup21Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup27Input)(nil)).Elem(), SystemIkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup27PtrInput)(nil)).Elem(), SystemIkeDhGroup27Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup28Input)(nil)).Elem(), SystemIkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup28PtrInput)(nil)).Elem(), SystemIkeDhGroup28Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup29Input)(nil)).Elem(), SystemIkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup29PtrInput)(nil)).Elem(), SystemIkeDhGroup29Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup2Input)(nil)).Elem(), SystemIkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup2PtrInput)(nil)).Elem(), SystemIkeDhGroup2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup30Input)(nil)).Elem(), SystemIkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup30PtrInput)(nil)).Elem(), SystemIkeDhGroup30Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup31Input)(nil)).Elem(), SystemIkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup31PtrInput)(nil)).Elem(), SystemIkeDhGroup31Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup32Input)(nil)).Elem(), SystemIkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup32PtrInput)(nil)).Elem(), SystemIkeDhGroup32Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup5Input)(nil)).Elem(), SystemIkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIkeDhGroup5PtrInput)(nil)).Elem(), SystemIkeDhGroup5Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceClientOptionInput)(nil)).Elem(), SystemInterfaceClientOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceClientOptionArrayInput)(nil)).Elem(), SystemInterfaceClientOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerListInput)(nil)).Elem(), SystemInterfaceDhcpSnoopingServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceDhcpSnoopingServerListArrayInput)(nil)).Elem(), SystemInterfaceDhcpSnoopingServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceFailAlertInterfaceInput)(nil)).Elem(), SystemInterfaceFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceFailAlertInterfaceArrayInput)(nil)).Elem(), SystemInterfaceFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Input)(nil)).Elem(), SystemInterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6PtrInput)(nil)).Elem(), SystemInterfaceIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdListInput)(nil)).Elem(), SystemInterfaceIpv6Dhcp6IapdListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Dhcp6IapdListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Dhcp6IapdListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixListInput)(nil)).Elem(), SystemInterfaceIpv6Ip6DelegatedPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6DelegatedPrefixListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6DelegatedPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddrInput)(nil)).Elem(), SystemInterfaceIpv6Ip6ExtraAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6ExtraAddrArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6ExtraAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnsslInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListDnsslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Ip6PrefixListDnsslArrayInput)(nil)).Elem(), SystemInterfaceIpv6Ip6PrefixListDnsslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Vrrp6Input)(nil)).Elem(), SystemInterfaceIpv6Vrrp6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceIpv6Vrrp6ArrayInput)(nil)).Elem(), SystemInterfaceIpv6Vrrp6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceManagedDeviceInput)(nil)).Elem(), SystemInterfaceManagedDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceManagedDeviceArrayInput)(nil)).Elem(), SystemInterfaceManagedDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceMemberInput)(nil)).Elem(), SystemInterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceMemberArrayInput)(nil)).Elem(), SystemInterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecondaryipInput)(nil)).Elem(), SystemInterfaceSecondaryipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecondaryipArrayInput)(nil)).Elem(), SystemInterfaceSecondaryipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecurityGroupInput)(nil)).Elem(), SystemInterfaceSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceSecurityGroupArrayInput)(nil)).Elem(), SystemInterfaceSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingInput)(nil)).Elem(), SystemInterfaceTaggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingArrayInput)(nil)).Elem(), SystemInterfaceTaggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingTagInput)(nil)).Elem(), SystemInterfaceTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceTaggingTagArrayInput)(nil)).Elem(), SystemInterfaceTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpInput)(nil)).Elem(), SystemInterfaceVrrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpArrayInput)(nil)).Elem(), SystemInterfaceVrrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpProxyArpInput)(nil)).Elem(), SystemInterfaceVrrpProxyArpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemInterfaceVrrpProxyArpArrayInput)(nil)).Elem(), SystemInterfaceVrrpProxyArpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamPoolInput)(nil)).Elem(), SystemIpamPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamPoolArrayInput)(nil)).Elem(), SystemIpamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInput)(nil)).Elem(), SystemIpamRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleArrayInput)(nil)).Elem(), SystemIpamRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleDeviceInput)(nil)).Elem(), SystemIpamRuleDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleDeviceArrayInput)(nil)).Elem(), SystemIpamRuleDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInterfaceInput)(nil)).Elem(), SystemIpamRuleInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRuleInterfaceArrayInput)(nil)).Elem(), SystemIpamRuleInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRulePoolInput)(nil)).Elem(), SystemIpamRulePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpamRulePoolArrayInput)(nil)).Elem(), SystemIpamRulePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecAggregateMemberInput)(nil)).Elem(), SystemIpsecAggregateMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecAggregateMemberArrayInput)(nil)).Elem(), SystemIpsecAggregateMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorRouteInput)(nil)).Elem(), SystemLinkMonitorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorRouteArrayInput)(nil)).Elem(), SystemLinkMonitorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorServerInput)(nil)).Elem(), SystemLinkMonitorServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorServerArrayInput)(nil)).Elem(), SystemLinkMonitorServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorServerListInput)(nil)).Elem(), SystemLinkMonitorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLinkMonitorServerListArrayInput)(nil)).Elem(), SystemLinkMonitorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyGuestInput)(nil)).Elem(), SystemLldpNetworkPolicyGuestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyGuestPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyGuestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyGuestVoiceSignalingInput)(nil)).Elem(), SystemLldpNetworkPolicyGuestVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyGuestVoiceSignalingPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyGuestVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicySoftphoneInput)(nil)).Elem(), SystemLldpNetworkPolicySoftphoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicySoftphonePtrInput)(nil)).Elem(), SystemLldpNetworkPolicySoftphoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyStreamingVideoInput)(nil)).Elem(), SystemLldpNetworkPolicyStreamingVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyStreamingVideoPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyStreamingVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVideoConferencingInput)(nil)).Elem(), SystemLldpNetworkPolicyVideoConferencingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVideoConferencingPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyVideoConferencingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVideoSignalingInput)(nil)).Elem(), SystemLldpNetworkPolicyVideoSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVideoSignalingPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyVideoSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVoiceInput)(nil)).Elem(), SystemLldpNetworkPolicyVoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVoicePtrInput)(nil)).Elem(), SystemLldpNetworkPolicyVoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVoiceSignalingInput)(nil)).Elem(), SystemLldpNetworkPolicyVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemLldpNetworkPolicyVoiceSignalingPtrInput)(nil)).Elem(), SystemLldpNetworkPolicyVoiceSignalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobileTunnelNetworkInput)(nil)).Elem(), SystemMobileTunnelNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobileTunnelNetworkArrayInput)(nil)).Elem(), SystemMobileTunnelNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNat64SecondaryPrefixInput)(nil)).Elem(), SystemNat64SecondaryPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNat64SecondaryPrefixArrayInput)(nil)).Elem(), SystemNat64SecondaryPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdProxyMemberInput)(nil)).Elem(), SystemNdProxyMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNdProxyMemberArrayInput)(nil)).Elem(), SystemNdProxyMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuPriorityProtocolInput)(nil)).Elem(), SystemNpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNpuPriorityProtocolPtrInput)(nil)).Elem(), SystemNpuPriorityProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpInterfaceInput)(nil)).Elem(), SystemNtpInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpInterfaceArrayInput)(nil)).Elem(), SystemNtpInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpNtpserverInput)(nil)).Elem(), SystemNtpNtpserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpNtpserverArrayInput)(nil)).Elem(), SystemNtpNtpserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemObjectTaggingTagInput)(nil)).Elem(), SystemObjectTaggingTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemObjectTaggingTagArrayInput)(nil)).Elem(), SystemObjectTaggingTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolInput)(nil)).Elem(), SystemPcpServerPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolArrayInput)(nil)).Elem(), SystemPcpServerPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolClientSubnetInput)(nil)).Elem(), SystemPcpServerPoolClientSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolClientSubnetArrayInput)(nil)).Elem(), SystemPcpServerPoolClientSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolIntlIntfInput)(nil)).Elem(), SystemPcpServerPoolIntlIntfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolIntlIntfArrayInput)(nil)).Elem(), SystemPcpServerPoolIntlIntfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolThirdPartySubnetInput)(nil)).Elem(), SystemPcpServerPoolThirdPartySubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPcpServerPoolThirdPartySubnetArrayInput)(nil)).Elem(), SystemPcpServerPoolThirdPartySubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPtpServerInterfaceInput)(nil)).Elem(), SystemPtpServerInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPtpServerInterfaceArrayInput)(nil)).Elem(), SystemPtpServerInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAdminInput)(nil)).Elem(), SystemReplacemsgGroupAdminArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAdminArrayInput)(nil)).Elem(), SystemReplacemsgGroupAdminArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAlertmailInput)(nil)).Elem(), SystemReplacemsgGroupAlertmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAlertmailArrayInput)(nil)).Elem(), SystemReplacemsgGroupAlertmailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAuthInput)(nil)).Elem(), SystemReplacemsgGroupAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAuthArrayInput)(nil)).Elem(), SystemReplacemsgGroupAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAutomationInput)(nil)).Elem(), SystemReplacemsgGroupAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupAutomationArrayInput)(nil)).Elem(), SystemReplacemsgGroupAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupCustomMessageInput)(nil)).Elem(), SystemReplacemsgGroupCustomMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupCustomMessageArrayInput)(nil)).Elem(), SystemReplacemsgGroupCustomMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupDeviceDetectionPortalInput)(nil)).Elem(), SystemReplacemsgGroupDeviceDetectionPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupDeviceDetectionPortalArrayInput)(nil)).Elem(), SystemReplacemsgGroupDeviceDetectionPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupEcInput)(nil)).Elem(), SystemReplacemsgGroupEcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupEcArrayInput)(nil)).Elem(), SystemReplacemsgGroupEcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupFortiguardWfInput)(nil)).Elem(), SystemReplacemsgGroupFortiguardWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupFortiguardWfArrayInput)(nil)).Elem(), SystemReplacemsgGroupFortiguardWfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupFtpInput)(nil)).Elem(), SystemReplacemsgGroupFtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupFtpArrayInput)(nil)).Elem(), SystemReplacemsgGroupFtpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupHttpInput)(nil)).Elem(), SystemReplacemsgGroupHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupHttpArrayInput)(nil)).Elem(), SystemReplacemsgGroupHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupIcapInput)(nil)).Elem(), SystemReplacemsgGroupIcapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupIcapArrayInput)(nil)).Elem(), SystemReplacemsgGroupIcapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupMailInput)(nil)).Elem(), SystemReplacemsgGroupMailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupMailArrayInput)(nil)).Elem(), SystemReplacemsgGroupMailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupNacQuarInput)(nil)).Elem(), SystemReplacemsgGroupNacQuarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupNacQuarArrayInput)(nil)).Elem(), SystemReplacemsgGroupNacQuarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupNntpInput)(nil)).Elem(), SystemReplacemsgGroupNntpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupNntpArrayInput)(nil)).Elem(), SystemReplacemsgGroupNntpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupSpamInput)(nil)).Elem(), SystemReplacemsgGroupSpamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupSpamArrayInput)(nil)).Elem(), SystemReplacemsgGroupSpamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupSslvpnInput)(nil)).Elem(), SystemReplacemsgGroupSslvpnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupSslvpnArrayInput)(nil)).Elem(), SystemReplacemsgGroupSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupTrafficQuotaInput)(nil)).Elem(), SystemReplacemsgGroupTrafficQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupTrafficQuotaArrayInput)(nil)).Elem(), SystemReplacemsgGroupTrafficQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupUtmInput)(nil)).Elem(), SystemReplacemsgGroupUtmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupUtmArrayInput)(nil)).Elem(), SystemReplacemsgGroupUtmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupWebproxyInput)(nil)).Elem(), SystemReplacemsgGroupWebproxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgGroupWebproxyArrayInput)(nil)).Elem(), SystemReplacemsgGroupWebproxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderInput)(nil)).Elem(), SystemSamlServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderArrayInput)(nil)).Elem(), SystemSamlServiceProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderAssertionAttributeInput)(nil)).Elem(), SystemSamlServiceProviderAssertionAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSamlServiceProviderAssertionAttributeArrayInput)(nil)).Elem(), SystemSamlServiceProviderAssertionAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorCompartmentListInput)(nil)).Elem(), SystemSdnConnectorCompartmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorCompartmentListArrayInput)(nil)).Elem(), SystemSdnConnectorCompartmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalAccountListInput)(nil)).Elem(), SystemSdnConnectorExternalAccountListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalAccountListArrayInput)(nil)).Elem(), SystemSdnConnectorExternalAccountListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalAccountListRegionListInput)(nil)).Elem(), SystemSdnConnectorExternalAccountListRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalAccountListRegionListArrayInput)(nil)).Elem(), SystemSdnConnectorExternalAccountListRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalIpInput)(nil)).Elem(), SystemSdnConnectorExternalIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorExternalIpArrayInput)(nil)).Elem(), SystemSdnConnectorExternalIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorForwardingRuleInput)(nil)).Elem(), SystemSdnConnectorForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorForwardingRuleArrayInput)(nil)).Elem(), SystemSdnConnectorForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorGcpProjectListInput)(nil)).Elem(), SystemSdnConnectorGcpProjectListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorGcpProjectListArrayInput)(nil)).Elem(), SystemSdnConnectorGcpProjectListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorGcpProjectListGcpZoneListInput)(nil)).Elem(), SystemSdnConnectorGcpProjectListGcpZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorGcpProjectListGcpZoneListArrayInput)(nil)).Elem(), SystemSdnConnectorGcpProjectListGcpZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorNicInput)(nil)).Elem(), SystemSdnConnectorNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorNicArrayInput)(nil)).Elem(), SystemSdnConnectorNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorNicIpInput)(nil)).Elem(), SystemSdnConnectorNicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorNicIpArrayInput)(nil)).Elem(), SystemSdnConnectorNicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorOciRegionListInput)(nil)).Elem(), SystemSdnConnectorOciRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorOciRegionListArrayInput)(nil)).Elem(), SystemSdnConnectorOciRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteInput)(nil)).Elem(), SystemSdnConnectorRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteArrayInput)(nil)).Elem(), SystemSdnConnectorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteTableInput)(nil)).Elem(), SystemSdnConnectorRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteTableArrayInput)(nil)).Elem(), SystemSdnConnectorRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteTableRouteInput)(nil)).Elem(), SystemSdnConnectorRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorRouteTableRouteArrayInput)(nil)).Elem(), SystemSdnConnectorRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorServerListInput)(nil)).Elem(), SystemSdnConnectorServerListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdnConnectorServerListArrayInput)(nil)).Elem(), SystemSdnConnectorServerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationInput)(nil)).Elem(), SystemSdwanDuplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationArrayInput)(nil)).Elem(), SystemSdwanDuplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddr6Input)(nil)).Elem(), SystemSdwanDuplicationDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddr6ArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddrInput)(nil)).Elem(), SystemSdwanDuplicationDstaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstaddrArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstintfInput)(nil)).Elem(), SystemSdwanDuplicationDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationDstintfArrayInput)(nil)).Elem(), SystemSdwanDuplicationDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceInput)(nil)).Elem(), SystemSdwanDuplicationServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceArrayInput)(nil)).Elem(), SystemSdwanDuplicationServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceIdInput)(nil)).Elem(), SystemSdwanDuplicationServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationServiceIdArrayInput)(nil)).Elem(), SystemSdwanDuplicationServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6Input)(nil)).Elem(), SystemSdwanDuplicationSrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddr6ArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddrInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcaddrArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcaddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcintfInput)(nil)).Elem(), SystemSdwanDuplicationSrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanDuplicationSrcintfArrayInput)(nil)).Elem(), SystemSdwanDuplicationSrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanFailAlertInterfaceInput)(nil)).Elem(), SystemSdwanFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanFailAlertInterfaceArrayInput)(nil)).Elem(), SystemSdwanFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckInput)(nil)).Elem(), SystemSdwanHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckArrayInput)(nil)).Elem(), SystemSdwanHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckMemberInput)(nil)).Elem(), SystemSdwanHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckMemberArrayInput)(nil)).Elem(), SystemSdwanHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckSlaInput)(nil)).Elem(), SystemSdwanHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanHealthCheckSlaArrayInput)(nil)).Elem(), SystemSdwanHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanMemberInput)(nil)).Elem(), SystemSdwanMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanMemberArrayInput)(nil)).Elem(), SystemSdwanMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborInput)(nil)).Elem(), SystemSdwanNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborArrayInput)(nil)).Elem(), SystemSdwanNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborMemberBlockInput)(nil)).Elem(), SystemSdwanNeighborMemberBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanNeighborMemberBlockArrayInput)(nil)).Elem(), SystemSdwanNeighborMemberBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInput)(nil)).Elem(), SystemSdwanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceArrayInput)(nil)).Elem(), SystemSdwanServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDst6Input)(nil)).Elem(), SystemSdwanServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDst6ArrayInput)(nil)).Elem(), SystemSdwanServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDstInput)(nil)).Elem(), SystemSdwanServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceDstArrayInput)(nil)).Elem(), SystemSdwanServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceGroupInput)(nil)).Elem(), SystemSdwanServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceGroupArrayInput)(nil)).Elem(), SystemSdwanServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceHealthCheckInput)(nil)).Elem(), SystemSdwanServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceHealthCheckArrayInput)(nil)).Elem(), SystemSdwanServiceHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputDeviceInput)(nil)).Elem(), SystemSdwanServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputDeviceArrayInput)(nil)).Elem(), SystemSdwanServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputZoneInput)(nil)).Elem(), SystemSdwanServiceInputZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInputZoneArrayInput)(nil)).Elem(), SystemSdwanServiceInputZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategoryInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlCategoryArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceGroupInput)(nil)).Elem(), SystemSdwanServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceGroupArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceNameInput)(nil)).Elem(), SystemSdwanServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceInternetServiceNameArrayInput)(nil)).Elem(), SystemSdwanServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityMemberInput)(nil)).Elem(), SystemSdwanServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityMemberArrayInput)(nil)).Elem(), SystemSdwanServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityZoneInput)(nil)).Elem(), SystemSdwanServicePriorityZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServicePriorityZoneArrayInput)(nil)).Elem(), SystemSdwanServicePriorityZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSlaInput)(nil)).Elem(), SystemSdwanServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSlaArrayInput)(nil)).Elem(), SystemSdwanServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrc6Input)(nil)).Elem(), SystemSdwanServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrc6ArrayInput)(nil)).Elem(), SystemSdwanServiceSrc6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrcInput)(nil)).Elem(), SystemSdwanServiceSrcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceSrcArrayInput)(nil)).Elem(), SystemSdwanServiceSrcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceUserInput)(nil)).Elem(), SystemSdwanServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanServiceUserArrayInput)(nil)).Elem(), SystemSdwanServiceUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanZoneInput)(nil)).Elem(), SystemSdwanZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSdwanZoneArrayInput)(nil)).Elem(), SystemSdwanZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionTtlPortInput)(nil)).Elem(), SystemSessionTtlPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionTtlPortArrayInput)(nil)).Elem(), SystemSessionTtlPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumnInput)(nil)).Elem(), SystemSettingsGuiDefaultPolicyColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSettingsGuiDefaultPolicyColumnArrayInput)(nil)).Elem(), SystemSettingsGuiDefaultPolicyColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityHostInput)(nil)).Elem(), SystemSnmpCommunityHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityHostArrayInput)(nil)).Elem(), SystemSnmpCommunityHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityHosts6Input)(nil)).Elem(), SystemSnmpCommunityHosts6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityHosts6ArrayInput)(nil)).Elem(), SystemSnmpCommunityHosts6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityVdomInput)(nil)).Elem(), SystemSnmpCommunityVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityVdomArrayInput)(nil)).Elem(), SystemSnmpCommunityVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpUserVdomInput)(nil)).Elem(), SystemSnmpUserVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpUserVdomArrayInput)(nil)).Elem(), SystemSnmpUserVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedTestScheduleScheduleInput)(nil)).Elem(), SystemSpeedTestScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedTestScheduleScheduleArrayInput)(nil)).Elem(), SystemSpeedTestScheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedTestServerHostInput)(nil)).Elem(), SystemSpeedTestServerHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSpeedTestServerHostArrayInput)(nil)).Elem(), SystemSpeedTestServerHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoAdminVdomInput)(nil)).Elem(), SystemSsoAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoAdminVdomArrayInput)(nil)).Elem(), SystemSsoAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoForticloudAdminVdomInput)(nil)).Elem(), SystemSsoForticloudAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoForticloudAdminVdomArrayInput)(nil)).Elem(), SystemSsoForticloudAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoFortigateCloudAdminVdomInput)(nil)).Elem(), SystemSsoFortigateCloudAdminVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSsoFortigateCloudAdminVdomArrayInput)(nil)).Elem(), SystemSsoFortigateCloudAdminVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerArrayInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterPtrInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSessionSyncFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSyncvdInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSyncvdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemStandaloneClusterClusterPeerSyncvdArrayInput)(nil)).Elem(), SystemStandaloneClusterClusterPeerSyncvdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchInterfaceMemberInput)(nil)).Elem(), SystemSwitchInterfaceMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchInterfaceMemberArrayInput)(nil)).Elem(), SystemSwitchInterfaceMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchInterfaceSpanSourcePortInput)(nil)).Elem(), SystemSwitchInterfaceSpanSourcePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSwitchInterfaceSpanSourcePortArrayInput)(nil)).Elem(), SystemSwitchInterfaceSpanSourcePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomDnsServerHostnameInput)(nil)).Elem(), SystemVdomDnsServerHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomDnsServerHostnameArrayInput)(nil)).Elem(), SystemVdomDnsServerHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomExceptionVdomInput)(nil)).Elem(), SystemVdomExceptionVdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVdomExceptionVdomArrayInput)(nil)).Elem(), SystemVdomExceptionVdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualSwitchPortInput)(nil)).Elem(), SystemVirtualSwitchPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualSwitchPortArrayInput)(nil)).Elem(), SystemVirtualSwitchPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkFailAlertInterfaceInput)(nil)).Elem(), SystemVirtualWanLinkFailAlertInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkFailAlertInterfaceArrayInput)(nil)).Elem(), SystemVirtualWanLinkFailAlertInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckArrayInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckMemberInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckMemberArrayInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckSlaInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkHealthCheckSlaArrayInput)(nil)).Elem(), SystemVirtualWanLinkHealthCheckSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkMemberInput)(nil)).Elem(), SystemVirtualWanLinkMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkMemberArrayInput)(nil)).Elem(), SystemVirtualWanLinkMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkNeighborInput)(nil)).Elem(), SystemVirtualWanLinkNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkNeighborArrayInput)(nil)).Elem(), SystemVirtualWanLinkNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInput)(nil)).Elem(), SystemVirtualWanLinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceDst6Input)(nil)).Elem(), SystemVirtualWanLinkServiceDst6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceDst6ArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceDst6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceDstInput)(nil)).Elem(), SystemVirtualWanLinkServiceDstArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceDstArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceDstArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceGroupInput)(nil)).Elem(), SystemVirtualWanLinkServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceGroupArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInputDeviceInput)(nil)).Elem(), SystemVirtualWanLinkServiceInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInputDeviceArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceAppCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceAppCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCtrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCtrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlGroupInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCtrlGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCtrlGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomGroupInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceGroupInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceGroupArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceIdInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceIdArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceNameInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceInternetServiceNameArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServicePriorityMemberInput)(nil)).Elem(), SystemVirtualWanLinkServicePriorityMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServicePriorityMemberArrayInput)(nil)).Elem(), SystemVirtualWanLinkServicePriorityMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceSlaInput)(nil)).Elem(), SystemVirtualWanLinkServiceSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceSlaArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceSrc6Input)(nil)).Elem(), SystemVirtualWanLinkServiceSrc6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkServiceSrc6ArrayInput)(nil)).Elem(), SystemVirtualWanLinkServiceSrc6Array{})
	pulumi.RegisterOutputType(LogFortianalyzerSettingSerialOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerSettingSerialArrayOutput{})
	pulumi.RegisterOutputType(LogFortiguardFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogFortiguardFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogFortiguardOverrideFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogFortiguardOverrideFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogMemoryFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogMemoryFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogNullDeviceFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogNullDeviceFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSettingCustomLogFieldOutput{})
	pulumi.RegisterOutputType(LogSettingCustomLogFieldArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd2FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd2FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd2SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd2SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd3FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd3SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd4FilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd4FilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd4SettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogd4SettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogdFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogdFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogdOverrideFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogSyslogdOverrideFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogdOverrideSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogdOverrideSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogdSettingCustomFieldNameOutput{})
	pulumi.RegisterOutputType(LogSyslogdSettingCustomFieldNameArrayOutput{})
	pulumi.RegisterOutputType(LogThreatWeightApplicationOutput{})
	pulumi.RegisterOutputType(LogThreatWeightApplicationArrayOutput{})
	pulumi.RegisterOutputType(LogThreatWeightGeolocationOutput{})
	pulumi.RegisterOutputType(LogThreatWeightGeolocationArrayOutput{})
	pulumi.RegisterOutputType(LogThreatWeightIpsOutput{})
	pulumi.RegisterOutputType(LogThreatWeightIpsPtrOutput{})
	pulumi.RegisterOutputType(LogThreatWeightLevelOutput{})
	pulumi.RegisterOutputType(LogThreatWeightLevelPtrOutput{})
	pulumi.RegisterOutputType(LogThreatWeightMalwareOutput{})
	pulumi.RegisterOutputType(LogThreatWeightMalwarePtrOutput{})
	pulumi.RegisterOutputType(LogThreatWeightWebOutput{})
	pulumi.RegisterOutputType(LogThreatWeightWebArrayOutput{})
	pulumi.RegisterOutputType(LogWebtrendsFilterFreeStyleOutput{})
	pulumi.RegisterOutputType(LogWebtrendsFilterFreeStyleArrayOutput{})
	pulumi.RegisterOutputType(NsxtServiceChainServiceIndexOutput{})
	pulumi.RegisterOutputType(NsxtServiceChainServiceIndexArrayOutput{})
	pulumi.RegisterOutputType(ReportChartCategorySeriesOutput{})
	pulumi.RegisterOutputType(ReportChartCategorySeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartColumnOutput{})
	pulumi.RegisterOutputType(ReportChartColumnArrayOutput{})
	pulumi.RegisterOutputType(ReportChartColumnMappingOutput{})
	pulumi.RegisterOutputType(ReportChartColumnMappingArrayOutput{})
	pulumi.RegisterOutputType(ReportChartDrillDownChartOutput{})
	pulumi.RegisterOutputType(ReportChartDrillDownChartArrayOutput{})
	pulumi.RegisterOutputType(ReportChartValueSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartValueSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartXSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartXSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportChartYSeriesOutput{})
	pulumi.RegisterOutputType(ReportChartYSeriesPtrOutput{})
	pulumi.RegisterOutputType(ReportDatasetFieldOutput{})
	pulumi.RegisterOutputType(ReportDatasetFieldArrayOutput{})
	pulumi.RegisterOutputType(ReportDatasetParameterOutput{})
	pulumi.RegisterOutputType(ReportDatasetParameterArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemListOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemListArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemParameterOutput{})
	pulumi.RegisterOutputType(ReportLayoutBodyItemParameterArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageOutput{})
	pulumi.RegisterOutputType(ReportLayoutPagePtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterPtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterFooterItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageFooterFooterItemArrayOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderPtrOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderHeaderItemOutput{})
	pulumi.RegisterOutputType(ReportLayoutPageHeaderHeaderItemArrayOutput{})
	pulumi.RegisterOutputType(RouterAccessList6RuleOutput{})
	pulumi.RegisterOutputType(RouterAccessList6RuleArrayOutput{})
	pulumi.RegisterOutputType(RouterAccessListRuleOutput{})
	pulumi.RegisterOutputType(RouterAccessListRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterAspathListRuleOutput{})
	pulumi.RegisterOutputType(RouterAspathListRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterBfd6MultihopTemplateOutput{})
	pulumi.RegisterOutputType(RouterBfd6MultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(RouterBfd6NeighborOutput{})
	pulumi.RegisterOutputType(RouterBfd6NeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterBfdMultihopTemplateOutput{})
	pulumi.RegisterOutputType(RouterBfdMultihopTemplateArrayOutput{})
	pulumi.RegisterOutputType(RouterBfdNeighborOutput{})
	pulumi.RegisterOutputType(RouterBfdNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAdminDistanceOutput{})
	pulumi.RegisterOutputType(RouterBgpAdminDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddress6Output{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddress6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddressOutput{})
	pulumi.RegisterOutputType(RouterBgpAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpConfederationPeerOutput{})
	pulumi.RegisterOutputType(RouterBgpConfederationPeerArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborTypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborGroupOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborGroupArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRange6Output{})
	pulumi.RegisterOutputType(RouterBgpNeighborRange6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRangeOutput{})
	pulumi.RegisterOutputType(RouterBgpNeighborRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNetwork6TypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNetwork6TypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpNetworkTypeOutput{})
	pulumi.RegisterOutputType(RouterBgpNetworkTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistribute6Output{})
	pulumi.RegisterOutputType(RouterBgpRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistributeOutput{})
	pulumi.RegisterOutputType(RouterBgpRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6Output{})
	pulumi.RegisterOutputType(RouterBgpVrf6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6LeakTargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrf6LeakTargetArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfExportRtOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfExportRtArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfImportRtOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfImportRtArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6Output{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6ArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6TargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeak6TargetArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakTargetOutput{})
	pulumi.RegisterOutputType(RouterBgpVrfLeakTargetArrayOutput{})
	pulumi.RegisterOutputType(RouterCommunityListRuleOutput{})
	pulumi.RegisterOutputType(RouterCommunityListRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterExtcommunityListRuleOutput{})
	pulumi.RegisterOutputType(RouterExtcommunityListRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisInterfaceOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisNetOutput{})
	pulumi.RegisterOutputType(RouterIsisIsisNetArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistribute6Output{})
	pulumi.RegisterOutputType(RouterIsisRedistribute6ArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistributeOutput{})
	pulumi.RegisterOutputType(RouterIsisRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddress6Output{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddress6ArrayOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterIsisSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterKeyChainKeyOutput{})
	pulumi.RegisterOutputType(RouterKeyChainKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticast6InterfaceOutput{})
	pulumi.RegisterOutputType(RouterMulticast6InterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(RouterMulticast6PimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastFlowFlowOutput{})
	pulumi.RegisterOutputType(RouterMulticastFlowFlowArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceIgmpOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceIgmpPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceJoinGroupOutput{})
	pulumi.RegisterOutputType(RouterMulticastInterfaceJoinGroupArrayOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalPtrOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalRpAddressOutput{})
	pulumi.RegisterOutputType(RouterMulticastPimSmGlobalRpAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaRangeOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6AreaVirtualLinkIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceTypeOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(RouterOspf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6PassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterOspf6PassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6RedistributeOutput{})
	pulumi.RegisterOutputType(RouterOspf6RedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspf6SummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterOspf6SummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaFilterListOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaFilterListArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaRangeOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaRangeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterOspfAreaVirtualLinkMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfDistributeListOutput{})
	pulumi.RegisterOutputType(RouterOspfDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfNeighborTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfNeighborTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfNetworkTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfNetworkTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceTypeOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceTypeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterOspfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterOspfPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfRedistributeOutput{})
	pulumi.RegisterOutputType(RouterOspfRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterOspfSummaryAddressOutput{})
	pulumi.RegisterOutputType(RouterOspfSummaryAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6DstaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicy6DstaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceCustomOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceIdOutput{})
	pulumi.RegisterOutputType(RouterPolicy6InternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicy6SrcaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicy6SrcaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicyDstaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInputDeviceOutput{})
	pulumi.RegisterOutputType(RouterPolicyInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(RouterPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcArrayOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcaddrOutput{})
	pulumi.RegisterOutputType(RouterPolicySrcaddrArrayOutput{})
	pulumi.RegisterOutputType(RouterPrefixList6RuleOutput{})
	pulumi.RegisterOutputType(RouterPrefixList6RuleArrayOutput{})
	pulumi.RegisterOutputType(RouterPrefixListRuleOutput{})
	pulumi.RegisterOutputType(RouterPrefixListRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterRipDistanceOutput{})
	pulumi.RegisterOutputType(RouterRipDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipDistributeListOutput{})
	pulumi.RegisterOutputType(RouterRipDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipNeighborOutput{})
	pulumi.RegisterOutputType(RouterRipNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterRipNetworkOutput{})
	pulumi.RegisterOutputType(RouterRipNetworkArrayOutput{})
	pulumi.RegisterOutputType(RouterRipOffsetListOutput{})
	pulumi.RegisterOutputType(RouterRipOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipRedistributeOutput{})
	pulumi.RegisterOutputType(RouterRipRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngAggregateAddressOutput{})
	pulumi.RegisterOutputType(RouterRipngAggregateAddressArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngDistanceOutput{})
	pulumi.RegisterOutputType(RouterRipngDistanceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngDistributeListOutput{})
	pulumi.RegisterOutputType(RouterRipngDistributeListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipngInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngNeighborOutput{})
	pulumi.RegisterOutputType(RouterRipngNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngNetworkOutput{})
	pulumi.RegisterOutputType(RouterRipngNetworkArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngOffsetListOutput{})
	pulumi.RegisterOutputType(RouterRipngOffsetListArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngPassiveInterfaceOutput{})
	pulumi.RegisterOutputType(RouterRipngPassiveInterfaceArrayOutput{})
	pulumi.RegisterOutputType(RouterRipngRedistributeOutput{})
	pulumi.RegisterOutputType(RouterRipngRedistributeArrayOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleArrayOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetAspathOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetAspathArrayOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetCommunityOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetCommunityArrayOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetExtcommunityRtOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetExtcommunityRtArrayOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetExtcommunitySooOutput{})
	pulumi.RegisterOutputType(RouterRouteMapRuleSetExtcommunitySooArrayOutput{})
	pulumi.RegisterOutputType(RouterStatic6SdwanZoneOutput{})
	pulumi.RegisterOutputType(RouterStatic6SdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(RouterStaticSdwanZoneOutput{})
	pulumi.RegisterOutputType(RouterStaticSdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertise6Output{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertise6ArrayOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertiseOutput{})
	pulumi.RegisterOutputType(RouterbgpNeighborConditionalAdvertiseArrayOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6InterfaceIpsecKeyOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6InterfaceIpsecKeyArrayOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6InterfaceNeighborOutput{})
	pulumi.RegisterOutputType(Routerospf6Ospf6InterfaceNeighborArrayOutput{})
	pulumi.RegisterOutputType(RouterospfOspfInterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(RouterospfOspfInterfaceMd5KeyArrayOutput{})
	pulumi.RegisterOutputType(RuleOtdtMetadataOutput{})
	pulumi.RegisterOutputType(RuleOtdtMetadataArrayOutput{})
	pulumi.RegisterOutputType(RuleOtdtParameterOutput{})
	pulumi.RegisterOutputType(RuleOtdtParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleOtvpMetadataOutput{})
	pulumi.RegisterOutputType(RuleOtvpMetadataArrayOutput{})
	pulumi.RegisterOutputType(SctpFilterProfilePpidFilterOutput{})
	pulumi.RegisterOutputType(SctpFilterProfilePpidFilterArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterBwlEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterBwlEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterBwordEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterBwordEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterDnsblEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterDnsblEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderEntryOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderEntryArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileGmailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileGmailPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileImapOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileImapPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMapiOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMapiPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMsnHotmailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileMsnHotmailPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfilePop3Output{})
	pulumi.RegisterOutputType(SpamfilterProfilePop3PtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileSmtpOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileSmtpPtrOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileYahooMailOutput{})
	pulumi.RegisterOutputType(SpamfilterProfileYahooMailPtrOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(SshFilterProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(SshFilterProfileShellCommandOutput{})
	pulumi.RegisterOutputType(SshFilterProfileShellCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclGroupIngressOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclIngressActionOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclIngressActionPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclIngressClassifierOutput{})
	pulumi.RegisterOutputType(SwitchControllerAclIngressClassifierPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigCustomSwitchBindingOutput{})
	pulumi.RegisterOutputType(SwitchControllerAutoConfigCustomSwitchBindingArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyPolicyInterfaceTagOutput{})
	pulumi.RegisterOutputType(SwitchControllerDynamicPortPolicyPolicyInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingAggregateOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingAggregateArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingCollectorOutput{})
	pulumi.RegisterOutputType(SwitchControllerFlowTrackingCollectorArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsNacPortsOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsNacPortsPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerFortilinkSettingsNacPortsNacSegmentVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalCustomCommandOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalCustomCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalDisableDiscoveryOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalDisableDiscoveryArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileCustomTlvOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileCustomTlvArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileMedLocationServiceOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileMedLocationServiceArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileMedNetworkPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerLldpProfileMedNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationAddressCivicOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationAddressCivicPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationCoordinatesOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationCoordinatesPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationElinNumberOutput{})
	pulumi.RegisterOutputType(SwitchControllerLocationElinNumberPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchCustomCommandOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchCustomCommandArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchDhcpSnoopingStaticClientOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchDhcpSnoopingStaticClientArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIgmpSnoopingOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIgmpSnoopingPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIgmpSnoopingVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIgmpSnoopingVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIpSourceGuardOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIpSourceGuardArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIpSourceGuardBindingEntryOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchIpSourceGuardBindingEntryArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorSrcEgressOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorSrcEgressArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorSrcIngressOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchMirrorSrcIngressArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchN8021xSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchN8021xSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortAclGroupOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortAclGroupArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortAllowedVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortAllowedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortDhcpSnoopOption82OverrideArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortExportTagOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortExportTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortFortiswitchAclOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortFortiswitchAclArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortInterfaceTagOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortMemberOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortUntaggedVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchPortUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchRemoteLogOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchRemoteLogArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchRouteOffloadRouterOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchRouteOffloadRouterArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpCommunityOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpCommunityArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpSysinfoOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpSysinfoPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpTrapThresholdOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpTrapThresholdPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpUserOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSnmpUserArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStaticMacOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStaticMacArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStormControlOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStormControlPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStpInstanceOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStpInstanceArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStpSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchStpSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSwitchLogOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSwitchLogPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSwitchStpSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerManagedSwitchSwitchStpSettingsPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosIpDscpMapMapTypeOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosIpDscpMapMapTypeArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosQueuePolicyCosQueueOutput{})
	pulumi.RegisterOutputType(SwitchControllerQosQueuePolicyCosQueueArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineTargetOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineTargetArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineTargetTagOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineTargetTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSecurityPolicy8021XUserGroupOutput{})
	pulumi.RegisterOutputType(SwitchControllerSecurityPolicy8021XUserGroupArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerStpInstanceVlanRangeOutput{})
	pulumi.RegisterOutputType(SwitchControllerStpInstanceVlanRangeArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSwitchGroupMemberOutput{})
	pulumi.RegisterOutputType(SwitchControllerSwitchGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetIpOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetIpArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetMacOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetMacArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortInPortOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortInPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortOutPortOutput{})
	pulumi.RegisterOutputType(SwitchControllerTrafficSnifferTargetPortOutPortArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPolicyAllowedVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPolicyAllowedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPolicyUntaggedVlanOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPolicyUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPortalMessageOverridesOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanPortalMessageOverridesPtrOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanSelectedUsergroupOutput{})
	pulumi.RegisterOutputType(SwitchControllerVlanSelectedUsergroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAPIUserSettingTrusthostOutput{})
	pulumi.RegisterOutputType(SystemAPIUserSettingTrusthostArrayOutput{})
	pulumi.RegisterOutputType(SystemAccprofileFwgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileFwgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileLoggrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileLoggrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileNetgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileNetgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileSysgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileSysgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAccprofileUtmgrpPermissionOutput{})
	pulumi.RegisterOutputType(SystemAccprofileUtmgrpPermissionPtrOutput{})
	pulumi.RegisterOutputType(SystemAcmeAccountOutput{})
	pulumi.RegisterOutputType(SystemAcmeAccountArrayOutput{})
	pulumi.RegisterOutputType(SystemAcmeInterfaceOutput{})
	pulumi.RegisterOutputType(SystemAcmeInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuestUsergroupOutput{})
	pulumi.RegisterOutputType(SystemAdminGuestUsergroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetFilterOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiDashboardWidgetFilterArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiGlobalMenuFavoriteOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiGlobalMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiNewFeatureAcknowledgeOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiNewFeatureAcknowledgeArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiVdomMenuFavoriteOutput{})
	pulumi.RegisterOutputType(SystemAdminGuiVdomMenuFavoriteArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminLoginTimeOutput{})
	pulumi.RegisterOutputType(SystemAdminLoginTimeArrayOutput{})
	pulumi.RegisterOutputType(SystemAdminVdomOutput{})
	pulumi.RegisterOutputType(SystemAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupFwPolicyViolationOutput{})
	pulumi.RegisterOutputType(SystemAlarmGroupFwPolicyViolationArrayOutput{})
	pulumi.RegisterOutputType(SystemApiUserTrusthostOutput{})
	pulumi.RegisterOutputType(SystemApiUserTrusthostArrayOutput{})
	pulumi.RegisterOutputType(SystemApiUserVdomOutput{})
	pulumi.RegisterOutputType(SystemApiUserVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionEmailToOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionEmailToArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionHeaderOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionHeaderArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionHttpHeaderOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionSdnConnectorOutput{})
	pulumi.RegisterOutputType(SystemAutomationActionSdnConnectorArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationDestinationDestinationOutput{})
	pulumi.RegisterOutputType(SystemAutomationDestinationDestinationArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchActionOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchActionArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchDestinationOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchDestinationArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerFieldOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerFieldArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerLogidBlockOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerLogidBlockArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerVdomOutput{})
	pulumi.RegisterOutputType(SystemAutomationTriggerVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemCentralManagementServerListOutput{})
	pulumi.RegisterOutputType(SystemCentralManagementServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSyncvdOutput{})
	pulumi.RegisterOutputType(SystemClusterSyncSyncvdArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorVdomOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricConnectorVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricDeviceOutput{})
	pulumi.RegisterOutputType(SystemCsfFabricDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemCsfTrustedListOutput{})
	pulumi.RegisterOutputType(SystemCsfTrustedListArrayOutput{})
	pulumi.RegisterOutputType(SystemDdnsDdnsServerAddrOutput{})
	pulumi.RegisterOutputType(SystemDdnsDdnsServerAddrArrayOutput{})
	pulumi.RegisterOutputType(SystemDdnsMonitorInterfaceOutput{})
	pulumi.RegisterOutputType(SystemDdnsMonitorInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcp6ServerIpRangeOutput{})
	pulumi.RegisterOutputType(SystemDhcp6ServerIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcp6ServerPrefixRangeOutput{})
	pulumi.RegisterOutputType(SystemDhcp6ServerPrefixRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeUciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeUciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeVciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerExcludeRangeVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeUciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeUciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeVciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerIpRangeVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionUciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionUciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionVciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerOptionVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerReservedAddressOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerReservedAddressArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerTftpServerOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerTftpServerArrayOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerVciStringOutput{})
	pulumi.RegisterOutputType(SystemDhcpServerVciStringArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsDatabaseDnsEntryOutput{})
	pulumi.RegisterOutputType(SystemDnsDatabaseDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsDomainOutput{})
	pulumi.RegisterOutputType(SystemDnsDomainArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsServerHostnameOutput{})
	pulumi.RegisterOutputType(SystemDnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(SystemEvpnExportRtOutput{})
	pulumi.RegisterOutputType(SystemEvpnExportRtArrayOutput{})
	pulumi.RegisterOutputType(SystemEvpnImportRtOutput{})
	pulumi.RegisterOutputType(SystemEvpnImportRtArrayOutput{})
	pulumi.RegisterOutputType(SystemFabricVpnAdvertisedSubnetOutput{})
	pulumi.RegisterOutputType(SystemFabricVpnAdvertisedSubnetArrayOutput{})
	pulumi.RegisterOutputType(SystemFabricVpnOverlayOutput{})
	pulumi.RegisterOutputType(SystemFabricVpnOverlayArrayOutput{})
	pulumi.RegisterOutputType(SystemFederatedUpgradeNodeListOutput{})
	pulumi.RegisterOutputType(SystemFederatedUpgradeNodeListArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideIp6RangeOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideIp6RangeArrayOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideIpRangeOutput{})
	pulumi.RegisterOutputType(SystemGeoipOverrideIpRangeArrayOutput{})
	pulumi.RegisterOutputType(SystemGlobalInternetServiceDownloadListOutput{})
	pulumi.RegisterOutputType(SystemGlobalInternetServiceDownloadListArrayOutput{})
	pulumi.RegisterOutputType(SystemHaHaMgmtInterfaceOutput{})
	pulumi.RegisterOutputType(SystemHaHaMgmtInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemHaSecondaryVclusterOutput{})
	pulumi.RegisterOutputType(SystemHaSecondaryVclusterPtrOutput{})
	pulumi.RegisterOutputType(SystemHaUnicastPeerOutput{})
	pulumi.RegisterOutputType(SystemHaUnicastPeerArrayOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterArrayOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterVdomOutput{})
	pulumi.RegisterOutputType(SystemHaVclusterVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup14Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup14PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup15Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup15PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup16Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup16PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup17Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup17PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup18Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup18PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup19Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup19PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup1Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup1PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup20Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup20PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup21Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup21PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup27Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup27PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup28Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup28PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup29Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup29PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup2Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup2PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup30Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup30PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup31Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup31PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup32Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup32PtrOutput{})
	pulumi.RegisterOutputType(SystemIkeDhGroup5Output{})
	pulumi.RegisterOutputType(SystemIkeDhGroup5PtrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceClientOptionOutput{})
	pulumi.RegisterOutputType(SystemInterfaceClientOptionArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceDhcpSnoopingServerListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceDhcpSnoopingServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemInterfaceFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Output{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6PtrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Dhcp6IapdListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Dhcp6IapdListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6DelegatedPrefixListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6DelegatedPrefixListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6ExtraAddrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6ExtraAddrArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListDnsslOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Ip6PrefixListDnsslArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Vrrp6Output{})
	pulumi.RegisterOutputType(SystemInterfaceIpv6Vrrp6ArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceManagedDeviceOutput{})
	pulumi.RegisterOutputType(SystemInterfaceManagedDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceMemberOutput{})
	pulumi.RegisterOutputType(SystemInterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecondaryipOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecondaryipArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecurityGroupOutput{})
	pulumi.RegisterOutputType(SystemInterfaceSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingTagOutput{})
	pulumi.RegisterOutputType(SystemInterfaceTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpProxyArpOutput{})
	pulumi.RegisterOutputType(SystemInterfaceVrrpProxyArpArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamPoolOutput{})
	pulumi.RegisterOutputType(SystemIpamPoolArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleDeviceOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleInterfaceOutput{})
	pulumi.RegisterOutputType(SystemIpamRuleInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemIpamRulePoolOutput{})
	pulumi.RegisterOutputType(SystemIpamRulePoolArrayOutput{})
	pulumi.RegisterOutputType(SystemIpsecAggregateMemberOutput{})
	pulumi.RegisterOutputType(SystemIpsecAggregateMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorRouteOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorServerOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorServerArrayOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorServerListOutput{})
	pulumi.RegisterOutputType(SystemLinkMonitorServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyGuestOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyGuestPtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyGuestVoiceSignalingOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyGuestVoiceSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicySoftphoneOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicySoftphonePtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyStreamingVideoOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyStreamingVideoPtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVideoConferencingOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVideoConferencingPtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVideoSignalingOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVideoSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVoiceOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVoicePtrOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVoiceSignalingOutput{})
	pulumi.RegisterOutputType(SystemLldpNetworkPolicyVoiceSignalingPtrOutput{})
	pulumi.RegisterOutputType(SystemMobileTunnelNetworkOutput{})
	pulumi.RegisterOutputType(SystemMobileTunnelNetworkArrayOutput{})
	pulumi.RegisterOutputType(SystemNat64SecondaryPrefixOutput{})
	pulumi.RegisterOutputType(SystemNat64SecondaryPrefixArrayOutput{})
	pulumi.RegisterOutputType(SystemNdProxyMemberOutput{})
	pulumi.RegisterOutputType(SystemNdProxyMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemNpuPriorityProtocolOutput{})
	pulumi.RegisterOutputType(SystemNpuPriorityProtocolPtrOutput{})
	pulumi.RegisterOutputType(SystemNtpInterfaceOutput{})
	pulumi.RegisterOutputType(SystemNtpInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemNtpNtpserverOutput{})
	pulumi.RegisterOutputType(SystemNtpNtpserverArrayOutput{})
	pulumi.RegisterOutputType(SystemObjectTaggingTagOutput{})
	pulumi.RegisterOutputType(SystemObjectTaggingTagArrayOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolArrayOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolClientSubnetOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolClientSubnetArrayOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolIntlIntfOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolIntlIntfArrayOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolThirdPartySubnetOutput{})
	pulumi.RegisterOutputType(SystemPcpServerPoolThirdPartySubnetArrayOutput{})
	pulumi.RegisterOutputType(SystemPtpServerInterfaceOutput{})
	pulumi.RegisterOutputType(SystemPtpServerInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAdminOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAdminArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAlertmailOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAlertmailArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAuthOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAuthArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAutomationOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupAutomationArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupCustomMessageOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupCustomMessageArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupDeviceDetectionPortalOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupDeviceDetectionPortalArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupEcOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupEcArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupFortiguardWfOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupFortiguardWfArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupFtpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupFtpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupHttpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupHttpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupIcapOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupIcapArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupMailOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupMailArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupNacQuarOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupNacQuarArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupNntpOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupNntpArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupSpamOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupSpamArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupSslvpnOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupSslvpnArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupTrafficQuotaOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupTrafficQuotaArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupUtmOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupUtmArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupWebproxyOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgGroupWebproxyArrayOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderArrayOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderAssertionAttributeOutput{})
	pulumi.RegisterOutputType(SystemSamlServiceProviderAssertionAttributeArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorCompartmentListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorCompartmentListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalAccountListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalAccountListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalAccountListRegionListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalAccountListRegionListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalIpOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorExternalIpArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorForwardingRuleOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorGcpProjectListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorGcpProjectListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorGcpProjectListGcpZoneListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorGcpProjectListGcpZoneListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorNicOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorNicArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorNicIpOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorNicIpArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorOciRegionListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorOciRegionListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteTableOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteTableArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteTableRouteOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorServerListOutput{})
	pulumi.RegisterOutputType(SystemSdnConnectorServerListArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddr6Output{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddrOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstaddrArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstintfOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationDstintfArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceIdOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddr6Output{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddrOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcaddrArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcintfOutput{})
	pulumi.RegisterOutputType(SystemSdwanDuplicationSrcintfArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemSdwanFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(SystemSdwanHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborMemberBlockOutput{})
	pulumi.RegisterOutputType(SystemSdwanNeighborMemberBlockArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDst6Output{})
	pulumi.RegisterOutputType(SystemSdwanServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDstOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceDstArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInputZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlCategoryOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanServicePriorityZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSlaOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrc6Output{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrc6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrcOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceSrcArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceUserOutput{})
	pulumi.RegisterOutputType(SystemSdwanServiceUserArrayOutput{})
	pulumi.RegisterOutputType(SystemSdwanZoneOutput{})
	pulumi.RegisterOutputType(SystemSdwanZoneArrayOutput{})
	pulumi.RegisterOutputType(SystemSessionTtlPortOutput{})
	pulumi.RegisterOutputType(SystemSessionTtlPortArrayOutput{})
	pulumi.RegisterOutputType(SystemSettingsGuiDefaultPolicyColumnOutput{})
	pulumi.RegisterOutputType(SystemSettingsGuiDefaultPolicyColumnArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityHostOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityHostArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityHosts6Output{})
	pulumi.RegisterOutputType(SystemSnmpCommunityHosts6ArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityVdomOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpUserVdomOutput{})
	pulumi.RegisterOutputType(SystemSnmpUserVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemSpeedTestScheduleScheduleOutput{})
	pulumi.RegisterOutputType(SystemSpeedTestScheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(SystemSpeedTestServerHostOutput{})
	pulumi.RegisterOutputType(SystemSpeedTestServerHostArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoAdminVdomOutput{})
	pulumi.RegisterOutputType(SystemSsoAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoForticloudAdminVdomOutput{})
	pulumi.RegisterOutputType(SystemSsoForticloudAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemSsoFortigateCloudAdminVdomOutput{})
	pulumi.RegisterOutputType(SystemSsoFortigateCloudAdminVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerDownIntfsBeforeSessSyncArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSessionSyncFilterOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSessionSyncFilterPtrOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSessionSyncFilterCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSyncvdOutput{})
	pulumi.RegisterOutputType(SystemStandaloneClusterClusterPeerSyncvdArrayOutput{})
	pulumi.RegisterOutputType(SystemSwitchInterfaceMemberOutput{})
	pulumi.RegisterOutputType(SystemSwitchInterfaceMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemSwitchInterfaceSpanSourcePortOutput{})
	pulumi.RegisterOutputType(SystemSwitchInterfaceSpanSourcePortArrayOutput{})
	pulumi.RegisterOutputType(SystemVdomDnsServerHostnameOutput{})
	pulumi.RegisterOutputType(SystemVdomDnsServerHostnameArrayOutput{})
	pulumi.RegisterOutputType(SystemVdomExceptionVdomOutput{})
	pulumi.RegisterOutputType(SystemVdomExceptionVdomArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualSwitchPortOutput{})
	pulumi.RegisterOutputType(SystemVirtualSwitchPortArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkFailAlertInterfaceOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkFailAlertInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckSlaOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkHealthCheckSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkNeighborOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkNeighborArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceDst6Output{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceDst6ArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceDstOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceDstArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInputDeviceOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceAppCtrlOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceAppCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceAppCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCtrlOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCtrlArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCtrlGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCtrlGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceIdOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceNameOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServicePriorityMemberOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServicePriorityMemberArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceSlaOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceSlaArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceSrc6Output{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkServiceSrc6ArrayOutput{})
}
