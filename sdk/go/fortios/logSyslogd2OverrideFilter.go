// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LogSyslogd2OverrideFilter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                           `pulumi:"anomaly"`
	Dns                  pulumi.StringOutput                           `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                        `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                           `pulumi:"filter"`
	FilterType           pulumi.StringOutput                           `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                           `pulumi:"forwardTraffic"`
	FreeStyles           LogSyslogd2OverrideFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables         pulumi.StringPtrOutput                        `pulumi:"getAllTables"`
	Gtp                  pulumi.StringOutput                           `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                           `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                           `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                           `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                           `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                           `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                           `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                           `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                        `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                           `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                           `pulumi:"ztnaTraffic"`
}

// NewLogSyslogd2OverrideFilter registers a new resource with the given unique name, arguments, and options.
func NewLogSyslogd2OverrideFilter(ctx *pulumi.Context,
	name string, args *LogSyslogd2OverrideFilterArgs, opts ...pulumi.ResourceOption) (*LogSyslogd2OverrideFilter, error) {
	if args == nil {
		args = &LogSyslogd2OverrideFilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogSyslogd2OverrideFilter
	err := ctx.RegisterResource("fortios:index/logSyslogd2OverrideFilter:LogSyslogd2OverrideFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSyslogd2OverrideFilter gets an existing LogSyslogd2OverrideFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSyslogd2OverrideFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSyslogd2OverrideFilterState, opts ...pulumi.ResourceOption) (*LogSyslogd2OverrideFilter, error) {
	var resource LogSyslogd2OverrideFilter
	err := ctx.ReadResource("fortios:index/logSyslogd2OverrideFilter:LogSyslogd2OverrideFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSyslogd2OverrideFilter resources.
type logSyslogd2OverrideFilterState struct {
	Anomaly              *string                              `pulumi:"anomaly"`
	Dns                  *string                              `pulumi:"dns"`
	DynamicSortSubtable  *string                              `pulumi:"dynamicSortSubtable"`
	Filter               *string                              `pulumi:"filter"`
	FilterType           *string                              `pulumi:"filterType"`
	ForwardTraffic       *string                              `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd2OverrideFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                              `pulumi:"getAllTables"`
	Gtp                  *string                              `pulumi:"gtp"`
	LocalTraffic         *string                              `pulumi:"localTraffic"`
	MulticastTraffic     *string                              `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                              `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                              `pulumi:"netscanVulnerability"`
	Severity             *string                              `pulumi:"severity"`
	SnifferTraffic       *string                              `pulumi:"snifferTraffic"`
	Ssh                  *string                              `pulumi:"ssh"`
	Vdomparam            *string                              `pulumi:"vdomparam"`
	Voip                 *string                              `pulumi:"voip"`
	ZtnaTraffic          *string                              `pulumi:"ztnaTraffic"`
}

type LogSyslogd2OverrideFilterState struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd2OverrideFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd2OverrideFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd2OverrideFilterState)(nil)).Elem()
}

type logSyslogd2OverrideFilterArgs struct {
	Anomaly              *string                              `pulumi:"anomaly"`
	Dns                  *string                              `pulumi:"dns"`
	DynamicSortSubtable  *string                              `pulumi:"dynamicSortSubtable"`
	Filter               *string                              `pulumi:"filter"`
	FilterType           *string                              `pulumi:"filterType"`
	ForwardTraffic       *string                              `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd2OverrideFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                              `pulumi:"getAllTables"`
	Gtp                  *string                              `pulumi:"gtp"`
	LocalTraffic         *string                              `pulumi:"localTraffic"`
	MulticastTraffic     *string                              `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                              `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                              `pulumi:"netscanVulnerability"`
	Severity             *string                              `pulumi:"severity"`
	SnifferTraffic       *string                              `pulumi:"snifferTraffic"`
	Ssh                  *string                              `pulumi:"ssh"`
	Vdomparam            *string                              `pulumi:"vdomparam"`
	Voip                 *string                              `pulumi:"voip"`
	ZtnaTraffic          *string                              `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogSyslogd2OverrideFilter resource.
type LogSyslogd2OverrideFilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd2OverrideFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd2OverrideFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd2OverrideFilterArgs)(nil)).Elem()
}

type LogSyslogd2OverrideFilterInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideFilterOutput() LogSyslogd2OverrideFilterOutput
	ToLogSyslogd2OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterOutput
}

func (*LogSyslogd2OverrideFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (i *LogSyslogd2OverrideFilter) ToLogSyslogd2OverrideFilterOutput() LogSyslogd2OverrideFilterOutput {
	return i.ToLogSyslogd2OverrideFilterOutputWithContext(context.Background())
}

func (i *LogSyslogd2OverrideFilter) ToLogSyslogd2OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideFilterOutput)
}

func (i *LogSyslogd2OverrideFilter) ToOutput(ctx context.Context) pulumix.Output[*LogSyslogd2OverrideFilter] {
	return pulumix.Output[*LogSyslogd2OverrideFilter]{
		OutputState: i.ToLogSyslogd2OverrideFilterOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2OverrideFilterArrayInput is an input type that accepts LogSyslogd2OverrideFilterArray and LogSyslogd2OverrideFilterArrayOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideFilterArrayInput` via:
//
//	LogSyslogd2OverrideFilterArray{ LogSyslogd2OverrideFilterArgs{...} }
type LogSyslogd2OverrideFilterArrayInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideFilterArrayOutput() LogSyslogd2OverrideFilterArrayOutput
	ToLogSyslogd2OverrideFilterArrayOutputWithContext(context.Context) LogSyslogd2OverrideFilterArrayOutput
}

type LogSyslogd2OverrideFilterArray []LogSyslogd2OverrideFilterInput

func (LogSyslogd2OverrideFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd2OverrideFilterArray) ToLogSyslogd2OverrideFilterArrayOutput() LogSyslogd2OverrideFilterArrayOutput {
	return i.ToLogSyslogd2OverrideFilterArrayOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideFilterArray) ToLogSyslogd2OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideFilterArrayOutput)
}

func (i LogSyslogd2OverrideFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]*LogSyslogd2OverrideFilter] {
	return pulumix.Output[[]*LogSyslogd2OverrideFilter]{
		OutputState: i.ToLogSyslogd2OverrideFilterArrayOutputWithContext(ctx).OutputState,
	}
}

// LogSyslogd2OverrideFilterMapInput is an input type that accepts LogSyslogd2OverrideFilterMap and LogSyslogd2OverrideFilterMapOutput values.
// You can construct a concrete instance of `LogSyslogd2OverrideFilterMapInput` via:
//
//	LogSyslogd2OverrideFilterMap{ "key": LogSyslogd2OverrideFilterArgs{...} }
type LogSyslogd2OverrideFilterMapInput interface {
	pulumi.Input

	ToLogSyslogd2OverrideFilterMapOutput() LogSyslogd2OverrideFilterMapOutput
	ToLogSyslogd2OverrideFilterMapOutputWithContext(context.Context) LogSyslogd2OverrideFilterMapOutput
}

type LogSyslogd2OverrideFilterMap map[string]LogSyslogd2OverrideFilterInput

func (LogSyslogd2OverrideFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd2OverrideFilterMap) ToLogSyslogd2OverrideFilterMapOutput() LogSyslogd2OverrideFilterMapOutput {
	return i.ToLogSyslogd2OverrideFilterMapOutputWithContext(context.Background())
}

func (i LogSyslogd2OverrideFilterMap) ToLogSyslogd2OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd2OverrideFilterMapOutput)
}

func (i LogSyslogd2OverrideFilterMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogSyslogd2OverrideFilter] {
	return pulumix.Output[map[string]*LogSyslogd2OverrideFilter]{
		OutputState: i.ToLogSyslogd2OverrideFilterMapOutputWithContext(ctx).OutputState,
	}
}

type LogSyslogd2OverrideFilterOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd2OverrideFilterOutput) ToLogSyslogd2OverrideFilterOutput() LogSyslogd2OverrideFilterOutput {
	return o
}

func (o LogSyslogd2OverrideFilterOutput) ToLogSyslogd2OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterOutput {
	return o
}

func (o LogSyslogd2OverrideFilterOutput) ToOutput(ctx context.Context) pulumix.Output[*LogSyslogd2OverrideFilter] {
	return pulumix.Output[*LogSyslogd2OverrideFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) FreeStyles() LogSyslogd2OverrideFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) LogSyslogd2OverrideFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogSyslogd2OverrideFilterFreeStyleArrayOutput)
}

func (o LogSyslogd2OverrideFilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd2OverrideFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogSyslogd2OverrideFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd2OverrideFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogSyslogd2OverrideFilterArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd2OverrideFilterArrayOutput) ToLogSyslogd2OverrideFilterArrayOutput() LogSyslogd2OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd2OverrideFilterArrayOutput) ToLogSyslogd2OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd2OverrideFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LogSyslogd2OverrideFilter] {
	return pulumix.Output[[]*LogSyslogd2OverrideFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideFilterArrayOutput) Index(i pulumi.IntInput) LogSyslogd2OverrideFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSyslogd2OverrideFilter {
		return vs[0].([]*LogSyslogd2OverrideFilter)[vs[1].(int)]
	}).(LogSyslogd2OverrideFilterOutput)
}

type LogSyslogd2OverrideFilterMapOutput struct{ *pulumi.OutputState }

func (LogSyslogd2OverrideFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd2OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd2OverrideFilterMapOutput) ToLogSyslogd2OverrideFilterMapOutput() LogSyslogd2OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd2OverrideFilterMapOutput) ToLogSyslogd2OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd2OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd2OverrideFilterMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogSyslogd2OverrideFilter] {
	return pulumix.Output[map[string]*LogSyslogd2OverrideFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogSyslogd2OverrideFilterMapOutput) MapIndex(k pulumi.StringInput) LogSyslogd2OverrideFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSyslogd2OverrideFilter {
		return vs[0].(map[string]*LogSyslogd2OverrideFilter)[vs[1].(string)]
	}).(LogSyslogd2OverrideFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideFilterInput)(nil)).Elem(), &LogSyslogd2OverrideFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideFilterArrayInput)(nil)).Elem(), LogSyslogd2OverrideFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd2OverrideFilterMapInput)(nil)).Elem(), LogSyslogd2OverrideFilterMap{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideFilterOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideFilterArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd2OverrideFilterMapOutput{})
}
