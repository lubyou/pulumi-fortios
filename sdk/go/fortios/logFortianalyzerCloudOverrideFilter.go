// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Override filters for FortiAnalyzer Cloud. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// LogFortianalyzerCloud OverrideFilter can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/logFortianalyzerCloudOverrideFilter:LogFortianalyzerCloudOverrideFilter labelname LogFortianalyzerCloudOverrideFilter
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/logFortianalyzerCloudOverrideFilter:LogFortianalyzerCloudOverrideFilter labelname LogFortianalyzerCloudOverrideFilter
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type LogFortianalyzerCloudOverrideFilter struct {
	pulumi.CustomResourceState

	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringOutput `pulumi:"anomaly"`
	// Enable/disable DLP archive logging. Valid values: `enable`, `disable`.
	DlpArchive pulumi.StringOutput `pulumi:"dlpArchive"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringOutput `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogFortianalyzerCloudOverrideFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringOutput `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringOutput `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringOutput `pulumi:"multicastTraffic"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringOutput `pulumi:"snifferTraffic"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringOutput `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringOutput `pulumi:"ztnaTraffic"`
}

// NewLogFortianalyzerCloudOverrideFilter registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzerCloudOverrideFilter(ctx *pulumi.Context,
	name string, args *LogFortianalyzerCloudOverrideFilterArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudOverrideFilter, error) {
	if args == nil {
		args = &LogFortianalyzerCloudOverrideFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogFortianalyzerCloudOverrideFilter
	err := ctx.RegisterResource("fortios:index/logFortianalyzerCloudOverrideFilter:LogFortianalyzerCloudOverrideFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzerCloudOverrideFilter gets an existing LogFortianalyzerCloudOverrideFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzerCloudOverrideFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzerCloudOverrideFilterState, opts ...pulumi.ResourceOption) (*LogFortianalyzerCloudOverrideFilter, error) {
	var resource LogFortianalyzerCloudOverrideFilter
	err := ctx.ReadResource("fortios:index/logFortianalyzerCloudOverrideFilter:LogFortianalyzerCloudOverrideFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzerCloudOverrideFilter resources.
type logFortianalyzerCloudOverrideFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable DLP archive logging. Valid values: `enable`, `disable`.
	DlpArchive *string `pulumi:"dlpArchive"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogFortianalyzerCloudOverrideFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

type LogFortianalyzerCloudOverrideFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable DLP archive logging. Valid values: `enable`, `disable`.
	DlpArchive pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Free style filter string.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogFortianalyzerCloudOverrideFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogFortianalyzerCloudOverrideFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudOverrideFilterState)(nil)).Elem()
}

type logFortianalyzerCloudOverrideFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable DLP archive logging. Valid values: `enable`, `disable`.
	DlpArchive *string `pulumi:"dlpArchive"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogFortianalyzerCloudOverrideFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogFortianalyzerCloudOverrideFilter resource.
type LogFortianalyzerCloudOverrideFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable DLP archive logging. Valid values: `enable`, `disable`.
	DlpArchive pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Free style filter string.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogFortianalyzerCloudOverrideFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogFortianalyzerCloudOverrideFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerCloudOverrideFilterArgs)(nil)).Elem()
}

type LogFortianalyzerCloudOverrideFilterInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudOverrideFilterOutput() LogFortianalyzerCloudOverrideFilterOutput
	ToLogFortianalyzerCloudOverrideFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterOutput
}

func (*LogFortianalyzerCloudOverrideFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (i *LogFortianalyzerCloudOverrideFilter) ToLogFortianalyzerCloudOverrideFilterOutput() LogFortianalyzerCloudOverrideFilterOutput {
	return i.ToLogFortianalyzerCloudOverrideFilterOutputWithContext(context.Background())
}

func (i *LogFortianalyzerCloudOverrideFilter) ToLogFortianalyzerCloudOverrideFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudOverrideFilterOutput)
}

// LogFortianalyzerCloudOverrideFilterArrayInput is an input type that accepts LogFortianalyzerCloudOverrideFilterArray and LogFortianalyzerCloudOverrideFilterArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudOverrideFilterArrayInput` via:
//
//          LogFortianalyzerCloudOverrideFilterArray{ LogFortianalyzerCloudOverrideFilterArgs{...} }
type LogFortianalyzerCloudOverrideFilterArrayInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudOverrideFilterArrayOutput() LogFortianalyzerCloudOverrideFilterArrayOutput
	ToLogFortianalyzerCloudOverrideFilterArrayOutputWithContext(context.Context) LogFortianalyzerCloudOverrideFilterArrayOutput
}

type LogFortianalyzerCloudOverrideFilterArray []LogFortianalyzerCloudOverrideFilterInput

func (LogFortianalyzerCloudOverrideFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (i LogFortianalyzerCloudOverrideFilterArray) ToLogFortianalyzerCloudOverrideFilterArrayOutput() LogFortianalyzerCloudOverrideFilterArrayOutput {
	return i.ToLogFortianalyzerCloudOverrideFilterArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudOverrideFilterArray) ToLogFortianalyzerCloudOverrideFilterArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudOverrideFilterArrayOutput)
}

// LogFortianalyzerCloudOverrideFilterMapInput is an input type that accepts LogFortianalyzerCloudOverrideFilterMap and LogFortianalyzerCloudOverrideFilterMapOutput values.
// You can construct a concrete instance of `LogFortianalyzerCloudOverrideFilterMapInput` via:
//
//          LogFortianalyzerCloudOverrideFilterMap{ "key": LogFortianalyzerCloudOverrideFilterArgs{...} }
type LogFortianalyzerCloudOverrideFilterMapInput interface {
	pulumi.Input

	ToLogFortianalyzerCloudOverrideFilterMapOutput() LogFortianalyzerCloudOverrideFilterMapOutput
	ToLogFortianalyzerCloudOverrideFilterMapOutputWithContext(context.Context) LogFortianalyzerCloudOverrideFilterMapOutput
}

type LogFortianalyzerCloudOverrideFilterMap map[string]LogFortianalyzerCloudOverrideFilterInput

func (LogFortianalyzerCloudOverrideFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (i LogFortianalyzerCloudOverrideFilterMap) ToLogFortianalyzerCloudOverrideFilterMapOutput() LogFortianalyzerCloudOverrideFilterMapOutput {
	return i.ToLogFortianalyzerCloudOverrideFilterMapOutputWithContext(context.Background())
}

func (i LogFortianalyzerCloudOverrideFilterMap) ToLogFortianalyzerCloudOverrideFilterMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerCloudOverrideFilterMapOutput)
}

type LogFortianalyzerCloudOverrideFilterOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudOverrideFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudOverrideFilterOutput) ToLogFortianalyzerCloudOverrideFilterOutput() LogFortianalyzerCloudOverrideFilterOutput {
	return o
}

func (o LogFortianalyzerCloudOverrideFilterOutput) ToLogFortianalyzerCloudOverrideFilterOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterOutput {
	return o
}

type LogFortianalyzerCloudOverrideFilterArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudOverrideFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudOverrideFilterArrayOutput) ToLogFortianalyzerCloudOverrideFilterArrayOutput() LogFortianalyzerCloudOverrideFilterArrayOutput {
	return o
}

func (o LogFortianalyzerCloudOverrideFilterArrayOutput) ToLogFortianalyzerCloudOverrideFilterArrayOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterArrayOutput {
	return o
}

func (o LogFortianalyzerCloudOverrideFilterArrayOutput) Index(i pulumi.IntInput) LogFortianalyzerCloudOverrideFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortianalyzerCloudOverrideFilter {
		return vs[0].([]*LogFortianalyzerCloudOverrideFilter)[vs[1].(int)]
	}).(LogFortianalyzerCloudOverrideFilterOutput)
}

type LogFortianalyzerCloudOverrideFilterMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerCloudOverrideFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerCloudOverrideFilter)(nil)).Elem()
}

func (o LogFortianalyzerCloudOverrideFilterMapOutput) ToLogFortianalyzerCloudOverrideFilterMapOutput() LogFortianalyzerCloudOverrideFilterMapOutput {
	return o
}

func (o LogFortianalyzerCloudOverrideFilterMapOutput) ToLogFortianalyzerCloudOverrideFilterMapOutputWithContext(ctx context.Context) LogFortianalyzerCloudOverrideFilterMapOutput {
	return o
}

func (o LogFortianalyzerCloudOverrideFilterMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzerCloudOverrideFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortianalyzerCloudOverrideFilter {
		return vs[0].(map[string]*LogFortianalyzerCloudOverrideFilter)[vs[1].(string)]
	}).(LogFortianalyzerCloudOverrideFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudOverrideFilterInput)(nil)).Elem(), &LogFortianalyzerCloudOverrideFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudOverrideFilterArrayInput)(nil)).Elem(), LogFortianalyzerCloudOverrideFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerCloudOverrideFilterMapInput)(nil)).Elem(), LogFortianalyzerCloudOverrideFilterMap{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudOverrideFilterOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudOverrideFilterArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerCloudOverrideFilterMapOutput{})
}
