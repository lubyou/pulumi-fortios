// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPS URL filter settings for IPv6.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWebfilterIpsUrlfilterSetting6(ctx, "trname", &fortios.WebfilterIpsUrlfilterSetting6Args{
// 			Distance: pulumi.Int(1),
// 			Gateway6: pulumi.String("::"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Webfilter IpsUrlfilterSetting6 can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/webfilterIpsUrlfilterSetting6:WebfilterIpsUrlfilterSetting6 labelname WebfilterIpsUrlfilterSetting6
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WebfilterIpsUrlfilterSetting6 struct {
	pulumi.CustomResourceState

	// Interface for this route.
	Device pulumi.StringOutput `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringOutput `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrOutput `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebfilterIpsUrlfilterSetting6 registers a new resource with the given unique name, arguments, and options.
func NewWebfilterIpsUrlfilterSetting6(ctx *pulumi.Context,
	name string, args *WebfilterIpsUrlfilterSetting6Args, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting6, error) {
	if args == nil {
		args = &WebfilterIpsUrlfilterSetting6Args{}
	}

	var resource WebfilterIpsUrlfilterSetting6
	err := ctx.RegisterResource("fortios:index/webfilterIpsUrlfilterSetting6:WebfilterIpsUrlfilterSetting6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterIpsUrlfilterSetting6 gets an existing WebfilterIpsUrlfilterSetting6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterIpsUrlfilterSetting6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterIpsUrlfilterSetting6State, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting6, error) {
	var resource WebfilterIpsUrlfilterSetting6
	err := ctx.ReadResource("fortios:index/webfilterIpsUrlfilterSetting6:WebfilterIpsUrlfilterSetting6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterIpsUrlfilterSetting6 resources.
type webfilterIpsUrlfilterSetting6State struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 *string `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WebfilterIpsUrlfilterSetting6State struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSetting6State) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSetting6State)(nil)).Elem()
}

type webfilterIpsUrlfilterSetting6Args struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IPv6 address for this route.
	Gateway6 *string `pulumi:"gateway6"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebfilterIpsUrlfilterSetting6 resource.
type WebfilterIpsUrlfilterSetting6Args struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IPv6 address for this route.
	Gateway6 pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSetting6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSetting6Args)(nil)).Elem()
}

type WebfilterIpsUrlfilterSetting6Input interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSetting6Output() WebfilterIpsUrlfilterSetting6Output
	ToWebfilterIpsUrlfilterSetting6OutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6Output
}

func (*WebfilterIpsUrlfilterSetting6) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterIpsUrlfilterSetting6)(nil))
}

func (i *WebfilterIpsUrlfilterSetting6) ToWebfilterIpsUrlfilterSetting6Output() WebfilterIpsUrlfilterSetting6Output {
	return i.ToWebfilterIpsUrlfilterSetting6OutputWithContext(context.Background())
}

func (i *WebfilterIpsUrlfilterSetting6) ToWebfilterIpsUrlfilterSetting6OutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6Output {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSetting6Output)
}

func (i *WebfilterIpsUrlfilterSetting6) ToWebfilterIpsUrlfilterSetting6PtrOutput() WebfilterIpsUrlfilterSetting6PtrOutput {
	return i.ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(context.Background())
}

func (i *WebfilterIpsUrlfilterSetting6) ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSetting6PtrOutput)
}

type WebfilterIpsUrlfilterSetting6PtrInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSetting6PtrOutput() WebfilterIpsUrlfilterSetting6PtrOutput
	ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6PtrOutput
}

type webfilterIpsUrlfilterSetting6PtrType WebfilterIpsUrlfilterSetting6Args

func (*webfilterIpsUrlfilterSetting6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting6)(nil))
}

func (i *webfilterIpsUrlfilterSetting6PtrType) ToWebfilterIpsUrlfilterSetting6PtrOutput() WebfilterIpsUrlfilterSetting6PtrOutput {
	return i.ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(context.Background())
}

func (i *webfilterIpsUrlfilterSetting6PtrType) ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSetting6PtrOutput)
}

// WebfilterIpsUrlfilterSetting6ArrayInput is an input type that accepts WebfilterIpsUrlfilterSetting6Array and WebfilterIpsUrlfilterSetting6ArrayOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSetting6ArrayInput` via:
//
//          WebfilterIpsUrlfilterSetting6Array{ WebfilterIpsUrlfilterSetting6Args{...} }
type WebfilterIpsUrlfilterSetting6ArrayInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSetting6ArrayOutput() WebfilterIpsUrlfilterSetting6ArrayOutput
	ToWebfilterIpsUrlfilterSetting6ArrayOutputWithContext(context.Context) WebfilterIpsUrlfilterSetting6ArrayOutput
}

type WebfilterIpsUrlfilterSetting6Array []WebfilterIpsUrlfilterSetting6Input

func (WebfilterIpsUrlfilterSetting6Array) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WebfilterIpsUrlfilterSetting6)(nil))
}

func (i WebfilterIpsUrlfilterSetting6Array) ToWebfilterIpsUrlfilterSetting6ArrayOutput() WebfilterIpsUrlfilterSetting6ArrayOutput {
	return i.ToWebfilterIpsUrlfilterSetting6ArrayOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSetting6Array) ToWebfilterIpsUrlfilterSetting6ArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSetting6ArrayOutput)
}

// WebfilterIpsUrlfilterSetting6MapInput is an input type that accepts WebfilterIpsUrlfilterSetting6Map and WebfilterIpsUrlfilterSetting6MapOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSetting6MapInput` via:
//
//          WebfilterIpsUrlfilterSetting6Map{ "key": WebfilterIpsUrlfilterSetting6Args{...} }
type WebfilterIpsUrlfilterSetting6MapInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSetting6MapOutput() WebfilterIpsUrlfilterSetting6MapOutput
	ToWebfilterIpsUrlfilterSetting6MapOutputWithContext(context.Context) WebfilterIpsUrlfilterSetting6MapOutput
}

type WebfilterIpsUrlfilterSetting6Map map[string]WebfilterIpsUrlfilterSetting6Input

func (WebfilterIpsUrlfilterSetting6Map) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WebfilterIpsUrlfilterSetting6)(nil))
}

func (i WebfilterIpsUrlfilterSetting6Map) ToWebfilterIpsUrlfilterSetting6MapOutput() WebfilterIpsUrlfilterSetting6MapOutput {
	return i.ToWebfilterIpsUrlfilterSetting6MapOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSetting6Map) ToWebfilterIpsUrlfilterSetting6MapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSetting6MapOutput)
}

type WebfilterIpsUrlfilterSetting6Output struct {
	*pulumi.OutputState
}

func (WebfilterIpsUrlfilterSetting6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterIpsUrlfilterSetting6)(nil))
}

func (o WebfilterIpsUrlfilterSetting6Output) ToWebfilterIpsUrlfilterSetting6Output() WebfilterIpsUrlfilterSetting6Output {
	return o
}

func (o WebfilterIpsUrlfilterSetting6Output) ToWebfilterIpsUrlfilterSetting6OutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6Output {
	return o
}

func (o WebfilterIpsUrlfilterSetting6Output) ToWebfilterIpsUrlfilterSetting6PtrOutput() WebfilterIpsUrlfilterSetting6PtrOutput {
	return o.ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(context.Background())
}

func (o WebfilterIpsUrlfilterSetting6Output) ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6PtrOutput {
	return o.ApplyT(func(v WebfilterIpsUrlfilterSetting6) *WebfilterIpsUrlfilterSetting6 {
		return &v
	}).(WebfilterIpsUrlfilterSetting6PtrOutput)
}

type WebfilterIpsUrlfilterSetting6PtrOutput struct {
	*pulumi.OutputState
}

func (WebfilterIpsUrlfilterSetting6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting6)(nil))
}

func (o WebfilterIpsUrlfilterSetting6PtrOutput) ToWebfilterIpsUrlfilterSetting6PtrOutput() WebfilterIpsUrlfilterSetting6PtrOutput {
	return o
}

func (o WebfilterIpsUrlfilterSetting6PtrOutput) ToWebfilterIpsUrlfilterSetting6PtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6PtrOutput {
	return o
}

type WebfilterIpsUrlfilterSetting6ArrayOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSetting6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterIpsUrlfilterSetting6)(nil))
}

func (o WebfilterIpsUrlfilterSetting6ArrayOutput) ToWebfilterIpsUrlfilterSetting6ArrayOutput() WebfilterIpsUrlfilterSetting6ArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSetting6ArrayOutput) ToWebfilterIpsUrlfilterSetting6ArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6ArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSetting6ArrayOutput) Index(i pulumi.IntInput) WebfilterIpsUrlfilterSetting6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterIpsUrlfilterSetting6 {
		return vs[0].([]WebfilterIpsUrlfilterSetting6)[vs[1].(int)]
	}).(WebfilterIpsUrlfilterSetting6Output)
}

type WebfilterIpsUrlfilterSetting6MapOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSetting6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebfilterIpsUrlfilterSetting6)(nil))
}

func (o WebfilterIpsUrlfilterSetting6MapOutput) ToWebfilterIpsUrlfilterSetting6MapOutput() WebfilterIpsUrlfilterSetting6MapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSetting6MapOutput) ToWebfilterIpsUrlfilterSetting6MapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSetting6MapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSetting6MapOutput) MapIndex(k pulumi.StringInput) WebfilterIpsUrlfilterSetting6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WebfilterIpsUrlfilterSetting6 {
		return vs[0].(map[string]WebfilterIpsUrlfilterSetting6)[vs[1].(string)]
	}).(WebfilterIpsUrlfilterSetting6Output)
}

func init() {
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSetting6Output{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSetting6PtrOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSetting6ArrayOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSetting6MapOutput{})
}
