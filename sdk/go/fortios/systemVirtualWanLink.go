// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemVirtualWanLink struct {
	pulumi.CustomResourceState

	DynamicSortSubtable  pulumi.StringPtrOutput                            `pulumi:"dynamicSortSubtable"`
	FailAlertInterfaces  SystemVirtualWanLinkFailAlertInterfaceArrayOutput `pulumi:"failAlertInterfaces"`
	FailDetect           pulumi.StringOutput                               `pulumi:"failDetect"`
	GetAllTables         pulumi.StringPtrOutput                            `pulumi:"getAllTables"`
	HealthChecks         SystemVirtualWanLinkHealthCheckArrayOutput        `pulumi:"healthChecks"`
	LoadBalanceMode      pulumi.StringOutput                               `pulumi:"loadBalanceMode"`
	Members              SystemVirtualWanLinkMemberArrayOutput             `pulumi:"members"`
	NeighborHoldBootTime pulumi.IntOutput                                  `pulumi:"neighborHoldBootTime"`
	NeighborHoldDown     pulumi.StringOutput                               `pulumi:"neighborHoldDown"`
	NeighborHoldDownTime pulumi.IntOutput                                  `pulumi:"neighborHoldDownTime"`
	Neighbors            SystemVirtualWanLinkNeighborArrayOutput           `pulumi:"neighbors"`
	Services             SystemVirtualWanLinkServiceArrayOutput            `pulumi:"services"`
	Status               pulumi.StringOutput                               `pulumi:"status"`
	Vdomparam            pulumi.StringPtrOutput                            `pulumi:"vdomparam"`
	Zones                SystemVirtualWanLinkZoneArrayOutput               `pulumi:"zones"`
}

// NewSystemVirtualWanLink registers a new resource with the given unique name, arguments, and options.
func NewSystemVirtualWanLink(ctx *pulumi.Context,
	name string, args *SystemVirtualWanLinkArgs, opts ...pulumi.ResourceOption) (*SystemVirtualWanLink, error) {
	if args == nil {
		args = &SystemVirtualWanLinkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemVirtualWanLink
	err := ctx.RegisterResource("fortios:index/systemVirtualWanLink:SystemVirtualWanLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemVirtualWanLink gets an existing SystemVirtualWanLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemVirtualWanLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemVirtualWanLinkState, opts ...pulumi.ResourceOption) (*SystemVirtualWanLink, error) {
	var resource SystemVirtualWanLink
	err := ctx.ReadResource("fortios:index/systemVirtualWanLink:SystemVirtualWanLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemVirtualWanLink resources.
type systemVirtualWanLinkState struct {
	DynamicSortSubtable  *string                                  `pulumi:"dynamicSortSubtable"`
	FailAlertInterfaces  []SystemVirtualWanLinkFailAlertInterface `pulumi:"failAlertInterfaces"`
	FailDetect           *string                                  `pulumi:"failDetect"`
	GetAllTables         *string                                  `pulumi:"getAllTables"`
	HealthChecks         []SystemVirtualWanLinkHealthCheck        `pulumi:"healthChecks"`
	LoadBalanceMode      *string                                  `pulumi:"loadBalanceMode"`
	Members              []SystemVirtualWanLinkMember             `pulumi:"members"`
	NeighborHoldBootTime *int                                     `pulumi:"neighborHoldBootTime"`
	NeighborHoldDown     *string                                  `pulumi:"neighborHoldDown"`
	NeighborHoldDownTime *int                                     `pulumi:"neighborHoldDownTime"`
	Neighbors            []SystemVirtualWanLinkNeighbor           `pulumi:"neighbors"`
	Services             []SystemVirtualWanLinkService            `pulumi:"services"`
	Status               *string                                  `pulumi:"status"`
	Vdomparam            *string                                  `pulumi:"vdomparam"`
	Zones                []SystemVirtualWanLinkZone               `pulumi:"zones"`
}

type SystemVirtualWanLinkState struct {
	DynamicSortSubtable  pulumi.StringPtrInput
	FailAlertInterfaces  SystemVirtualWanLinkFailAlertInterfaceArrayInput
	FailDetect           pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	HealthChecks         SystemVirtualWanLinkHealthCheckArrayInput
	LoadBalanceMode      pulumi.StringPtrInput
	Members              SystemVirtualWanLinkMemberArrayInput
	NeighborHoldBootTime pulumi.IntPtrInput
	NeighborHoldDown     pulumi.StringPtrInput
	NeighborHoldDownTime pulumi.IntPtrInput
	Neighbors            SystemVirtualWanLinkNeighborArrayInput
	Services             SystemVirtualWanLinkServiceArrayInput
	Status               pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Zones                SystemVirtualWanLinkZoneArrayInput
}

func (SystemVirtualWanLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualWanLinkState)(nil)).Elem()
}

type systemVirtualWanLinkArgs struct {
	DynamicSortSubtable  *string                                  `pulumi:"dynamicSortSubtable"`
	FailAlertInterfaces  []SystemVirtualWanLinkFailAlertInterface `pulumi:"failAlertInterfaces"`
	FailDetect           *string                                  `pulumi:"failDetect"`
	GetAllTables         *string                                  `pulumi:"getAllTables"`
	HealthChecks         []SystemVirtualWanLinkHealthCheck        `pulumi:"healthChecks"`
	LoadBalanceMode      *string                                  `pulumi:"loadBalanceMode"`
	Members              []SystemVirtualWanLinkMember             `pulumi:"members"`
	NeighborHoldBootTime *int                                     `pulumi:"neighborHoldBootTime"`
	NeighborHoldDown     *string                                  `pulumi:"neighborHoldDown"`
	NeighborHoldDownTime *int                                     `pulumi:"neighborHoldDownTime"`
	Neighbors            []SystemVirtualWanLinkNeighbor           `pulumi:"neighbors"`
	Services             []SystemVirtualWanLinkService            `pulumi:"services"`
	Status               *string                                  `pulumi:"status"`
	Vdomparam            *string                                  `pulumi:"vdomparam"`
	Zones                []SystemVirtualWanLinkZone               `pulumi:"zones"`
}

// The set of arguments for constructing a SystemVirtualWanLink resource.
type SystemVirtualWanLinkArgs struct {
	DynamicSortSubtable  pulumi.StringPtrInput
	FailAlertInterfaces  SystemVirtualWanLinkFailAlertInterfaceArrayInput
	FailDetect           pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	HealthChecks         SystemVirtualWanLinkHealthCheckArrayInput
	LoadBalanceMode      pulumi.StringPtrInput
	Members              SystemVirtualWanLinkMemberArrayInput
	NeighborHoldBootTime pulumi.IntPtrInput
	NeighborHoldDown     pulumi.StringPtrInput
	NeighborHoldDownTime pulumi.IntPtrInput
	Neighbors            SystemVirtualWanLinkNeighborArrayInput
	Services             SystemVirtualWanLinkServiceArrayInput
	Status               pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Zones                SystemVirtualWanLinkZoneArrayInput
}

func (SystemVirtualWanLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualWanLinkArgs)(nil)).Elem()
}

type SystemVirtualWanLinkInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkOutput() SystemVirtualWanLinkOutput
	ToSystemVirtualWanLinkOutputWithContext(ctx context.Context) SystemVirtualWanLinkOutput
}

func (*SystemVirtualWanLink) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualWanLink)(nil)).Elem()
}

func (i *SystemVirtualWanLink) ToSystemVirtualWanLinkOutput() SystemVirtualWanLinkOutput {
	return i.ToSystemVirtualWanLinkOutputWithContext(context.Background())
}

func (i *SystemVirtualWanLink) ToSystemVirtualWanLinkOutputWithContext(ctx context.Context) SystemVirtualWanLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkOutput)
}

// SystemVirtualWanLinkArrayInput is an input type that accepts SystemVirtualWanLinkArray and SystemVirtualWanLinkArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkArrayInput` via:
//
//	SystemVirtualWanLinkArray{ SystemVirtualWanLinkArgs{...} }
type SystemVirtualWanLinkArrayInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkArrayOutput() SystemVirtualWanLinkArrayOutput
	ToSystemVirtualWanLinkArrayOutputWithContext(context.Context) SystemVirtualWanLinkArrayOutput
}

type SystemVirtualWanLinkArray []SystemVirtualWanLinkInput

func (SystemVirtualWanLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualWanLink)(nil)).Elem()
}

func (i SystemVirtualWanLinkArray) ToSystemVirtualWanLinkArrayOutput() SystemVirtualWanLinkArrayOutput {
	return i.ToSystemVirtualWanLinkArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkArray) ToSystemVirtualWanLinkArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkArrayOutput)
}

// SystemVirtualWanLinkMapInput is an input type that accepts SystemVirtualWanLinkMap and SystemVirtualWanLinkMapOutput values.
// You can construct a concrete instance of `SystemVirtualWanLinkMapInput` via:
//
//	SystemVirtualWanLinkMap{ "key": SystemVirtualWanLinkArgs{...} }
type SystemVirtualWanLinkMapInput interface {
	pulumi.Input

	ToSystemVirtualWanLinkMapOutput() SystemVirtualWanLinkMapOutput
	ToSystemVirtualWanLinkMapOutputWithContext(context.Context) SystemVirtualWanLinkMapOutput
}

type SystemVirtualWanLinkMap map[string]SystemVirtualWanLinkInput

func (SystemVirtualWanLinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualWanLink)(nil)).Elem()
}

func (i SystemVirtualWanLinkMap) ToSystemVirtualWanLinkMapOutput() SystemVirtualWanLinkMapOutput {
	return i.ToSystemVirtualWanLinkMapOutputWithContext(context.Background())
}

func (i SystemVirtualWanLinkMap) ToSystemVirtualWanLinkMapOutputWithContext(ctx context.Context) SystemVirtualWanLinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWanLinkMapOutput)
}

type SystemVirtualWanLinkOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualWanLink)(nil)).Elem()
}

func (o SystemVirtualWanLinkOutput) ToSystemVirtualWanLinkOutput() SystemVirtualWanLinkOutput {
	return o
}

func (o SystemVirtualWanLinkOutput) ToSystemVirtualWanLinkOutputWithContext(ctx context.Context) SystemVirtualWanLinkOutput {
	return o
}

func (o SystemVirtualWanLinkOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkOutput) FailAlertInterfaces() SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkFailAlertInterfaceArrayOutput {
		return v.FailAlertInterfaces
	}).(SystemVirtualWanLinkFailAlertInterfaceArrayOutput)
}

func (o SystemVirtualWanLinkOutput) FailDetect() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringOutput { return v.FailDetect }).(pulumi.StringOutput)
}

func (o SystemVirtualWanLinkOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkOutput) HealthChecks() SystemVirtualWanLinkHealthCheckArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkHealthCheckArrayOutput { return v.HealthChecks }).(SystemVirtualWanLinkHealthCheckArrayOutput)
}

func (o SystemVirtualWanLinkOutput) LoadBalanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringOutput { return v.LoadBalanceMode }).(pulumi.StringOutput)
}

func (o SystemVirtualWanLinkOutput) Members() SystemVirtualWanLinkMemberArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkMemberArrayOutput { return v.Members }).(SystemVirtualWanLinkMemberArrayOutput)
}

func (o SystemVirtualWanLinkOutput) NeighborHoldBootTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.IntOutput { return v.NeighborHoldBootTime }).(pulumi.IntOutput)
}

func (o SystemVirtualWanLinkOutput) NeighborHoldDown() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringOutput { return v.NeighborHoldDown }).(pulumi.StringOutput)
}

func (o SystemVirtualWanLinkOutput) NeighborHoldDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.IntOutput { return v.NeighborHoldDownTime }).(pulumi.IntOutput)
}

func (o SystemVirtualWanLinkOutput) Neighbors() SystemVirtualWanLinkNeighborArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkNeighborArrayOutput { return v.Neighbors }).(SystemVirtualWanLinkNeighborArrayOutput)
}

func (o SystemVirtualWanLinkOutput) Services() SystemVirtualWanLinkServiceArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkServiceArrayOutput { return v.Services }).(SystemVirtualWanLinkServiceArrayOutput)
}

func (o SystemVirtualWanLinkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemVirtualWanLinkOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWanLinkOutput) Zones() SystemVirtualWanLinkZoneArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWanLink) SystemVirtualWanLinkZoneArrayOutput { return v.Zones }).(SystemVirtualWanLinkZoneArrayOutput)
}

type SystemVirtualWanLinkArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualWanLink)(nil)).Elem()
}

func (o SystemVirtualWanLinkArrayOutput) ToSystemVirtualWanLinkArrayOutput() SystemVirtualWanLinkArrayOutput {
	return o
}

func (o SystemVirtualWanLinkArrayOutput) ToSystemVirtualWanLinkArrayOutputWithContext(ctx context.Context) SystemVirtualWanLinkArrayOutput {
	return o
}

func (o SystemVirtualWanLinkArrayOutput) Index(i pulumi.IntInput) SystemVirtualWanLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemVirtualWanLink {
		return vs[0].([]*SystemVirtualWanLink)[vs[1].(int)]
	}).(SystemVirtualWanLinkOutput)
}

type SystemVirtualWanLinkMapOutput struct{ *pulumi.OutputState }

func (SystemVirtualWanLinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualWanLink)(nil)).Elem()
}

func (o SystemVirtualWanLinkMapOutput) ToSystemVirtualWanLinkMapOutput() SystemVirtualWanLinkMapOutput {
	return o
}

func (o SystemVirtualWanLinkMapOutput) ToSystemVirtualWanLinkMapOutputWithContext(ctx context.Context) SystemVirtualWanLinkMapOutput {
	return o
}

func (o SystemVirtualWanLinkMapOutput) MapIndex(k pulumi.StringInput) SystemVirtualWanLinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemVirtualWanLink {
		return vs[0].(map[string]*SystemVirtualWanLink)[vs[1].(string)]
	}).(SystemVirtualWanLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkInput)(nil)).Elem(), &SystemVirtualWanLink{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkArrayInput)(nil)).Elem(), SystemVirtualWanLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWanLinkMapInput)(nil)).Elem(), SystemVirtualWanLinkMap{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWanLinkMapOutput{})
}
