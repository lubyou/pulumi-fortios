// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemVirtualWirePair struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	Members             SystemVirtualWirePairMemberArrayOutput `pulumi:"members"`
	Name                pulumi.StringOutput                    `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
	VlanFilter          pulumi.StringOutput                    `pulumi:"vlanFilter"`
	WildcardVlan        pulumi.StringOutput                    `pulumi:"wildcardVlan"`
}

// NewSystemVirtualWirePair registers a new resource with the given unique name, arguments, and options.
func NewSystemVirtualWirePair(ctx *pulumi.Context,
	name string, args *SystemVirtualWirePairArgs, opts ...pulumi.ResourceOption) (*SystemVirtualWirePair, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemVirtualWirePair
	err := ctx.RegisterResource("fortios:index/systemVirtualWirePair:SystemVirtualWirePair", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemVirtualWirePair gets an existing SystemVirtualWirePair resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemVirtualWirePair(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemVirtualWirePairState, opts ...pulumi.ResourceOption) (*SystemVirtualWirePair, error) {
	var resource SystemVirtualWirePair
	err := ctx.ReadResource("fortios:index/systemVirtualWirePair:SystemVirtualWirePair", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemVirtualWirePair resources.
type systemVirtualWirePairState struct {
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	Members             []SystemVirtualWirePairMember `pulumi:"members"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
	VlanFilter          *string                       `pulumi:"vlanFilter"`
	WildcardVlan        *string                       `pulumi:"wildcardVlan"`
}

type SystemVirtualWirePairState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Members             SystemVirtualWirePairMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	VlanFilter          pulumi.StringPtrInput
	WildcardVlan        pulumi.StringPtrInput
}

func (SystemVirtualWirePairState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualWirePairState)(nil)).Elem()
}

type systemVirtualWirePairArgs struct {
	DynamicSortSubtable *string                       `pulumi:"dynamicSortSubtable"`
	Members             []SystemVirtualWirePairMember `pulumi:"members"`
	Name                *string                       `pulumi:"name"`
	Vdomparam           *string                       `pulumi:"vdomparam"`
	VlanFilter          *string                       `pulumi:"vlanFilter"`
	WildcardVlan        *string                       `pulumi:"wildcardVlan"`
}

// The set of arguments for constructing a SystemVirtualWirePair resource.
type SystemVirtualWirePairArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Members             SystemVirtualWirePairMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	VlanFilter          pulumi.StringPtrInput
	WildcardVlan        pulumi.StringPtrInput
}

func (SystemVirtualWirePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemVirtualWirePairArgs)(nil)).Elem()
}

type SystemVirtualWirePairInput interface {
	pulumi.Input

	ToSystemVirtualWirePairOutput() SystemVirtualWirePairOutput
	ToSystemVirtualWirePairOutputWithContext(ctx context.Context) SystemVirtualWirePairOutput
}

func (*SystemVirtualWirePair) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualWirePair)(nil)).Elem()
}

func (i *SystemVirtualWirePair) ToSystemVirtualWirePairOutput() SystemVirtualWirePairOutput {
	return i.ToSystemVirtualWirePairOutputWithContext(context.Background())
}

func (i *SystemVirtualWirePair) ToSystemVirtualWirePairOutputWithContext(ctx context.Context) SystemVirtualWirePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWirePairOutput)
}

// SystemVirtualWirePairArrayInput is an input type that accepts SystemVirtualWirePairArray and SystemVirtualWirePairArrayOutput values.
// You can construct a concrete instance of `SystemVirtualWirePairArrayInput` via:
//
//	SystemVirtualWirePairArray{ SystemVirtualWirePairArgs{...} }
type SystemVirtualWirePairArrayInput interface {
	pulumi.Input

	ToSystemVirtualWirePairArrayOutput() SystemVirtualWirePairArrayOutput
	ToSystemVirtualWirePairArrayOutputWithContext(context.Context) SystemVirtualWirePairArrayOutput
}

type SystemVirtualWirePairArray []SystemVirtualWirePairInput

func (SystemVirtualWirePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualWirePair)(nil)).Elem()
}

func (i SystemVirtualWirePairArray) ToSystemVirtualWirePairArrayOutput() SystemVirtualWirePairArrayOutput {
	return i.ToSystemVirtualWirePairArrayOutputWithContext(context.Background())
}

func (i SystemVirtualWirePairArray) ToSystemVirtualWirePairArrayOutputWithContext(ctx context.Context) SystemVirtualWirePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWirePairArrayOutput)
}

// SystemVirtualWirePairMapInput is an input type that accepts SystemVirtualWirePairMap and SystemVirtualWirePairMapOutput values.
// You can construct a concrete instance of `SystemVirtualWirePairMapInput` via:
//
//	SystemVirtualWirePairMap{ "key": SystemVirtualWirePairArgs{...} }
type SystemVirtualWirePairMapInput interface {
	pulumi.Input

	ToSystemVirtualWirePairMapOutput() SystemVirtualWirePairMapOutput
	ToSystemVirtualWirePairMapOutputWithContext(context.Context) SystemVirtualWirePairMapOutput
}

type SystemVirtualWirePairMap map[string]SystemVirtualWirePairInput

func (SystemVirtualWirePairMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualWirePair)(nil)).Elem()
}

func (i SystemVirtualWirePairMap) ToSystemVirtualWirePairMapOutput() SystemVirtualWirePairMapOutput {
	return i.ToSystemVirtualWirePairMapOutputWithContext(context.Background())
}

func (i SystemVirtualWirePairMap) ToSystemVirtualWirePairMapOutputWithContext(ctx context.Context) SystemVirtualWirePairMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemVirtualWirePairMapOutput)
}

type SystemVirtualWirePairOutput struct{ *pulumi.OutputState }

func (SystemVirtualWirePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemVirtualWirePair)(nil)).Elem()
}

func (o SystemVirtualWirePairOutput) ToSystemVirtualWirePairOutput() SystemVirtualWirePairOutput {
	return o
}

func (o SystemVirtualWirePairOutput) ToSystemVirtualWirePairOutputWithContext(ctx context.Context) SystemVirtualWirePairOutput {
	return o
}

func (o SystemVirtualWirePairOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWirePairOutput) Members() SystemVirtualWirePairMemberArrayOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) SystemVirtualWirePairMemberArrayOutput { return v.Members }).(SystemVirtualWirePairMemberArrayOutput)
}

func (o SystemVirtualWirePairOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemVirtualWirePairOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SystemVirtualWirePairOutput) VlanFilter() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) pulumi.StringOutput { return v.VlanFilter }).(pulumi.StringOutput)
}

func (o SystemVirtualWirePairOutput) WildcardVlan() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemVirtualWirePair) pulumi.StringOutput { return v.WildcardVlan }).(pulumi.StringOutput)
}

type SystemVirtualWirePairArrayOutput struct{ *pulumi.OutputState }

func (SystemVirtualWirePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemVirtualWirePair)(nil)).Elem()
}

func (o SystemVirtualWirePairArrayOutput) ToSystemVirtualWirePairArrayOutput() SystemVirtualWirePairArrayOutput {
	return o
}

func (o SystemVirtualWirePairArrayOutput) ToSystemVirtualWirePairArrayOutputWithContext(ctx context.Context) SystemVirtualWirePairArrayOutput {
	return o
}

func (o SystemVirtualWirePairArrayOutput) Index(i pulumi.IntInput) SystemVirtualWirePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemVirtualWirePair {
		return vs[0].([]*SystemVirtualWirePair)[vs[1].(int)]
	}).(SystemVirtualWirePairOutput)
}

type SystemVirtualWirePairMapOutput struct{ *pulumi.OutputState }

func (SystemVirtualWirePairMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemVirtualWirePair)(nil)).Elem()
}

func (o SystemVirtualWirePairMapOutput) ToSystemVirtualWirePairMapOutput() SystemVirtualWirePairMapOutput {
	return o
}

func (o SystemVirtualWirePairMapOutput) ToSystemVirtualWirePairMapOutputWithContext(ctx context.Context) SystemVirtualWirePairMapOutput {
	return o
}

func (o SystemVirtualWirePairMapOutput) MapIndex(k pulumi.StringInput) SystemVirtualWirePairOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemVirtualWirePair {
		return vs[0].(map[string]*SystemVirtualWirePair)[vs[1].(string)]
	}).(SystemVirtualWirePairOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWirePairInput)(nil)).Elem(), &SystemVirtualWirePair{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWirePairArrayInput)(nil)).Elem(), SystemVirtualWirePairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemVirtualWirePairMapInput)(nil)).Elem(), SystemVirtualWirePairMap{})
	pulumi.RegisterOutputType(SystemVirtualWirePairOutput{})
	pulumi.RegisterOutputType(SystemVirtualWirePairArrayOutput{})
	pulumi.RegisterOutputType(SystemVirtualWirePairMapOutput{})
}
