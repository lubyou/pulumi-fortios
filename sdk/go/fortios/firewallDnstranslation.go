// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallDnstranslation struct {
	pulumi.CustomResourceState

	Dst       pulumi.StringOutput    `pulumi:"dst"`
	Fosid     pulumi.IntOutput       `pulumi:"fosid"`
	Netmask   pulumi.StringOutput    `pulumi:"netmask"`
	Src       pulumi.StringOutput    `pulumi:"src"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallDnstranslation registers a new resource with the given unique name, arguments, and options.
func NewFirewallDnstranslation(ctx *pulumi.Context,
	name string, args *FirewallDnstranslationArgs, opts ...pulumi.ResourceOption) (*FirewallDnstranslation, error) {
	if args == nil {
		args = &FirewallDnstranslationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallDnstranslation
	err := ctx.RegisterResource("fortios:index/firewallDnstranslation:FirewallDnstranslation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallDnstranslation gets an existing FirewallDnstranslation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallDnstranslation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallDnstranslationState, opts ...pulumi.ResourceOption) (*FirewallDnstranslation, error) {
	var resource FirewallDnstranslation
	err := ctx.ReadResource("fortios:index/firewallDnstranslation:FirewallDnstranslation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallDnstranslation resources.
type firewallDnstranslationState struct {
	Dst       *string `pulumi:"dst"`
	Fosid     *int    `pulumi:"fosid"`
	Netmask   *string `pulumi:"netmask"`
	Src       *string `pulumi:"src"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallDnstranslationState struct {
	Dst       pulumi.StringPtrInput
	Fosid     pulumi.IntPtrInput
	Netmask   pulumi.StringPtrInput
	Src       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (FirewallDnstranslationState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDnstranslationState)(nil)).Elem()
}

type firewallDnstranslationArgs struct {
	Dst       *string `pulumi:"dst"`
	Fosid     *int    `pulumi:"fosid"`
	Netmask   *string `pulumi:"netmask"`
	Src       *string `pulumi:"src"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallDnstranslation resource.
type FirewallDnstranslationArgs struct {
	Dst       pulumi.StringPtrInput
	Fosid     pulumi.IntPtrInput
	Netmask   pulumi.StringPtrInput
	Src       pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (FirewallDnstranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDnstranslationArgs)(nil)).Elem()
}

type FirewallDnstranslationInput interface {
	pulumi.Input

	ToFirewallDnstranslationOutput() FirewallDnstranslationOutput
	ToFirewallDnstranslationOutputWithContext(ctx context.Context) FirewallDnstranslationOutput
}

func (*FirewallDnstranslation) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDnstranslation)(nil)).Elem()
}

func (i *FirewallDnstranslation) ToFirewallDnstranslationOutput() FirewallDnstranslationOutput {
	return i.ToFirewallDnstranslationOutputWithContext(context.Background())
}

func (i *FirewallDnstranslation) ToFirewallDnstranslationOutputWithContext(ctx context.Context) FirewallDnstranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDnstranslationOutput)
}

// FirewallDnstranslationArrayInput is an input type that accepts FirewallDnstranslationArray and FirewallDnstranslationArrayOutput values.
// You can construct a concrete instance of `FirewallDnstranslationArrayInput` via:
//
//	FirewallDnstranslationArray{ FirewallDnstranslationArgs{...} }
type FirewallDnstranslationArrayInput interface {
	pulumi.Input

	ToFirewallDnstranslationArrayOutput() FirewallDnstranslationArrayOutput
	ToFirewallDnstranslationArrayOutputWithContext(context.Context) FirewallDnstranslationArrayOutput
}

type FirewallDnstranslationArray []FirewallDnstranslationInput

func (FirewallDnstranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallDnstranslation)(nil)).Elem()
}

func (i FirewallDnstranslationArray) ToFirewallDnstranslationArrayOutput() FirewallDnstranslationArrayOutput {
	return i.ToFirewallDnstranslationArrayOutputWithContext(context.Background())
}

func (i FirewallDnstranslationArray) ToFirewallDnstranslationArrayOutputWithContext(ctx context.Context) FirewallDnstranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDnstranslationArrayOutput)
}

// FirewallDnstranslationMapInput is an input type that accepts FirewallDnstranslationMap and FirewallDnstranslationMapOutput values.
// You can construct a concrete instance of `FirewallDnstranslationMapInput` via:
//
//	FirewallDnstranslationMap{ "key": FirewallDnstranslationArgs{...} }
type FirewallDnstranslationMapInput interface {
	pulumi.Input

	ToFirewallDnstranslationMapOutput() FirewallDnstranslationMapOutput
	ToFirewallDnstranslationMapOutputWithContext(context.Context) FirewallDnstranslationMapOutput
}

type FirewallDnstranslationMap map[string]FirewallDnstranslationInput

func (FirewallDnstranslationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallDnstranslation)(nil)).Elem()
}

func (i FirewallDnstranslationMap) ToFirewallDnstranslationMapOutput() FirewallDnstranslationMapOutput {
	return i.ToFirewallDnstranslationMapOutputWithContext(context.Background())
}

func (i FirewallDnstranslationMap) ToFirewallDnstranslationMapOutputWithContext(ctx context.Context) FirewallDnstranslationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDnstranslationMapOutput)
}

type FirewallDnstranslationOutput struct{ *pulumi.OutputState }

func (FirewallDnstranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDnstranslation)(nil)).Elem()
}

func (o FirewallDnstranslationOutput) ToFirewallDnstranslationOutput() FirewallDnstranslationOutput {
	return o
}

func (o FirewallDnstranslationOutput) ToFirewallDnstranslationOutputWithContext(ctx context.Context) FirewallDnstranslationOutput {
	return o
}

func (o FirewallDnstranslationOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDnstranslation) pulumi.StringOutput { return v.Dst }).(pulumi.StringOutput)
}

func (o FirewallDnstranslationOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallDnstranslation) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o FirewallDnstranslationOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDnstranslation) pulumi.StringOutput { return v.Netmask }).(pulumi.StringOutput)
}

func (o FirewallDnstranslationOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallDnstranslation) pulumi.StringOutput { return v.Src }).(pulumi.StringOutput)
}

func (o FirewallDnstranslationOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallDnstranslation) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallDnstranslationArrayOutput struct{ *pulumi.OutputState }

func (FirewallDnstranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallDnstranslation)(nil)).Elem()
}

func (o FirewallDnstranslationArrayOutput) ToFirewallDnstranslationArrayOutput() FirewallDnstranslationArrayOutput {
	return o
}

func (o FirewallDnstranslationArrayOutput) ToFirewallDnstranslationArrayOutputWithContext(ctx context.Context) FirewallDnstranslationArrayOutput {
	return o
}

func (o FirewallDnstranslationArrayOutput) Index(i pulumi.IntInput) FirewallDnstranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallDnstranslation {
		return vs[0].([]*FirewallDnstranslation)[vs[1].(int)]
	}).(FirewallDnstranslationOutput)
}

type FirewallDnstranslationMapOutput struct{ *pulumi.OutputState }

func (FirewallDnstranslationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallDnstranslation)(nil)).Elem()
}

func (o FirewallDnstranslationMapOutput) ToFirewallDnstranslationMapOutput() FirewallDnstranslationMapOutput {
	return o
}

func (o FirewallDnstranslationMapOutput) ToFirewallDnstranslationMapOutputWithContext(ctx context.Context) FirewallDnstranslationMapOutput {
	return o
}

func (o FirewallDnstranslationMapOutput) MapIndex(k pulumi.StringInput) FirewallDnstranslationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallDnstranslation {
		return vs[0].(map[string]*FirewallDnstranslation)[vs[1].(string)]
	}).(FirewallDnstranslationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDnstranslationInput)(nil)).Elem(), &FirewallDnstranslation{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDnstranslationArrayInput)(nil)).Elem(), FirewallDnstranslationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDnstranslationMapInput)(nil)).Elem(), FirewallDnstranslationMap{})
	pulumi.RegisterOutputType(FirewallDnstranslationOutput{})
	pulumi.RegisterOutputType(FirewallDnstranslationArrayOutput{})
	pulumi.RegisterOutputType(FirewallDnstranslationMapOutput{})
}
