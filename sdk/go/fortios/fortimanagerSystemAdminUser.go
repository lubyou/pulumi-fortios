// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports Create/Read/Update/Delete admin user for FortiManager
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFortimanagerSystemAdminUser(ctx, "test1", &fortios.FortimanagerSystemAdminUserArgs{
// 			Description: pulumi.String("local user"),
// 			Password:    pulumi.String("123"),
// 			Profileid:   pulumi.String("Standard_User"),
// 			RpcPermit:   pulumi.String("read"),
// 			Trusthost1:  pulumi.String("1.1.1.1 255.255.255.255"),
// 			UserType:    pulumi.String("local"),
// 			Userid:      pulumi.String("user1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = fortios.NewFortimanagerSystemAdminUser(ctx, "test2", &fortios.FortimanagerSystemAdminUserArgs{
// 			Description: pulumi.String("api user"),
// 			Password:    pulumi.String("098"),
// 			Profileid:   pulumi.String("Standard_User"),
// 			RpcPermit:   pulumi.String("read-write"),
// 			Trusthost1:  pulumi.String("2.2.2.2 255.255.255.255"),
// 			Userid:      pulumi.String("user2"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type FortimanagerSystemAdminUser struct {
	pulumi.CustomResourceState

	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Password.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Profile id.
	Profileid pulumi.StringPtrOutput `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer pulumi.StringPtrOutput `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrOutput `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrOutput `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrOutput `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrOutput `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrOutput `pulumi:"userType"`
	// User name.
	Userid pulumi.StringOutput `pulumi:"userid"`
}

// NewFortimanagerSystemAdminUser registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerSystemAdminUser(ctx *pulumi.Context,
	name string, args *FortimanagerSystemAdminUserArgs, opts ...pulumi.ResourceOption) (*FortimanagerSystemAdminUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Userid == nil {
		return nil, errors.New("invalid value for required argument 'Userid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FortimanagerSystemAdminUser
	err := ctx.RegisterResource("fortios:index/fortimanagerSystemAdminUser:FortimanagerSystemAdminUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerSystemAdminUser gets an existing FortimanagerSystemAdminUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerSystemAdminUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerSystemAdminUserState, opts ...pulumi.ResourceOption) (*FortimanagerSystemAdminUser, error) {
	var resource FortimanagerSystemAdminUser
	err := ctx.ReadResource("fortios:index/fortimanagerSystemAdminUser:FortimanagerSystemAdminUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerSystemAdminUser resources.
type fortimanagerSystemAdminUserState struct {
	// Description.
	Description *string `pulumi:"description"`
	// Password.
	Password *string `pulumi:"password"`
	// Profile id.
	Profileid *string `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer *string `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit *string `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 *string `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType *string `pulumi:"userType"`
	// User name.
	Userid *string `pulumi:"userid"`
}

type FortimanagerSystemAdminUserState struct {
	// Description.
	Description pulumi.StringPtrInput
	// Password.
	Password pulumi.StringPtrInput
	// Profile id.
	Profileid pulumi.StringPtrInput
	// RADIUS server name.
	RadiusServer pulumi.StringPtrInput
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrInput
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrInput
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrInput
	// User name.
	Userid pulumi.StringPtrInput
}

func (FortimanagerSystemAdminUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemAdminUserState)(nil)).Elem()
}

type fortimanagerSystemAdminUserArgs struct {
	// Description.
	Description *string `pulumi:"description"`
	// Password.
	Password *string `pulumi:"password"`
	// Profile id.
	Profileid *string `pulumi:"profileid"`
	// RADIUS server name.
	RadiusServer *string `pulumi:"radiusServer"`
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit *string `pulumi:"rpcPermit"`
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 *string `pulumi:"trusthost1"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 *string `pulumi:"trusthost2"`
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 *string `pulumi:"trusthost3"`
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType *string `pulumi:"userType"`
	// User name.
	Userid string `pulumi:"userid"`
}

// The set of arguments for constructing a FortimanagerSystemAdminUser resource.
type FortimanagerSystemAdminUserArgs struct {
	// Description.
	Description pulumi.StringPtrInput
	// Password.
	Password pulumi.StringPtrInput
	// Profile id.
	Profileid pulumi.StringPtrInput
	// RADIUS server name.
	RadiusServer pulumi.StringPtrInput
	// Rpc permit, Enum: ["read-write", "none", "read"]
	RpcPermit pulumi.StringPtrInput
	// Admin user trusted host IP, default 0.0.0.0 0.0.0.0 for all.
	Trusthost1 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost2 pulumi.StringPtrInput
	// Admin user trusted host IP, default 255.255.255.255 255.255.255.255 for none.
	Trusthost3 pulumi.StringPtrInput
	// User type, Enum: ["local", "radius", "ldap", "tacacs-plus", "pki-auth", "group"]
	UserType pulumi.StringPtrInput
	// User name.
	Userid pulumi.StringInput
}

func (FortimanagerSystemAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemAdminUserArgs)(nil)).Elem()
}

type FortimanagerSystemAdminUserInput interface {
	pulumi.Input

	ToFortimanagerSystemAdminUserOutput() FortimanagerSystemAdminUserOutput
	ToFortimanagerSystemAdminUserOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserOutput
}

func (*FortimanagerSystemAdminUser) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemAdminUser)(nil)).Elem()
}

func (i *FortimanagerSystemAdminUser) ToFortimanagerSystemAdminUserOutput() FortimanagerSystemAdminUserOutput {
	return i.ToFortimanagerSystemAdminUserOutputWithContext(context.Background())
}

func (i *FortimanagerSystemAdminUser) ToFortimanagerSystemAdminUserOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemAdminUserOutput)
}

// FortimanagerSystemAdminUserArrayInput is an input type that accepts FortimanagerSystemAdminUserArray and FortimanagerSystemAdminUserArrayOutput values.
// You can construct a concrete instance of `FortimanagerSystemAdminUserArrayInput` via:
//
//          FortimanagerSystemAdminUserArray{ FortimanagerSystemAdminUserArgs{...} }
type FortimanagerSystemAdminUserArrayInput interface {
	pulumi.Input

	ToFortimanagerSystemAdminUserArrayOutput() FortimanagerSystemAdminUserArrayOutput
	ToFortimanagerSystemAdminUserArrayOutputWithContext(context.Context) FortimanagerSystemAdminUserArrayOutput
}

type FortimanagerSystemAdminUserArray []FortimanagerSystemAdminUserInput

func (FortimanagerSystemAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemAdminUser)(nil)).Elem()
}

func (i FortimanagerSystemAdminUserArray) ToFortimanagerSystemAdminUserArrayOutput() FortimanagerSystemAdminUserArrayOutput {
	return i.ToFortimanagerSystemAdminUserArrayOutputWithContext(context.Background())
}

func (i FortimanagerSystemAdminUserArray) ToFortimanagerSystemAdminUserArrayOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemAdminUserArrayOutput)
}

// FortimanagerSystemAdminUserMapInput is an input type that accepts FortimanagerSystemAdminUserMap and FortimanagerSystemAdminUserMapOutput values.
// You can construct a concrete instance of `FortimanagerSystemAdminUserMapInput` via:
//
//          FortimanagerSystemAdminUserMap{ "key": FortimanagerSystemAdminUserArgs{...} }
type FortimanagerSystemAdminUserMapInput interface {
	pulumi.Input

	ToFortimanagerSystemAdminUserMapOutput() FortimanagerSystemAdminUserMapOutput
	ToFortimanagerSystemAdminUserMapOutputWithContext(context.Context) FortimanagerSystemAdminUserMapOutput
}

type FortimanagerSystemAdminUserMap map[string]FortimanagerSystemAdminUserInput

func (FortimanagerSystemAdminUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemAdminUser)(nil)).Elem()
}

func (i FortimanagerSystemAdminUserMap) ToFortimanagerSystemAdminUserMapOutput() FortimanagerSystemAdminUserMapOutput {
	return i.ToFortimanagerSystemAdminUserMapOutputWithContext(context.Background())
}

func (i FortimanagerSystemAdminUserMap) ToFortimanagerSystemAdminUserMapOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemAdminUserMapOutput)
}

type FortimanagerSystemAdminUserOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemAdminUser)(nil)).Elem()
}

func (o FortimanagerSystemAdminUserOutput) ToFortimanagerSystemAdminUserOutput() FortimanagerSystemAdminUserOutput {
	return o
}

func (o FortimanagerSystemAdminUserOutput) ToFortimanagerSystemAdminUserOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserOutput {
	return o
}

type FortimanagerSystemAdminUserArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemAdminUser)(nil)).Elem()
}

func (o FortimanagerSystemAdminUserArrayOutput) ToFortimanagerSystemAdminUserArrayOutput() FortimanagerSystemAdminUserArrayOutput {
	return o
}

func (o FortimanagerSystemAdminUserArrayOutput) ToFortimanagerSystemAdminUserArrayOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserArrayOutput {
	return o
}

func (o FortimanagerSystemAdminUserArrayOutput) Index(i pulumi.IntInput) FortimanagerSystemAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerSystemAdminUser {
		return vs[0].([]*FortimanagerSystemAdminUser)[vs[1].(int)]
	}).(FortimanagerSystemAdminUserOutput)
}

type FortimanagerSystemAdminUserMapOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemAdminUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemAdminUser)(nil)).Elem()
}

func (o FortimanagerSystemAdminUserMapOutput) ToFortimanagerSystemAdminUserMapOutput() FortimanagerSystemAdminUserMapOutput {
	return o
}

func (o FortimanagerSystemAdminUserMapOutput) ToFortimanagerSystemAdminUserMapOutputWithContext(ctx context.Context) FortimanagerSystemAdminUserMapOutput {
	return o
}

func (o FortimanagerSystemAdminUserMapOutput) MapIndex(k pulumi.StringInput) FortimanagerSystemAdminUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerSystemAdminUser {
		return vs[0].(map[string]*FortimanagerSystemAdminUser)[vs[1].(string)]
	}).(FortimanagerSystemAdminUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemAdminUserInput)(nil)).Elem(), &FortimanagerSystemAdminUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemAdminUserArrayInput)(nil)).Elem(), FortimanagerSystemAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemAdminUserMapInput)(nil)).Elem(), FortimanagerSystemAdminUserMap{})
	pulumi.RegisterOutputType(FortimanagerSystemAdminUserOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemAdminUserArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemAdminUserMapOutput{})
}
