// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebProxyDebugUrl struct {
	pulumi.CustomResourceState

	Exact      pulumi.StringOutput    `pulumi:"exact"`
	Name       pulumi.StringOutput    `pulumi:"name"`
	Status     pulumi.StringOutput    `pulumi:"status"`
	UrlPattern pulumi.StringOutput    `pulumi:"urlPattern"`
	Vdomparam  pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebProxyDebugUrl registers a new resource with the given unique name, arguments, and options.
func NewWebProxyDebugUrl(ctx *pulumi.Context,
	name string, args *WebProxyDebugUrlArgs, opts ...pulumi.ResourceOption) (*WebProxyDebugUrl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UrlPattern == nil {
		return nil, errors.New("invalid value for required argument 'UrlPattern'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebProxyDebugUrl
	err := ctx.RegisterResource("fortios:index/webProxyDebugUrl:WebProxyDebugUrl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebProxyDebugUrl gets an existing WebProxyDebugUrl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebProxyDebugUrl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebProxyDebugUrlState, opts ...pulumi.ResourceOption) (*WebProxyDebugUrl, error) {
	var resource WebProxyDebugUrl
	err := ctx.ReadResource("fortios:index/webProxyDebugUrl:WebProxyDebugUrl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebProxyDebugUrl resources.
type webProxyDebugUrlState struct {
	Exact      *string `pulumi:"exact"`
	Name       *string `pulumi:"name"`
	Status     *string `pulumi:"status"`
	UrlPattern *string `pulumi:"urlPattern"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

type WebProxyDebugUrlState struct {
	Exact      pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	UrlPattern pulumi.StringPtrInput
	Vdomparam  pulumi.StringPtrInput
}

func (WebProxyDebugUrlState) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyDebugUrlState)(nil)).Elem()
}

type webProxyDebugUrlArgs struct {
	Exact      *string `pulumi:"exact"`
	Name       *string `pulumi:"name"`
	Status     *string `pulumi:"status"`
	UrlPattern string  `pulumi:"urlPattern"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebProxyDebugUrl resource.
type WebProxyDebugUrlArgs struct {
	Exact      pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	UrlPattern pulumi.StringInput
	Vdomparam  pulumi.StringPtrInput
}

func (WebProxyDebugUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyDebugUrlArgs)(nil)).Elem()
}

type WebProxyDebugUrlInput interface {
	pulumi.Input

	ToWebProxyDebugUrlOutput() WebProxyDebugUrlOutput
	ToWebProxyDebugUrlOutputWithContext(ctx context.Context) WebProxyDebugUrlOutput
}

func (*WebProxyDebugUrl) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyDebugUrl)(nil)).Elem()
}

func (i *WebProxyDebugUrl) ToWebProxyDebugUrlOutput() WebProxyDebugUrlOutput {
	return i.ToWebProxyDebugUrlOutputWithContext(context.Background())
}

func (i *WebProxyDebugUrl) ToWebProxyDebugUrlOutputWithContext(ctx context.Context) WebProxyDebugUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyDebugUrlOutput)
}

// WebProxyDebugUrlArrayInput is an input type that accepts WebProxyDebugUrlArray and WebProxyDebugUrlArrayOutput values.
// You can construct a concrete instance of `WebProxyDebugUrlArrayInput` via:
//
//	WebProxyDebugUrlArray{ WebProxyDebugUrlArgs{...} }
type WebProxyDebugUrlArrayInput interface {
	pulumi.Input

	ToWebProxyDebugUrlArrayOutput() WebProxyDebugUrlArrayOutput
	ToWebProxyDebugUrlArrayOutputWithContext(context.Context) WebProxyDebugUrlArrayOutput
}

type WebProxyDebugUrlArray []WebProxyDebugUrlInput

func (WebProxyDebugUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyDebugUrl)(nil)).Elem()
}

func (i WebProxyDebugUrlArray) ToWebProxyDebugUrlArrayOutput() WebProxyDebugUrlArrayOutput {
	return i.ToWebProxyDebugUrlArrayOutputWithContext(context.Background())
}

func (i WebProxyDebugUrlArray) ToWebProxyDebugUrlArrayOutputWithContext(ctx context.Context) WebProxyDebugUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyDebugUrlArrayOutput)
}

// WebProxyDebugUrlMapInput is an input type that accepts WebProxyDebugUrlMap and WebProxyDebugUrlMapOutput values.
// You can construct a concrete instance of `WebProxyDebugUrlMapInput` via:
//
//	WebProxyDebugUrlMap{ "key": WebProxyDebugUrlArgs{...} }
type WebProxyDebugUrlMapInput interface {
	pulumi.Input

	ToWebProxyDebugUrlMapOutput() WebProxyDebugUrlMapOutput
	ToWebProxyDebugUrlMapOutputWithContext(context.Context) WebProxyDebugUrlMapOutput
}

type WebProxyDebugUrlMap map[string]WebProxyDebugUrlInput

func (WebProxyDebugUrlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyDebugUrl)(nil)).Elem()
}

func (i WebProxyDebugUrlMap) ToWebProxyDebugUrlMapOutput() WebProxyDebugUrlMapOutput {
	return i.ToWebProxyDebugUrlMapOutputWithContext(context.Background())
}

func (i WebProxyDebugUrlMap) ToWebProxyDebugUrlMapOutputWithContext(ctx context.Context) WebProxyDebugUrlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyDebugUrlMapOutput)
}

type WebProxyDebugUrlOutput struct{ *pulumi.OutputState }

func (WebProxyDebugUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyDebugUrl)(nil)).Elem()
}

func (o WebProxyDebugUrlOutput) ToWebProxyDebugUrlOutput() WebProxyDebugUrlOutput {
	return o
}

func (o WebProxyDebugUrlOutput) ToWebProxyDebugUrlOutputWithContext(ctx context.Context) WebProxyDebugUrlOutput {
	return o
}

func (o WebProxyDebugUrlOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyDebugUrl) pulumi.StringOutput { return v.Exact }).(pulumi.StringOutput)
}

func (o WebProxyDebugUrlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyDebugUrl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WebProxyDebugUrlOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyDebugUrl) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o WebProxyDebugUrlOutput) UrlPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyDebugUrl) pulumi.StringOutput { return v.UrlPattern }).(pulumi.StringOutput)
}

func (o WebProxyDebugUrlOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebProxyDebugUrl) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WebProxyDebugUrlArrayOutput struct{ *pulumi.OutputState }

func (WebProxyDebugUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyDebugUrl)(nil)).Elem()
}

func (o WebProxyDebugUrlArrayOutput) ToWebProxyDebugUrlArrayOutput() WebProxyDebugUrlArrayOutput {
	return o
}

func (o WebProxyDebugUrlArrayOutput) ToWebProxyDebugUrlArrayOutputWithContext(ctx context.Context) WebProxyDebugUrlArrayOutput {
	return o
}

func (o WebProxyDebugUrlArrayOutput) Index(i pulumi.IntInput) WebProxyDebugUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebProxyDebugUrl {
		return vs[0].([]*WebProxyDebugUrl)[vs[1].(int)]
	}).(WebProxyDebugUrlOutput)
}

type WebProxyDebugUrlMapOutput struct{ *pulumi.OutputState }

func (WebProxyDebugUrlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyDebugUrl)(nil)).Elem()
}

func (o WebProxyDebugUrlMapOutput) ToWebProxyDebugUrlMapOutput() WebProxyDebugUrlMapOutput {
	return o
}

func (o WebProxyDebugUrlMapOutput) ToWebProxyDebugUrlMapOutputWithContext(ctx context.Context) WebProxyDebugUrlMapOutput {
	return o
}

func (o WebProxyDebugUrlMapOutput) MapIndex(k pulumi.StringInput) WebProxyDebugUrlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebProxyDebugUrl {
		return vs[0].(map[string]*WebProxyDebugUrl)[vs[1].(string)]
	}).(WebProxyDebugUrlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyDebugUrlInput)(nil)).Elem(), &WebProxyDebugUrl{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyDebugUrlArrayInput)(nil)).Elem(), WebProxyDebugUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyDebugUrlMapInput)(nil)).Elem(), WebProxyDebugUrlMap{})
	pulumi.RegisterOutputType(WebProxyDebugUrlOutput{})
	pulumi.RegisterOutputType(WebProxyDebugUrlArrayOutput{})
	pulumi.RegisterOutputType(WebProxyDebugUrlMapOutput{})
}
