// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure global heuristic options.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewAntivirusHeuristic(ctx, "trname", &fortios.AntivirusHeuristicArgs{
// 			Mode: pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Antivirus Heuristic can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/antivirusHeuristic:AntivirusHeuristic labelname AntivirusHeuristic
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type AntivirusHeuristic struct {
	pulumi.CustomResourceState

	// Enable/disable heuristics and determine how the system behaves if heuristics detects a problem. Valid values: `pass`, `block`, `disable`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAntivirusHeuristic registers a new resource with the given unique name, arguments, and options.
func NewAntivirusHeuristic(ctx *pulumi.Context,
	name string, args *AntivirusHeuristicArgs, opts ...pulumi.ResourceOption) (*AntivirusHeuristic, error) {
	if args == nil {
		args = &AntivirusHeuristicArgs{}
	}

	var resource AntivirusHeuristic
	err := ctx.RegisterResource("fortios:index/antivirusHeuristic:AntivirusHeuristic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntivirusHeuristic gets an existing AntivirusHeuristic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntivirusHeuristic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntivirusHeuristicState, opts ...pulumi.ResourceOption) (*AntivirusHeuristic, error) {
	var resource AntivirusHeuristic
	err := ctx.ReadResource("fortios:index/antivirusHeuristic:AntivirusHeuristic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntivirusHeuristic resources.
type antivirusHeuristicState struct {
	// Enable/disable heuristics and determine how the system behaves if heuristics detects a problem. Valid values: `pass`, `block`, `disable`.
	Mode *string `pulumi:"mode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type AntivirusHeuristicState struct {
	// Enable/disable heuristics and determine how the system behaves if heuristics detects a problem. Valid values: `pass`, `block`, `disable`.
	Mode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusHeuristicState) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusHeuristicState)(nil)).Elem()
}

type antivirusHeuristicArgs struct {
	// Enable/disable heuristics and determine how the system behaves if heuristics detects a problem. Valid values: `pass`, `block`, `disable`.
	Mode *string `pulumi:"mode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AntivirusHeuristic resource.
type AntivirusHeuristicArgs struct {
	// Enable/disable heuristics and determine how the system behaves if heuristics detects a problem. Valid values: `pass`, `block`, `disable`.
	Mode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusHeuristicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusHeuristicArgs)(nil)).Elem()
}

type AntivirusHeuristicInput interface {
	pulumi.Input

	ToAntivirusHeuristicOutput() AntivirusHeuristicOutput
	ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput
}

func (*AntivirusHeuristic) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusHeuristic)(nil))
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicOutput() AntivirusHeuristicOutput {
	return i.ToAntivirusHeuristicOutputWithContext(context.Background())
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicOutput)
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicPtrOutput() AntivirusHeuristicPtrOutput {
	return i.ToAntivirusHeuristicPtrOutputWithContext(context.Background())
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicPtrOutputWithContext(ctx context.Context) AntivirusHeuristicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicPtrOutput)
}

type AntivirusHeuristicPtrInput interface {
	pulumi.Input

	ToAntivirusHeuristicPtrOutput() AntivirusHeuristicPtrOutput
	ToAntivirusHeuristicPtrOutputWithContext(ctx context.Context) AntivirusHeuristicPtrOutput
}

type antivirusHeuristicPtrType AntivirusHeuristicArgs

func (*antivirusHeuristicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusHeuristic)(nil))
}

func (i *antivirusHeuristicPtrType) ToAntivirusHeuristicPtrOutput() AntivirusHeuristicPtrOutput {
	return i.ToAntivirusHeuristicPtrOutputWithContext(context.Background())
}

func (i *antivirusHeuristicPtrType) ToAntivirusHeuristicPtrOutputWithContext(ctx context.Context) AntivirusHeuristicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicPtrOutput)
}

// AntivirusHeuristicArrayInput is an input type that accepts AntivirusHeuristicArray and AntivirusHeuristicArrayOutput values.
// You can construct a concrete instance of `AntivirusHeuristicArrayInput` via:
//
//          AntivirusHeuristicArray{ AntivirusHeuristicArgs{...} }
type AntivirusHeuristicArrayInput interface {
	pulumi.Input

	ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput
	ToAntivirusHeuristicArrayOutputWithContext(context.Context) AntivirusHeuristicArrayOutput
}

type AntivirusHeuristicArray []AntivirusHeuristicInput

func (AntivirusHeuristicArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AntivirusHeuristic)(nil))
}

func (i AntivirusHeuristicArray) ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput {
	return i.ToAntivirusHeuristicArrayOutputWithContext(context.Background())
}

func (i AntivirusHeuristicArray) ToAntivirusHeuristicArrayOutputWithContext(ctx context.Context) AntivirusHeuristicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicArrayOutput)
}

// AntivirusHeuristicMapInput is an input type that accepts AntivirusHeuristicMap and AntivirusHeuristicMapOutput values.
// You can construct a concrete instance of `AntivirusHeuristicMapInput` via:
//
//          AntivirusHeuristicMap{ "key": AntivirusHeuristicArgs{...} }
type AntivirusHeuristicMapInput interface {
	pulumi.Input

	ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput
	ToAntivirusHeuristicMapOutputWithContext(context.Context) AntivirusHeuristicMapOutput
}

type AntivirusHeuristicMap map[string]AntivirusHeuristicInput

func (AntivirusHeuristicMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AntivirusHeuristic)(nil))
}

func (i AntivirusHeuristicMap) ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput {
	return i.ToAntivirusHeuristicMapOutputWithContext(context.Background())
}

func (i AntivirusHeuristicMap) ToAntivirusHeuristicMapOutputWithContext(ctx context.Context) AntivirusHeuristicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicMapOutput)
}

type AntivirusHeuristicOutput struct {
	*pulumi.OutputState
}

func (AntivirusHeuristicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntivirusHeuristic)(nil))
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicOutput() AntivirusHeuristicOutput {
	return o
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput {
	return o
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicPtrOutput() AntivirusHeuristicPtrOutput {
	return o.ToAntivirusHeuristicPtrOutputWithContext(context.Background())
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicPtrOutputWithContext(ctx context.Context) AntivirusHeuristicPtrOutput {
	return o.ApplyT(func(v AntivirusHeuristic) *AntivirusHeuristic {
		return &v
	}).(AntivirusHeuristicPtrOutput)
}

type AntivirusHeuristicPtrOutput struct {
	*pulumi.OutputState
}

func (AntivirusHeuristicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusHeuristic)(nil))
}

func (o AntivirusHeuristicPtrOutput) ToAntivirusHeuristicPtrOutput() AntivirusHeuristicPtrOutput {
	return o
}

func (o AntivirusHeuristicPtrOutput) ToAntivirusHeuristicPtrOutputWithContext(ctx context.Context) AntivirusHeuristicPtrOutput {
	return o
}

type AntivirusHeuristicArrayOutput struct{ *pulumi.OutputState }

func (AntivirusHeuristicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntivirusHeuristic)(nil))
}

func (o AntivirusHeuristicArrayOutput) ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput {
	return o
}

func (o AntivirusHeuristicArrayOutput) ToAntivirusHeuristicArrayOutputWithContext(ctx context.Context) AntivirusHeuristicArrayOutput {
	return o
}

func (o AntivirusHeuristicArrayOutput) Index(i pulumi.IntInput) AntivirusHeuristicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AntivirusHeuristic {
		return vs[0].([]AntivirusHeuristic)[vs[1].(int)]
	}).(AntivirusHeuristicOutput)
}

type AntivirusHeuristicMapOutput struct{ *pulumi.OutputState }

func (AntivirusHeuristicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AntivirusHeuristic)(nil))
}

func (o AntivirusHeuristicMapOutput) ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput {
	return o
}

func (o AntivirusHeuristicMapOutput) ToAntivirusHeuristicMapOutputWithContext(ctx context.Context) AntivirusHeuristicMapOutput {
	return o
}

func (o AntivirusHeuristicMapOutput) MapIndex(k pulumi.StringInput) AntivirusHeuristicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AntivirusHeuristic {
		return vs[0].(map[string]AntivirusHeuristic)[vs[1].(string)]
	}).(AntivirusHeuristicOutput)
}

func init() {
	pulumi.RegisterOutputType(AntivirusHeuristicOutput{})
	pulumi.RegisterOutputType(AntivirusHeuristicPtrOutput{})
	pulumi.RegisterOutputType(AntivirusHeuristicArrayOutput{})
	pulumi.RegisterOutputType(AntivirusHeuristicMapOutput{})
}
