// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AntivirusHeuristic struct {
	pulumi.CustomResourceState

	Mode      pulumi.StringOutput    `pulumi:"mode"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewAntivirusHeuristic registers a new resource with the given unique name, arguments, and options.
func NewAntivirusHeuristic(ctx *pulumi.Context,
	name string, args *AntivirusHeuristicArgs, opts ...pulumi.ResourceOption) (*AntivirusHeuristic, error) {
	if args == nil {
		args = &AntivirusHeuristicArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AntivirusHeuristic
	err := ctx.RegisterResource("fortios:index/antivirusHeuristic:AntivirusHeuristic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntivirusHeuristic gets an existing AntivirusHeuristic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntivirusHeuristic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntivirusHeuristicState, opts ...pulumi.ResourceOption) (*AntivirusHeuristic, error) {
	var resource AntivirusHeuristic
	err := ctx.ReadResource("fortios:index/antivirusHeuristic:AntivirusHeuristic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntivirusHeuristic resources.
type antivirusHeuristicState struct {
	Mode      *string `pulumi:"mode"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type AntivirusHeuristicState struct {
	Mode      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusHeuristicState) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusHeuristicState)(nil)).Elem()
}

type antivirusHeuristicArgs struct {
	Mode      *string `pulumi:"mode"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a AntivirusHeuristic resource.
type AntivirusHeuristicArgs struct {
	Mode      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (AntivirusHeuristicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antivirusHeuristicArgs)(nil)).Elem()
}

type AntivirusHeuristicInput interface {
	pulumi.Input

	ToAntivirusHeuristicOutput() AntivirusHeuristicOutput
	ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput
}

func (*AntivirusHeuristic) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusHeuristic)(nil)).Elem()
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicOutput() AntivirusHeuristicOutput {
	return i.ToAntivirusHeuristicOutputWithContext(context.Background())
}

func (i *AntivirusHeuristic) ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicOutput)
}

// AntivirusHeuristicArrayInput is an input type that accepts AntivirusHeuristicArray and AntivirusHeuristicArrayOutput values.
// You can construct a concrete instance of `AntivirusHeuristicArrayInput` via:
//
//	AntivirusHeuristicArray{ AntivirusHeuristicArgs{...} }
type AntivirusHeuristicArrayInput interface {
	pulumi.Input

	ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput
	ToAntivirusHeuristicArrayOutputWithContext(context.Context) AntivirusHeuristicArrayOutput
}

type AntivirusHeuristicArray []AntivirusHeuristicInput

func (AntivirusHeuristicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusHeuristic)(nil)).Elem()
}

func (i AntivirusHeuristicArray) ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput {
	return i.ToAntivirusHeuristicArrayOutputWithContext(context.Background())
}

func (i AntivirusHeuristicArray) ToAntivirusHeuristicArrayOutputWithContext(ctx context.Context) AntivirusHeuristicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicArrayOutput)
}

// AntivirusHeuristicMapInput is an input type that accepts AntivirusHeuristicMap and AntivirusHeuristicMapOutput values.
// You can construct a concrete instance of `AntivirusHeuristicMapInput` via:
//
//	AntivirusHeuristicMap{ "key": AntivirusHeuristicArgs{...} }
type AntivirusHeuristicMapInput interface {
	pulumi.Input

	ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput
	ToAntivirusHeuristicMapOutputWithContext(context.Context) AntivirusHeuristicMapOutput
}

type AntivirusHeuristicMap map[string]AntivirusHeuristicInput

func (AntivirusHeuristicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusHeuristic)(nil)).Elem()
}

func (i AntivirusHeuristicMap) ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput {
	return i.ToAntivirusHeuristicMapOutputWithContext(context.Background())
}

func (i AntivirusHeuristicMap) ToAntivirusHeuristicMapOutputWithContext(ctx context.Context) AntivirusHeuristicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntivirusHeuristicMapOutput)
}

type AntivirusHeuristicOutput struct{ *pulumi.OutputState }

func (AntivirusHeuristicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntivirusHeuristic)(nil)).Elem()
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicOutput() AntivirusHeuristicOutput {
	return o
}

func (o AntivirusHeuristicOutput) ToAntivirusHeuristicOutputWithContext(ctx context.Context) AntivirusHeuristicOutput {
	return o
}

func (o AntivirusHeuristicOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *AntivirusHeuristic) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

func (o AntivirusHeuristicOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntivirusHeuristic) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type AntivirusHeuristicArrayOutput struct{ *pulumi.OutputState }

func (AntivirusHeuristicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntivirusHeuristic)(nil)).Elem()
}

func (o AntivirusHeuristicArrayOutput) ToAntivirusHeuristicArrayOutput() AntivirusHeuristicArrayOutput {
	return o
}

func (o AntivirusHeuristicArrayOutput) ToAntivirusHeuristicArrayOutputWithContext(ctx context.Context) AntivirusHeuristicArrayOutput {
	return o
}

func (o AntivirusHeuristicArrayOutput) Index(i pulumi.IntInput) AntivirusHeuristicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AntivirusHeuristic {
		return vs[0].([]*AntivirusHeuristic)[vs[1].(int)]
	}).(AntivirusHeuristicOutput)
}

type AntivirusHeuristicMapOutput struct{ *pulumi.OutputState }

func (AntivirusHeuristicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntivirusHeuristic)(nil)).Elem()
}

func (o AntivirusHeuristicMapOutput) ToAntivirusHeuristicMapOutput() AntivirusHeuristicMapOutput {
	return o
}

func (o AntivirusHeuristicMapOutput) ToAntivirusHeuristicMapOutputWithContext(ctx context.Context) AntivirusHeuristicMapOutput {
	return o
}

func (o AntivirusHeuristicMapOutput) MapIndex(k pulumi.StringInput) AntivirusHeuristicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AntivirusHeuristic {
		return vs[0].(map[string]*AntivirusHeuristic)[vs[1].(string)]
	}).(AntivirusHeuristicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusHeuristicInput)(nil)).Elem(), &AntivirusHeuristic{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusHeuristicArrayInput)(nil)).Elem(), AntivirusHeuristicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntivirusHeuristicMapInput)(nil)).Elem(), AntivirusHeuristicMap{})
	pulumi.RegisterOutputType(AntivirusHeuristicOutput{})
	pulumi.RegisterOutputType(AntivirusHeuristicArrayOutput{})
	pulumi.RegisterOutputType(AntivirusHeuristicMapOutput{})
}
