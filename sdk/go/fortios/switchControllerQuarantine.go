// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerQuarantine struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput                      `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                      `pulumi:"getAllTables"`
	Quarantine          pulumi.StringOutput                         `pulumi:"quarantine"`
	Targets             SwitchControllerQuarantineTargetArrayOutput `pulumi:"targets"`
	Vdomparam           pulumi.StringPtrOutput                      `pulumi:"vdomparam"`
}

// NewSwitchControllerQuarantine registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerQuarantine(ctx *pulumi.Context,
	name string, args *SwitchControllerQuarantineArgs, opts ...pulumi.ResourceOption) (*SwitchControllerQuarantine, error) {
	if args == nil {
		args = &SwitchControllerQuarantineArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerQuarantine
	err := ctx.RegisterResource("fortios:index/switchControllerQuarantine:SwitchControllerQuarantine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerQuarantine gets an existing SwitchControllerQuarantine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerQuarantine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerQuarantineState, opts ...pulumi.ResourceOption) (*SwitchControllerQuarantine, error) {
	var resource SwitchControllerQuarantine
	err := ctx.ReadResource("fortios:index/switchControllerQuarantine:SwitchControllerQuarantine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerQuarantine resources.
type switchControllerQuarantineState struct {
	DynamicSortSubtable *string                            `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                            `pulumi:"getAllTables"`
	Quarantine          *string                            `pulumi:"quarantine"`
	Targets             []SwitchControllerQuarantineTarget `pulumi:"targets"`
	Vdomparam           *string                            `pulumi:"vdomparam"`
}

type SwitchControllerQuarantineState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Quarantine          pulumi.StringPtrInput
	Targets             SwitchControllerQuarantineTargetArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerQuarantineState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerQuarantineState)(nil)).Elem()
}

type switchControllerQuarantineArgs struct {
	DynamicSortSubtable *string                            `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                            `pulumi:"getAllTables"`
	Quarantine          *string                            `pulumi:"quarantine"`
	Targets             []SwitchControllerQuarantineTarget `pulumi:"targets"`
	Vdomparam           *string                            `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerQuarantine resource.
type SwitchControllerQuarantineArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Quarantine          pulumi.StringPtrInput
	Targets             SwitchControllerQuarantineTargetArrayInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerQuarantineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerQuarantineArgs)(nil)).Elem()
}

type SwitchControllerQuarantineInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineOutput() SwitchControllerQuarantineOutput
	ToSwitchControllerQuarantineOutputWithContext(ctx context.Context) SwitchControllerQuarantineOutput
}

func (*SwitchControllerQuarantine) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerQuarantine)(nil)).Elem()
}

func (i *SwitchControllerQuarantine) ToSwitchControllerQuarantineOutput() SwitchControllerQuarantineOutput {
	return i.ToSwitchControllerQuarantineOutputWithContext(context.Background())
}

func (i *SwitchControllerQuarantine) ToSwitchControllerQuarantineOutputWithContext(ctx context.Context) SwitchControllerQuarantineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineOutput)
}

// SwitchControllerQuarantineArrayInput is an input type that accepts SwitchControllerQuarantineArray and SwitchControllerQuarantineArrayOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineArrayInput` via:
//
//	SwitchControllerQuarantineArray{ SwitchControllerQuarantineArgs{...} }
type SwitchControllerQuarantineArrayInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineArrayOutput() SwitchControllerQuarantineArrayOutput
	ToSwitchControllerQuarantineArrayOutputWithContext(context.Context) SwitchControllerQuarantineArrayOutput
}

type SwitchControllerQuarantineArray []SwitchControllerQuarantineInput

func (SwitchControllerQuarantineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerQuarantine)(nil)).Elem()
}

func (i SwitchControllerQuarantineArray) ToSwitchControllerQuarantineArrayOutput() SwitchControllerQuarantineArrayOutput {
	return i.ToSwitchControllerQuarantineArrayOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineArray) ToSwitchControllerQuarantineArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineArrayOutput)
}

// SwitchControllerQuarantineMapInput is an input type that accepts SwitchControllerQuarantineMap and SwitchControllerQuarantineMapOutput values.
// You can construct a concrete instance of `SwitchControllerQuarantineMapInput` via:
//
//	SwitchControllerQuarantineMap{ "key": SwitchControllerQuarantineArgs{...} }
type SwitchControllerQuarantineMapInput interface {
	pulumi.Input

	ToSwitchControllerQuarantineMapOutput() SwitchControllerQuarantineMapOutput
	ToSwitchControllerQuarantineMapOutputWithContext(context.Context) SwitchControllerQuarantineMapOutput
}

type SwitchControllerQuarantineMap map[string]SwitchControllerQuarantineInput

func (SwitchControllerQuarantineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerQuarantine)(nil)).Elem()
}

func (i SwitchControllerQuarantineMap) ToSwitchControllerQuarantineMapOutput() SwitchControllerQuarantineMapOutput {
	return i.ToSwitchControllerQuarantineMapOutputWithContext(context.Background())
}

func (i SwitchControllerQuarantineMap) ToSwitchControllerQuarantineMapOutputWithContext(ctx context.Context) SwitchControllerQuarantineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerQuarantineMapOutput)
}

type SwitchControllerQuarantineOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerQuarantine)(nil)).Elem()
}

func (o SwitchControllerQuarantineOutput) ToSwitchControllerQuarantineOutput() SwitchControllerQuarantineOutput {
	return o
}

func (o SwitchControllerQuarantineOutput) ToSwitchControllerQuarantineOutputWithContext(ctx context.Context) SwitchControllerQuarantineOutput {
	return o
}

func (o SwitchControllerQuarantineOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerQuarantine) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQuarantineOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerQuarantine) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerQuarantineOutput) Quarantine() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerQuarantine) pulumi.StringOutput { return v.Quarantine }).(pulumi.StringOutput)
}

func (o SwitchControllerQuarantineOutput) Targets() SwitchControllerQuarantineTargetArrayOutput {
	return o.ApplyT(func(v *SwitchControllerQuarantine) SwitchControllerQuarantineTargetArrayOutput { return v.Targets }).(SwitchControllerQuarantineTargetArrayOutput)
}

func (o SwitchControllerQuarantineOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerQuarantine) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerQuarantineArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerQuarantine)(nil)).Elem()
}

func (o SwitchControllerQuarantineArrayOutput) ToSwitchControllerQuarantineArrayOutput() SwitchControllerQuarantineArrayOutput {
	return o
}

func (o SwitchControllerQuarantineArrayOutput) ToSwitchControllerQuarantineArrayOutputWithContext(ctx context.Context) SwitchControllerQuarantineArrayOutput {
	return o
}

func (o SwitchControllerQuarantineArrayOutput) Index(i pulumi.IntInput) SwitchControllerQuarantineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerQuarantine {
		return vs[0].([]*SwitchControllerQuarantine)[vs[1].(int)]
	}).(SwitchControllerQuarantineOutput)
}

type SwitchControllerQuarantineMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerQuarantineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerQuarantine)(nil)).Elem()
}

func (o SwitchControllerQuarantineMapOutput) ToSwitchControllerQuarantineMapOutput() SwitchControllerQuarantineMapOutput {
	return o
}

func (o SwitchControllerQuarantineMapOutput) ToSwitchControllerQuarantineMapOutputWithContext(ctx context.Context) SwitchControllerQuarantineMapOutput {
	return o
}

func (o SwitchControllerQuarantineMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerQuarantineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerQuarantine {
		return vs[0].(map[string]*SwitchControllerQuarantine)[vs[1].(string)]
	}).(SwitchControllerQuarantineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineInput)(nil)).Elem(), &SwitchControllerQuarantine{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineArrayInput)(nil)).Elem(), SwitchControllerQuarantineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerQuarantineMapInput)(nil)).Elem(), SwitchControllerQuarantineMap{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerQuarantineMapOutput{})
}
