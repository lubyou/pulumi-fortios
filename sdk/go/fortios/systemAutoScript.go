// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure auto script.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemAutoScript(ctx, "auto2", &fortios.SystemAutoScriptArgs{
// 			Interval:   pulumi.Int(1),
// 			OutputSize: pulumi.Int(10),
// 			Repeat:     pulumi.Int(1),
// 			Script:     pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v", "config firewall address\n", "    edit \"111\"\n", "        set color 3\n", "        set subnet 1.1.1.1 255.255.255.255\n", "    next\n", "end\n", "\n")),
// 			Start:      pulumi.String("auto"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System AutoScript can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemAutoScript:SystemAutoScript labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemAutoScript:SystemAutoScript labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemAutoScript struct {
	pulumi.CustomResourceState

	// Repeat interval in seconds.
	Interval pulumi.IntOutput `pulumi:"interval"`
	// Auto script name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of megabytes to limit script output to (10 - 1024, default = 10).
	OutputSize pulumi.IntOutput `pulumi:"outputSize"`
	// Number of times to repeat this script (0 = infinite).
	Repeat pulumi.IntOutput `pulumi:"repeat"`
	// List of FortiOS CLI commands to repeat.
	Script pulumi.StringPtrOutput `pulumi:"script"`
	// Script starting mode. Valid values: `manual`, `auto`.
	Start pulumi.StringOutput `pulumi:"start"`
	// Maximum running time for this script in seconds (0 = no timeout).
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemAutoScript registers a new resource with the given unique name, arguments, and options.
func NewSystemAutoScript(ctx *pulumi.Context,
	name string, args *SystemAutoScriptArgs, opts ...pulumi.ResourceOption) (*SystemAutoScript, error) {
	if args == nil {
		args = &SystemAutoScriptArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemAutoScript
	err := ctx.RegisterResource("fortios:index/systemAutoScript:SystemAutoScript", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAutoScript gets an existing SystemAutoScript resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAutoScript(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAutoScriptState, opts ...pulumi.ResourceOption) (*SystemAutoScript, error) {
	var resource SystemAutoScript
	err := ctx.ReadResource("fortios:index/systemAutoScript:SystemAutoScript", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAutoScript resources.
type systemAutoScriptState struct {
	// Repeat interval in seconds.
	Interval *int `pulumi:"interval"`
	// Auto script name.
	Name *string `pulumi:"name"`
	// Number of megabytes to limit script output to (10 - 1024, default = 10).
	OutputSize *int `pulumi:"outputSize"`
	// Number of times to repeat this script (0 = infinite).
	Repeat *int `pulumi:"repeat"`
	// List of FortiOS CLI commands to repeat.
	Script *string `pulumi:"script"`
	// Script starting mode. Valid values: `manual`, `auto`.
	Start *string `pulumi:"start"`
	// Maximum running time for this script in seconds (0 = no timeout).
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemAutoScriptState struct {
	// Repeat interval in seconds.
	Interval pulumi.IntPtrInput
	// Auto script name.
	Name pulumi.StringPtrInput
	// Number of megabytes to limit script output to (10 - 1024, default = 10).
	OutputSize pulumi.IntPtrInput
	// Number of times to repeat this script (0 = infinite).
	Repeat pulumi.IntPtrInput
	// List of FortiOS CLI commands to repeat.
	Script pulumi.StringPtrInput
	// Script starting mode. Valid values: `manual`, `auto`.
	Start pulumi.StringPtrInput
	// Maximum running time for this script in seconds (0 = no timeout).
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutoScriptState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutoScriptState)(nil)).Elem()
}

type systemAutoScriptArgs struct {
	// Repeat interval in seconds.
	Interval *int `pulumi:"interval"`
	// Auto script name.
	Name *string `pulumi:"name"`
	// Number of megabytes to limit script output to (10 - 1024, default = 10).
	OutputSize *int `pulumi:"outputSize"`
	// Number of times to repeat this script (0 = infinite).
	Repeat *int `pulumi:"repeat"`
	// List of FortiOS CLI commands to repeat.
	Script *string `pulumi:"script"`
	// Script starting mode. Valid values: `manual`, `auto`.
	Start *string `pulumi:"start"`
	// Maximum running time for this script in seconds (0 = no timeout).
	Timeout *int `pulumi:"timeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemAutoScript resource.
type SystemAutoScriptArgs struct {
	// Repeat interval in seconds.
	Interval pulumi.IntPtrInput
	// Auto script name.
	Name pulumi.StringPtrInput
	// Number of megabytes to limit script output to (10 - 1024, default = 10).
	OutputSize pulumi.IntPtrInput
	// Number of times to repeat this script (0 = infinite).
	Repeat pulumi.IntPtrInput
	// List of FortiOS CLI commands to repeat.
	Script pulumi.StringPtrInput
	// Script starting mode. Valid values: `manual`, `auto`.
	Start pulumi.StringPtrInput
	// Maximum running time for this script in seconds (0 = no timeout).
	Timeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemAutoScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutoScriptArgs)(nil)).Elem()
}

type SystemAutoScriptInput interface {
	pulumi.Input

	ToSystemAutoScriptOutput() SystemAutoScriptOutput
	ToSystemAutoScriptOutputWithContext(ctx context.Context) SystemAutoScriptOutput
}

func (*SystemAutoScript) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutoScript)(nil)).Elem()
}

func (i *SystemAutoScript) ToSystemAutoScriptOutput() SystemAutoScriptOutput {
	return i.ToSystemAutoScriptOutputWithContext(context.Background())
}

func (i *SystemAutoScript) ToSystemAutoScriptOutputWithContext(ctx context.Context) SystemAutoScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoScriptOutput)
}

// SystemAutoScriptArrayInput is an input type that accepts SystemAutoScriptArray and SystemAutoScriptArrayOutput values.
// You can construct a concrete instance of `SystemAutoScriptArrayInput` via:
//
//          SystemAutoScriptArray{ SystemAutoScriptArgs{...} }
type SystemAutoScriptArrayInput interface {
	pulumi.Input

	ToSystemAutoScriptArrayOutput() SystemAutoScriptArrayOutput
	ToSystemAutoScriptArrayOutputWithContext(context.Context) SystemAutoScriptArrayOutput
}

type SystemAutoScriptArray []SystemAutoScriptInput

func (SystemAutoScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutoScript)(nil)).Elem()
}

func (i SystemAutoScriptArray) ToSystemAutoScriptArrayOutput() SystemAutoScriptArrayOutput {
	return i.ToSystemAutoScriptArrayOutputWithContext(context.Background())
}

func (i SystemAutoScriptArray) ToSystemAutoScriptArrayOutputWithContext(ctx context.Context) SystemAutoScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoScriptArrayOutput)
}

// SystemAutoScriptMapInput is an input type that accepts SystemAutoScriptMap and SystemAutoScriptMapOutput values.
// You can construct a concrete instance of `SystemAutoScriptMapInput` via:
//
//          SystemAutoScriptMap{ "key": SystemAutoScriptArgs{...} }
type SystemAutoScriptMapInput interface {
	pulumi.Input

	ToSystemAutoScriptMapOutput() SystemAutoScriptMapOutput
	ToSystemAutoScriptMapOutputWithContext(context.Context) SystemAutoScriptMapOutput
}

type SystemAutoScriptMap map[string]SystemAutoScriptInput

func (SystemAutoScriptMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutoScript)(nil)).Elem()
}

func (i SystemAutoScriptMap) ToSystemAutoScriptMapOutput() SystemAutoScriptMapOutput {
	return i.ToSystemAutoScriptMapOutputWithContext(context.Background())
}

func (i SystemAutoScriptMap) ToSystemAutoScriptMapOutputWithContext(ctx context.Context) SystemAutoScriptMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutoScriptMapOutput)
}

type SystemAutoScriptOutput struct{ *pulumi.OutputState }

func (SystemAutoScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutoScript)(nil)).Elem()
}

func (o SystemAutoScriptOutput) ToSystemAutoScriptOutput() SystemAutoScriptOutput {
	return o
}

func (o SystemAutoScriptOutput) ToSystemAutoScriptOutputWithContext(ctx context.Context) SystemAutoScriptOutput {
	return o
}

type SystemAutoScriptArrayOutput struct{ *pulumi.OutputState }

func (SystemAutoScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutoScript)(nil)).Elem()
}

func (o SystemAutoScriptArrayOutput) ToSystemAutoScriptArrayOutput() SystemAutoScriptArrayOutput {
	return o
}

func (o SystemAutoScriptArrayOutput) ToSystemAutoScriptArrayOutputWithContext(ctx context.Context) SystemAutoScriptArrayOutput {
	return o
}

func (o SystemAutoScriptArrayOutput) Index(i pulumi.IntInput) SystemAutoScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAutoScript {
		return vs[0].([]*SystemAutoScript)[vs[1].(int)]
	}).(SystemAutoScriptOutput)
}

type SystemAutoScriptMapOutput struct{ *pulumi.OutputState }

func (SystemAutoScriptMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutoScript)(nil)).Elem()
}

func (o SystemAutoScriptMapOutput) ToSystemAutoScriptMapOutput() SystemAutoScriptMapOutput {
	return o
}

func (o SystemAutoScriptMapOutput) ToSystemAutoScriptMapOutputWithContext(ctx context.Context) SystemAutoScriptMapOutput {
	return o
}

func (o SystemAutoScriptMapOutput) MapIndex(k pulumi.StringInput) SystemAutoScriptOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAutoScript {
		return vs[0].(map[string]*SystemAutoScript)[vs[1].(string)]
	}).(SystemAutoScriptOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoScriptInput)(nil)).Elem(), &SystemAutoScript{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoScriptArrayInput)(nil)).Elem(), SystemAutoScriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutoScriptMapInput)(nil)).Elem(), SystemAutoScriptMap{})
	pulumi.RegisterOutputType(SystemAutoScriptOutput{})
	pulumi.RegisterOutputType(SystemAutoScriptArrayOutput{})
	pulumi.RegisterOutputType(SystemAutoScriptMapOutput{})
}
