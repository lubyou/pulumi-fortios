// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SwitchControllerSnmpTrapThreshold struct {
	pulumi.CustomResourceState

	TrapHighCpuThreshold   pulumi.IntOutput       `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   pulumi.IntOutput       `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold pulumi.IntOutput       `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerSnmpTrapThreshold registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerSnmpTrapThreshold(ctx *pulumi.Context,
	name string, args *SwitchControllerSnmpTrapThresholdArgs, opts ...pulumi.ResourceOption) (*SwitchControllerSnmpTrapThreshold, error) {
	if args == nil {
		args = &SwitchControllerSnmpTrapThresholdArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerSnmpTrapThreshold
	err := ctx.RegisterResource("fortios:index/switchControllerSnmpTrapThreshold:SwitchControllerSnmpTrapThreshold", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerSnmpTrapThreshold gets an existing SwitchControllerSnmpTrapThreshold resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerSnmpTrapThreshold(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerSnmpTrapThresholdState, opts ...pulumi.ResourceOption) (*SwitchControllerSnmpTrapThreshold, error) {
	var resource SwitchControllerSnmpTrapThreshold
	err := ctx.ReadResource("fortios:index/switchControllerSnmpTrapThreshold:SwitchControllerSnmpTrapThreshold", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerSnmpTrapThreshold resources.
type switchControllerSnmpTrapThresholdState struct {
	TrapHighCpuThreshold   *int    `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   *int    `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold *int    `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

type SwitchControllerSnmpTrapThresholdState struct {
	TrapHighCpuThreshold   pulumi.IntPtrInput
	TrapLogFullThreshold   pulumi.IntPtrInput
	TrapLowMemoryThreshold pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SwitchControllerSnmpTrapThresholdState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSnmpTrapThresholdState)(nil)).Elem()
}

type switchControllerSnmpTrapThresholdArgs struct {
	TrapHighCpuThreshold   *int    `pulumi:"trapHighCpuThreshold"`
	TrapLogFullThreshold   *int    `pulumi:"trapLogFullThreshold"`
	TrapLowMemoryThreshold *int    `pulumi:"trapLowMemoryThreshold"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerSnmpTrapThreshold resource.
type SwitchControllerSnmpTrapThresholdArgs struct {
	TrapHighCpuThreshold   pulumi.IntPtrInput
	TrapLogFullThreshold   pulumi.IntPtrInput
	TrapLowMemoryThreshold pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SwitchControllerSnmpTrapThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSnmpTrapThresholdArgs)(nil)).Elem()
}

type SwitchControllerSnmpTrapThresholdInput interface {
	pulumi.Input

	ToSwitchControllerSnmpTrapThresholdOutput() SwitchControllerSnmpTrapThresholdOutput
	ToSwitchControllerSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdOutput
}

func (*SwitchControllerSnmpTrapThreshold) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (i *SwitchControllerSnmpTrapThreshold) ToSwitchControllerSnmpTrapThresholdOutput() SwitchControllerSnmpTrapThresholdOutput {
	return i.ToSwitchControllerSnmpTrapThresholdOutputWithContext(context.Background())
}

func (i *SwitchControllerSnmpTrapThreshold) ToSwitchControllerSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpTrapThresholdOutput)
}

func (i *SwitchControllerSnmpTrapThreshold) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[*SwitchControllerSnmpTrapThreshold]{
		OutputState: i.ToSwitchControllerSnmpTrapThresholdOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerSnmpTrapThresholdArrayInput is an input type that accepts SwitchControllerSnmpTrapThresholdArray and SwitchControllerSnmpTrapThresholdArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpTrapThresholdArrayInput` via:
//
//	SwitchControllerSnmpTrapThresholdArray{ SwitchControllerSnmpTrapThresholdArgs{...} }
type SwitchControllerSnmpTrapThresholdArrayInput interface {
	pulumi.Input

	ToSwitchControllerSnmpTrapThresholdArrayOutput() SwitchControllerSnmpTrapThresholdArrayOutput
	ToSwitchControllerSnmpTrapThresholdArrayOutputWithContext(context.Context) SwitchControllerSnmpTrapThresholdArrayOutput
}

type SwitchControllerSnmpTrapThresholdArray []SwitchControllerSnmpTrapThresholdInput

func (SwitchControllerSnmpTrapThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (i SwitchControllerSnmpTrapThresholdArray) ToSwitchControllerSnmpTrapThresholdArrayOutput() SwitchControllerSnmpTrapThresholdArrayOutput {
	return i.ToSwitchControllerSnmpTrapThresholdArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpTrapThresholdArray) ToSwitchControllerSnmpTrapThresholdArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpTrapThresholdArrayOutput)
}

func (i SwitchControllerSnmpTrapThresholdArray) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[[]*SwitchControllerSnmpTrapThreshold]{
		OutputState: i.ToSwitchControllerSnmpTrapThresholdArrayOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerSnmpTrapThresholdMapInput is an input type that accepts SwitchControllerSnmpTrapThresholdMap and SwitchControllerSnmpTrapThresholdMapOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpTrapThresholdMapInput` via:
//
//	SwitchControllerSnmpTrapThresholdMap{ "key": SwitchControllerSnmpTrapThresholdArgs{...} }
type SwitchControllerSnmpTrapThresholdMapInput interface {
	pulumi.Input

	ToSwitchControllerSnmpTrapThresholdMapOutput() SwitchControllerSnmpTrapThresholdMapOutput
	ToSwitchControllerSnmpTrapThresholdMapOutputWithContext(context.Context) SwitchControllerSnmpTrapThresholdMapOutput
}

type SwitchControllerSnmpTrapThresholdMap map[string]SwitchControllerSnmpTrapThresholdInput

func (SwitchControllerSnmpTrapThresholdMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (i SwitchControllerSnmpTrapThresholdMap) ToSwitchControllerSnmpTrapThresholdMapOutput() SwitchControllerSnmpTrapThresholdMapOutput {
	return i.ToSwitchControllerSnmpTrapThresholdMapOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpTrapThresholdMap) ToSwitchControllerSnmpTrapThresholdMapOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpTrapThresholdMapOutput)
}

func (i SwitchControllerSnmpTrapThresholdMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[map[string]*SwitchControllerSnmpTrapThreshold]{
		OutputState: i.ToSwitchControllerSnmpTrapThresholdMapOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerSnmpTrapThresholdOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpTrapThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchControllerSnmpTrapThresholdOutput) ToSwitchControllerSnmpTrapThresholdOutput() SwitchControllerSnmpTrapThresholdOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdOutput) ToSwitchControllerSnmpTrapThresholdOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[*SwitchControllerSnmpTrapThreshold]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSnmpTrapThresholdOutput) TrapHighCpuThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpTrapThreshold) pulumi.IntOutput { return v.TrapHighCpuThreshold }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpTrapThresholdOutput) TrapLogFullThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpTrapThreshold) pulumi.IntOutput { return v.TrapLogFullThreshold }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpTrapThresholdOutput) TrapLowMemoryThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpTrapThreshold) pulumi.IntOutput { return v.TrapLowMemoryThreshold }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpTrapThresholdOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpTrapThreshold) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerSnmpTrapThresholdArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpTrapThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchControllerSnmpTrapThresholdArrayOutput) ToSwitchControllerSnmpTrapThresholdArrayOutput() SwitchControllerSnmpTrapThresholdArrayOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdArrayOutput) ToSwitchControllerSnmpTrapThresholdArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdArrayOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[[]*SwitchControllerSnmpTrapThreshold]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSnmpTrapThresholdArrayOutput) Index(i pulumi.IntInput) SwitchControllerSnmpTrapThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerSnmpTrapThreshold {
		return vs[0].([]*SwitchControllerSnmpTrapThreshold)[vs[1].(int)]
	}).(SwitchControllerSnmpTrapThresholdOutput)
}

type SwitchControllerSnmpTrapThresholdMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpTrapThresholdMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSnmpTrapThreshold)(nil)).Elem()
}

func (o SwitchControllerSnmpTrapThresholdMapOutput) ToSwitchControllerSnmpTrapThresholdMapOutput() SwitchControllerSnmpTrapThresholdMapOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdMapOutput) ToSwitchControllerSnmpTrapThresholdMapOutputWithContext(ctx context.Context) SwitchControllerSnmpTrapThresholdMapOutput {
	return o
}

func (o SwitchControllerSnmpTrapThresholdMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerSnmpTrapThreshold] {
	return pulumix.Output[map[string]*SwitchControllerSnmpTrapThreshold]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerSnmpTrapThresholdMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerSnmpTrapThresholdOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerSnmpTrapThreshold {
		return vs[0].(map[string]*SwitchControllerSnmpTrapThreshold)[vs[1].(string)]
	}).(SwitchControllerSnmpTrapThresholdOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpTrapThresholdInput)(nil)).Elem(), &SwitchControllerSnmpTrapThreshold{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpTrapThresholdArrayInput)(nil)).Elem(), SwitchControllerSnmpTrapThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpTrapThresholdMapInput)(nil)).Elem(), SwitchControllerSnmpTrapThresholdMap{})
	pulumi.RegisterOutputType(SwitchControllerSnmpTrapThresholdOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpTrapThresholdArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpTrapThresholdMapOutput{})
}
