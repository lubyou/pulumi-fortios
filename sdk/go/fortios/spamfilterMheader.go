// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SpamfilterMheader struct {
	pulumi.CustomResourceState

	Comment             pulumi.StringPtrOutput            `pulumi:"comment"`
	DynamicSortSubtable pulumi.StringPtrOutput            `pulumi:"dynamicSortSubtable"`
	Entries             SpamfilterMheaderEntryArrayOutput `pulumi:"entries"`
	Fosid               pulumi.IntOutput                  `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput            `pulumi:"getAllTables"`
	Name                pulumi.StringOutput               `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput            `pulumi:"vdomparam"`
}

// NewSpamfilterMheader registers a new resource with the given unique name, arguments, and options.
func NewSpamfilterMheader(ctx *pulumi.Context,
	name string, args *SpamfilterMheaderArgs, opts ...pulumi.ResourceOption) (*SpamfilterMheader, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpamfilterMheader
	err := ctx.RegisterResource("fortios:index/spamfilterMheader:SpamfilterMheader", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpamfilterMheader gets an existing SpamfilterMheader resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpamfilterMheader(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpamfilterMheaderState, opts ...pulumi.ResourceOption) (*SpamfilterMheader, error) {
	var resource SpamfilterMheader
	err := ctx.ReadResource("fortios:index/spamfilterMheader:SpamfilterMheader", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpamfilterMheader resources.
type spamfilterMheaderState struct {
	Comment             *string                  `pulumi:"comment"`
	DynamicSortSubtable *string                  `pulumi:"dynamicSortSubtable"`
	Entries             []SpamfilterMheaderEntry `pulumi:"entries"`
	Fosid               *int                     `pulumi:"fosid"`
	GetAllTables        *string                  `pulumi:"getAllTables"`
	Name                *string                  `pulumi:"name"`
	Vdomparam           *string                  `pulumi:"vdomparam"`
}

type SpamfilterMheaderState struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Entries             SpamfilterMheaderEntryArrayInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SpamfilterMheaderState) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterMheaderState)(nil)).Elem()
}

type spamfilterMheaderArgs struct {
	Comment             *string                  `pulumi:"comment"`
	DynamicSortSubtable *string                  `pulumi:"dynamicSortSubtable"`
	Entries             []SpamfilterMheaderEntry `pulumi:"entries"`
	Fosid               int                      `pulumi:"fosid"`
	GetAllTables        *string                  `pulumi:"getAllTables"`
	Name                *string                  `pulumi:"name"`
	Vdomparam           *string                  `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SpamfilterMheader resource.
type SpamfilterMheaderArgs struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Entries             SpamfilterMheaderEntryArrayInput
	Fosid               pulumi.IntInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SpamfilterMheaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterMheaderArgs)(nil)).Elem()
}

type SpamfilterMheaderInput interface {
	pulumi.Input

	ToSpamfilterMheaderOutput() SpamfilterMheaderOutput
	ToSpamfilterMheaderOutputWithContext(ctx context.Context) SpamfilterMheaderOutput
}

func (*SpamfilterMheader) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterMheader)(nil)).Elem()
}

func (i *SpamfilterMheader) ToSpamfilterMheaderOutput() SpamfilterMheaderOutput {
	return i.ToSpamfilterMheaderOutputWithContext(context.Background())
}

func (i *SpamfilterMheader) ToSpamfilterMheaderOutputWithContext(ctx context.Context) SpamfilterMheaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderOutput)
}

// SpamfilterMheaderArrayInput is an input type that accepts SpamfilterMheaderArray and SpamfilterMheaderArrayOutput values.
// You can construct a concrete instance of `SpamfilterMheaderArrayInput` via:
//
//	SpamfilterMheaderArray{ SpamfilterMheaderArgs{...} }
type SpamfilterMheaderArrayInput interface {
	pulumi.Input

	ToSpamfilterMheaderArrayOutput() SpamfilterMheaderArrayOutput
	ToSpamfilterMheaderArrayOutputWithContext(context.Context) SpamfilterMheaderArrayOutput
}

type SpamfilterMheaderArray []SpamfilterMheaderInput

func (SpamfilterMheaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterMheader)(nil)).Elem()
}

func (i SpamfilterMheaderArray) ToSpamfilterMheaderArrayOutput() SpamfilterMheaderArrayOutput {
	return i.ToSpamfilterMheaderArrayOutputWithContext(context.Background())
}

func (i SpamfilterMheaderArray) ToSpamfilterMheaderArrayOutputWithContext(ctx context.Context) SpamfilterMheaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderArrayOutput)
}

// SpamfilterMheaderMapInput is an input type that accepts SpamfilterMheaderMap and SpamfilterMheaderMapOutput values.
// You can construct a concrete instance of `SpamfilterMheaderMapInput` via:
//
//	SpamfilterMheaderMap{ "key": SpamfilterMheaderArgs{...} }
type SpamfilterMheaderMapInput interface {
	pulumi.Input

	ToSpamfilterMheaderMapOutput() SpamfilterMheaderMapOutput
	ToSpamfilterMheaderMapOutputWithContext(context.Context) SpamfilterMheaderMapOutput
}

type SpamfilterMheaderMap map[string]SpamfilterMheaderInput

func (SpamfilterMheaderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterMheader)(nil)).Elem()
}

func (i SpamfilterMheaderMap) ToSpamfilterMheaderMapOutput() SpamfilterMheaderMapOutput {
	return i.ToSpamfilterMheaderMapOutputWithContext(context.Background())
}

func (i SpamfilterMheaderMap) ToSpamfilterMheaderMapOutputWithContext(ctx context.Context) SpamfilterMheaderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterMheaderMapOutput)
}

type SpamfilterMheaderOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterMheader)(nil)).Elem()
}

func (o SpamfilterMheaderOutput) ToSpamfilterMheaderOutput() SpamfilterMheaderOutput {
	return o
}

func (o SpamfilterMheaderOutput) ToSpamfilterMheaderOutputWithContext(ctx context.Context) SpamfilterMheaderOutput {
	return o
}

func (o SpamfilterMheaderOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderOutput) Entries() SpamfilterMheaderEntryArrayOutput {
	return o.ApplyT(func(v *SpamfilterMheader) SpamfilterMheaderEntryArrayOutput { return v.Entries }).(SpamfilterMheaderEntryArrayOutput)
}

func (o SpamfilterMheaderOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SpamfilterMheaderOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SpamfilterMheaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SpamfilterMheaderOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterMheader) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SpamfilterMheaderArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterMheader)(nil)).Elem()
}

func (o SpamfilterMheaderArrayOutput) ToSpamfilterMheaderArrayOutput() SpamfilterMheaderArrayOutput {
	return o
}

func (o SpamfilterMheaderArrayOutput) ToSpamfilterMheaderArrayOutputWithContext(ctx context.Context) SpamfilterMheaderArrayOutput {
	return o
}

func (o SpamfilterMheaderArrayOutput) Index(i pulumi.IntInput) SpamfilterMheaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpamfilterMheader {
		return vs[0].([]*SpamfilterMheader)[vs[1].(int)]
	}).(SpamfilterMheaderOutput)
}

type SpamfilterMheaderMapOutput struct{ *pulumi.OutputState }

func (SpamfilterMheaderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterMheader)(nil)).Elem()
}

func (o SpamfilterMheaderMapOutput) ToSpamfilterMheaderMapOutput() SpamfilterMheaderMapOutput {
	return o
}

func (o SpamfilterMheaderMapOutput) ToSpamfilterMheaderMapOutputWithContext(ctx context.Context) SpamfilterMheaderMapOutput {
	return o
}

func (o SpamfilterMheaderMapOutput) MapIndex(k pulumi.StringInput) SpamfilterMheaderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpamfilterMheader {
		return vs[0].(map[string]*SpamfilterMheader)[vs[1].(string)]
	}).(SpamfilterMheaderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderInput)(nil)).Elem(), &SpamfilterMheader{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderArrayInput)(nil)).Elem(), SpamfilterMheaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterMheaderMapInput)(nil)).Elem(), SpamfilterMheaderMap{})
	pulumi.RegisterOutputType(SpamfilterMheaderOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterMheaderMapOutput{})
}
