// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure NetFlow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemNetflow(ctx, "trname", &fortios.SystemNetflowArgs{
// 			ActiveFlowTimeout:   pulumi.Int(30),
// 			CollectorIp:         pulumi.String("0.0.0.0"),
// 			CollectorPort:       pulumi.Int(2055),
// 			InactiveFlowTimeout: pulumi.Int(15),
// 			SourceIp:            pulumi.String("0.0.0.0"),
// 			TemplateTxCounter:   pulumi.Int(20),
// 			TemplateTxTimeout:   pulumi.Int(30),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System Netflow can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemNetflow:SystemNetflow labelname SystemNetflow
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemNetflow:SystemNetflow labelname SystemNetflow
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemNetflow struct {
	pulumi.CustomResourceState

	// Timeout to report active flows (1 - 60 min, default = 30).
	ActiveFlowTimeout pulumi.IntOutput `pulumi:"activeFlowTimeout"`
	// Collector IP.
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
	InactiveFlowTimeout pulumi.IntOutput `pulumi:"inactiveFlowTimeout"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Counter of flowset records before resending a template flowset record.
	TemplateTxCounter pulumi.IntOutput `pulumi:"templateTxCounter"`
	// Timeout for periodic template flowset transmission (1 - 1440 min, default = 30).
	TemplateTxTimeout pulumi.IntOutput `pulumi:"templateTxTimeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemNetflow registers a new resource with the given unique name, arguments, and options.
func NewSystemNetflow(ctx *pulumi.Context,
	name string, args *SystemNetflowArgs, opts ...pulumi.ResourceOption) (*SystemNetflow, error) {
	if args == nil {
		args = &SystemNetflowArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemNetflow
	err := ctx.RegisterResource("fortios:index/systemNetflow:SystemNetflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemNetflow gets an existing SystemNetflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemNetflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemNetflowState, opts ...pulumi.ResourceOption) (*SystemNetflow, error) {
	var resource SystemNetflow
	err := ctx.ReadResource("fortios:index/systemNetflow:SystemNetflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemNetflow resources.
type systemNetflowState struct {
	// Timeout to report active flows (1 - 60 min, default = 30).
	ActiveFlowTimeout *int `pulumi:"activeFlowTimeout"`
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
	InactiveFlowTimeout *int `pulumi:"inactiveFlowTimeout"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Counter of flowset records before resending a template flowset record.
	TemplateTxCounter *int `pulumi:"templateTxCounter"`
	// Timeout for periodic template flowset transmission (1 - 1440 min, default = 30).
	TemplateTxTimeout *int `pulumi:"templateTxTimeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemNetflowState struct {
	// Timeout to report active flows (1 - 60 min, default = 30).
	ActiveFlowTimeout pulumi.IntPtrInput
	// Collector IP.
	CollectorIp pulumi.StringPtrInput
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput
	// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
	InactiveFlowTimeout pulumi.IntPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput
	// Counter of flowset records before resending a template flowset record.
	TemplateTxCounter pulumi.IntPtrInput
	// Timeout for periodic template flowset transmission (1 - 1440 min, default = 30).
	TemplateTxTimeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNetflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNetflowState)(nil)).Elem()
}

type systemNetflowArgs struct {
	// Timeout to report active flows (1 - 60 min, default = 30).
	ActiveFlowTimeout *int `pulumi:"activeFlowTimeout"`
	// Collector IP.
	CollectorIp *string `pulumi:"collectorIp"`
	// NetFlow collector port number.
	CollectorPort *int `pulumi:"collectorPort"`
	// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
	InactiveFlowTimeout *int `pulumi:"inactiveFlowTimeout"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Source IP address for communication with the NetFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Counter of flowset records before resending a template flowset record.
	TemplateTxCounter *int `pulumi:"templateTxCounter"`
	// Timeout for periodic template flowset transmission (1 - 1440 min, default = 30).
	TemplateTxTimeout *int `pulumi:"templateTxTimeout"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemNetflow resource.
type SystemNetflowArgs struct {
	// Timeout to report active flows (1 - 60 min, default = 30).
	ActiveFlowTimeout pulumi.IntPtrInput
	// Collector IP.
	CollectorIp pulumi.StringPtrInput
	// NetFlow collector port number.
	CollectorPort pulumi.IntPtrInput
	// Timeout for periodic report of finished flows (10 - 600 sec, default = 15).
	InactiveFlowTimeout pulumi.IntPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Source IP address for communication with the NetFlow agent.
	SourceIp pulumi.StringPtrInput
	// Counter of flowset records before resending a template flowset record.
	TemplateTxCounter pulumi.IntPtrInput
	// Timeout for periodic template flowset transmission (1 - 1440 min, default = 30).
	TemplateTxTimeout pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemNetflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNetflowArgs)(nil)).Elem()
}

type SystemNetflowInput interface {
	pulumi.Input

	ToSystemNetflowOutput() SystemNetflowOutput
	ToSystemNetflowOutputWithContext(ctx context.Context) SystemNetflowOutput
}

func (*SystemNetflow) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNetflow)(nil)).Elem()
}

func (i *SystemNetflow) ToSystemNetflowOutput() SystemNetflowOutput {
	return i.ToSystemNetflowOutputWithContext(context.Background())
}

func (i *SystemNetflow) ToSystemNetflowOutputWithContext(ctx context.Context) SystemNetflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNetflowOutput)
}

// SystemNetflowArrayInput is an input type that accepts SystemNetflowArray and SystemNetflowArrayOutput values.
// You can construct a concrete instance of `SystemNetflowArrayInput` via:
//
//          SystemNetflowArray{ SystemNetflowArgs{...} }
type SystemNetflowArrayInput interface {
	pulumi.Input

	ToSystemNetflowArrayOutput() SystemNetflowArrayOutput
	ToSystemNetflowArrayOutputWithContext(context.Context) SystemNetflowArrayOutput
}

type SystemNetflowArray []SystemNetflowInput

func (SystemNetflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNetflow)(nil)).Elem()
}

func (i SystemNetflowArray) ToSystemNetflowArrayOutput() SystemNetflowArrayOutput {
	return i.ToSystemNetflowArrayOutputWithContext(context.Background())
}

func (i SystemNetflowArray) ToSystemNetflowArrayOutputWithContext(ctx context.Context) SystemNetflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNetflowArrayOutput)
}

// SystemNetflowMapInput is an input type that accepts SystemNetflowMap and SystemNetflowMapOutput values.
// You can construct a concrete instance of `SystemNetflowMapInput` via:
//
//          SystemNetflowMap{ "key": SystemNetflowArgs{...} }
type SystemNetflowMapInput interface {
	pulumi.Input

	ToSystemNetflowMapOutput() SystemNetflowMapOutput
	ToSystemNetflowMapOutputWithContext(context.Context) SystemNetflowMapOutput
}

type SystemNetflowMap map[string]SystemNetflowInput

func (SystemNetflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNetflow)(nil)).Elem()
}

func (i SystemNetflowMap) ToSystemNetflowMapOutput() SystemNetflowMapOutput {
	return i.ToSystemNetflowMapOutputWithContext(context.Background())
}

func (i SystemNetflowMap) ToSystemNetflowMapOutputWithContext(ctx context.Context) SystemNetflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNetflowMapOutput)
}

type SystemNetflowOutput struct{ *pulumi.OutputState }

func (SystemNetflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNetflow)(nil)).Elem()
}

func (o SystemNetflowOutput) ToSystemNetflowOutput() SystemNetflowOutput {
	return o
}

func (o SystemNetflowOutput) ToSystemNetflowOutputWithContext(ctx context.Context) SystemNetflowOutput {
	return o
}

type SystemNetflowArrayOutput struct{ *pulumi.OutputState }

func (SystemNetflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNetflow)(nil)).Elem()
}

func (o SystemNetflowArrayOutput) ToSystemNetflowArrayOutput() SystemNetflowArrayOutput {
	return o
}

func (o SystemNetflowArrayOutput) ToSystemNetflowArrayOutputWithContext(ctx context.Context) SystemNetflowArrayOutput {
	return o
}

func (o SystemNetflowArrayOutput) Index(i pulumi.IntInput) SystemNetflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemNetflow {
		return vs[0].([]*SystemNetflow)[vs[1].(int)]
	}).(SystemNetflowOutput)
}

type SystemNetflowMapOutput struct{ *pulumi.OutputState }

func (SystemNetflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNetflow)(nil)).Elem()
}

func (o SystemNetflowMapOutput) ToSystemNetflowMapOutput() SystemNetflowMapOutput {
	return o
}

func (o SystemNetflowMapOutput) ToSystemNetflowMapOutputWithContext(ctx context.Context) SystemNetflowMapOutput {
	return o
}

func (o SystemNetflowMapOutput) MapIndex(k pulumi.StringInput) SystemNetflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemNetflow {
		return vs[0].(map[string]*SystemNetflow)[vs[1].(string)]
	}).(SystemNetflowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNetflowInput)(nil)).Elem(), &SystemNetflow{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNetflowArrayInput)(nil)).Elem(), SystemNetflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNetflowMapInput)(nil)).Elem(), SystemNetflowMap{})
	pulumi.RegisterOutputType(SystemNetflowOutput{})
	pulumi.RegisterOutputType(SystemNetflowArrayOutput{})
	pulumi.RegisterOutputType(SystemNetflowMapOutput{})
}
