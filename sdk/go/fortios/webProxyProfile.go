// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebProxyProfile struct {
	pulumi.CustomResourceState

	DynamicSortSubtable        pulumi.StringPtrOutput           `pulumi:"dynamicSortSubtable"`
	HeaderClientIp             pulumi.StringOutput              `pulumi:"headerClientIp"`
	HeaderFrontEndHttps        pulumi.StringOutput              `pulumi:"headerFrontEndHttps"`
	HeaderViaRequest           pulumi.StringOutput              `pulumi:"headerViaRequest"`
	HeaderViaResponse          pulumi.StringOutput              `pulumi:"headerViaResponse"`
	HeaderXAuthenticatedGroups pulumi.StringOutput              `pulumi:"headerXAuthenticatedGroups"`
	HeaderXAuthenticatedUser   pulumi.StringOutput              `pulumi:"headerXAuthenticatedUser"`
	HeaderXForwardedClientCert pulumi.StringOutput              `pulumi:"headerXForwardedClientCert"`
	HeaderXForwardedFor        pulumi.StringOutput              `pulumi:"headerXForwardedFor"`
	Headers                    WebProxyProfileHeaderArrayOutput `pulumi:"headers"`
	LogHeaderChange            pulumi.StringOutput              `pulumi:"logHeaderChange"`
	Name                       pulumi.StringOutput              `pulumi:"name"`
	StripEncoding              pulumi.StringOutput              `pulumi:"stripEncoding"`
	Vdomparam                  pulumi.StringPtrOutput           `pulumi:"vdomparam"`
}

// NewWebProxyProfile registers a new resource with the given unique name, arguments, and options.
func NewWebProxyProfile(ctx *pulumi.Context,
	name string, args *WebProxyProfileArgs, opts ...pulumi.ResourceOption) (*WebProxyProfile, error) {
	if args == nil {
		args = &WebProxyProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WebProxyProfile
	err := ctx.RegisterResource("fortios:index/webProxyProfile:WebProxyProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebProxyProfile gets an existing WebProxyProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebProxyProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebProxyProfileState, opts ...pulumi.ResourceOption) (*WebProxyProfile, error) {
	var resource WebProxyProfile
	err := ctx.ReadResource("fortios:index/webProxyProfile:WebProxyProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebProxyProfile resources.
type webProxyProfileState struct {
	DynamicSortSubtable        *string                 `pulumi:"dynamicSortSubtable"`
	HeaderClientIp             *string                 `pulumi:"headerClientIp"`
	HeaderFrontEndHttps        *string                 `pulumi:"headerFrontEndHttps"`
	HeaderViaRequest           *string                 `pulumi:"headerViaRequest"`
	HeaderViaResponse          *string                 `pulumi:"headerViaResponse"`
	HeaderXAuthenticatedGroups *string                 `pulumi:"headerXAuthenticatedGroups"`
	HeaderXAuthenticatedUser   *string                 `pulumi:"headerXAuthenticatedUser"`
	HeaderXForwardedClientCert *string                 `pulumi:"headerXForwardedClientCert"`
	HeaderXForwardedFor        *string                 `pulumi:"headerXForwardedFor"`
	Headers                    []WebProxyProfileHeader `pulumi:"headers"`
	LogHeaderChange            *string                 `pulumi:"logHeaderChange"`
	Name                       *string                 `pulumi:"name"`
	StripEncoding              *string                 `pulumi:"stripEncoding"`
	Vdomparam                  *string                 `pulumi:"vdomparam"`
}

type WebProxyProfileState struct {
	DynamicSortSubtable        pulumi.StringPtrInput
	HeaderClientIp             pulumi.StringPtrInput
	HeaderFrontEndHttps        pulumi.StringPtrInput
	HeaderViaRequest           pulumi.StringPtrInput
	HeaderViaResponse          pulumi.StringPtrInput
	HeaderXAuthenticatedGroups pulumi.StringPtrInput
	HeaderXAuthenticatedUser   pulumi.StringPtrInput
	HeaderXForwardedClientCert pulumi.StringPtrInput
	HeaderXForwardedFor        pulumi.StringPtrInput
	Headers                    WebProxyProfileHeaderArrayInput
	LogHeaderChange            pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	StripEncoding              pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
}

func (WebProxyProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyProfileState)(nil)).Elem()
}

type webProxyProfileArgs struct {
	DynamicSortSubtable        *string                 `pulumi:"dynamicSortSubtable"`
	HeaderClientIp             *string                 `pulumi:"headerClientIp"`
	HeaderFrontEndHttps        *string                 `pulumi:"headerFrontEndHttps"`
	HeaderViaRequest           *string                 `pulumi:"headerViaRequest"`
	HeaderViaResponse          *string                 `pulumi:"headerViaResponse"`
	HeaderXAuthenticatedGroups *string                 `pulumi:"headerXAuthenticatedGroups"`
	HeaderXAuthenticatedUser   *string                 `pulumi:"headerXAuthenticatedUser"`
	HeaderXForwardedClientCert *string                 `pulumi:"headerXForwardedClientCert"`
	HeaderXForwardedFor        *string                 `pulumi:"headerXForwardedFor"`
	Headers                    []WebProxyProfileHeader `pulumi:"headers"`
	LogHeaderChange            *string                 `pulumi:"logHeaderChange"`
	Name                       *string                 `pulumi:"name"`
	StripEncoding              *string                 `pulumi:"stripEncoding"`
	Vdomparam                  *string                 `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebProxyProfile resource.
type WebProxyProfileArgs struct {
	DynamicSortSubtable        pulumi.StringPtrInput
	HeaderClientIp             pulumi.StringPtrInput
	HeaderFrontEndHttps        pulumi.StringPtrInput
	HeaderViaRequest           pulumi.StringPtrInput
	HeaderViaResponse          pulumi.StringPtrInput
	HeaderXAuthenticatedGroups pulumi.StringPtrInput
	HeaderXAuthenticatedUser   pulumi.StringPtrInput
	HeaderXForwardedClientCert pulumi.StringPtrInput
	HeaderXForwardedFor        pulumi.StringPtrInput
	Headers                    WebProxyProfileHeaderArrayInput
	LogHeaderChange            pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	StripEncoding              pulumi.StringPtrInput
	Vdomparam                  pulumi.StringPtrInput
}

func (WebProxyProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webProxyProfileArgs)(nil)).Elem()
}

type WebProxyProfileInput interface {
	pulumi.Input

	ToWebProxyProfileOutput() WebProxyProfileOutput
	ToWebProxyProfileOutputWithContext(ctx context.Context) WebProxyProfileOutput
}

func (*WebProxyProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyProfile)(nil)).Elem()
}

func (i *WebProxyProfile) ToWebProxyProfileOutput() WebProxyProfileOutput {
	return i.ToWebProxyProfileOutputWithContext(context.Background())
}

func (i *WebProxyProfile) ToWebProxyProfileOutputWithContext(ctx context.Context) WebProxyProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyProfileOutput)
}

// WebProxyProfileArrayInput is an input type that accepts WebProxyProfileArray and WebProxyProfileArrayOutput values.
// You can construct a concrete instance of `WebProxyProfileArrayInput` via:
//
//	WebProxyProfileArray{ WebProxyProfileArgs{...} }
type WebProxyProfileArrayInput interface {
	pulumi.Input

	ToWebProxyProfileArrayOutput() WebProxyProfileArrayOutput
	ToWebProxyProfileArrayOutputWithContext(context.Context) WebProxyProfileArrayOutput
}

type WebProxyProfileArray []WebProxyProfileInput

func (WebProxyProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyProfile)(nil)).Elem()
}

func (i WebProxyProfileArray) ToWebProxyProfileArrayOutput() WebProxyProfileArrayOutput {
	return i.ToWebProxyProfileArrayOutputWithContext(context.Background())
}

func (i WebProxyProfileArray) ToWebProxyProfileArrayOutputWithContext(ctx context.Context) WebProxyProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyProfileArrayOutput)
}

// WebProxyProfileMapInput is an input type that accepts WebProxyProfileMap and WebProxyProfileMapOutput values.
// You can construct a concrete instance of `WebProxyProfileMapInput` via:
//
//	WebProxyProfileMap{ "key": WebProxyProfileArgs{...} }
type WebProxyProfileMapInput interface {
	pulumi.Input

	ToWebProxyProfileMapOutput() WebProxyProfileMapOutput
	ToWebProxyProfileMapOutputWithContext(context.Context) WebProxyProfileMapOutput
}

type WebProxyProfileMap map[string]WebProxyProfileInput

func (WebProxyProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyProfile)(nil)).Elem()
}

func (i WebProxyProfileMap) ToWebProxyProfileMapOutput() WebProxyProfileMapOutput {
	return i.ToWebProxyProfileMapOutputWithContext(context.Background())
}

func (i WebProxyProfileMap) ToWebProxyProfileMapOutputWithContext(ctx context.Context) WebProxyProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebProxyProfileMapOutput)
}

type WebProxyProfileOutput struct{ *pulumi.OutputState }

func (WebProxyProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebProxyProfile)(nil)).Elem()
}

func (o WebProxyProfileOutput) ToWebProxyProfileOutput() WebProxyProfileOutput {
	return o
}

func (o WebProxyProfileOutput) ToWebProxyProfileOutputWithContext(ctx context.Context) WebProxyProfileOutput {
	return o
}

func (o WebProxyProfileOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o WebProxyProfileOutput) HeaderClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderClientIp }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderFrontEndHttps() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderFrontEndHttps }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderViaRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderViaRequest }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderViaResponse() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderViaResponse }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderXAuthenticatedGroups() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderXAuthenticatedGroups }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderXAuthenticatedUser() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderXAuthenticatedUser }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderXForwardedClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderXForwardedClientCert }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) HeaderXForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.HeaderXForwardedFor }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) Headers() WebProxyProfileHeaderArrayOutput {
	return o.ApplyT(func(v *WebProxyProfile) WebProxyProfileHeaderArrayOutput { return v.Headers }).(WebProxyProfileHeaderArrayOutput)
}

func (o WebProxyProfileOutput) LogHeaderChange() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.LogHeaderChange }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) StripEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringOutput { return v.StripEncoding }).(pulumi.StringOutput)
}

func (o WebProxyProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebProxyProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WebProxyProfileArrayOutput struct{ *pulumi.OutputState }

func (WebProxyProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebProxyProfile)(nil)).Elem()
}

func (o WebProxyProfileArrayOutput) ToWebProxyProfileArrayOutput() WebProxyProfileArrayOutput {
	return o
}

func (o WebProxyProfileArrayOutput) ToWebProxyProfileArrayOutputWithContext(ctx context.Context) WebProxyProfileArrayOutput {
	return o
}

func (o WebProxyProfileArrayOutput) Index(i pulumi.IntInput) WebProxyProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebProxyProfile {
		return vs[0].([]*WebProxyProfile)[vs[1].(int)]
	}).(WebProxyProfileOutput)
}

type WebProxyProfileMapOutput struct{ *pulumi.OutputState }

func (WebProxyProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebProxyProfile)(nil)).Elem()
}

func (o WebProxyProfileMapOutput) ToWebProxyProfileMapOutput() WebProxyProfileMapOutput {
	return o
}

func (o WebProxyProfileMapOutput) ToWebProxyProfileMapOutputWithContext(ctx context.Context) WebProxyProfileMapOutput {
	return o
}

func (o WebProxyProfileMapOutput) MapIndex(k pulumi.StringInput) WebProxyProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebProxyProfile {
		return vs[0].(map[string]*WebProxyProfile)[vs[1].(string)]
	}).(WebProxyProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyProfileInput)(nil)).Elem(), &WebProxyProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyProfileArrayInput)(nil)).Elem(), WebProxyProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebProxyProfileMapInput)(nil)).Elem(), WebProxyProfileMap{})
	pulumi.RegisterOutputType(WebProxyProfileOutput{})
	pulumi.RegisterOutputType(WebProxyProfileArrayOutput{})
	pulumi.RegisterOutputType(WebProxyProfileMapOutput{})
}
