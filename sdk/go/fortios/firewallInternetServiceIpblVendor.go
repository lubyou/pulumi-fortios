// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IP blacklist vendor. Applies to FortiOS Version `>= 6.2.4`.
//
// ## Import
//
// Firewall InternetServiceIpblVendor can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallInternetServiceIpblVendor:FirewallInternetServiceIpblVendor labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallInternetServiceIpblVendor struct {
	pulumi.CustomResourceState

	// IP blacklist vendor ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// IP blacklist vendor name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallInternetServiceIpblVendor registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetServiceIpblVendor(ctx *pulumi.Context,
	name string, args *FirewallInternetServiceIpblVendorArgs, opts ...pulumi.ResourceOption) (*FirewallInternetServiceIpblVendor, error) {
	if args == nil {
		args = &FirewallInternetServiceIpblVendorArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallInternetServiceIpblVendor
	err := ctx.RegisterResource("fortios:index/firewallInternetServiceIpblVendor:FirewallInternetServiceIpblVendor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetServiceIpblVendor gets an existing FirewallInternetServiceIpblVendor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetServiceIpblVendor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetServiceIpblVendorState, opts ...pulumi.ResourceOption) (*FirewallInternetServiceIpblVendor, error) {
	var resource FirewallInternetServiceIpblVendor
	err := ctx.ReadResource("fortios:index/firewallInternetServiceIpblVendor:FirewallInternetServiceIpblVendor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetServiceIpblVendor resources.
type firewallInternetServiceIpblVendorState struct {
	// IP blacklist vendor ID.
	Fosid *int `pulumi:"fosid"`
	// IP blacklist vendor name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallInternetServiceIpblVendorState struct {
	// IP blacklist vendor ID.
	Fosid pulumi.IntPtrInput
	// IP blacklist vendor name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetServiceIpblVendorState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceIpblVendorState)(nil)).Elem()
}

type firewallInternetServiceIpblVendorArgs struct {
	// IP blacklist vendor ID.
	Fosid *int `pulumi:"fosid"`
	// IP blacklist vendor name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetServiceIpblVendor resource.
type FirewallInternetServiceIpblVendorArgs struct {
	// IP blacklist vendor ID.
	Fosid pulumi.IntPtrInput
	// IP blacklist vendor name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallInternetServiceIpblVendorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceIpblVendorArgs)(nil)).Elem()
}

type FirewallInternetServiceIpblVendorInput interface {
	pulumi.Input

	ToFirewallInternetServiceIpblVendorOutput() FirewallInternetServiceIpblVendorOutput
	ToFirewallInternetServiceIpblVendorOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorOutput
}

func (*FirewallInternetServiceIpblVendor) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (i *FirewallInternetServiceIpblVendor) ToFirewallInternetServiceIpblVendorOutput() FirewallInternetServiceIpblVendorOutput {
	return i.ToFirewallInternetServiceIpblVendorOutputWithContext(context.Background())
}

func (i *FirewallInternetServiceIpblVendor) ToFirewallInternetServiceIpblVendorOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceIpblVendorOutput)
}

// FirewallInternetServiceIpblVendorArrayInput is an input type that accepts FirewallInternetServiceIpblVendorArray and FirewallInternetServiceIpblVendorArrayOutput values.
// You can construct a concrete instance of `FirewallInternetServiceIpblVendorArrayInput` via:
//
//          FirewallInternetServiceIpblVendorArray{ FirewallInternetServiceIpblVendorArgs{...} }
type FirewallInternetServiceIpblVendorArrayInput interface {
	pulumi.Input

	ToFirewallInternetServiceIpblVendorArrayOutput() FirewallInternetServiceIpblVendorArrayOutput
	ToFirewallInternetServiceIpblVendorArrayOutputWithContext(context.Context) FirewallInternetServiceIpblVendorArrayOutput
}

type FirewallInternetServiceIpblVendorArray []FirewallInternetServiceIpblVendorInput

func (FirewallInternetServiceIpblVendorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (i FirewallInternetServiceIpblVendorArray) ToFirewallInternetServiceIpblVendorArrayOutput() FirewallInternetServiceIpblVendorArrayOutput {
	return i.ToFirewallInternetServiceIpblVendorArrayOutputWithContext(context.Background())
}

func (i FirewallInternetServiceIpblVendorArray) ToFirewallInternetServiceIpblVendorArrayOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceIpblVendorArrayOutput)
}

// FirewallInternetServiceIpblVendorMapInput is an input type that accepts FirewallInternetServiceIpblVendorMap and FirewallInternetServiceIpblVendorMapOutput values.
// You can construct a concrete instance of `FirewallInternetServiceIpblVendorMapInput` via:
//
//          FirewallInternetServiceIpblVendorMap{ "key": FirewallInternetServiceIpblVendorArgs{...} }
type FirewallInternetServiceIpblVendorMapInput interface {
	pulumi.Input

	ToFirewallInternetServiceIpblVendorMapOutput() FirewallInternetServiceIpblVendorMapOutput
	ToFirewallInternetServiceIpblVendorMapOutputWithContext(context.Context) FirewallInternetServiceIpblVendorMapOutput
}

type FirewallInternetServiceIpblVendorMap map[string]FirewallInternetServiceIpblVendorInput

func (FirewallInternetServiceIpblVendorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (i FirewallInternetServiceIpblVendorMap) ToFirewallInternetServiceIpblVendorMapOutput() FirewallInternetServiceIpblVendorMapOutput {
	return i.ToFirewallInternetServiceIpblVendorMapOutputWithContext(context.Background())
}

func (i FirewallInternetServiceIpblVendorMap) ToFirewallInternetServiceIpblVendorMapOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceIpblVendorMapOutput)
}

type FirewallInternetServiceIpblVendorOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceIpblVendorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (o FirewallInternetServiceIpblVendorOutput) ToFirewallInternetServiceIpblVendorOutput() FirewallInternetServiceIpblVendorOutput {
	return o
}

func (o FirewallInternetServiceIpblVendorOutput) ToFirewallInternetServiceIpblVendorOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorOutput {
	return o
}

type FirewallInternetServiceIpblVendorArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceIpblVendorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (o FirewallInternetServiceIpblVendorArrayOutput) ToFirewallInternetServiceIpblVendorArrayOutput() FirewallInternetServiceIpblVendorArrayOutput {
	return o
}

func (o FirewallInternetServiceIpblVendorArrayOutput) ToFirewallInternetServiceIpblVendorArrayOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorArrayOutput {
	return o
}

func (o FirewallInternetServiceIpblVendorArrayOutput) Index(i pulumi.IntInput) FirewallInternetServiceIpblVendorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetServiceIpblVendor {
		return vs[0].([]*FirewallInternetServiceIpblVendor)[vs[1].(int)]
	}).(FirewallInternetServiceIpblVendorOutput)
}

type FirewallInternetServiceIpblVendorMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceIpblVendorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceIpblVendor)(nil)).Elem()
}

func (o FirewallInternetServiceIpblVendorMapOutput) ToFirewallInternetServiceIpblVendorMapOutput() FirewallInternetServiceIpblVendorMapOutput {
	return o
}

func (o FirewallInternetServiceIpblVendorMapOutput) ToFirewallInternetServiceIpblVendorMapOutputWithContext(ctx context.Context) FirewallInternetServiceIpblVendorMapOutput {
	return o
}

func (o FirewallInternetServiceIpblVendorMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetServiceIpblVendorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetServiceIpblVendor {
		return vs[0].(map[string]*FirewallInternetServiceIpblVendor)[vs[1].(string)]
	}).(FirewallInternetServiceIpblVendorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceIpblVendorInput)(nil)).Elem(), &FirewallInternetServiceIpblVendor{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceIpblVendorArrayInput)(nil)).Elem(), FirewallInternetServiceIpblVendorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceIpblVendorMapInput)(nil)).Elem(), FirewallInternetServiceIpblVendorMap{})
	pulumi.RegisterOutputType(FirewallInternetServiceIpblVendorOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceIpblVendorArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceIpblVendorMapOutput{})
}
