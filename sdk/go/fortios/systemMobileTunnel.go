// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemMobileTunnel struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput               `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput               `pulumi:"getAllTables"`
	HashAlgorithm       pulumi.StringOutput                  `pulumi:"hashAlgorithm"`
	HomeAddress         pulumi.StringOutput                  `pulumi:"homeAddress"`
	HomeAgent           pulumi.StringOutput                  `pulumi:"homeAgent"`
	Lifetime            pulumi.IntOutput                     `pulumi:"lifetime"`
	NMhaeKey            pulumi.StringOutput                  `pulumi:"nMhaeKey"`
	NMhaeKeyType        pulumi.StringOutput                  `pulumi:"nMhaeKeyType"`
	NMhaeSpi            pulumi.IntOutput                     `pulumi:"nMhaeSpi"`
	Name                pulumi.StringOutput                  `pulumi:"name"`
	Networks            SystemMobileTunnelNetworkArrayOutput `pulumi:"networks"`
	RegInterval         pulumi.IntOutput                     `pulumi:"regInterval"`
	RegRetry            pulumi.IntOutput                     `pulumi:"regRetry"`
	RenewInterval       pulumi.IntOutput                     `pulumi:"renewInterval"`
	RoamingInterface    pulumi.StringOutput                  `pulumi:"roamingInterface"`
	Status              pulumi.StringOutput                  `pulumi:"status"`
	TunnelMode          pulumi.StringOutput                  `pulumi:"tunnelMode"`
	Vdomparam           pulumi.StringPtrOutput               `pulumi:"vdomparam"`
}

// NewSystemMobileTunnel registers a new resource with the given unique name, arguments, and options.
func NewSystemMobileTunnel(ctx *pulumi.Context,
	name string, args *SystemMobileTunnelArgs, opts ...pulumi.ResourceOption) (*SystemMobileTunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HashAlgorithm == nil {
		return nil, errors.New("invalid value for required argument 'HashAlgorithm'")
	}
	if args.HomeAgent == nil {
		return nil, errors.New("invalid value for required argument 'HomeAgent'")
	}
	if args.Lifetime == nil {
		return nil, errors.New("invalid value for required argument 'Lifetime'")
	}
	if args.NMhaeKeyType == nil {
		return nil, errors.New("invalid value for required argument 'NMhaeKeyType'")
	}
	if args.NMhaeSpi == nil {
		return nil, errors.New("invalid value for required argument 'NMhaeSpi'")
	}
	if args.RegInterval == nil {
		return nil, errors.New("invalid value for required argument 'RegInterval'")
	}
	if args.RegRetry == nil {
		return nil, errors.New("invalid value for required argument 'RegRetry'")
	}
	if args.RenewInterval == nil {
		return nil, errors.New("invalid value for required argument 'RenewInterval'")
	}
	if args.RoamingInterface == nil {
		return nil, errors.New("invalid value for required argument 'RoamingInterface'")
	}
	if args.TunnelMode == nil {
		return nil, errors.New("invalid value for required argument 'TunnelMode'")
	}
	if args.NMhaeKey != nil {
		args.NMhaeKey = pulumi.ToSecret(args.NMhaeKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"nMhaeKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemMobileTunnel
	err := ctx.RegisterResource("fortios:index/systemMobileTunnel:SystemMobileTunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemMobileTunnel gets an existing SystemMobileTunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemMobileTunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemMobileTunnelState, opts ...pulumi.ResourceOption) (*SystemMobileTunnel, error) {
	var resource SystemMobileTunnel
	err := ctx.ReadResource("fortios:index/systemMobileTunnel:SystemMobileTunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemMobileTunnel resources.
type systemMobileTunnelState struct {
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	HashAlgorithm       *string                     `pulumi:"hashAlgorithm"`
	HomeAddress         *string                     `pulumi:"homeAddress"`
	HomeAgent           *string                     `pulumi:"homeAgent"`
	Lifetime            *int                        `pulumi:"lifetime"`
	NMhaeKey            *string                     `pulumi:"nMhaeKey"`
	NMhaeKeyType        *string                     `pulumi:"nMhaeKeyType"`
	NMhaeSpi            *int                        `pulumi:"nMhaeSpi"`
	Name                *string                     `pulumi:"name"`
	Networks            []SystemMobileTunnelNetwork `pulumi:"networks"`
	RegInterval         *int                        `pulumi:"regInterval"`
	RegRetry            *int                        `pulumi:"regRetry"`
	RenewInterval       *int                        `pulumi:"renewInterval"`
	RoamingInterface    *string                     `pulumi:"roamingInterface"`
	Status              *string                     `pulumi:"status"`
	TunnelMode          *string                     `pulumi:"tunnelMode"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
}

type SystemMobileTunnelState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	HashAlgorithm       pulumi.StringPtrInput
	HomeAddress         pulumi.StringPtrInput
	HomeAgent           pulumi.StringPtrInput
	Lifetime            pulumi.IntPtrInput
	NMhaeKey            pulumi.StringPtrInput
	NMhaeKeyType        pulumi.StringPtrInput
	NMhaeSpi            pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	Networks            SystemMobileTunnelNetworkArrayInput
	RegInterval         pulumi.IntPtrInput
	RegRetry            pulumi.IntPtrInput
	RenewInterval       pulumi.IntPtrInput
	RoamingInterface    pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TunnelMode          pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemMobileTunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemMobileTunnelState)(nil)).Elem()
}

type systemMobileTunnelArgs struct {
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	HashAlgorithm       string                      `pulumi:"hashAlgorithm"`
	HomeAddress         *string                     `pulumi:"homeAddress"`
	HomeAgent           string                      `pulumi:"homeAgent"`
	Lifetime            int                         `pulumi:"lifetime"`
	NMhaeKey            *string                     `pulumi:"nMhaeKey"`
	NMhaeKeyType        string                      `pulumi:"nMhaeKeyType"`
	NMhaeSpi            int                         `pulumi:"nMhaeSpi"`
	Name                *string                     `pulumi:"name"`
	Networks            []SystemMobileTunnelNetwork `pulumi:"networks"`
	RegInterval         int                         `pulumi:"regInterval"`
	RegRetry            int                         `pulumi:"regRetry"`
	RenewInterval       int                         `pulumi:"renewInterval"`
	RoamingInterface    string                      `pulumi:"roamingInterface"`
	Status              *string                     `pulumi:"status"`
	TunnelMode          string                      `pulumi:"tunnelMode"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemMobileTunnel resource.
type SystemMobileTunnelArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	HashAlgorithm       pulumi.StringInput
	HomeAddress         pulumi.StringPtrInput
	HomeAgent           pulumi.StringInput
	Lifetime            pulumi.IntInput
	NMhaeKey            pulumi.StringPtrInput
	NMhaeKeyType        pulumi.StringInput
	NMhaeSpi            pulumi.IntInput
	Name                pulumi.StringPtrInput
	Networks            SystemMobileTunnelNetworkArrayInput
	RegInterval         pulumi.IntInput
	RegRetry            pulumi.IntInput
	RenewInterval       pulumi.IntInput
	RoamingInterface    pulumi.StringInput
	Status              pulumi.StringPtrInput
	TunnelMode          pulumi.StringInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemMobileTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemMobileTunnelArgs)(nil)).Elem()
}

type SystemMobileTunnelInput interface {
	pulumi.Input

	ToSystemMobileTunnelOutput() SystemMobileTunnelOutput
	ToSystemMobileTunnelOutputWithContext(ctx context.Context) SystemMobileTunnelOutput
}

func (*SystemMobileTunnel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemMobileTunnel)(nil)).Elem()
}

func (i *SystemMobileTunnel) ToSystemMobileTunnelOutput() SystemMobileTunnelOutput {
	return i.ToSystemMobileTunnelOutputWithContext(context.Background())
}

func (i *SystemMobileTunnel) ToSystemMobileTunnelOutputWithContext(ctx context.Context) SystemMobileTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobileTunnelOutput)
}

// SystemMobileTunnelArrayInput is an input type that accepts SystemMobileTunnelArray and SystemMobileTunnelArrayOutput values.
// You can construct a concrete instance of `SystemMobileTunnelArrayInput` via:
//
//	SystemMobileTunnelArray{ SystemMobileTunnelArgs{...} }
type SystemMobileTunnelArrayInput interface {
	pulumi.Input

	ToSystemMobileTunnelArrayOutput() SystemMobileTunnelArrayOutput
	ToSystemMobileTunnelArrayOutputWithContext(context.Context) SystemMobileTunnelArrayOutput
}

type SystemMobileTunnelArray []SystemMobileTunnelInput

func (SystemMobileTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemMobileTunnel)(nil)).Elem()
}

func (i SystemMobileTunnelArray) ToSystemMobileTunnelArrayOutput() SystemMobileTunnelArrayOutput {
	return i.ToSystemMobileTunnelArrayOutputWithContext(context.Background())
}

func (i SystemMobileTunnelArray) ToSystemMobileTunnelArrayOutputWithContext(ctx context.Context) SystemMobileTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobileTunnelArrayOutput)
}

// SystemMobileTunnelMapInput is an input type that accepts SystemMobileTunnelMap and SystemMobileTunnelMapOutput values.
// You can construct a concrete instance of `SystemMobileTunnelMapInput` via:
//
//	SystemMobileTunnelMap{ "key": SystemMobileTunnelArgs{...} }
type SystemMobileTunnelMapInput interface {
	pulumi.Input

	ToSystemMobileTunnelMapOutput() SystemMobileTunnelMapOutput
	ToSystemMobileTunnelMapOutputWithContext(context.Context) SystemMobileTunnelMapOutput
}

type SystemMobileTunnelMap map[string]SystemMobileTunnelInput

func (SystemMobileTunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemMobileTunnel)(nil)).Elem()
}

func (i SystemMobileTunnelMap) ToSystemMobileTunnelMapOutput() SystemMobileTunnelMapOutput {
	return i.ToSystemMobileTunnelMapOutputWithContext(context.Background())
}

func (i SystemMobileTunnelMap) ToSystemMobileTunnelMapOutputWithContext(ctx context.Context) SystemMobileTunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemMobileTunnelMapOutput)
}

type SystemMobileTunnelOutput struct{ *pulumi.OutputState }

func (SystemMobileTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemMobileTunnel)(nil)).Elem()
}

func (o SystemMobileTunnelOutput) ToSystemMobileTunnelOutput() SystemMobileTunnelOutput {
	return o
}

func (o SystemMobileTunnelOutput) ToSystemMobileTunnelOutputWithContext(ctx context.Context) SystemMobileTunnelOutput {
	return o
}

func (o SystemMobileTunnelOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemMobileTunnelOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemMobileTunnelOutput) HashAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.HashAlgorithm }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) HomeAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.HomeAddress }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) HomeAgent() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.HomeAgent }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) Lifetime() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.IntOutput { return v.Lifetime }).(pulumi.IntOutput)
}

func (o SystemMobileTunnelOutput) NMhaeKey() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.NMhaeKey }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) NMhaeKeyType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.NMhaeKeyType }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) NMhaeSpi() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.IntOutput { return v.NMhaeSpi }).(pulumi.IntOutput)
}

func (o SystemMobileTunnelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) Networks() SystemMobileTunnelNetworkArrayOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) SystemMobileTunnelNetworkArrayOutput { return v.Networks }).(SystemMobileTunnelNetworkArrayOutput)
}

func (o SystemMobileTunnelOutput) RegInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.IntOutput { return v.RegInterval }).(pulumi.IntOutput)
}

func (o SystemMobileTunnelOutput) RegRetry() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.IntOutput { return v.RegRetry }).(pulumi.IntOutput)
}

func (o SystemMobileTunnelOutput) RenewInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.IntOutput { return v.RenewInterval }).(pulumi.IntOutput)
}

func (o SystemMobileTunnelOutput) RoamingInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.RoamingInterface }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) TunnelMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringOutput { return v.TunnelMode }).(pulumi.StringOutput)
}

func (o SystemMobileTunnelOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemMobileTunnel) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemMobileTunnelArrayOutput struct{ *pulumi.OutputState }

func (SystemMobileTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemMobileTunnel)(nil)).Elem()
}

func (o SystemMobileTunnelArrayOutput) ToSystemMobileTunnelArrayOutput() SystemMobileTunnelArrayOutput {
	return o
}

func (o SystemMobileTunnelArrayOutput) ToSystemMobileTunnelArrayOutputWithContext(ctx context.Context) SystemMobileTunnelArrayOutput {
	return o
}

func (o SystemMobileTunnelArrayOutput) Index(i pulumi.IntInput) SystemMobileTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemMobileTunnel {
		return vs[0].([]*SystemMobileTunnel)[vs[1].(int)]
	}).(SystemMobileTunnelOutput)
}

type SystemMobileTunnelMapOutput struct{ *pulumi.OutputState }

func (SystemMobileTunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemMobileTunnel)(nil)).Elem()
}

func (o SystemMobileTunnelMapOutput) ToSystemMobileTunnelMapOutput() SystemMobileTunnelMapOutput {
	return o
}

func (o SystemMobileTunnelMapOutput) ToSystemMobileTunnelMapOutputWithContext(ctx context.Context) SystemMobileTunnelMapOutput {
	return o
}

func (o SystemMobileTunnelMapOutput) MapIndex(k pulumi.StringInput) SystemMobileTunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemMobileTunnel {
		return vs[0].(map[string]*SystemMobileTunnel)[vs[1].(string)]
	}).(SystemMobileTunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobileTunnelInput)(nil)).Elem(), &SystemMobileTunnel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobileTunnelArrayInput)(nil)).Elem(), SystemMobileTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemMobileTunnelMapInput)(nil)).Elem(), SystemMobileTunnelMap{})
	pulumi.RegisterOutputType(SystemMobileTunnelOutput{})
	pulumi.RegisterOutputType(SystemMobileTunnelArrayOutput{})
	pulumi.RegisterOutputType(SystemMobileTunnelMapOutput{})
}
