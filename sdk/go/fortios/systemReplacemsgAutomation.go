// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replacement messages. Applies to FortiOS Version `>= 7.0.0`.
//
// ## Import
//
// SystemReplacemsg Automation can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemReplacemsgAutomation:SystemReplacemsgAutomation labelname {{msg_type}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemReplacemsgAutomation struct {
	pulumi.CustomResourceState

	// Message string.
	Buffer pulumi.StringPtrOutput `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringOutput `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringOutput `pulumi:"header"`
	// Message type.
	MsgType pulumi.StringOutput `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemReplacemsgAutomation registers a new resource with the given unique name, arguments, and options.
func NewSystemReplacemsgAutomation(ctx *pulumi.Context,
	name string, args *SystemReplacemsgAutomationArgs, opts ...pulumi.ResourceOption) (*SystemReplacemsgAutomation, error) {
	if args == nil {
		args = &SystemReplacemsgAutomationArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemReplacemsgAutomation
	err := ctx.RegisterResource("fortios:index/systemReplacemsgAutomation:SystemReplacemsgAutomation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemReplacemsgAutomation gets an existing SystemReplacemsgAutomation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemReplacemsgAutomation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemReplacemsgAutomationState, opts ...pulumi.ResourceOption) (*SystemReplacemsgAutomation, error) {
	var resource SystemReplacemsgAutomation
	err := ctx.ReadResource("fortios:index/systemReplacemsgAutomation:SystemReplacemsgAutomation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemReplacemsgAutomation resources.
type systemReplacemsgAutomationState struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemReplacemsgAutomationState struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgAutomationState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgAutomationState)(nil)).Elem()
}

type systemReplacemsgAutomationArgs struct {
	// Message string.
	Buffer *string `pulumi:"buffer"`
	// Format flag. Valid values: `none`, `text`, `html`.
	Format *string `pulumi:"format"`
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header *string `pulumi:"header"`
	// Message type.
	MsgType *string `pulumi:"msgType"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemReplacemsgAutomation resource.
type SystemReplacemsgAutomationArgs struct {
	// Message string.
	Buffer pulumi.StringPtrInput
	// Format flag. Valid values: `none`, `text`, `html`.
	Format pulumi.StringPtrInput
	// Header flag. Valid values: `none`, `http`, `8bit`.
	Header pulumi.StringPtrInput
	// Message type.
	MsgType pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgAutomationArgs)(nil)).Elem()
}

type SystemReplacemsgAutomationInput interface {
	pulumi.Input

	ToSystemReplacemsgAutomationOutput() SystemReplacemsgAutomationOutput
	ToSystemReplacemsgAutomationOutputWithContext(ctx context.Context) SystemReplacemsgAutomationOutput
}

func (*SystemReplacemsgAutomation) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgAutomation)(nil)).Elem()
}

func (i *SystemReplacemsgAutomation) ToSystemReplacemsgAutomationOutput() SystemReplacemsgAutomationOutput {
	return i.ToSystemReplacemsgAutomationOutputWithContext(context.Background())
}

func (i *SystemReplacemsgAutomation) ToSystemReplacemsgAutomationOutputWithContext(ctx context.Context) SystemReplacemsgAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgAutomationOutput)
}

// SystemReplacemsgAutomationArrayInput is an input type that accepts SystemReplacemsgAutomationArray and SystemReplacemsgAutomationArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgAutomationArrayInput` via:
//
//          SystemReplacemsgAutomationArray{ SystemReplacemsgAutomationArgs{...} }
type SystemReplacemsgAutomationArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgAutomationArrayOutput() SystemReplacemsgAutomationArrayOutput
	ToSystemReplacemsgAutomationArrayOutputWithContext(context.Context) SystemReplacemsgAutomationArrayOutput
}

type SystemReplacemsgAutomationArray []SystemReplacemsgAutomationInput

func (SystemReplacemsgAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgAutomation)(nil)).Elem()
}

func (i SystemReplacemsgAutomationArray) ToSystemReplacemsgAutomationArrayOutput() SystemReplacemsgAutomationArrayOutput {
	return i.ToSystemReplacemsgAutomationArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgAutomationArray) ToSystemReplacemsgAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsgAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgAutomationArrayOutput)
}

// SystemReplacemsgAutomationMapInput is an input type that accepts SystemReplacemsgAutomationMap and SystemReplacemsgAutomationMapOutput values.
// You can construct a concrete instance of `SystemReplacemsgAutomationMapInput` via:
//
//          SystemReplacemsgAutomationMap{ "key": SystemReplacemsgAutomationArgs{...} }
type SystemReplacemsgAutomationMapInput interface {
	pulumi.Input

	ToSystemReplacemsgAutomationMapOutput() SystemReplacemsgAutomationMapOutput
	ToSystemReplacemsgAutomationMapOutputWithContext(context.Context) SystemReplacemsgAutomationMapOutput
}

type SystemReplacemsgAutomationMap map[string]SystemReplacemsgAutomationInput

func (SystemReplacemsgAutomationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgAutomation)(nil)).Elem()
}

func (i SystemReplacemsgAutomationMap) ToSystemReplacemsgAutomationMapOutput() SystemReplacemsgAutomationMapOutput {
	return i.ToSystemReplacemsgAutomationMapOutputWithContext(context.Background())
}

func (i SystemReplacemsgAutomationMap) ToSystemReplacemsgAutomationMapOutputWithContext(ctx context.Context) SystemReplacemsgAutomationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgAutomationMapOutput)
}

type SystemReplacemsgAutomationOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgAutomation)(nil)).Elem()
}

func (o SystemReplacemsgAutomationOutput) ToSystemReplacemsgAutomationOutput() SystemReplacemsgAutomationOutput {
	return o
}

func (o SystemReplacemsgAutomationOutput) ToSystemReplacemsgAutomationOutputWithContext(ctx context.Context) SystemReplacemsgAutomationOutput {
	return o
}

type SystemReplacemsgAutomationArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgAutomation)(nil)).Elem()
}

func (o SystemReplacemsgAutomationArrayOutput) ToSystemReplacemsgAutomationArrayOutput() SystemReplacemsgAutomationArrayOutput {
	return o
}

func (o SystemReplacemsgAutomationArrayOutput) ToSystemReplacemsgAutomationArrayOutputWithContext(ctx context.Context) SystemReplacemsgAutomationArrayOutput {
	return o
}

func (o SystemReplacemsgAutomationArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemReplacemsgAutomation {
		return vs[0].([]*SystemReplacemsgAutomation)[vs[1].(int)]
	}).(SystemReplacemsgAutomationOutput)
}

type SystemReplacemsgAutomationMapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgAutomationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgAutomation)(nil)).Elem()
}

func (o SystemReplacemsgAutomationMapOutput) ToSystemReplacemsgAutomationMapOutput() SystemReplacemsgAutomationMapOutput {
	return o
}

func (o SystemReplacemsgAutomationMapOutput) ToSystemReplacemsgAutomationMapOutputWithContext(ctx context.Context) SystemReplacemsgAutomationMapOutput {
	return o
}

func (o SystemReplacemsgAutomationMapOutput) MapIndex(k pulumi.StringInput) SystemReplacemsgAutomationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemReplacemsgAutomation {
		return vs[0].(map[string]*SystemReplacemsgAutomation)[vs[1].(string)]
	}).(SystemReplacemsgAutomationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgAutomationInput)(nil)).Elem(), &SystemReplacemsgAutomation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgAutomationArrayInput)(nil)).Elem(), SystemReplacemsgAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgAutomationMapInput)(nil)).Elem(), SystemReplacemsgAutomationMap{})
	pulumi.RegisterOutputType(SystemReplacemsgAutomationOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgAutomationArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgAutomationMapOutput{})
}
