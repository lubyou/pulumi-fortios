// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure online sign up (OSU) provider list.
//
// ## Import
//
// WirelessControllerHotspot20 H2QpOsuProvider can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20H2QpOsuProvider:WirelessControllerHotspot20H2QpOsuProvider labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/wirelessControllerHotspot20H2QpOsuProvider:WirelessControllerHotspot20H2QpOsuProvider labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WirelessControllerHotspot20H2QpOsuProvider struct {
	pulumi.CustomResourceState

	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// OSU provider friendly name.
	FriendlyNames WirelessControllerHotspot20H2QpOsuProviderFriendlyNameArrayOutput `pulumi:"friendlyNames"`
	// OSU provider icon.
	Icon pulumi.StringOutput `pulumi:"icon"`
	// OSU provider ID.
	Name pulumi.StringOutput `pulumi:"name"`
	// OSU method list. Valid values: `oma-dm`, `soap-xml-spp`, `reserved`.
	OsuMethod pulumi.StringOutput `pulumi:"osuMethod"`
	// OSU NAI.
	OsuNai pulumi.StringOutput `pulumi:"osuNai"`
	// Server URI.
	ServerUri pulumi.StringOutput `pulumi:"serverUri"`
	// Service description.
	ServiceDescriptions WirelessControllerHotspot20H2QpOsuProviderServiceDescriptionArrayOutput `pulumi:"serviceDescriptions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWirelessControllerHotspot20H2QpOsuProvider registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerHotspot20H2QpOsuProvider(ctx *pulumi.Context,
	name string, args *WirelessControllerHotspot20H2QpOsuProviderArgs, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpOsuProvider, error) {
	if args == nil {
		args = &WirelessControllerHotspot20H2QpOsuProviderArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerHotspot20H2QpOsuProvider
	err := ctx.RegisterResource("fortios:index/wirelessControllerHotspot20H2QpOsuProvider:WirelessControllerHotspot20H2QpOsuProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerHotspot20H2QpOsuProvider gets an existing WirelessControllerHotspot20H2QpOsuProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerHotspot20H2QpOsuProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerHotspot20H2QpOsuProviderState, opts ...pulumi.ResourceOption) (*WirelessControllerHotspot20H2QpOsuProvider, error) {
	var resource WirelessControllerHotspot20H2QpOsuProvider
	err := ctx.ReadResource("fortios:index/wirelessControllerHotspot20H2QpOsuProvider:WirelessControllerHotspot20H2QpOsuProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerHotspot20H2QpOsuProvider resources.
type wirelessControllerHotspot20H2QpOsuProviderState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// OSU provider friendly name.
	FriendlyNames []WirelessControllerHotspot20H2QpOsuProviderFriendlyName `pulumi:"friendlyNames"`
	// OSU provider icon.
	Icon *string `pulumi:"icon"`
	// OSU provider ID.
	Name *string `pulumi:"name"`
	// OSU method list. Valid values: `oma-dm`, `soap-xml-spp`, `reserved`.
	OsuMethod *string `pulumi:"osuMethod"`
	// OSU NAI.
	OsuNai *string `pulumi:"osuNai"`
	// Server URI.
	ServerUri *string `pulumi:"serverUri"`
	// Service description.
	ServiceDescriptions []WirelessControllerHotspot20H2QpOsuProviderServiceDescription `pulumi:"serviceDescriptions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WirelessControllerHotspot20H2QpOsuProviderState struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// OSU provider friendly name.
	FriendlyNames WirelessControllerHotspot20H2QpOsuProviderFriendlyNameArrayInput
	// OSU provider icon.
	Icon pulumi.StringPtrInput
	// OSU provider ID.
	Name pulumi.StringPtrInput
	// OSU method list. Valid values: `oma-dm`, `soap-xml-spp`, `reserved`.
	OsuMethod pulumi.StringPtrInput
	// OSU NAI.
	OsuNai pulumi.StringPtrInput
	// Server URI.
	ServerUri pulumi.StringPtrInput
	// Service description.
	ServiceDescriptions WirelessControllerHotspot20H2QpOsuProviderServiceDescriptionArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpOsuProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpOsuProviderState)(nil)).Elem()
}

type wirelessControllerHotspot20H2QpOsuProviderArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// OSU provider friendly name.
	FriendlyNames []WirelessControllerHotspot20H2QpOsuProviderFriendlyName `pulumi:"friendlyNames"`
	// OSU provider icon.
	Icon *string `pulumi:"icon"`
	// OSU provider ID.
	Name *string `pulumi:"name"`
	// OSU method list. Valid values: `oma-dm`, `soap-xml-spp`, `reserved`.
	OsuMethod *string `pulumi:"osuMethod"`
	// OSU NAI.
	OsuNai *string `pulumi:"osuNai"`
	// Server URI.
	ServerUri *string `pulumi:"serverUri"`
	// Service description.
	ServiceDescriptions []WirelessControllerHotspot20H2QpOsuProviderServiceDescription `pulumi:"serviceDescriptions"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerHotspot20H2QpOsuProvider resource.
type WirelessControllerHotspot20H2QpOsuProviderArgs struct {
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// OSU provider friendly name.
	FriendlyNames WirelessControllerHotspot20H2QpOsuProviderFriendlyNameArrayInput
	// OSU provider icon.
	Icon pulumi.StringPtrInput
	// OSU provider ID.
	Name pulumi.StringPtrInput
	// OSU method list. Valid values: `oma-dm`, `soap-xml-spp`, `reserved`.
	OsuMethod pulumi.StringPtrInput
	// OSU NAI.
	OsuNai pulumi.StringPtrInput
	// Server URI.
	ServerUri pulumi.StringPtrInput
	// Service description.
	ServiceDescriptions WirelessControllerHotspot20H2QpOsuProviderServiceDescriptionArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WirelessControllerHotspot20H2QpOsuProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerHotspot20H2QpOsuProviderArgs)(nil)).Elem()
}

type WirelessControllerHotspot20H2QpOsuProviderInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpOsuProviderOutput() WirelessControllerHotspot20H2QpOsuProviderOutput
	ToWirelessControllerHotspot20H2QpOsuProviderOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderOutput
}

func (*WirelessControllerHotspot20H2QpOsuProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (i *WirelessControllerHotspot20H2QpOsuProvider) ToWirelessControllerHotspot20H2QpOsuProviderOutput() WirelessControllerHotspot20H2QpOsuProviderOutput {
	return i.ToWirelessControllerHotspot20H2QpOsuProviderOutputWithContext(context.Background())
}

func (i *WirelessControllerHotspot20H2QpOsuProvider) ToWirelessControllerHotspot20H2QpOsuProviderOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpOsuProviderOutput)
}

// WirelessControllerHotspot20H2QpOsuProviderArrayInput is an input type that accepts WirelessControllerHotspot20H2QpOsuProviderArray and WirelessControllerHotspot20H2QpOsuProviderArrayOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpOsuProviderArrayInput` via:
//
//          WirelessControllerHotspot20H2QpOsuProviderArray{ WirelessControllerHotspot20H2QpOsuProviderArgs{...} }
type WirelessControllerHotspot20H2QpOsuProviderArrayInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpOsuProviderArrayOutput() WirelessControllerHotspot20H2QpOsuProviderArrayOutput
	ToWirelessControllerHotspot20H2QpOsuProviderArrayOutputWithContext(context.Context) WirelessControllerHotspot20H2QpOsuProviderArrayOutput
}

type WirelessControllerHotspot20H2QpOsuProviderArray []WirelessControllerHotspot20H2QpOsuProviderInput

func (WirelessControllerHotspot20H2QpOsuProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpOsuProviderArray) ToWirelessControllerHotspot20H2QpOsuProviderArrayOutput() WirelessControllerHotspot20H2QpOsuProviderArrayOutput {
	return i.ToWirelessControllerHotspot20H2QpOsuProviderArrayOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpOsuProviderArray) ToWirelessControllerHotspot20H2QpOsuProviderArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpOsuProviderArrayOutput)
}

// WirelessControllerHotspot20H2QpOsuProviderMapInput is an input type that accepts WirelessControllerHotspot20H2QpOsuProviderMap and WirelessControllerHotspot20H2QpOsuProviderMapOutput values.
// You can construct a concrete instance of `WirelessControllerHotspot20H2QpOsuProviderMapInput` via:
//
//          WirelessControllerHotspot20H2QpOsuProviderMap{ "key": WirelessControllerHotspot20H2QpOsuProviderArgs{...} }
type WirelessControllerHotspot20H2QpOsuProviderMapInput interface {
	pulumi.Input

	ToWirelessControllerHotspot20H2QpOsuProviderMapOutput() WirelessControllerHotspot20H2QpOsuProviderMapOutput
	ToWirelessControllerHotspot20H2QpOsuProviderMapOutputWithContext(context.Context) WirelessControllerHotspot20H2QpOsuProviderMapOutput
}

type WirelessControllerHotspot20H2QpOsuProviderMap map[string]WirelessControllerHotspot20H2QpOsuProviderInput

func (WirelessControllerHotspot20H2QpOsuProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (i WirelessControllerHotspot20H2QpOsuProviderMap) ToWirelessControllerHotspot20H2QpOsuProviderMapOutput() WirelessControllerHotspot20H2QpOsuProviderMapOutput {
	return i.ToWirelessControllerHotspot20H2QpOsuProviderMapOutputWithContext(context.Background())
}

func (i WirelessControllerHotspot20H2QpOsuProviderMap) ToWirelessControllerHotspot20H2QpOsuProviderMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerHotspot20H2QpOsuProviderMapOutput)
}

type WirelessControllerHotspot20H2QpOsuProviderOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpOsuProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpOsuProviderOutput) ToWirelessControllerHotspot20H2QpOsuProviderOutput() WirelessControllerHotspot20H2QpOsuProviderOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpOsuProviderOutput) ToWirelessControllerHotspot20H2QpOsuProviderOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderOutput {
	return o
}

type WirelessControllerHotspot20H2QpOsuProviderArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpOsuProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpOsuProviderArrayOutput) ToWirelessControllerHotspot20H2QpOsuProviderArrayOutput() WirelessControllerHotspot20H2QpOsuProviderArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpOsuProviderArrayOutput) ToWirelessControllerHotspot20H2QpOsuProviderArrayOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderArrayOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpOsuProviderArrayOutput) Index(i pulumi.IntInput) WirelessControllerHotspot20H2QpOsuProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpOsuProvider {
		return vs[0].([]*WirelessControllerHotspot20H2QpOsuProvider)[vs[1].(int)]
	}).(WirelessControllerHotspot20H2QpOsuProviderOutput)
}

type WirelessControllerHotspot20H2QpOsuProviderMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerHotspot20H2QpOsuProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerHotspot20H2QpOsuProvider)(nil)).Elem()
}

func (o WirelessControllerHotspot20H2QpOsuProviderMapOutput) ToWirelessControllerHotspot20H2QpOsuProviderMapOutput() WirelessControllerHotspot20H2QpOsuProviderMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpOsuProviderMapOutput) ToWirelessControllerHotspot20H2QpOsuProviderMapOutputWithContext(ctx context.Context) WirelessControllerHotspot20H2QpOsuProviderMapOutput {
	return o
}

func (o WirelessControllerHotspot20H2QpOsuProviderMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerHotspot20H2QpOsuProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerHotspot20H2QpOsuProvider {
		return vs[0].(map[string]*WirelessControllerHotspot20H2QpOsuProvider)[vs[1].(string)]
	}).(WirelessControllerHotspot20H2QpOsuProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpOsuProviderInput)(nil)).Elem(), &WirelessControllerHotspot20H2QpOsuProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpOsuProviderArrayInput)(nil)).Elem(), WirelessControllerHotspot20H2QpOsuProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerHotspot20H2QpOsuProviderMapInput)(nil)).Elem(), WirelessControllerHotspot20H2QpOsuProviderMap{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpOsuProviderOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpOsuProviderArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerHotspot20H2QpOsuProviderMapOutput{})
}
