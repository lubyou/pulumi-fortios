// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Override filters for remote system server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewLogSyslogd3OverrideFilter(ctx, "trname", &fortios.LogSyslogd3OverrideFilterArgs{
// 			Anomaly:          pulumi.String("enable"),
// 			Dns:              pulumi.String("enable"),
// 			FilterType:       pulumi.String("include"),
// 			ForwardTraffic:   pulumi.String("enable"),
// 			Gtp:              pulumi.String("enable"),
// 			LocalTraffic:     pulumi.String("enable"),
// 			MulticastTraffic: pulumi.String("enable"),
// 			Severity:         pulumi.String("information"),
// 			SnifferTraffic:   pulumi.String("enable"),
// 			Ssh:              pulumi.String("enable"),
// 			Voip:             pulumi.String("enable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// LogSyslogd3 OverrideFilter can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/logSyslogd3OverrideFilter:LogSyslogd3OverrideFilter labelname LogSyslogd3OverrideFilter
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/logSyslogd3OverrideFilter:LogSyslogd3OverrideFilter labelname LogSyslogd3OverrideFilter
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type LogSyslogd3OverrideFilter struct {
	pulumi.CustomResourceState

	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringOutput `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringOutput `pulumi:"dns"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringOutput `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogSyslogd3OverrideFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringOutput `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringOutput `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringOutput `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringOutput `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringOutput `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringOutput `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringOutput `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringOutput `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringOutput `pulumi:"ztnaTraffic"`
}

// NewLogSyslogd3OverrideFilter registers a new resource with the given unique name, arguments, and options.
func NewLogSyslogd3OverrideFilter(ctx *pulumi.Context,
	name string, args *LogSyslogd3OverrideFilterArgs, opts ...pulumi.ResourceOption) (*LogSyslogd3OverrideFilter, error) {
	if args == nil {
		args = &LogSyslogd3OverrideFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogSyslogd3OverrideFilter
	err := ctx.RegisterResource("fortios:index/logSyslogd3OverrideFilter:LogSyslogd3OverrideFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSyslogd3OverrideFilter gets an existing LogSyslogd3OverrideFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSyslogd3OverrideFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSyslogd3OverrideFilterState, opts ...pulumi.ResourceOption) (*LogSyslogd3OverrideFilter, error) {
	var resource LogSyslogd3OverrideFilter
	err := ctx.ReadResource("fortios:index/logSyslogd3OverrideFilter:LogSyslogd3OverrideFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSyslogd3OverrideFilter resources.
type logSyslogd3OverrideFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogSyslogd3OverrideFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

type LogSyslogd3OverrideFilterState struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Free style filter string.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogSyslogd3OverrideFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogSyslogd3OverrideFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd3OverrideFilterState)(nil)).Elem()
}

type logSyslogd3OverrideFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly *string `pulumi:"anomaly"`
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns *string `pulumi:"dns"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Free style filter string.
	Filter *string `pulumi:"filter"`
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType *string `pulumi:"filterType"`
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic *string `pulumi:"forwardTraffic"`
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles []LogSyslogd3OverrideFilterFreeStyle `pulumi:"freeStyles"`
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp *string `pulumi:"gtp"`
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic *string `pulumi:"localTraffic"`
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic *string `pulumi:"multicastTraffic"`
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery *string `pulumi:"netscanDiscovery"`
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability *string `pulumi:"netscanVulnerability"`
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity *string `pulumi:"severity"`
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic *string `pulumi:"snifferTraffic"`
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh *string `pulumi:"ssh"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip *string `pulumi:"voip"`
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic *string `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogSyslogd3OverrideFilter resource.
type LogSyslogd3OverrideFilterArgs struct {
	// Enable/disable anomaly logging. Valid values: `enable`, `disable`.
	Anomaly pulumi.StringPtrInput
	// Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
	Dns pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Free style filter string.
	Filter pulumi.StringPtrInput
	// Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
	FilterType pulumi.StringPtrInput
	// Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
	ForwardTraffic pulumi.StringPtrInput
	// Free Style Filters The structure of `freeStyle` block is documented below.
	FreeStyles LogSyslogd3OverrideFilterFreeStyleArrayInput
	// Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
	Gtp pulumi.StringPtrInput
	// Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
	LocalTraffic pulumi.StringPtrInput
	// Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
	MulticastTraffic pulumi.StringPtrInput
	// Enable/disable netscan discovery event logging.
	NetscanDiscovery pulumi.StringPtrInput
	// Enable/disable netscan vulnerability event logging.
	NetscanVulnerability pulumi.StringPtrInput
	// Lowest severity level to log. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
	Severity pulumi.StringPtrInput
	// Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
	SnifferTraffic pulumi.StringPtrInput
	// Enable/disable SSH logging. Valid values: `enable`, `disable`.
	Ssh pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable VoIP logging. Valid values: `enable`, `disable`.
	Voip pulumi.StringPtrInput
	// Enable/disable ztna traffic logging. Valid values: `enable`, `disable`.
	ZtnaTraffic pulumi.StringPtrInput
}

func (LogSyslogd3OverrideFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd3OverrideFilterArgs)(nil)).Elem()
}

type LogSyslogd3OverrideFilterInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideFilterOutput() LogSyslogd3OverrideFilterOutput
	ToLogSyslogd3OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterOutput
}

func (*LogSyslogd3OverrideFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (i *LogSyslogd3OverrideFilter) ToLogSyslogd3OverrideFilterOutput() LogSyslogd3OverrideFilterOutput {
	return i.ToLogSyslogd3OverrideFilterOutputWithContext(context.Background())
}

func (i *LogSyslogd3OverrideFilter) ToLogSyslogd3OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideFilterOutput)
}

// LogSyslogd3OverrideFilterArrayInput is an input type that accepts LogSyslogd3OverrideFilterArray and LogSyslogd3OverrideFilterArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideFilterArrayInput` via:
//
//          LogSyslogd3OverrideFilterArray{ LogSyslogd3OverrideFilterArgs{...} }
type LogSyslogd3OverrideFilterArrayInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideFilterArrayOutput() LogSyslogd3OverrideFilterArrayOutput
	ToLogSyslogd3OverrideFilterArrayOutputWithContext(context.Context) LogSyslogd3OverrideFilterArrayOutput
}

type LogSyslogd3OverrideFilterArray []LogSyslogd3OverrideFilterInput

func (LogSyslogd3OverrideFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd3OverrideFilterArray) ToLogSyslogd3OverrideFilterArrayOutput() LogSyslogd3OverrideFilterArrayOutput {
	return i.ToLogSyslogd3OverrideFilterArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideFilterArray) ToLogSyslogd3OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideFilterArrayOutput)
}

// LogSyslogd3OverrideFilterMapInput is an input type that accepts LogSyslogd3OverrideFilterMap and LogSyslogd3OverrideFilterMapOutput values.
// You can construct a concrete instance of `LogSyslogd3OverrideFilterMapInput` via:
//
//          LogSyslogd3OverrideFilterMap{ "key": LogSyslogd3OverrideFilterArgs{...} }
type LogSyslogd3OverrideFilterMapInput interface {
	pulumi.Input

	ToLogSyslogd3OverrideFilterMapOutput() LogSyslogd3OverrideFilterMapOutput
	ToLogSyslogd3OverrideFilterMapOutputWithContext(context.Context) LogSyslogd3OverrideFilterMapOutput
}

type LogSyslogd3OverrideFilterMap map[string]LogSyslogd3OverrideFilterInput

func (LogSyslogd3OverrideFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd3OverrideFilterMap) ToLogSyslogd3OverrideFilterMapOutput() LogSyslogd3OverrideFilterMapOutput {
	return i.ToLogSyslogd3OverrideFilterMapOutputWithContext(context.Background())
}

func (i LogSyslogd3OverrideFilterMap) ToLogSyslogd3OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3OverrideFilterMapOutput)
}

type LogSyslogd3OverrideFilterOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd3OverrideFilterOutput) ToLogSyslogd3OverrideFilterOutput() LogSyslogd3OverrideFilterOutput {
	return o
}

func (o LogSyslogd3OverrideFilterOutput) ToLogSyslogd3OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterOutput {
	return o
}

type LogSyslogd3OverrideFilterArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd3OverrideFilterArrayOutput) ToLogSyslogd3OverrideFilterArrayOutput() LogSyslogd3OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd3OverrideFilterArrayOutput) ToLogSyslogd3OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd3OverrideFilterArrayOutput) Index(i pulumi.IntInput) LogSyslogd3OverrideFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSyslogd3OverrideFilter {
		return vs[0].([]*LogSyslogd3OverrideFilter)[vs[1].(int)]
	}).(LogSyslogd3OverrideFilterOutput)
}

type LogSyslogd3OverrideFilterMapOutput struct{ *pulumi.OutputState }

func (LogSyslogd3OverrideFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd3OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd3OverrideFilterMapOutput) ToLogSyslogd3OverrideFilterMapOutput() LogSyslogd3OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd3OverrideFilterMapOutput) ToLogSyslogd3OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd3OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd3OverrideFilterMapOutput) MapIndex(k pulumi.StringInput) LogSyslogd3OverrideFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSyslogd3OverrideFilter {
		return vs[0].(map[string]*LogSyslogd3OverrideFilter)[vs[1].(string)]
	}).(LogSyslogd3OverrideFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideFilterInput)(nil)).Elem(), &LogSyslogd3OverrideFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideFilterArrayInput)(nil)).Elem(), LogSyslogd3OverrideFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3OverrideFilterMapInput)(nil)).Elem(), LogSyslogd3OverrideFilterMap{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideFilterOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideFilterArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3OverrideFilterMapOutput{})
}
