// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiGuard services.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemFortiguard(ctx, "trname", &fortios.SystemFortiguardArgs{
// 			AntispamCache:                   pulumi.String("enable"),
// 			AntispamCacheMpercent:           pulumi.Int(2),
// 			AntispamCacheTtl:                pulumi.Int(1800),
// 			AntispamExpiration:              pulumi.Int(1618617600),
// 			AntispamForceOff:                pulumi.String("disable"),
// 			AntispamLicense:                 pulumi.Int(1),
// 			AntispamTimeout:                 pulumi.Int(7),
// 			AutoJoinForticloud:              pulumi.String("enable"),
// 			DdnsServerIp:                    pulumi.String("0.0.0.0"),
// 			DdnsServerPort:                  pulumi.Int(443),
// 			LoadBalanceServers:              pulumi.Int(1),
// 			OutbreakPreventionCache:         pulumi.String("enable"),
// 			OutbreakPreventionCacheMpercent: pulumi.Int(2),
// 			OutbreakPreventionCacheTtl:      pulumi.Int(300),
// 			OutbreakPreventionExpiration:    pulumi.Int(1618617600),
// 			OutbreakPreventionForceOff:      pulumi.String("disable"),
// 			OutbreakPreventionLicense:       pulumi.Int(1),
// 			OutbreakPreventionTimeout:       pulumi.Int(7),
// 			Port:                            pulumi.String("8888"),
// 			SdnsServerIp:                    pulumi.String("\"208.91.112.220\" "),
// 			SdnsServerPort:                  pulumi.Int(53),
// 			SourceIp:                        pulumi.String("0.0.0.0"),
// 			SourceIp6:                       pulumi.String("::"),
// 			UpdateServerLocation:            pulumi.String("usa"),
// 			WebfilterCache:                  pulumi.String("enable"),
// 			WebfilterCacheTtl:               pulumi.Int(3600),
// 			WebfilterExpiration:             pulumi.Int(1618617600),
// 			WebfilterForceOff:               pulumi.String("disable"),
// 			WebfilterLicense:                pulumi.Int(1),
// 			WebfilterTimeout:                pulumi.Int(15),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System Fortiguard can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemFortiguard:SystemFortiguard labelname SystemFortiguard
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemFortiguard struct {
	pulumi.CustomResourceState

	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance. Valid values: `enable`, `disable`.
	AntispamCache pulumi.StringOutput `pulumi:"antispamCache"`
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%).
	AntispamCacheMpercent pulumi.IntOutput `pulumi:"antispamCacheMpercent"`
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl pulumi.IntOutput `pulumi:"antispamCacheTtl"`
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration pulumi.IntOutput `pulumi:"antispamExpiration"`
	// Enable/disable turning off the FortiGuard antispam service. Valid values: `enable`, `disable`.
	AntispamForceOff pulumi.StringOutput `pulumi:"antispamForceOff"`
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense pulumi.IntOutput `pulumi:"antispamLicense"`
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout pulumi.IntOutput `pulumi:"antispamTimeout"`
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp pulumi.StringOutput `pulumi:"anycastSdnsServerIp"`
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort pulumi.IntOutput `pulumi:"anycastSdnsServerPort"`
	// Automatically connect to and login to FortiCloud. Valid values: `enable`, `disable`.
	AutoJoinForticloud pulumi.StringOutput `pulumi:"autoJoinForticloud"`
	// IP address of the FortiDDNS server.
	DdnsServerIp pulumi.StringOutput `pulumi:"ddnsServerIp"`
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort pulumi.IntOutput `pulumi:"ddnsServerPort"`
	// Enable/disable use of FortiGuard's anycast network. Valid values: `enable`, `disable`.
	FortiguardAnycast pulumi.StringOutput `pulumi:"fortiguardAnycast"`
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet. Valid values: `fortinet`, `aws`, `debug`.
	FortiguardAnycastSource pulumi.StringOutput `pulumi:"fortiguardAnycastSource"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers pulumi.IntOutput `pulumi:"loadBalanceServers"`
	// Enable/disable FortiGuard Virus Outbreak Prevention cache. Valid values: `enable`, `disable`.
	OutbreakPreventionCache pulumi.StringOutput `pulumi:"outbreakPreventionCache"`
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%, default = 2).
	OutbreakPreventionCacheMpercent pulumi.IntOutput `pulumi:"outbreakPreventionCacheMpercent"`
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl pulumi.IntOutput `pulumi:"outbreakPreventionCacheTtl"`
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration pulumi.IntOutput `pulumi:"outbreakPreventionExpiration"`
	// Turn off FortiGuard Virus Outbreak Prevention service. Valid values: `enable`, `disable`.
	OutbreakPreventionForceOff pulumi.StringOutput `pulumi:"outbreakPreventionForceOff"`
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense pulumi.IntOutput `pulumi:"outbreakPreventionLicense"`
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout pulumi.IntOutput `pulumi:"outbreakPreventionTimeout"`
	// Port used to communicate with the FortiGuard servers.
	Port pulumi.StringOutput `pulumi:"port"`
	// Protocol used to communicate with the FortiGuard servers. Valid values: `udp`, `http`, `https`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Proxy user password.
	ProxyPassword pulumi.StringPtrOutput `pulumi:"proxyPassword"`
	// IP address of the proxy server.
	ProxyServerIp pulumi.StringOutput `pulumi:"proxyServerIp"`
	// Port used to communicate with the proxy server.
	ProxyServerPort pulumi.IntOutput `pulumi:"proxyServerPort"`
	// Proxy user name.
	ProxyUsername pulumi.StringOutput `pulumi:"proxyUsername"`
	// Cloud sandbox region.
	SandboxRegion pulumi.StringOutput `pulumi:"sandboxRegion"`
	// Customization options for the FortiGuard DNS service. Valid values: `include-question-section`.
	SdnsOptions pulumi.StringOutput `pulumi:"sdnsOptions"`
	// IP address of the FortiDNS server.
	SdnsServerIp pulumi.StringOutput `pulumi:"sdnsServerIp"`
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort pulumi.IntOutput `pulumi:"sdnsServerPort"`
	// Service account ID.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 pulumi.StringOutput `pulumi:"sourceIp6"`
	// Signature update server location. Valid values: `usa`, `any`.
	UpdateServerLocation pulumi.StringOutput `pulumi:"updateServerLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Enable/disable FortiGuard web filter caching. Valid values: `enable`, `disable`.
	WebfilterCache pulumi.StringOutput `pulumi:"webfilterCache"`
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl pulumi.IntOutput `pulumi:"webfilterCacheTtl"`
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration pulumi.IntOutput `pulumi:"webfilterExpiration"`
	// Enable/disable turning off the FortiGuard web filtering service. Valid values: `enable`, `disable`.
	WebfilterForceOff pulumi.StringOutput `pulumi:"webfilterForceOff"`
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense pulumi.IntOutput `pulumi:"webfilterLicense"`
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout pulumi.IntOutput `pulumi:"webfilterTimeout"`
}

// NewSystemFortiguard registers a new resource with the given unique name, arguments, and options.
func NewSystemFortiguard(ctx *pulumi.Context,
	name string, args *SystemFortiguardArgs, opts ...pulumi.ResourceOption) (*SystemFortiguard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AntispamTimeout == nil {
		return nil, errors.New("invalid value for required argument 'AntispamTimeout'")
	}
	if args.OutbreakPreventionTimeout == nil {
		return nil, errors.New("invalid value for required argument 'OutbreakPreventionTimeout'")
	}
	if args.WebfilterTimeout == nil {
		return nil, errors.New("invalid value for required argument 'WebfilterTimeout'")
	}
	var resource SystemFortiguard
	err := ctx.RegisterResource("fortios:index/systemFortiguard:SystemFortiguard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFortiguard gets an existing SystemFortiguard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFortiguard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFortiguardState, opts ...pulumi.ResourceOption) (*SystemFortiguard, error) {
	var resource SystemFortiguard
	err := ctx.ReadResource("fortios:index/systemFortiguard:SystemFortiguard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFortiguard resources.
type systemFortiguardState struct {
	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance. Valid values: `enable`, `disable`.
	AntispamCache *string `pulumi:"antispamCache"`
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%).
	AntispamCacheMpercent *int `pulumi:"antispamCacheMpercent"`
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl *int `pulumi:"antispamCacheTtl"`
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration *int `pulumi:"antispamExpiration"`
	// Enable/disable turning off the FortiGuard antispam service. Valid values: `enable`, `disable`.
	AntispamForceOff *string `pulumi:"antispamForceOff"`
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense *int `pulumi:"antispamLicense"`
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout *int `pulumi:"antispamTimeout"`
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp *string `pulumi:"anycastSdnsServerIp"`
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort *int `pulumi:"anycastSdnsServerPort"`
	// Automatically connect to and login to FortiCloud. Valid values: `enable`, `disable`.
	AutoJoinForticloud *string `pulumi:"autoJoinForticloud"`
	// IP address of the FortiDDNS server.
	DdnsServerIp *string `pulumi:"ddnsServerIp"`
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort *int `pulumi:"ddnsServerPort"`
	// Enable/disable use of FortiGuard's anycast network. Valid values: `enable`, `disable`.
	FortiguardAnycast *string `pulumi:"fortiguardAnycast"`
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet. Valid values: `fortinet`, `aws`, `debug`.
	FortiguardAnycastSource *string `pulumi:"fortiguardAnycastSource"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers *int `pulumi:"loadBalanceServers"`
	// Enable/disable FortiGuard Virus Outbreak Prevention cache. Valid values: `enable`, `disable`.
	OutbreakPreventionCache *string `pulumi:"outbreakPreventionCache"`
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%, default = 2).
	OutbreakPreventionCacheMpercent *int `pulumi:"outbreakPreventionCacheMpercent"`
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl *int `pulumi:"outbreakPreventionCacheTtl"`
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration *int `pulumi:"outbreakPreventionExpiration"`
	// Turn off FortiGuard Virus Outbreak Prevention service. Valid values: `enable`, `disable`.
	OutbreakPreventionForceOff *string `pulumi:"outbreakPreventionForceOff"`
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense *int `pulumi:"outbreakPreventionLicense"`
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout *int `pulumi:"outbreakPreventionTimeout"`
	// Port used to communicate with the FortiGuard servers.
	Port *string `pulumi:"port"`
	// Protocol used to communicate with the FortiGuard servers. Valid values: `udp`, `http`, `https`.
	Protocol *string `pulumi:"protocol"`
	// Proxy user password.
	ProxyPassword *string `pulumi:"proxyPassword"`
	// IP address of the proxy server.
	ProxyServerIp *string `pulumi:"proxyServerIp"`
	// Port used to communicate with the proxy server.
	ProxyServerPort *int `pulumi:"proxyServerPort"`
	// Proxy user name.
	ProxyUsername *string `pulumi:"proxyUsername"`
	// Cloud sandbox region.
	SandboxRegion *string `pulumi:"sandboxRegion"`
	// Customization options for the FortiGuard DNS service. Valid values: `include-question-section`.
	SdnsOptions *string `pulumi:"sdnsOptions"`
	// IP address of the FortiDNS server.
	SdnsServerIp *string `pulumi:"sdnsServerIp"`
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort *int `pulumi:"sdnsServerPort"`
	// Service account ID.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp *string `pulumi:"sourceIp"`
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 *string `pulumi:"sourceIp6"`
	// Signature update server location. Valid values: `usa`, `any`.
	UpdateServerLocation *string `pulumi:"updateServerLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable FortiGuard web filter caching. Valid values: `enable`, `disable`.
	WebfilterCache *string `pulumi:"webfilterCache"`
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl *int `pulumi:"webfilterCacheTtl"`
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration *int `pulumi:"webfilterExpiration"`
	// Enable/disable turning off the FortiGuard web filtering service. Valid values: `enable`, `disable`.
	WebfilterForceOff *string `pulumi:"webfilterForceOff"`
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense *int `pulumi:"webfilterLicense"`
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout *int `pulumi:"webfilterTimeout"`
}

type SystemFortiguardState struct {
	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance. Valid values: `enable`, `disable`.
	AntispamCache pulumi.StringPtrInput
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%).
	AntispamCacheMpercent pulumi.IntPtrInput
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl pulumi.IntPtrInput
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration pulumi.IntPtrInput
	// Enable/disable turning off the FortiGuard antispam service. Valid values: `enable`, `disable`.
	AntispamForceOff pulumi.StringPtrInput
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense pulumi.IntPtrInput
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout pulumi.IntPtrInput
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp pulumi.StringPtrInput
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort pulumi.IntPtrInput
	// Automatically connect to and login to FortiCloud. Valid values: `enable`, `disable`.
	AutoJoinForticloud pulumi.StringPtrInput
	// IP address of the FortiDDNS server.
	DdnsServerIp pulumi.StringPtrInput
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort pulumi.IntPtrInput
	// Enable/disable use of FortiGuard's anycast network. Valid values: `enable`, `disable`.
	FortiguardAnycast pulumi.StringPtrInput
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet. Valid values: `fortinet`, `aws`, `debug`.
	FortiguardAnycastSource pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers pulumi.IntPtrInput
	// Enable/disable FortiGuard Virus Outbreak Prevention cache. Valid values: `enable`, `disable`.
	OutbreakPreventionCache pulumi.StringPtrInput
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%, default = 2).
	OutbreakPreventionCacheMpercent pulumi.IntPtrInput
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl pulumi.IntPtrInput
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration pulumi.IntPtrInput
	// Turn off FortiGuard Virus Outbreak Prevention service. Valid values: `enable`, `disable`.
	OutbreakPreventionForceOff pulumi.StringPtrInput
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense pulumi.IntPtrInput
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout pulumi.IntPtrInput
	// Port used to communicate with the FortiGuard servers.
	Port pulumi.StringPtrInput
	// Protocol used to communicate with the FortiGuard servers. Valid values: `udp`, `http`, `https`.
	Protocol pulumi.StringPtrInput
	// Proxy user password.
	ProxyPassword pulumi.StringPtrInput
	// IP address of the proxy server.
	ProxyServerIp pulumi.StringPtrInput
	// Port used to communicate with the proxy server.
	ProxyServerPort pulumi.IntPtrInput
	// Proxy user name.
	ProxyUsername pulumi.StringPtrInput
	// Cloud sandbox region.
	SandboxRegion pulumi.StringPtrInput
	// Customization options for the FortiGuard DNS service. Valid values: `include-question-section`.
	SdnsOptions pulumi.StringPtrInput
	// IP address of the FortiDNS server.
	SdnsServerIp pulumi.StringPtrInput
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort pulumi.IntPtrInput
	// Service account ID.
	ServiceAccountId pulumi.StringPtrInput
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp pulumi.StringPtrInput
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 pulumi.StringPtrInput
	// Signature update server location. Valid values: `usa`, `any`.
	UpdateServerLocation pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable FortiGuard web filter caching. Valid values: `enable`, `disable`.
	WebfilterCache pulumi.StringPtrInput
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl pulumi.IntPtrInput
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration pulumi.IntPtrInput
	// Enable/disable turning off the FortiGuard web filtering service. Valid values: `enable`, `disable`.
	WebfilterForceOff pulumi.StringPtrInput
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense pulumi.IntPtrInput
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout pulumi.IntPtrInput
}

func (SystemFortiguardState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortiguardState)(nil)).Elem()
}

type systemFortiguardArgs struct {
	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance. Valid values: `enable`, `disable`.
	AntispamCache *string `pulumi:"antispamCache"`
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%).
	AntispamCacheMpercent *int `pulumi:"antispamCacheMpercent"`
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl *int `pulumi:"antispamCacheTtl"`
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration *int `pulumi:"antispamExpiration"`
	// Enable/disable turning off the FortiGuard antispam service. Valid values: `enable`, `disable`.
	AntispamForceOff *string `pulumi:"antispamForceOff"`
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense *int `pulumi:"antispamLicense"`
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout int `pulumi:"antispamTimeout"`
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp *string `pulumi:"anycastSdnsServerIp"`
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort *int `pulumi:"anycastSdnsServerPort"`
	// Automatically connect to and login to FortiCloud. Valid values: `enable`, `disable`.
	AutoJoinForticloud *string `pulumi:"autoJoinForticloud"`
	// IP address of the FortiDDNS server.
	DdnsServerIp *string `pulumi:"ddnsServerIp"`
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort *int `pulumi:"ddnsServerPort"`
	// Enable/disable use of FortiGuard's anycast network. Valid values: `enable`, `disable`.
	FortiguardAnycast *string `pulumi:"fortiguardAnycast"`
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet. Valid values: `fortinet`, `aws`, `debug`.
	FortiguardAnycastSource *string `pulumi:"fortiguardAnycastSource"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers *int `pulumi:"loadBalanceServers"`
	// Enable/disable FortiGuard Virus Outbreak Prevention cache. Valid values: `enable`, `disable`.
	OutbreakPreventionCache *string `pulumi:"outbreakPreventionCache"`
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%, default = 2).
	OutbreakPreventionCacheMpercent *int `pulumi:"outbreakPreventionCacheMpercent"`
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl *int `pulumi:"outbreakPreventionCacheTtl"`
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration *int `pulumi:"outbreakPreventionExpiration"`
	// Turn off FortiGuard Virus Outbreak Prevention service. Valid values: `enable`, `disable`.
	OutbreakPreventionForceOff *string `pulumi:"outbreakPreventionForceOff"`
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense *int `pulumi:"outbreakPreventionLicense"`
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout int `pulumi:"outbreakPreventionTimeout"`
	// Port used to communicate with the FortiGuard servers.
	Port *string `pulumi:"port"`
	// Protocol used to communicate with the FortiGuard servers. Valid values: `udp`, `http`, `https`.
	Protocol *string `pulumi:"protocol"`
	// Proxy user password.
	ProxyPassword *string `pulumi:"proxyPassword"`
	// IP address of the proxy server.
	ProxyServerIp *string `pulumi:"proxyServerIp"`
	// Port used to communicate with the proxy server.
	ProxyServerPort *int `pulumi:"proxyServerPort"`
	// Proxy user name.
	ProxyUsername *string `pulumi:"proxyUsername"`
	// Cloud sandbox region.
	SandboxRegion *string `pulumi:"sandboxRegion"`
	// Customization options for the FortiGuard DNS service. Valid values: `include-question-section`.
	SdnsOptions *string `pulumi:"sdnsOptions"`
	// IP address of the FortiDNS server.
	SdnsServerIp *string `pulumi:"sdnsServerIp"`
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort *int `pulumi:"sdnsServerPort"`
	// Service account ID.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp *string `pulumi:"sourceIp"`
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 *string `pulumi:"sourceIp6"`
	// Signature update server location. Valid values: `usa`, `any`.
	UpdateServerLocation *string `pulumi:"updateServerLocation"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable FortiGuard web filter caching. Valid values: `enable`, `disable`.
	WebfilterCache *string `pulumi:"webfilterCache"`
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl *int `pulumi:"webfilterCacheTtl"`
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration *int `pulumi:"webfilterExpiration"`
	// Enable/disable turning off the FortiGuard web filtering service. Valid values: `enable`, `disable`.
	WebfilterForceOff *string `pulumi:"webfilterForceOff"`
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense *int `pulumi:"webfilterLicense"`
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout int `pulumi:"webfilterTimeout"`
}

// The set of arguments for constructing a SystemFortiguard resource.
type SystemFortiguardArgs struct {
	// Enable/disable FortiGuard antispam request caching. Uses a small amount of memory but improves performance. Valid values: `enable`, `disable`.
	AntispamCache pulumi.StringPtrInput
	// Maximum percent of FortiGate memory the antispam cache is allowed to use (1 - 15%).
	AntispamCacheMpercent pulumi.IntPtrInput
	// Time-to-live for antispam cache entries in seconds (300 - 86400). Lower times reduce the cache size. Higher times may improve performance since the cache will have more entries.
	AntispamCacheTtl pulumi.IntPtrInput
	// Expiration date of the FortiGuard antispam contract.
	AntispamExpiration pulumi.IntPtrInput
	// Enable/disable turning off the FortiGuard antispam service. Valid values: `enable`, `disable`.
	AntispamForceOff pulumi.StringPtrInput
	// Interval of time between license checks for the FortiGuard antispam contract.
	AntispamLicense pulumi.IntPtrInput
	// Antispam query time out (1 - 30 sec, default = 7).
	AntispamTimeout pulumi.IntInput
	// IP address of the FortiGuard anycast DNS rating server.
	AnycastSdnsServerIp pulumi.StringPtrInput
	// Port to connect to on the FortiGuard anycast DNS rating server.
	AnycastSdnsServerPort pulumi.IntPtrInput
	// Automatically connect to and login to FortiCloud. Valid values: `enable`, `disable`.
	AutoJoinForticloud pulumi.StringPtrInput
	// IP address of the FortiDDNS server.
	DdnsServerIp pulumi.StringPtrInput
	// Port used to communicate with FortiDDNS servers.
	DdnsServerPort pulumi.IntPtrInput
	// Enable/disable use of FortiGuard's anycast network. Valid values: `enable`, `disable`.
	FortiguardAnycast pulumi.StringPtrInput
	// Configure which of Fortinet's servers to provide FortiGuard services in FortiGuard's anycast network. Default is Fortinet. Valid values: `fortinet`, `aws`, `debug`.
	FortiguardAnycastSource pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// Number of servers to alternate between as first FortiGuard option.
	LoadBalanceServers pulumi.IntPtrInput
	// Enable/disable FortiGuard Virus Outbreak Prevention cache. Valid values: `enable`, `disable`.
	OutbreakPreventionCache pulumi.StringPtrInput
	// Maximum percent of memory FortiGuard Virus Outbreak Prevention cache can use (1 - 15%, default = 2).
	OutbreakPreventionCacheMpercent pulumi.IntPtrInput
	// Time-to-live for FortiGuard Virus Outbreak Prevention cache entries (300 - 86400 sec, default = 300).
	OutbreakPreventionCacheTtl pulumi.IntPtrInput
	// Expiration date of FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionExpiration pulumi.IntPtrInput
	// Turn off FortiGuard Virus Outbreak Prevention service. Valid values: `enable`, `disable`.
	OutbreakPreventionForceOff pulumi.StringPtrInput
	// Interval of time between license checks for FortiGuard Virus Outbreak Prevention contract.
	OutbreakPreventionLicense pulumi.IntPtrInput
	// FortiGuard Virus Outbreak Prevention time out (1 - 30 sec, default = 7).
	OutbreakPreventionTimeout pulumi.IntInput
	// Port used to communicate with the FortiGuard servers.
	Port pulumi.StringPtrInput
	// Protocol used to communicate with the FortiGuard servers. Valid values: `udp`, `http`, `https`.
	Protocol pulumi.StringPtrInput
	// Proxy user password.
	ProxyPassword pulumi.StringPtrInput
	// IP address of the proxy server.
	ProxyServerIp pulumi.StringPtrInput
	// Port used to communicate with the proxy server.
	ProxyServerPort pulumi.IntPtrInput
	// Proxy user name.
	ProxyUsername pulumi.StringPtrInput
	// Cloud sandbox region.
	SandboxRegion pulumi.StringPtrInput
	// Customization options for the FortiGuard DNS service. Valid values: `include-question-section`.
	SdnsOptions pulumi.StringPtrInput
	// IP address of the FortiDNS server.
	SdnsServerIp pulumi.StringPtrInput
	// Port used to communicate with FortiDNS servers.
	SdnsServerPort pulumi.IntPtrInput
	// Service account ID.
	ServiceAccountId pulumi.StringPtrInput
	// Source IPv4 address used to communicate with FortiGuard.
	SourceIp pulumi.StringPtrInput
	// Source IPv6 address used to communicate with FortiGuard.
	SourceIp6 pulumi.StringPtrInput
	// Signature update server location. Valid values: `usa`, `any`.
	UpdateServerLocation pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Enable/disable FortiGuard web filter caching. Valid values: `enable`, `disable`.
	WebfilterCache pulumi.StringPtrInput
	// Time-to-live for web filter cache entries in seconds (300 - 86400).
	WebfilterCacheTtl pulumi.IntPtrInput
	// Expiration date of the FortiGuard web filter contract.
	WebfilterExpiration pulumi.IntPtrInput
	// Enable/disable turning off the FortiGuard web filtering service. Valid values: `enable`, `disable`.
	WebfilterForceOff pulumi.StringPtrInput
	// Interval of time between license checks for the FortiGuard web filter contract.
	WebfilterLicense pulumi.IntPtrInput
	// Web filter query time out (1 - 30 sec, default = 7).
	WebfilterTimeout pulumi.IntInput
}

func (SystemFortiguardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortiguardArgs)(nil)).Elem()
}

type SystemFortiguardInput interface {
	pulumi.Input

	ToSystemFortiguardOutput() SystemFortiguardOutput
	ToSystemFortiguardOutputWithContext(ctx context.Context) SystemFortiguardOutput
}

func (*SystemFortiguard) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFortiguard)(nil))
}

func (i *SystemFortiguard) ToSystemFortiguardOutput() SystemFortiguardOutput {
	return i.ToSystemFortiguardOutputWithContext(context.Background())
}

func (i *SystemFortiguard) ToSystemFortiguardOutputWithContext(ctx context.Context) SystemFortiguardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortiguardOutput)
}

func (i *SystemFortiguard) ToSystemFortiguardPtrOutput() SystemFortiguardPtrOutput {
	return i.ToSystemFortiguardPtrOutputWithContext(context.Background())
}

func (i *SystemFortiguard) ToSystemFortiguardPtrOutputWithContext(ctx context.Context) SystemFortiguardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortiguardPtrOutput)
}

type SystemFortiguardPtrInput interface {
	pulumi.Input

	ToSystemFortiguardPtrOutput() SystemFortiguardPtrOutput
	ToSystemFortiguardPtrOutputWithContext(ctx context.Context) SystemFortiguardPtrOutput
}

type systemFortiguardPtrType SystemFortiguardArgs

func (*systemFortiguardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortiguard)(nil))
}

func (i *systemFortiguardPtrType) ToSystemFortiguardPtrOutput() SystemFortiguardPtrOutput {
	return i.ToSystemFortiguardPtrOutputWithContext(context.Background())
}

func (i *systemFortiguardPtrType) ToSystemFortiguardPtrOutputWithContext(ctx context.Context) SystemFortiguardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortiguardPtrOutput)
}

// SystemFortiguardArrayInput is an input type that accepts SystemFortiguardArray and SystemFortiguardArrayOutput values.
// You can construct a concrete instance of `SystemFortiguardArrayInput` via:
//
//          SystemFortiguardArray{ SystemFortiguardArgs{...} }
type SystemFortiguardArrayInput interface {
	pulumi.Input

	ToSystemFortiguardArrayOutput() SystemFortiguardArrayOutput
	ToSystemFortiguardArrayOutputWithContext(context.Context) SystemFortiguardArrayOutput
}

type SystemFortiguardArray []SystemFortiguardInput

func (SystemFortiguardArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemFortiguard)(nil))
}

func (i SystemFortiguardArray) ToSystemFortiguardArrayOutput() SystemFortiguardArrayOutput {
	return i.ToSystemFortiguardArrayOutputWithContext(context.Background())
}

func (i SystemFortiguardArray) ToSystemFortiguardArrayOutputWithContext(ctx context.Context) SystemFortiguardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortiguardArrayOutput)
}

// SystemFortiguardMapInput is an input type that accepts SystemFortiguardMap and SystemFortiguardMapOutput values.
// You can construct a concrete instance of `SystemFortiguardMapInput` via:
//
//          SystemFortiguardMap{ "key": SystemFortiguardArgs{...} }
type SystemFortiguardMapInput interface {
	pulumi.Input

	ToSystemFortiguardMapOutput() SystemFortiguardMapOutput
	ToSystemFortiguardMapOutputWithContext(context.Context) SystemFortiguardMapOutput
}

type SystemFortiguardMap map[string]SystemFortiguardInput

func (SystemFortiguardMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemFortiguard)(nil))
}

func (i SystemFortiguardMap) ToSystemFortiguardMapOutput() SystemFortiguardMapOutput {
	return i.ToSystemFortiguardMapOutputWithContext(context.Background())
}

func (i SystemFortiguardMap) ToSystemFortiguardMapOutputWithContext(ctx context.Context) SystemFortiguardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortiguardMapOutput)
}

type SystemFortiguardOutput struct {
	*pulumi.OutputState
}

func (SystemFortiguardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFortiguard)(nil))
}

func (o SystemFortiguardOutput) ToSystemFortiguardOutput() SystemFortiguardOutput {
	return o
}

func (o SystemFortiguardOutput) ToSystemFortiguardOutputWithContext(ctx context.Context) SystemFortiguardOutput {
	return o
}

func (o SystemFortiguardOutput) ToSystemFortiguardPtrOutput() SystemFortiguardPtrOutput {
	return o.ToSystemFortiguardPtrOutputWithContext(context.Background())
}

func (o SystemFortiguardOutput) ToSystemFortiguardPtrOutputWithContext(ctx context.Context) SystemFortiguardPtrOutput {
	return o.ApplyT(func(v SystemFortiguard) *SystemFortiguard {
		return &v
	}).(SystemFortiguardPtrOutput)
}

type SystemFortiguardPtrOutput struct {
	*pulumi.OutputState
}

func (SystemFortiguardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortiguard)(nil))
}

func (o SystemFortiguardPtrOutput) ToSystemFortiguardPtrOutput() SystemFortiguardPtrOutput {
	return o
}

func (o SystemFortiguardPtrOutput) ToSystemFortiguardPtrOutputWithContext(ctx context.Context) SystemFortiguardPtrOutput {
	return o
}

type SystemFortiguardArrayOutput struct{ *pulumi.OutputState }

func (SystemFortiguardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFortiguard)(nil))
}

func (o SystemFortiguardArrayOutput) ToSystemFortiguardArrayOutput() SystemFortiguardArrayOutput {
	return o
}

func (o SystemFortiguardArrayOutput) ToSystemFortiguardArrayOutputWithContext(ctx context.Context) SystemFortiguardArrayOutput {
	return o
}

func (o SystemFortiguardArrayOutput) Index(i pulumi.IntInput) SystemFortiguardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFortiguard {
		return vs[0].([]SystemFortiguard)[vs[1].(int)]
	}).(SystemFortiguardOutput)
}

type SystemFortiguardMapOutput struct{ *pulumi.OutputState }

func (SystemFortiguardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemFortiguard)(nil))
}

func (o SystemFortiguardMapOutput) ToSystemFortiguardMapOutput() SystemFortiguardMapOutput {
	return o
}

func (o SystemFortiguardMapOutput) ToSystemFortiguardMapOutputWithContext(ctx context.Context) SystemFortiguardMapOutput {
	return o
}

func (o SystemFortiguardMapOutput) MapIndex(k pulumi.StringInput) SystemFortiguardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemFortiguard {
		return vs[0].(map[string]SystemFortiguard)[vs[1].(string)]
	}).(SystemFortiguardOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemFortiguardOutput{})
	pulumi.RegisterOutputType(SystemFortiguardPtrOutput{})
	pulumi.RegisterOutputType(SystemFortiguardArrayOutput{})
	pulumi.RegisterOutputType(SystemFortiguardMapOutput{})
}
