// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Report themes configuration Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewReportTheme(ctx, "trname", &fortios.ReportThemeArgs{
// 			ColumnCount:     pulumi.String("1"),
// 			GraphChartStyle: pulumi.String("PS"),
// 			PageOrient:      pulumi.String("portrait"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Report Theme can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/reportTheme:ReportTheme labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/reportTheme:ReportTheme labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type ReportTheme struct {
	pulumi.CustomResourceState

	// Bullet list style.
	BulletListStyle pulumi.StringOutput `pulumi:"bulletListStyle"`
	// Report page column count. Valid values: `1`, `2`, `3`.
	ColumnCount pulumi.StringOutput `pulumi:"columnCount"`
	// Default HTML report style.
	DefaultHtmlStyle pulumi.StringOutput `pulumi:"defaultHtmlStyle"`
	// Default PDF report style.
	DefaultPdfStyle pulumi.StringOutput `pulumi:"defaultPdfStyle"`
	// Graph chart style.
	GraphChartStyle pulumi.StringOutput `pulumi:"graphChartStyle"`
	// Report heading style.
	Heading1Style pulumi.StringOutput `pulumi:"heading1Style"`
	// Report heading style.
	Heading2Style pulumi.StringOutput `pulumi:"heading2Style"`
	// Report heading style.
	Heading3Style pulumi.StringOutput `pulumi:"heading3Style"`
	// Report heading style.
	Heading4Style pulumi.StringOutput `pulumi:"heading4Style"`
	// Horizontal line style.
	HlineStyle pulumi.StringOutput `pulumi:"hlineStyle"`
	// Image style.
	ImageStyle pulumi.StringOutput `pulumi:"imageStyle"`
	// Report theme name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Normal text style.
	NormalTextStyle pulumi.StringOutput `pulumi:"normalTextStyle"`
	// Numbered list style.
	NumberedListStyle pulumi.StringOutput `pulumi:"numberedListStyle"`
	// Report page footer style.
	PageFooterStyle pulumi.StringOutput `pulumi:"pageFooterStyle"`
	// Report page header style.
	PageHeaderStyle pulumi.StringOutput `pulumi:"pageHeaderStyle"`
	// Report page orientation. Valid values: `portrait`, `landscape`.
	PageOrient pulumi.StringOutput `pulumi:"pageOrient"`
	// Report page style.
	PageStyle pulumi.StringOutput `pulumi:"pageStyle"`
	// Report subtitle style.
	ReportSubtitleStyle pulumi.StringOutput `pulumi:"reportSubtitleStyle"`
	// Report title style.
	ReportTitleStyle pulumi.StringOutput `pulumi:"reportTitleStyle"`
	// Table chart caption style.
	TableChartCaptionStyle pulumi.StringOutput `pulumi:"tableChartCaptionStyle"`
	// Table chart even row style.
	TableChartEvenRowStyle pulumi.StringOutput `pulumi:"tableChartEvenRowStyle"`
	// Table chart head row style.
	TableChartHeadStyle pulumi.StringOutput `pulumi:"tableChartHeadStyle"`
	// Table chart odd row style.
	TableChartOddRowStyle pulumi.StringOutput `pulumi:"tableChartOddRowStyle"`
	// Table chart style.
	TableChartStyle pulumi.StringOutput `pulumi:"tableChartStyle"`
	// Table of contents heading style.
	TocHeading1Style pulumi.StringOutput `pulumi:"tocHeading1Style"`
	// Table of contents heading style.
	TocHeading2Style pulumi.StringOutput `pulumi:"tocHeading2Style"`
	// Table of contents heading style.
	TocHeading3Style pulumi.StringOutput `pulumi:"tocHeading3Style"`
	// Table of contents heading style.
	TocHeading4Style pulumi.StringOutput `pulumi:"tocHeading4Style"`
	// Table of contents title style.
	TocTitleStyle pulumi.StringOutput `pulumi:"tocTitleStyle"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewReportTheme registers a new resource with the given unique name, arguments, and options.
func NewReportTheme(ctx *pulumi.Context,
	name string, args *ReportThemeArgs, opts ...pulumi.ResourceOption) (*ReportTheme, error) {
	if args == nil {
		args = &ReportThemeArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ReportTheme
	err := ctx.RegisterResource("fortios:index/reportTheme:ReportTheme", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportTheme gets an existing ReportTheme resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportTheme(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportThemeState, opts ...pulumi.ResourceOption) (*ReportTheme, error) {
	var resource ReportTheme
	err := ctx.ReadResource("fortios:index/reportTheme:ReportTheme", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportTheme resources.
type reportThemeState struct {
	// Bullet list style.
	BulletListStyle *string `pulumi:"bulletListStyle"`
	// Report page column count. Valid values: `1`, `2`, `3`.
	ColumnCount *string `pulumi:"columnCount"`
	// Default HTML report style.
	DefaultHtmlStyle *string `pulumi:"defaultHtmlStyle"`
	// Default PDF report style.
	DefaultPdfStyle *string `pulumi:"defaultPdfStyle"`
	// Graph chart style.
	GraphChartStyle *string `pulumi:"graphChartStyle"`
	// Report heading style.
	Heading1Style *string `pulumi:"heading1Style"`
	// Report heading style.
	Heading2Style *string `pulumi:"heading2Style"`
	// Report heading style.
	Heading3Style *string `pulumi:"heading3Style"`
	// Report heading style.
	Heading4Style *string `pulumi:"heading4Style"`
	// Horizontal line style.
	HlineStyle *string `pulumi:"hlineStyle"`
	// Image style.
	ImageStyle *string `pulumi:"imageStyle"`
	// Report theme name.
	Name *string `pulumi:"name"`
	// Normal text style.
	NormalTextStyle *string `pulumi:"normalTextStyle"`
	// Numbered list style.
	NumberedListStyle *string `pulumi:"numberedListStyle"`
	// Report page footer style.
	PageFooterStyle *string `pulumi:"pageFooterStyle"`
	// Report page header style.
	PageHeaderStyle *string `pulumi:"pageHeaderStyle"`
	// Report page orientation. Valid values: `portrait`, `landscape`.
	PageOrient *string `pulumi:"pageOrient"`
	// Report page style.
	PageStyle *string `pulumi:"pageStyle"`
	// Report subtitle style.
	ReportSubtitleStyle *string `pulumi:"reportSubtitleStyle"`
	// Report title style.
	ReportTitleStyle *string `pulumi:"reportTitleStyle"`
	// Table chart caption style.
	TableChartCaptionStyle *string `pulumi:"tableChartCaptionStyle"`
	// Table chart even row style.
	TableChartEvenRowStyle *string `pulumi:"tableChartEvenRowStyle"`
	// Table chart head row style.
	TableChartHeadStyle *string `pulumi:"tableChartHeadStyle"`
	// Table chart odd row style.
	TableChartOddRowStyle *string `pulumi:"tableChartOddRowStyle"`
	// Table chart style.
	TableChartStyle *string `pulumi:"tableChartStyle"`
	// Table of contents heading style.
	TocHeading1Style *string `pulumi:"tocHeading1Style"`
	// Table of contents heading style.
	TocHeading2Style *string `pulumi:"tocHeading2Style"`
	// Table of contents heading style.
	TocHeading3Style *string `pulumi:"tocHeading3Style"`
	// Table of contents heading style.
	TocHeading4Style *string `pulumi:"tocHeading4Style"`
	// Table of contents title style.
	TocTitleStyle *string `pulumi:"tocTitleStyle"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type ReportThemeState struct {
	// Bullet list style.
	BulletListStyle pulumi.StringPtrInput
	// Report page column count. Valid values: `1`, `2`, `3`.
	ColumnCount pulumi.StringPtrInput
	// Default HTML report style.
	DefaultHtmlStyle pulumi.StringPtrInput
	// Default PDF report style.
	DefaultPdfStyle pulumi.StringPtrInput
	// Graph chart style.
	GraphChartStyle pulumi.StringPtrInput
	// Report heading style.
	Heading1Style pulumi.StringPtrInput
	// Report heading style.
	Heading2Style pulumi.StringPtrInput
	// Report heading style.
	Heading3Style pulumi.StringPtrInput
	// Report heading style.
	Heading4Style pulumi.StringPtrInput
	// Horizontal line style.
	HlineStyle pulumi.StringPtrInput
	// Image style.
	ImageStyle pulumi.StringPtrInput
	// Report theme name.
	Name pulumi.StringPtrInput
	// Normal text style.
	NormalTextStyle pulumi.StringPtrInput
	// Numbered list style.
	NumberedListStyle pulumi.StringPtrInput
	// Report page footer style.
	PageFooterStyle pulumi.StringPtrInput
	// Report page header style.
	PageHeaderStyle pulumi.StringPtrInput
	// Report page orientation. Valid values: `portrait`, `landscape`.
	PageOrient pulumi.StringPtrInput
	// Report page style.
	PageStyle pulumi.StringPtrInput
	// Report subtitle style.
	ReportSubtitleStyle pulumi.StringPtrInput
	// Report title style.
	ReportTitleStyle pulumi.StringPtrInput
	// Table chart caption style.
	TableChartCaptionStyle pulumi.StringPtrInput
	// Table chart even row style.
	TableChartEvenRowStyle pulumi.StringPtrInput
	// Table chart head row style.
	TableChartHeadStyle pulumi.StringPtrInput
	// Table chart odd row style.
	TableChartOddRowStyle pulumi.StringPtrInput
	// Table chart style.
	TableChartStyle pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading1Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading2Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading3Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading4Style pulumi.StringPtrInput
	// Table of contents title style.
	TocTitleStyle pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ReportThemeState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportThemeState)(nil)).Elem()
}

type reportThemeArgs struct {
	// Bullet list style.
	BulletListStyle *string `pulumi:"bulletListStyle"`
	// Report page column count. Valid values: `1`, `2`, `3`.
	ColumnCount *string `pulumi:"columnCount"`
	// Default HTML report style.
	DefaultHtmlStyle *string `pulumi:"defaultHtmlStyle"`
	// Default PDF report style.
	DefaultPdfStyle *string `pulumi:"defaultPdfStyle"`
	// Graph chart style.
	GraphChartStyle *string `pulumi:"graphChartStyle"`
	// Report heading style.
	Heading1Style *string `pulumi:"heading1Style"`
	// Report heading style.
	Heading2Style *string `pulumi:"heading2Style"`
	// Report heading style.
	Heading3Style *string `pulumi:"heading3Style"`
	// Report heading style.
	Heading4Style *string `pulumi:"heading4Style"`
	// Horizontal line style.
	HlineStyle *string `pulumi:"hlineStyle"`
	// Image style.
	ImageStyle *string `pulumi:"imageStyle"`
	// Report theme name.
	Name *string `pulumi:"name"`
	// Normal text style.
	NormalTextStyle *string `pulumi:"normalTextStyle"`
	// Numbered list style.
	NumberedListStyle *string `pulumi:"numberedListStyle"`
	// Report page footer style.
	PageFooterStyle *string `pulumi:"pageFooterStyle"`
	// Report page header style.
	PageHeaderStyle *string `pulumi:"pageHeaderStyle"`
	// Report page orientation. Valid values: `portrait`, `landscape`.
	PageOrient *string `pulumi:"pageOrient"`
	// Report page style.
	PageStyle *string `pulumi:"pageStyle"`
	// Report subtitle style.
	ReportSubtitleStyle *string `pulumi:"reportSubtitleStyle"`
	// Report title style.
	ReportTitleStyle *string `pulumi:"reportTitleStyle"`
	// Table chart caption style.
	TableChartCaptionStyle *string `pulumi:"tableChartCaptionStyle"`
	// Table chart even row style.
	TableChartEvenRowStyle *string `pulumi:"tableChartEvenRowStyle"`
	// Table chart head row style.
	TableChartHeadStyle *string `pulumi:"tableChartHeadStyle"`
	// Table chart odd row style.
	TableChartOddRowStyle *string `pulumi:"tableChartOddRowStyle"`
	// Table chart style.
	TableChartStyle *string `pulumi:"tableChartStyle"`
	// Table of contents heading style.
	TocHeading1Style *string `pulumi:"tocHeading1Style"`
	// Table of contents heading style.
	TocHeading2Style *string `pulumi:"tocHeading2Style"`
	// Table of contents heading style.
	TocHeading3Style *string `pulumi:"tocHeading3Style"`
	// Table of contents heading style.
	TocHeading4Style *string `pulumi:"tocHeading4Style"`
	// Table of contents title style.
	TocTitleStyle *string `pulumi:"tocTitleStyle"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ReportTheme resource.
type ReportThemeArgs struct {
	// Bullet list style.
	BulletListStyle pulumi.StringPtrInput
	// Report page column count. Valid values: `1`, `2`, `3`.
	ColumnCount pulumi.StringPtrInput
	// Default HTML report style.
	DefaultHtmlStyle pulumi.StringPtrInput
	// Default PDF report style.
	DefaultPdfStyle pulumi.StringPtrInput
	// Graph chart style.
	GraphChartStyle pulumi.StringPtrInput
	// Report heading style.
	Heading1Style pulumi.StringPtrInput
	// Report heading style.
	Heading2Style pulumi.StringPtrInput
	// Report heading style.
	Heading3Style pulumi.StringPtrInput
	// Report heading style.
	Heading4Style pulumi.StringPtrInput
	// Horizontal line style.
	HlineStyle pulumi.StringPtrInput
	// Image style.
	ImageStyle pulumi.StringPtrInput
	// Report theme name.
	Name pulumi.StringPtrInput
	// Normal text style.
	NormalTextStyle pulumi.StringPtrInput
	// Numbered list style.
	NumberedListStyle pulumi.StringPtrInput
	// Report page footer style.
	PageFooterStyle pulumi.StringPtrInput
	// Report page header style.
	PageHeaderStyle pulumi.StringPtrInput
	// Report page orientation. Valid values: `portrait`, `landscape`.
	PageOrient pulumi.StringPtrInput
	// Report page style.
	PageStyle pulumi.StringPtrInput
	// Report subtitle style.
	ReportSubtitleStyle pulumi.StringPtrInput
	// Report title style.
	ReportTitleStyle pulumi.StringPtrInput
	// Table chart caption style.
	TableChartCaptionStyle pulumi.StringPtrInput
	// Table chart even row style.
	TableChartEvenRowStyle pulumi.StringPtrInput
	// Table chart head row style.
	TableChartHeadStyle pulumi.StringPtrInput
	// Table chart odd row style.
	TableChartOddRowStyle pulumi.StringPtrInput
	// Table chart style.
	TableChartStyle pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading1Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading2Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading3Style pulumi.StringPtrInput
	// Table of contents heading style.
	TocHeading4Style pulumi.StringPtrInput
	// Table of contents title style.
	TocTitleStyle pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (ReportThemeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportThemeArgs)(nil)).Elem()
}

type ReportThemeInput interface {
	pulumi.Input

	ToReportThemeOutput() ReportThemeOutput
	ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput
}

func (*ReportTheme) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportTheme)(nil)).Elem()
}

func (i *ReportTheme) ToReportThemeOutput() ReportThemeOutput {
	return i.ToReportThemeOutputWithContext(context.Background())
}

func (i *ReportTheme) ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeOutput)
}

// ReportThemeArrayInput is an input type that accepts ReportThemeArray and ReportThemeArrayOutput values.
// You can construct a concrete instance of `ReportThemeArrayInput` via:
//
//          ReportThemeArray{ ReportThemeArgs{...} }
type ReportThemeArrayInput interface {
	pulumi.Input

	ToReportThemeArrayOutput() ReportThemeArrayOutput
	ToReportThemeArrayOutputWithContext(context.Context) ReportThemeArrayOutput
}

type ReportThemeArray []ReportThemeInput

func (ReportThemeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportTheme)(nil)).Elem()
}

func (i ReportThemeArray) ToReportThemeArrayOutput() ReportThemeArrayOutput {
	return i.ToReportThemeArrayOutputWithContext(context.Background())
}

func (i ReportThemeArray) ToReportThemeArrayOutputWithContext(ctx context.Context) ReportThemeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeArrayOutput)
}

// ReportThemeMapInput is an input type that accepts ReportThemeMap and ReportThemeMapOutput values.
// You can construct a concrete instance of `ReportThemeMapInput` via:
//
//          ReportThemeMap{ "key": ReportThemeArgs{...} }
type ReportThemeMapInput interface {
	pulumi.Input

	ToReportThemeMapOutput() ReportThemeMapOutput
	ToReportThemeMapOutputWithContext(context.Context) ReportThemeMapOutput
}

type ReportThemeMap map[string]ReportThemeInput

func (ReportThemeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportTheme)(nil)).Elem()
}

func (i ReportThemeMap) ToReportThemeMapOutput() ReportThemeMapOutput {
	return i.ToReportThemeMapOutputWithContext(context.Background())
}

func (i ReportThemeMap) ToReportThemeMapOutputWithContext(ctx context.Context) ReportThemeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeMapOutput)
}

type ReportThemeOutput struct{ *pulumi.OutputState }

func (ReportThemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportTheme)(nil)).Elem()
}

func (o ReportThemeOutput) ToReportThemeOutput() ReportThemeOutput {
	return o
}

func (o ReportThemeOutput) ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput {
	return o
}

type ReportThemeArrayOutput struct{ *pulumi.OutputState }

func (ReportThemeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportTheme)(nil)).Elem()
}

func (o ReportThemeArrayOutput) ToReportThemeArrayOutput() ReportThemeArrayOutput {
	return o
}

func (o ReportThemeArrayOutput) ToReportThemeArrayOutputWithContext(ctx context.Context) ReportThemeArrayOutput {
	return o
}

func (o ReportThemeArrayOutput) Index(i pulumi.IntInput) ReportThemeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportTheme {
		return vs[0].([]*ReportTheme)[vs[1].(int)]
	}).(ReportThemeOutput)
}

type ReportThemeMapOutput struct{ *pulumi.OutputState }

func (ReportThemeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportTheme)(nil)).Elem()
}

func (o ReportThemeMapOutput) ToReportThemeMapOutput() ReportThemeMapOutput {
	return o
}

func (o ReportThemeMapOutput) ToReportThemeMapOutputWithContext(ctx context.Context) ReportThemeMapOutput {
	return o
}

func (o ReportThemeMapOutput) MapIndex(k pulumi.StringInput) ReportThemeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportTheme {
		return vs[0].(map[string]*ReportTheme)[vs[1].(string)]
	}).(ReportThemeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeInput)(nil)).Elem(), &ReportTheme{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeArrayInput)(nil)).Elem(), ReportThemeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeMapInput)(nil)).Elem(), ReportThemeMap{})
	pulumi.RegisterOutputType(ReportThemeOutput{})
	pulumi.RegisterOutputType(ReportThemeArrayOutput{})
	pulumi.RegisterOutputType(ReportThemeMapOutput{})
}
