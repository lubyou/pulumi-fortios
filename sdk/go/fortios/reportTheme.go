// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReportTheme struct {
	pulumi.CustomResourceState

	BulletListStyle        pulumi.StringOutput    `pulumi:"bulletListStyle"`
	ColumnCount            pulumi.StringOutput    `pulumi:"columnCount"`
	DefaultHtmlStyle       pulumi.StringOutput    `pulumi:"defaultHtmlStyle"`
	DefaultPdfStyle        pulumi.StringOutput    `pulumi:"defaultPdfStyle"`
	GraphChartStyle        pulumi.StringOutput    `pulumi:"graphChartStyle"`
	Heading1Style          pulumi.StringOutput    `pulumi:"heading1Style"`
	Heading2Style          pulumi.StringOutput    `pulumi:"heading2Style"`
	Heading3Style          pulumi.StringOutput    `pulumi:"heading3Style"`
	Heading4Style          pulumi.StringOutput    `pulumi:"heading4Style"`
	HlineStyle             pulumi.StringOutput    `pulumi:"hlineStyle"`
	ImageStyle             pulumi.StringOutput    `pulumi:"imageStyle"`
	Name                   pulumi.StringOutput    `pulumi:"name"`
	NormalTextStyle        pulumi.StringOutput    `pulumi:"normalTextStyle"`
	NumberedListStyle      pulumi.StringOutput    `pulumi:"numberedListStyle"`
	PageFooterStyle        pulumi.StringOutput    `pulumi:"pageFooterStyle"`
	PageHeaderStyle        pulumi.StringOutput    `pulumi:"pageHeaderStyle"`
	PageOrient             pulumi.StringOutput    `pulumi:"pageOrient"`
	PageStyle              pulumi.StringOutput    `pulumi:"pageStyle"`
	ReportSubtitleStyle    pulumi.StringOutput    `pulumi:"reportSubtitleStyle"`
	ReportTitleStyle       pulumi.StringOutput    `pulumi:"reportTitleStyle"`
	TableChartCaptionStyle pulumi.StringOutput    `pulumi:"tableChartCaptionStyle"`
	TableChartEvenRowStyle pulumi.StringOutput    `pulumi:"tableChartEvenRowStyle"`
	TableChartHeadStyle    pulumi.StringOutput    `pulumi:"tableChartHeadStyle"`
	TableChartOddRowStyle  pulumi.StringOutput    `pulumi:"tableChartOddRowStyle"`
	TableChartStyle        pulumi.StringOutput    `pulumi:"tableChartStyle"`
	TocHeading1Style       pulumi.StringOutput    `pulumi:"tocHeading1Style"`
	TocHeading2Style       pulumi.StringOutput    `pulumi:"tocHeading2Style"`
	TocHeading3Style       pulumi.StringOutput    `pulumi:"tocHeading3Style"`
	TocHeading4Style       pulumi.StringOutput    `pulumi:"tocHeading4Style"`
	TocTitleStyle          pulumi.StringOutput    `pulumi:"tocTitleStyle"`
	Vdomparam              pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewReportTheme registers a new resource with the given unique name, arguments, and options.
func NewReportTheme(ctx *pulumi.Context,
	name string, args *ReportThemeArgs, opts ...pulumi.ResourceOption) (*ReportTheme, error) {
	if args == nil {
		args = &ReportThemeArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReportTheme
	err := ctx.RegisterResource("fortios:index/reportTheme:ReportTheme", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportTheme gets an existing ReportTheme resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportTheme(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportThemeState, opts ...pulumi.ResourceOption) (*ReportTheme, error) {
	var resource ReportTheme
	err := ctx.ReadResource("fortios:index/reportTheme:ReportTheme", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportTheme resources.
type reportThemeState struct {
	BulletListStyle        *string `pulumi:"bulletListStyle"`
	ColumnCount            *string `pulumi:"columnCount"`
	DefaultHtmlStyle       *string `pulumi:"defaultHtmlStyle"`
	DefaultPdfStyle        *string `pulumi:"defaultPdfStyle"`
	GraphChartStyle        *string `pulumi:"graphChartStyle"`
	Heading1Style          *string `pulumi:"heading1Style"`
	Heading2Style          *string `pulumi:"heading2Style"`
	Heading3Style          *string `pulumi:"heading3Style"`
	Heading4Style          *string `pulumi:"heading4Style"`
	HlineStyle             *string `pulumi:"hlineStyle"`
	ImageStyle             *string `pulumi:"imageStyle"`
	Name                   *string `pulumi:"name"`
	NormalTextStyle        *string `pulumi:"normalTextStyle"`
	NumberedListStyle      *string `pulumi:"numberedListStyle"`
	PageFooterStyle        *string `pulumi:"pageFooterStyle"`
	PageHeaderStyle        *string `pulumi:"pageHeaderStyle"`
	PageOrient             *string `pulumi:"pageOrient"`
	PageStyle              *string `pulumi:"pageStyle"`
	ReportSubtitleStyle    *string `pulumi:"reportSubtitleStyle"`
	ReportTitleStyle       *string `pulumi:"reportTitleStyle"`
	TableChartCaptionStyle *string `pulumi:"tableChartCaptionStyle"`
	TableChartEvenRowStyle *string `pulumi:"tableChartEvenRowStyle"`
	TableChartHeadStyle    *string `pulumi:"tableChartHeadStyle"`
	TableChartOddRowStyle  *string `pulumi:"tableChartOddRowStyle"`
	TableChartStyle        *string `pulumi:"tableChartStyle"`
	TocHeading1Style       *string `pulumi:"tocHeading1Style"`
	TocHeading2Style       *string `pulumi:"tocHeading2Style"`
	TocHeading3Style       *string `pulumi:"tocHeading3Style"`
	TocHeading4Style       *string `pulumi:"tocHeading4Style"`
	TocTitleStyle          *string `pulumi:"tocTitleStyle"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

type ReportThemeState struct {
	BulletListStyle        pulumi.StringPtrInput
	ColumnCount            pulumi.StringPtrInput
	DefaultHtmlStyle       pulumi.StringPtrInput
	DefaultPdfStyle        pulumi.StringPtrInput
	GraphChartStyle        pulumi.StringPtrInput
	Heading1Style          pulumi.StringPtrInput
	Heading2Style          pulumi.StringPtrInput
	Heading3Style          pulumi.StringPtrInput
	Heading4Style          pulumi.StringPtrInput
	HlineStyle             pulumi.StringPtrInput
	ImageStyle             pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	NormalTextStyle        pulumi.StringPtrInput
	NumberedListStyle      pulumi.StringPtrInput
	PageFooterStyle        pulumi.StringPtrInput
	PageHeaderStyle        pulumi.StringPtrInput
	PageOrient             pulumi.StringPtrInput
	PageStyle              pulumi.StringPtrInput
	ReportSubtitleStyle    pulumi.StringPtrInput
	ReportTitleStyle       pulumi.StringPtrInput
	TableChartCaptionStyle pulumi.StringPtrInput
	TableChartEvenRowStyle pulumi.StringPtrInput
	TableChartHeadStyle    pulumi.StringPtrInput
	TableChartOddRowStyle  pulumi.StringPtrInput
	TableChartStyle        pulumi.StringPtrInput
	TocHeading1Style       pulumi.StringPtrInput
	TocHeading2Style       pulumi.StringPtrInput
	TocHeading3Style       pulumi.StringPtrInput
	TocHeading4Style       pulumi.StringPtrInput
	TocTitleStyle          pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (ReportThemeState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportThemeState)(nil)).Elem()
}

type reportThemeArgs struct {
	BulletListStyle        *string `pulumi:"bulletListStyle"`
	ColumnCount            *string `pulumi:"columnCount"`
	DefaultHtmlStyle       *string `pulumi:"defaultHtmlStyle"`
	DefaultPdfStyle        *string `pulumi:"defaultPdfStyle"`
	GraphChartStyle        *string `pulumi:"graphChartStyle"`
	Heading1Style          *string `pulumi:"heading1Style"`
	Heading2Style          *string `pulumi:"heading2Style"`
	Heading3Style          *string `pulumi:"heading3Style"`
	Heading4Style          *string `pulumi:"heading4Style"`
	HlineStyle             *string `pulumi:"hlineStyle"`
	ImageStyle             *string `pulumi:"imageStyle"`
	Name                   *string `pulumi:"name"`
	NormalTextStyle        *string `pulumi:"normalTextStyle"`
	NumberedListStyle      *string `pulumi:"numberedListStyle"`
	PageFooterStyle        *string `pulumi:"pageFooterStyle"`
	PageHeaderStyle        *string `pulumi:"pageHeaderStyle"`
	PageOrient             *string `pulumi:"pageOrient"`
	PageStyle              *string `pulumi:"pageStyle"`
	ReportSubtitleStyle    *string `pulumi:"reportSubtitleStyle"`
	ReportTitleStyle       *string `pulumi:"reportTitleStyle"`
	TableChartCaptionStyle *string `pulumi:"tableChartCaptionStyle"`
	TableChartEvenRowStyle *string `pulumi:"tableChartEvenRowStyle"`
	TableChartHeadStyle    *string `pulumi:"tableChartHeadStyle"`
	TableChartOddRowStyle  *string `pulumi:"tableChartOddRowStyle"`
	TableChartStyle        *string `pulumi:"tableChartStyle"`
	TocHeading1Style       *string `pulumi:"tocHeading1Style"`
	TocHeading2Style       *string `pulumi:"tocHeading2Style"`
	TocHeading3Style       *string `pulumi:"tocHeading3Style"`
	TocHeading4Style       *string `pulumi:"tocHeading4Style"`
	TocTitleStyle          *string `pulumi:"tocTitleStyle"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a ReportTheme resource.
type ReportThemeArgs struct {
	BulletListStyle        pulumi.StringPtrInput
	ColumnCount            pulumi.StringPtrInput
	DefaultHtmlStyle       pulumi.StringPtrInput
	DefaultPdfStyle        pulumi.StringPtrInput
	GraphChartStyle        pulumi.StringPtrInput
	Heading1Style          pulumi.StringPtrInput
	Heading2Style          pulumi.StringPtrInput
	Heading3Style          pulumi.StringPtrInput
	Heading4Style          pulumi.StringPtrInput
	HlineStyle             pulumi.StringPtrInput
	ImageStyle             pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	NormalTextStyle        pulumi.StringPtrInput
	NumberedListStyle      pulumi.StringPtrInput
	PageFooterStyle        pulumi.StringPtrInput
	PageHeaderStyle        pulumi.StringPtrInput
	PageOrient             pulumi.StringPtrInput
	PageStyle              pulumi.StringPtrInput
	ReportSubtitleStyle    pulumi.StringPtrInput
	ReportTitleStyle       pulumi.StringPtrInput
	TableChartCaptionStyle pulumi.StringPtrInput
	TableChartEvenRowStyle pulumi.StringPtrInput
	TableChartHeadStyle    pulumi.StringPtrInput
	TableChartOddRowStyle  pulumi.StringPtrInput
	TableChartStyle        pulumi.StringPtrInput
	TocHeading1Style       pulumi.StringPtrInput
	TocHeading2Style       pulumi.StringPtrInput
	TocHeading3Style       pulumi.StringPtrInput
	TocHeading4Style       pulumi.StringPtrInput
	TocTitleStyle          pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (ReportThemeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportThemeArgs)(nil)).Elem()
}

type ReportThemeInput interface {
	pulumi.Input

	ToReportThemeOutput() ReportThemeOutput
	ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput
}

func (*ReportTheme) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportTheme)(nil)).Elem()
}

func (i *ReportTheme) ToReportThemeOutput() ReportThemeOutput {
	return i.ToReportThemeOutputWithContext(context.Background())
}

func (i *ReportTheme) ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeOutput)
}

// ReportThemeArrayInput is an input type that accepts ReportThemeArray and ReportThemeArrayOutput values.
// You can construct a concrete instance of `ReportThemeArrayInput` via:
//
//	ReportThemeArray{ ReportThemeArgs{...} }
type ReportThemeArrayInput interface {
	pulumi.Input

	ToReportThemeArrayOutput() ReportThemeArrayOutput
	ToReportThemeArrayOutputWithContext(context.Context) ReportThemeArrayOutput
}

type ReportThemeArray []ReportThemeInput

func (ReportThemeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportTheme)(nil)).Elem()
}

func (i ReportThemeArray) ToReportThemeArrayOutput() ReportThemeArrayOutput {
	return i.ToReportThemeArrayOutputWithContext(context.Background())
}

func (i ReportThemeArray) ToReportThemeArrayOutputWithContext(ctx context.Context) ReportThemeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeArrayOutput)
}

// ReportThemeMapInput is an input type that accepts ReportThemeMap and ReportThemeMapOutput values.
// You can construct a concrete instance of `ReportThemeMapInput` via:
//
//	ReportThemeMap{ "key": ReportThemeArgs{...} }
type ReportThemeMapInput interface {
	pulumi.Input

	ToReportThemeMapOutput() ReportThemeMapOutput
	ToReportThemeMapOutputWithContext(context.Context) ReportThemeMapOutput
}

type ReportThemeMap map[string]ReportThemeInput

func (ReportThemeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportTheme)(nil)).Elem()
}

func (i ReportThemeMap) ToReportThemeMapOutput() ReportThemeMapOutput {
	return i.ToReportThemeMapOutputWithContext(context.Background())
}

func (i ReportThemeMap) ToReportThemeMapOutputWithContext(ctx context.Context) ReportThemeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportThemeMapOutput)
}

type ReportThemeOutput struct{ *pulumi.OutputState }

func (ReportThemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportTheme)(nil)).Elem()
}

func (o ReportThemeOutput) ToReportThemeOutput() ReportThemeOutput {
	return o
}

func (o ReportThemeOutput) ToReportThemeOutputWithContext(ctx context.Context) ReportThemeOutput {
	return o
}

func (o ReportThemeOutput) BulletListStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.BulletListStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) ColumnCount() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.ColumnCount }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) DefaultHtmlStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.DefaultHtmlStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) DefaultPdfStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.DefaultPdfStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) GraphChartStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.GraphChartStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Heading1Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.Heading1Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Heading2Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.Heading2Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Heading3Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.Heading3Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Heading4Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.Heading4Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) HlineStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.HlineStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) ImageStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.ImageStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) NormalTextStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.NormalTextStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) NumberedListStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.NumberedListStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) PageFooterStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.PageFooterStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) PageHeaderStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.PageHeaderStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) PageOrient() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.PageOrient }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) PageStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.PageStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) ReportSubtitleStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.ReportSubtitleStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) ReportTitleStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.ReportTitleStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TableChartCaptionStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TableChartCaptionStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TableChartEvenRowStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TableChartEvenRowStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TableChartHeadStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TableChartHeadStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TableChartOddRowStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TableChartOddRowStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TableChartStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TableChartStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TocHeading1Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TocHeading1Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TocHeading2Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TocHeading2Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TocHeading3Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TocHeading3Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TocHeading4Style() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TocHeading4Style }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) TocTitleStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringOutput { return v.TocTitleStyle }).(pulumi.StringOutput)
}

func (o ReportThemeOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportTheme) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type ReportThemeArrayOutput struct{ *pulumi.OutputState }

func (ReportThemeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportTheme)(nil)).Elem()
}

func (o ReportThemeArrayOutput) ToReportThemeArrayOutput() ReportThemeArrayOutput {
	return o
}

func (o ReportThemeArrayOutput) ToReportThemeArrayOutputWithContext(ctx context.Context) ReportThemeArrayOutput {
	return o
}

func (o ReportThemeArrayOutput) Index(i pulumi.IntInput) ReportThemeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportTheme {
		return vs[0].([]*ReportTheme)[vs[1].(int)]
	}).(ReportThemeOutput)
}

type ReportThemeMapOutput struct{ *pulumi.OutputState }

func (ReportThemeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportTheme)(nil)).Elem()
}

func (o ReportThemeMapOutput) ToReportThemeMapOutput() ReportThemeMapOutput {
	return o
}

func (o ReportThemeMapOutput) ToReportThemeMapOutputWithContext(ctx context.Context) ReportThemeMapOutput {
	return o
}

func (o ReportThemeMapOutput) MapIndex(k pulumi.StringInput) ReportThemeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportTheme {
		return vs[0].(map[string]*ReportTheme)[vs[1].(string)]
	}).(ReportThemeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeInput)(nil)).Elem(), &ReportTheme{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeArrayInput)(nil)).Elem(), ReportThemeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportThemeMapInput)(nil)).Elem(), ReportThemeMap{})
	pulumi.RegisterOutputType(ReportThemeOutput{})
	pulumi.RegisterOutputType(ReportThemeArrayOutput{})
	pulumi.RegisterOutputType(ReportThemeMapOutput{})
}
