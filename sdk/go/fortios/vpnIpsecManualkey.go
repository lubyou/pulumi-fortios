// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpnIpsecManualkey struct {
	pulumi.CustomResourceState

	Authentication pulumi.StringOutput    `pulumi:"authentication"`
	Authkey        pulumi.StringOutput    `pulumi:"authkey"`
	Enckey         pulumi.StringOutput    `pulumi:"enckey"`
	Encryption     pulumi.StringOutput    `pulumi:"encryption"`
	Interface      pulumi.StringOutput    `pulumi:"interface"`
	LocalGw        pulumi.StringOutput    `pulumi:"localGw"`
	Localspi       pulumi.StringOutput    `pulumi:"localspi"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	NpuOffload     pulumi.StringOutput    `pulumi:"npuOffload"`
	RemoteGw       pulumi.StringOutput    `pulumi:"remoteGw"`
	Remotespi      pulumi.StringOutput    `pulumi:"remotespi"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewVpnIpsecManualkey registers a new resource with the given unique name, arguments, and options.
func NewVpnIpsecManualkey(ctx *pulumi.Context,
	name string, args *VpnIpsecManualkeyArgs, opts ...pulumi.ResourceOption) (*VpnIpsecManualkey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.Encryption == nil {
		return nil, errors.New("invalid value for required argument 'Encryption'")
	}
	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.RemoteGw == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGw'")
	}
	if args.Authkey != nil {
		args.Authkey = pulumi.ToSecret(args.Authkey).(pulumi.StringPtrInput)
	}
	if args.Enckey != nil {
		args.Enckey = pulumi.ToSecret(args.Enckey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"authkey",
		"enckey",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource VpnIpsecManualkey
	err := ctx.RegisterResource("fortios:index/vpnIpsecManualkey:VpnIpsecManualkey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnIpsecManualkey gets an existing VpnIpsecManualkey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnIpsecManualkey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnIpsecManualkeyState, opts ...pulumi.ResourceOption) (*VpnIpsecManualkey, error) {
	var resource VpnIpsecManualkey
	err := ctx.ReadResource("fortios:index/vpnIpsecManualkey:VpnIpsecManualkey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnIpsecManualkey resources.
type vpnIpsecManualkeyState struct {
	Authentication *string `pulumi:"authentication"`
	Authkey        *string `pulumi:"authkey"`
	Enckey         *string `pulumi:"enckey"`
	Encryption     *string `pulumi:"encryption"`
	Interface      *string `pulumi:"interface"`
	LocalGw        *string `pulumi:"localGw"`
	Localspi       *string `pulumi:"localspi"`
	Name           *string `pulumi:"name"`
	NpuOffload     *string `pulumi:"npuOffload"`
	RemoteGw       *string `pulumi:"remoteGw"`
	Remotespi      *string `pulumi:"remotespi"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

type VpnIpsecManualkeyState struct {
	Authentication pulumi.StringPtrInput
	Authkey        pulumi.StringPtrInput
	Enckey         pulumi.StringPtrInput
	Encryption     pulumi.StringPtrInput
	Interface      pulumi.StringPtrInput
	LocalGw        pulumi.StringPtrInput
	Localspi       pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	NpuOffload     pulumi.StringPtrInput
	RemoteGw       pulumi.StringPtrInput
	Remotespi      pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (VpnIpsecManualkeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecManualkeyState)(nil)).Elem()
}

type vpnIpsecManualkeyArgs struct {
	Authentication string  `pulumi:"authentication"`
	Authkey        *string `pulumi:"authkey"`
	Enckey         *string `pulumi:"enckey"`
	Encryption     string  `pulumi:"encryption"`
	Interface      string  `pulumi:"interface"`
	LocalGw        *string `pulumi:"localGw"`
	Localspi       *string `pulumi:"localspi"`
	Name           *string `pulumi:"name"`
	NpuOffload     *string `pulumi:"npuOffload"`
	RemoteGw       string  `pulumi:"remoteGw"`
	Remotespi      *string `pulumi:"remotespi"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a VpnIpsecManualkey resource.
type VpnIpsecManualkeyArgs struct {
	Authentication pulumi.StringInput
	Authkey        pulumi.StringPtrInput
	Enckey         pulumi.StringPtrInput
	Encryption     pulumi.StringInput
	Interface      pulumi.StringInput
	LocalGw        pulumi.StringPtrInput
	Localspi       pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	NpuOffload     pulumi.StringPtrInput
	RemoteGw       pulumi.StringInput
	Remotespi      pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
}

func (VpnIpsecManualkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnIpsecManualkeyArgs)(nil)).Elem()
}

type VpnIpsecManualkeyInput interface {
	pulumi.Input

	ToVpnIpsecManualkeyOutput() VpnIpsecManualkeyOutput
	ToVpnIpsecManualkeyOutputWithContext(ctx context.Context) VpnIpsecManualkeyOutput
}

func (*VpnIpsecManualkey) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecManualkey)(nil)).Elem()
}

func (i *VpnIpsecManualkey) ToVpnIpsecManualkeyOutput() VpnIpsecManualkeyOutput {
	return i.ToVpnIpsecManualkeyOutputWithContext(context.Background())
}

func (i *VpnIpsecManualkey) ToVpnIpsecManualkeyOutputWithContext(ctx context.Context) VpnIpsecManualkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecManualkeyOutput)
}

// VpnIpsecManualkeyArrayInput is an input type that accepts VpnIpsecManualkeyArray and VpnIpsecManualkeyArrayOutput values.
// You can construct a concrete instance of `VpnIpsecManualkeyArrayInput` via:
//
//	VpnIpsecManualkeyArray{ VpnIpsecManualkeyArgs{...} }
type VpnIpsecManualkeyArrayInput interface {
	pulumi.Input

	ToVpnIpsecManualkeyArrayOutput() VpnIpsecManualkeyArrayOutput
	ToVpnIpsecManualkeyArrayOutputWithContext(context.Context) VpnIpsecManualkeyArrayOutput
}

type VpnIpsecManualkeyArray []VpnIpsecManualkeyInput

func (VpnIpsecManualkeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecManualkey)(nil)).Elem()
}

func (i VpnIpsecManualkeyArray) ToVpnIpsecManualkeyArrayOutput() VpnIpsecManualkeyArrayOutput {
	return i.ToVpnIpsecManualkeyArrayOutputWithContext(context.Background())
}

func (i VpnIpsecManualkeyArray) ToVpnIpsecManualkeyArrayOutputWithContext(ctx context.Context) VpnIpsecManualkeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecManualkeyArrayOutput)
}

// VpnIpsecManualkeyMapInput is an input type that accepts VpnIpsecManualkeyMap and VpnIpsecManualkeyMapOutput values.
// You can construct a concrete instance of `VpnIpsecManualkeyMapInput` via:
//
//	VpnIpsecManualkeyMap{ "key": VpnIpsecManualkeyArgs{...} }
type VpnIpsecManualkeyMapInput interface {
	pulumi.Input

	ToVpnIpsecManualkeyMapOutput() VpnIpsecManualkeyMapOutput
	ToVpnIpsecManualkeyMapOutputWithContext(context.Context) VpnIpsecManualkeyMapOutput
}

type VpnIpsecManualkeyMap map[string]VpnIpsecManualkeyInput

func (VpnIpsecManualkeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecManualkey)(nil)).Elem()
}

func (i VpnIpsecManualkeyMap) ToVpnIpsecManualkeyMapOutput() VpnIpsecManualkeyMapOutput {
	return i.ToVpnIpsecManualkeyMapOutputWithContext(context.Background())
}

func (i VpnIpsecManualkeyMap) ToVpnIpsecManualkeyMapOutputWithContext(ctx context.Context) VpnIpsecManualkeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnIpsecManualkeyMapOutput)
}

type VpnIpsecManualkeyOutput struct{ *pulumi.OutputState }

func (VpnIpsecManualkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnIpsecManualkey)(nil)).Elem()
}

func (o VpnIpsecManualkeyOutput) ToVpnIpsecManualkeyOutput() VpnIpsecManualkeyOutput {
	return o
}

func (o VpnIpsecManualkeyOutput) ToVpnIpsecManualkeyOutputWithContext(ctx context.Context) VpnIpsecManualkeyOutput {
	return o
}

func (o VpnIpsecManualkeyOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Authentication }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Authkey() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Authkey }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Enckey() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Enckey }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Encryption() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Encryption }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) LocalGw() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.LocalGw }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Localspi() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Localspi }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) NpuOffload() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.NpuOffload }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) RemoteGw() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.RemoteGw }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Remotespi() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringOutput { return v.Remotespi }).(pulumi.StringOutput)
}

func (o VpnIpsecManualkeyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnIpsecManualkey) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type VpnIpsecManualkeyArrayOutput struct{ *pulumi.OutputState }

func (VpnIpsecManualkeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnIpsecManualkey)(nil)).Elem()
}

func (o VpnIpsecManualkeyArrayOutput) ToVpnIpsecManualkeyArrayOutput() VpnIpsecManualkeyArrayOutput {
	return o
}

func (o VpnIpsecManualkeyArrayOutput) ToVpnIpsecManualkeyArrayOutputWithContext(ctx context.Context) VpnIpsecManualkeyArrayOutput {
	return o
}

func (o VpnIpsecManualkeyArrayOutput) Index(i pulumi.IntInput) VpnIpsecManualkeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnIpsecManualkey {
		return vs[0].([]*VpnIpsecManualkey)[vs[1].(int)]
	}).(VpnIpsecManualkeyOutput)
}

type VpnIpsecManualkeyMapOutput struct{ *pulumi.OutputState }

func (VpnIpsecManualkeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnIpsecManualkey)(nil)).Elem()
}

func (o VpnIpsecManualkeyMapOutput) ToVpnIpsecManualkeyMapOutput() VpnIpsecManualkeyMapOutput {
	return o
}

func (o VpnIpsecManualkeyMapOutput) ToVpnIpsecManualkeyMapOutputWithContext(ctx context.Context) VpnIpsecManualkeyMapOutput {
	return o
}

func (o VpnIpsecManualkeyMapOutput) MapIndex(k pulumi.StringInput) VpnIpsecManualkeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnIpsecManualkey {
		return vs[0].(map[string]*VpnIpsecManualkey)[vs[1].(string)]
	}).(VpnIpsecManualkeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecManualkeyInput)(nil)).Elem(), &VpnIpsecManualkey{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecManualkeyArrayInput)(nil)).Elem(), VpnIpsecManualkeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnIpsecManualkeyMapInput)(nil)).Elem(), VpnIpsecManualkeyMap{})
	pulumi.RegisterOutputType(VpnIpsecManualkeyOutput{})
	pulumi.RegisterOutputType(VpnIpsecManualkeyArrayOutput{})
	pulumi.RegisterOutputType(VpnIpsecManualkeyMapOutput{})
}
