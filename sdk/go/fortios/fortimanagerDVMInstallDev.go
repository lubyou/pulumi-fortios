// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FortimanagerDVMInstallDev struct {
	pulumi.CustomResourceState

	Adom          pulumi.StringPtrOutput `pulumi:"adom"`
	TargetDevname pulumi.StringOutput    `pulumi:"targetDevname"`
	// Timeout for installing the script to the target, default: 3 minutes
	Timeout pulumi.IntPtrOutput    `pulumi:"timeout"`
	Vdom    pulumi.StringPtrOutput `pulumi:"vdom"`
}

// NewFortimanagerDVMInstallDev registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerDVMInstallDev(ctx *pulumi.Context,
	name string, args *FortimanagerDVMInstallDevArgs, opts ...pulumi.ResourceOption) (*FortimanagerDVMInstallDev, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TargetDevname == nil {
		return nil, errors.New("invalid value for required argument 'TargetDevname'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FortimanagerDVMInstallDev
	err := ctx.RegisterResource("fortios:index/fortimanagerDVMInstallDev:FortimanagerDVMInstallDev", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerDVMInstallDev gets an existing FortimanagerDVMInstallDev resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerDVMInstallDev(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerDVMInstallDevState, opts ...pulumi.ResourceOption) (*FortimanagerDVMInstallDev, error) {
	var resource FortimanagerDVMInstallDev
	err := ctx.ReadResource("fortios:index/fortimanagerDVMInstallDev:FortimanagerDVMInstallDev", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerDVMInstallDev resources.
type fortimanagerDVMInstallDevState struct {
	Adom          *string `pulumi:"adom"`
	TargetDevname *string `pulumi:"targetDevname"`
	// Timeout for installing the script to the target, default: 3 minutes
	Timeout *int    `pulumi:"timeout"`
	Vdom    *string `pulumi:"vdom"`
}

type FortimanagerDVMInstallDevState struct {
	Adom          pulumi.StringPtrInput
	TargetDevname pulumi.StringPtrInput
	// Timeout for installing the script to the target, default: 3 minutes
	Timeout pulumi.IntPtrInput
	Vdom    pulumi.StringPtrInput
}

func (FortimanagerDVMInstallDevState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerDVMInstallDevState)(nil)).Elem()
}

type fortimanagerDVMInstallDevArgs struct {
	Adom          *string `pulumi:"adom"`
	TargetDevname string  `pulumi:"targetDevname"`
	// Timeout for installing the script to the target, default: 3 minutes
	Timeout *int    `pulumi:"timeout"`
	Vdom    *string `pulumi:"vdom"`
}

// The set of arguments for constructing a FortimanagerDVMInstallDev resource.
type FortimanagerDVMInstallDevArgs struct {
	Adom          pulumi.StringPtrInput
	TargetDevname pulumi.StringInput
	// Timeout for installing the script to the target, default: 3 minutes
	Timeout pulumi.IntPtrInput
	Vdom    pulumi.StringPtrInput
}

func (FortimanagerDVMInstallDevArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerDVMInstallDevArgs)(nil)).Elem()
}

type FortimanagerDVMInstallDevInput interface {
	pulumi.Input

	ToFortimanagerDVMInstallDevOutput() FortimanagerDVMInstallDevOutput
	ToFortimanagerDVMInstallDevOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevOutput
}

func (*FortimanagerDVMInstallDev) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerDVMInstallDev)(nil)).Elem()
}

func (i *FortimanagerDVMInstallDev) ToFortimanagerDVMInstallDevOutput() FortimanagerDVMInstallDevOutput {
	return i.ToFortimanagerDVMInstallDevOutputWithContext(context.Background())
}

func (i *FortimanagerDVMInstallDev) ToFortimanagerDVMInstallDevOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerDVMInstallDevOutput)
}

// FortimanagerDVMInstallDevArrayInput is an input type that accepts FortimanagerDVMInstallDevArray and FortimanagerDVMInstallDevArrayOutput values.
// You can construct a concrete instance of `FortimanagerDVMInstallDevArrayInput` via:
//
//	FortimanagerDVMInstallDevArray{ FortimanagerDVMInstallDevArgs{...} }
type FortimanagerDVMInstallDevArrayInput interface {
	pulumi.Input

	ToFortimanagerDVMInstallDevArrayOutput() FortimanagerDVMInstallDevArrayOutput
	ToFortimanagerDVMInstallDevArrayOutputWithContext(context.Context) FortimanagerDVMInstallDevArrayOutput
}

type FortimanagerDVMInstallDevArray []FortimanagerDVMInstallDevInput

func (FortimanagerDVMInstallDevArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerDVMInstallDev)(nil)).Elem()
}

func (i FortimanagerDVMInstallDevArray) ToFortimanagerDVMInstallDevArrayOutput() FortimanagerDVMInstallDevArrayOutput {
	return i.ToFortimanagerDVMInstallDevArrayOutputWithContext(context.Background())
}

func (i FortimanagerDVMInstallDevArray) ToFortimanagerDVMInstallDevArrayOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerDVMInstallDevArrayOutput)
}

// FortimanagerDVMInstallDevMapInput is an input type that accepts FortimanagerDVMInstallDevMap and FortimanagerDVMInstallDevMapOutput values.
// You can construct a concrete instance of `FortimanagerDVMInstallDevMapInput` via:
//
//	FortimanagerDVMInstallDevMap{ "key": FortimanagerDVMInstallDevArgs{...} }
type FortimanagerDVMInstallDevMapInput interface {
	pulumi.Input

	ToFortimanagerDVMInstallDevMapOutput() FortimanagerDVMInstallDevMapOutput
	ToFortimanagerDVMInstallDevMapOutputWithContext(context.Context) FortimanagerDVMInstallDevMapOutput
}

type FortimanagerDVMInstallDevMap map[string]FortimanagerDVMInstallDevInput

func (FortimanagerDVMInstallDevMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerDVMInstallDev)(nil)).Elem()
}

func (i FortimanagerDVMInstallDevMap) ToFortimanagerDVMInstallDevMapOutput() FortimanagerDVMInstallDevMapOutput {
	return i.ToFortimanagerDVMInstallDevMapOutputWithContext(context.Background())
}

func (i FortimanagerDVMInstallDevMap) ToFortimanagerDVMInstallDevMapOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerDVMInstallDevMapOutput)
}

type FortimanagerDVMInstallDevOutput struct{ *pulumi.OutputState }

func (FortimanagerDVMInstallDevOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerDVMInstallDev)(nil)).Elem()
}

func (o FortimanagerDVMInstallDevOutput) ToFortimanagerDVMInstallDevOutput() FortimanagerDVMInstallDevOutput {
	return o
}

func (o FortimanagerDVMInstallDevOutput) ToFortimanagerDVMInstallDevOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevOutput {
	return o
}

func (o FortimanagerDVMInstallDevOutput) Adom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerDVMInstallDev) pulumi.StringPtrOutput { return v.Adom }).(pulumi.StringPtrOutput)
}

func (o FortimanagerDVMInstallDevOutput) TargetDevname() pulumi.StringOutput {
	return o.ApplyT(func(v *FortimanagerDVMInstallDev) pulumi.StringOutput { return v.TargetDevname }).(pulumi.StringOutput)
}

// Timeout for installing the script to the target, default: 3 minutes
func (o FortimanagerDVMInstallDevOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FortimanagerDVMInstallDev) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

func (o FortimanagerDVMInstallDevOutput) Vdom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FortimanagerDVMInstallDev) pulumi.StringPtrOutput { return v.Vdom }).(pulumi.StringPtrOutput)
}

type FortimanagerDVMInstallDevArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerDVMInstallDevArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerDVMInstallDev)(nil)).Elem()
}

func (o FortimanagerDVMInstallDevArrayOutput) ToFortimanagerDVMInstallDevArrayOutput() FortimanagerDVMInstallDevArrayOutput {
	return o
}

func (o FortimanagerDVMInstallDevArrayOutput) ToFortimanagerDVMInstallDevArrayOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevArrayOutput {
	return o
}

func (o FortimanagerDVMInstallDevArrayOutput) Index(i pulumi.IntInput) FortimanagerDVMInstallDevOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerDVMInstallDev {
		return vs[0].([]*FortimanagerDVMInstallDev)[vs[1].(int)]
	}).(FortimanagerDVMInstallDevOutput)
}

type FortimanagerDVMInstallDevMapOutput struct{ *pulumi.OutputState }

func (FortimanagerDVMInstallDevMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerDVMInstallDev)(nil)).Elem()
}

func (o FortimanagerDVMInstallDevMapOutput) ToFortimanagerDVMInstallDevMapOutput() FortimanagerDVMInstallDevMapOutput {
	return o
}

func (o FortimanagerDVMInstallDevMapOutput) ToFortimanagerDVMInstallDevMapOutputWithContext(ctx context.Context) FortimanagerDVMInstallDevMapOutput {
	return o
}

func (o FortimanagerDVMInstallDevMapOutput) MapIndex(k pulumi.StringInput) FortimanagerDVMInstallDevOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerDVMInstallDev {
		return vs[0].(map[string]*FortimanagerDVMInstallDev)[vs[1].(string)]
	}).(FortimanagerDVMInstallDevOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerDVMInstallDevInput)(nil)).Elem(), &FortimanagerDVMInstallDev{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerDVMInstallDevArrayInput)(nil)).Elem(), FortimanagerDVMInstallDevArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerDVMInstallDevMapInput)(nil)).Elem(), FortimanagerDVMInstallDevMap{})
	pulumi.RegisterOutputType(FortimanagerDVMInstallDevOutput{})
	pulumi.RegisterOutputType(FortimanagerDVMInstallDevArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerDVMInstallDevMapOutput{})
}
