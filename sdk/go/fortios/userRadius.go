// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type UserRadius struct {
	pulumi.CustomResourceState

	AccountKeyCertField                    pulumi.StringOutput                   `pulumi:"accountKeyCertField"`
	AccountKeyProcessing                   pulumi.StringOutput                   `pulumi:"accountKeyProcessing"`
	AccountingServers                      UserRadiusAccountingServerArrayOutput `pulumi:"accountingServers"`
	AcctAllServers                         pulumi.StringOutput                   `pulumi:"acctAllServers"`
	AcctInterimInterval                    pulumi.IntOutput                      `pulumi:"acctInterimInterval"`
	AllUsergroup                           pulumi.StringOutput                   `pulumi:"allUsergroup"`
	AuthType                               pulumi.StringOutput                   `pulumi:"authType"`
	CaCert                                 pulumi.StringOutput                   `pulumi:"caCert"`
	CallStationIdType                      pulumi.StringOutput                   `pulumi:"callStationIdType"`
	Classes                                UserRadiusClassArrayOutput            `pulumi:"classes"`
	ClientCert                             pulumi.StringOutput                   `pulumi:"clientCert"`
	Delimiter                              pulumi.StringOutput                   `pulumi:"delimiter"`
	DynamicSortSubtable                    pulumi.StringPtrOutput                `pulumi:"dynamicSortSubtable"`
	GetAllTables                           pulumi.StringPtrOutput                `pulumi:"getAllTables"`
	GroupOverrideAttrType                  pulumi.StringOutput                   `pulumi:"groupOverrideAttrType"`
	H3cCompatibility                       pulumi.StringOutput                   `pulumi:"h3cCompatibility"`
	Interface                              pulumi.StringOutput                   `pulumi:"interface"`
	InterfaceSelectMethod                  pulumi.StringOutput                   `pulumi:"interfaceSelectMethod"`
	MacCase                                pulumi.StringOutput                   `pulumi:"macCase"`
	MacPasswordDelimiter                   pulumi.StringOutput                   `pulumi:"macPasswordDelimiter"`
	MacUsernameDelimiter                   pulumi.StringOutput                   `pulumi:"macUsernameDelimiter"`
	Name                                   pulumi.StringOutput                   `pulumi:"name"`
	NasId                                  pulumi.StringOutput                   `pulumi:"nasId"`
	NasIdType                              pulumi.StringOutput                   `pulumi:"nasIdType"`
	NasIp                                  pulumi.StringOutput                   `pulumi:"nasIp"`
	PasswordEncoding                       pulumi.StringOutput                   `pulumi:"passwordEncoding"`
	PasswordRenewal                        pulumi.StringOutput                   `pulumi:"passwordRenewal"`
	RadiusCoa                              pulumi.StringOutput                   `pulumi:"radiusCoa"`
	RadiusPort                             pulumi.IntOutput                      `pulumi:"radiusPort"`
	Rsso                                   pulumi.StringOutput                   `pulumi:"rsso"`
	RssoContextTimeout                     pulumi.IntOutput                      `pulumi:"rssoContextTimeout"`
	RssoEndpointAttribute                  pulumi.StringOutput                   `pulumi:"rssoEndpointAttribute"`
	RssoEndpointBlockAttribute             pulumi.StringOutput                   `pulumi:"rssoEndpointBlockAttribute"`
	RssoEpOneIpOnly                        pulumi.StringOutput                   `pulumi:"rssoEpOneIpOnly"`
	RssoFlushIpSession                     pulumi.StringOutput                   `pulumi:"rssoFlushIpSession"`
	RssoLogFlags                           pulumi.StringOutput                   `pulumi:"rssoLogFlags"`
	RssoLogPeriod                          pulumi.IntOutput                      `pulumi:"rssoLogPeriod"`
	RssoRadiusResponse                     pulumi.StringOutput                   `pulumi:"rssoRadiusResponse"`
	RssoRadiusServerPort                   pulumi.IntOutput                      `pulumi:"rssoRadiusServerPort"`
	RssoSecret                             pulumi.StringPtrOutput                `pulumi:"rssoSecret"`
	RssoValidateRequestSecret              pulumi.StringOutput                   `pulumi:"rssoValidateRequestSecret"`
	SecondarySecret                        pulumi.StringPtrOutput                `pulumi:"secondarySecret"`
	SecondaryServer                        pulumi.StringOutput                   `pulumi:"secondaryServer"`
	Secret                                 pulumi.StringPtrOutput                `pulumi:"secret"`
	Server                                 pulumi.StringOutput                   `pulumi:"server"`
	ServerIdentityCheck                    pulumi.StringOutput                   `pulumi:"serverIdentityCheck"`
	SourceIp                               pulumi.StringOutput                   `pulumi:"sourceIp"`
	SsoAttribute                           pulumi.StringOutput                   `pulumi:"ssoAttribute"`
	SsoAttributeKey                        pulumi.StringOutput                   `pulumi:"ssoAttributeKey"`
	SsoAttributeValueOverride              pulumi.StringOutput                   `pulumi:"ssoAttributeValueOverride"`
	StatusTtl                              pulumi.IntOutput                      `pulumi:"statusTtl"`
	SwitchControllerAcctFastFramedipDetect pulumi.IntOutput                      `pulumi:"switchControllerAcctFastFramedipDetect"`
	SwitchControllerServiceType            pulumi.StringOutput                   `pulumi:"switchControllerServiceType"`
	TertiarySecret                         pulumi.StringPtrOutput                `pulumi:"tertiarySecret"`
	TertiaryServer                         pulumi.StringOutput                   `pulumi:"tertiaryServer"`
	Timeout                                pulumi.IntOutput                      `pulumi:"timeout"`
	TlsMinProtoVersion                     pulumi.StringOutput                   `pulumi:"tlsMinProtoVersion"`
	TransportProtocol                      pulumi.StringOutput                   `pulumi:"transportProtocol"`
	UseManagementVdom                      pulumi.StringOutput                   `pulumi:"useManagementVdom"`
	UsernameCaseSensitive                  pulumi.StringOutput                   `pulumi:"usernameCaseSensitive"`
	Vdomparam                              pulumi.StringPtrOutput                `pulumi:"vdomparam"`
}

// NewUserRadius registers a new resource with the given unique name, arguments, and options.
func NewUserRadius(ctx *pulumi.Context,
	name string, args *UserRadiusArgs, opts ...pulumi.ResourceOption) (*UserRadius, error) {
	if args == nil {
		args = &UserRadiusArgs{}
	}

	if args.RssoSecret != nil {
		args.RssoSecret = pulumi.ToSecret(args.RssoSecret).(pulumi.StringPtrInput)
	}
	if args.SecondarySecret != nil {
		args.SecondarySecret = pulumi.ToSecret(args.SecondarySecret).(pulumi.StringPtrInput)
	}
	if args.Secret != nil {
		args.Secret = pulumi.ToSecret(args.Secret).(pulumi.StringPtrInput)
	}
	if args.SsoAttributeKey != nil {
		args.SsoAttributeKey = pulumi.ToSecret(args.SsoAttributeKey).(pulumi.StringPtrInput)
	}
	if args.TertiarySecret != nil {
		args.TertiarySecret = pulumi.ToSecret(args.TertiarySecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"rssoSecret",
		"secondarySecret",
		"secret",
		"ssoAttributeKey",
		"tertiarySecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserRadius
	err := ctx.RegisterResource("fortios:index/userRadius:UserRadius", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserRadius gets an existing UserRadius resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserRadius(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserRadiusState, opts ...pulumi.ResourceOption) (*UserRadius, error) {
	var resource UserRadius
	err := ctx.ReadResource("fortios:index/userRadius:UserRadius", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserRadius resources.
type userRadiusState struct {
	AccountKeyCertField                    *string                      `pulumi:"accountKeyCertField"`
	AccountKeyProcessing                   *string                      `pulumi:"accountKeyProcessing"`
	AccountingServers                      []UserRadiusAccountingServer `pulumi:"accountingServers"`
	AcctAllServers                         *string                      `pulumi:"acctAllServers"`
	AcctInterimInterval                    *int                         `pulumi:"acctInterimInterval"`
	AllUsergroup                           *string                      `pulumi:"allUsergroup"`
	AuthType                               *string                      `pulumi:"authType"`
	CaCert                                 *string                      `pulumi:"caCert"`
	CallStationIdType                      *string                      `pulumi:"callStationIdType"`
	Classes                                []UserRadiusClass            `pulumi:"classes"`
	ClientCert                             *string                      `pulumi:"clientCert"`
	Delimiter                              *string                      `pulumi:"delimiter"`
	DynamicSortSubtable                    *string                      `pulumi:"dynamicSortSubtable"`
	GetAllTables                           *string                      `pulumi:"getAllTables"`
	GroupOverrideAttrType                  *string                      `pulumi:"groupOverrideAttrType"`
	H3cCompatibility                       *string                      `pulumi:"h3cCompatibility"`
	Interface                              *string                      `pulumi:"interface"`
	InterfaceSelectMethod                  *string                      `pulumi:"interfaceSelectMethod"`
	MacCase                                *string                      `pulumi:"macCase"`
	MacPasswordDelimiter                   *string                      `pulumi:"macPasswordDelimiter"`
	MacUsernameDelimiter                   *string                      `pulumi:"macUsernameDelimiter"`
	Name                                   *string                      `pulumi:"name"`
	NasId                                  *string                      `pulumi:"nasId"`
	NasIdType                              *string                      `pulumi:"nasIdType"`
	NasIp                                  *string                      `pulumi:"nasIp"`
	PasswordEncoding                       *string                      `pulumi:"passwordEncoding"`
	PasswordRenewal                        *string                      `pulumi:"passwordRenewal"`
	RadiusCoa                              *string                      `pulumi:"radiusCoa"`
	RadiusPort                             *int                         `pulumi:"radiusPort"`
	Rsso                                   *string                      `pulumi:"rsso"`
	RssoContextTimeout                     *int                         `pulumi:"rssoContextTimeout"`
	RssoEndpointAttribute                  *string                      `pulumi:"rssoEndpointAttribute"`
	RssoEndpointBlockAttribute             *string                      `pulumi:"rssoEndpointBlockAttribute"`
	RssoEpOneIpOnly                        *string                      `pulumi:"rssoEpOneIpOnly"`
	RssoFlushIpSession                     *string                      `pulumi:"rssoFlushIpSession"`
	RssoLogFlags                           *string                      `pulumi:"rssoLogFlags"`
	RssoLogPeriod                          *int                         `pulumi:"rssoLogPeriod"`
	RssoRadiusResponse                     *string                      `pulumi:"rssoRadiusResponse"`
	RssoRadiusServerPort                   *int                         `pulumi:"rssoRadiusServerPort"`
	RssoSecret                             *string                      `pulumi:"rssoSecret"`
	RssoValidateRequestSecret              *string                      `pulumi:"rssoValidateRequestSecret"`
	SecondarySecret                        *string                      `pulumi:"secondarySecret"`
	SecondaryServer                        *string                      `pulumi:"secondaryServer"`
	Secret                                 *string                      `pulumi:"secret"`
	Server                                 *string                      `pulumi:"server"`
	ServerIdentityCheck                    *string                      `pulumi:"serverIdentityCheck"`
	SourceIp                               *string                      `pulumi:"sourceIp"`
	SsoAttribute                           *string                      `pulumi:"ssoAttribute"`
	SsoAttributeKey                        *string                      `pulumi:"ssoAttributeKey"`
	SsoAttributeValueOverride              *string                      `pulumi:"ssoAttributeValueOverride"`
	StatusTtl                              *int                         `pulumi:"statusTtl"`
	SwitchControllerAcctFastFramedipDetect *int                         `pulumi:"switchControllerAcctFastFramedipDetect"`
	SwitchControllerServiceType            *string                      `pulumi:"switchControllerServiceType"`
	TertiarySecret                         *string                      `pulumi:"tertiarySecret"`
	TertiaryServer                         *string                      `pulumi:"tertiaryServer"`
	Timeout                                *int                         `pulumi:"timeout"`
	TlsMinProtoVersion                     *string                      `pulumi:"tlsMinProtoVersion"`
	TransportProtocol                      *string                      `pulumi:"transportProtocol"`
	UseManagementVdom                      *string                      `pulumi:"useManagementVdom"`
	UsernameCaseSensitive                  *string                      `pulumi:"usernameCaseSensitive"`
	Vdomparam                              *string                      `pulumi:"vdomparam"`
}

type UserRadiusState struct {
	AccountKeyCertField                    pulumi.StringPtrInput
	AccountKeyProcessing                   pulumi.StringPtrInput
	AccountingServers                      UserRadiusAccountingServerArrayInput
	AcctAllServers                         pulumi.StringPtrInput
	AcctInterimInterval                    pulumi.IntPtrInput
	AllUsergroup                           pulumi.StringPtrInput
	AuthType                               pulumi.StringPtrInput
	CaCert                                 pulumi.StringPtrInput
	CallStationIdType                      pulumi.StringPtrInput
	Classes                                UserRadiusClassArrayInput
	ClientCert                             pulumi.StringPtrInput
	Delimiter                              pulumi.StringPtrInput
	DynamicSortSubtable                    pulumi.StringPtrInput
	GetAllTables                           pulumi.StringPtrInput
	GroupOverrideAttrType                  pulumi.StringPtrInput
	H3cCompatibility                       pulumi.StringPtrInput
	Interface                              pulumi.StringPtrInput
	InterfaceSelectMethod                  pulumi.StringPtrInput
	MacCase                                pulumi.StringPtrInput
	MacPasswordDelimiter                   pulumi.StringPtrInput
	MacUsernameDelimiter                   pulumi.StringPtrInput
	Name                                   pulumi.StringPtrInput
	NasId                                  pulumi.StringPtrInput
	NasIdType                              pulumi.StringPtrInput
	NasIp                                  pulumi.StringPtrInput
	PasswordEncoding                       pulumi.StringPtrInput
	PasswordRenewal                        pulumi.StringPtrInput
	RadiusCoa                              pulumi.StringPtrInput
	RadiusPort                             pulumi.IntPtrInput
	Rsso                                   pulumi.StringPtrInput
	RssoContextTimeout                     pulumi.IntPtrInput
	RssoEndpointAttribute                  pulumi.StringPtrInput
	RssoEndpointBlockAttribute             pulumi.StringPtrInput
	RssoEpOneIpOnly                        pulumi.StringPtrInput
	RssoFlushIpSession                     pulumi.StringPtrInput
	RssoLogFlags                           pulumi.StringPtrInput
	RssoLogPeriod                          pulumi.IntPtrInput
	RssoRadiusResponse                     pulumi.StringPtrInput
	RssoRadiusServerPort                   pulumi.IntPtrInput
	RssoSecret                             pulumi.StringPtrInput
	RssoValidateRequestSecret              pulumi.StringPtrInput
	SecondarySecret                        pulumi.StringPtrInput
	SecondaryServer                        pulumi.StringPtrInput
	Secret                                 pulumi.StringPtrInput
	Server                                 pulumi.StringPtrInput
	ServerIdentityCheck                    pulumi.StringPtrInput
	SourceIp                               pulumi.StringPtrInput
	SsoAttribute                           pulumi.StringPtrInput
	SsoAttributeKey                        pulumi.StringPtrInput
	SsoAttributeValueOverride              pulumi.StringPtrInput
	StatusTtl                              pulumi.IntPtrInput
	SwitchControllerAcctFastFramedipDetect pulumi.IntPtrInput
	SwitchControllerServiceType            pulumi.StringPtrInput
	TertiarySecret                         pulumi.StringPtrInput
	TertiaryServer                         pulumi.StringPtrInput
	Timeout                                pulumi.IntPtrInput
	TlsMinProtoVersion                     pulumi.StringPtrInput
	TransportProtocol                      pulumi.StringPtrInput
	UseManagementVdom                      pulumi.StringPtrInput
	UsernameCaseSensitive                  pulumi.StringPtrInput
	Vdomparam                              pulumi.StringPtrInput
}

func (UserRadiusState) ElementType() reflect.Type {
	return reflect.TypeOf((*userRadiusState)(nil)).Elem()
}

type userRadiusArgs struct {
	AccountKeyCertField                    *string                      `pulumi:"accountKeyCertField"`
	AccountKeyProcessing                   *string                      `pulumi:"accountKeyProcessing"`
	AccountingServers                      []UserRadiusAccountingServer `pulumi:"accountingServers"`
	AcctAllServers                         *string                      `pulumi:"acctAllServers"`
	AcctInterimInterval                    *int                         `pulumi:"acctInterimInterval"`
	AllUsergroup                           *string                      `pulumi:"allUsergroup"`
	AuthType                               *string                      `pulumi:"authType"`
	CaCert                                 *string                      `pulumi:"caCert"`
	CallStationIdType                      *string                      `pulumi:"callStationIdType"`
	Classes                                []UserRadiusClass            `pulumi:"classes"`
	ClientCert                             *string                      `pulumi:"clientCert"`
	Delimiter                              *string                      `pulumi:"delimiter"`
	DynamicSortSubtable                    *string                      `pulumi:"dynamicSortSubtable"`
	GetAllTables                           *string                      `pulumi:"getAllTables"`
	GroupOverrideAttrType                  *string                      `pulumi:"groupOverrideAttrType"`
	H3cCompatibility                       *string                      `pulumi:"h3cCompatibility"`
	Interface                              *string                      `pulumi:"interface"`
	InterfaceSelectMethod                  *string                      `pulumi:"interfaceSelectMethod"`
	MacCase                                *string                      `pulumi:"macCase"`
	MacPasswordDelimiter                   *string                      `pulumi:"macPasswordDelimiter"`
	MacUsernameDelimiter                   *string                      `pulumi:"macUsernameDelimiter"`
	Name                                   *string                      `pulumi:"name"`
	NasId                                  *string                      `pulumi:"nasId"`
	NasIdType                              *string                      `pulumi:"nasIdType"`
	NasIp                                  *string                      `pulumi:"nasIp"`
	PasswordEncoding                       *string                      `pulumi:"passwordEncoding"`
	PasswordRenewal                        *string                      `pulumi:"passwordRenewal"`
	RadiusCoa                              *string                      `pulumi:"radiusCoa"`
	RadiusPort                             *int                         `pulumi:"radiusPort"`
	Rsso                                   *string                      `pulumi:"rsso"`
	RssoContextTimeout                     *int                         `pulumi:"rssoContextTimeout"`
	RssoEndpointAttribute                  *string                      `pulumi:"rssoEndpointAttribute"`
	RssoEndpointBlockAttribute             *string                      `pulumi:"rssoEndpointBlockAttribute"`
	RssoEpOneIpOnly                        *string                      `pulumi:"rssoEpOneIpOnly"`
	RssoFlushIpSession                     *string                      `pulumi:"rssoFlushIpSession"`
	RssoLogFlags                           *string                      `pulumi:"rssoLogFlags"`
	RssoLogPeriod                          *int                         `pulumi:"rssoLogPeriod"`
	RssoRadiusResponse                     *string                      `pulumi:"rssoRadiusResponse"`
	RssoRadiusServerPort                   *int                         `pulumi:"rssoRadiusServerPort"`
	RssoSecret                             *string                      `pulumi:"rssoSecret"`
	RssoValidateRequestSecret              *string                      `pulumi:"rssoValidateRequestSecret"`
	SecondarySecret                        *string                      `pulumi:"secondarySecret"`
	SecondaryServer                        *string                      `pulumi:"secondaryServer"`
	Secret                                 *string                      `pulumi:"secret"`
	Server                                 *string                      `pulumi:"server"`
	ServerIdentityCheck                    *string                      `pulumi:"serverIdentityCheck"`
	SourceIp                               *string                      `pulumi:"sourceIp"`
	SsoAttribute                           *string                      `pulumi:"ssoAttribute"`
	SsoAttributeKey                        *string                      `pulumi:"ssoAttributeKey"`
	SsoAttributeValueOverride              *string                      `pulumi:"ssoAttributeValueOverride"`
	StatusTtl                              *int                         `pulumi:"statusTtl"`
	SwitchControllerAcctFastFramedipDetect *int                         `pulumi:"switchControllerAcctFastFramedipDetect"`
	SwitchControllerServiceType            *string                      `pulumi:"switchControllerServiceType"`
	TertiarySecret                         *string                      `pulumi:"tertiarySecret"`
	TertiaryServer                         *string                      `pulumi:"tertiaryServer"`
	Timeout                                *int                         `pulumi:"timeout"`
	TlsMinProtoVersion                     *string                      `pulumi:"tlsMinProtoVersion"`
	TransportProtocol                      *string                      `pulumi:"transportProtocol"`
	UseManagementVdom                      *string                      `pulumi:"useManagementVdom"`
	UsernameCaseSensitive                  *string                      `pulumi:"usernameCaseSensitive"`
	Vdomparam                              *string                      `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserRadius resource.
type UserRadiusArgs struct {
	AccountKeyCertField                    pulumi.StringPtrInput
	AccountKeyProcessing                   pulumi.StringPtrInput
	AccountingServers                      UserRadiusAccountingServerArrayInput
	AcctAllServers                         pulumi.StringPtrInput
	AcctInterimInterval                    pulumi.IntPtrInput
	AllUsergroup                           pulumi.StringPtrInput
	AuthType                               pulumi.StringPtrInput
	CaCert                                 pulumi.StringPtrInput
	CallStationIdType                      pulumi.StringPtrInput
	Classes                                UserRadiusClassArrayInput
	ClientCert                             pulumi.StringPtrInput
	Delimiter                              pulumi.StringPtrInput
	DynamicSortSubtable                    pulumi.StringPtrInput
	GetAllTables                           pulumi.StringPtrInput
	GroupOverrideAttrType                  pulumi.StringPtrInput
	H3cCompatibility                       pulumi.StringPtrInput
	Interface                              pulumi.StringPtrInput
	InterfaceSelectMethod                  pulumi.StringPtrInput
	MacCase                                pulumi.StringPtrInput
	MacPasswordDelimiter                   pulumi.StringPtrInput
	MacUsernameDelimiter                   pulumi.StringPtrInput
	Name                                   pulumi.StringPtrInput
	NasId                                  pulumi.StringPtrInput
	NasIdType                              pulumi.StringPtrInput
	NasIp                                  pulumi.StringPtrInput
	PasswordEncoding                       pulumi.StringPtrInput
	PasswordRenewal                        pulumi.StringPtrInput
	RadiusCoa                              pulumi.StringPtrInput
	RadiusPort                             pulumi.IntPtrInput
	Rsso                                   pulumi.StringPtrInput
	RssoContextTimeout                     pulumi.IntPtrInput
	RssoEndpointAttribute                  pulumi.StringPtrInput
	RssoEndpointBlockAttribute             pulumi.StringPtrInput
	RssoEpOneIpOnly                        pulumi.StringPtrInput
	RssoFlushIpSession                     pulumi.StringPtrInput
	RssoLogFlags                           pulumi.StringPtrInput
	RssoLogPeriod                          pulumi.IntPtrInput
	RssoRadiusResponse                     pulumi.StringPtrInput
	RssoRadiusServerPort                   pulumi.IntPtrInput
	RssoSecret                             pulumi.StringPtrInput
	RssoValidateRequestSecret              pulumi.StringPtrInput
	SecondarySecret                        pulumi.StringPtrInput
	SecondaryServer                        pulumi.StringPtrInput
	Secret                                 pulumi.StringPtrInput
	Server                                 pulumi.StringPtrInput
	ServerIdentityCheck                    pulumi.StringPtrInput
	SourceIp                               pulumi.StringPtrInput
	SsoAttribute                           pulumi.StringPtrInput
	SsoAttributeKey                        pulumi.StringPtrInput
	SsoAttributeValueOverride              pulumi.StringPtrInput
	StatusTtl                              pulumi.IntPtrInput
	SwitchControllerAcctFastFramedipDetect pulumi.IntPtrInput
	SwitchControllerServiceType            pulumi.StringPtrInput
	TertiarySecret                         pulumi.StringPtrInput
	TertiaryServer                         pulumi.StringPtrInput
	Timeout                                pulumi.IntPtrInput
	TlsMinProtoVersion                     pulumi.StringPtrInput
	TransportProtocol                      pulumi.StringPtrInput
	UseManagementVdom                      pulumi.StringPtrInput
	UsernameCaseSensitive                  pulumi.StringPtrInput
	Vdomparam                              pulumi.StringPtrInput
}

func (UserRadiusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userRadiusArgs)(nil)).Elem()
}

type UserRadiusInput interface {
	pulumi.Input

	ToUserRadiusOutput() UserRadiusOutput
	ToUserRadiusOutputWithContext(ctx context.Context) UserRadiusOutput
}

func (*UserRadius) ElementType() reflect.Type {
	return reflect.TypeOf((**UserRadius)(nil)).Elem()
}

func (i *UserRadius) ToUserRadiusOutput() UserRadiusOutput {
	return i.ToUserRadiusOutputWithContext(context.Background())
}

func (i *UserRadius) ToUserRadiusOutputWithContext(ctx context.Context) UserRadiusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusOutput)
}

func (i *UserRadius) ToOutput(ctx context.Context) pulumix.Output[*UserRadius] {
	return pulumix.Output[*UserRadius]{
		OutputState: i.ToUserRadiusOutputWithContext(ctx).OutputState,
	}
}

// UserRadiusArrayInput is an input type that accepts UserRadiusArray and UserRadiusArrayOutput values.
// You can construct a concrete instance of `UserRadiusArrayInput` via:
//
//	UserRadiusArray{ UserRadiusArgs{...} }
type UserRadiusArrayInput interface {
	pulumi.Input

	ToUserRadiusArrayOutput() UserRadiusArrayOutput
	ToUserRadiusArrayOutputWithContext(context.Context) UserRadiusArrayOutput
}

type UserRadiusArray []UserRadiusInput

func (UserRadiusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserRadius)(nil)).Elem()
}

func (i UserRadiusArray) ToUserRadiusArrayOutput() UserRadiusArrayOutput {
	return i.ToUserRadiusArrayOutputWithContext(context.Background())
}

func (i UserRadiusArray) ToUserRadiusArrayOutputWithContext(ctx context.Context) UserRadiusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusArrayOutput)
}

func (i UserRadiusArray) ToOutput(ctx context.Context) pulumix.Output[[]*UserRadius] {
	return pulumix.Output[[]*UserRadius]{
		OutputState: i.ToUserRadiusArrayOutputWithContext(ctx).OutputState,
	}
}

// UserRadiusMapInput is an input type that accepts UserRadiusMap and UserRadiusMapOutput values.
// You can construct a concrete instance of `UserRadiusMapInput` via:
//
//	UserRadiusMap{ "key": UserRadiusArgs{...} }
type UserRadiusMapInput interface {
	pulumi.Input

	ToUserRadiusMapOutput() UserRadiusMapOutput
	ToUserRadiusMapOutputWithContext(context.Context) UserRadiusMapOutput
}

type UserRadiusMap map[string]UserRadiusInput

func (UserRadiusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserRadius)(nil)).Elem()
}

func (i UserRadiusMap) ToUserRadiusMapOutput() UserRadiusMapOutput {
	return i.ToUserRadiusMapOutputWithContext(context.Background())
}

func (i UserRadiusMap) ToUserRadiusMapOutputWithContext(ctx context.Context) UserRadiusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRadiusMapOutput)
}

func (i UserRadiusMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*UserRadius] {
	return pulumix.Output[map[string]*UserRadius]{
		OutputState: i.ToUserRadiusMapOutputWithContext(ctx).OutputState,
	}
}

type UserRadiusOutput struct{ *pulumi.OutputState }

func (UserRadiusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserRadius)(nil)).Elem()
}

func (o UserRadiusOutput) ToUserRadiusOutput() UserRadiusOutput {
	return o
}

func (o UserRadiusOutput) ToUserRadiusOutputWithContext(ctx context.Context) UserRadiusOutput {
	return o
}

func (o UserRadiusOutput) ToOutput(ctx context.Context) pulumix.Output[*UserRadius] {
	return pulumix.Output[*UserRadius]{
		OutputState: o.OutputState,
	}
}

func (o UserRadiusOutput) AccountKeyCertField() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.AccountKeyCertField }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) AccountKeyProcessing() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.AccountKeyProcessing }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) AccountingServers() UserRadiusAccountingServerArrayOutput {
	return o.ApplyT(func(v *UserRadius) UserRadiusAccountingServerArrayOutput { return v.AccountingServers }).(UserRadiusAccountingServerArrayOutput)
}

func (o UserRadiusOutput) AcctAllServers() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.AcctAllServers }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) AcctInterimInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.AcctInterimInterval }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) AllUsergroup() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.AllUsergroup }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.AuthType }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) CaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.CaCert }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) CallStationIdType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.CallStationIdType }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Classes() UserRadiusClassArrayOutput {
	return o.ApplyT(func(v *UserRadius) UserRadiusClassArrayOutput { return v.Classes }).(UserRadiusClassArrayOutput)
}

func (o UserRadiusOutput) ClientCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.ClientCert }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.Delimiter }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) GroupOverrideAttrType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.GroupOverrideAttrType }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) H3cCompatibility() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.H3cCompatibility }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) MacCase() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.MacCase }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) MacPasswordDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.MacPasswordDelimiter }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) MacUsernameDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.MacUsernameDelimiter }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) NasId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.NasId }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) NasIdType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.NasIdType }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) NasIp() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.NasIp }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) PasswordEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.PasswordEncoding }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) PasswordRenewal() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.PasswordRenewal }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RadiusCoa() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RadiusCoa }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RadiusPort() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.RadiusPort }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) Rsso() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.Rsso }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoContextTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.RssoContextTimeout }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) RssoEndpointAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoEndpointAttribute }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoEndpointBlockAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoEndpointBlockAttribute }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoEpOneIpOnly() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoEpOneIpOnly }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoFlushIpSession() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoFlushIpSession }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoLogFlags() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoLogFlags }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoLogPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.RssoLogPeriod }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) RssoRadiusResponse() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoRadiusResponse }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) RssoRadiusServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.RssoRadiusServerPort }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) RssoSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.RssoSecret }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) RssoValidateRequestSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.RssoValidateRequestSecret }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) SecondarySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.SecondarySecret }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) SecondaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SecondaryServer }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) ServerIdentityCheck() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.ServerIdentityCheck }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) SsoAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SsoAttribute }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) SsoAttributeKey() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SsoAttributeKey }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) SsoAttributeValueOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SsoAttributeValueOverride }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) StatusTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.StatusTtl }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) SwitchControllerAcctFastFramedipDetect() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.SwitchControllerAcctFastFramedipDetect }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) SwitchControllerServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.SwitchControllerServiceType }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) TertiarySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.TertiarySecret }).(pulumi.StringPtrOutput)
}

func (o UserRadiusOutput) TertiaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.TertiaryServer }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

func (o UserRadiusOutput) TlsMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.TlsMinProtoVersion }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) TransportProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.TransportProtocol }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) UseManagementVdom() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.UseManagementVdom }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) UsernameCaseSensitive() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringOutput { return v.UsernameCaseSensitive }).(pulumi.StringOutput)
}

func (o UserRadiusOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserRadius) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserRadiusArrayOutput struct{ *pulumi.OutputState }

func (UserRadiusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserRadius)(nil)).Elem()
}

func (o UserRadiusArrayOutput) ToUserRadiusArrayOutput() UserRadiusArrayOutput {
	return o
}

func (o UserRadiusArrayOutput) ToUserRadiusArrayOutputWithContext(ctx context.Context) UserRadiusArrayOutput {
	return o
}

func (o UserRadiusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*UserRadius] {
	return pulumix.Output[[]*UserRadius]{
		OutputState: o.OutputState,
	}
}

func (o UserRadiusArrayOutput) Index(i pulumi.IntInput) UserRadiusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserRadius {
		return vs[0].([]*UserRadius)[vs[1].(int)]
	}).(UserRadiusOutput)
}

type UserRadiusMapOutput struct{ *pulumi.OutputState }

func (UserRadiusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserRadius)(nil)).Elem()
}

func (o UserRadiusMapOutput) ToUserRadiusMapOutput() UserRadiusMapOutput {
	return o
}

func (o UserRadiusMapOutput) ToUserRadiusMapOutputWithContext(ctx context.Context) UserRadiusMapOutput {
	return o
}

func (o UserRadiusMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*UserRadius] {
	return pulumix.Output[map[string]*UserRadius]{
		OutputState: o.OutputState,
	}
}

func (o UserRadiusMapOutput) MapIndex(k pulumi.StringInput) UserRadiusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserRadius {
		return vs[0].(map[string]*UserRadius)[vs[1].(string)]
	}).(UserRadiusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusInput)(nil)).Elem(), &UserRadius{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusArrayInput)(nil)).Elem(), UserRadiusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRadiusMapInput)(nil)).Elem(), UserRadiusMap{})
	pulumi.RegisterOutputType(UserRadiusOutput{})
	pulumi.RegisterOutputType(UserRadiusArrayOutput{})
	pulumi.RegisterOutputType(UserRadiusMapOutput{})
}
