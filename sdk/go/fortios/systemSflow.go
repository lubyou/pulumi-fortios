// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure sFlow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemSflow(ctx, "trname", &fortios.SystemSflowArgs{
// 			CollectorIp:   pulumi.String("0.0.0.0"),
// 			CollectorPort: pulumi.Int(6343),
// 			SourceIp:      pulumi.String("0.0.0.0"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System Sflow can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemSflow:SystemSflow labelname SystemSflow
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemSflow struct {
	pulumi.CustomResourceState

	// IP address of the sFlow collector that sFlow agents added to interfaces in this VDOM send sFlow datagrams to (default = 0.0.0.0).
	CollectorIp pulumi.StringOutput `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntOutput `pulumi:"collectorPort"`
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSflow registers a new resource with the given unique name, arguments, and options.
func NewSystemSflow(ctx *pulumi.Context,
	name string, args *SystemSflowArgs, opts ...pulumi.ResourceOption) (*SystemSflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectorIp == nil {
		return nil, errors.New("invalid value for required argument 'CollectorIp'")
	}
	var resource SystemSflow
	err := ctx.RegisterResource("fortios:index/systemSflow:SystemSflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSflow gets an existing SystemSflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSflowState, opts ...pulumi.ResourceOption) (*SystemSflow, error) {
	var resource SystemSflow
	err := ctx.ReadResource("fortios:index/systemSflow:SystemSflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSflow resources.
type systemSflowState struct {
	// IP address of the sFlow collector that sFlow agents added to interfaces in this VDOM send sFlow datagrams to (default = 0.0.0.0).
	CollectorIp *string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort *int `pulumi:"collectorPort"`
	// Source IP address for sFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemSflowState struct {
	// IP address of the sFlow collector that sFlow agents added to interfaces in this VDOM send sFlow datagrams to (default = 0.0.0.0).
	CollectorIp pulumi.StringPtrInput
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntPtrInput
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSflowState)(nil)).Elem()
}

type systemSflowArgs struct {
	// IP address of the sFlow collector that sFlow agents added to interfaces in this VDOM send sFlow datagrams to (default = 0.0.0.0).
	CollectorIp string `pulumi:"collectorIp"`
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort *int `pulumi:"collectorPort"`
	// Source IP address for sFlow agent.
	SourceIp *string `pulumi:"sourceIp"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSflow resource.
type SystemSflowArgs struct {
	// IP address of the sFlow collector that sFlow agents added to interfaces in this VDOM send sFlow datagrams to (default = 0.0.0.0).
	CollectorIp pulumi.StringInput
	// UDP port number used for sending sFlow datagrams (configure only if required by your sFlow collector or your network configuration) (0 - 65535, default = 6343).
	CollectorPort pulumi.IntPtrInput
	// Source IP address for sFlow agent.
	SourceIp pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSflowArgs)(nil)).Elem()
}

type SystemSflowInput interface {
	pulumi.Input

	ToSystemSflowOutput() SystemSflowOutput
	ToSystemSflowOutputWithContext(ctx context.Context) SystemSflowOutput
}

func (*SystemSflow) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSflow)(nil))
}

func (i *SystemSflow) ToSystemSflowOutput() SystemSflowOutput {
	return i.ToSystemSflowOutputWithContext(context.Background())
}

func (i *SystemSflow) ToSystemSflowOutputWithContext(ctx context.Context) SystemSflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSflowOutput)
}

func (i *SystemSflow) ToSystemSflowPtrOutput() SystemSflowPtrOutput {
	return i.ToSystemSflowPtrOutputWithContext(context.Background())
}

func (i *SystemSflow) ToSystemSflowPtrOutputWithContext(ctx context.Context) SystemSflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSflowPtrOutput)
}

type SystemSflowPtrInput interface {
	pulumi.Input

	ToSystemSflowPtrOutput() SystemSflowPtrOutput
	ToSystemSflowPtrOutputWithContext(ctx context.Context) SystemSflowPtrOutput
}

type systemSflowPtrType SystemSflowArgs

func (*systemSflowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSflow)(nil))
}

func (i *systemSflowPtrType) ToSystemSflowPtrOutput() SystemSflowPtrOutput {
	return i.ToSystemSflowPtrOutputWithContext(context.Background())
}

func (i *systemSflowPtrType) ToSystemSflowPtrOutputWithContext(ctx context.Context) SystemSflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSflowPtrOutput)
}

// SystemSflowArrayInput is an input type that accepts SystemSflowArray and SystemSflowArrayOutput values.
// You can construct a concrete instance of `SystemSflowArrayInput` via:
//
//          SystemSflowArray{ SystemSflowArgs{...} }
type SystemSflowArrayInput interface {
	pulumi.Input

	ToSystemSflowArrayOutput() SystemSflowArrayOutput
	ToSystemSflowArrayOutputWithContext(context.Context) SystemSflowArrayOutput
}

type SystemSflowArray []SystemSflowInput

func (SystemSflowArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemSflow)(nil))
}

func (i SystemSflowArray) ToSystemSflowArrayOutput() SystemSflowArrayOutput {
	return i.ToSystemSflowArrayOutputWithContext(context.Background())
}

func (i SystemSflowArray) ToSystemSflowArrayOutputWithContext(ctx context.Context) SystemSflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSflowArrayOutput)
}

// SystemSflowMapInput is an input type that accepts SystemSflowMap and SystemSflowMapOutput values.
// You can construct a concrete instance of `SystemSflowMapInput` via:
//
//          SystemSflowMap{ "key": SystemSflowArgs{...} }
type SystemSflowMapInput interface {
	pulumi.Input

	ToSystemSflowMapOutput() SystemSflowMapOutput
	ToSystemSflowMapOutputWithContext(context.Context) SystemSflowMapOutput
}

type SystemSflowMap map[string]SystemSflowInput

func (SystemSflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemSflow)(nil))
}

func (i SystemSflowMap) ToSystemSflowMapOutput() SystemSflowMapOutput {
	return i.ToSystemSflowMapOutputWithContext(context.Background())
}

func (i SystemSflowMap) ToSystemSflowMapOutputWithContext(ctx context.Context) SystemSflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSflowMapOutput)
}

type SystemSflowOutput struct {
	*pulumi.OutputState
}

func (SystemSflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSflow)(nil))
}

func (o SystemSflowOutput) ToSystemSflowOutput() SystemSflowOutput {
	return o
}

func (o SystemSflowOutput) ToSystemSflowOutputWithContext(ctx context.Context) SystemSflowOutput {
	return o
}

func (o SystemSflowOutput) ToSystemSflowPtrOutput() SystemSflowPtrOutput {
	return o.ToSystemSflowPtrOutputWithContext(context.Background())
}

func (o SystemSflowOutput) ToSystemSflowPtrOutputWithContext(ctx context.Context) SystemSflowPtrOutput {
	return o.ApplyT(func(v SystemSflow) *SystemSflow {
		return &v
	}).(SystemSflowPtrOutput)
}

type SystemSflowPtrOutput struct {
	*pulumi.OutputState
}

func (SystemSflowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSflow)(nil))
}

func (o SystemSflowPtrOutput) ToSystemSflowPtrOutput() SystemSflowPtrOutput {
	return o
}

func (o SystemSflowPtrOutput) ToSystemSflowPtrOutputWithContext(ctx context.Context) SystemSflowPtrOutput {
	return o
}

type SystemSflowArrayOutput struct{ *pulumi.OutputState }

func (SystemSflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSflow)(nil))
}

func (o SystemSflowArrayOutput) ToSystemSflowArrayOutput() SystemSflowArrayOutput {
	return o
}

func (o SystemSflowArrayOutput) ToSystemSflowArrayOutputWithContext(ctx context.Context) SystemSflowArrayOutput {
	return o
}

func (o SystemSflowArrayOutput) Index(i pulumi.IntInput) SystemSflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSflow {
		return vs[0].([]SystemSflow)[vs[1].(int)]
	}).(SystemSflowOutput)
}

type SystemSflowMapOutput struct{ *pulumi.OutputState }

func (SystemSflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemSflow)(nil))
}

func (o SystemSflowMapOutput) ToSystemSflowMapOutput() SystemSflowMapOutput {
	return o
}

func (o SystemSflowMapOutput) ToSystemSflowMapOutputWithContext(ctx context.Context) SystemSflowMapOutput {
	return o
}

func (o SystemSflowMapOutput) MapIndex(k pulumi.StringInput) SystemSflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemSflow {
		return vs[0].(map[string]SystemSflow)[vs[1].(string)]
	}).(SystemSflowOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemSflowOutput{})
	pulumi.RegisterOutputType(SystemSflowPtrOutput{})
	pulumi.RegisterOutputType(SystemSflowArrayOutput{})
	pulumi.RegisterOutputType(SystemSflowMapOutput{})
}
