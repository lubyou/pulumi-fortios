// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Report style configuration. Applies to FortiOS Version `<= 7.0.0`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewReportStyle(ctx, "trname", &fortios.ReportStyleArgs{
// 			BorderBottom: pulumi.String("\" none \""),
// 			BorderLeft:   pulumi.String("\" none \""),
// 			BorderRight:  pulumi.String("\" none \""),
// 			BorderTop:    pulumi.String("\" none \""),
// 			ColumnSpan:   pulumi.String("none"),
// 			FontStyle:    pulumi.String("normal"),
// 			FontWeight:   pulumi.String("normal"),
// 			Options:      pulumi.String("font text color"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Report Style can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/reportStyle:ReportStyle labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/reportStyle:ReportStyle labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type ReportStyle struct {
	pulumi.CustomResourceState

	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringOutput `pulumi:"align"`
	// Background color.
	BgColor pulumi.StringOutput `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom pulumi.StringOutput `pulumi:"borderBottom"`
	// Border left.
	BorderLeft pulumi.StringOutput `pulumi:"borderLeft"`
	// Border right.
	BorderRight pulumi.StringOutput `pulumi:"borderRight"`
	// Border top.
	BorderTop pulumi.StringOutput `pulumi:"borderTop"`
	// Column gap.
	ColumnGap pulumi.StringOutput `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringOutput `pulumi:"columnSpan"`
	// Foreground color.
	FgColor pulumi.StringOutput `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringOutput `pulumi:"fontFamily"`
	// Font size.
	FontSize pulumi.StringOutput `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringOutput `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringOutput `pulumi:"fontWeight"`
	// Height.
	Height pulumi.StringOutput `pulumi:"height"`
	// Text line height.
	LineHeight pulumi.StringOutput `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom pulumi.StringOutput `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft pulumi.StringOutput `pulumi:"marginLeft"`
	// Margin right.
	MarginRight pulumi.StringOutput `pulumi:"marginRight"`
	// Margin top.
	MarginTop pulumi.StringOutput `pulumi:"marginTop"`
	// Report style name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringOutput `pulumi:"options"`
	// Padding bottom.
	PaddingBottom pulumi.StringOutput `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft pulumi.StringOutput `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight pulumi.StringOutput `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop pulumi.StringOutput `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Width.
	Width pulumi.StringOutput `pulumi:"width"`
}

// NewReportStyle registers a new resource with the given unique name, arguments, and options.
func NewReportStyle(ctx *pulumi.Context,
	name string, args *ReportStyleArgs, opts ...pulumi.ResourceOption) (*ReportStyle, error) {
	if args == nil {
		args = &ReportStyleArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ReportStyle
	err := ctx.RegisterResource("fortios:index/reportStyle:ReportStyle", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportStyle gets an existing ReportStyle resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportStyle(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportStyleState, opts ...pulumi.ResourceOption) (*ReportStyle, error) {
	var resource ReportStyle
	err := ctx.ReadResource("fortios:index/reportStyle:ReportStyle", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportStyle resources.
type reportStyleState struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align *string `pulumi:"align"`
	// Background color.
	BgColor *string `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom *string `pulumi:"borderBottom"`
	// Border left.
	BorderLeft *string `pulumi:"borderLeft"`
	// Border right.
	BorderRight *string `pulumi:"borderRight"`
	// Border top.
	BorderTop *string `pulumi:"borderTop"`
	// Column gap.
	ColumnGap *string `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan *string `pulumi:"columnSpan"`
	// Foreground color.
	FgColor *string `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily *string `pulumi:"fontFamily"`
	// Font size.
	FontSize *string `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle *string `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight *string `pulumi:"fontWeight"`
	// Height.
	Height *string `pulumi:"height"`
	// Text line height.
	LineHeight *string `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom *string `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft *string `pulumi:"marginLeft"`
	// Margin right.
	MarginRight *string `pulumi:"marginRight"`
	// Margin top.
	MarginTop *string `pulumi:"marginTop"`
	// Report style name.
	Name *string `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options *string `pulumi:"options"`
	// Padding bottom.
	PaddingBottom *string `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft *string `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight *string `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop *string `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Width.
	Width *string `pulumi:"width"`
}

type ReportStyleState struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringPtrInput
	// Background color.
	BgColor pulumi.StringPtrInput
	// Border bottom.
	BorderBottom pulumi.StringPtrInput
	// Border left.
	BorderLeft pulumi.StringPtrInput
	// Border right.
	BorderRight pulumi.StringPtrInput
	// Border top.
	BorderTop pulumi.StringPtrInput
	// Column gap.
	ColumnGap pulumi.StringPtrInput
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringPtrInput
	// Foreground color.
	FgColor pulumi.StringPtrInput
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringPtrInput
	// Font size.
	FontSize pulumi.StringPtrInput
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringPtrInput
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringPtrInput
	// Height.
	Height pulumi.StringPtrInput
	// Text line height.
	LineHeight pulumi.StringPtrInput
	// Margin bottom.
	MarginBottom pulumi.StringPtrInput
	// Margin left.
	MarginLeft pulumi.StringPtrInput
	// Margin right.
	MarginRight pulumi.StringPtrInput
	// Margin top.
	MarginTop pulumi.StringPtrInput
	// Report style name.
	Name pulumi.StringPtrInput
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringPtrInput
	// Padding bottom.
	PaddingBottom pulumi.StringPtrInput
	// Padding left.
	PaddingLeft pulumi.StringPtrInput
	// Padding right.
	PaddingRight pulumi.StringPtrInput
	// Padding top.
	PaddingTop pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Width.
	Width pulumi.StringPtrInput
}

func (ReportStyleState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportStyleState)(nil)).Elem()
}

type reportStyleArgs struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align *string `pulumi:"align"`
	// Background color.
	BgColor *string `pulumi:"bgColor"`
	// Border bottom.
	BorderBottom *string `pulumi:"borderBottom"`
	// Border left.
	BorderLeft *string `pulumi:"borderLeft"`
	// Border right.
	BorderRight *string `pulumi:"borderRight"`
	// Border top.
	BorderTop *string `pulumi:"borderTop"`
	// Column gap.
	ColumnGap *string `pulumi:"columnGap"`
	// Column span. Valid values: `none`, `all`.
	ColumnSpan *string `pulumi:"columnSpan"`
	// Foreground color.
	FgColor *string `pulumi:"fgColor"`
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily *string `pulumi:"fontFamily"`
	// Font size.
	FontSize *string `pulumi:"fontSize"`
	// Font style. Valid values: `normal`, `italic`.
	FontStyle *string `pulumi:"fontStyle"`
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight *string `pulumi:"fontWeight"`
	// Height.
	Height *string `pulumi:"height"`
	// Text line height.
	LineHeight *string `pulumi:"lineHeight"`
	// Margin bottom.
	MarginBottom *string `pulumi:"marginBottom"`
	// Margin left.
	MarginLeft *string `pulumi:"marginLeft"`
	// Margin right.
	MarginRight *string `pulumi:"marginRight"`
	// Margin top.
	MarginTop *string `pulumi:"marginTop"`
	// Report style name.
	Name *string `pulumi:"name"`
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options *string `pulumi:"options"`
	// Padding bottom.
	PaddingBottom *string `pulumi:"paddingBottom"`
	// Padding left.
	PaddingLeft *string `pulumi:"paddingLeft"`
	// Padding right.
	PaddingRight *string `pulumi:"paddingRight"`
	// Padding top.
	PaddingTop *string `pulumi:"paddingTop"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Width.
	Width *string `pulumi:"width"`
}

// The set of arguments for constructing a ReportStyle resource.
type ReportStyleArgs struct {
	// Alignment. Valid values: `left`, `center`, `right`, `justify`.
	Align pulumi.StringPtrInput
	// Background color.
	BgColor pulumi.StringPtrInput
	// Border bottom.
	BorderBottom pulumi.StringPtrInput
	// Border left.
	BorderLeft pulumi.StringPtrInput
	// Border right.
	BorderRight pulumi.StringPtrInput
	// Border top.
	BorderTop pulumi.StringPtrInput
	// Column gap.
	ColumnGap pulumi.StringPtrInput
	// Column span. Valid values: `none`, `all`.
	ColumnSpan pulumi.StringPtrInput
	// Foreground color.
	FgColor pulumi.StringPtrInput
	// Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
	FontFamily pulumi.StringPtrInput
	// Font size.
	FontSize pulumi.StringPtrInput
	// Font style. Valid values: `normal`, `italic`.
	FontStyle pulumi.StringPtrInput
	// Font weight. Valid values: `normal`, `bold`.
	FontWeight pulumi.StringPtrInput
	// Height.
	Height pulumi.StringPtrInput
	// Text line height.
	LineHeight pulumi.StringPtrInput
	// Margin bottom.
	MarginBottom pulumi.StringPtrInput
	// Margin left.
	MarginLeft pulumi.StringPtrInput
	// Margin right.
	MarginRight pulumi.StringPtrInput
	// Margin top.
	MarginTop pulumi.StringPtrInput
	// Report style name.
	Name pulumi.StringPtrInput
	// Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
	Options pulumi.StringPtrInput
	// Padding bottom.
	PaddingBottom pulumi.StringPtrInput
	// Padding left.
	PaddingLeft pulumi.StringPtrInput
	// Padding right.
	PaddingRight pulumi.StringPtrInput
	// Padding top.
	PaddingTop pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Width.
	Width pulumi.StringPtrInput
}

func (ReportStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportStyleArgs)(nil)).Elem()
}

type ReportStyleInput interface {
	pulumi.Input

	ToReportStyleOutput() ReportStyleOutput
	ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput
}

func (*ReportStyle) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportStyle)(nil)).Elem()
}

func (i *ReportStyle) ToReportStyleOutput() ReportStyleOutput {
	return i.ToReportStyleOutputWithContext(context.Background())
}

func (i *ReportStyle) ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleOutput)
}

// ReportStyleArrayInput is an input type that accepts ReportStyleArray and ReportStyleArrayOutput values.
// You can construct a concrete instance of `ReportStyleArrayInput` via:
//
//          ReportStyleArray{ ReportStyleArgs{...} }
type ReportStyleArrayInput interface {
	pulumi.Input

	ToReportStyleArrayOutput() ReportStyleArrayOutput
	ToReportStyleArrayOutputWithContext(context.Context) ReportStyleArrayOutput
}

type ReportStyleArray []ReportStyleInput

func (ReportStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportStyle)(nil)).Elem()
}

func (i ReportStyleArray) ToReportStyleArrayOutput() ReportStyleArrayOutput {
	return i.ToReportStyleArrayOutputWithContext(context.Background())
}

func (i ReportStyleArray) ToReportStyleArrayOutputWithContext(ctx context.Context) ReportStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleArrayOutput)
}

// ReportStyleMapInput is an input type that accepts ReportStyleMap and ReportStyleMapOutput values.
// You can construct a concrete instance of `ReportStyleMapInput` via:
//
//          ReportStyleMap{ "key": ReportStyleArgs{...} }
type ReportStyleMapInput interface {
	pulumi.Input

	ToReportStyleMapOutput() ReportStyleMapOutput
	ToReportStyleMapOutputWithContext(context.Context) ReportStyleMapOutput
}

type ReportStyleMap map[string]ReportStyleInput

func (ReportStyleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportStyle)(nil)).Elem()
}

func (i ReportStyleMap) ToReportStyleMapOutput() ReportStyleMapOutput {
	return i.ToReportStyleMapOutputWithContext(context.Background())
}

func (i ReportStyleMap) ToReportStyleMapOutputWithContext(ctx context.Context) ReportStyleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleMapOutput)
}

type ReportStyleOutput struct{ *pulumi.OutputState }

func (ReportStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportStyle)(nil)).Elem()
}

func (o ReportStyleOutput) ToReportStyleOutput() ReportStyleOutput {
	return o
}

func (o ReportStyleOutput) ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput {
	return o
}

type ReportStyleArrayOutput struct{ *pulumi.OutputState }

func (ReportStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportStyle)(nil)).Elem()
}

func (o ReportStyleArrayOutput) ToReportStyleArrayOutput() ReportStyleArrayOutput {
	return o
}

func (o ReportStyleArrayOutput) ToReportStyleArrayOutputWithContext(ctx context.Context) ReportStyleArrayOutput {
	return o
}

func (o ReportStyleArrayOutput) Index(i pulumi.IntInput) ReportStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportStyle {
		return vs[0].([]*ReportStyle)[vs[1].(int)]
	}).(ReportStyleOutput)
}

type ReportStyleMapOutput struct{ *pulumi.OutputState }

func (ReportStyleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportStyle)(nil)).Elem()
}

func (o ReportStyleMapOutput) ToReportStyleMapOutput() ReportStyleMapOutput {
	return o
}

func (o ReportStyleMapOutput) ToReportStyleMapOutputWithContext(ctx context.Context) ReportStyleMapOutput {
	return o
}

func (o ReportStyleMapOutput) MapIndex(k pulumi.StringInput) ReportStyleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportStyle {
		return vs[0].(map[string]*ReportStyle)[vs[1].(string)]
	}).(ReportStyleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleInput)(nil)).Elem(), &ReportStyle{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleArrayInput)(nil)).Elem(), ReportStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleMapInput)(nil)).Elem(), ReportStyleMap{})
	pulumi.RegisterOutputType(ReportStyleOutput{})
	pulumi.RegisterOutputType(ReportStyleArrayOutput{})
	pulumi.RegisterOutputType(ReportStyleMapOutput{})
}
