// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReportStyle struct {
	pulumi.CustomResourceState

	Align         pulumi.StringOutput    `pulumi:"align"`
	BgColor       pulumi.StringOutput    `pulumi:"bgColor"`
	BorderBottom  pulumi.StringOutput    `pulumi:"borderBottom"`
	BorderLeft    pulumi.StringOutput    `pulumi:"borderLeft"`
	BorderRight   pulumi.StringOutput    `pulumi:"borderRight"`
	BorderTop     pulumi.StringOutput    `pulumi:"borderTop"`
	ColumnGap     pulumi.StringOutput    `pulumi:"columnGap"`
	ColumnSpan    pulumi.StringOutput    `pulumi:"columnSpan"`
	FgColor       pulumi.StringOutput    `pulumi:"fgColor"`
	FontFamily    pulumi.StringOutput    `pulumi:"fontFamily"`
	FontSize      pulumi.StringOutput    `pulumi:"fontSize"`
	FontStyle     pulumi.StringOutput    `pulumi:"fontStyle"`
	FontWeight    pulumi.StringOutput    `pulumi:"fontWeight"`
	Height        pulumi.StringOutput    `pulumi:"height"`
	LineHeight    pulumi.StringOutput    `pulumi:"lineHeight"`
	MarginBottom  pulumi.StringOutput    `pulumi:"marginBottom"`
	MarginLeft    pulumi.StringOutput    `pulumi:"marginLeft"`
	MarginRight   pulumi.StringOutput    `pulumi:"marginRight"`
	MarginTop     pulumi.StringOutput    `pulumi:"marginTop"`
	Name          pulumi.StringOutput    `pulumi:"name"`
	Options       pulumi.StringOutput    `pulumi:"options"`
	PaddingBottom pulumi.StringOutput    `pulumi:"paddingBottom"`
	PaddingLeft   pulumi.StringOutput    `pulumi:"paddingLeft"`
	PaddingRight  pulumi.StringOutput    `pulumi:"paddingRight"`
	PaddingTop    pulumi.StringOutput    `pulumi:"paddingTop"`
	Vdomparam     pulumi.StringPtrOutput `pulumi:"vdomparam"`
	Width         pulumi.StringOutput    `pulumi:"width"`
}

// NewReportStyle registers a new resource with the given unique name, arguments, and options.
func NewReportStyle(ctx *pulumi.Context,
	name string, args *ReportStyleArgs, opts ...pulumi.ResourceOption) (*ReportStyle, error) {
	if args == nil {
		args = &ReportStyleArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ReportStyle
	err := ctx.RegisterResource("fortios:index/reportStyle:ReportStyle", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportStyle gets an existing ReportStyle resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportStyle(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportStyleState, opts ...pulumi.ResourceOption) (*ReportStyle, error) {
	var resource ReportStyle
	err := ctx.ReadResource("fortios:index/reportStyle:ReportStyle", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportStyle resources.
type reportStyleState struct {
	Align         *string `pulumi:"align"`
	BgColor       *string `pulumi:"bgColor"`
	BorderBottom  *string `pulumi:"borderBottom"`
	BorderLeft    *string `pulumi:"borderLeft"`
	BorderRight   *string `pulumi:"borderRight"`
	BorderTop     *string `pulumi:"borderTop"`
	ColumnGap     *string `pulumi:"columnGap"`
	ColumnSpan    *string `pulumi:"columnSpan"`
	FgColor       *string `pulumi:"fgColor"`
	FontFamily    *string `pulumi:"fontFamily"`
	FontSize      *string `pulumi:"fontSize"`
	FontStyle     *string `pulumi:"fontStyle"`
	FontWeight    *string `pulumi:"fontWeight"`
	Height        *string `pulumi:"height"`
	LineHeight    *string `pulumi:"lineHeight"`
	MarginBottom  *string `pulumi:"marginBottom"`
	MarginLeft    *string `pulumi:"marginLeft"`
	MarginRight   *string `pulumi:"marginRight"`
	MarginTop     *string `pulumi:"marginTop"`
	Name          *string `pulumi:"name"`
	Options       *string `pulumi:"options"`
	PaddingBottom *string `pulumi:"paddingBottom"`
	PaddingLeft   *string `pulumi:"paddingLeft"`
	PaddingRight  *string `pulumi:"paddingRight"`
	PaddingTop    *string `pulumi:"paddingTop"`
	Vdomparam     *string `pulumi:"vdomparam"`
	Width         *string `pulumi:"width"`
}

type ReportStyleState struct {
	Align         pulumi.StringPtrInput
	BgColor       pulumi.StringPtrInput
	BorderBottom  pulumi.StringPtrInput
	BorderLeft    pulumi.StringPtrInput
	BorderRight   pulumi.StringPtrInput
	BorderTop     pulumi.StringPtrInput
	ColumnGap     pulumi.StringPtrInput
	ColumnSpan    pulumi.StringPtrInput
	FgColor       pulumi.StringPtrInput
	FontFamily    pulumi.StringPtrInput
	FontSize      pulumi.StringPtrInput
	FontStyle     pulumi.StringPtrInput
	FontWeight    pulumi.StringPtrInput
	Height        pulumi.StringPtrInput
	LineHeight    pulumi.StringPtrInput
	MarginBottom  pulumi.StringPtrInput
	MarginLeft    pulumi.StringPtrInput
	MarginRight   pulumi.StringPtrInput
	MarginTop     pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Options       pulumi.StringPtrInput
	PaddingBottom pulumi.StringPtrInput
	PaddingLeft   pulumi.StringPtrInput
	PaddingRight  pulumi.StringPtrInput
	PaddingTop    pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
	Width         pulumi.StringPtrInput
}

func (ReportStyleState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportStyleState)(nil)).Elem()
}

type reportStyleArgs struct {
	Align         *string `pulumi:"align"`
	BgColor       *string `pulumi:"bgColor"`
	BorderBottom  *string `pulumi:"borderBottom"`
	BorderLeft    *string `pulumi:"borderLeft"`
	BorderRight   *string `pulumi:"borderRight"`
	BorderTop     *string `pulumi:"borderTop"`
	ColumnGap     *string `pulumi:"columnGap"`
	ColumnSpan    *string `pulumi:"columnSpan"`
	FgColor       *string `pulumi:"fgColor"`
	FontFamily    *string `pulumi:"fontFamily"`
	FontSize      *string `pulumi:"fontSize"`
	FontStyle     *string `pulumi:"fontStyle"`
	FontWeight    *string `pulumi:"fontWeight"`
	Height        *string `pulumi:"height"`
	LineHeight    *string `pulumi:"lineHeight"`
	MarginBottom  *string `pulumi:"marginBottom"`
	MarginLeft    *string `pulumi:"marginLeft"`
	MarginRight   *string `pulumi:"marginRight"`
	MarginTop     *string `pulumi:"marginTop"`
	Name          *string `pulumi:"name"`
	Options       *string `pulumi:"options"`
	PaddingBottom *string `pulumi:"paddingBottom"`
	PaddingLeft   *string `pulumi:"paddingLeft"`
	PaddingRight  *string `pulumi:"paddingRight"`
	PaddingTop    *string `pulumi:"paddingTop"`
	Vdomparam     *string `pulumi:"vdomparam"`
	Width         *string `pulumi:"width"`
}

// The set of arguments for constructing a ReportStyle resource.
type ReportStyleArgs struct {
	Align         pulumi.StringPtrInput
	BgColor       pulumi.StringPtrInput
	BorderBottom  pulumi.StringPtrInput
	BorderLeft    pulumi.StringPtrInput
	BorderRight   pulumi.StringPtrInput
	BorderTop     pulumi.StringPtrInput
	ColumnGap     pulumi.StringPtrInput
	ColumnSpan    pulumi.StringPtrInput
	FgColor       pulumi.StringPtrInput
	FontFamily    pulumi.StringPtrInput
	FontSize      pulumi.StringPtrInput
	FontStyle     pulumi.StringPtrInput
	FontWeight    pulumi.StringPtrInput
	Height        pulumi.StringPtrInput
	LineHeight    pulumi.StringPtrInput
	MarginBottom  pulumi.StringPtrInput
	MarginLeft    pulumi.StringPtrInput
	MarginRight   pulumi.StringPtrInput
	MarginTop     pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Options       pulumi.StringPtrInput
	PaddingBottom pulumi.StringPtrInput
	PaddingLeft   pulumi.StringPtrInput
	PaddingRight  pulumi.StringPtrInput
	PaddingTop    pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
	Width         pulumi.StringPtrInput
}

func (ReportStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportStyleArgs)(nil)).Elem()
}

type ReportStyleInput interface {
	pulumi.Input

	ToReportStyleOutput() ReportStyleOutput
	ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput
}

func (*ReportStyle) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportStyle)(nil)).Elem()
}

func (i *ReportStyle) ToReportStyleOutput() ReportStyleOutput {
	return i.ToReportStyleOutputWithContext(context.Background())
}

func (i *ReportStyle) ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleOutput)
}

// ReportStyleArrayInput is an input type that accepts ReportStyleArray and ReportStyleArrayOutput values.
// You can construct a concrete instance of `ReportStyleArrayInput` via:
//
//	ReportStyleArray{ ReportStyleArgs{...} }
type ReportStyleArrayInput interface {
	pulumi.Input

	ToReportStyleArrayOutput() ReportStyleArrayOutput
	ToReportStyleArrayOutputWithContext(context.Context) ReportStyleArrayOutput
}

type ReportStyleArray []ReportStyleInput

func (ReportStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportStyle)(nil)).Elem()
}

func (i ReportStyleArray) ToReportStyleArrayOutput() ReportStyleArrayOutput {
	return i.ToReportStyleArrayOutputWithContext(context.Background())
}

func (i ReportStyleArray) ToReportStyleArrayOutputWithContext(ctx context.Context) ReportStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleArrayOutput)
}

// ReportStyleMapInput is an input type that accepts ReportStyleMap and ReportStyleMapOutput values.
// You can construct a concrete instance of `ReportStyleMapInput` via:
//
//	ReportStyleMap{ "key": ReportStyleArgs{...} }
type ReportStyleMapInput interface {
	pulumi.Input

	ToReportStyleMapOutput() ReportStyleMapOutput
	ToReportStyleMapOutputWithContext(context.Context) ReportStyleMapOutput
}

type ReportStyleMap map[string]ReportStyleInput

func (ReportStyleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportStyle)(nil)).Elem()
}

func (i ReportStyleMap) ToReportStyleMapOutput() ReportStyleMapOutput {
	return i.ToReportStyleMapOutputWithContext(context.Background())
}

func (i ReportStyleMap) ToReportStyleMapOutputWithContext(ctx context.Context) ReportStyleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportStyleMapOutput)
}

type ReportStyleOutput struct{ *pulumi.OutputState }

func (ReportStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportStyle)(nil)).Elem()
}

func (o ReportStyleOutput) ToReportStyleOutput() ReportStyleOutput {
	return o
}

func (o ReportStyleOutput) ToReportStyleOutputWithContext(ctx context.Context) ReportStyleOutput {
	return o
}

func (o ReportStyleOutput) Align() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.Align }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) BgColor() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.BgColor }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) BorderBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.BorderBottom }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) BorderLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.BorderLeft }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) BorderRight() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.BorderRight }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) BorderTop() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.BorderTop }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) ColumnGap() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.ColumnGap }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) ColumnSpan() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.ColumnSpan }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) FgColor() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.FgColor }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) FontFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.FontFamily }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) FontSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.FontSize }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) FontStyle() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.FontStyle }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) FontWeight() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.FontWeight }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.Height }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) LineHeight() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.LineHeight }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) MarginBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.MarginBottom }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) MarginLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.MarginLeft }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) MarginRight() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.MarginRight }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) MarginTop() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.MarginTop }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.Options }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) PaddingBottom() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.PaddingBottom }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) PaddingLeft() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.PaddingLeft }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) PaddingRight() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.PaddingRight }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) PaddingTop() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.PaddingTop }).(pulumi.StringOutput)
}

func (o ReportStyleOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o ReportStyleOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v *ReportStyle) pulumi.StringOutput { return v.Width }).(pulumi.StringOutput)
}

type ReportStyleArrayOutput struct{ *pulumi.OutputState }

func (ReportStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReportStyle)(nil)).Elem()
}

func (o ReportStyleArrayOutput) ToReportStyleArrayOutput() ReportStyleArrayOutput {
	return o
}

func (o ReportStyleArrayOutput) ToReportStyleArrayOutputWithContext(ctx context.Context) ReportStyleArrayOutput {
	return o
}

func (o ReportStyleArrayOutput) Index(i pulumi.IntInput) ReportStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReportStyle {
		return vs[0].([]*ReportStyle)[vs[1].(int)]
	}).(ReportStyleOutput)
}

type ReportStyleMapOutput struct{ *pulumi.OutputState }

func (ReportStyleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReportStyle)(nil)).Elem()
}

func (o ReportStyleMapOutput) ToReportStyleMapOutput() ReportStyleMapOutput {
	return o
}

func (o ReportStyleMapOutput) ToReportStyleMapOutputWithContext(ctx context.Context) ReportStyleMapOutput {
	return o
}

func (o ReportStyleMapOutput) MapIndex(k pulumi.StringInput) ReportStyleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReportStyle {
		return vs[0].(map[string]*ReportStyle)[vs[1].(string)]
	}).(ReportStyleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleInput)(nil)).Elem(), &ReportStyle{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleArrayInput)(nil)).Elem(), ReportStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStyleMapInput)(nil)).Elem(), ReportStyleMap{})
	pulumi.RegisterOutputType(ReportStyleOutput{})
	pulumi.RegisterOutputType(ReportStyleArrayOutput{})
	pulumi.RegisterOutputType(ReportStyleMapOutput{})
}
