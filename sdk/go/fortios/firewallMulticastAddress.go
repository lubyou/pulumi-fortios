// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallMulticastAddress struct {
	pulumi.CustomResourceState

	AssociatedInterface pulumi.StringOutput                        `pulumi:"associatedInterface"`
	Color               pulumi.IntOutput                           `pulumi:"color"`
	Comment             pulumi.StringPtrOutput                     `pulumi:"comment"`
	DynamicSortSubtable pulumi.StringPtrOutput                     `pulumi:"dynamicSortSubtable"`
	EndIp               pulumi.StringOutput                        `pulumi:"endIp"`
	GetAllTables        pulumi.StringPtrOutput                     `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                        `pulumi:"name"`
	StartIp             pulumi.StringOutput                        `pulumi:"startIp"`
	Subnet              pulumi.StringOutput                        `pulumi:"subnet"`
	Taggings            FirewallMulticastAddressTaggingArrayOutput `pulumi:"taggings"`
	Type                pulumi.StringOutput                        `pulumi:"type"`
	Vdomparam           pulumi.StringPtrOutput                     `pulumi:"vdomparam"`
	Visibility          pulumi.StringOutput                        `pulumi:"visibility"`
}

// NewFirewallMulticastAddress registers a new resource with the given unique name, arguments, and options.
func NewFirewallMulticastAddress(ctx *pulumi.Context,
	name string, args *FirewallMulticastAddressArgs, opts ...pulumi.ResourceOption) (*FirewallMulticastAddress, error) {
	if args == nil {
		args = &FirewallMulticastAddressArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallMulticastAddress
	err := ctx.RegisterResource("fortios:index/firewallMulticastAddress:FirewallMulticastAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallMulticastAddress gets an existing FirewallMulticastAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallMulticastAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallMulticastAddressState, opts ...pulumi.ResourceOption) (*FirewallMulticastAddress, error) {
	var resource FirewallMulticastAddress
	err := ctx.ReadResource("fortios:index/firewallMulticastAddress:FirewallMulticastAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallMulticastAddress resources.
type firewallMulticastAddressState struct {
	AssociatedInterface *string                           `pulumi:"associatedInterface"`
	Color               *int                              `pulumi:"color"`
	Comment             *string                           `pulumi:"comment"`
	DynamicSortSubtable *string                           `pulumi:"dynamicSortSubtable"`
	EndIp               *string                           `pulumi:"endIp"`
	GetAllTables        *string                           `pulumi:"getAllTables"`
	Name                *string                           `pulumi:"name"`
	StartIp             *string                           `pulumi:"startIp"`
	Subnet              *string                           `pulumi:"subnet"`
	Taggings            []FirewallMulticastAddressTagging `pulumi:"taggings"`
	Type                *string                           `pulumi:"type"`
	Vdomparam           *string                           `pulumi:"vdomparam"`
	Visibility          *string                           `pulumi:"visibility"`
}

type FirewallMulticastAddressState struct {
	AssociatedInterface pulumi.StringPtrInput
	Color               pulumi.IntPtrInput
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EndIp               pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	StartIp             pulumi.StringPtrInput
	Subnet              pulumi.StringPtrInput
	Taggings            FirewallMulticastAddressTaggingArrayInput
	Type                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Visibility          pulumi.StringPtrInput
}

func (FirewallMulticastAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastAddressState)(nil)).Elem()
}

type firewallMulticastAddressArgs struct {
	AssociatedInterface *string                           `pulumi:"associatedInterface"`
	Color               *int                              `pulumi:"color"`
	Comment             *string                           `pulumi:"comment"`
	DynamicSortSubtable *string                           `pulumi:"dynamicSortSubtable"`
	EndIp               *string                           `pulumi:"endIp"`
	GetAllTables        *string                           `pulumi:"getAllTables"`
	Name                *string                           `pulumi:"name"`
	StartIp             *string                           `pulumi:"startIp"`
	Subnet              *string                           `pulumi:"subnet"`
	Taggings            []FirewallMulticastAddressTagging `pulumi:"taggings"`
	Type                *string                           `pulumi:"type"`
	Vdomparam           *string                           `pulumi:"vdomparam"`
	Visibility          *string                           `pulumi:"visibility"`
}

// The set of arguments for constructing a FirewallMulticastAddress resource.
type FirewallMulticastAddressArgs struct {
	AssociatedInterface pulumi.StringPtrInput
	Color               pulumi.IntPtrInput
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EndIp               pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	StartIp             pulumi.StringPtrInput
	Subnet              pulumi.StringPtrInput
	Taggings            FirewallMulticastAddressTaggingArrayInput
	Type                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Visibility          pulumi.StringPtrInput
}

func (FirewallMulticastAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastAddressArgs)(nil)).Elem()
}

type FirewallMulticastAddressInput interface {
	pulumi.Input

	ToFirewallMulticastAddressOutput() FirewallMulticastAddressOutput
	ToFirewallMulticastAddressOutputWithContext(ctx context.Context) FirewallMulticastAddressOutput
}

func (*FirewallMulticastAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastAddress)(nil)).Elem()
}

func (i *FirewallMulticastAddress) ToFirewallMulticastAddressOutput() FirewallMulticastAddressOutput {
	return i.ToFirewallMulticastAddressOutputWithContext(context.Background())
}

func (i *FirewallMulticastAddress) ToFirewallMulticastAddressOutputWithContext(ctx context.Context) FirewallMulticastAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastAddressOutput)
}

func (i *FirewallMulticastAddress) ToOutput(ctx context.Context) pulumix.Output[*FirewallMulticastAddress] {
	return pulumix.Output[*FirewallMulticastAddress]{
		OutputState: i.ToFirewallMulticastAddressOutputWithContext(ctx).OutputState,
	}
}

// FirewallMulticastAddressArrayInput is an input type that accepts FirewallMulticastAddressArray and FirewallMulticastAddressArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastAddressArrayInput` via:
//
//	FirewallMulticastAddressArray{ FirewallMulticastAddressArgs{...} }
type FirewallMulticastAddressArrayInput interface {
	pulumi.Input

	ToFirewallMulticastAddressArrayOutput() FirewallMulticastAddressArrayOutput
	ToFirewallMulticastAddressArrayOutputWithContext(context.Context) FirewallMulticastAddressArrayOutput
}

type FirewallMulticastAddressArray []FirewallMulticastAddressInput

func (FirewallMulticastAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastAddress)(nil)).Elem()
}

func (i FirewallMulticastAddressArray) ToFirewallMulticastAddressArrayOutput() FirewallMulticastAddressArrayOutput {
	return i.ToFirewallMulticastAddressArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastAddressArray) ToFirewallMulticastAddressArrayOutputWithContext(ctx context.Context) FirewallMulticastAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastAddressArrayOutput)
}

func (i FirewallMulticastAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallMulticastAddress] {
	return pulumix.Output[[]*FirewallMulticastAddress]{
		OutputState: i.ToFirewallMulticastAddressArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallMulticastAddressMapInput is an input type that accepts FirewallMulticastAddressMap and FirewallMulticastAddressMapOutput values.
// You can construct a concrete instance of `FirewallMulticastAddressMapInput` via:
//
//	FirewallMulticastAddressMap{ "key": FirewallMulticastAddressArgs{...} }
type FirewallMulticastAddressMapInput interface {
	pulumi.Input

	ToFirewallMulticastAddressMapOutput() FirewallMulticastAddressMapOutput
	ToFirewallMulticastAddressMapOutputWithContext(context.Context) FirewallMulticastAddressMapOutput
}

type FirewallMulticastAddressMap map[string]FirewallMulticastAddressInput

func (FirewallMulticastAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastAddress)(nil)).Elem()
}

func (i FirewallMulticastAddressMap) ToFirewallMulticastAddressMapOutput() FirewallMulticastAddressMapOutput {
	return i.ToFirewallMulticastAddressMapOutputWithContext(context.Background())
}

func (i FirewallMulticastAddressMap) ToFirewallMulticastAddressMapOutputWithContext(ctx context.Context) FirewallMulticastAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastAddressMapOutput)
}

func (i FirewallMulticastAddressMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallMulticastAddress] {
	return pulumix.Output[map[string]*FirewallMulticastAddress]{
		OutputState: i.ToFirewallMulticastAddressMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallMulticastAddressOutput struct{ *pulumi.OutputState }

func (FirewallMulticastAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastAddress)(nil)).Elem()
}

func (o FirewallMulticastAddressOutput) ToFirewallMulticastAddressOutput() FirewallMulticastAddressOutput {
	return o
}

func (o FirewallMulticastAddressOutput) ToFirewallMulticastAddressOutputWithContext(ctx context.Context) FirewallMulticastAddressOutput {
	return o
}

func (o FirewallMulticastAddressOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallMulticastAddress] {
	return pulumix.Output[*FirewallMulticastAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallMulticastAddressOutput) AssociatedInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.AssociatedInterface }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o FirewallMulticastAddressOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastAddressOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastAddressOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.EndIp }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.StartIp }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.Subnet }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) Taggings() FirewallMulticastAddressTaggingArrayOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) FirewallMulticastAddressTaggingArrayOutput { return v.Taggings }).(FirewallMulticastAddressTaggingArrayOutput)
}

func (o FirewallMulticastAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o FirewallMulticastAddressOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastAddressOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastAddress) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type FirewallMulticastAddressArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastAddress)(nil)).Elem()
}

func (o FirewallMulticastAddressArrayOutput) ToFirewallMulticastAddressArrayOutput() FirewallMulticastAddressArrayOutput {
	return o
}

func (o FirewallMulticastAddressArrayOutput) ToFirewallMulticastAddressArrayOutputWithContext(ctx context.Context) FirewallMulticastAddressArrayOutput {
	return o
}

func (o FirewallMulticastAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallMulticastAddress] {
	return pulumix.Output[[]*FirewallMulticastAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallMulticastAddressArrayOutput) Index(i pulumi.IntInput) FirewallMulticastAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallMulticastAddress {
		return vs[0].([]*FirewallMulticastAddress)[vs[1].(int)]
	}).(FirewallMulticastAddressOutput)
}

type FirewallMulticastAddressMapOutput struct{ *pulumi.OutputState }

func (FirewallMulticastAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastAddress)(nil)).Elem()
}

func (o FirewallMulticastAddressMapOutput) ToFirewallMulticastAddressMapOutput() FirewallMulticastAddressMapOutput {
	return o
}

func (o FirewallMulticastAddressMapOutput) ToFirewallMulticastAddressMapOutputWithContext(ctx context.Context) FirewallMulticastAddressMapOutput {
	return o
}

func (o FirewallMulticastAddressMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallMulticastAddress] {
	return pulumix.Output[map[string]*FirewallMulticastAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallMulticastAddressMapOutput) MapIndex(k pulumi.StringInput) FirewallMulticastAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallMulticastAddress {
		return vs[0].(map[string]*FirewallMulticastAddress)[vs[1].(string)]
	}).(FirewallMulticastAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastAddressInput)(nil)).Elem(), &FirewallMulticastAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastAddressArrayInput)(nil)).Elem(), FirewallMulticastAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastAddressMapInput)(nil)).Elem(), FirewallMulticastAddressMap{})
	pulumi.RegisterOutputType(FirewallMulticastAddressOutput{})
	pulumi.RegisterOutputType(FirewallMulticastAddressArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastAddressMapOutput{})
}
