// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSandbox.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemFortisandbox(ctx, "trname", &fortios.SystemFortisandboxArgs{
// 			EncAlgorithm:       pulumi.String("default"),
// 			SslMinProtoVersion: pulumi.String("default"),
// 			Status:             pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System Fortisandbox can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemFortisandbox:SystemFortisandbox labelname SystemFortisandbox
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemFortisandbox struct {
	pulumi.CustomResourceState

	// Notifier email address.
	Email pulumi.StringOutput `pulumi:"email"`
	// Configure the level of SSL protection for secure communication with FortiSandbox. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringOutput `pulumi:"encAlgorithm"`
	// Enable/disable FortiSandbox Cloud. Valid values: `enable`, `disable`.
	Forticloud pulumi.StringOutput `pulumi:"forticloud"`
	// Specify outgoing interface to reach server.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringOutput `pulumi:"interfaceSelectMethod"`
	// IPv4 or IPv6 address of the remote FortiSandbox.
	Server pulumi.StringOutput `pulumi:"server"`
	// Source IP address for communications to FortiSandbox.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringOutput `pulumi:"sslMinProtoVersion"`
	// Enable/disable FortiSandbox. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemFortisandbox registers a new resource with the given unique name, arguments, and options.
func NewSystemFortisandbox(ctx *pulumi.Context,
	name string, args *SystemFortisandboxArgs, opts ...pulumi.ResourceOption) (*SystemFortisandbox, error) {
	if args == nil {
		args = &SystemFortisandboxArgs{}
	}

	var resource SystemFortisandbox
	err := ctx.RegisterResource("fortios:index/systemFortisandbox:SystemFortisandbox", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFortisandbox gets an existing SystemFortisandbox resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFortisandbox(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFortisandboxState, opts ...pulumi.ResourceOption) (*SystemFortisandbox, error) {
	var resource SystemFortisandbox
	err := ctx.ReadResource("fortios:index/systemFortisandbox:SystemFortisandbox", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFortisandbox resources.
type systemFortisandboxState struct {
	// Notifier email address.
	Email *string `pulumi:"email"`
	// Configure the level of SSL protection for secure communication with FortiSandbox. Valid values: `default`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// Enable/disable FortiSandbox Cloud. Valid values: `enable`, `disable`.
	Forticloud *string `pulumi:"forticloud"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// IPv4 or IPv6 address of the remote FortiSandbox.
	Server *string `pulumi:"server"`
	// Source IP address for communications to FortiSandbox.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable FortiSandbox. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemFortisandboxState struct {
	// Notifier email address.
	Email pulumi.StringPtrInput
	// Configure the level of SSL protection for secure communication with FortiSandbox. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// Enable/disable FortiSandbox Cloud. Valid values: `enable`, `disable`.
	Forticloud pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// IPv4 or IPv6 address of the remote FortiSandbox.
	Server pulumi.StringPtrInput
	// Source IP address for communications to FortiSandbox.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable FortiSandbox. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFortisandboxState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortisandboxState)(nil)).Elem()
}

type systemFortisandboxArgs struct {
	// Notifier email address.
	Email *string `pulumi:"email"`
	// Configure the level of SSL protection for secure communication with FortiSandbox. Valid values: `default`, `high`, `low`.
	EncAlgorithm *string `pulumi:"encAlgorithm"`
	// Enable/disable FortiSandbox Cloud. Valid values: `enable`, `disable`.
	Forticloud *string `pulumi:"forticloud"`
	// Specify outgoing interface to reach server.
	Interface *string `pulumi:"interface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod *string `pulumi:"interfaceSelectMethod"`
	// IPv4 or IPv6 address of the remote FortiSandbox.
	Server *string `pulumi:"server"`
	// Source IP address for communications to FortiSandbox.
	SourceIp *string `pulumi:"sourceIp"`
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion *string `pulumi:"sslMinProtoVersion"`
	// Enable/disable FortiSandbox. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemFortisandbox resource.
type SystemFortisandboxArgs struct {
	// Notifier email address.
	Email pulumi.StringPtrInput
	// Configure the level of SSL protection for secure communication with FortiSandbox. Valid values: `default`, `high`, `low`.
	EncAlgorithm pulumi.StringPtrInput
	// Enable/disable FortiSandbox Cloud. Valid values: `enable`, `disable`.
	Forticloud pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	Interface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	InterfaceSelectMethod pulumi.StringPtrInput
	// IPv4 or IPv6 address of the remote FortiSandbox.
	Server pulumi.StringPtrInput
	// Source IP address for communications to FortiSandbox.
	SourceIp pulumi.StringPtrInput
	// Minimum supported protocol version for SSL/TLS connections (default is to follow system global setting). Valid values: `default`, `SSLv3`, `TLSv1`, `TLSv1-1`, `TLSv1-2`.
	SslMinProtoVersion pulumi.StringPtrInput
	// Enable/disable FortiSandbox. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemFortisandboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFortisandboxArgs)(nil)).Elem()
}

type SystemFortisandboxInput interface {
	pulumi.Input

	ToSystemFortisandboxOutput() SystemFortisandboxOutput
	ToSystemFortisandboxOutputWithContext(ctx context.Context) SystemFortisandboxOutput
}

func (*SystemFortisandbox) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFortisandbox)(nil))
}

func (i *SystemFortisandbox) ToSystemFortisandboxOutput() SystemFortisandboxOutput {
	return i.ToSystemFortisandboxOutputWithContext(context.Background())
}

func (i *SystemFortisandbox) ToSystemFortisandboxOutputWithContext(ctx context.Context) SystemFortisandboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortisandboxOutput)
}

func (i *SystemFortisandbox) ToSystemFortisandboxPtrOutput() SystemFortisandboxPtrOutput {
	return i.ToSystemFortisandboxPtrOutputWithContext(context.Background())
}

func (i *SystemFortisandbox) ToSystemFortisandboxPtrOutputWithContext(ctx context.Context) SystemFortisandboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortisandboxPtrOutput)
}

type SystemFortisandboxPtrInput interface {
	pulumi.Input

	ToSystemFortisandboxPtrOutput() SystemFortisandboxPtrOutput
	ToSystemFortisandboxPtrOutputWithContext(ctx context.Context) SystemFortisandboxPtrOutput
}

type systemFortisandboxPtrType SystemFortisandboxArgs

func (*systemFortisandboxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortisandbox)(nil))
}

func (i *systemFortisandboxPtrType) ToSystemFortisandboxPtrOutput() SystemFortisandboxPtrOutput {
	return i.ToSystemFortisandboxPtrOutputWithContext(context.Background())
}

func (i *systemFortisandboxPtrType) ToSystemFortisandboxPtrOutputWithContext(ctx context.Context) SystemFortisandboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortisandboxPtrOutput)
}

// SystemFortisandboxArrayInput is an input type that accepts SystemFortisandboxArray and SystemFortisandboxArrayOutput values.
// You can construct a concrete instance of `SystemFortisandboxArrayInput` via:
//
//          SystemFortisandboxArray{ SystemFortisandboxArgs{...} }
type SystemFortisandboxArrayInput interface {
	pulumi.Input

	ToSystemFortisandboxArrayOutput() SystemFortisandboxArrayOutput
	ToSystemFortisandboxArrayOutputWithContext(context.Context) SystemFortisandboxArrayOutput
}

type SystemFortisandboxArray []SystemFortisandboxInput

func (SystemFortisandboxArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemFortisandbox)(nil))
}

func (i SystemFortisandboxArray) ToSystemFortisandboxArrayOutput() SystemFortisandboxArrayOutput {
	return i.ToSystemFortisandboxArrayOutputWithContext(context.Background())
}

func (i SystemFortisandboxArray) ToSystemFortisandboxArrayOutputWithContext(ctx context.Context) SystemFortisandboxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortisandboxArrayOutput)
}

// SystemFortisandboxMapInput is an input type that accepts SystemFortisandboxMap and SystemFortisandboxMapOutput values.
// You can construct a concrete instance of `SystemFortisandboxMapInput` via:
//
//          SystemFortisandboxMap{ "key": SystemFortisandboxArgs{...} }
type SystemFortisandboxMapInput interface {
	pulumi.Input

	ToSystemFortisandboxMapOutput() SystemFortisandboxMapOutput
	ToSystemFortisandboxMapOutputWithContext(context.Context) SystemFortisandboxMapOutput
}

type SystemFortisandboxMap map[string]SystemFortisandboxInput

func (SystemFortisandboxMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemFortisandbox)(nil))
}

func (i SystemFortisandboxMap) ToSystemFortisandboxMapOutput() SystemFortisandboxMapOutput {
	return i.ToSystemFortisandboxMapOutputWithContext(context.Background())
}

func (i SystemFortisandboxMap) ToSystemFortisandboxMapOutputWithContext(ctx context.Context) SystemFortisandboxMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFortisandboxMapOutput)
}

type SystemFortisandboxOutput struct {
	*pulumi.OutputState
}

func (SystemFortisandboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemFortisandbox)(nil))
}

func (o SystemFortisandboxOutput) ToSystemFortisandboxOutput() SystemFortisandboxOutput {
	return o
}

func (o SystemFortisandboxOutput) ToSystemFortisandboxOutputWithContext(ctx context.Context) SystemFortisandboxOutput {
	return o
}

func (o SystemFortisandboxOutput) ToSystemFortisandboxPtrOutput() SystemFortisandboxPtrOutput {
	return o.ToSystemFortisandboxPtrOutputWithContext(context.Background())
}

func (o SystemFortisandboxOutput) ToSystemFortisandboxPtrOutputWithContext(ctx context.Context) SystemFortisandboxPtrOutput {
	return o.ApplyT(func(v SystemFortisandbox) *SystemFortisandbox {
		return &v
	}).(SystemFortisandboxPtrOutput)
}

type SystemFortisandboxPtrOutput struct {
	*pulumi.OutputState
}

func (SystemFortisandboxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFortisandbox)(nil))
}

func (o SystemFortisandboxPtrOutput) ToSystemFortisandboxPtrOutput() SystemFortisandboxPtrOutput {
	return o
}

func (o SystemFortisandboxPtrOutput) ToSystemFortisandboxPtrOutputWithContext(ctx context.Context) SystemFortisandboxPtrOutput {
	return o
}

type SystemFortisandboxArrayOutput struct{ *pulumi.OutputState }

func (SystemFortisandboxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemFortisandbox)(nil))
}

func (o SystemFortisandboxArrayOutput) ToSystemFortisandboxArrayOutput() SystemFortisandboxArrayOutput {
	return o
}

func (o SystemFortisandboxArrayOutput) ToSystemFortisandboxArrayOutputWithContext(ctx context.Context) SystemFortisandboxArrayOutput {
	return o
}

func (o SystemFortisandboxArrayOutput) Index(i pulumi.IntInput) SystemFortisandboxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemFortisandbox {
		return vs[0].([]SystemFortisandbox)[vs[1].(int)]
	}).(SystemFortisandboxOutput)
}

type SystemFortisandboxMapOutput struct{ *pulumi.OutputState }

func (SystemFortisandboxMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemFortisandbox)(nil))
}

func (o SystemFortisandboxMapOutput) ToSystemFortisandboxMapOutput() SystemFortisandboxMapOutput {
	return o
}

func (o SystemFortisandboxMapOutput) ToSystemFortisandboxMapOutputWithContext(ctx context.Context) SystemFortisandboxMapOutput {
	return o
}

func (o SystemFortisandboxMapOutput) MapIndex(k pulumi.StringInput) SystemFortisandboxOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemFortisandbox {
		return vs[0].(map[string]SystemFortisandbox)[vs[1].(string)]
	}).(SystemFortisandboxOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemFortisandboxOutput{})
	pulumi.RegisterOutputType(SystemFortisandboxPtrOutput{})
	pulumi.RegisterOutputType(SystemFortisandboxArrayOutput{})
	pulumi.RegisterOutputType(SystemFortisandboxMapOutput{})
}
