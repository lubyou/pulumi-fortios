// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiGuard Web Filter administrative overrides.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWebfilterOverride(ctx, "trname", &fortios.WebfilterOverrideArgs{
// 			Expires:    pulumi.String("2021/03/16 19:18:25"),
// 			Fosid:      pulumi.Int(1),
// 			Ip:         pulumi.String("69.101.119.0"),
// 			Ip6:        pulumi.String("4565:7700::"),
// 			NewProfile: pulumi.String("monitor-all"),
// 			OldProfile: pulumi.String("default"),
// 			Scope:      pulumi.String("user"),
// 			Status:     pulumi.String("disable"),
// 			User:       pulumi.String("Eew"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Webfilter Override can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/webfilterOverride:WebfilterOverride labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WebfilterOverride struct {
	pulumi.CustomResourceState

	// Override expiration date and time, from 5 minutes to 365 from now (format: yyyy/mm/dd hh:mm:ss).
	Expires pulumi.StringOutput `pulumi:"expires"`
	// Override rule ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Initiating user of override (read-only setting).
	Initiator pulumi.StringOutput `pulumi:"initiator"`
	// IPv4 address which the override applies.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// IPv6 address which the override applies.
	Ip6 pulumi.StringOutput `pulumi:"ip6"`
	// Name of the new web filter profile used by the override.
	NewProfile pulumi.StringOutput `pulumi:"newProfile"`
	// Name of the web filter profile which the override applies.
	OldProfile pulumi.StringOutput `pulumi:"oldProfile"`
	// Override either the specific user, user group, IPv4 address, or IPv6 address. Valid values: `user`, `user-group`, `ip`, `ip6`.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// Enable/disable override rule. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Name of the user which the override applies.
	User pulumi.StringOutput `pulumi:"user"`
	// Specify the user group for which the override applies.
	UserGroup pulumi.StringOutput `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebfilterOverride registers a new resource with the given unique name, arguments, and options.
func NewWebfilterOverride(ctx *pulumi.Context,
	name string, args *WebfilterOverrideArgs, opts ...pulumi.ResourceOption) (*WebfilterOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Expires == nil {
		return nil, errors.New("invalid value for required argument 'Expires'")
	}
	if args.NewProfile == nil {
		return nil, errors.New("invalid value for required argument 'NewProfile'")
	}
	if args.OldProfile == nil {
		return nil, errors.New("invalid value for required argument 'OldProfile'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	var resource WebfilterOverride
	err := ctx.RegisterResource("fortios:index/webfilterOverride:WebfilterOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterOverride gets an existing WebfilterOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterOverrideState, opts ...pulumi.ResourceOption) (*WebfilterOverride, error) {
	var resource WebfilterOverride
	err := ctx.ReadResource("fortios:index/webfilterOverride:WebfilterOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterOverride resources.
type webfilterOverrideState struct {
	// Override expiration date and time, from 5 minutes to 365 from now (format: yyyy/mm/dd hh:mm:ss).
	Expires *string `pulumi:"expires"`
	// Override rule ID.
	Fosid *int `pulumi:"fosid"`
	// Initiating user of override (read-only setting).
	Initiator *string `pulumi:"initiator"`
	// IPv4 address which the override applies.
	Ip *string `pulumi:"ip"`
	// IPv6 address which the override applies.
	Ip6 *string `pulumi:"ip6"`
	// Name of the new web filter profile used by the override.
	NewProfile *string `pulumi:"newProfile"`
	// Name of the web filter profile which the override applies.
	OldProfile *string `pulumi:"oldProfile"`
	// Override either the specific user, user group, IPv4 address, or IPv6 address. Valid values: `user`, `user-group`, `ip`, `ip6`.
	Scope *string `pulumi:"scope"`
	// Enable/disable override rule. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Name of the user which the override applies.
	User *string `pulumi:"user"`
	// Specify the user group for which the override applies.
	UserGroup *string `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WebfilterOverrideState struct {
	// Override expiration date and time, from 5 minutes to 365 from now (format: yyyy/mm/dd hh:mm:ss).
	Expires pulumi.StringPtrInput
	// Override rule ID.
	Fosid pulumi.IntPtrInput
	// Initiating user of override (read-only setting).
	Initiator pulumi.StringPtrInput
	// IPv4 address which the override applies.
	Ip pulumi.StringPtrInput
	// IPv6 address which the override applies.
	Ip6 pulumi.StringPtrInput
	// Name of the new web filter profile used by the override.
	NewProfile pulumi.StringPtrInput
	// Name of the web filter profile which the override applies.
	OldProfile pulumi.StringPtrInput
	// Override either the specific user, user group, IPv4 address, or IPv6 address. Valid values: `user`, `user-group`, `ip`, `ip6`.
	Scope pulumi.StringPtrInput
	// Enable/disable override rule. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Name of the user which the override applies.
	User pulumi.StringPtrInput
	// Specify the user group for which the override applies.
	UserGroup pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterOverrideState)(nil)).Elem()
}

type webfilterOverrideArgs struct {
	// Override expiration date and time, from 5 minutes to 365 from now (format: yyyy/mm/dd hh:mm:ss).
	Expires string `pulumi:"expires"`
	// Override rule ID.
	Fosid *int `pulumi:"fosid"`
	// Initiating user of override (read-only setting).
	Initiator *string `pulumi:"initiator"`
	// IPv4 address which the override applies.
	Ip *string `pulumi:"ip"`
	// IPv6 address which the override applies.
	Ip6 *string `pulumi:"ip6"`
	// Name of the new web filter profile used by the override.
	NewProfile string `pulumi:"newProfile"`
	// Name of the web filter profile which the override applies.
	OldProfile string `pulumi:"oldProfile"`
	// Override either the specific user, user group, IPv4 address, or IPv6 address. Valid values: `user`, `user-group`, `ip`, `ip6`.
	Scope *string `pulumi:"scope"`
	// Enable/disable override rule. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Name of the user which the override applies.
	User string `pulumi:"user"`
	// Specify the user group for which the override applies.
	UserGroup *string `pulumi:"userGroup"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebfilterOverride resource.
type WebfilterOverrideArgs struct {
	// Override expiration date and time, from 5 minutes to 365 from now (format: yyyy/mm/dd hh:mm:ss).
	Expires pulumi.StringInput
	// Override rule ID.
	Fosid pulumi.IntPtrInput
	// Initiating user of override (read-only setting).
	Initiator pulumi.StringPtrInput
	// IPv4 address which the override applies.
	Ip pulumi.StringPtrInput
	// IPv6 address which the override applies.
	Ip6 pulumi.StringPtrInput
	// Name of the new web filter profile used by the override.
	NewProfile pulumi.StringInput
	// Name of the web filter profile which the override applies.
	OldProfile pulumi.StringInput
	// Override either the specific user, user group, IPv4 address, or IPv6 address. Valid values: `user`, `user-group`, `ip`, `ip6`.
	Scope pulumi.StringPtrInput
	// Enable/disable override rule. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Name of the user which the override applies.
	User pulumi.StringInput
	// Specify the user group for which the override applies.
	UserGroup pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterOverrideArgs)(nil)).Elem()
}

type WebfilterOverrideInput interface {
	pulumi.Input

	ToWebfilterOverrideOutput() WebfilterOverrideOutput
	ToWebfilterOverrideOutputWithContext(ctx context.Context) WebfilterOverrideOutput
}

func (*WebfilterOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterOverride)(nil))
}

func (i *WebfilterOverride) ToWebfilterOverrideOutput() WebfilterOverrideOutput {
	return i.ToWebfilterOverrideOutputWithContext(context.Background())
}

func (i *WebfilterOverride) ToWebfilterOverrideOutputWithContext(ctx context.Context) WebfilterOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterOverrideOutput)
}

func (i *WebfilterOverride) ToWebfilterOverridePtrOutput() WebfilterOverridePtrOutput {
	return i.ToWebfilterOverridePtrOutputWithContext(context.Background())
}

func (i *WebfilterOverride) ToWebfilterOverridePtrOutputWithContext(ctx context.Context) WebfilterOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterOverridePtrOutput)
}

type WebfilterOverridePtrInput interface {
	pulumi.Input

	ToWebfilterOverridePtrOutput() WebfilterOverridePtrOutput
	ToWebfilterOverridePtrOutputWithContext(ctx context.Context) WebfilterOverridePtrOutput
}

type webfilterOverridePtrType WebfilterOverrideArgs

func (*webfilterOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterOverride)(nil))
}

func (i *webfilterOverridePtrType) ToWebfilterOverridePtrOutput() WebfilterOverridePtrOutput {
	return i.ToWebfilterOverridePtrOutputWithContext(context.Background())
}

func (i *webfilterOverridePtrType) ToWebfilterOverridePtrOutputWithContext(ctx context.Context) WebfilterOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterOverridePtrOutput)
}

// WebfilterOverrideArrayInput is an input type that accepts WebfilterOverrideArray and WebfilterOverrideArrayOutput values.
// You can construct a concrete instance of `WebfilterOverrideArrayInput` via:
//
//          WebfilterOverrideArray{ WebfilterOverrideArgs{...} }
type WebfilterOverrideArrayInput interface {
	pulumi.Input

	ToWebfilterOverrideArrayOutput() WebfilterOverrideArrayOutput
	ToWebfilterOverrideArrayOutputWithContext(context.Context) WebfilterOverrideArrayOutput
}

type WebfilterOverrideArray []WebfilterOverrideInput

func (WebfilterOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WebfilterOverride)(nil))
}

func (i WebfilterOverrideArray) ToWebfilterOverrideArrayOutput() WebfilterOverrideArrayOutput {
	return i.ToWebfilterOverrideArrayOutputWithContext(context.Background())
}

func (i WebfilterOverrideArray) ToWebfilterOverrideArrayOutputWithContext(ctx context.Context) WebfilterOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterOverrideArrayOutput)
}

// WebfilterOverrideMapInput is an input type that accepts WebfilterOverrideMap and WebfilterOverrideMapOutput values.
// You can construct a concrete instance of `WebfilterOverrideMapInput` via:
//
//          WebfilterOverrideMap{ "key": WebfilterOverrideArgs{...} }
type WebfilterOverrideMapInput interface {
	pulumi.Input

	ToWebfilterOverrideMapOutput() WebfilterOverrideMapOutput
	ToWebfilterOverrideMapOutputWithContext(context.Context) WebfilterOverrideMapOutput
}

type WebfilterOverrideMap map[string]WebfilterOverrideInput

func (WebfilterOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WebfilterOverride)(nil))
}

func (i WebfilterOverrideMap) ToWebfilterOverrideMapOutput() WebfilterOverrideMapOutput {
	return i.ToWebfilterOverrideMapOutputWithContext(context.Background())
}

func (i WebfilterOverrideMap) ToWebfilterOverrideMapOutputWithContext(ctx context.Context) WebfilterOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterOverrideMapOutput)
}

type WebfilterOverrideOutput struct {
	*pulumi.OutputState
}

func (WebfilterOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterOverride)(nil))
}

func (o WebfilterOverrideOutput) ToWebfilterOverrideOutput() WebfilterOverrideOutput {
	return o
}

func (o WebfilterOverrideOutput) ToWebfilterOverrideOutputWithContext(ctx context.Context) WebfilterOverrideOutput {
	return o
}

func (o WebfilterOverrideOutput) ToWebfilterOverridePtrOutput() WebfilterOverridePtrOutput {
	return o.ToWebfilterOverridePtrOutputWithContext(context.Background())
}

func (o WebfilterOverrideOutput) ToWebfilterOverridePtrOutputWithContext(ctx context.Context) WebfilterOverridePtrOutput {
	return o.ApplyT(func(v WebfilterOverride) *WebfilterOverride {
		return &v
	}).(WebfilterOverridePtrOutput)
}

type WebfilterOverridePtrOutput struct {
	*pulumi.OutputState
}

func (WebfilterOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterOverride)(nil))
}

func (o WebfilterOverridePtrOutput) ToWebfilterOverridePtrOutput() WebfilterOverridePtrOutput {
	return o
}

func (o WebfilterOverridePtrOutput) ToWebfilterOverridePtrOutputWithContext(ctx context.Context) WebfilterOverridePtrOutput {
	return o
}

type WebfilterOverrideArrayOutput struct{ *pulumi.OutputState }

func (WebfilterOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterOverride)(nil))
}

func (o WebfilterOverrideArrayOutput) ToWebfilterOverrideArrayOutput() WebfilterOverrideArrayOutput {
	return o
}

func (o WebfilterOverrideArrayOutput) ToWebfilterOverrideArrayOutputWithContext(ctx context.Context) WebfilterOverrideArrayOutput {
	return o
}

func (o WebfilterOverrideArrayOutput) Index(i pulumi.IntInput) WebfilterOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterOverride {
		return vs[0].([]WebfilterOverride)[vs[1].(int)]
	}).(WebfilterOverrideOutput)
}

type WebfilterOverrideMapOutput struct{ *pulumi.OutputState }

func (WebfilterOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebfilterOverride)(nil))
}

func (o WebfilterOverrideMapOutput) ToWebfilterOverrideMapOutput() WebfilterOverrideMapOutput {
	return o
}

func (o WebfilterOverrideMapOutput) ToWebfilterOverrideMapOutputWithContext(ctx context.Context) WebfilterOverrideMapOutput {
	return o
}

func (o WebfilterOverrideMapOutput) MapIndex(k pulumi.StringInput) WebfilterOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WebfilterOverride {
		return vs[0].(map[string]WebfilterOverride)[vs[1].(string)]
	}).(WebfilterOverrideOutput)
}

func init() {
	pulumi.RegisterOutputType(WebfilterOverrideOutput{})
	pulumi.RegisterOutputType(WebfilterOverridePtrOutput{})
	pulumi.RegisterOutputType(WebfilterOverrideArrayOutput{})
	pulumi.RegisterOutputType(WebfilterOverrideMapOutput{})
}
