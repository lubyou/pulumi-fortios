// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallProxyAddress struct {
	pulumi.CustomResourceState

	Applications        FirewallProxyAddressApplicationArrayOutput `pulumi:"applications"`
	CaseSensitivity     pulumi.StringOutput                        `pulumi:"caseSensitivity"`
	Categories          FirewallProxyAddressCategoryArrayOutput    `pulumi:"categories"`
	Color               pulumi.IntOutput                           `pulumi:"color"`
	Comment             pulumi.StringPtrOutput                     `pulumi:"comment"`
	DynamicSortSubtable pulumi.StringPtrOutput                     `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                     `pulumi:"getAllTables"`
	Header              pulumi.StringOutput                        `pulumi:"header"`
	HeaderGroups        FirewallProxyAddressHeaderGroupArrayOutput `pulumi:"headerGroups"`
	HeaderName          pulumi.StringOutput                        `pulumi:"headerName"`
	Host                pulumi.StringOutput                        `pulumi:"host"`
	HostRegex           pulumi.StringOutput                        `pulumi:"hostRegex"`
	Method              pulumi.StringOutput                        `pulumi:"method"`
	Name                pulumi.StringOutput                        `pulumi:"name"`
	Path                pulumi.StringOutput                        `pulumi:"path"`
	Query               pulumi.StringOutput                        `pulumi:"query"`
	Referrer            pulumi.StringOutput                        `pulumi:"referrer"`
	Taggings            FirewallProxyAddressTaggingArrayOutput     `pulumi:"taggings"`
	Type                pulumi.StringOutput                        `pulumi:"type"`
	Ua                  pulumi.StringOutput                        `pulumi:"ua"`
	UaMaxVer            pulumi.StringOutput                        `pulumi:"uaMaxVer"`
	UaMinVer            pulumi.StringOutput                        `pulumi:"uaMinVer"`
	Uuid                pulumi.StringOutput                        `pulumi:"uuid"`
	Vdomparam           pulumi.StringPtrOutput                     `pulumi:"vdomparam"`
	Visibility          pulumi.StringOutput                        `pulumi:"visibility"`
}

// NewFirewallProxyAddress registers a new resource with the given unique name, arguments, and options.
func NewFirewallProxyAddress(ctx *pulumi.Context,
	name string, args *FirewallProxyAddressArgs, opts ...pulumi.ResourceOption) (*FirewallProxyAddress, error) {
	if args == nil {
		args = &FirewallProxyAddressArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallProxyAddress
	err := ctx.RegisterResource("fortios:index/firewallProxyAddress:FirewallProxyAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallProxyAddress gets an existing FirewallProxyAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallProxyAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallProxyAddressState, opts ...pulumi.ResourceOption) (*FirewallProxyAddress, error) {
	var resource FirewallProxyAddress
	err := ctx.ReadResource("fortios:index/firewallProxyAddress:FirewallProxyAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallProxyAddress resources.
type firewallProxyAddressState struct {
	Applications        []FirewallProxyAddressApplication `pulumi:"applications"`
	CaseSensitivity     *string                           `pulumi:"caseSensitivity"`
	Categories          []FirewallProxyAddressCategory    `pulumi:"categories"`
	Color               *int                              `pulumi:"color"`
	Comment             *string                           `pulumi:"comment"`
	DynamicSortSubtable *string                           `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                           `pulumi:"getAllTables"`
	Header              *string                           `pulumi:"header"`
	HeaderGroups        []FirewallProxyAddressHeaderGroup `pulumi:"headerGroups"`
	HeaderName          *string                           `pulumi:"headerName"`
	Host                *string                           `pulumi:"host"`
	HostRegex           *string                           `pulumi:"hostRegex"`
	Method              *string                           `pulumi:"method"`
	Name                *string                           `pulumi:"name"`
	Path                *string                           `pulumi:"path"`
	Query               *string                           `pulumi:"query"`
	Referrer            *string                           `pulumi:"referrer"`
	Taggings            []FirewallProxyAddressTagging     `pulumi:"taggings"`
	Type                *string                           `pulumi:"type"`
	Ua                  *string                           `pulumi:"ua"`
	UaMaxVer            *string                           `pulumi:"uaMaxVer"`
	UaMinVer            *string                           `pulumi:"uaMinVer"`
	Uuid                *string                           `pulumi:"uuid"`
	Vdomparam           *string                           `pulumi:"vdomparam"`
	Visibility          *string                           `pulumi:"visibility"`
}

type FirewallProxyAddressState struct {
	Applications        FirewallProxyAddressApplicationArrayInput
	CaseSensitivity     pulumi.StringPtrInput
	Categories          FirewallProxyAddressCategoryArrayInput
	Color               pulumi.IntPtrInput
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Header              pulumi.StringPtrInput
	HeaderGroups        FirewallProxyAddressHeaderGroupArrayInput
	HeaderName          pulumi.StringPtrInput
	Host                pulumi.StringPtrInput
	HostRegex           pulumi.StringPtrInput
	Method              pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Path                pulumi.StringPtrInput
	Query               pulumi.StringPtrInput
	Referrer            pulumi.StringPtrInput
	Taggings            FirewallProxyAddressTaggingArrayInput
	Type                pulumi.StringPtrInput
	Ua                  pulumi.StringPtrInput
	UaMaxVer            pulumi.StringPtrInput
	UaMinVer            pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Visibility          pulumi.StringPtrInput
}

func (FirewallProxyAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProxyAddressState)(nil)).Elem()
}

type firewallProxyAddressArgs struct {
	Applications        []FirewallProxyAddressApplication `pulumi:"applications"`
	CaseSensitivity     *string                           `pulumi:"caseSensitivity"`
	Categories          []FirewallProxyAddressCategory    `pulumi:"categories"`
	Color               *int                              `pulumi:"color"`
	Comment             *string                           `pulumi:"comment"`
	DynamicSortSubtable *string                           `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                           `pulumi:"getAllTables"`
	Header              *string                           `pulumi:"header"`
	HeaderGroups        []FirewallProxyAddressHeaderGroup `pulumi:"headerGroups"`
	HeaderName          *string                           `pulumi:"headerName"`
	Host                *string                           `pulumi:"host"`
	HostRegex           *string                           `pulumi:"hostRegex"`
	Method              *string                           `pulumi:"method"`
	Name                *string                           `pulumi:"name"`
	Path                *string                           `pulumi:"path"`
	Query               *string                           `pulumi:"query"`
	Referrer            *string                           `pulumi:"referrer"`
	Taggings            []FirewallProxyAddressTagging     `pulumi:"taggings"`
	Type                *string                           `pulumi:"type"`
	Ua                  *string                           `pulumi:"ua"`
	UaMaxVer            *string                           `pulumi:"uaMaxVer"`
	UaMinVer            *string                           `pulumi:"uaMinVer"`
	Uuid                *string                           `pulumi:"uuid"`
	Vdomparam           *string                           `pulumi:"vdomparam"`
	Visibility          *string                           `pulumi:"visibility"`
}

// The set of arguments for constructing a FirewallProxyAddress resource.
type FirewallProxyAddressArgs struct {
	Applications        FirewallProxyAddressApplicationArrayInput
	CaseSensitivity     pulumi.StringPtrInput
	Categories          FirewallProxyAddressCategoryArrayInput
	Color               pulumi.IntPtrInput
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Header              pulumi.StringPtrInput
	HeaderGroups        FirewallProxyAddressHeaderGroupArrayInput
	HeaderName          pulumi.StringPtrInput
	Host                pulumi.StringPtrInput
	HostRegex           pulumi.StringPtrInput
	Method              pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Path                pulumi.StringPtrInput
	Query               pulumi.StringPtrInput
	Referrer            pulumi.StringPtrInput
	Taggings            FirewallProxyAddressTaggingArrayInput
	Type                pulumi.StringPtrInput
	Ua                  pulumi.StringPtrInput
	UaMaxVer            pulumi.StringPtrInput
	UaMinVer            pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Visibility          pulumi.StringPtrInput
}

func (FirewallProxyAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProxyAddressArgs)(nil)).Elem()
}

type FirewallProxyAddressInput interface {
	pulumi.Input

	ToFirewallProxyAddressOutput() FirewallProxyAddressOutput
	ToFirewallProxyAddressOutputWithContext(ctx context.Context) FirewallProxyAddressOutput
}

func (*FirewallProxyAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProxyAddress)(nil)).Elem()
}

func (i *FirewallProxyAddress) ToFirewallProxyAddressOutput() FirewallProxyAddressOutput {
	return i.ToFirewallProxyAddressOutputWithContext(context.Background())
}

func (i *FirewallProxyAddress) ToFirewallProxyAddressOutputWithContext(ctx context.Context) FirewallProxyAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyAddressOutput)
}

func (i *FirewallProxyAddress) ToOutput(ctx context.Context) pulumix.Output[*FirewallProxyAddress] {
	return pulumix.Output[*FirewallProxyAddress]{
		OutputState: i.ToFirewallProxyAddressOutputWithContext(ctx).OutputState,
	}
}

// FirewallProxyAddressArrayInput is an input type that accepts FirewallProxyAddressArray and FirewallProxyAddressArrayOutput values.
// You can construct a concrete instance of `FirewallProxyAddressArrayInput` via:
//
//	FirewallProxyAddressArray{ FirewallProxyAddressArgs{...} }
type FirewallProxyAddressArrayInput interface {
	pulumi.Input

	ToFirewallProxyAddressArrayOutput() FirewallProxyAddressArrayOutput
	ToFirewallProxyAddressArrayOutputWithContext(context.Context) FirewallProxyAddressArrayOutput
}

type FirewallProxyAddressArray []FirewallProxyAddressInput

func (FirewallProxyAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProxyAddress)(nil)).Elem()
}

func (i FirewallProxyAddressArray) ToFirewallProxyAddressArrayOutput() FirewallProxyAddressArrayOutput {
	return i.ToFirewallProxyAddressArrayOutputWithContext(context.Background())
}

func (i FirewallProxyAddressArray) ToFirewallProxyAddressArrayOutputWithContext(ctx context.Context) FirewallProxyAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyAddressArrayOutput)
}

func (i FirewallProxyAddressArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallProxyAddress] {
	return pulumix.Output[[]*FirewallProxyAddress]{
		OutputState: i.ToFirewallProxyAddressArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallProxyAddressMapInput is an input type that accepts FirewallProxyAddressMap and FirewallProxyAddressMapOutput values.
// You can construct a concrete instance of `FirewallProxyAddressMapInput` via:
//
//	FirewallProxyAddressMap{ "key": FirewallProxyAddressArgs{...} }
type FirewallProxyAddressMapInput interface {
	pulumi.Input

	ToFirewallProxyAddressMapOutput() FirewallProxyAddressMapOutput
	ToFirewallProxyAddressMapOutputWithContext(context.Context) FirewallProxyAddressMapOutput
}

type FirewallProxyAddressMap map[string]FirewallProxyAddressInput

func (FirewallProxyAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProxyAddress)(nil)).Elem()
}

func (i FirewallProxyAddressMap) ToFirewallProxyAddressMapOutput() FirewallProxyAddressMapOutput {
	return i.ToFirewallProxyAddressMapOutputWithContext(context.Background())
}

func (i FirewallProxyAddressMap) ToFirewallProxyAddressMapOutputWithContext(ctx context.Context) FirewallProxyAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProxyAddressMapOutput)
}

func (i FirewallProxyAddressMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallProxyAddress] {
	return pulumix.Output[map[string]*FirewallProxyAddress]{
		OutputState: i.ToFirewallProxyAddressMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallProxyAddressOutput struct{ *pulumi.OutputState }

func (FirewallProxyAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProxyAddress)(nil)).Elem()
}

func (o FirewallProxyAddressOutput) ToFirewallProxyAddressOutput() FirewallProxyAddressOutput {
	return o
}

func (o FirewallProxyAddressOutput) ToFirewallProxyAddressOutputWithContext(ctx context.Context) FirewallProxyAddressOutput {
	return o
}

func (o FirewallProxyAddressOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallProxyAddress] {
	return pulumix.Output[*FirewallProxyAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallProxyAddressOutput) Applications() FirewallProxyAddressApplicationArrayOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) FirewallProxyAddressApplicationArrayOutput { return v.Applications }).(FirewallProxyAddressApplicationArrayOutput)
}

func (o FirewallProxyAddressOutput) CaseSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.CaseSensitivity }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Categories() FirewallProxyAddressCategoryArrayOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) FirewallProxyAddressCategoryArrayOutput { return v.Categories }).(FirewallProxyAddressCategoryArrayOutput)
}

func (o FirewallProxyAddressOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o FirewallProxyAddressOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FirewallProxyAddressOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallProxyAddressOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallProxyAddressOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) HeaderGroups() FirewallProxyAddressHeaderGroupArrayOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) FirewallProxyAddressHeaderGroupArrayOutput { return v.HeaderGroups }).(FirewallProxyAddressHeaderGroupArrayOutput)
}

func (o FirewallProxyAddressOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.HeaderName }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) HostRegex() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.HostRegex }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Query }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Referrer() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Referrer }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Taggings() FirewallProxyAddressTaggingArrayOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) FirewallProxyAddressTaggingArrayOutput { return v.Taggings }).(FirewallProxyAddressTaggingArrayOutput)
}

func (o FirewallProxyAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Ua() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Ua }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) UaMaxVer() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.UaMaxVer }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) UaMinVer() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.UaMinVer }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o FirewallProxyAddressOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o FirewallProxyAddressOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallProxyAddress) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type FirewallProxyAddressArrayOutput struct{ *pulumi.OutputState }

func (FirewallProxyAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProxyAddress)(nil)).Elem()
}

func (o FirewallProxyAddressArrayOutput) ToFirewallProxyAddressArrayOutput() FirewallProxyAddressArrayOutput {
	return o
}

func (o FirewallProxyAddressArrayOutput) ToFirewallProxyAddressArrayOutputWithContext(ctx context.Context) FirewallProxyAddressArrayOutput {
	return o
}

func (o FirewallProxyAddressArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallProxyAddress] {
	return pulumix.Output[[]*FirewallProxyAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallProxyAddressArrayOutput) Index(i pulumi.IntInput) FirewallProxyAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallProxyAddress {
		return vs[0].([]*FirewallProxyAddress)[vs[1].(int)]
	}).(FirewallProxyAddressOutput)
}

type FirewallProxyAddressMapOutput struct{ *pulumi.OutputState }

func (FirewallProxyAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProxyAddress)(nil)).Elem()
}

func (o FirewallProxyAddressMapOutput) ToFirewallProxyAddressMapOutput() FirewallProxyAddressMapOutput {
	return o
}

func (o FirewallProxyAddressMapOutput) ToFirewallProxyAddressMapOutputWithContext(ctx context.Context) FirewallProxyAddressMapOutput {
	return o
}

func (o FirewallProxyAddressMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallProxyAddress] {
	return pulumix.Output[map[string]*FirewallProxyAddress]{
		OutputState: o.OutputState,
	}
}

func (o FirewallProxyAddressMapOutput) MapIndex(k pulumi.StringInput) FirewallProxyAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallProxyAddress {
		return vs[0].(map[string]*FirewallProxyAddress)[vs[1].(string)]
	}).(FirewallProxyAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyAddressInput)(nil)).Elem(), &FirewallProxyAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyAddressArrayInput)(nil)).Elem(), FirewallProxyAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProxyAddressMapInput)(nil)).Elem(), FirewallProxyAddressMap{})
	pulumi.RegisterOutputType(FirewallProxyAddressOutput{})
	pulumi.RegisterOutputType(FirewallProxyAddressArrayOutput{})
	pulumi.RegisterOutputType(FirewallProxyAddressMapOutput{})
}
