// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UserLocal struct {
	pulumi.CustomResourceState

	AuthConcurrentOverride    pulumi.StringOutput    `pulumi:"authConcurrentOverride"`
	AuthConcurrentValue       pulumi.IntOutput       `pulumi:"authConcurrentValue"`
	Authtimeout               pulumi.IntOutput       `pulumi:"authtimeout"`
	EmailTo                   pulumi.StringOutput    `pulumi:"emailTo"`
	Fortitoken                pulumi.StringOutput    `pulumi:"fortitoken"`
	Fosid                     pulumi.IntOutput       `pulumi:"fosid"`
	LdapServer                pulumi.StringOutput    `pulumi:"ldapServer"`
	Name                      pulumi.StringOutput    `pulumi:"name"`
	Passwd                    pulumi.StringPtrOutput `pulumi:"passwd"`
	PasswdPolicy              pulumi.StringOutput    `pulumi:"passwdPolicy"`
	PasswdTime                pulumi.StringOutput    `pulumi:"passwdTime"`
	PpkIdentity               pulumi.StringOutput    `pulumi:"ppkIdentity"`
	PpkSecret                 pulumi.StringPtrOutput `pulumi:"ppkSecret"`
	RadiusServer              pulumi.StringOutput    `pulumi:"radiusServer"`
	SmsCustomServer           pulumi.StringOutput    `pulumi:"smsCustomServer"`
	SmsPhone                  pulumi.StringOutput    `pulumi:"smsPhone"`
	SmsServer                 pulumi.StringOutput    `pulumi:"smsServer"`
	Status                    pulumi.StringOutput    `pulumi:"status"`
	TacacsServer              pulumi.StringOutput    `pulumi:"tacacsServer"`
	TwoFactor                 pulumi.StringOutput    `pulumi:"twoFactor"`
	TwoFactorAuthentication   pulumi.StringOutput    `pulumi:"twoFactorAuthentication"`
	TwoFactorNotification     pulumi.StringOutput    `pulumi:"twoFactorNotification"`
	Type                      pulumi.StringOutput    `pulumi:"type"`
	UsernameCaseInsensitivity pulumi.StringOutput    `pulumi:"usernameCaseInsensitivity"`
	UsernameCaseSensitivity   pulumi.StringOutput    `pulumi:"usernameCaseSensitivity"`
	UsernameSensitivity       pulumi.StringOutput    `pulumi:"usernameSensitivity"`
	Vdomparam                 pulumi.StringPtrOutput `pulumi:"vdomparam"`
	Workstation               pulumi.StringOutput    `pulumi:"workstation"`
}

// NewUserLocal registers a new resource with the given unique name, arguments, and options.
func NewUserLocal(ctx *pulumi.Context,
	name string, args *UserLocalArgs, opts ...pulumi.ResourceOption) (*UserLocal, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Passwd != nil {
		args.Passwd = pulumi.ToSecret(args.Passwd).(pulumi.StringPtrInput)
	}
	if args.PpkSecret != nil {
		args.PpkSecret = pulumi.ToSecret(args.PpkSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"passwd",
		"ppkSecret",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource UserLocal
	err := ctx.RegisterResource("fortios:index/userLocal:UserLocal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserLocal gets an existing UserLocal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserLocal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserLocalState, opts ...pulumi.ResourceOption) (*UserLocal, error) {
	var resource UserLocal
	err := ctx.ReadResource("fortios:index/userLocal:UserLocal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserLocal resources.
type userLocalState struct {
	AuthConcurrentOverride    *string `pulumi:"authConcurrentOverride"`
	AuthConcurrentValue       *int    `pulumi:"authConcurrentValue"`
	Authtimeout               *int    `pulumi:"authtimeout"`
	EmailTo                   *string `pulumi:"emailTo"`
	Fortitoken                *string `pulumi:"fortitoken"`
	Fosid                     *int    `pulumi:"fosid"`
	LdapServer                *string `pulumi:"ldapServer"`
	Name                      *string `pulumi:"name"`
	Passwd                    *string `pulumi:"passwd"`
	PasswdPolicy              *string `pulumi:"passwdPolicy"`
	PasswdTime                *string `pulumi:"passwdTime"`
	PpkIdentity               *string `pulumi:"ppkIdentity"`
	PpkSecret                 *string `pulumi:"ppkSecret"`
	RadiusServer              *string `pulumi:"radiusServer"`
	SmsCustomServer           *string `pulumi:"smsCustomServer"`
	SmsPhone                  *string `pulumi:"smsPhone"`
	SmsServer                 *string `pulumi:"smsServer"`
	Status                    *string `pulumi:"status"`
	TacacsServer              *string `pulumi:"tacacsServer"`
	TwoFactor                 *string `pulumi:"twoFactor"`
	TwoFactorAuthentication   *string `pulumi:"twoFactorAuthentication"`
	TwoFactorNotification     *string `pulumi:"twoFactorNotification"`
	Type                      *string `pulumi:"type"`
	UsernameCaseInsensitivity *string `pulumi:"usernameCaseInsensitivity"`
	UsernameCaseSensitivity   *string `pulumi:"usernameCaseSensitivity"`
	UsernameSensitivity       *string `pulumi:"usernameSensitivity"`
	Vdomparam                 *string `pulumi:"vdomparam"`
	Workstation               *string `pulumi:"workstation"`
}

type UserLocalState struct {
	AuthConcurrentOverride    pulumi.StringPtrInput
	AuthConcurrentValue       pulumi.IntPtrInput
	Authtimeout               pulumi.IntPtrInput
	EmailTo                   pulumi.StringPtrInput
	Fortitoken                pulumi.StringPtrInput
	Fosid                     pulumi.IntPtrInput
	LdapServer                pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	Passwd                    pulumi.StringPtrInput
	PasswdPolicy              pulumi.StringPtrInput
	PasswdTime                pulumi.StringPtrInput
	PpkIdentity               pulumi.StringPtrInput
	PpkSecret                 pulumi.StringPtrInput
	RadiusServer              pulumi.StringPtrInput
	SmsCustomServer           pulumi.StringPtrInput
	SmsPhone                  pulumi.StringPtrInput
	SmsServer                 pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	TacacsServer              pulumi.StringPtrInput
	TwoFactor                 pulumi.StringPtrInput
	TwoFactorAuthentication   pulumi.StringPtrInput
	TwoFactorNotification     pulumi.StringPtrInput
	Type                      pulumi.StringPtrInput
	UsernameCaseInsensitivity pulumi.StringPtrInput
	UsernameCaseSensitivity   pulumi.StringPtrInput
	UsernameSensitivity       pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
	Workstation               pulumi.StringPtrInput
}

func (UserLocalState) ElementType() reflect.Type {
	return reflect.TypeOf((*userLocalState)(nil)).Elem()
}

type userLocalArgs struct {
	AuthConcurrentOverride    *string `pulumi:"authConcurrentOverride"`
	AuthConcurrentValue       *int    `pulumi:"authConcurrentValue"`
	Authtimeout               *int    `pulumi:"authtimeout"`
	EmailTo                   *string `pulumi:"emailTo"`
	Fortitoken                *string `pulumi:"fortitoken"`
	Fosid                     *int    `pulumi:"fosid"`
	LdapServer                *string `pulumi:"ldapServer"`
	Name                      *string `pulumi:"name"`
	Passwd                    *string `pulumi:"passwd"`
	PasswdPolicy              *string `pulumi:"passwdPolicy"`
	PasswdTime                *string `pulumi:"passwdTime"`
	PpkIdentity               *string `pulumi:"ppkIdentity"`
	PpkSecret                 *string `pulumi:"ppkSecret"`
	RadiusServer              *string `pulumi:"radiusServer"`
	SmsCustomServer           *string `pulumi:"smsCustomServer"`
	SmsPhone                  *string `pulumi:"smsPhone"`
	SmsServer                 *string `pulumi:"smsServer"`
	Status                    string  `pulumi:"status"`
	TacacsServer              *string `pulumi:"tacacsServer"`
	TwoFactor                 *string `pulumi:"twoFactor"`
	TwoFactorAuthentication   *string `pulumi:"twoFactorAuthentication"`
	TwoFactorNotification     *string `pulumi:"twoFactorNotification"`
	Type                      string  `pulumi:"type"`
	UsernameCaseInsensitivity *string `pulumi:"usernameCaseInsensitivity"`
	UsernameCaseSensitivity   *string `pulumi:"usernameCaseSensitivity"`
	UsernameSensitivity       *string `pulumi:"usernameSensitivity"`
	Vdomparam                 *string `pulumi:"vdomparam"`
	Workstation               *string `pulumi:"workstation"`
}

// The set of arguments for constructing a UserLocal resource.
type UserLocalArgs struct {
	AuthConcurrentOverride    pulumi.StringPtrInput
	AuthConcurrentValue       pulumi.IntPtrInput
	Authtimeout               pulumi.IntPtrInput
	EmailTo                   pulumi.StringPtrInput
	Fortitoken                pulumi.StringPtrInput
	Fosid                     pulumi.IntPtrInput
	LdapServer                pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	Passwd                    pulumi.StringPtrInput
	PasswdPolicy              pulumi.StringPtrInput
	PasswdTime                pulumi.StringPtrInput
	PpkIdentity               pulumi.StringPtrInput
	PpkSecret                 pulumi.StringPtrInput
	RadiusServer              pulumi.StringPtrInput
	SmsCustomServer           pulumi.StringPtrInput
	SmsPhone                  pulumi.StringPtrInput
	SmsServer                 pulumi.StringPtrInput
	Status                    pulumi.StringInput
	TacacsServer              pulumi.StringPtrInput
	TwoFactor                 pulumi.StringPtrInput
	TwoFactorAuthentication   pulumi.StringPtrInput
	TwoFactorNotification     pulumi.StringPtrInput
	Type                      pulumi.StringInput
	UsernameCaseInsensitivity pulumi.StringPtrInput
	UsernameCaseSensitivity   pulumi.StringPtrInput
	UsernameSensitivity       pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
	Workstation               pulumi.StringPtrInput
}

func (UserLocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userLocalArgs)(nil)).Elem()
}

type UserLocalInput interface {
	pulumi.Input

	ToUserLocalOutput() UserLocalOutput
	ToUserLocalOutputWithContext(ctx context.Context) UserLocalOutput
}

func (*UserLocal) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLocal)(nil)).Elem()
}

func (i *UserLocal) ToUserLocalOutput() UserLocalOutput {
	return i.ToUserLocalOutputWithContext(context.Background())
}

func (i *UserLocal) ToUserLocalOutputWithContext(ctx context.Context) UserLocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLocalOutput)
}

// UserLocalArrayInput is an input type that accepts UserLocalArray and UserLocalArrayOutput values.
// You can construct a concrete instance of `UserLocalArrayInput` via:
//
//	UserLocalArray{ UserLocalArgs{...} }
type UserLocalArrayInput interface {
	pulumi.Input

	ToUserLocalArrayOutput() UserLocalArrayOutput
	ToUserLocalArrayOutputWithContext(context.Context) UserLocalArrayOutput
}

type UserLocalArray []UserLocalInput

func (UserLocalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLocal)(nil)).Elem()
}

func (i UserLocalArray) ToUserLocalArrayOutput() UserLocalArrayOutput {
	return i.ToUserLocalArrayOutputWithContext(context.Background())
}

func (i UserLocalArray) ToUserLocalArrayOutputWithContext(ctx context.Context) UserLocalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLocalArrayOutput)
}

// UserLocalMapInput is an input type that accepts UserLocalMap and UserLocalMapOutput values.
// You can construct a concrete instance of `UserLocalMapInput` via:
//
//	UserLocalMap{ "key": UserLocalArgs{...} }
type UserLocalMapInput interface {
	pulumi.Input

	ToUserLocalMapOutput() UserLocalMapOutput
	ToUserLocalMapOutputWithContext(context.Context) UserLocalMapOutput
}

type UserLocalMap map[string]UserLocalInput

func (UserLocalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLocal)(nil)).Elem()
}

func (i UserLocalMap) ToUserLocalMapOutput() UserLocalMapOutput {
	return i.ToUserLocalMapOutputWithContext(context.Background())
}

func (i UserLocalMap) ToUserLocalMapOutputWithContext(ctx context.Context) UserLocalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLocalMapOutput)
}

type UserLocalOutput struct{ *pulumi.OutputState }

func (UserLocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLocal)(nil)).Elem()
}

func (o UserLocalOutput) ToUserLocalOutput() UserLocalOutput {
	return o
}

func (o UserLocalOutput) ToUserLocalOutputWithContext(ctx context.Context) UserLocalOutput {
	return o
}

func (o UserLocalOutput) AuthConcurrentOverride() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.AuthConcurrentOverride }).(pulumi.StringOutput)
}

func (o UserLocalOutput) AuthConcurrentValue() pulumi.IntOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.IntOutput { return v.AuthConcurrentValue }).(pulumi.IntOutput)
}

func (o UserLocalOutput) Authtimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.IntOutput { return v.Authtimeout }).(pulumi.IntOutput)
}

func (o UserLocalOutput) EmailTo() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.EmailTo }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Fortitoken() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.Fortitoken }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o UserLocalOutput) LdapServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.LdapServer }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Passwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringPtrOutput { return v.Passwd }).(pulumi.StringPtrOutput)
}

func (o UserLocalOutput) PasswdPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.PasswdPolicy }).(pulumi.StringOutput)
}

func (o UserLocalOutput) PasswdTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.PasswdTime }).(pulumi.StringOutput)
}

func (o UserLocalOutput) PpkIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.PpkIdentity }).(pulumi.StringOutput)
}

func (o UserLocalOutput) PpkSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringPtrOutput { return v.PpkSecret }).(pulumi.StringPtrOutput)
}

func (o UserLocalOutput) RadiusServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.RadiusServer }).(pulumi.StringOutput)
}

func (o UserLocalOutput) SmsCustomServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.SmsCustomServer }).(pulumi.StringOutput)
}

func (o UserLocalOutput) SmsPhone() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.SmsPhone }).(pulumi.StringOutput)
}

func (o UserLocalOutput) SmsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.SmsServer }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o UserLocalOutput) TacacsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.TacacsServer }).(pulumi.StringOutput)
}

func (o UserLocalOutput) TwoFactor() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.TwoFactor }).(pulumi.StringOutput)
}

func (o UserLocalOutput) TwoFactorAuthentication() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.TwoFactorAuthentication }).(pulumi.StringOutput)
}

func (o UserLocalOutput) TwoFactorNotification() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.TwoFactorNotification }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o UserLocalOutput) UsernameCaseInsensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.UsernameCaseInsensitivity }).(pulumi.StringOutput)
}

func (o UserLocalOutput) UsernameCaseSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.UsernameCaseSensitivity }).(pulumi.StringOutput)
}

func (o UserLocalOutput) UsernameSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.UsernameSensitivity }).(pulumi.StringOutput)
}

func (o UserLocalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o UserLocalOutput) Workstation() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLocal) pulumi.StringOutput { return v.Workstation }).(pulumi.StringOutput)
}

type UserLocalArrayOutput struct{ *pulumi.OutputState }

func (UserLocalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLocal)(nil)).Elem()
}

func (o UserLocalArrayOutput) ToUserLocalArrayOutput() UserLocalArrayOutput {
	return o
}

func (o UserLocalArrayOutput) ToUserLocalArrayOutputWithContext(ctx context.Context) UserLocalArrayOutput {
	return o
}

func (o UserLocalArrayOutput) Index(i pulumi.IntInput) UserLocalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserLocal {
		return vs[0].([]*UserLocal)[vs[1].(int)]
	}).(UserLocalOutput)
}

type UserLocalMapOutput struct{ *pulumi.OutputState }

func (UserLocalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLocal)(nil)).Elem()
}

func (o UserLocalMapOutput) ToUserLocalMapOutput() UserLocalMapOutput {
	return o
}

func (o UserLocalMapOutput) ToUserLocalMapOutputWithContext(ctx context.Context) UserLocalMapOutput {
	return o
}

func (o UserLocalMapOutput) MapIndex(k pulumi.StringInput) UserLocalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserLocal {
		return vs[0].(map[string]*UserLocal)[vs[1].(string)]
	}).(UserLocalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserLocalInput)(nil)).Elem(), &UserLocal{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLocalArrayInput)(nil)).Elem(), UserLocalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLocalMapInput)(nil)).Elem(), UserLocalMap{})
	pulumi.RegisterOutputType(UserLocalOutput{})
	pulumi.RegisterOutputType(UserLocalArrayOutput{})
	pulumi.RegisterOutputType(UserLocalMapOutput{})
}
