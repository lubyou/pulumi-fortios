// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure Access Proxy SSH client certificate. Applies to FortiOS Version `>= 7.0.1`.
//
// ## Import
//
// Firewall AccessProxySshClientCert can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallAccessProxySshClientCert:FirewallAccessProxySshClientCert labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallAccessProxySshClientCert struct {
	pulumi.CustomResourceState

	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringOutput `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions FirewallAccessProxySshClientCertCertExtensionArrayOutput `pulumi:"certExtensions"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name of certificate extension.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringOutput `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringOutput `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringOutput `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringOutput `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringOutput `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringOutput `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallAccessProxySshClientCert registers a new resource with the given unique name, arguments, and options.
func NewFirewallAccessProxySshClientCert(ctx *pulumi.Context,
	name string, args *FirewallAccessProxySshClientCertArgs, opts ...pulumi.ResourceOption) (*FirewallAccessProxySshClientCert, error) {
	if args == nil {
		args = &FirewallAccessProxySshClientCertArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallAccessProxySshClientCert
	err := ctx.RegisterResource("fortios:index/firewallAccessProxySshClientCert:FirewallAccessProxySshClientCert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAccessProxySshClientCert gets an existing FirewallAccessProxySshClientCert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAccessProxySshClientCert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAccessProxySshClientCertState, opts ...pulumi.ResourceOption) (*FirewallAccessProxySshClientCert, error) {
	var resource FirewallAccessProxySshClientCert
	err := ctx.ReadResource("fortios:index/firewallAccessProxySshClientCert:FirewallAccessProxySshClientCert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAccessProxySshClientCert resources.
type firewallAccessProxySshClientCertState struct {
	// Name of the SSH server public key authentication CA.
	AuthCa *string `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions []FirewallAccessProxySshClientCertCertExtension `pulumi:"certExtensions"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of certificate extension.
	Name *string `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding *string `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding *string `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty *string `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc *string `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding *string `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress *string `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallAccessProxySshClientCertState struct {
	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringPtrInput
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions FirewallAccessProxySshClientCertCertExtensionArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of certificate extension.
	Name pulumi.StringPtrInput
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringPtrInput
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringPtrInput
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringPtrInput
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallAccessProxySshClientCertState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxySshClientCertState)(nil)).Elem()
}

type firewallAccessProxySshClientCertArgs struct {
	// Name of the SSH server public key authentication CA.
	AuthCa *string `pulumi:"authCa"`
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions []FirewallAccessProxySshClientCertCertExtension `pulumi:"certExtensions"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name of certificate extension.
	Name *string `pulumi:"name"`
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding *string `pulumi:"permitAgentForwarding"`
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding *string `pulumi:"permitPortForwarding"`
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty *string `pulumi:"permitPty"`
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc *string `pulumi:"permitUserRc"`
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding *string `pulumi:"permitX11Forwarding"`
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress *string `pulumi:"sourceAddress"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallAccessProxySshClientCert resource.
type FirewallAccessProxySshClientCertArgs struct {
	// Name of the SSH server public key authentication CA.
	AuthCa pulumi.StringPtrInput
	// Configure certificate extension for user certificate. The structure of `certExtension` block is documented below.
	CertExtensions FirewallAccessProxySshClientCertCertExtensionArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name of certificate extension.
	Name pulumi.StringPtrInput
	// Enable/disable appending permit-agent-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitAgentForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-port-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitPortForwarding pulumi.StringPtrInput
	// Enable/disable appending permit-pty certificate extension. Valid values: `enable`, `disable`.
	PermitPty pulumi.StringPtrInput
	// Enable/disable appending permit-user-rc certificate extension. Valid values: `enable`, `disable`.
	PermitUserRc pulumi.StringPtrInput
	// Enable/disable appending permit-x11-forwarding certificate extension. Valid values: `enable`, `disable`.
	PermitX11Forwarding pulumi.StringPtrInput
	// Enable/disable appending source-address certificate critical option. This option ensure certificate only accepted from FortiGate source address. Valid values: `enable`, `disable`.
	SourceAddress pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallAccessProxySshClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxySshClientCertArgs)(nil)).Elem()
}

type FirewallAccessProxySshClientCertInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput
	ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput
}

func (*FirewallAccessProxySshClientCert) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i *FirewallAccessProxySshClientCert) ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput {
	return i.ToFirewallAccessProxySshClientCertOutputWithContext(context.Background())
}

func (i *FirewallAccessProxySshClientCert) ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertOutput)
}

// FirewallAccessProxySshClientCertArrayInput is an input type that accepts FirewallAccessProxySshClientCertArray and FirewallAccessProxySshClientCertArrayOutput values.
// You can construct a concrete instance of `FirewallAccessProxySshClientCertArrayInput` via:
//
//          FirewallAccessProxySshClientCertArray{ FirewallAccessProxySshClientCertArgs{...} }
type FirewallAccessProxySshClientCertArrayInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput
	ToFirewallAccessProxySshClientCertArrayOutputWithContext(context.Context) FirewallAccessProxySshClientCertArrayOutput
}

type FirewallAccessProxySshClientCertArray []FirewallAccessProxySshClientCertInput

func (FirewallAccessProxySshClientCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i FirewallAccessProxySshClientCertArray) ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput {
	return i.ToFirewallAccessProxySshClientCertArrayOutputWithContext(context.Background())
}

func (i FirewallAccessProxySshClientCertArray) ToFirewallAccessProxySshClientCertArrayOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertArrayOutput)
}

// FirewallAccessProxySshClientCertMapInput is an input type that accepts FirewallAccessProxySshClientCertMap and FirewallAccessProxySshClientCertMapOutput values.
// You can construct a concrete instance of `FirewallAccessProxySshClientCertMapInput` via:
//
//          FirewallAccessProxySshClientCertMap{ "key": FirewallAccessProxySshClientCertArgs{...} }
type FirewallAccessProxySshClientCertMapInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput
	ToFirewallAccessProxySshClientCertMapOutputWithContext(context.Context) FirewallAccessProxySshClientCertMapOutput
}

type FirewallAccessProxySshClientCertMap map[string]FirewallAccessProxySshClientCertInput

func (FirewallAccessProxySshClientCertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i FirewallAccessProxySshClientCertMap) ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput {
	return i.ToFirewallAccessProxySshClientCertMapOutputWithContext(context.Background())
}

func (i FirewallAccessProxySshClientCertMap) ToFirewallAccessProxySshClientCertMapOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertMapOutput)
}

type FirewallAccessProxySshClientCertOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertOutput) ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput {
	return o
}

func (o FirewallAccessProxySshClientCertOutput) ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput {
	return o
}

type FirewallAccessProxySshClientCertArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertArrayOutput) ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput {
	return o
}

func (o FirewallAccessProxySshClientCertArrayOutput) ToFirewallAccessProxySshClientCertArrayOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertArrayOutput {
	return o
}

func (o FirewallAccessProxySshClientCertArrayOutput) Index(i pulumi.IntInput) FirewallAccessProxySshClientCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAccessProxySshClientCert {
		return vs[0].([]*FirewallAccessProxySshClientCert)[vs[1].(int)]
	}).(FirewallAccessProxySshClientCertOutput)
}

type FirewallAccessProxySshClientCertMapOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertMapOutput) ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput {
	return o
}

func (o FirewallAccessProxySshClientCertMapOutput) ToFirewallAccessProxySshClientCertMapOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertMapOutput {
	return o
}

func (o FirewallAccessProxySshClientCertMapOutput) MapIndex(k pulumi.StringInput) FirewallAccessProxySshClientCertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAccessProxySshClientCert {
		return vs[0].(map[string]*FirewallAccessProxySshClientCert)[vs[1].(string)]
	}).(FirewallAccessProxySshClientCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertInput)(nil)).Elem(), &FirewallAccessProxySshClientCert{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertArrayInput)(nil)).Elem(), FirewallAccessProxySshClientCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertMapInput)(nil)).Elem(), FirewallAccessProxySshClientCertMap{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertMapOutput{})
}
