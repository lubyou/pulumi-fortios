// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallAccessProxySshClientCert struct {
	pulumi.CustomResourceState

	AuthCa                pulumi.StringOutput                                      `pulumi:"authCa"`
	CertExtensions        FirewallAccessProxySshClientCertCertExtensionArrayOutput `pulumi:"certExtensions"`
	DynamicSortSubtable   pulumi.StringPtrOutput                                   `pulumi:"dynamicSortSubtable"`
	Name                  pulumi.StringOutput                                      `pulumi:"name"`
	PermitAgentForwarding pulumi.StringOutput                                      `pulumi:"permitAgentForwarding"`
	PermitPortForwarding  pulumi.StringOutput                                      `pulumi:"permitPortForwarding"`
	PermitPty             pulumi.StringOutput                                      `pulumi:"permitPty"`
	PermitUserRc          pulumi.StringOutput                                      `pulumi:"permitUserRc"`
	PermitX11Forwarding   pulumi.StringOutput                                      `pulumi:"permitX11Forwarding"`
	SourceAddress         pulumi.StringOutput                                      `pulumi:"sourceAddress"`
	Vdomparam             pulumi.StringPtrOutput                                   `pulumi:"vdomparam"`
}

// NewFirewallAccessProxySshClientCert registers a new resource with the given unique name, arguments, and options.
func NewFirewallAccessProxySshClientCert(ctx *pulumi.Context,
	name string, args *FirewallAccessProxySshClientCertArgs, opts ...pulumi.ResourceOption) (*FirewallAccessProxySshClientCert, error) {
	if args == nil {
		args = &FirewallAccessProxySshClientCertArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallAccessProxySshClientCert
	err := ctx.RegisterResource("fortios:index/firewallAccessProxySshClientCert:FirewallAccessProxySshClientCert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallAccessProxySshClientCert gets an existing FirewallAccessProxySshClientCert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallAccessProxySshClientCert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallAccessProxySshClientCertState, opts ...pulumi.ResourceOption) (*FirewallAccessProxySshClientCert, error) {
	var resource FirewallAccessProxySshClientCert
	err := ctx.ReadResource("fortios:index/firewallAccessProxySshClientCert:FirewallAccessProxySshClientCert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallAccessProxySshClientCert resources.
type firewallAccessProxySshClientCertState struct {
	AuthCa                *string                                         `pulumi:"authCa"`
	CertExtensions        []FirewallAccessProxySshClientCertCertExtension `pulumi:"certExtensions"`
	DynamicSortSubtable   *string                                         `pulumi:"dynamicSortSubtable"`
	Name                  *string                                         `pulumi:"name"`
	PermitAgentForwarding *string                                         `pulumi:"permitAgentForwarding"`
	PermitPortForwarding  *string                                         `pulumi:"permitPortForwarding"`
	PermitPty             *string                                         `pulumi:"permitPty"`
	PermitUserRc          *string                                         `pulumi:"permitUserRc"`
	PermitX11Forwarding   *string                                         `pulumi:"permitX11Forwarding"`
	SourceAddress         *string                                         `pulumi:"sourceAddress"`
	Vdomparam             *string                                         `pulumi:"vdomparam"`
}

type FirewallAccessProxySshClientCertState struct {
	AuthCa                pulumi.StringPtrInput
	CertExtensions        FirewallAccessProxySshClientCertCertExtensionArrayInput
	DynamicSortSubtable   pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	PermitAgentForwarding pulumi.StringPtrInput
	PermitPortForwarding  pulumi.StringPtrInput
	PermitPty             pulumi.StringPtrInput
	PermitUserRc          pulumi.StringPtrInput
	PermitX11Forwarding   pulumi.StringPtrInput
	SourceAddress         pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
}

func (FirewallAccessProxySshClientCertState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxySshClientCertState)(nil)).Elem()
}

type firewallAccessProxySshClientCertArgs struct {
	AuthCa                *string                                         `pulumi:"authCa"`
	CertExtensions        []FirewallAccessProxySshClientCertCertExtension `pulumi:"certExtensions"`
	DynamicSortSubtable   *string                                         `pulumi:"dynamicSortSubtable"`
	Name                  *string                                         `pulumi:"name"`
	PermitAgentForwarding *string                                         `pulumi:"permitAgentForwarding"`
	PermitPortForwarding  *string                                         `pulumi:"permitPortForwarding"`
	PermitPty             *string                                         `pulumi:"permitPty"`
	PermitUserRc          *string                                         `pulumi:"permitUserRc"`
	PermitX11Forwarding   *string                                         `pulumi:"permitX11Forwarding"`
	SourceAddress         *string                                         `pulumi:"sourceAddress"`
	Vdomparam             *string                                         `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallAccessProxySshClientCert resource.
type FirewallAccessProxySshClientCertArgs struct {
	AuthCa                pulumi.StringPtrInput
	CertExtensions        FirewallAccessProxySshClientCertCertExtensionArrayInput
	DynamicSortSubtable   pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	PermitAgentForwarding pulumi.StringPtrInput
	PermitPortForwarding  pulumi.StringPtrInput
	PermitPty             pulumi.StringPtrInput
	PermitUserRc          pulumi.StringPtrInput
	PermitX11Forwarding   pulumi.StringPtrInput
	SourceAddress         pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
}

func (FirewallAccessProxySshClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallAccessProxySshClientCertArgs)(nil)).Elem()
}

type FirewallAccessProxySshClientCertInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput
	ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput
}

func (*FirewallAccessProxySshClientCert) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i *FirewallAccessProxySshClientCert) ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput {
	return i.ToFirewallAccessProxySshClientCertOutputWithContext(context.Background())
}

func (i *FirewallAccessProxySshClientCert) ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertOutput)
}

// FirewallAccessProxySshClientCertArrayInput is an input type that accepts FirewallAccessProxySshClientCertArray and FirewallAccessProxySshClientCertArrayOutput values.
// You can construct a concrete instance of `FirewallAccessProxySshClientCertArrayInput` via:
//
//	FirewallAccessProxySshClientCertArray{ FirewallAccessProxySshClientCertArgs{...} }
type FirewallAccessProxySshClientCertArrayInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput
	ToFirewallAccessProxySshClientCertArrayOutputWithContext(context.Context) FirewallAccessProxySshClientCertArrayOutput
}

type FirewallAccessProxySshClientCertArray []FirewallAccessProxySshClientCertInput

func (FirewallAccessProxySshClientCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i FirewallAccessProxySshClientCertArray) ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput {
	return i.ToFirewallAccessProxySshClientCertArrayOutputWithContext(context.Background())
}

func (i FirewallAccessProxySshClientCertArray) ToFirewallAccessProxySshClientCertArrayOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertArrayOutput)
}

// FirewallAccessProxySshClientCertMapInput is an input type that accepts FirewallAccessProxySshClientCertMap and FirewallAccessProxySshClientCertMapOutput values.
// You can construct a concrete instance of `FirewallAccessProxySshClientCertMapInput` via:
//
//	FirewallAccessProxySshClientCertMap{ "key": FirewallAccessProxySshClientCertArgs{...} }
type FirewallAccessProxySshClientCertMapInput interface {
	pulumi.Input

	ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput
	ToFirewallAccessProxySshClientCertMapOutputWithContext(context.Context) FirewallAccessProxySshClientCertMapOutput
}

type FirewallAccessProxySshClientCertMap map[string]FirewallAccessProxySshClientCertInput

func (FirewallAccessProxySshClientCertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (i FirewallAccessProxySshClientCertMap) ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput {
	return i.ToFirewallAccessProxySshClientCertMapOutputWithContext(context.Background())
}

func (i FirewallAccessProxySshClientCertMap) ToFirewallAccessProxySshClientCertMapOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallAccessProxySshClientCertMapOutput)
}

type FirewallAccessProxySshClientCertOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertOutput) ToFirewallAccessProxySshClientCertOutput() FirewallAccessProxySshClientCertOutput {
	return o
}

func (o FirewallAccessProxySshClientCertOutput) ToFirewallAccessProxySshClientCertOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertOutput {
	return o
}

func (o FirewallAccessProxySshClientCertOutput) AuthCa() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.AuthCa }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) CertExtensions() FirewallAccessProxySshClientCertCertExtensionArrayOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) FirewallAccessProxySshClientCertCertExtensionArrayOutput {
		return v.CertExtensions
	}).(FirewallAccessProxySshClientCertCertExtensionArrayOutput)
}

func (o FirewallAccessProxySshClientCertOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallAccessProxySshClientCertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) PermitAgentForwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.PermitAgentForwarding }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) PermitPortForwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.PermitPortForwarding }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) PermitPty() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.PermitPty }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) PermitUserRc() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.PermitUserRc }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) PermitX11Forwarding() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.PermitX11Forwarding }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringOutput { return v.SourceAddress }).(pulumi.StringOutput)
}

func (o FirewallAccessProxySshClientCertOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallAccessProxySshClientCert) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallAccessProxySshClientCertArrayOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertArrayOutput) ToFirewallAccessProxySshClientCertArrayOutput() FirewallAccessProxySshClientCertArrayOutput {
	return o
}

func (o FirewallAccessProxySshClientCertArrayOutput) ToFirewallAccessProxySshClientCertArrayOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertArrayOutput {
	return o
}

func (o FirewallAccessProxySshClientCertArrayOutput) Index(i pulumi.IntInput) FirewallAccessProxySshClientCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallAccessProxySshClientCert {
		return vs[0].([]*FirewallAccessProxySshClientCert)[vs[1].(int)]
	}).(FirewallAccessProxySshClientCertOutput)
}

type FirewallAccessProxySshClientCertMapOutput struct{ *pulumi.OutputState }

func (FirewallAccessProxySshClientCertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallAccessProxySshClientCert)(nil)).Elem()
}

func (o FirewallAccessProxySshClientCertMapOutput) ToFirewallAccessProxySshClientCertMapOutput() FirewallAccessProxySshClientCertMapOutput {
	return o
}

func (o FirewallAccessProxySshClientCertMapOutput) ToFirewallAccessProxySshClientCertMapOutputWithContext(ctx context.Context) FirewallAccessProxySshClientCertMapOutput {
	return o
}

func (o FirewallAccessProxySshClientCertMapOutput) MapIndex(k pulumi.StringInput) FirewallAccessProxySshClientCertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallAccessProxySshClientCert {
		return vs[0].(map[string]*FirewallAccessProxySshClientCert)[vs[1].(string)]
	}).(FirewallAccessProxySshClientCertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertInput)(nil)).Elem(), &FirewallAccessProxySshClientCert{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertArrayInput)(nil)).Elem(), FirewallAccessProxySshClientCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallAccessProxySshClientCertMapInput)(nil)).Elem(), FirewallAccessProxySshClientCertMap{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertArrayOutput{})
	pulumi.RegisterOutputType(FirewallAccessProxySshClientCertMapOutput{})
}
