// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure physical switches. Applies to FortiOS Version `>= 7.0.4`.
//
// ## Import
//
// System PhysicalSwitch can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemPhysicalSwitch struct {
	pulumi.CustomResourceState

	// Enable/disable layer 2 age timer. Valid values: `enable`, `disable`.
	AgeEnable pulumi.StringOutput `pulumi:"ageEnable"`
	// Layer 2 table age timer value.
	AgeVal pulumi.IntOutput `pulumi:"ageVal"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemPhysicalSwitch registers a new resource with the given unique name, arguments, and options.
func NewSystemPhysicalSwitch(ctx *pulumi.Context,
	name string, args *SystemPhysicalSwitchArgs, opts ...pulumi.ResourceOption) (*SystemPhysicalSwitch, error) {
	if args == nil {
		args = &SystemPhysicalSwitchArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SystemPhysicalSwitch
	err := ctx.RegisterResource("fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemPhysicalSwitch gets an existing SystemPhysicalSwitch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemPhysicalSwitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemPhysicalSwitchState, opts ...pulumi.ResourceOption) (*SystemPhysicalSwitch, error) {
	var resource SystemPhysicalSwitch
	err := ctx.ReadResource("fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemPhysicalSwitch resources.
type systemPhysicalSwitchState struct {
	// Enable/disable layer 2 age timer. Valid values: `enable`, `disable`.
	AgeEnable *string `pulumi:"ageEnable"`
	// Layer 2 table age timer value.
	AgeVal *int `pulumi:"ageVal"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemPhysicalSwitchState struct {
	// Enable/disable layer 2 age timer. Valid values: `enable`, `disable`.
	AgeEnable pulumi.StringPtrInput
	// Layer 2 table age timer value.
	AgeVal pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemPhysicalSwitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPhysicalSwitchState)(nil)).Elem()
}

type systemPhysicalSwitchArgs struct {
	// Enable/disable layer 2 age timer. Valid values: `enable`, `disable`.
	AgeEnable *string `pulumi:"ageEnable"`
	// Layer 2 table age timer value.
	AgeVal *int `pulumi:"ageVal"`
	// Name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemPhysicalSwitch resource.
type SystemPhysicalSwitchArgs struct {
	// Enable/disable layer 2 age timer. Valid values: `enable`, `disable`.
	AgeEnable pulumi.StringPtrInput
	// Layer 2 table age timer value.
	AgeVal pulumi.IntPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemPhysicalSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPhysicalSwitchArgs)(nil)).Elem()
}

type SystemPhysicalSwitchInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput
	ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput
}

func (*SystemPhysicalSwitch) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPhysicalSwitch)(nil)).Elem()
}

func (i *SystemPhysicalSwitch) ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput {
	return i.ToSystemPhysicalSwitchOutputWithContext(context.Background())
}

func (i *SystemPhysicalSwitch) ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchOutput)
}

// SystemPhysicalSwitchArrayInput is an input type that accepts SystemPhysicalSwitchArray and SystemPhysicalSwitchArrayOutput values.
// You can construct a concrete instance of `SystemPhysicalSwitchArrayInput` via:
//
//          SystemPhysicalSwitchArray{ SystemPhysicalSwitchArgs{...} }
type SystemPhysicalSwitchArrayInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput
	ToSystemPhysicalSwitchArrayOutputWithContext(context.Context) SystemPhysicalSwitchArrayOutput
}

type SystemPhysicalSwitchArray []SystemPhysicalSwitchInput

func (SystemPhysicalSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPhysicalSwitch)(nil)).Elem()
}

func (i SystemPhysicalSwitchArray) ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput {
	return i.ToSystemPhysicalSwitchArrayOutputWithContext(context.Background())
}

func (i SystemPhysicalSwitchArray) ToSystemPhysicalSwitchArrayOutputWithContext(ctx context.Context) SystemPhysicalSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchArrayOutput)
}

// SystemPhysicalSwitchMapInput is an input type that accepts SystemPhysicalSwitchMap and SystemPhysicalSwitchMapOutput values.
// You can construct a concrete instance of `SystemPhysicalSwitchMapInput` via:
//
//          SystemPhysicalSwitchMap{ "key": SystemPhysicalSwitchArgs{...} }
type SystemPhysicalSwitchMapInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput
	ToSystemPhysicalSwitchMapOutputWithContext(context.Context) SystemPhysicalSwitchMapOutput
}

type SystemPhysicalSwitchMap map[string]SystemPhysicalSwitchInput

func (SystemPhysicalSwitchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPhysicalSwitch)(nil)).Elem()
}

func (i SystemPhysicalSwitchMap) ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput {
	return i.ToSystemPhysicalSwitchMapOutputWithContext(context.Background())
}

func (i SystemPhysicalSwitchMap) ToSystemPhysicalSwitchMapOutputWithContext(ctx context.Context) SystemPhysicalSwitchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchMapOutput)
}

type SystemPhysicalSwitchOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchOutput) ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput {
	return o
}

func (o SystemPhysicalSwitchOutput) ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput {
	return o
}

type SystemPhysicalSwitchArrayOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchArrayOutput) ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput {
	return o
}

func (o SystemPhysicalSwitchArrayOutput) ToSystemPhysicalSwitchArrayOutputWithContext(ctx context.Context) SystemPhysicalSwitchArrayOutput {
	return o
}

func (o SystemPhysicalSwitchArrayOutput) Index(i pulumi.IntInput) SystemPhysicalSwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemPhysicalSwitch {
		return vs[0].([]*SystemPhysicalSwitch)[vs[1].(int)]
	}).(SystemPhysicalSwitchOutput)
}

type SystemPhysicalSwitchMapOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchMapOutput) ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput {
	return o
}

func (o SystemPhysicalSwitchMapOutput) ToSystemPhysicalSwitchMapOutputWithContext(ctx context.Context) SystemPhysicalSwitchMapOutput {
	return o
}

func (o SystemPhysicalSwitchMapOutput) MapIndex(k pulumi.StringInput) SystemPhysicalSwitchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemPhysicalSwitch {
		return vs[0].(map[string]*SystemPhysicalSwitch)[vs[1].(string)]
	}).(SystemPhysicalSwitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchInput)(nil)).Elem(), &SystemPhysicalSwitch{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchArrayInput)(nil)).Elem(), SystemPhysicalSwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchMapInput)(nil)).Elem(), SystemPhysicalSwitchMap{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchOutput{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchArrayOutput{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchMapOutput{})
}
