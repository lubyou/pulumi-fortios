// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemPhysicalSwitch struct {
	pulumi.CustomResourceState

	AgeEnable pulumi.StringOutput    `pulumi:"ageEnable"`
	AgeVal    pulumi.IntOutput       `pulumi:"ageVal"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemPhysicalSwitch registers a new resource with the given unique name, arguments, and options.
func NewSystemPhysicalSwitch(ctx *pulumi.Context,
	name string, args *SystemPhysicalSwitchArgs, opts ...pulumi.ResourceOption) (*SystemPhysicalSwitch, error) {
	if args == nil {
		args = &SystemPhysicalSwitchArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemPhysicalSwitch
	err := ctx.RegisterResource("fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemPhysicalSwitch gets an existing SystemPhysicalSwitch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemPhysicalSwitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemPhysicalSwitchState, opts ...pulumi.ResourceOption) (*SystemPhysicalSwitch, error) {
	var resource SystemPhysicalSwitch
	err := ctx.ReadResource("fortios:index/systemPhysicalSwitch:SystemPhysicalSwitch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemPhysicalSwitch resources.
type systemPhysicalSwitchState struct {
	AgeEnable *string `pulumi:"ageEnable"`
	AgeVal    *int    `pulumi:"ageVal"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemPhysicalSwitchState struct {
	AgeEnable pulumi.StringPtrInput
	AgeVal    pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemPhysicalSwitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPhysicalSwitchState)(nil)).Elem()
}

type systemPhysicalSwitchArgs struct {
	AgeEnable *string `pulumi:"ageEnable"`
	AgeVal    *int    `pulumi:"ageVal"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemPhysicalSwitch resource.
type SystemPhysicalSwitchArgs struct {
	AgeEnable pulumi.StringPtrInput
	AgeVal    pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemPhysicalSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPhysicalSwitchArgs)(nil)).Elem()
}

type SystemPhysicalSwitchInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput
	ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput
}

func (*SystemPhysicalSwitch) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPhysicalSwitch)(nil)).Elem()
}

func (i *SystemPhysicalSwitch) ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput {
	return i.ToSystemPhysicalSwitchOutputWithContext(context.Background())
}

func (i *SystemPhysicalSwitch) ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchOutput)
}

func (i *SystemPhysicalSwitch) ToOutput(ctx context.Context) pulumix.Output[*SystemPhysicalSwitch] {
	return pulumix.Output[*SystemPhysicalSwitch]{
		OutputState: i.ToSystemPhysicalSwitchOutputWithContext(ctx).OutputState,
	}
}

// SystemPhysicalSwitchArrayInput is an input type that accepts SystemPhysicalSwitchArray and SystemPhysicalSwitchArrayOutput values.
// You can construct a concrete instance of `SystemPhysicalSwitchArrayInput` via:
//
//	SystemPhysicalSwitchArray{ SystemPhysicalSwitchArgs{...} }
type SystemPhysicalSwitchArrayInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput
	ToSystemPhysicalSwitchArrayOutputWithContext(context.Context) SystemPhysicalSwitchArrayOutput
}

type SystemPhysicalSwitchArray []SystemPhysicalSwitchInput

func (SystemPhysicalSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPhysicalSwitch)(nil)).Elem()
}

func (i SystemPhysicalSwitchArray) ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput {
	return i.ToSystemPhysicalSwitchArrayOutputWithContext(context.Background())
}

func (i SystemPhysicalSwitchArray) ToSystemPhysicalSwitchArrayOutputWithContext(ctx context.Context) SystemPhysicalSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchArrayOutput)
}

func (i SystemPhysicalSwitchArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemPhysicalSwitch] {
	return pulumix.Output[[]*SystemPhysicalSwitch]{
		OutputState: i.ToSystemPhysicalSwitchArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemPhysicalSwitchMapInput is an input type that accepts SystemPhysicalSwitchMap and SystemPhysicalSwitchMapOutput values.
// You can construct a concrete instance of `SystemPhysicalSwitchMapInput` via:
//
//	SystemPhysicalSwitchMap{ "key": SystemPhysicalSwitchArgs{...} }
type SystemPhysicalSwitchMapInput interface {
	pulumi.Input

	ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput
	ToSystemPhysicalSwitchMapOutputWithContext(context.Context) SystemPhysicalSwitchMapOutput
}

type SystemPhysicalSwitchMap map[string]SystemPhysicalSwitchInput

func (SystemPhysicalSwitchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPhysicalSwitch)(nil)).Elem()
}

func (i SystemPhysicalSwitchMap) ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput {
	return i.ToSystemPhysicalSwitchMapOutputWithContext(context.Background())
}

func (i SystemPhysicalSwitchMap) ToSystemPhysicalSwitchMapOutputWithContext(ctx context.Context) SystemPhysicalSwitchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPhysicalSwitchMapOutput)
}

func (i SystemPhysicalSwitchMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemPhysicalSwitch] {
	return pulumix.Output[map[string]*SystemPhysicalSwitch]{
		OutputState: i.ToSystemPhysicalSwitchMapOutputWithContext(ctx).OutputState,
	}
}

type SystemPhysicalSwitchOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchOutput) ToSystemPhysicalSwitchOutput() SystemPhysicalSwitchOutput {
	return o
}

func (o SystemPhysicalSwitchOutput) ToSystemPhysicalSwitchOutputWithContext(ctx context.Context) SystemPhysicalSwitchOutput {
	return o
}

func (o SystemPhysicalSwitchOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemPhysicalSwitch] {
	return pulumix.Output[*SystemPhysicalSwitch]{
		OutputState: o.OutputState,
	}
}

func (o SystemPhysicalSwitchOutput) AgeEnable() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPhysicalSwitch) pulumi.StringOutput { return v.AgeEnable }).(pulumi.StringOutput)
}

func (o SystemPhysicalSwitchOutput) AgeVal() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPhysicalSwitch) pulumi.IntOutput { return v.AgeVal }).(pulumi.IntOutput)
}

func (o SystemPhysicalSwitchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPhysicalSwitch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemPhysicalSwitchOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemPhysicalSwitch) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemPhysicalSwitchArrayOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchArrayOutput) ToSystemPhysicalSwitchArrayOutput() SystemPhysicalSwitchArrayOutput {
	return o
}

func (o SystemPhysicalSwitchArrayOutput) ToSystemPhysicalSwitchArrayOutputWithContext(ctx context.Context) SystemPhysicalSwitchArrayOutput {
	return o
}

func (o SystemPhysicalSwitchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemPhysicalSwitch] {
	return pulumix.Output[[]*SystemPhysicalSwitch]{
		OutputState: o.OutputState,
	}
}

func (o SystemPhysicalSwitchArrayOutput) Index(i pulumi.IntInput) SystemPhysicalSwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemPhysicalSwitch {
		return vs[0].([]*SystemPhysicalSwitch)[vs[1].(int)]
	}).(SystemPhysicalSwitchOutput)
}

type SystemPhysicalSwitchMapOutput struct{ *pulumi.OutputState }

func (SystemPhysicalSwitchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPhysicalSwitch)(nil)).Elem()
}

func (o SystemPhysicalSwitchMapOutput) ToSystemPhysicalSwitchMapOutput() SystemPhysicalSwitchMapOutput {
	return o
}

func (o SystemPhysicalSwitchMapOutput) ToSystemPhysicalSwitchMapOutputWithContext(ctx context.Context) SystemPhysicalSwitchMapOutput {
	return o
}

func (o SystemPhysicalSwitchMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemPhysicalSwitch] {
	return pulumix.Output[map[string]*SystemPhysicalSwitch]{
		OutputState: o.OutputState,
	}
}

func (o SystemPhysicalSwitchMapOutput) MapIndex(k pulumi.StringInput) SystemPhysicalSwitchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemPhysicalSwitch {
		return vs[0].(map[string]*SystemPhysicalSwitch)[vs[1].(string)]
	}).(SystemPhysicalSwitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchInput)(nil)).Elem(), &SystemPhysicalSwitch{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchArrayInput)(nil)).Elem(), SystemPhysicalSwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPhysicalSwitchMapInput)(nil)).Elem(), SystemPhysicalSwitchMap{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchOutput{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchArrayOutput{})
	pulumi.RegisterOutputType(SystemPhysicalSwitchMapOutput{})
}
