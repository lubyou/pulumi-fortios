// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogSyslogd3Filter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                   `pulumi:"anomaly"`
	Dns                  pulumi.StringOutput                   `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                   `pulumi:"filter"`
	FilterType           pulumi.StringOutput                   `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                   `pulumi:"forwardTraffic"`
	FreeStyles           LogSyslogd3FilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables         pulumi.StringPtrOutput                `pulumi:"getAllTables"`
	Gtp                  pulumi.StringOutput                   `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                   `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                   `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                   `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                   `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                   `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                   `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                   `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                   `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                   `pulumi:"ztnaTraffic"`
}

// NewLogSyslogd3Filter registers a new resource with the given unique name, arguments, and options.
func NewLogSyslogd3Filter(ctx *pulumi.Context,
	name string, args *LogSyslogd3FilterArgs, opts ...pulumi.ResourceOption) (*LogSyslogd3Filter, error) {
	if args == nil {
		args = &LogSyslogd3FilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogSyslogd3Filter
	err := ctx.RegisterResource("fortios:index/logSyslogd3Filter:LogSyslogd3Filter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSyslogd3Filter gets an existing LogSyslogd3Filter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSyslogd3Filter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSyslogd3FilterState, opts ...pulumi.ResourceOption) (*LogSyslogd3Filter, error) {
	var resource LogSyslogd3Filter
	err := ctx.ReadResource("fortios:index/logSyslogd3Filter:LogSyslogd3Filter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSyslogd3Filter resources.
type logSyslogd3FilterState struct {
	Anomaly              *string                      `pulumi:"anomaly"`
	Dns                  *string                      `pulumi:"dns"`
	DynamicSortSubtable  *string                      `pulumi:"dynamicSortSubtable"`
	Filter               *string                      `pulumi:"filter"`
	FilterType           *string                      `pulumi:"filterType"`
	ForwardTraffic       *string                      `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd3FilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                      `pulumi:"getAllTables"`
	Gtp                  *string                      `pulumi:"gtp"`
	LocalTraffic         *string                      `pulumi:"localTraffic"`
	MulticastTraffic     *string                      `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                      `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                      `pulumi:"netscanVulnerability"`
	Severity             *string                      `pulumi:"severity"`
	SnifferTraffic       *string                      `pulumi:"snifferTraffic"`
	Ssh                  *string                      `pulumi:"ssh"`
	Vdomparam            *string                      `pulumi:"vdomparam"`
	Voip                 *string                      `pulumi:"voip"`
	ZtnaTraffic          *string                      `pulumi:"ztnaTraffic"`
}

type LogSyslogd3FilterState struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd3FilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd3FilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd3FilterState)(nil)).Elem()
}

type logSyslogd3FilterArgs struct {
	Anomaly              *string                      `pulumi:"anomaly"`
	Dns                  *string                      `pulumi:"dns"`
	DynamicSortSubtable  *string                      `pulumi:"dynamicSortSubtable"`
	Filter               *string                      `pulumi:"filter"`
	FilterType           *string                      `pulumi:"filterType"`
	ForwardTraffic       *string                      `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd3FilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                      `pulumi:"getAllTables"`
	Gtp                  *string                      `pulumi:"gtp"`
	LocalTraffic         *string                      `pulumi:"localTraffic"`
	MulticastTraffic     *string                      `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                      `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                      `pulumi:"netscanVulnerability"`
	Severity             *string                      `pulumi:"severity"`
	SnifferTraffic       *string                      `pulumi:"snifferTraffic"`
	Ssh                  *string                      `pulumi:"ssh"`
	Vdomparam            *string                      `pulumi:"vdomparam"`
	Voip                 *string                      `pulumi:"voip"`
	ZtnaTraffic          *string                      `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogSyslogd3Filter resource.
type LogSyslogd3FilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd3FilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd3FilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd3FilterArgs)(nil)).Elem()
}

type LogSyslogd3FilterInput interface {
	pulumi.Input

	ToLogSyslogd3FilterOutput() LogSyslogd3FilterOutput
	ToLogSyslogd3FilterOutputWithContext(ctx context.Context) LogSyslogd3FilterOutput
}

func (*LogSyslogd3Filter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd3Filter)(nil)).Elem()
}

func (i *LogSyslogd3Filter) ToLogSyslogd3FilterOutput() LogSyslogd3FilterOutput {
	return i.ToLogSyslogd3FilterOutputWithContext(context.Background())
}

func (i *LogSyslogd3Filter) ToLogSyslogd3FilterOutputWithContext(ctx context.Context) LogSyslogd3FilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3FilterOutput)
}

// LogSyslogd3FilterArrayInput is an input type that accepts LogSyslogd3FilterArray and LogSyslogd3FilterArrayOutput values.
// You can construct a concrete instance of `LogSyslogd3FilterArrayInput` via:
//
//	LogSyslogd3FilterArray{ LogSyslogd3FilterArgs{...} }
type LogSyslogd3FilterArrayInput interface {
	pulumi.Input

	ToLogSyslogd3FilterArrayOutput() LogSyslogd3FilterArrayOutput
	ToLogSyslogd3FilterArrayOutputWithContext(context.Context) LogSyslogd3FilterArrayOutput
}

type LogSyslogd3FilterArray []LogSyslogd3FilterInput

func (LogSyslogd3FilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd3Filter)(nil)).Elem()
}

func (i LogSyslogd3FilterArray) ToLogSyslogd3FilterArrayOutput() LogSyslogd3FilterArrayOutput {
	return i.ToLogSyslogd3FilterArrayOutputWithContext(context.Background())
}

func (i LogSyslogd3FilterArray) ToLogSyslogd3FilterArrayOutputWithContext(ctx context.Context) LogSyslogd3FilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3FilterArrayOutput)
}

// LogSyslogd3FilterMapInput is an input type that accepts LogSyslogd3FilterMap and LogSyslogd3FilterMapOutput values.
// You can construct a concrete instance of `LogSyslogd3FilterMapInput` via:
//
//	LogSyslogd3FilterMap{ "key": LogSyslogd3FilterArgs{...} }
type LogSyslogd3FilterMapInput interface {
	pulumi.Input

	ToLogSyslogd3FilterMapOutput() LogSyslogd3FilterMapOutput
	ToLogSyslogd3FilterMapOutputWithContext(context.Context) LogSyslogd3FilterMapOutput
}

type LogSyslogd3FilterMap map[string]LogSyslogd3FilterInput

func (LogSyslogd3FilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd3Filter)(nil)).Elem()
}

func (i LogSyslogd3FilterMap) ToLogSyslogd3FilterMapOutput() LogSyslogd3FilterMapOutput {
	return i.ToLogSyslogd3FilterMapOutputWithContext(context.Background())
}

func (i LogSyslogd3FilterMap) ToLogSyslogd3FilterMapOutputWithContext(ctx context.Context) LogSyslogd3FilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd3FilterMapOutput)
}

type LogSyslogd3FilterOutput struct{ *pulumi.OutputState }

func (LogSyslogd3FilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd3Filter)(nil)).Elem()
}

func (o LogSyslogd3FilterOutput) ToLogSyslogd3FilterOutput() LogSyslogd3FilterOutput {
	return o
}

func (o LogSyslogd3FilterOutput) ToLogSyslogd3FilterOutputWithContext(ctx context.Context) LogSyslogd3FilterOutput {
	return o
}

func (o LogSyslogd3FilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) FreeStyles() LogSyslogd3FilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) LogSyslogd3FilterFreeStyleArrayOutput { return v.FreeStyles }).(LogSyslogd3FilterFreeStyleArrayOutput)
}

func (o LogSyslogd3FilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd3FilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogSyslogd3FilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd3Filter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogSyslogd3FilterArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd3FilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd3Filter)(nil)).Elem()
}

func (o LogSyslogd3FilterArrayOutput) ToLogSyslogd3FilterArrayOutput() LogSyslogd3FilterArrayOutput {
	return o
}

func (o LogSyslogd3FilterArrayOutput) ToLogSyslogd3FilterArrayOutputWithContext(ctx context.Context) LogSyslogd3FilterArrayOutput {
	return o
}

func (o LogSyslogd3FilterArrayOutput) Index(i pulumi.IntInput) LogSyslogd3FilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSyslogd3Filter {
		return vs[0].([]*LogSyslogd3Filter)[vs[1].(int)]
	}).(LogSyslogd3FilterOutput)
}

type LogSyslogd3FilterMapOutput struct{ *pulumi.OutputState }

func (LogSyslogd3FilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd3Filter)(nil)).Elem()
}

func (o LogSyslogd3FilterMapOutput) ToLogSyslogd3FilterMapOutput() LogSyslogd3FilterMapOutput {
	return o
}

func (o LogSyslogd3FilterMapOutput) ToLogSyslogd3FilterMapOutputWithContext(ctx context.Context) LogSyslogd3FilterMapOutput {
	return o
}

func (o LogSyslogd3FilterMapOutput) MapIndex(k pulumi.StringInput) LogSyslogd3FilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSyslogd3Filter {
		return vs[0].(map[string]*LogSyslogd3Filter)[vs[1].(string)]
	}).(LogSyslogd3FilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3FilterInput)(nil)).Elem(), &LogSyslogd3Filter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3FilterArrayInput)(nil)).Elem(), LogSyslogd3FilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd3FilterMapInput)(nil)).Elem(), LogSyslogd3FilterMap{})
	pulumi.RegisterOutputType(LogSyslogd3FilterOutput{})
	pulumi.RegisterOutputType(LogSyslogd3FilterArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd3FilterMapOutput{})
}
