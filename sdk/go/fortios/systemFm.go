// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemFm struct {
	pulumi.CustomResourceState

	AutoBackup             pulumi.StringOutput    `pulumi:"autoBackup"`
	Fosid                  pulumi.StringOutput    `pulumi:"fosid"`
	Ip                     pulumi.StringOutput    `pulumi:"ip"`
	Ipsec                  pulumi.StringOutput    `pulumi:"ipsec"`
	ScheduledConfigRestore pulumi.StringOutput    `pulumi:"scheduledConfigRestore"`
	Status                 pulumi.StringOutput    `pulumi:"status"`
	Vdom                   pulumi.StringOutput    `pulumi:"vdom"`
	Vdomparam              pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemFm registers a new resource with the given unique name, arguments, and options.
func NewSystemFm(ctx *pulumi.Context,
	name string, args *SystemFmArgs, opts ...pulumi.ResourceOption) (*SystemFm, error) {
	if args == nil {
		args = &SystemFmArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemFm
	err := ctx.RegisterResource("fortios:index/systemFm:SystemFm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFm gets an existing SystemFm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFmState, opts ...pulumi.ResourceOption) (*SystemFm, error) {
	var resource SystemFm
	err := ctx.ReadResource("fortios:index/systemFm:SystemFm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFm resources.
type systemFmState struct {
	AutoBackup             *string `pulumi:"autoBackup"`
	Fosid                  *string `pulumi:"fosid"`
	Ip                     *string `pulumi:"ip"`
	Ipsec                  *string `pulumi:"ipsec"`
	ScheduledConfigRestore *string `pulumi:"scheduledConfigRestore"`
	Status                 *string `pulumi:"status"`
	Vdom                   *string `pulumi:"vdom"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

type SystemFmState struct {
	AutoBackup             pulumi.StringPtrInput
	Fosid                  pulumi.StringPtrInput
	Ip                     pulumi.StringPtrInput
	Ipsec                  pulumi.StringPtrInput
	ScheduledConfigRestore pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	Vdom                   pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemFmState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFmState)(nil)).Elem()
}

type systemFmArgs struct {
	AutoBackup             *string `pulumi:"autoBackup"`
	Fosid                  *string `pulumi:"fosid"`
	Ip                     *string `pulumi:"ip"`
	Ipsec                  *string `pulumi:"ipsec"`
	ScheduledConfigRestore *string `pulumi:"scheduledConfigRestore"`
	Status                 *string `pulumi:"status"`
	Vdom                   *string `pulumi:"vdom"`
	Vdomparam              *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemFm resource.
type SystemFmArgs struct {
	AutoBackup             pulumi.StringPtrInput
	Fosid                  pulumi.StringPtrInput
	Ip                     pulumi.StringPtrInput
	Ipsec                  pulumi.StringPtrInput
	ScheduledConfigRestore pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	Vdom                   pulumi.StringPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemFmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFmArgs)(nil)).Elem()
}

type SystemFmInput interface {
	pulumi.Input

	ToSystemFmOutput() SystemFmOutput
	ToSystemFmOutputWithContext(ctx context.Context) SystemFmOutput
}

func (*SystemFm) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFm)(nil)).Elem()
}

func (i *SystemFm) ToSystemFmOutput() SystemFmOutput {
	return i.ToSystemFmOutputWithContext(context.Background())
}

func (i *SystemFm) ToSystemFmOutputWithContext(ctx context.Context) SystemFmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFmOutput)
}

func (i *SystemFm) ToOutput(ctx context.Context) pulumix.Output[*SystemFm] {
	return pulumix.Output[*SystemFm]{
		OutputState: i.ToSystemFmOutputWithContext(ctx).OutputState,
	}
}

// SystemFmArrayInput is an input type that accepts SystemFmArray and SystemFmArrayOutput values.
// You can construct a concrete instance of `SystemFmArrayInput` via:
//
//	SystemFmArray{ SystemFmArgs{...} }
type SystemFmArrayInput interface {
	pulumi.Input

	ToSystemFmArrayOutput() SystemFmArrayOutput
	ToSystemFmArrayOutputWithContext(context.Context) SystemFmArrayOutput
}

type SystemFmArray []SystemFmInput

func (SystemFmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFm)(nil)).Elem()
}

func (i SystemFmArray) ToSystemFmArrayOutput() SystemFmArrayOutput {
	return i.ToSystemFmArrayOutputWithContext(context.Background())
}

func (i SystemFmArray) ToSystemFmArrayOutputWithContext(ctx context.Context) SystemFmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFmArrayOutput)
}

func (i SystemFmArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemFm] {
	return pulumix.Output[[]*SystemFm]{
		OutputState: i.ToSystemFmArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemFmMapInput is an input type that accepts SystemFmMap and SystemFmMapOutput values.
// You can construct a concrete instance of `SystemFmMapInput` via:
//
//	SystemFmMap{ "key": SystemFmArgs{...} }
type SystemFmMapInput interface {
	pulumi.Input

	ToSystemFmMapOutput() SystemFmMapOutput
	ToSystemFmMapOutputWithContext(context.Context) SystemFmMapOutput
}

type SystemFmMap map[string]SystemFmInput

func (SystemFmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFm)(nil)).Elem()
}

func (i SystemFmMap) ToSystemFmMapOutput() SystemFmMapOutput {
	return i.ToSystemFmMapOutputWithContext(context.Background())
}

func (i SystemFmMap) ToSystemFmMapOutputWithContext(ctx context.Context) SystemFmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFmMapOutput)
}

func (i SystemFmMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemFm] {
	return pulumix.Output[map[string]*SystemFm]{
		OutputState: i.ToSystemFmMapOutputWithContext(ctx).OutputState,
	}
}

type SystemFmOutput struct{ *pulumi.OutputState }

func (SystemFmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFm)(nil)).Elem()
}

func (o SystemFmOutput) ToSystemFmOutput() SystemFmOutput {
	return o
}

func (o SystemFmOutput) ToSystemFmOutputWithContext(ctx context.Context) SystemFmOutput {
	return o
}

func (o SystemFmOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemFm] {
	return pulumix.Output[*SystemFm]{
		OutputState: o.OutputState,
	}
}

func (o SystemFmOutput) AutoBackup() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.AutoBackup }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Fosid() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.Fosid }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Ipsec() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.Ipsec }).(pulumi.StringOutput)
}

func (o SystemFmOutput) ScheduledConfigRestore() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.ScheduledConfigRestore }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Vdom() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringOutput { return v.Vdom }).(pulumi.StringOutput)
}

func (o SystemFmOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemFm) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemFmArrayOutput struct{ *pulumi.OutputState }

func (SystemFmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFm)(nil)).Elem()
}

func (o SystemFmArrayOutput) ToSystemFmArrayOutput() SystemFmArrayOutput {
	return o
}

func (o SystemFmArrayOutput) ToSystemFmArrayOutputWithContext(ctx context.Context) SystemFmArrayOutput {
	return o
}

func (o SystemFmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemFm] {
	return pulumix.Output[[]*SystemFm]{
		OutputState: o.OutputState,
	}
}

func (o SystemFmArrayOutput) Index(i pulumi.IntInput) SystemFmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemFm {
		return vs[0].([]*SystemFm)[vs[1].(int)]
	}).(SystemFmOutput)
}

type SystemFmMapOutput struct{ *pulumi.OutputState }

func (SystemFmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFm)(nil)).Elem()
}

func (o SystemFmMapOutput) ToSystemFmMapOutput() SystemFmMapOutput {
	return o
}

func (o SystemFmMapOutput) ToSystemFmMapOutputWithContext(ctx context.Context) SystemFmMapOutput {
	return o
}

func (o SystemFmMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemFm] {
	return pulumix.Output[map[string]*SystemFm]{
		OutputState: o.OutputState,
	}
}

func (o SystemFmMapOutput) MapIndex(k pulumi.StringInput) SystemFmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemFm {
		return vs[0].(map[string]*SystemFm)[vs[1].(string)]
	}).(SystemFmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFmInput)(nil)).Elem(), &SystemFm{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFmArrayInput)(nil)).Elem(), SystemFmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFmMapInput)(nil)).Elem(), SystemFmMap{})
	pulumi.RegisterOutputType(SystemFmOutput{})
	pulumi.RegisterOutputType(SystemFmArrayOutput{})
	pulumi.RegisterOutputType(SystemFmMapOutput{})
}
