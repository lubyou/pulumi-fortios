// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemReplacemsgNacQuar struct {
	pulumi.CustomResourceState

	Buffer    pulumi.StringPtrOutput `pulumi:"buffer"`
	Format    pulumi.StringOutput    `pulumi:"format"`
	Header    pulumi.StringOutput    `pulumi:"header"`
	MsgType   pulumi.StringOutput    `pulumi:"msgType"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemReplacemsgNacQuar registers a new resource with the given unique name, arguments, and options.
func NewSystemReplacemsgNacQuar(ctx *pulumi.Context,
	name string, args *SystemReplacemsgNacQuarArgs, opts ...pulumi.ResourceOption) (*SystemReplacemsgNacQuar, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemReplacemsgNacQuar
	err := ctx.RegisterResource("fortios:index/systemReplacemsgNacQuar:SystemReplacemsgNacQuar", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemReplacemsgNacQuar gets an existing SystemReplacemsgNacQuar resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemReplacemsgNacQuar(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemReplacemsgNacQuarState, opts ...pulumi.ResourceOption) (*SystemReplacemsgNacQuar, error) {
	var resource SystemReplacemsgNacQuar
	err := ctx.ReadResource("fortios:index/systemReplacemsgNacQuar:SystemReplacemsgNacQuar", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemReplacemsgNacQuar resources.
type systemReplacemsgNacQuarState struct {
	Buffer    *string `pulumi:"buffer"`
	Format    *string `pulumi:"format"`
	Header    *string `pulumi:"header"`
	MsgType   *string `pulumi:"msgType"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemReplacemsgNacQuarState struct {
	Buffer    pulumi.StringPtrInput
	Format    pulumi.StringPtrInput
	Header    pulumi.StringPtrInput
	MsgType   pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgNacQuarState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgNacQuarState)(nil)).Elem()
}

type systemReplacemsgNacQuarArgs struct {
	Buffer    *string `pulumi:"buffer"`
	Format    *string `pulumi:"format"`
	Header    *string `pulumi:"header"`
	MsgType   string  `pulumi:"msgType"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemReplacemsgNacQuar resource.
type SystemReplacemsgNacQuarArgs struct {
	Buffer    pulumi.StringPtrInput
	Format    pulumi.StringPtrInput
	Header    pulumi.StringPtrInput
	MsgType   pulumi.StringInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgNacQuarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgNacQuarArgs)(nil)).Elem()
}

type SystemReplacemsgNacQuarInput interface {
	pulumi.Input

	ToSystemReplacemsgNacQuarOutput() SystemReplacemsgNacQuarOutput
	ToSystemReplacemsgNacQuarOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarOutput
}

func (*SystemReplacemsgNacQuar) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgNacQuar)(nil)).Elem()
}

func (i *SystemReplacemsgNacQuar) ToSystemReplacemsgNacQuarOutput() SystemReplacemsgNacQuarOutput {
	return i.ToSystemReplacemsgNacQuarOutputWithContext(context.Background())
}

func (i *SystemReplacemsgNacQuar) ToSystemReplacemsgNacQuarOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgNacQuarOutput)
}

// SystemReplacemsgNacQuarArrayInput is an input type that accepts SystemReplacemsgNacQuarArray and SystemReplacemsgNacQuarArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgNacQuarArrayInput` via:
//
//	SystemReplacemsgNacQuarArray{ SystemReplacemsgNacQuarArgs{...} }
type SystemReplacemsgNacQuarArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgNacQuarArrayOutput() SystemReplacemsgNacQuarArrayOutput
	ToSystemReplacemsgNacQuarArrayOutputWithContext(context.Context) SystemReplacemsgNacQuarArrayOutput
}

type SystemReplacemsgNacQuarArray []SystemReplacemsgNacQuarInput

func (SystemReplacemsgNacQuarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgNacQuar)(nil)).Elem()
}

func (i SystemReplacemsgNacQuarArray) ToSystemReplacemsgNacQuarArrayOutput() SystemReplacemsgNacQuarArrayOutput {
	return i.ToSystemReplacemsgNacQuarArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgNacQuarArray) ToSystemReplacemsgNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgNacQuarArrayOutput)
}

// SystemReplacemsgNacQuarMapInput is an input type that accepts SystemReplacemsgNacQuarMap and SystemReplacemsgNacQuarMapOutput values.
// You can construct a concrete instance of `SystemReplacemsgNacQuarMapInput` via:
//
//	SystemReplacemsgNacQuarMap{ "key": SystemReplacemsgNacQuarArgs{...} }
type SystemReplacemsgNacQuarMapInput interface {
	pulumi.Input

	ToSystemReplacemsgNacQuarMapOutput() SystemReplacemsgNacQuarMapOutput
	ToSystemReplacemsgNacQuarMapOutputWithContext(context.Context) SystemReplacemsgNacQuarMapOutput
}

type SystemReplacemsgNacQuarMap map[string]SystemReplacemsgNacQuarInput

func (SystemReplacemsgNacQuarMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgNacQuar)(nil)).Elem()
}

func (i SystemReplacemsgNacQuarMap) ToSystemReplacemsgNacQuarMapOutput() SystemReplacemsgNacQuarMapOutput {
	return i.ToSystemReplacemsgNacQuarMapOutputWithContext(context.Background())
}

func (i SystemReplacemsgNacQuarMap) ToSystemReplacemsgNacQuarMapOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgNacQuarMapOutput)
}

type SystemReplacemsgNacQuarOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgNacQuarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgNacQuar)(nil)).Elem()
}

func (o SystemReplacemsgNacQuarOutput) ToSystemReplacemsgNacQuarOutput() SystemReplacemsgNacQuarOutput {
	return o
}

func (o SystemReplacemsgNacQuarOutput) ToSystemReplacemsgNacQuarOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarOutput {
	return o
}

func (o SystemReplacemsgNacQuarOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemReplacemsgNacQuar) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgNacQuarOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgNacQuar) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

func (o SystemReplacemsgNacQuarOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgNacQuar) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

func (o SystemReplacemsgNacQuarOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgNacQuar) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

func (o SystemReplacemsgNacQuarOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemReplacemsgNacQuar) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgNacQuarArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgNacQuarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgNacQuar)(nil)).Elem()
}

func (o SystemReplacemsgNacQuarArrayOutput) ToSystemReplacemsgNacQuarArrayOutput() SystemReplacemsgNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsgNacQuarArrayOutput) ToSystemReplacemsgNacQuarArrayOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarArrayOutput {
	return o
}

func (o SystemReplacemsgNacQuarArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgNacQuarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemReplacemsgNacQuar {
		return vs[0].([]*SystemReplacemsgNacQuar)[vs[1].(int)]
	}).(SystemReplacemsgNacQuarOutput)
}

type SystemReplacemsgNacQuarMapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgNacQuarMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgNacQuar)(nil)).Elem()
}

func (o SystemReplacemsgNacQuarMapOutput) ToSystemReplacemsgNacQuarMapOutput() SystemReplacemsgNacQuarMapOutput {
	return o
}

func (o SystemReplacemsgNacQuarMapOutput) ToSystemReplacemsgNacQuarMapOutputWithContext(ctx context.Context) SystemReplacemsgNacQuarMapOutput {
	return o
}

func (o SystemReplacemsgNacQuarMapOutput) MapIndex(k pulumi.StringInput) SystemReplacemsgNacQuarOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemReplacemsgNacQuar {
		return vs[0].(map[string]*SystemReplacemsgNacQuar)[vs[1].(string)]
	}).(SystemReplacemsgNacQuarOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgNacQuarInput)(nil)).Elem(), &SystemReplacemsgNacQuar{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgNacQuarArrayInput)(nil)).Elem(), SystemReplacemsgNacQuarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgNacQuarMapInput)(nil)).Elem(), SystemReplacemsgNacQuarMap{})
	pulumi.RegisterOutputType(SystemReplacemsgNacQuarOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgNacQuarArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgNacQuarMapOutput{})
}
