// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallPolicy64 struct {
	pulumi.CustomResourceState

	Action               pulumi.StringOutput                 `pulumi:"action"`
	Comments             pulumi.StringPtrOutput              `pulumi:"comments"`
	Dstaddrs             FirewallPolicy64DstaddrArrayOutput  `pulumi:"dstaddrs"`
	Dstintf              pulumi.StringOutput                 `pulumi:"dstintf"`
	DynamicSortSubtable  pulumi.StringPtrOutput              `pulumi:"dynamicSortSubtable"`
	Fixedport            pulumi.StringOutput                 `pulumi:"fixedport"`
	GetAllTables         pulumi.StringPtrOutput              `pulumi:"getAllTables"`
	Ippool               pulumi.StringOutput                 `pulumi:"ippool"`
	Logtraffic           pulumi.StringOutput                 `pulumi:"logtraffic"`
	LogtrafficStart      pulumi.StringOutput                 `pulumi:"logtrafficStart"`
	Name                 pulumi.StringOutput                 `pulumi:"name"`
	PerIpShaper          pulumi.StringOutput                 `pulumi:"perIpShaper"`
	PermitAnyHost        pulumi.StringOutput                 `pulumi:"permitAnyHost"`
	Policyid             pulumi.IntOutput                    `pulumi:"policyid"`
	Poolnames            FirewallPolicy64PoolnameArrayOutput `pulumi:"poolnames"`
	Schedule             pulumi.StringOutput                 `pulumi:"schedule"`
	Services             FirewallPolicy64ServiceArrayOutput  `pulumi:"services"`
	Srcaddrs             FirewallPolicy64SrcaddrArrayOutput  `pulumi:"srcaddrs"`
	Srcintf              pulumi.StringOutput                 `pulumi:"srcintf"`
	Status               pulumi.StringOutput                 `pulumi:"status"`
	TcpMssReceiver       pulumi.IntOutput                    `pulumi:"tcpMssReceiver"`
	TcpMssSender         pulumi.IntOutput                    `pulumi:"tcpMssSender"`
	TrafficShaper        pulumi.StringOutput                 `pulumi:"trafficShaper"`
	TrafficShaperReverse pulumi.StringOutput                 `pulumi:"trafficShaperReverse"`
	Uuid                 pulumi.StringOutput                 `pulumi:"uuid"`
	Vdomparam            pulumi.StringPtrOutput              `pulumi:"vdomparam"`
}

// NewFirewallPolicy64 registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy64(ctx *pulumi.Context,
	name string, args *FirewallPolicy64Args, opts ...pulumi.ResourceOption) (*FirewallPolicy64, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Dstintf == nil {
		return nil, errors.New("invalid value for required argument 'Dstintf'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	if args.Srcintf == nil {
		return nil, errors.New("invalid value for required argument 'Srcintf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicy64
	err := ctx.RegisterResource("fortios:index/firewallPolicy64:FirewallPolicy64", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicy64 gets an existing FirewallPolicy64 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy64(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicy64State, opts ...pulumi.ResourceOption) (*FirewallPolicy64, error) {
	var resource FirewallPolicy64
	err := ctx.ReadResource("fortios:index/firewallPolicy64:FirewallPolicy64", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicy64 resources.
type firewallPolicy64State struct {
	Action               *string                    `pulumi:"action"`
	Comments             *string                    `pulumi:"comments"`
	Dstaddrs             []FirewallPolicy64Dstaddr  `pulumi:"dstaddrs"`
	Dstintf              *string                    `pulumi:"dstintf"`
	DynamicSortSubtable  *string                    `pulumi:"dynamicSortSubtable"`
	Fixedport            *string                    `pulumi:"fixedport"`
	GetAllTables         *string                    `pulumi:"getAllTables"`
	Ippool               *string                    `pulumi:"ippool"`
	Logtraffic           *string                    `pulumi:"logtraffic"`
	LogtrafficStart      *string                    `pulumi:"logtrafficStart"`
	Name                 *string                    `pulumi:"name"`
	PerIpShaper          *string                    `pulumi:"perIpShaper"`
	PermitAnyHost        *string                    `pulumi:"permitAnyHost"`
	Policyid             *int                       `pulumi:"policyid"`
	Poolnames            []FirewallPolicy64Poolname `pulumi:"poolnames"`
	Schedule             *string                    `pulumi:"schedule"`
	Services             []FirewallPolicy64Service  `pulumi:"services"`
	Srcaddrs             []FirewallPolicy64Srcaddr  `pulumi:"srcaddrs"`
	Srcintf              *string                    `pulumi:"srcintf"`
	Status               *string                    `pulumi:"status"`
	TcpMssReceiver       *int                       `pulumi:"tcpMssReceiver"`
	TcpMssSender         *int                       `pulumi:"tcpMssSender"`
	TrafficShaper        *string                    `pulumi:"trafficShaper"`
	TrafficShaperReverse *string                    `pulumi:"trafficShaperReverse"`
	Uuid                 *string                    `pulumi:"uuid"`
	Vdomparam            *string                    `pulumi:"vdomparam"`
}

type FirewallPolicy64State struct {
	Action               pulumi.StringPtrInput
	Comments             pulumi.StringPtrInput
	Dstaddrs             FirewallPolicy64DstaddrArrayInput
	Dstintf              pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Fixedport            pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	Ippool               pulumi.StringPtrInput
	Logtraffic           pulumi.StringPtrInput
	LogtrafficStart      pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	PerIpShaper          pulumi.StringPtrInput
	PermitAnyHost        pulumi.StringPtrInput
	Policyid             pulumi.IntPtrInput
	Poolnames            FirewallPolicy64PoolnameArrayInput
	Schedule             pulumi.StringPtrInput
	Services             FirewallPolicy64ServiceArrayInput
	Srcaddrs             FirewallPolicy64SrcaddrArrayInput
	Srcintf              pulumi.StringPtrInput
	Status               pulumi.StringPtrInput
	TcpMssReceiver       pulumi.IntPtrInput
	TcpMssSender         pulumi.IntPtrInput
	TrafficShaper        pulumi.StringPtrInput
	TrafficShaperReverse pulumi.StringPtrInput
	Uuid                 pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicy64State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicy64State)(nil)).Elem()
}

type firewallPolicy64Args struct {
	Action               *string                    `pulumi:"action"`
	Comments             *string                    `pulumi:"comments"`
	Dstaddrs             []FirewallPolicy64Dstaddr  `pulumi:"dstaddrs"`
	Dstintf              string                     `pulumi:"dstintf"`
	DynamicSortSubtable  *string                    `pulumi:"dynamicSortSubtable"`
	Fixedport            *string                    `pulumi:"fixedport"`
	GetAllTables         *string                    `pulumi:"getAllTables"`
	Ippool               *string                    `pulumi:"ippool"`
	Logtraffic           *string                    `pulumi:"logtraffic"`
	LogtrafficStart      *string                    `pulumi:"logtrafficStart"`
	Name                 *string                    `pulumi:"name"`
	PerIpShaper          *string                    `pulumi:"perIpShaper"`
	PermitAnyHost        *string                    `pulumi:"permitAnyHost"`
	Policyid             *int                       `pulumi:"policyid"`
	Poolnames            []FirewallPolicy64Poolname `pulumi:"poolnames"`
	Schedule             string                     `pulumi:"schedule"`
	Services             []FirewallPolicy64Service  `pulumi:"services"`
	Srcaddrs             []FirewallPolicy64Srcaddr  `pulumi:"srcaddrs"`
	Srcintf              string                     `pulumi:"srcintf"`
	Status               *string                    `pulumi:"status"`
	TcpMssReceiver       *int                       `pulumi:"tcpMssReceiver"`
	TcpMssSender         *int                       `pulumi:"tcpMssSender"`
	TrafficShaper        *string                    `pulumi:"trafficShaper"`
	TrafficShaperReverse *string                    `pulumi:"trafficShaperReverse"`
	Uuid                 *string                    `pulumi:"uuid"`
	Vdomparam            *string                    `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallPolicy64 resource.
type FirewallPolicy64Args struct {
	Action               pulumi.StringPtrInput
	Comments             pulumi.StringPtrInput
	Dstaddrs             FirewallPolicy64DstaddrArrayInput
	Dstintf              pulumi.StringInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Fixedport            pulumi.StringPtrInput
	GetAllTables         pulumi.StringPtrInput
	Ippool               pulumi.StringPtrInput
	Logtraffic           pulumi.StringPtrInput
	LogtrafficStart      pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	PerIpShaper          pulumi.StringPtrInput
	PermitAnyHost        pulumi.StringPtrInput
	Policyid             pulumi.IntPtrInput
	Poolnames            FirewallPolicy64PoolnameArrayInput
	Schedule             pulumi.StringInput
	Services             FirewallPolicy64ServiceArrayInput
	Srcaddrs             FirewallPolicy64SrcaddrArrayInput
	Srcintf              pulumi.StringInput
	Status               pulumi.StringPtrInput
	TcpMssReceiver       pulumi.IntPtrInput
	TcpMssSender         pulumi.IntPtrInput
	TrafficShaper        pulumi.StringPtrInput
	TrafficShaperReverse pulumi.StringPtrInput
	Uuid                 pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallPolicy64Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicy64Args)(nil)).Elem()
}

type FirewallPolicy64Input interface {
	pulumi.Input

	ToFirewallPolicy64Output() FirewallPolicy64Output
	ToFirewallPolicy64OutputWithContext(ctx context.Context) FirewallPolicy64Output
}

func (*FirewallPolicy64) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy64)(nil)).Elem()
}

func (i *FirewallPolicy64) ToFirewallPolicy64Output() FirewallPolicy64Output {
	return i.ToFirewallPolicy64OutputWithContext(context.Background())
}

func (i *FirewallPolicy64) ToFirewallPolicy64OutputWithContext(ctx context.Context) FirewallPolicy64Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64Output)
}

// FirewallPolicy64ArrayInput is an input type that accepts FirewallPolicy64Array and FirewallPolicy64ArrayOutput values.
// You can construct a concrete instance of `FirewallPolicy64ArrayInput` via:
//
//	FirewallPolicy64Array{ FirewallPolicy64Args{...} }
type FirewallPolicy64ArrayInput interface {
	pulumi.Input

	ToFirewallPolicy64ArrayOutput() FirewallPolicy64ArrayOutput
	ToFirewallPolicy64ArrayOutputWithContext(context.Context) FirewallPolicy64ArrayOutput
}

type FirewallPolicy64Array []FirewallPolicy64Input

func (FirewallPolicy64Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy64)(nil)).Elem()
}

func (i FirewallPolicy64Array) ToFirewallPolicy64ArrayOutput() FirewallPolicy64ArrayOutput {
	return i.ToFirewallPolicy64ArrayOutputWithContext(context.Background())
}

func (i FirewallPolicy64Array) ToFirewallPolicy64ArrayOutputWithContext(ctx context.Context) FirewallPolicy64ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64ArrayOutput)
}

// FirewallPolicy64MapInput is an input type that accepts FirewallPolicy64Map and FirewallPolicy64MapOutput values.
// You can construct a concrete instance of `FirewallPolicy64MapInput` via:
//
//	FirewallPolicy64Map{ "key": FirewallPolicy64Args{...} }
type FirewallPolicy64MapInput interface {
	pulumi.Input

	ToFirewallPolicy64MapOutput() FirewallPolicy64MapOutput
	ToFirewallPolicy64MapOutputWithContext(context.Context) FirewallPolicy64MapOutput
}

type FirewallPolicy64Map map[string]FirewallPolicy64Input

func (FirewallPolicy64Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy64)(nil)).Elem()
}

func (i FirewallPolicy64Map) ToFirewallPolicy64MapOutput() FirewallPolicy64MapOutput {
	return i.ToFirewallPolicy64MapOutputWithContext(context.Background())
}

func (i FirewallPolicy64Map) ToFirewallPolicy64MapOutputWithContext(ctx context.Context) FirewallPolicy64MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicy64MapOutput)
}

type FirewallPolicy64Output struct{ *pulumi.OutputState }

func (FirewallPolicy64Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy64)(nil)).Elem()
}

func (o FirewallPolicy64Output) ToFirewallPolicy64Output() FirewallPolicy64Output {
	return o
}

func (o FirewallPolicy64Output) ToFirewallPolicy64OutputWithContext(ctx context.Context) FirewallPolicy64Output {
	return o
}

func (o FirewallPolicy64Output) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicy64Output) Dstaddrs() FirewallPolicy64DstaddrArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy64) FirewallPolicy64DstaddrArrayOutput { return v.Dstaddrs }).(FirewallPolicy64DstaddrArrayOutput)
}

func (o FirewallPolicy64Output) Dstintf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Dstintf }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicy64Output) Fixedport() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Fixedport }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicy64Output) Ippool() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Ippool }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Logtraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Logtraffic }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) LogtrafficStart() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.LogtrafficStart }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) PerIpShaper() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.PerIpShaper }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) PermitAnyHost() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.PermitAnyHost }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Policyid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.IntOutput { return v.Policyid }).(pulumi.IntOutput)
}

func (o FirewallPolicy64Output) Poolnames() FirewallPolicy64PoolnameArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy64) FirewallPolicy64PoolnameArrayOutput { return v.Poolnames }).(FirewallPolicy64PoolnameArrayOutput)
}

func (o FirewallPolicy64Output) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Services() FirewallPolicy64ServiceArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy64) FirewallPolicy64ServiceArrayOutput { return v.Services }).(FirewallPolicy64ServiceArrayOutput)
}

func (o FirewallPolicy64Output) Srcaddrs() FirewallPolicy64SrcaddrArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy64) FirewallPolicy64SrcaddrArrayOutput { return v.Srcaddrs }).(FirewallPolicy64SrcaddrArrayOutput)
}

func (o FirewallPolicy64Output) Srcintf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Srcintf }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) TcpMssReceiver() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.IntOutput { return v.TcpMssReceiver }).(pulumi.IntOutput)
}

func (o FirewallPolicy64Output) TcpMssSender() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.IntOutput { return v.TcpMssSender }).(pulumi.IntOutput)
}

func (o FirewallPolicy64Output) TrafficShaper() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.TrafficShaper }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) TrafficShaperReverse() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.TrafficShaperReverse }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o FirewallPolicy64Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy64) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallPolicy64ArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy64)(nil)).Elem()
}

func (o FirewallPolicy64ArrayOutput) ToFirewallPolicy64ArrayOutput() FirewallPolicy64ArrayOutput {
	return o
}

func (o FirewallPolicy64ArrayOutput) ToFirewallPolicy64ArrayOutputWithContext(ctx context.Context) FirewallPolicy64ArrayOutput {
	return o
}

func (o FirewallPolicy64ArrayOutput) Index(i pulumi.IntInput) FirewallPolicy64Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallPolicy64 {
		return vs[0].([]*FirewallPolicy64)[vs[1].(int)]
	}).(FirewallPolicy64Output)
}

type FirewallPolicy64MapOutput struct{ *pulumi.OutputState }

func (FirewallPolicy64MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy64)(nil)).Elem()
}

func (o FirewallPolicy64MapOutput) ToFirewallPolicy64MapOutput() FirewallPolicy64MapOutput {
	return o
}

func (o FirewallPolicy64MapOutput) ToFirewallPolicy64MapOutputWithContext(ctx context.Context) FirewallPolicy64MapOutput {
	return o
}

func (o FirewallPolicy64MapOutput) MapIndex(k pulumi.StringInput) FirewallPolicy64Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallPolicy64 {
		return vs[0].(map[string]*FirewallPolicy64)[vs[1].(string)]
	}).(FirewallPolicy64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64Input)(nil)).Elem(), &FirewallPolicy64{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64ArrayInput)(nil)).Elem(), FirewallPolicy64Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicy64MapInput)(nil)).Elem(), FirewallPolicy64Map{})
	pulumi.RegisterOutputType(FirewallPolicy64Output{})
	pulumi.RegisterOutputType(FirewallPolicy64ArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicy64MapOutput{})
}
