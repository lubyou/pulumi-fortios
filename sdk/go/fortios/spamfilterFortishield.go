// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SpamfilterFortishield struct {
	pulumi.CustomResourceState

	SpamSubmitForce   pulumi.StringOutput    `pulumi:"spamSubmitForce"`
	SpamSubmitSrv     pulumi.StringOutput    `pulumi:"spamSubmitSrv"`
	SpamSubmitTxt2htm pulumi.StringOutput    `pulumi:"spamSubmitTxt2htm"`
	Vdomparam         pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSpamfilterFortishield registers a new resource with the given unique name, arguments, and options.
func NewSpamfilterFortishield(ctx *pulumi.Context,
	name string, args *SpamfilterFortishieldArgs, opts ...pulumi.ResourceOption) (*SpamfilterFortishield, error) {
	if args == nil {
		args = &SpamfilterFortishieldArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SpamfilterFortishield
	err := ctx.RegisterResource("fortios:index/spamfilterFortishield:SpamfilterFortishield", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpamfilterFortishield gets an existing SpamfilterFortishield resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpamfilterFortishield(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpamfilterFortishieldState, opts ...pulumi.ResourceOption) (*SpamfilterFortishield, error) {
	var resource SpamfilterFortishield
	err := ctx.ReadResource("fortios:index/spamfilterFortishield:SpamfilterFortishield", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpamfilterFortishield resources.
type spamfilterFortishieldState struct {
	SpamSubmitForce   *string `pulumi:"spamSubmitForce"`
	SpamSubmitSrv     *string `pulumi:"spamSubmitSrv"`
	SpamSubmitTxt2htm *string `pulumi:"spamSubmitTxt2htm"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

type SpamfilterFortishieldState struct {
	SpamSubmitForce   pulumi.StringPtrInput
	SpamSubmitSrv     pulumi.StringPtrInput
	SpamSubmitTxt2htm pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (SpamfilterFortishieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterFortishieldState)(nil)).Elem()
}

type spamfilterFortishieldArgs struct {
	SpamSubmitForce   *string `pulumi:"spamSubmitForce"`
	SpamSubmitSrv     *string `pulumi:"spamSubmitSrv"`
	SpamSubmitTxt2htm *string `pulumi:"spamSubmitTxt2htm"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SpamfilterFortishield resource.
type SpamfilterFortishieldArgs struct {
	SpamSubmitForce   pulumi.StringPtrInput
	SpamSubmitSrv     pulumi.StringPtrInput
	SpamSubmitTxt2htm pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (SpamfilterFortishieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterFortishieldArgs)(nil)).Elem()
}

type SpamfilterFortishieldInput interface {
	pulumi.Input

	ToSpamfilterFortishieldOutput() SpamfilterFortishieldOutput
	ToSpamfilterFortishieldOutputWithContext(ctx context.Context) SpamfilterFortishieldOutput
}

func (*SpamfilterFortishield) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterFortishield)(nil)).Elem()
}

func (i *SpamfilterFortishield) ToSpamfilterFortishieldOutput() SpamfilterFortishieldOutput {
	return i.ToSpamfilterFortishieldOutputWithContext(context.Background())
}

func (i *SpamfilterFortishield) ToSpamfilterFortishieldOutputWithContext(ctx context.Context) SpamfilterFortishieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterFortishieldOutput)
}

// SpamfilterFortishieldArrayInput is an input type that accepts SpamfilterFortishieldArray and SpamfilterFortishieldArrayOutput values.
// You can construct a concrete instance of `SpamfilterFortishieldArrayInput` via:
//
//	SpamfilterFortishieldArray{ SpamfilterFortishieldArgs{...} }
type SpamfilterFortishieldArrayInput interface {
	pulumi.Input

	ToSpamfilterFortishieldArrayOutput() SpamfilterFortishieldArrayOutput
	ToSpamfilterFortishieldArrayOutputWithContext(context.Context) SpamfilterFortishieldArrayOutput
}

type SpamfilterFortishieldArray []SpamfilterFortishieldInput

func (SpamfilterFortishieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterFortishield)(nil)).Elem()
}

func (i SpamfilterFortishieldArray) ToSpamfilterFortishieldArrayOutput() SpamfilterFortishieldArrayOutput {
	return i.ToSpamfilterFortishieldArrayOutputWithContext(context.Background())
}

func (i SpamfilterFortishieldArray) ToSpamfilterFortishieldArrayOutputWithContext(ctx context.Context) SpamfilterFortishieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterFortishieldArrayOutput)
}

// SpamfilterFortishieldMapInput is an input type that accepts SpamfilterFortishieldMap and SpamfilterFortishieldMapOutput values.
// You can construct a concrete instance of `SpamfilterFortishieldMapInput` via:
//
//	SpamfilterFortishieldMap{ "key": SpamfilterFortishieldArgs{...} }
type SpamfilterFortishieldMapInput interface {
	pulumi.Input

	ToSpamfilterFortishieldMapOutput() SpamfilterFortishieldMapOutput
	ToSpamfilterFortishieldMapOutputWithContext(context.Context) SpamfilterFortishieldMapOutput
}

type SpamfilterFortishieldMap map[string]SpamfilterFortishieldInput

func (SpamfilterFortishieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterFortishield)(nil)).Elem()
}

func (i SpamfilterFortishieldMap) ToSpamfilterFortishieldMapOutput() SpamfilterFortishieldMapOutput {
	return i.ToSpamfilterFortishieldMapOutputWithContext(context.Background())
}

func (i SpamfilterFortishieldMap) ToSpamfilterFortishieldMapOutputWithContext(ctx context.Context) SpamfilterFortishieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterFortishieldMapOutput)
}

type SpamfilterFortishieldOutput struct{ *pulumi.OutputState }

func (SpamfilterFortishieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterFortishield)(nil)).Elem()
}

func (o SpamfilterFortishieldOutput) ToSpamfilterFortishieldOutput() SpamfilterFortishieldOutput {
	return o
}

func (o SpamfilterFortishieldOutput) ToSpamfilterFortishieldOutputWithContext(ctx context.Context) SpamfilterFortishieldOutput {
	return o
}

func (o SpamfilterFortishieldOutput) SpamSubmitForce() pulumi.StringOutput {
	return o.ApplyT(func(v *SpamfilterFortishield) pulumi.StringOutput { return v.SpamSubmitForce }).(pulumi.StringOutput)
}

func (o SpamfilterFortishieldOutput) SpamSubmitSrv() pulumi.StringOutput {
	return o.ApplyT(func(v *SpamfilterFortishield) pulumi.StringOutput { return v.SpamSubmitSrv }).(pulumi.StringOutput)
}

func (o SpamfilterFortishieldOutput) SpamSubmitTxt2htm() pulumi.StringOutput {
	return o.ApplyT(func(v *SpamfilterFortishield) pulumi.StringOutput { return v.SpamSubmitTxt2htm }).(pulumi.StringOutput)
}

func (o SpamfilterFortishieldOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpamfilterFortishield) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SpamfilterFortishieldArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterFortishieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterFortishield)(nil)).Elem()
}

func (o SpamfilterFortishieldArrayOutput) ToSpamfilterFortishieldArrayOutput() SpamfilterFortishieldArrayOutput {
	return o
}

func (o SpamfilterFortishieldArrayOutput) ToSpamfilterFortishieldArrayOutputWithContext(ctx context.Context) SpamfilterFortishieldArrayOutput {
	return o
}

func (o SpamfilterFortishieldArrayOutput) Index(i pulumi.IntInput) SpamfilterFortishieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpamfilterFortishield {
		return vs[0].([]*SpamfilterFortishield)[vs[1].(int)]
	}).(SpamfilterFortishieldOutput)
}

type SpamfilterFortishieldMapOutput struct{ *pulumi.OutputState }

func (SpamfilterFortishieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterFortishield)(nil)).Elem()
}

func (o SpamfilterFortishieldMapOutput) ToSpamfilterFortishieldMapOutput() SpamfilterFortishieldMapOutput {
	return o
}

func (o SpamfilterFortishieldMapOutput) ToSpamfilterFortishieldMapOutputWithContext(ctx context.Context) SpamfilterFortishieldMapOutput {
	return o
}

func (o SpamfilterFortishieldMapOutput) MapIndex(k pulumi.StringInput) SpamfilterFortishieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpamfilterFortishield {
		return vs[0].(map[string]*SpamfilterFortishield)[vs[1].(string)]
	}).(SpamfilterFortishieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterFortishieldInput)(nil)).Elem(), &SpamfilterFortishield{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterFortishieldArrayInput)(nil)).Elem(), SpamfilterFortishieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterFortishieldMapInput)(nil)).Elem(), SpamfilterFortishieldMap{})
	pulumi.RegisterOutputType(SpamfilterFortishieldOutput{})
	pulumi.RegisterOutputType(SpamfilterFortishieldArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterFortishieldMapOutput{})
}
