// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogFortianalyzerSetting struct {
	pulumi.CustomResourceState

	__changeIp                pulumi.IntOutput                         `pulumi:"__changeIp"`
	AccessConfig              pulumi.StringOutput                      `pulumi:"accessConfig"`
	AltServer                 pulumi.StringOutput                      `pulumi:"altServer"`
	Certificate               pulumi.StringOutput                      `pulumi:"certificate"`
	CertificateVerification   pulumi.StringOutput                      `pulumi:"certificateVerification"`
	ConnTimeout               pulumi.IntOutput                         `pulumi:"connTimeout"`
	DynamicSortSubtable       pulumi.StringPtrOutput                   `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              pulumi.StringOutput                      `pulumi:"encAlgorithm"`
	FallbackToPrimary         pulumi.StringOutput                      `pulumi:"fallbackToPrimary"`
	FazType                   pulumi.IntOutput                         `pulumi:"fazType"`
	GetAllTables              pulumi.StringPtrOutput                   `pulumi:"getAllTables"`
	HmacAlgorithm             pulumi.StringOutput                      `pulumi:"hmacAlgorithm"`
	Interface                 pulumi.StringOutput                      `pulumi:"interface"`
	InterfaceSelectMethod     pulumi.StringOutput                      `pulumi:"interfaceSelectMethod"`
	IpsArchive                pulumi.StringOutput                      `pulumi:"ipsArchive"`
	MaxLogRate                pulumi.IntOutput                         `pulumi:"maxLogRate"`
	MgmtName                  pulumi.StringOutput                      `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod pulumi.IntOutput                         `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    pulumi.IntOutput                         `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              pulumi.StringOutput                      `pulumi:"presharedKey"`
	Priority                  pulumi.StringOutput                      `pulumi:"priority"`
	Reliable                  pulumi.StringOutput                      `pulumi:"reliable"`
	Serials                   LogFortianalyzerSettingSerialArrayOutput `pulumi:"serials"`
	Server                    pulumi.StringOutput                      `pulumi:"server"`
	SourceIp                  pulumi.StringOutput                      `pulumi:"sourceIp"`
	SslMinProtoVersion        pulumi.StringOutput                      `pulumi:"sslMinProtoVersion"`
	Status                    pulumi.StringOutput                      `pulumi:"status"`
	UploadDay                 pulumi.StringOutput                      `pulumi:"uploadDay"`
	UploadInterval            pulumi.StringOutput                      `pulumi:"uploadInterval"`
	UploadOption              pulumi.StringOutput                      `pulumi:"uploadOption"`
	UploadTime                pulumi.StringOutput                      `pulumi:"uploadTime"`
	Vdomparam                 pulumi.StringPtrOutput                   `pulumi:"vdomparam"`
}

// NewLogFortianalyzerSetting registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzerSetting(ctx *pulumi.Context,
	name string, args *LogFortianalyzerSettingArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzerSetting, error) {
	if args == nil {
		args = &LogFortianalyzerSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogFortianalyzerSetting
	err := ctx.RegisterResource("fortios:index/logFortianalyzerSetting:LogFortianalyzerSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzerSetting gets an existing LogFortianalyzerSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzerSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzerSettingState, opts ...pulumi.ResourceOption) (*LogFortianalyzerSetting, error) {
	var resource LogFortianalyzerSetting
	err := ctx.ReadResource("fortios:index/logFortianalyzerSetting:LogFortianalyzerSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzerSetting resources.
type logFortianalyzerSettingState struct {
	__changeIp                *int                            `pulumi:"__changeIp"`
	AccessConfig              *string                         `pulumi:"accessConfig"`
	AltServer                 *string                         `pulumi:"altServer"`
	Certificate               *string                         `pulumi:"certificate"`
	CertificateVerification   *string                         `pulumi:"certificateVerification"`
	ConnTimeout               *int                            `pulumi:"connTimeout"`
	DynamicSortSubtable       *string                         `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              *string                         `pulumi:"encAlgorithm"`
	FallbackToPrimary         *string                         `pulumi:"fallbackToPrimary"`
	FazType                   *int                            `pulumi:"fazType"`
	GetAllTables              *string                         `pulumi:"getAllTables"`
	HmacAlgorithm             *string                         `pulumi:"hmacAlgorithm"`
	Interface                 *string                         `pulumi:"interface"`
	InterfaceSelectMethod     *string                         `pulumi:"interfaceSelectMethod"`
	IpsArchive                *string                         `pulumi:"ipsArchive"`
	MaxLogRate                *int                            `pulumi:"maxLogRate"`
	MgmtName                  *string                         `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod *int                            `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    *int                            `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              *string                         `pulumi:"presharedKey"`
	Priority                  *string                         `pulumi:"priority"`
	Reliable                  *string                         `pulumi:"reliable"`
	Serials                   []LogFortianalyzerSettingSerial `pulumi:"serials"`
	Server                    *string                         `pulumi:"server"`
	SourceIp                  *string                         `pulumi:"sourceIp"`
	SslMinProtoVersion        *string                         `pulumi:"sslMinProtoVersion"`
	Status                    *string                         `pulumi:"status"`
	UploadDay                 *string                         `pulumi:"uploadDay"`
	UploadInterval            *string                         `pulumi:"uploadInterval"`
	UploadOption              *string                         `pulumi:"uploadOption"`
	UploadTime                *string                         `pulumi:"uploadTime"`
	Vdomparam                 *string                         `pulumi:"vdomparam"`
}

type LogFortianalyzerSettingState struct {
	__changeIp                pulumi.IntPtrInput
	AccessConfig              pulumi.StringPtrInput
	AltServer                 pulumi.StringPtrInput
	Certificate               pulumi.StringPtrInput
	CertificateVerification   pulumi.StringPtrInput
	ConnTimeout               pulumi.IntPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	EncAlgorithm              pulumi.StringPtrInput
	FallbackToPrimary         pulumi.StringPtrInput
	FazType                   pulumi.IntPtrInput
	GetAllTables              pulumi.StringPtrInput
	HmacAlgorithm             pulumi.StringPtrInput
	Interface                 pulumi.StringPtrInput
	InterfaceSelectMethod     pulumi.StringPtrInput
	IpsArchive                pulumi.StringPtrInput
	MaxLogRate                pulumi.IntPtrInput
	MgmtName                  pulumi.StringPtrInput
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	MonitorKeepalivePeriod    pulumi.IntPtrInput
	PresharedKey              pulumi.StringPtrInput
	Priority                  pulumi.StringPtrInput
	Reliable                  pulumi.StringPtrInput
	Serials                   LogFortianalyzerSettingSerialArrayInput
	Server                    pulumi.StringPtrInput
	SourceIp                  pulumi.StringPtrInput
	SslMinProtoVersion        pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	UploadDay                 pulumi.StringPtrInput
	UploadInterval            pulumi.StringPtrInput
	UploadOption              pulumi.StringPtrInput
	UploadTime                pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (LogFortianalyzerSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerSettingState)(nil)).Elem()
}

type logFortianalyzerSettingArgs struct {
	__changeIp                *int                            `pulumi:"__changeIp"`
	AccessConfig              *string                         `pulumi:"accessConfig"`
	AltServer                 *string                         `pulumi:"altServer"`
	Certificate               *string                         `pulumi:"certificate"`
	CertificateVerification   *string                         `pulumi:"certificateVerification"`
	ConnTimeout               *int                            `pulumi:"connTimeout"`
	DynamicSortSubtable       *string                         `pulumi:"dynamicSortSubtable"`
	EncAlgorithm              *string                         `pulumi:"encAlgorithm"`
	FallbackToPrimary         *string                         `pulumi:"fallbackToPrimary"`
	FazType                   *int                            `pulumi:"fazType"`
	GetAllTables              *string                         `pulumi:"getAllTables"`
	HmacAlgorithm             *string                         `pulumi:"hmacAlgorithm"`
	Interface                 *string                         `pulumi:"interface"`
	InterfaceSelectMethod     *string                         `pulumi:"interfaceSelectMethod"`
	IpsArchive                *string                         `pulumi:"ipsArchive"`
	MaxLogRate                *int                            `pulumi:"maxLogRate"`
	MgmtName                  *string                         `pulumi:"mgmtName"`
	MonitorFailureRetryPeriod *int                            `pulumi:"monitorFailureRetryPeriod"`
	MonitorKeepalivePeriod    *int                            `pulumi:"monitorKeepalivePeriod"`
	PresharedKey              *string                         `pulumi:"presharedKey"`
	Priority                  *string                         `pulumi:"priority"`
	Reliable                  *string                         `pulumi:"reliable"`
	Serials                   []LogFortianalyzerSettingSerial `pulumi:"serials"`
	Server                    *string                         `pulumi:"server"`
	SourceIp                  *string                         `pulumi:"sourceIp"`
	SslMinProtoVersion        *string                         `pulumi:"sslMinProtoVersion"`
	Status                    *string                         `pulumi:"status"`
	UploadDay                 *string                         `pulumi:"uploadDay"`
	UploadInterval            *string                         `pulumi:"uploadInterval"`
	UploadOption              *string                         `pulumi:"uploadOption"`
	UploadTime                *string                         `pulumi:"uploadTime"`
	Vdomparam                 *string                         `pulumi:"vdomparam"`
}

// The set of arguments for constructing a LogFortianalyzerSetting resource.
type LogFortianalyzerSettingArgs struct {
	__changeIp                pulumi.IntPtrInput
	AccessConfig              pulumi.StringPtrInput
	AltServer                 pulumi.StringPtrInput
	Certificate               pulumi.StringPtrInput
	CertificateVerification   pulumi.StringPtrInput
	ConnTimeout               pulumi.IntPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	EncAlgorithm              pulumi.StringPtrInput
	FallbackToPrimary         pulumi.StringPtrInput
	FazType                   pulumi.IntPtrInput
	GetAllTables              pulumi.StringPtrInput
	HmacAlgorithm             pulumi.StringPtrInput
	Interface                 pulumi.StringPtrInput
	InterfaceSelectMethod     pulumi.StringPtrInput
	IpsArchive                pulumi.StringPtrInput
	MaxLogRate                pulumi.IntPtrInput
	MgmtName                  pulumi.StringPtrInput
	MonitorFailureRetryPeriod pulumi.IntPtrInput
	MonitorKeepalivePeriod    pulumi.IntPtrInput
	PresharedKey              pulumi.StringPtrInput
	Priority                  pulumi.StringPtrInput
	Reliable                  pulumi.StringPtrInput
	Serials                   LogFortianalyzerSettingSerialArrayInput
	Server                    pulumi.StringPtrInput
	SourceIp                  pulumi.StringPtrInput
	SslMinProtoVersion        pulumi.StringPtrInput
	Status                    pulumi.StringPtrInput
	UploadDay                 pulumi.StringPtrInput
	UploadInterval            pulumi.StringPtrInput
	UploadOption              pulumi.StringPtrInput
	UploadTime                pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (LogFortianalyzerSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzerSettingArgs)(nil)).Elem()
}

type LogFortianalyzerSettingInput interface {
	pulumi.Input

	ToLogFortianalyzerSettingOutput() LogFortianalyzerSettingOutput
	ToLogFortianalyzerSettingOutputWithContext(ctx context.Context) LogFortianalyzerSettingOutput
}

func (*LogFortianalyzerSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerSetting)(nil)).Elem()
}

func (i *LogFortianalyzerSetting) ToLogFortianalyzerSettingOutput() LogFortianalyzerSettingOutput {
	return i.ToLogFortianalyzerSettingOutputWithContext(context.Background())
}

func (i *LogFortianalyzerSetting) ToLogFortianalyzerSettingOutputWithContext(ctx context.Context) LogFortianalyzerSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerSettingOutput)
}

// LogFortianalyzerSettingArrayInput is an input type that accepts LogFortianalyzerSettingArray and LogFortianalyzerSettingArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzerSettingArrayInput` via:
//
//	LogFortianalyzerSettingArray{ LogFortianalyzerSettingArgs{...} }
type LogFortianalyzerSettingArrayInput interface {
	pulumi.Input

	ToLogFortianalyzerSettingArrayOutput() LogFortianalyzerSettingArrayOutput
	ToLogFortianalyzerSettingArrayOutputWithContext(context.Context) LogFortianalyzerSettingArrayOutput
}

type LogFortianalyzerSettingArray []LogFortianalyzerSettingInput

func (LogFortianalyzerSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerSetting)(nil)).Elem()
}

func (i LogFortianalyzerSettingArray) ToLogFortianalyzerSettingArrayOutput() LogFortianalyzerSettingArrayOutput {
	return i.ToLogFortianalyzerSettingArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzerSettingArray) ToLogFortianalyzerSettingArrayOutputWithContext(ctx context.Context) LogFortianalyzerSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerSettingArrayOutput)
}

// LogFortianalyzerSettingMapInput is an input type that accepts LogFortianalyzerSettingMap and LogFortianalyzerSettingMapOutput values.
// You can construct a concrete instance of `LogFortianalyzerSettingMapInput` via:
//
//	LogFortianalyzerSettingMap{ "key": LogFortianalyzerSettingArgs{...} }
type LogFortianalyzerSettingMapInput interface {
	pulumi.Input

	ToLogFortianalyzerSettingMapOutput() LogFortianalyzerSettingMapOutput
	ToLogFortianalyzerSettingMapOutputWithContext(context.Context) LogFortianalyzerSettingMapOutput
}

type LogFortianalyzerSettingMap map[string]LogFortianalyzerSettingInput

func (LogFortianalyzerSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerSetting)(nil)).Elem()
}

func (i LogFortianalyzerSettingMap) ToLogFortianalyzerSettingMapOutput() LogFortianalyzerSettingMapOutput {
	return i.ToLogFortianalyzerSettingMapOutputWithContext(context.Background())
}

func (i LogFortianalyzerSettingMap) ToLogFortianalyzerSettingMapOutputWithContext(ctx context.Context) LogFortianalyzerSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzerSettingMapOutput)
}

type LogFortianalyzerSettingOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzerSetting)(nil)).Elem()
}

func (o LogFortianalyzerSettingOutput) ToLogFortianalyzerSettingOutput() LogFortianalyzerSettingOutput {
	return o
}

func (o LogFortianalyzerSettingOutput) ToLogFortianalyzerSettingOutputWithContext(ctx context.Context) LogFortianalyzerSettingOutput {
	return o
}

func (o LogFortianalyzerSettingOutput) __changeIp() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.__changeIp }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) AccessConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.AccessConfig }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) AltServer() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.AltServer }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Certificate }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) CertificateVerification() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.CertificateVerification }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) ConnTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.ConnTimeout }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzerSettingOutput) EncAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.EncAlgorithm }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) FallbackToPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.FallbackToPrimary }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) FazType() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.FazType }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzerSettingOutput) HmacAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.HmacAlgorithm }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) IpsArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.IpsArchive }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) MaxLogRate() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.MaxLogRate }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) MgmtName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.MgmtName }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) MonitorFailureRetryPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.MonitorFailureRetryPeriod }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) MonitorKeepalivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.IntOutput { return v.MonitorKeepalivePeriod }).(pulumi.IntOutput)
}

func (o LogFortianalyzerSettingOutput) PresharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.PresharedKey }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Reliable() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Reliable }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Serials() LogFortianalyzerSettingSerialArrayOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) LogFortianalyzerSettingSerialArrayOutput { return v.Serials }).(LogFortianalyzerSettingSerialArrayOutput)
}

func (o LogFortianalyzerSettingOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) UploadDay() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.UploadDay }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) UploadInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.UploadInterval }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) UploadOption() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.UploadOption }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) UploadTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringOutput { return v.UploadTime }).(pulumi.StringOutput)
}

func (o LogFortianalyzerSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzerSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type LogFortianalyzerSettingArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzerSetting)(nil)).Elem()
}

func (o LogFortianalyzerSettingArrayOutput) ToLogFortianalyzerSettingArrayOutput() LogFortianalyzerSettingArrayOutput {
	return o
}

func (o LogFortianalyzerSettingArrayOutput) ToLogFortianalyzerSettingArrayOutputWithContext(ctx context.Context) LogFortianalyzerSettingArrayOutput {
	return o
}

func (o LogFortianalyzerSettingArrayOutput) Index(i pulumi.IntInput) LogFortianalyzerSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortianalyzerSetting {
		return vs[0].([]*LogFortianalyzerSetting)[vs[1].(int)]
	}).(LogFortianalyzerSettingOutput)
}

type LogFortianalyzerSettingMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzerSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzerSetting)(nil)).Elem()
}

func (o LogFortianalyzerSettingMapOutput) ToLogFortianalyzerSettingMapOutput() LogFortianalyzerSettingMapOutput {
	return o
}

func (o LogFortianalyzerSettingMapOutput) ToLogFortianalyzerSettingMapOutputWithContext(ctx context.Context) LogFortianalyzerSettingMapOutput {
	return o
}

func (o LogFortianalyzerSettingMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzerSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortianalyzerSetting {
		return vs[0].(map[string]*LogFortianalyzerSetting)[vs[1].(string)]
	}).(LogFortianalyzerSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerSettingInput)(nil)).Elem(), &LogFortianalyzerSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerSettingArrayInput)(nil)).Elem(), LogFortianalyzerSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzerSettingMapInput)(nil)).Elem(), LogFortianalyzerSettingMap{})
	pulumi.RegisterOutputType(LogFortianalyzerSettingOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerSettingArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzerSettingMapOutput{})
}
