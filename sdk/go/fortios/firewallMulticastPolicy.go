// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallMulticastPolicy struct {
	pulumi.CustomResourceState

	Action              pulumi.StringOutput                       `pulumi:"action"`
	AutoAsicOffload     pulumi.StringOutput                       `pulumi:"autoAsicOffload"`
	Comments            pulumi.StringPtrOutput                    `pulumi:"comments"`
	Dnat                pulumi.StringOutput                       `pulumi:"dnat"`
	Dstaddrs            FirewallMulticastPolicyDstaddrArrayOutput `pulumi:"dstaddrs"`
	Dstintf             pulumi.StringOutput                       `pulumi:"dstintf"`
	DynamicSortSubtable pulumi.StringPtrOutput                    `pulumi:"dynamicSortSubtable"`
	EndPort             pulumi.IntOutput                          `pulumi:"endPort"`
	Fosid               pulumi.IntOutput                          `pulumi:"fosid"`
	Logtraffic          pulumi.StringOutput                       `pulumi:"logtraffic"`
	Name                pulumi.StringOutput                       `pulumi:"name"`
	Protocol            pulumi.IntOutput                          `pulumi:"protocol"`
	Snat                pulumi.StringOutput                       `pulumi:"snat"`
	SnatIp              pulumi.StringOutput                       `pulumi:"snatIp"`
	Srcaddrs            FirewallMulticastPolicySrcaddrArrayOutput `pulumi:"srcaddrs"`
	Srcintf             pulumi.StringOutput                       `pulumi:"srcintf"`
	StartPort           pulumi.IntOutput                          `pulumi:"startPort"`
	Status              pulumi.StringOutput                       `pulumi:"status"`
	TrafficShaper       pulumi.StringOutput                       `pulumi:"trafficShaper"`
	Uuid                pulumi.StringOutput                       `pulumi:"uuid"`
	Vdomparam           pulumi.StringPtrOutput                    `pulumi:"vdomparam"`
}

// NewFirewallMulticastPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallMulticastPolicy(ctx *pulumi.Context,
	name string, args *FirewallMulticastPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallMulticastPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dstaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Dstaddrs'")
	}
	if args.Dstintf == nil {
		return nil, errors.New("invalid value for required argument 'Dstintf'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	if args.Srcintf == nil {
		return nil, errors.New("invalid value for required argument 'Srcintf'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallMulticastPolicy
	err := ctx.RegisterResource("fortios:index/firewallMulticastPolicy:FirewallMulticastPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallMulticastPolicy gets an existing FirewallMulticastPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallMulticastPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallMulticastPolicyState, opts ...pulumi.ResourceOption) (*FirewallMulticastPolicy, error) {
	var resource FirewallMulticastPolicy
	err := ctx.ReadResource("fortios:index/firewallMulticastPolicy:FirewallMulticastPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallMulticastPolicy resources.
type firewallMulticastPolicyState struct {
	Action              *string                          `pulumi:"action"`
	AutoAsicOffload     *string                          `pulumi:"autoAsicOffload"`
	Comments            *string                          `pulumi:"comments"`
	Dnat                *string                          `pulumi:"dnat"`
	Dstaddrs            []FirewallMulticastPolicyDstaddr `pulumi:"dstaddrs"`
	Dstintf             *string                          `pulumi:"dstintf"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	EndPort             *int                             `pulumi:"endPort"`
	Fosid               *int                             `pulumi:"fosid"`
	Logtraffic          *string                          `pulumi:"logtraffic"`
	Name                *string                          `pulumi:"name"`
	Protocol            *int                             `pulumi:"protocol"`
	Snat                *string                          `pulumi:"snat"`
	SnatIp              *string                          `pulumi:"snatIp"`
	Srcaddrs            []FirewallMulticastPolicySrcaddr `pulumi:"srcaddrs"`
	Srcintf             *string                          `pulumi:"srcintf"`
	StartPort           *int                             `pulumi:"startPort"`
	Status              *string                          `pulumi:"status"`
	TrafficShaper       *string                          `pulumi:"trafficShaper"`
	Uuid                *string                          `pulumi:"uuid"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

type FirewallMulticastPolicyState struct {
	Action              pulumi.StringPtrInput
	AutoAsicOffload     pulumi.StringPtrInput
	Comments            pulumi.StringPtrInput
	Dnat                pulumi.StringPtrInput
	Dstaddrs            FirewallMulticastPolicyDstaddrArrayInput
	Dstintf             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EndPort             pulumi.IntPtrInput
	Fosid               pulumi.IntPtrInput
	Logtraffic          pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Protocol            pulumi.IntPtrInput
	Snat                pulumi.StringPtrInput
	SnatIp              pulumi.StringPtrInput
	Srcaddrs            FirewallMulticastPolicySrcaddrArrayInput
	Srcintf             pulumi.StringPtrInput
	StartPort           pulumi.IntPtrInput
	Status              pulumi.StringPtrInput
	TrafficShaper       pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallMulticastPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastPolicyState)(nil)).Elem()
}

type firewallMulticastPolicyArgs struct {
	Action              *string                          `pulumi:"action"`
	AutoAsicOffload     *string                          `pulumi:"autoAsicOffload"`
	Comments            *string                          `pulumi:"comments"`
	Dnat                *string                          `pulumi:"dnat"`
	Dstaddrs            []FirewallMulticastPolicyDstaddr `pulumi:"dstaddrs"`
	Dstintf             string                           `pulumi:"dstintf"`
	DynamicSortSubtable *string                          `pulumi:"dynamicSortSubtable"`
	EndPort             *int                             `pulumi:"endPort"`
	Fosid               *int                             `pulumi:"fosid"`
	Logtraffic          *string                          `pulumi:"logtraffic"`
	Name                *string                          `pulumi:"name"`
	Protocol            *int                             `pulumi:"protocol"`
	Snat                *string                          `pulumi:"snat"`
	SnatIp              *string                          `pulumi:"snatIp"`
	Srcaddrs            []FirewallMulticastPolicySrcaddr `pulumi:"srcaddrs"`
	Srcintf             string                           `pulumi:"srcintf"`
	StartPort           *int                             `pulumi:"startPort"`
	Status              *string                          `pulumi:"status"`
	TrafficShaper       *string                          `pulumi:"trafficShaper"`
	Uuid                *string                          `pulumi:"uuid"`
	Vdomparam           *string                          `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallMulticastPolicy resource.
type FirewallMulticastPolicyArgs struct {
	Action              pulumi.StringPtrInput
	AutoAsicOffload     pulumi.StringPtrInput
	Comments            pulumi.StringPtrInput
	Dnat                pulumi.StringPtrInput
	Dstaddrs            FirewallMulticastPolicyDstaddrArrayInput
	Dstintf             pulumi.StringInput
	DynamicSortSubtable pulumi.StringPtrInput
	EndPort             pulumi.IntPtrInput
	Fosid               pulumi.IntPtrInput
	Logtraffic          pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Protocol            pulumi.IntPtrInput
	Snat                pulumi.StringPtrInput
	SnatIp              pulumi.StringPtrInput
	Srcaddrs            FirewallMulticastPolicySrcaddrArrayInput
	Srcintf             pulumi.StringInput
	StartPort           pulumi.IntPtrInput
	Status              pulumi.StringPtrInput
	TrafficShaper       pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallMulticastPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallMulticastPolicyArgs)(nil)).Elem()
}

type FirewallMulticastPolicyInput interface {
	pulumi.Input

	ToFirewallMulticastPolicyOutput() FirewallMulticastPolicyOutput
	ToFirewallMulticastPolicyOutputWithContext(ctx context.Context) FirewallMulticastPolicyOutput
}

func (*FirewallMulticastPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastPolicy)(nil)).Elem()
}

func (i *FirewallMulticastPolicy) ToFirewallMulticastPolicyOutput() FirewallMulticastPolicyOutput {
	return i.ToFirewallMulticastPolicyOutputWithContext(context.Background())
}

func (i *FirewallMulticastPolicy) ToFirewallMulticastPolicyOutputWithContext(ctx context.Context) FirewallMulticastPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastPolicyOutput)
}

// FirewallMulticastPolicyArrayInput is an input type that accepts FirewallMulticastPolicyArray and FirewallMulticastPolicyArrayOutput values.
// You can construct a concrete instance of `FirewallMulticastPolicyArrayInput` via:
//
//	FirewallMulticastPolicyArray{ FirewallMulticastPolicyArgs{...} }
type FirewallMulticastPolicyArrayInput interface {
	pulumi.Input

	ToFirewallMulticastPolicyArrayOutput() FirewallMulticastPolicyArrayOutput
	ToFirewallMulticastPolicyArrayOutputWithContext(context.Context) FirewallMulticastPolicyArrayOutput
}

type FirewallMulticastPolicyArray []FirewallMulticastPolicyInput

func (FirewallMulticastPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastPolicy)(nil)).Elem()
}

func (i FirewallMulticastPolicyArray) ToFirewallMulticastPolicyArrayOutput() FirewallMulticastPolicyArrayOutput {
	return i.ToFirewallMulticastPolicyArrayOutputWithContext(context.Background())
}

func (i FirewallMulticastPolicyArray) ToFirewallMulticastPolicyArrayOutputWithContext(ctx context.Context) FirewallMulticastPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastPolicyArrayOutput)
}

// FirewallMulticastPolicyMapInput is an input type that accepts FirewallMulticastPolicyMap and FirewallMulticastPolicyMapOutput values.
// You can construct a concrete instance of `FirewallMulticastPolicyMapInput` via:
//
//	FirewallMulticastPolicyMap{ "key": FirewallMulticastPolicyArgs{...} }
type FirewallMulticastPolicyMapInput interface {
	pulumi.Input

	ToFirewallMulticastPolicyMapOutput() FirewallMulticastPolicyMapOutput
	ToFirewallMulticastPolicyMapOutputWithContext(context.Context) FirewallMulticastPolicyMapOutput
}

type FirewallMulticastPolicyMap map[string]FirewallMulticastPolicyInput

func (FirewallMulticastPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastPolicy)(nil)).Elem()
}

func (i FirewallMulticastPolicyMap) ToFirewallMulticastPolicyMapOutput() FirewallMulticastPolicyMapOutput {
	return i.ToFirewallMulticastPolicyMapOutputWithContext(context.Background())
}

func (i FirewallMulticastPolicyMap) ToFirewallMulticastPolicyMapOutputWithContext(ctx context.Context) FirewallMulticastPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallMulticastPolicyMapOutput)
}

type FirewallMulticastPolicyOutput struct{ *pulumi.OutputState }

func (FirewallMulticastPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallMulticastPolicy)(nil)).Elem()
}

func (o FirewallMulticastPolicyOutput) ToFirewallMulticastPolicyOutput() FirewallMulticastPolicyOutput {
	return o
}

func (o FirewallMulticastPolicyOutput) ToFirewallMulticastPolicyOutputWithContext(ctx context.Context) FirewallMulticastPolicyOutput {
	return o
}

func (o FirewallMulticastPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) AutoAsicOffload() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.AutoAsicOffload }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastPolicyOutput) Dnat() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Dnat }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Dstaddrs() FirewallMulticastPolicyDstaddrArrayOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) FirewallMulticastPolicyDstaddrArrayOutput { return v.Dstaddrs }).(FirewallMulticastPolicyDstaddrArrayOutput)
}

func (o FirewallMulticastPolicyOutput) Dstintf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Dstintf }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallMulticastPolicyOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.IntOutput { return v.EndPort }).(pulumi.IntOutput)
}

func (o FirewallMulticastPolicyOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o FirewallMulticastPolicyOutput) Logtraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Logtraffic }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

func (o FirewallMulticastPolicyOutput) Snat() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Snat }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) SnatIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.SnatIp }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Srcaddrs() FirewallMulticastPolicySrcaddrArrayOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) FirewallMulticastPolicySrcaddrArrayOutput { return v.Srcaddrs }).(FirewallMulticastPolicySrcaddrArrayOutput)
}

func (o FirewallMulticastPolicyOutput) Srcintf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Srcintf }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.IntOutput { return v.StartPort }).(pulumi.IntOutput)
}

func (o FirewallMulticastPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) TrafficShaper() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.TrafficShaper }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o FirewallMulticastPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallMulticastPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallMulticastPolicyArrayOutput struct{ *pulumi.OutputState }

func (FirewallMulticastPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallMulticastPolicy)(nil)).Elem()
}

func (o FirewallMulticastPolicyArrayOutput) ToFirewallMulticastPolicyArrayOutput() FirewallMulticastPolicyArrayOutput {
	return o
}

func (o FirewallMulticastPolicyArrayOutput) ToFirewallMulticastPolicyArrayOutputWithContext(ctx context.Context) FirewallMulticastPolicyArrayOutput {
	return o
}

func (o FirewallMulticastPolicyArrayOutput) Index(i pulumi.IntInput) FirewallMulticastPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallMulticastPolicy {
		return vs[0].([]*FirewallMulticastPolicy)[vs[1].(int)]
	}).(FirewallMulticastPolicyOutput)
}

type FirewallMulticastPolicyMapOutput struct{ *pulumi.OutputState }

func (FirewallMulticastPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallMulticastPolicy)(nil)).Elem()
}

func (o FirewallMulticastPolicyMapOutput) ToFirewallMulticastPolicyMapOutput() FirewallMulticastPolicyMapOutput {
	return o
}

func (o FirewallMulticastPolicyMapOutput) ToFirewallMulticastPolicyMapOutputWithContext(ctx context.Context) FirewallMulticastPolicyMapOutput {
	return o
}

func (o FirewallMulticastPolicyMapOutput) MapIndex(k pulumi.StringInput) FirewallMulticastPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallMulticastPolicy {
		return vs[0].(map[string]*FirewallMulticastPolicy)[vs[1].(string)]
	}).(FirewallMulticastPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastPolicyInput)(nil)).Elem(), &FirewallMulticastPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastPolicyArrayInput)(nil)).Elem(), FirewallMulticastPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallMulticastPolicyMapInput)(nil)).Elem(), FirewallMulticastPolicyMap{})
	pulumi.RegisterOutputType(FirewallMulticastPolicyOutput{})
	pulumi.RegisterOutputType(FirewallMulticastPolicyArrayOutput{})
	pulumi.RegisterOutputType(FirewallMulticastPolicyMapOutput{})
}
