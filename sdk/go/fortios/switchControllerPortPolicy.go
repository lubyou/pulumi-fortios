// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerPortPolicy struct {
	pulumi.CustomResourceState

	BouncePortLink pulumi.StringOutput    `pulumi:"bouncePortLink"`
	Description    pulumi.StringOutput    `pulumi:"description"`
	Fortilink      pulumi.StringOutput    `pulumi:"fortilink"`
	LldpProfile    pulumi.StringOutput    `pulumi:"lldpProfile"`
	N8021x         pulumi.StringOutput    `pulumi:"n8021x"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	QosPolicy      pulumi.StringOutput    `pulumi:"qosPolicy"`
	Vdomparam      pulumi.StringPtrOutput `pulumi:"vdomparam"`
	VlanPolicy     pulumi.StringOutput    `pulumi:"vlanPolicy"`
}

// NewSwitchControllerPortPolicy registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerPortPolicy(ctx *pulumi.Context,
	name string, args *SwitchControllerPortPolicyArgs, opts ...pulumi.ResourceOption) (*SwitchControllerPortPolicy, error) {
	if args == nil {
		args = &SwitchControllerPortPolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerPortPolicy
	err := ctx.RegisterResource("fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerPortPolicy gets an existing SwitchControllerPortPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerPortPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerPortPolicyState, opts ...pulumi.ResourceOption) (*SwitchControllerPortPolicy, error) {
	var resource SwitchControllerPortPolicy
	err := ctx.ReadResource("fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerPortPolicy resources.
type switchControllerPortPolicyState struct {
	BouncePortLink *string `pulumi:"bouncePortLink"`
	Description    *string `pulumi:"description"`
	Fortilink      *string `pulumi:"fortilink"`
	LldpProfile    *string `pulumi:"lldpProfile"`
	N8021x         *string `pulumi:"n8021x"`
	Name           *string `pulumi:"name"`
	QosPolicy      *string `pulumi:"qosPolicy"`
	Vdomparam      *string `pulumi:"vdomparam"`
	VlanPolicy     *string `pulumi:"vlanPolicy"`
}

type SwitchControllerPortPolicyState struct {
	BouncePortLink pulumi.StringPtrInput
	Description    pulumi.StringPtrInput
	Fortilink      pulumi.StringPtrInput
	LldpProfile    pulumi.StringPtrInput
	N8021x         pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	QosPolicy      pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
	VlanPolicy     pulumi.StringPtrInput
}

func (SwitchControllerPortPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerPortPolicyState)(nil)).Elem()
}

type switchControllerPortPolicyArgs struct {
	BouncePortLink *string `pulumi:"bouncePortLink"`
	Description    *string `pulumi:"description"`
	Fortilink      *string `pulumi:"fortilink"`
	LldpProfile    *string `pulumi:"lldpProfile"`
	N8021x         *string `pulumi:"n8021x"`
	Name           *string `pulumi:"name"`
	QosPolicy      *string `pulumi:"qosPolicy"`
	Vdomparam      *string `pulumi:"vdomparam"`
	VlanPolicy     *string `pulumi:"vlanPolicy"`
}

// The set of arguments for constructing a SwitchControllerPortPolicy resource.
type SwitchControllerPortPolicyArgs struct {
	BouncePortLink pulumi.StringPtrInput
	Description    pulumi.StringPtrInput
	Fortilink      pulumi.StringPtrInput
	LldpProfile    pulumi.StringPtrInput
	N8021x         pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	QosPolicy      pulumi.StringPtrInput
	Vdomparam      pulumi.StringPtrInput
	VlanPolicy     pulumi.StringPtrInput
}

func (SwitchControllerPortPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerPortPolicyArgs)(nil)).Elem()
}

type SwitchControllerPortPolicyInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput
	ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput
}

func (*SwitchControllerPortPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerPortPolicy)(nil)).Elem()
}

func (i *SwitchControllerPortPolicy) ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput {
	return i.ToSwitchControllerPortPolicyOutputWithContext(context.Background())
}

func (i *SwitchControllerPortPolicy) ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyOutput)
}

// SwitchControllerPortPolicyArrayInput is an input type that accepts SwitchControllerPortPolicyArray and SwitchControllerPortPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerPortPolicyArrayInput` via:
//
//	SwitchControllerPortPolicyArray{ SwitchControllerPortPolicyArgs{...} }
type SwitchControllerPortPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput
	ToSwitchControllerPortPolicyArrayOutputWithContext(context.Context) SwitchControllerPortPolicyArrayOutput
}

type SwitchControllerPortPolicyArray []SwitchControllerPortPolicyInput

func (SwitchControllerPortPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (i SwitchControllerPortPolicyArray) ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput {
	return i.ToSwitchControllerPortPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerPortPolicyArray) ToSwitchControllerPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerPortPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyArrayOutput)
}

// SwitchControllerPortPolicyMapInput is an input type that accepts SwitchControllerPortPolicyMap and SwitchControllerPortPolicyMapOutput values.
// You can construct a concrete instance of `SwitchControllerPortPolicyMapInput` via:
//
//	SwitchControllerPortPolicyMap{ "key": SwitchControllerPortPolicyArgs{...} }
type SwitchControllerPortPolicyMapInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput
	ToSwitchControllerPortPolicyMapOutputWithContext(context.Context) SwitchControllerPortPolicyMapOutput
}

type SwitchControllerPortPolicyMap map[string]SwitchControllerPortPolicyInput

func (SwitchControllerPortPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (i SwitchControllerPortPolicyMap) ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput {
	return i.ToSwitchControllerPortPolicyMapOutputWithContext(context.Background())
}

func (i SwitchControllerPortPolicyMap) ToSwitchControllerPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerPortPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyMapOutput)
}

type SwitchControllerPortPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyOutput) ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput {
	return o
}

func (o SwitchControllerPortPolicyOutput) ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput {
	return o
}

func (o SwitchControllerPortPolicyOutput) BouncePortLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.BouncePortLink }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) Fortilink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.Fortilink }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) LldpProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.LldpProfile }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) N8021x() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.N8021x }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) QosPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.QosPolicy }).(pulumi.StringOutput)
}

func (o SwitchControllerPortPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerPortPolicyOutput) VlanPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerPortPolicy) pulumi.StringOutput { return v.VlanPolicy }).(pulumi.StringOutput)
}

type SwitchControllerPortPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyArrayOutput) ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerPortPolicyArrayOutput) ToSwitchControllerPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerPortPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerPortPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerPortPolicy {
		return vs[0].([]*SwitchControllerPortPolicy)[vs[1].(int)]
	}).(SwitchControllerPortPolicyOutput)
}

type SwitchControllerPortPolicyMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyMapOutput) ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput {
	return o
}

func (o SwitchControllerPortPolicyMapOutput) ToSwitchControllerPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerPortPolicyMapOutput {
	return o
}

func (o SwitchControllerPortPolicyMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerPortPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerPortPolicy {
		return vs[0].(map[string]*SwitchControllerPortPolicy)[vs[1].(string)]
	}).(SwitchControllerPortPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyInput)(nil)).Elem(), &SwitchControllerPortPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyArrayInput)(nil)).Elem(), SwitchControllerPortPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyMapInput)(nil)).Elem(), SwitchControllerPortPolicyMap{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyMapOutput{})
}
