// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure port policy to be applied on the managed FortiSwitch ports through NAC device. Applies to FortiOS Version `6.4.0,6.4.1,6.4.2,7.0.0`.
//
// ## Import
//
// SwitchController PortPolicy can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerPortPolicy struct {
	pulumi.CustomResourceState

	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this port policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink pulumi.StringOutput `pulumi:"bouncePortLink"`
	// Description for the port policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// FortiLink interface for which this port policy belongs to.
	Fortilink pulumi.StringOutput `pulumi:"fortilink"`
	// LLDP profile to be applied when using this port-policy.
	LldpProfile pulumi.StringOutput `pulumi:"lldpProfile"`
	// 802.1x security policy to be applied when using this port-policy.
	N8021x pulumi.StringOutput `pulumi:"n8021x"`
	// Port policy name.
	Name pulumi.StringOutput `pulumi:"name"`
	// QoS policy to be applied when using this port-policy.
	QosPolicy pulumi.StringOutput `pulumi:"qosPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// VLAN policy to be applied when using this port-policy.
	VlanPolicy pulumi.StringOutput `pulumi:"vlanPolicy"`
}

// NewSwitchControllerPortPolicy registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerPortPolicy(ctx *pulumi.Context,
	name string, args *SwitchControllerPortPolicyArgs, opts ...pulumi.ResourceOption) (*SwitchControllerPortPolicy, error) {
	if args == nil {
		args = &SwitchControllerPortPolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerPortPolicy
	err := ctx.RegisterResource("fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerPortPolicy gets an existing SwitchControllerPortPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerPortPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerPortPolicyState, opts ...pulumi.ResourceOption) (*SwitchControllerPortPolicy, error) {
	var resource SwitchControllerPortPolicy
	err := ctx.ReadResource("fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerPortPolicy resources.
type switchControllerPortPolicyState struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this port policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink *string `pulumi:"bouncePortLink"`
	// Description for the port policy.
	Description *string `pulumi:"description"`
	// FortiLink interface for which this port policy belongs to.
	Fortilink *string `pulumi:"fortilink"`
	// LLDP profile to be applied when using this port-policy.
	LldpProfile *string `pulumi:"lldpProfile"`
	// 802.1x security policy to be applied when using this port-policy.
	N8021x *string `pulumi:"n8021x"`
	// Port policy name.
	Name *string `pulumi:"name"`
	// QoS policy to be applied when using this port-policy.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN policy to be applied when using this port-policy.
	VlanPolicy *string `pulumi:"vlanPolicy"`
}

type SwitchControllerPortPolicyState struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this port policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink pulumi.StringPtrInput
	// Description for the port policy.
	Description pulumi.StringPtrInput
	// FortiLink interface for which this port policy belongs to.
	Fortilink pulumi.StringPtrInput
	// LLDP profile to be applied when using this port-policy.
	LldpProfile pulumi.StringPtrInput
	// 802.1x security policy to be applied when using this port-policy.
	N8021x pulumi.StringPtrInput
	// Port policy name.
	Name pulumi.StringPtrInput
	// QoS policy to be applied when using this port-policy.
	QosPolicy pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN policy to be applied when using this port-policy.
	VlanPolicy pulumi.StringPtrInput
}

func (SwitchControllerPortPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerPortPolicyState)(nil)).Elem()
}

type switchControllerPortPolicyArgs struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this port policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink *string `pulumi:"bouncePortLink"`
	// Description for the port policy.
	Description *string `pulumi:"description"`
	// FortiLink interface for which this port policy belongs to.
	Fortilink *string `pulumi:"fortilink"`
	// LLDP profile to be applied when using this port-policy.
	LldpProfile *string `pulumi:"lldpProfile"`
	// 802.1x security policy to be applied when using this port-policy.
	N8021x *string `pulumi:"n8021x"`
	// Port policy name.
	Name *string `pulumi:"name"`
	// QoS policy to be applied when using this port-policy.
	QosPolicy *string `pulumi:"qosPolicy"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN policy to be applied when using this port-policy.
	VlanPolicy *string `pulumi:"vlanPolicy"`
}

// The set of arguments for constructing a SwitchControllerPortPolicy resource.
type SwitchControllerPortPolicyArgs struct {
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where this port policy is applied. Helps to clear and reassign VLAN from lldp-profile. Valid values: `disable`, `enable`.
	BouncePortLink pulumi.StringPtrInput
	// Description for the port policy.
	Description pulumi.StringPtrInput
	// FortiLink interface for which this port policy belongs to.
	Fortilink pulumi.StringPtrInput
	// LLDP profile to be applied when using this port-policy.
	LldpProfile pulumi.StringPtrInput
	// 802.1x security policy to be applied when using this port-policy.
	N8021x pulumi.StringPtrInput
	// Port policy name.
	Name pulumi.StringPtrInput
	// QoS policy to be applied when using this port-policy.
	QosPolicy pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN policy to be applied when using this port-policy.
	VlanPolicy pulumi.StringPtrInput
}

func (SwitchControllerPortPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerPortPolicyArgs)(nil)).Elem()
}

type SwitchControllerPortPolicyInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput
	ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput
}

func (*SwitchControllerPortPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerPortPolicy)(nil)).Elem()
}

func (i *SwitchControllerPortPolicy) ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput {
	return i.ToSwitchControllerPortPolicyOutputWithContext(context.Background())
}

func (i *SwitchControllerPortPolicy) ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyOutput)
}

// SwitchControllerPortPolicyArrayInput is an input type that accepts SwitchControllerPortPolicyArray and SwitchControllerPortPolicyArrayOutput values.
// You can construct a concrete instance of `SwitchControllerPortPolicyArrayInput` via:
//
//          SwitchControllerPortPolicyArray{ SwitchControllerPortPolicyArgs{...} }
type SwitchControllerPortPolicyArrayInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput
	ToSwitchControllerPortPolicyArrayOutputWithContext(context.Context) SwitchControllerPortPolicyArrayOutput
}

type SwitchControllerPortPolicyArray []SwitchControllerPortPolicyInput

func (SwitchControllerPortPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (i SwitchControllerPortPolicyArray) ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput {
	return i.ToSwitchControllerPortPolicyArrayOutputWithContext(context.Background())
}

func (i SwitchControllerPortPolicyArray) ToSwitchControllerPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerPortPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyArrayOutput)
}

// SwitchControllerPortPolicyMapInput is an input type that accepts SwitchControllerPortPolicyMap and SwitchControllerPortPolicyMapOutput values.
// You can construct a concrete instance of `SwitchControllerPortPolicyMapInput` via:
//
//          SwitchControllerPortPolicyMap{ "key": SwitchControllerPortPolicyArgs{...} }
type SwitchControllerPortPolicyMapInput interface {
	pulumi.Input

	ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput
	ToSwitchControllerPortPolicyMapOutputWithContext(context.Context) SwitchControllerPortPolicyMapOutput
}

type SwitchControllerPortPolicyMap map[string]SwitchControllerPortPolicyInput

func (SwitchControllerPortPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (i SwitchControllerPortPolicyMap) ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput {
	return i.ToSwitchControllerPortPolicyMapOutputWithContext(context.Background())
}

func (i SwitchControllerPortPolicyMap) ToSwitchControllerPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerPortPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerPortPolicyMapOutput)
}

type SwitchControllerPortPolicyOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyOutput) ToSwitchControllerPortPolicyOutput() SwitchControllerPortPolicyOutput {
	return o
}

func (o SwitchControllerPortPolicyOutput) ToSwitchControllerPortPolicyOutputWithContext(ctx context.Context) SwitchControllerPortPolicyOutput {
	return o
}

type SwitchControllerPortPolicyArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyArrayOutput) ToSwitchControllerPortPolicyArrayOutput() SwitchControllerPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerPortPolicyArrayOutput) ToSwitchControllerPortPolicyArrayOutputWithContext(ctx context.Context) SwitchControllerPortPolicyArrayOutput {
	return o
}

func (o SwitchControllerPortPolicyArrayOutput) Index(i pulumi.IntInput) SwitchControllerPortPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerPortPolicy {
		return vs[0].([]*SwitchControllerPortPolicy)[vs[1].(int)]
	}).(SwitchControllerPortPolicyOutput)
}

type SwitchControllerPortPolicyMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerPortPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerPortPolicy)(nil)).Elem()
}

func (o SwitchControllerPortPolicyMapOutput) ToSwitchControllerPortPolicyMapOutput() SwitchControllerPortPolicyMapOutput {
	return o
}

func (o SwitchControllerPortPolicyMapOutput) ToSwitchControllerPortPolicyMapOutputWithContext(ctx context.Context) SwitchControllerPortPolicyMapOutput {
	return o
}

func (o SwitchControllerPortPolicyMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerPortPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerPortPolicy {
		return vs[0].(map[string]*SwitchControllerPortPolicy)[vs[1].(string)]
	}).(SwitchControllerPortPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyInput)(nil)).Elem(), &SwitchControllerPortPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyArrayInput)(nil)).Elem(), SwitchControllerPortPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerPortPolicyMapInput)(nil)).Elem(), SwitchControllerPortPolicyMap{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyOutput{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerPortPolicyMapOutput{})
}
