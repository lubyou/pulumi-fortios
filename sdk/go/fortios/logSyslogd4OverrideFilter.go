// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogSyslogd4OverrideFilter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                           `pulumi:"anomaly"`
	Dns                  pulumi.StringOutput                           `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                        `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                           `pulumi:"filter"`
	FilterType           pulumi.StringOutput                           `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                           `pulumi:"forwardTraffic"`
	FreeStyles           LogSyslogd4OverrideFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	Gtp                  pulumi.StringOutput                           `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                           `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                           `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                           `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                           `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                           `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                           `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                           `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                        `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                           `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                           `pulumi:"ztnaTraffic"`
}

// NewLogSyslogd4OverrideFilter registers a new resource with the given unique name, arguments, and options.
func NewLogSyslogd4OverrideFilter(ctx *pulumi.Context,
	name string, args *LogSyslogd4OverrideFilterArgs, opts ...pulumi.ResourceOption) (*LogSyslogd4OverrideFilter, error) {
	if args == nil {
		args = &LogSyslogd4OverrideFilterArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LogSyslogd4OverrideFilter
	err := ctx.RegisterResource("fortios:index/logSyslogd4OverrideFilter:LogSyslogd4OverrideFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSyslogd4OverrideFilter gets an existing LogSyslogd4OverrideFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSyslogd4OverrideFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSyslogd4OverrideFilterState, opts ...pulumi.ResourceOption) (*LogSyslogd4OverrideFilter, error) {
	var resource LogSyslogd4OverrideFilter
	err := ctx.ReadResource("fortios:index/logSyslogd4OverrideFilter:LogSyslogd4OverrideFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSyslogd4OverrideFilter resources.
type logSyslogd4OverrideFilterState struct {
	Anomaly              *string                              `pulumi:"anomaly"`
	Dns                  *string                              `pulumi:"dns"`
	DynamicSortSubtable  *string                              `pulumi:"dynamicSortSubtable"`
	Filter               *string                              `pulumi:"filter"`
	FilterType           *string                              `pulumi:"filterType"`
	ForwardTraffic       *string                              `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd4OverrideFilterFreeStyle `pulumi:"freeStyles"`
	Gtp                  *string                              `pulumi:"gtp"`
	LocalTraffic         *string                              `pulumi:"localTraffic"`
	MulticastTraffic     *string                              `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                              `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                              `pulumi:"netscanVulnerability"`
	Severity             *string                              `pulumi:"severity"`
	SnifferTraffic       *string                              `pulumi:"snifferTraffic"`
	Ssh                  *string                              `pulumi:"ssh"`
	Vdomparam            *string                              `pulumi:"vdomparam"`
	Voip                 *string                              `pulumi:"voip"`
	ZtnaTraffic          *string                              `pulumi:"ztnaTraffic"`
}

type LogSyslogd4OverrideFilterState struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd4OverrideFilterFreeStyleArrayInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd4OverrideFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd4OverrideFilterState)(nil)).Elem()
}

type logSyslogd4OverrideFilterArgs struct {
	Anomaly              *string                              `pulumi:"anomaly"`
	Dns                  *string                              `pulumi:"dns"`
	DynamicSortSubtable  *string                              `pulumi:"dynamicSortSubtable"`
	Filter               *string                              `pulumi:"filter"`
	FilterType           *string                              `pulumi:"filterType"`
	ForwardTraffic       *string                              `pulumi:"forwardTraffic"`
	FreeStyles           []LogSyslogd4OverrideFilterFreeStyle `pulumi:"freeStyles"`
	Gtp                  *string                              `pulumi:"gtp"`
	LocalTraffic         *string                              `pulumi:"localTraffic"`
	MulticastTraffic     *string                              `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                              `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                              `pulumi:"netscanVulnerability"`
	Severity             *string                              `pulumi:"severity"`
	SnifferTraffic       *string                              `pulumi:"snifferTraffic"`
	Ssh                  *string                              `pulumi:"ssh"`
	Vdomparam            *string                              `pulumi:"vdomparam"`
	Voip                 *string                              `pulumi:"voip"`
	ZtnaTraffic          *string                              `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogSyslogd4OverrideFilter resource.
type LogSyslogd4OverrideFilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogSyslogd4OverrideFilterFreeStyleArrayInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogSyslogd4OverrideFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSyslogd4OverrideFilterArgs)(nil)).Elem()
}

type LogSyslogd4OverrideFilterInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideFilterOutput() LogSyslogd4OverrideFilterOutput
	ToLogSyslogd4OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterOutput
}

func (*LogSyslogd4OverrideFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (i *LogSyslogd4OverrideFilter) ToLogSyslogd4OverrideFilterOutput() LogSyslogd4OverrideFilterOutput {
	return i.ToLogSyslogd4OverrideFilterOutputWithContext(context.Background())
}

func (i *LogSyslogd4OverrideFilter) ToLogSyslogd4OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideFilterOutput)
}

// LogSyslogd4OverrideFilterArrayInput is an input type that accepts LogSyslogd4OverrideFilterArray and LogSyslogd4OverrideFilterArrayOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideFilterArrayInput` via:
//
//	LogSyslogd4OverrideFilterArray{ LogSyslogd4OverrideFilterArgs{...} }
type LogSyslogd4OverrideFilterArrayInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideFilterArrayOutput() LogSyslogd4OverrideFilterArrayOutput
	ToLogSyslogd4OverrideFilterArrayOutputWithContext(context.Context) LogSyslogd4OverrideFilterArrayOutput
}

type LogSyslogd4OverrideFilterArray []LogSyslogd4OverrideFilterInput

func (LogSyslogd4OverrideFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd4OverrideFilterArray) ToLogSyslogd4OverrideFilterArrayOutput() LogSyslogd4OverrideFilterArrayOutput {
	return i.ToLogSyslogd4OverrideFilterArrayOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideFilterArray) ToLogSyslogd4OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideFilterArrayOutput)
}

// LogSyslogd4OverrideFilterMapInput is an input type that accepts LogSyslogd4OverrideFilterMap and LogSyslogd4OverrideFilterMapOutput values.
// You can construct a concrete instance of `LogSyslogd4OverrideFilterMapInput` via:
//
//	LogSyslogd4OverrideFilterMap{ "key": LogSyslogd4OverrideFilterArgs{...} }
type LogSyslogd4OverrideFilterMapInput interface {
	pulumi.Input

	ToLogSyslogd4OverrideFilterMapOutput() LogSyslogd4OverrideFilterMapOutput
	ToLogSyslogd4OverrideFilterMapOutputWithContext(context.Context) LogSyslogd4OverrideFilterMapOutput
}

type LogSyslogd4OverrideFilterMap map[string]LogSyslogd4OverrideFilterInput

func (LogSyslogd4OverrideFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (i LogSyslogd4OverrideFilterMap) ToLogSyslogd4OverrideFilterMapOutput() LogSyslogd4OverrideFilterMapOutput {
	return i.ToLogSyslogd4OverrideFilterMapOutputWithContext(context.Background())
}

func (i LogSyslogd4OverrideFilterMap) ToLogSyslogd4OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSyslogd4OverrideFilterMapOutput)
}

type LogSyslogd4OverrideFilterOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd4OverrideFilterOutput) ToLogSyslogd4OverrideFilterOutput() LogSyslogd4OverrideFilterOutput {
	return o
}

func (o LogSyslogd4OverrideFilterOutput) ToLogSyslogd4OverrideFilterOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterOutput {
	return o
}

func (o LogSyslogd4OverrideFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) FreeStyles() LogSyslogd4OverrideFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) LogSyslogd4OverrideFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogSyslogd4OverrideFilterFreeStyleArrayOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogSyslogd4OverrideFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogSyslogd4OverrideFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSyslogd4OverrideFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogSyslogd4OverrideFilterArrayOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd4OverrideFilterArrayOutput) ToLogSyslogd4OverrideFilterArrayOutput() LogSyslogd4OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd4OverrideFilterArrayOutput) ToLogSyslogd4OverrideFilterArrayOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterArrayOutput {
	return o
}

func (o LogSyslogd4OverrideFilterArrayOutput) Index(i pulumi.IntInput) LogSyslogd4OverrideFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSyslogd4OverrideFilter {
		return vs[0].([]*LogSyslogd4OverrideFilter)[vs[1].(int)]
	}).(LogSyslogd4OverrideFilterOutput)
}

type LogSyslogd4OverrideFilterMapOutput struct{ *pulumi.OutputState }

func (LogSyslogd4OverrideFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSyslogd4OverrideFilter)(nil)).Elem()
}

func (o LogSyslogd4OverrideFilterMapOutput) ToLogSyslogd4OverrideFilterMapOutput() LogSyslogd4OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd4OverrideFilterMapOutput) ToLogSyslogd4OverrideFilterMapOutputWithContext(ctx context.Context) LogSyslogd4OverrideFilterMapOutput {
	return o
}

func (o LogSyslogd4OverrideFilterMapOutput) MapIndex(k pulumi.StringInput) LogSyslogd4OverrideFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSyslogd4OverrideFilter {
		return vs[0].(map[string]*LogSyslogd4OverrideFilter)[vs[1].(string)]
	}).(LogSyslogd4OverrideFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideFilterInput)(nil)).Elem(), &LogSyslogd4OverrideFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideFilterArrayInput)(nil)).Elem(), LogSyslogd4OverrideFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSyslogd4OverrideFilterMapInput)(nil)).Elem(), LogSyslogd4OverrideFilterMap{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideFilterOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideFilterArrayOutput{})
	pulumi.RegisterOutputType(LogSyslogd4OverrideFilterMapOutput{})
}
