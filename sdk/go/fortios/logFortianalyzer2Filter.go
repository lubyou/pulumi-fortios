// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogFortianalyzer2Filter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                         `pulumi:"anomaly"`
	DlpArchive           pulumi.StringOutput                         `pulumi:"dlpArchive"`
	Dns                  pulumi.StringOutput                         `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                      `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                         `pulumi:"filter"`
	FilterType           pulumi.StringOutput                         `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                         `pulumi:"forwardTraffic"`
	FreeStyles           LogFortianalyzer2FilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables         pulumi.StringPtrOutput                      `pulumi:"getAllTables"`
	Gtp                  pulumi.StringOutput                         `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                         `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                         `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                         `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                         `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                         `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                         `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                         `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                      `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                         `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                         `pulumi:"ztnaTraffic"`
}

// NewLogFortianalyzer2Filter registers a new resource with the given unique name, arguments, and options.
func NewLogFortianalyzer2Filter(ctx *pulumi.Context,
	name string, args *LogFortianalyzer2FilterArgs, opts ...pulumi.ResourceOption) (*LogFortianalyzer2Filter, error) {
	if args == nil {
		args = &LogFortianalyzer2FilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogFortianalyzer2Filter
	err := ctx.RegisterResource("fortios:index/logFortianalyzer2Filter:LogFortianalyzer2Filter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogFortianalyzer2Filter gets an existing LogFortianalyzer2Filter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogFortianalyzer2Filter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogFortianalyzer2FilterState, opts ...pulumi.ResourceOption) (*LogFortianalyzer2Filter, error) {
	var resource LogFortianalyzer2Filter
	err := ctx.ReadResource("fortios:index/logFortianalyzer2Filter:LogFortianalyzer2Filter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogFortianalyzer2Filter resources.
type logFortianalyzer2FilterState struct {
	Anomaly              *string                            `pulumi:"anomaly"`
	DlpArchive           *string                            `pulumi:"dlpArchive"`
	Dns                  *string                            `pulumi:"dns"`
	DynamicSortSubtable  *string                            `pulumi:"dynamicSortSubtable"`
	Filter               *string                            `pulumi:"filter"`
	FilterType           *string                            `pulumi:"filterType"`
	ForwardTraffic       *string                            `pulumi:"forwardTraffic"`
	FreeStyles           []LogFortianalyzer2FilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                            `pulumi:"getAllTables"`
	Gtp                  *string                            `pulumi:"gtp"`
	LocalTraffic         *string                            `pulumi:"localTraffic"`
	MulticastTraffic     *string                            `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                            `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                            `pulumi:"netscanVulnerability"`
	Severity             *string                            `pulumi:"severity"`
	SnifferTraffic       *string                            `pulumi:"snifferTraffic"`
	Ssh                  *string                            `pulumi:"ssh"`
	Vdomparam            *string                            `pulumi:"vdomparam"`
	Voip                 *string                            `pulumi:"voip"`
	ZtnaTraffic          *string                            `pulumi:"ztnaTraffic"`
}

type LogFortianalyzer2FilterState struct {
	Anomaly              pulumi.StringPtrInput
	DlpArchive           pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogFortianalyzer2FilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogFortianalyzer2FilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzer2FilterState)(nil)).Elem()
}

type logFortianalyzer2FilterArgs struct {
	Anomaly              *string                            `pulumi:"anomaly"`
	DlpArchive           *string                            `pulumi:"dlpArchive"`
	Dns                  *string                            `pulumi:"dns"`
	DynamicSortSubtable  *string                            `pulumi:"dynamicSortSubtable"`
	Filter               *string                            `pulumi:"filter"`
	FilterType           *string                            `pulumi:"filterType"`
	ForwardTraffic       *string                            `pulumi:"forwardTraffic"`
	FreeStyles           []LogFortianalyzer2FilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                            `pulumi:"getAllTables"`
	Gtp                  *string                            `pulumi:"gtp"`
	LocalTraffic         *string                            `pulumi:"localTraffic"`
	MulticastTraffic     *string                            `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                            `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                            `pulumi:"netscanVulnerability"`
	Severity             *string                            `pulumi:"severity"`
	SnifferTraffic       *string                            `pulumi:"snifferTraffic"`
	Ssh                  *string                            `pulumi:"ssh"`
	Vdomparam            *string                            `pulumi:"vdomparam"`
	Voip                 *string                            `pulumi:"voip"`
	ZtnaTraffic          *string                            `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogFortianalyzer2Filter resource.
type LogFortianalyzer2FilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	DlpArchive           pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogFortianalyzer2FilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogFortianalyzer2FilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logFortianalyzer2FilterArgs)(nil)).Elem()
}

type LogFortianalyzer2FilterInput interface {
	pulumi.Input

	ToLogFortianalyzer2FilterOutput() LogFortianalyzer2FilterOutput
	ToLogFortianalyzer2FilterOutputWithContext(ctx context.Context) LogFortianalyzer2FilterOutput
}

func (*LogFortianalyzer2Filter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzer2Filter)(nil)).Elem()
}

func (i *LogFortianalyzer2Filter) ToLogFortianalyzer2FilterOutput() LogFortianalyzer2FilterOutput {
	return i.ToLogFortianalyzer2FilterOutputWithContext(context.Background())
}

func (i *LogFortianalyzer2Filter) ToLogFortianalyzer2FilterOutputWithContext(ctx context.Context) LogFortianalyzer2FilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2FilterOutput)
}

// LogFortianalyzer2FilterArrayInput is an input type that accepts LogFortianalyzer2FilterArray and LogFortianalyzer2FilterArrayOutput values.
// You can construct a concrete instance of `LogFortianalyzer2FilterArrayInput` via:
//
//	LogFortianalyzer2FilterArray{ LogFortianalyzer2FilterArgs{...} }
type LogFortianalyzer2FilterArrayInput interface {
	pulumi.Input

	ToLogFortianalyzer2FilterArrayOutput() LogFortianalyzer2FilterArrayOutput
	ToLogFortianalyzer2FilterArrayOutputWithContext(context.Context) LogFortianalyzer2FilterArrayOutput
}

type LogFortianalyzer2FilterArray []LogFortianalyzer2FilterInput

func (LogFortianalyzer2FilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzer2Filter)(nil)).Elem()
}

func (i LogFortianalyzer2FilterArray) ToLogFortianalyzer2FilterArrayOutput() LogFortianalyzer2FilterArrayOutput {
	return i.ToLogFortianalyzer2FilterArrayOutputWithContext(context.Background())
}

func (i LogFortianalyzer2FilterArray) ToLogFortianalyzer2FilterArrayOutputWithContext(ctx context.Context) LogFortianalyzer2FilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2FilterArrayOutput)
}

// LogFortianalyzer2FilterMapInput is an input type that accepts LogFortianalyzer2FilterMap and LogFortianalyzer2FilterMapOutput values.
// You can construct a concrete instance of `LogFortianalyzer2FilterMapInput` via:
//
//	LogFortianalyzer2FilterMap{ "key": LogFortianalyzer2FilterArgs{...} }
type LogFortianalyzer2FilterMapInput interface {
	pulumi.Input

	ToLogFortianalyzer2FilterMapOutput() LogFortianalyzer2FilterMapOutput
	ToLogFortianalyzer2FilterMapOutputWithContext(context.Context) LogFortianalyzer2FilterMapOutput
}

type LogFortianalyzer2FilterMap map[string]LogFortianalyzer2FilterInput

func (LogFortianalyzer2FilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzer2Filter)(nil)).Elem()
}

func (i LogFortianalyzer2FilterMap) ToLogFortianalyzer2FilterMapOutput() LogFortianalyzer2FilterMapOutput {
	return i.ToLogFortianalyzer2FilterMapOutputWithContext(context.Background())
}

func (i LogFortianalyzer2FilterMap) ToLogFortianalyzer2FilterMapOutputWithContext(ctx context.Context) LogFortianalyzer2FilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogFortianalyzer2FilterMapOutput)
}

type LogFortianalyzer2FilterOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2FilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogFortianalyzer2Filter)(nil)).Elem()
}

func (o LogFortianalyzer2FilterOutput) ToLogFortianalyzer2FilterOutput() LogFortianalyzer2FilterOutput {
	return o
}

func (o LogFortianalyzer2FilterOutput) ToLogFortianalyzer2FilterOutputWithContext(ctx context.Context) LogFortianalyzer2FilterOutput {
	return o
}

func (o LogFortianalyzer2FilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) DlpArchive() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.DlpArchive }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzer2FilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) FreeStyles() LogFortianalyzer2FilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) LogFortianalyzer2FilterFreeStyleArrayOutput { return v.FreeStyles }).(LogFortianalyzer2FilterFreeStyleArrayOutput)
}

func (o LogFortianalyzer2FilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzer2FilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogFortianalyzer2FilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogFortianalyzer2FilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogFortianalyzer2Filter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogFortianalyzer2FilterArrayOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2FilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogFortianalyzer2Filter)(nil)).Elem()
}

func (o LogFortianalyzer2FilterArrayOutput) ToLogFortianalyzer2FilterArrayOutput() LogFortianalyzer2FilterArrayOutput {
	return o
}

func (o LogFortianalyzer2FilterArrayOutput) ToLogFortianalyzer2FilterArrayOutputWithContext(ctx context.Context) LogFortianalyzer2FilterArrayOutput {
	return o
}

func (o LogFortianalyzer2FilterArrayOutput) Index(i pulumi.IntInput) LogFortianalyzer2FilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogFortianalyzer2Filter {
		return vs[0].([]*LogFortianalyzer2Filter)[vs[1].(int)]
	}).(LogFortianalyzer2FilterOutput)
}

type LogFortianalyzer2FilterMapOutput struct{ *pulumi.OutputState }

func (LogFortianalyzer2FilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogFortianalyzer2Filter)(nil)).Elem()
}

func (o LogFortianalyzer2FilterMapOutput) ToLogFortianalyzer2FilterMapOutput() LogFortianalyzer2FilterMapOutput {
	return o
}

func (o LogFortianalyzer2FilterMapOutput) ToLogFortianalyzer2FilterMapOutputWithContext(ctx context.Context) LogFortianalyzer2FilterMapOutput {
	return o
}

func (o LogFortianalyzer2FilterMapOutput) MapIndex(k pulumi.StringInput) LogFortianalyzer2FilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogFortianalyzer2Filter {
		return vs[0].(map[string]*LogFortianalyzer2Filter)[vs[1].(string)]
	}).(LogFortianalyzer2FilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2FilterInput)(nil)).Elem(), &LogFortianalyzer2Filter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2FilterArrayInput)(nil)).Elem(), LogFortianalyzer2FilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogFortianalyzer2FilterMapInput)(nil)).Elem(), LogFortianalyzer2FilterMap{})
	pulumi.RegisterOutputType(LogFortianalyzer2FilterOutput{})
	pulumi.RegisterOutputType(LogFortianalyzer2FilterArrayOutput{})
	pulumi.RegisterOutputType(LogFortianalyzer2FilterMapOutput{})
}
