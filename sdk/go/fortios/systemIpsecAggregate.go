// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemIpsecAggregate struct {
	pulumi.CustomResourceState

	Algorithm           pulumi.StringOutput                   `pulumi:"algorithm"`
	DynamicSortSubtable pulumi.StringPtrOutput                `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                `pulumi:"getAllTables"`
	Members             SystemIpsecAggregateMemberArrayOutput `pulumi:"members"`
	Name                pulumi.StringOutput                   `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                `pulumi:"vdomparam"`
}

// NewSystemIpsecAggregate registers a new resource with the given unique name, arguments, and options.
func NewSystemIpsecAggregate(ctx *pulumi.Context,
	name string, args *SystemIpsecAggregateArgs, opts ...pulumi.ResourceOption) (*SystemIpsecAggregate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemIpsecAggregate
	err := ctx.RegisterResource("fortios:index/systemIpsecAggregate:SystemIpsecAggregate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemIpsecAggregate gets an existing SystemIpsecAggregate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemIpsecAggregate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemIpsecAggregateState, opts ...pulumi.ResourceOption) (*SystemIpsecAggregate, error) {
	var resource SystemIpsecAggregate
	err := ctx.ReadResource("fortios:index/systemIpsecAggregate:SystemIpsecAggregate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemIpsecAggregate resources.
type systemIpsecAggregateState struct {
	Algorithm           *string                      `pulumi:"algorithm"`
	DynamicSortSubtable *string                      `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                      `pulumi:"getAllTables"`
	Members             []SystemIpsecAggregateMember `pulumi:"members"`
	Name                *string                      `pulumi:"name"`
	Vdomparam           *string                      `pulumi:"vdomparam"`
}

type SystemIpsecAggregateState struct {
	Algorithm           pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Members             SystemIpsecAggregateMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemIpsecAggregateState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsecAggregateState)(nil)).Elem()
}

type systemIpsecAggregateArgs struct {
	Algorithm           *string                      `pulumi:"algorithm"`
	DynamicSortSubtable *string                      `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                      `pulumi:"getAllTables"`
	Members             []SystemIpsecAggregateMember `pulumi:"members"`
	Name                *string                      `pulumi:"name"`
	Vdomparam           *string                      `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemIpsecAggregate resource.
type SystemIpsecAggregateArgs struct {
	Algorithm           pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Members             SystemIpsecAggregateMemberArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemIpsecAggregateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIpsecAggregateArgs)(nil)).Elem()
}

type SystemIpsecAggregateInput interface {
	pulumi.Input

	ToSystemIpsecAggregateOutput() SystemIpsecAggregateOutput
	ToSystemIpsecAggregateOutputWithContext(ctx context.Context) SystemIpsecAggregateOutput
}

func (*SystemIpsecAggregate) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsecAggregate)(nil)).Elem()
}

func (i *SystemIpsecAggregate) ToSystemIpsecAggregateOutput() SystemIpsecAggregateOutput {
	return i.ToSystemIpsecAggregateOutputWithContext(context.Background())
}

func (i *SystemIpsecAggregate) ToSystemIpsecAggregateOutputWithContext(ctx context.Context) SystemIpsecAggregateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecAggregateOutput)
}

func (i *SystemIpsecAggregate) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsecAggregate] {
	return pulumix.Output[*SystemIpsecAggregate]{
		OutputState: i.ToSystemIpsecAggregateOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsecAggregateArrayInput is an input type that accepts SystemIpsecAggregateArray and SystemIpsecAggregateArrayOutput values.
// You can construct a concrete instance of `SystemIpsecAggregateArrayInput` via:
//
//	SystemIpsecAggregateArray{ SystemIpsecAggregateArgs{...} }
type SystemIpsecAggregateArrayInput interface {
	pulumi.Input

	ToSystemIpsecAggregateArrayOutput() SystemIpsecAggregateArrayOutput
	ToSystemIpsecAggregateArrayOutputWithContext(context.Context) SystemIpsecAggregateArrayOutput
}

type SystemIpsecAggregateArray []SystemIpsecAggregateInput

func (SystemIpsecAggregateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsecAggregate)(nil)).Elem()
}

func (i SystemIpsecAggregateArray) ToSystemIpsecAggregateArrayOutput() SystemIpsecAggregateArrayOutput {
	return i.ToSystemIpsecAggregateArrayOutputWithContext(context.Background())
}

func (i SystemIpsecAggregateArray) ToSystemIpsecAggregateArrayOutputWithContext(ctx context.Context) SystemIpsecAggregateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecAggregateArrayOutput)
}

func (i SystemIpsecAggregateArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsecAggregate] {
	return pulumix.Output[[]*SystemIpsecAggregate]{
		OutputState: i.ToSystemIpsecAggregateArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemIpsecAggregateMapInput is an input type that accepts SystemIpsecAggregateMap and SystemIpsecAggregateMapOutput values.
// You can construct a concrete instance of `SystemIpsecAggregateMapInput` via:
//
//	SystemIpsecAggregateMap{ "key": SystemIpsecAggregateArgs{...} }
type SystemIpsecAggregateMapInput interface {
	pulumi.Input

	ToSystemIpsecAggregateMapOutput() SystemIpsecAggregateMapOutput
	ToSystemIpsecAggregateMapOutputWithContext(context.Context) SystemIpsecAggregateMapOutput
}

type SystemIpsecAggregateMap map[string]SystemIpsecAggregateInput

func (SystemIpsecAggregateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsecAggregate)(nil)).Elem()
}

func (i SystemIpsecAggregateMap) ToSystemIpsecAggregateMapOutput() SystemIpsecAggregateMapOutput {
	return i.ToSystemIpsecAggregateMapOutputWithContext(context.Background())
}

func (i SystemIpsecAggregateMap) ToSystemIpsecAggregateMapOutputWithContext(ctx context.Context) SystemIpsecAggregateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIpsecAggregateMapOutput)
}

func (i SystemIpsecAggregateMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsecAggregate] {
	return pulumix.Output[map[string]*SystemIpsecAggregate]{
		OutputState: i.ToSystemIpsecAggregateMapOutputWithContext(ctx).OutputState,
	}
}

type SystemIpsecAggregateOutput struct{ *pulumi.OutputState }

func (SystemIpsecAggregateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIpsecAggregate)(nil)).Elem()
}

func (o SystemIpsecAggregateOutput) ToSystemIpsecAggregateOutput() SystemIpsecAggregateOutput {
	return o
}

func (o SystemIpsecAggregateOutput) ToSystemIpsecAggregateOutputWithContext(ctx context.Context) SystemIpsecAggregateOutput {
	return o
}

func (o SystemIpsecAggregateOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemIpsecAggregate] {
	return pulumix.Output[*SystemIpsecAggregate]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsecAggregateOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) pulumi.StringOutput { return v.Algorithm }).(pulumi.StringOutput)
}

func (o SystemIpsecAggregateOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemIpsecAggregateOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemIpsecAggregateOutput) Members() SystemIpsecAggregateMemberArrayOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) SystemIpsecAggregateMemberArrayOutput { return v.Members }).(SystemIpsecAggregateMemberArrayOutput)
}

func (o SystemIpsecAggregateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemIpsecAggregateOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIpsecAggregate) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemIpsecAggregateArrayOutput struct{ *pulumi.OutputState }

func (SystemIpsecAggregateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIpsecAggregate)(nil)).Elem()
}

func (o SystemIpsecAggregateArrayOutput) ToSystemIpsecAggregateArrayOutput() SystemIpsecAggregateArrayOutput {
	return o
}

func (o SystemIpsecAggregateArrayOutput) ToSystemIpsecAggregateArrayOutputWithContext(ctx context.Context) SystemIpsecAggregateArrayOutput {
	return o
}

func (o SystemIpsecAggregateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemIpsecAggregate] {
	return pulumix.Output[[]*SystemIpsecAggregate]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsecAggregateArrayOutput) Index(i pulumi.IntInput) SystemIpsecAggregateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemIpsecAggregate {
		return vs[0].([]*SystemIpsecAggregate)[vs[1].(int)]
	}).(SystemIpsecAggregateOutput)
}

type SystemIpsecAggregateMapOutput struct{ *pulumi.OutputState }

func (SystemIpsecAggregateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIpsecAggregate)(nil)).Elem()
}

func (o SystemIpsecAggregateMapOutput) ToSystemIpsecAggregateMapOutput() SystemIpsecAggregateMapOutput {
	return o
}

func (o SystemIpsecAggregateMapOutput) ToSystemIpsecAggregateMapOutputWithContext(ctx context.Context) SystemIpsecAggregateMapOutput {
	return o
}

func (o SystemIpsecAggregateMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemIpsecAggregate] {
	return pulumix.Output[map[string]*SystemIpsecAggregate]{
		OutputState: o.OutputState,
	}
}

func (o SystemIpsecAggregateMapOutput) MapIndex(k pulumi.StringInput) SystemIpsecAggregateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemIpsecAggregate {
		return vs[0].(map[string]*SystemIpsecAggregate)[vs[1].(string)]
	}).(SystemIpsecAggregateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecAggregateInput)(nil)).Elem(), &SystemIpsecAggregate{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecAggregateArrayInput)(nil)).Elem(), SystemIpsecAggregateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIpsecAggregateMapInput)(nil)).Elem(), SystemIpsecAggregateMap{})
	pulumi.RegisterOutputType(SystemIpsecAggregateOutput{})
	pulumi.RegisterOutputType(SystemIpsecAggregateArrayOutput{})
	pulumi.RegisterOutputType(SystemIpsecAggregateMapOutput{})
}
