// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Show vendor and the MAC address they have. Applies to FortiOS Version `>= 6.4.0`.
//
// ## Import
//
// Firewall VendorMac can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/firewallVendorMac:FirewallVendorMac labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallVendorMac struct {
	pulumi.CustomResourceState

	// Vendor ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Total number of MAC addresses.
	MacNumber pulumi.IntOutput `pulumi:"macNumber"`
	// Vendor name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallVendorMac registers a new resource with the given unique name, arguments, and options.
func NewFirewallVendorMac(ctx *pulumi.Context,
	name string, args *FirewallVendorMacArgs, opts ...pulumi.ResourceOption) (*FirewallVendorMac, error) {
	if args == nil {
		args = &FirewallVendorMacArgs{}
	}

	var resource FirewallVendorMac
	err := ctx.RegisterResource("fortios:index/firewallVendorMac:FirewallVendorMac", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallVendorMac gets an existing FirewallVendorMac resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallVendorMac(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallVendorMacState, opts ...pulumi.ResourceOption) (*FirewallVendorMac, error) {
	var resource FirewallVendorMac
	err := ctx.ReadResource("fortios:index/firewallVendorMac:FirewallVendorMac", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallVendorMac resources.
type firewallVendorMacState struct {
	// Vendor ID.
	Fosid *int `pulumi:"fosid"`
	// Total number of MAC addresses.
	MacNumber *int `pulumi:"macNumber"`
	// Vendor name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallVendorMacState struct {
	// Vendor ID.
	Fosid pulumi.IntPtrInput
	// Total number of MAC addresses.
	MacNumber pulumi.IntPtrInput
	// Vendor name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallVendorMacState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVendorMacState)(nil)).Elem()
}

type firewallVendorMacArgs struct {
	// Vendor ID.
	Fosid *int `pulumi:"fosid"`
	// Total number of MAC addresses.
	MacNumber *int `pulumi:"macNumber"`
	// Vendor name.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallVendorMac resource.
type FirewallVendorMacArgs struct {
	// Vendor ID.
	Fosid pulumi.IntPtrInput
	// Total number of MAC addresses.
	MacNumber pulumi.IntPtrInput
	// Vendor name.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallVendorMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVendorMacArgs)(nil)).Elem()
}

type FirewallVendorMacInput interface {
	pulumi.Input

	ToFirewallVendorMacOutput() FirewallVendorMacOutput
	ToFirewallVendorMacOutputWithContext(ctx context.Context) FirewallVendorMacOutput
}

func (*FirewallVendorMac) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVendorMac)(nil))
}

func (i *FirewallVendorMac) ToFirewallVendorMacOutput() FirewallVendorMacOutput {
	return i.ToFirewallVendorMacOutputWithContext(context.Background())
}

func (i *FirewallVendorMac) ToFirewallVendorMacOutputWithContext(ctx context.Context) FirewallVendorMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVendorMacOutput)
}

func (i *FirewallVendorMac) ToFirewallVendorMacPtrOutput() FirewallVendorMacPtrOutput {
	return i.ToFirewallVendorMacPtrOutputWithContext(context.Background())
}

func (i *FirewallVendorMac) ToFirewallVendorMacPtrOutputWithContext(ctx context.Context) FirewallVendorMacPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVendorMacPtrOutput)
}

type FirewallVendorMacPtrInput interface {
	pulumi.Input

	ToFirewallVendorMacPtrOutput() FirewallVendorMacPtrOutput
	ToFirewallVendorMacPtrOutputWithContext(ctx context.Context) FirewallVendorMacPtrOutput
}

type firewallVendorMacPtrType FirewallVendorMacArgs

func (*firewallVendorMacPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVendorMac)(nil))
}

func (i *firewallVendorMacPtrType) ToFirewallVendorMacPtrOutput() FirewallVendorMacPtrOutput {
	return i.ToFirewallVendorMacPtrOutputWithContext(context.Background())
}

func (i *firewallVendorMacPtrType) ToFirewallVendorMacPtrOutputWithContext(ctx context.Context) FirewallVendorMacPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVendorMacPtrOutput)
}

// FirewallVendorMacArrayInput is an input type that accepts FirewallVendorMacArray and FirewallVendorMacArrayOutput values.
// You can construct a concrete instance of `FirewallVendorMacArrayInput` via:
//
//          FirewallVendorMacArray{ FirewallVendorMacArgs{...} }
type FirewallVendorMacArrayInput interface {
	pulumi.Input

	ToFirewallVendorMacArrayOutput() FirewallVendorMacArrayOutput
	ToFirewallVendorMacArrayOutputWithContext(context.Context) FirewallVendorMacArrayOutput
}

type FirewallVendorMacArray []FirewallVendorMacInput

func (FirewallVendorMacArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*FirewallVendorMac)(nil))
}

func (i FirewallVendorMacArray) ToFirewallVendorMacArrayOutput() FirewallVendorMacArrayOutput {
	return i.ToFirewallVendorMacArrayOutputWithContext(context.Background())
}

func (i FirewallVendorMacArray) ToFirewallVendorMacArrayOutputWithContext(ctx context.Context) FirewallVendorMacArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVendorMacArrayOutput)
}

// FirewallVendorMacMapInput is an input type that accepts FirewallVendorMacMap and FirewallVendorMacMapOutput values.
// You can construct a concrete instance of `FirewallVendorMacMapInput` via:
//
//          FirewallVendorMacMap{ "key": FirewallVendorMacArgs{...} }
type FirewallVendorMacMapInput interface {
	pulumi.Input

	ToFirewallVendorMacMapOutput() FirewallVendorMacMapOutput
	ToFirewallVendorMacMapOutputWithContext(context.Context) FirewallVendorMacMapOutput
}

type FirewallVendorMacMap map[string]FirewallVendorMacInput

func (FirewallVendorMacMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*FirewallVendorMac)(nil))
}

func (i FirewallVendorMacMap) ToFirewallVendorMacMapOutput() FirewallVendorMacMapOutput {
	return i.ToFirewallVendorMacMapOutputWithContext(context.Background())
}

func (i FirewallVendorMacMap) ToFirewallVendorMacMapOutputWithContext(ctx context.Context) FirewallVendorMacMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVendorMacMapOutput)
}

type FirewallVendorMacOutput struct {
	*pulumi.OutputState
}

func (FirewallVendorMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVendorMac)(nil))
}

func (o FirewallVendorMacOutput) ToFirewallVendorMacOutput() FirewallVendorMacOutput {
	return o
}

func (o FirewallVendorMacOutput) ToFirewallVendorMacOutputWithContext(ctx context.Context) FirewallVendorMacOutput {
	return o
}

func (o FirewallVendorMacOutput) ToFirewallVendorMacPtrOutput() FirewallVendorMacPtrOutput {
	return o.ToFirewallVendorMacPtrOutputWithContext(context.Background())
}

func (o FirewallVendorMacOutput) ToFirewallVendorMacPtrOutputWithContext(ctx context.Context) FirewallVendorMacPtrOutput {
	return o.ApplyT(func(v FirewallVendorMac) *FirewallVendorMac {
		return &v
	}).(FirewallVendorMacPtrOutput)
}

type FirewallVendorMacPtrOutput struct {
	*pulumi.OutputState
}

func (FirewallVendorMacPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVendorMac)(nil))
}

func (o FirewallVendorMacPtrOutput) ToFirewallVendorMacPtrOutput() FirewallVendorMacPtrOutput {
	return o
}

func (o FirewallVendorMacPtrOutput) ToFirewallVendorMacPtrOutputWithContext(ctx context.Context) FirewallVendorMacPtrOutput {
	return o
}

type FirewallVendorMacArrayOutput struct{ *pulumi.OutputState }

func (FirewallVendorMacArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallVendorMac)(nil))
}

func (o FirewallVendorMacArrayOutput) ToFirewallVendorMacArrayOutput() FirewallVendorMacArrayOutput {
	return o
}

func (o FirewallVendorMacArrayOutput) ToFirewallVendorMacArrayOutputWithContext(ctx context.Context) FirewallVendorMacArrayOutput {
	return o
}

func (o FirewallVendorMacArrayOutput) Index(i pulumi.IntInput) FirewallVendorMacOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallVendorMac {
		return vs[0].([]FirewallVendorMac)[vs[1].(int)]
	}).(FirewallVendorMacOutput)
}

type FirewallVendorMacMapOutput struct{ *pulumi.OutputState }

func (FirewallVendorMacMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FirewallVendorMac)(nil))
}

func (o FirewallVendorMacMapOutput) ToFirewallVendorMacMapOutput() FirewallVendorMacMapOutput {
	return o
}

func (o FirewallVendorMacMapOutput) ToFirewallVendorMacMapOutputWithContext(ctx context.Context) FirewallVendorMacMapOutput {
	return o
}

func (o FirewallVendorMacMapOutput) MapIndex(k pulumi.StringInput) FirewallVendorMacOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FirewallVendorMac {
		return vs[0].(map[string]FirewallVendorMac)[vs[1].(string)]
	}).(FirewallVendorMacOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallVendorMacOutput{})
	pulumi.RegisterOutputType(FirewallVendorMacPtrOutput{})
	pulumi.RegisterOutputType(FirewallVendorMacArrayOutput{})
	pulumi.RegisterOutputType(FirewallVendorMacMapOutput{})
}
