// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource supports modifying system ntp setting for FortiManager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFortimanagerSystemNTP(ctx, "test1", &fortios.FortimanagerSystemNTPArgs{
// 			Server:       pulumi.String("ntp1.fortinet.com"),
// 			Status:       pulumi.String("enable"),
// 			SyncInterval: pulumi.Int(30),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type FortimanagerSystemNTP struct {
	pulumi.CustomResourceState

	// IP address/hostname of NTP Server.
	Server pulumi.StringOutput `pulumi:"server"`
	// Enable/disable NTP.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// NTP sync interval (minute).
	SyncInterval pulumi.IntPtrOutput `pulumi:"syncInterval"`
}

// NewFortimanagerSystemNTP registers a new resource with the given unique name, arguments, and options.
func NewFortimanagerSystemNTP(ctx *pulumi.Context,
	name string, args *FortimanagerSystemNTPArgs, opts ...pulumi.ResourceOption) (*FortimanagerSystemNTP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Server == nil {
		return nil, errors.New("invalid value for required argument 'Server'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FortimanagerSystemNTP
	err := ctx.RegisterResource("fortios:index/fortimanagerSystemNTP:FortimanagerSystemNTP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFortimanagerSystemNTP gets an existing FortimanagerSystemNTP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFortimanagerSystemNTP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FortimanagerSystemNTPState, opts ...pulumi.ResourceOption) (*FortimanagerSystemNTP, error) {
	var resource FortimanagerSystemNTP
	err := ctx.ReadResource("fortios:index/fortimanagerSystemNTP:FortimanagerSystemNTP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FortimanagerSystemNTP resources.
type fortimanagerSystemNTPState struct {
	// IP address/hostname of NTP Server.
	Server *string `pulumi:"server"`
	// Enable/disable NTP.
	Status *string `pulumi:"status"`
	// NTP sync interval (minute).
	SyncInterval *int `pulumi:"syncInterval"`
}

type FortimanagerSystemNTPState struct {
	// IP address/hostname of NTP Server.
	Server pulumi.StringPtrInput
	// Enable/disable NTP.
	Status pulumi.StringPtrInput
	// NTP sync interval (minute).
	SyncInterval pulumi.IntPtrInput
}

func (FortimanagerSystemNTPState) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemNTPState)(nil)).Elem()
}

type fortimanagerSystemNTPArgs struct {
	// IP address/hostname of NTP Server.
	Server string `pulumi:"server"`
	// Enable/disable NTP.
	Status *string `pulumi:"status"`
	// NTP sync interval (minute).
	SyncInterval *int `pulumi:"syncInterval"`
}

// The set of arguments for constructing a FortimanagerSystemNTP resource.
type FortimanagerSystemNTPArgs struct {
	// IP address/hostname of NTP Server.
	Server pulumi.StringInput
	// Enable/disable NTP.
	Status pulumi.StringPtrInput
	// NTP sync interval (minute).
	SyncInterval pulumi.IntPtrInput
}

func (FortimanagerSystemNTPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fortimanagerSystemNTPArgs)(nil)).Elem()
}

type FortimanagerSystemNTPInput interface {
	pulumi.Input

	ToFortimanagerSystemNTPOutput() FortimanagerSystemNTPOutput
	ToFortimanagerSystemNTPOutputWithContext(ctx context.Context) FortimanagerSystemNTPOutput
}

func (*FortimanagerSystemNTP) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemNTP)(nil)).Elem()
}

func (i *FortimanagerSystemNTP) ToFortimanagerSystemNTPOutput() FortimanagerSystemNTPOutput {
	return i.ToFortimanagerSystemNTPOutputWithContext(context.Background())
}

func (i *FortimanagerSystemNTP) ToFortimanagerSystemNTPOutputWithContext(ctx context.Context) FortimanagerSystemNTPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemNTPOutput)
}

// FortimanagerSystemNTPArrayInput is an input type that accepts FortimanagerSystemNTPArray and FortimanagerSystemNTPArrayOutput values.
// You can construct a concrete instance of `FortimanagerSystemNTPArrayInput` via:
//
//          FortimanagerSystemNTPArray{ FortimanagerSystemNTPArgs{...} }
type FortimanagerSystemNTPArrayInput interface {
	pulumi.Input

	ToFortimanagerSystemNTPArrayOutput() FortimanagerSystemNTPArrayOutput
	ToFortimanagerSystemNTPArrayOutputWithContext(context.Context) FortimanagerSystemNTPArrayOutput
}

type FortimanagerSystemNTPArray []FortimanagerSystemNTPInput

func (FortimanagerSystemNTPArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemNTP)(nil)).Elem()
}

func (i FortimanagerSystemNTPArray) ToFortimanagerSystemNTPArrayOutput() FortimanagerSystemNTPArrayOutput {
	return i.ToFortimanagerSystemNTPArrayOutputWithContext(context.Background())
}

func (i FortimanagerSystemNTPArray) ToFortimanagerSystemNTPArrayOutputWithContext(ctx context.Context) FortimanagerSystemNTPArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemNTPArrayOutput)
}

// FortimanagerSystemNTPMapInput is an input type that accepts FortimanagerSystemNTPMap and FortimanagerSystemNTPMapOutput values.
// You can construct a concrete instance of `FortimanagerSystemNTPMapInput` via:
//
//          FortimanagerSystemNTPMap{ "key": FortimanagerSystemNTPArgs{...} }
type FortimanagerSystemNTPMapInput interface {
	pulumi.Input

	ToFortimanagerSystemNTPMapOutput() FortimanagerSystemNTPMapOutput
	ToFortimanagerSystemNTPMapOutputWithContext(context.Context) FortimanagerSystemNTPMapOutput
}

type FortimanagerSystemNTPMap map[string]FortimanagerSystemNTPInput

func (FortimanagerSystemNTPMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemNTP)(nil)).Elem()
}

func (i FortimanagerSystemNTPMap) ToFortimanagerSystemNTPMapOutput() FortimanagerSystemNTPMapOutput {
	return i.ToFortimanagerSystemNTPMapOutputWithContext(context.Background())
}

func (i FortimanagerSystemNTPMap) ToFortimanagerSystemNTPMapOutputWithContext(ctx context.Context) FortimanagerSystemNTPMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FortimanagerSystemNTPMapOutput)
}

type FortimanagerSystemNTPOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemNTPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FortimanagerSystemNTP)(nil)).Elem()
}

func (o FortimanagerSystemNTPOutput) ToFortimanagerSystemNTPOutput() FortimanagerSystemNTPOutput {
	return o
}

func (o FortimanagerSystemNTPOutput) ToFortimanagerSystemNTPOutputWithContext(ctx context.Context) FortimanagerSystemNTPOutput {
	return o
}

type FortimanagerSystemNTPArrayOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemNTPArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FortimanagerSystemNTP)(nil)).Elem()
}

func (o FortimanagerSystemNTPArrayOutput) ToFortimanagerSystemNTPArrayOutput() FortimanagerSystemNTPArrayOutput {
	return o
}

func (o FortimanagerSystemNTPArrayOutput) ToFortimanagerSystemNTPArrayOutputWithContext(ctx context.Context) FortimanagerSystemNTPArrayOutput {
	return o
}

func (o FortimanagerSystemNTPArrayOutput) Index(i pulumi.IntInput) FortimanagerSystemNTPOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FortimanagerSystemNTP {
		return vs[0].([]*FortimanagerSystemNTP)[vs[1].(int)]
	}).(FortimanagerSystemNTPOutput)
}

type FortimanagerSystemNTPMapOutput struct{ *pulumi.OutputState }

func (FortimanagerSystemNTPMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FortimanagerSystemNTP)(nil)).Elem()
}

func (o FortimanagerSystemNTPMapOutput) ToFortimanagerSystemNTPMapOutput() FortimanagerSystemNTPMapOutput {
	return o
}

func (o FortimanagerSystemNTPMapOutput) ToFortimanagerSystemNTPMapOutputWithContext(ctx context.Context) FortimanagerSystemNTPMapOutput {
	return o
}

func (o FortimanagerSystemNTPMapOutput) MapIndex(k pulumi.StringInput) FortimanagerSystemNTPOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FortimanagerSystemNTP {
		return vs[0].(map[string]*FortimanagerSystemNTP)[vs[1].(string)]
	}).(FortimanagerSystemNTPOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemNTPInput)(nil)).Elem(), &FortimanagerSystemNTP{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemNTPArrayInput)(nil)).Elem(), FortimanagerSystemNTPArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FortimanagerSystemNTPMapInput)(nil)).Elem(), FortimanagerSystemNTPMap{})
	pulumi.RegisterOutputType(FortimanagerSystemNTPOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemNTPArrayOutput{})
	pulumi.RegisterOutputType(FortimanagerSystemNTPMapOutput{})
}
