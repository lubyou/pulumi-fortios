// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SystemSnmpCommunity struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput               `pulumi:"dynamicSortSubtable"`
	Events              pulumi.StringOutput                  `pulumi:"events"`
	Fosid               pulumi.IntOutput                     `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput               `pulumi:"getAllTables"`
	Hosts               SystemSnmpCommunityHostArrayOutput   `pulumi:"hosts"`
	Hosts6s             SystemSnmpCommunityHosts6ArrayOutput `pulumi:"hosts6s"`
	MibView             pulumi.StringOutput                  `pulumi:"mibView"`
	Name                pulumi.StringOutput                  `pulumi:"name"`
	QueryV1Port         pulumi.IntOutput                     `pulumi:"queryV1Port"`
	QueryV1Status       pulumi.StringOutput                  `pulumi:"queryV1Status"`
	QueryV2cPort        pulumi.IntOutput                     `pulumi:"queryV2cPort"`
	QueryV2cStatus      pulumi.StringOutput                  `pulumi:"queryV2cStatus"`
	Status              pulumi.StringOutput                  `pulumi:"status"`
	TrapV1Lport         pulumi.IntOutput                     `pulumi:"trapV1Lport"`
	TrapV1Rport         pulumi.IntOutput                     `pulumi:"trapV1Rport"`
	TrapV1Status        pulumi.StringOutput                  `pulumi:"trapV1Status"`
	TrapV2cLport        pulumi.IntOutput                     `pulumi:"trapV2cLport"`
	TrapV2cRport        pulumi.IntOutput                     `pulumi:"trapV2cRport"`
	TrapV2cStatus       pulumi.StringOutput                  `pulumi:"trapV2cStatus"`
	Vdomparam           pulumi.StringPtrOutput               `pulumi:"vdomparam"`
	Vdoms               SystemSnmpCommunityVdomArrayOutput   `pulumi:"vdoms"`
}

// NewSystemSnmpCommunity registers a new resource with the given unique name, arguments, and options.
func NewSystemSnmpCommunity(ctx *pulumi.Context,
	name string, args *SystemSnmpCommunityArgs, opts ...pulumi.ResourceOption) (*SystemSnmpCommunity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSnmpCommunity
	err := ctx.RegisterResource("fortios:index/systemSnmpCommunity:SystemSnmpCommunity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSnmpCommunity gets an existing SystemSnmpCommunity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSnmpCommunity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSnmpCommunityState, opts ...pulumi.ResourceOption) (*SystemSnmpCommunity, error) {
	var resource SystemSnmpCommunity
	err := ctx.ReadResource("fortios:index/systemSnmpCommunity:SystemSnmpCommunity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSnmpCommunity resources.
type systemSnmpCommunityState struct {
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	Events              *string                     `pulumi:"events"`
	Fosid               *int                        `pulumi:"fosid"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	Hosts               []SystemSnmpCommunityHost   `pulumi:"hosts"`
	Hosts6s             []SystemSnmpCommunityHosts6 `pulumi:"hosts6s"`
	MibView             *string                     `pulumi:"mibView"`
	Name                *string                     `pulumi:"name"`
	QueryV1Port         *int                        `pulumi:"queryV1Port"`
	QueryV1Status       *string                     `pulumi:"queryV1Status"`
	QueryV2cPort        *int                        `pulumi:"queryV2cPort"`
	QueryV2cStatus      *string                     `pulumi:"queryV2cStatus"`
	Status              *string                     `pulumi:"status"`
	TrapV1Lport         *int                        `pulumi:"trapV1Lport"`
	TrapV1Rport         *int                        `pulumi:"trapV1Rport"`
	TrapV1Status        *string                     `pulumi:"trapV1Status"`
	TrapV2cLport        *int                        `pulumi:"trapV2cLport"`
	TrapV2cRport        *int                        `pulumi:"trapV2cRport"`
	TrapV2cStatus       *string                     `pulumi:"trapV2cStatus"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
	Vdoms               []SystemSnmpCommunityVdom   `pulumi:"vdoms"`
}

type SystemSnmpCommunityState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Hosts               SystemSnmpCommunityHostArrayInput
	Hosts6s             SystemSnmpCommunityHosts6ArrayInput
	MibView             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	QueryV1Port         pulumi.IntPtrInput
	QueryV1Status       pulumi.StringPtrInput
	QueryV2cPort        pulumi.IntPtrInput
	QueryV2cStatus      pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapV1Lport         pulumi.IntPtrInput
	TrapV1Rport         pulumi.IntPtrInput
	TrapV1Status        pulumi.StringPtrInput
	TrapV2cLport        pulumi.IntPtrInput
	TrapV2cRport        pulumi.IntPtrInput
	TrapV2cStatus       pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vdoms               SystemSnmpCommunityVdomArrayInput
}

func (SystemSnmpCommunityState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpCommunityState)(nil)).Elem()
}

type systemSnmpCommunityArgs struct {
	DynamicSortSubtable *string                     `pulumi:"dynamicSortSubtable"`
	Events              *string                     `pulumi:"events"`
	Fosid               int                         `pulumi:"fosid"`
	GetAllTables        *string                     `pulumi:"getAllTables"`
	Hosts               []SystemSnmpCommunityHost   `pulumi:"hosts"`
	Hosts6s             []SystemSnmpCommunityHosts6 `pulumi:"hosts6s"`
	MibView             *string                     `pulumi:"mibView"`
	Name                *string                     `pulumi:"name"`
	QueryV1Port         *int                        `pulumi:"queryV1Port"`
	QueryV1Status       *string                     `pulumi:"queryV1Status"`
	QueryV2cPort        *int                        `pulumi:"queryV2cPort"`
	QueryV2cStatus      *string                     `pulumi:"queryV2cStatus"`
	Status              *string                     `pulumi:"status"`
	TrapV1Lport         *int                        `pulumi:"trapV1Lport"`
	TrapV1Rport         *int                        `pulumi:"trapV1Rport"`
	TrapV1Status        *string                     `pulumi:"trapV1Status"`
	TrapV2cLport        *int                        `pulumi:"trapV2cLport"`
	TrapV2cRport        *int                        `pulumi:"trapV2cRport"`
	TrapV2cStatus       *string                     `pulumi:"trapV2cStatus"`
	Vdomparam           *string                     `pulumi:"vdomparam"`
	Vdoms               []SystemSnmpCommunityVdom   `pulumi:"vdoms"`
}

// The set of arguments for constructing a SystemSnmpCommunity resource.
type SystemSnmpCommunityArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	Fosid               pulumi.IntInput
	GetAllTables        pulumi.StringPtrInput
	Hosts               SystemSnmpCommunityHostArrayInput
	Hosts6s             SystemSnmpCommunityHosts6ArrayInput
	MibView             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	QueryV1Port         pulumi.IntPtrInput
	QueryV1Status       pulumi.StringPtrInput
	QueryV2cPort        pulumi.IntPtrInput
	QueryV2cStatus      pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapV1Lport         pulumi.IntPtrInput
	TrapV1Rport         pulumi.IntPtrInput
	TrapV1Status        pulumi.StringPtrInput
	TrapV2cLport        pulumi.IntPtrInput
	TrapV2cRport        pulumi.IntPtrInput
	TrapV2cStatus       pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vdoms               SystemSnmpCommunityVdomArrayInput
}

func (SystemSnmpCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpCommunityArgs)(nil)).Elem()
}

type SystemSnmpCommunityInput interface {
	pulumi.Input

	ToSystemSnmpCommunityOutput() SystemSnmpCommunityOutput
	ToSystemSnmpCommunityOutputWithContext(ctx context.Context) SystemSnmpCommunityOutput
}

func (*SystemSnmpCommunity) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpCommunity)(nil)).Elem()
}

func (i *SystemSnmpCommunity) ToSystemSnmpCommunityOutput() SystemSnmpCommunityOutput {
	return i.ToSystemSnmpCommunityOutputWithContext(context.Background())
}

func (i *SystemSnmpCommunity) ToSystemSnmpCommunityOutputWithContext(ctx context.Context) SystemSnmpCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityOutput)
}

func (i *SystemSnmpCommunity) ToOutput(ctx context.Context) pulumix.Output[*SystemSnmpCommunity] {
	return pulumix.Output[*SystemSnmpCommunity]{
		OutputState: i.ToSystemSnmpCommunityOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpCommunityArrayInput is an input type that accepts SystemSnmpCommunityArray and SystemSnmpCommunityArrayOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityArrayInput` via:
//
//	SystemSnmpCommunityArray{ SystemSnmpCommunityArgs{...} }
type SystemSnmpCommunityArrayInput interface {
	pulumi.Input

	ToSystemSnmpCommunityArrayOutput() SystemSnmpCommunityArrayOutput
	ToSystemSnmpCommunityArrayOutputWithContext(context.Context) SystemSnmpCommunityArrayOutput
}

type SystemSnmpCommunityArray []SystemSnmpCommunityInput

func (SystemSnmpCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpCommunity)(nil)).Elem()
}

func (i SystemSnmpCommunityArray) ToSystemSnmpCommunityArrayOutput() SystemSnmpCommunityArrayOutput {
	return i.ToSystemSnmpCommunityArrayOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityArray) ToSystemSnmpCommunityArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityArrayOutput)
}

func (i SystemSnmpCommunityArray) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSnmpCommunity] {
	return pulumix.Output[[]*SystemSnmpCommunity]{
		OutputState: i.ToSystemSnmpCommunityArrayOutputWithContext(ctx).OutputState,
	}
}

// SystemSnmpCommunityMapInput is an input type that accepts SystemSnmpCommunityMap and SystemSnmpCommunityMapOutput values.
// You can construct a concrete instance of `SystemSnmpCommunityMapInput` via:
//
//	SystemSnmpCommunityMap{ "key": SystemSnmpCommunityArgs{...} }
type SystemSnmpCommunityMapInput interface {
	pulumi.Input

	ToSystemSnmpCommunityMapOutput() SystemSnmpCommunityMapOutput
	ToSystemSnmpCommunityMapOutputWithContext(context.Context) SystemSnmpCommunityMapOutput
}

type SystemSnmpCommunityMap map[string]SystemSnmpCommunityInput

func (SystemSnmpCommunityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpCommunity)(nil)).Elem()
}

func (i SystemSnmpCommunityMap) ToSystemSnmpCommunityMapOutput() SystemSnmpCommunityMapOutput {
	return i.ToSystemSnmpCommunityMapOutputWithContext(context.Background())
}

func (i SystemSnmpCommunityMap) ToSystemSnmpCommunityMapOutputWithContext(ctx context.Context) SystemSnmpCommunityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpCommunityMapOutput)
}

func (i SystemSnmpCommunityMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSnmpCommunity] {
	return pulumix.Output[map[string]*SystemSnmpCommunity]{
		OutputState: i.ToSystemSnmpCommunityMapOutputWithContext(ctx).OutputState,
	}
}

type SystemSnmpCommunityOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpCommunity)(nil)).Elem()
}

func (o SystemSnmpCommunityOutput) ToSystemSnmpCommunityOutput() SystemSnmpCommunityOutput {
	return o
}

func (o SystemSnmpCommunityOutput) ToSystemSnmpCommunityOutputWithContext(ctx context.Context) SystemSnmpCommunityOutput {
	return o
}

func (o SystemSnmpCommunityOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemSnmpCommunity] {
	return pulumix.Output[*SystemSnmpCommunity]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityOutput) Events() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.Events }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityOutput) Hosts() SystemSnmpCommunityHostArrayOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) SystemSnmpCommunityHostArrayOutput { return v.Hosts }).(SystemSnmpCommunityHostArrayOutput)
}

func (o SystemSnmpCommunityOutput) Hosts6s() SystemSnmpCommunityHosts6ArrayOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) SystemSnmpCommunityHosts6ArrayOutput { return v.Hosts6s }).(SystemSnmpCommunityHosts6ArrayOutput)
}

func (o SystemSnmpCommunityOutput) MibView() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.MibView }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) QueryV1Port() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.QueryV1Port }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) QueryV1Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.QueryV1Status }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) QueryV2cPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.QueryV2cPort }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) QueryV2cStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.QueryV2cStatus }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) TrapV1Lport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.TrapV1Lport }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) TrapV1Rport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.TrapV1Rport }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) TrapV1Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.TrapV1Status }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) TrapV2cLport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.TrapV2cLport }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) TrapV2cRport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.IntOutput { return v.TrapV2cRport }).(pulumi.IntOutput)
}

func (o SystemSnmpCommunityOutput) TrapV2cStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringOutput { return v.TrapV2cStatus }).(pulumi.StringOutput)
}

func (o SystemSnmpCommunityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpCommunityOutput) Vdoms() SystemSnmpCommunityVdomArrayOutput {
	return o.ApplyT(func(v *SystemSnmpCommunity) SystemSnmpCommunityVdomArrayOutput { return v.Vdoms }).(SystemSnmpCommunityVdomArrayOutput)
}

type SystemSnmpCommunityArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpCommunity)(nil)).Elem()
}

func (o SystemSnmpCommunityArrayOutput) ToSystemSnmpCommunityArrayOutput() SystemSnmpCommunityArrayOutput {
	return o
}

func (o SystemSnmpCommunityArrayOutput) ToSystemSnmpCommunityArrayOutputWithContext(ctx context.Context) SystemSnmpCommunityArrayOutput {
	return o
}

func (o SystemSnmpCommunityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SystemSnmpCommunity] {
	return pulumix.Output[[]*SystemSnmpCommunity]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityArrayOutput) Index(i pulumi.IntInput) SystemSnmpCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSnmpCommunity {
		return vs[0].([]*SystemSnmpCommunity)[vs[1].(int)]
	}).(SystemSnmpCommunityOutput)
}

type SystemSnmpCommunityMapOutput struct{ *pulumi.OutputState }

func (SystemSnmpCommunityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpCommunity)(nil)).Elem()
}

func (o SystemSnmpCommunityMapOutput) ToSystemSnmpCommunityMapOutput() SystemSnmpCommunityMapOutput {
	return o
}

func (o SystemSnmpCommunityMapOutput) ToSystemSnmpCommunityMapOutputWithContext(ctx context.Context) SystemSnmpCommunityMapOutput {
	return o
}

func (o SystemSnmpCommunityMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SystemSnmpCommunity] {
	return pulumix.Output[map[string]*SystemSnmpCommunity]{
		OutputState: o.OutputState,
	}
}

func (o SystemSnmpCommunityMapOutput) MapIndex(k pulumi.StringInput) SystemSnmpCommunityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSnmpCommunity {
		return vs[0].(map[string]*SystemSnmpCommunity)[vs[1].(string)]
	}).(SystemSnmpCommunityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityInput)(nil)).Elem(), &SystemSnmpCommunity{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityArrayInput)(nil)).Elem(), SystemSnmpCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpCommunityMapInput)(nil)).Elem(), SystemSnmpCommunityMap{})
	pulumi.RegisterOutputType(SystemSnmpCommunityOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpCommunityMapOutput{})
}
