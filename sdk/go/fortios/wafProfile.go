// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Web application firewall configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWafProfile(ctx, "trname", &fortios.WafProfileArgs{
// 			ExtendedLog: pulumi.String("disable"),
// 			External:    pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Waf Profile can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/wafProfile:WafProfile labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WafProfile struct {
	pulumi.CustomResourceState

	// Black address list and white address list. The structure of `addressList` block is documented below.
	AddressList WafProfileAddressListPtrOutput `pulumi:"addressList"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
	Constraint WafProfileConstraintPtrOutput `pulumi:"constraint"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable extended logging. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringOutput `pulumi:"extendedLog"`
	// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
	External pulumi.StringOutput `pulumi:"external"`
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method WafProfileMethodPtrOutput `pulumi:"method"`
	// Address name.
	Name pulumi.StringOutput `pulumi:"name"`
	// WAF signatures. The structure of `signature` block is documented below.
	Signature WafProfileSignaturePtrOutput `pulumi:"signature"`
	// URL access list The structure of `urlAccess` block is documented below.
	UrlAccesses WafProfileUrlAccessArrayOutput `pulumi:"urlAccesses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWafProfile registers a new resource with the given unique name, arguments, and options.
func NewWafProfile(ctx *pulumi.Context,
	name string, args *WafProfileArgs, opts ...pulumi.ResourceOption) (*WafProfile, error) {
	if args == nil {
		args = &WafProfileArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WafProfile
	err := ctx.RegisterResource("fortios:index/wafProfile:WafProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafProfile gets an existing WafProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafProfileState, opts ...pulumi.ResourceOption) (*WafProfile, error) {
	var resource WafProfile
	err := ctx.ReadResource("fortios:index/wafProfile:WafProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafProfile resources.
type wafProfileState struct {
	// Black address list and white address list. The structure of `addressList` block is documented below.
	AddressList *WafProfileAddressList `pulumi:"addressList"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
	Constraint *WafProfileConstraint `pulumi:"constraint"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable extended logging. Valid values: `enable`, `disable`.
	ExtendedLog *string `pulumi:"extendedLog"`
	// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
	External *string `pulumi:"external"`
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method *WafProfileMethod `pulumi:"method"`
	// Address name.
	Name *string `pulumi:"name"`
	// WAF signatures. The structure of `signature` block is documented below.
	Signature *WafProfileSignature `pulumi:"signature"`
	// URL access list The structure of `urlAccess` block is documented below.
	UrlAccesses []WafProfileUrlAccess `pulumi:"urlAccesses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WafProfileState struct {
	// Black address list and white address list. The structure of `addressList` block is documented below.
	AddressList WafProfileAddressListPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
	Constraint WafProfileConstraintPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable extended logging. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringPtrInput
	// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
	External pulumi.StringPtrInput
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method WafProfileMethodPtrInput
	// Address name.
	Name pulumi.StringPtrInput
	// WAF signatures. The structure of `signature` block is documented below.
	Signature WafProfileSignaturePtrInput
	// URL access list The structure of `urlAccess` block is documented below.
	UrlAccesses WafProfileUrlAccessArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafProfileState)(nil)).Elem()
}

type wafProfileArgs struct {
	// Black address list and white address list. The structure of `addressList` block is documented below.
	AddressList *WafProfileAddressList `pulumi:"addressList"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
	Constraint *WafProfileConstraint `pulumi:"constraint"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable extended logging. Valid values: `enable`, `disable`.
	ExtendedLog *string `pulumi:"extendedLog"`
	// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
	External *string `pulumi:"external"`
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method *WafProfileMethod `pulumi:"method"`
	// Address name.
	Name *string `pulumi:"name"`
	// WAF signatures. The structure of `signature` block is documented below.
	Signature *WafProfileSignature `pulumi:"signature"`
	// URL access list The structure of `urlAccess` block is documented below.
	UrlAccesses []WafProfileUrlAccess `pulumi:"urlAccesses"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WafProfile resource.
type WafProfileArgs struct {
	// Black address list and white address list. The structure of `addressList` block is documented below.
	AddressList WafProfileAddressListPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// WAF HTTP protocol restrictions. The structure of `constraint` block is documented below.
	Constraint WafProfileConstraintPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable extended logging. Valid values: `enable`, `disable`.
	ExtendedLog pulumi.StringPtrInput
	// Disable/Enable external HTTP Inspection. Valid values: `disable`, `enable`.
	External pulumi.StringPtrInput
	// Enable/disable HTTP method check. Valid values: `enable`, `disable`.
	Method WafProfileMethodPtrInput
	// Address name.
	Name pulumi.StringPtrInput
	// WAF signatures. The structure of `signature` block is documented below.
	Signature WafProfileSignaturePtrInput
	// URL access list The structure of `urlAccess` block is documented below.
	UrlAccesses WafProfileUrlAccessArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WafProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafProfileArgs)(nil)).Elem()
}

type WafProfileInput interface {
	pulumi.Input

	ToWafProfileOutput() WafProfileOutput
	ToWafProfileOutputWithContext(ctx context.Context) WafProfileOutput
}

func (*WafProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfile)(nil)).Elem()
}

func (i *WafProfile) ToWafProfileOutput() WafProfileOutput {
	return i.ToWafProfileOutputWithContext(context.Background())
}

func (i *WafProfile) ToWafProfileOutputWithContext(ctx context.Context) WafProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileOutput)
}

// WafProfileArrayInput is an input type that accepts WafProfileArray and WafProfileArrayOutput values.
// You can construct a concrete instance of `WafProfileArrayInput` via:
//
//          WafProfileArray{ WafProfileArgs{...} }
type WafProfileArrayInput interface {
	pulumi.Input

	ToWafProfileArrayOutput() WafProfileArrayOutput
	ToWafProfileArrayOutputWithContext(context.Context) WafProfileArrayOutput
}

type WafProfileArray []WafProfileInput

func (WafProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafProfile)(nil)).Elem()
}

func (i WafProfileArray) ToWafProfileArrayOutput() WafProfileArrayOutput {
	return i.ToWafProfileArrayOutputWithContext(context.Background())
}

func (i WafProfileArray) ToWafProfileArrayOutputWithContext(ctx context.Context) WafProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileArrayOutput)
}

// WafProfileMapInput is an input type that accepts WafProfileMap and WafProfileMapOutput values.
// You can construct a concrete instance of `WafProfileMapInput` via:
//
//          WafProfileMap{ "key": WafProfileArgs{...} }
type WafProfileMapInput interface {
	pulumi.Input

	ToWafProfileMapOutput() WafProfileMapOutput
	ToWafProfileMapOutputWithContext(context.Context) WafProfileMapOutput
}

type WafProfileMap map[string]WafProfileInput

func (WafProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafProfile)(nil)).Elem()
}

func (i WafProfileMap) ToWafProfileMapOutput() WafProfileMapOutput {
	return i.ToWafProfileMapOutputWithContext(context.Background())
}

func (i WafProfileMap) ToWafProfileMapOutputWithContext(ctx context.Context) WafProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafProfileMapOutput)
}

type WafProfileOutput struct{ *pulumi.OutputState }

func (WafProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafProfile)(nil)).Elem()
}

func (o WafProfileOutput) ToWafProfileOutput() WafProfileOutput {
	return o
}

func (o WafProfileOutput) ToWafProfileOutputWithContext(ctx context.Context) WafProfileOutput {
	return o
}

type WafProfileArrayOutput struct{ *pulumi.OutputState }

func (WafProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafProfile)(nil)).Elem()
}

func (o WafProfileArrayOutput) ToWafProfileArrayOutput() WafProfileArrayOutput {
	return o
}

func (o WafProfileArrayOutput) ToWafProfileArrayOutputWithContext(ctx context.Context) WafProfileArrayOutput {
	return o
}

func (o WafProfileArrayOutput) Index(i pulumi.IntInput) WafProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WafProfile {
		return vs[0].([]*WafProfile)[vs[1].(int)]
	}).(WafProfileOutput)
}

type WafProfileMapOutput struct{ *pulumi.OutputState }

func (WafProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafProfile)(nil)).Elem()
}

func (o WafProfileMapOutput) ToWafProfileMapOutput() WafProfileMapOutput {
	return o
}

func (o WafProfileMapOutput) ToWafProfileMapOutputWithContext(ctx context.Context) WafProfileMapOutput {
	return o
}

func (o WafProfileMapOutput) MapIndex(k pulumi.StringInput) WafProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WafProfile {
		return vs[0].(map[string]*WafProfile)[vs[1].(string)]
	}).(WafProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileInput)(nil)).Elem(), &WafProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileArrayInput)(nil)).Elem(), WafProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafProfileMapInput)(nil)).Elem(), WafProfileMap{})
	pulumi.RegisterOutputType(WafProfileOutput{})
	pulumi.RegisterOutputType(WafProfileArrayOutput{})
	pulumi.RegisterOutputType(WafProfileMapOutput{})
}
