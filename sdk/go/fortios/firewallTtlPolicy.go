// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallTtlPolicy struct {
	pulumi.CustomResourceState

	Action              pulumi.StringOutput                 `pulumi:"action"`
	DynamicSortSubtable pulumi.StringPtrOutput              `pulumi:"dynamicSortSubtable"`
	Fosid               pulumi.IntOutput                    `pulumi:"fosid"`
	Schedule            pulumi.StringOutput                 `pulumi:"schedule"`
	Services            FirewallTtlPolicyServiceArrayOutput `pulumi:"services"`
	Srcaddrs            FirewallTtlPolicySrcaddrArrayOutput `pulumi:"srcaddrs"`
	Srcintf             pulumi.StringOutput                 `pulumi:"srcintf"`
	Status              pulumi.StringOutput                 `pulumi:"status"`
	Ttl                 pulumi.StringOutput                 `pulumi:"ttl"`
	Vdomparam           pulumi.StringPtrOutput              `pulumi:"vdomparam"`
}

// NewFirewallTtlPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallTtlPolicy(ctx *pulumi.Context,
	name string, args *FirewallTtlPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallTtlPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.Srcaddrs == nil {
		return nil, errors.New("invalid value for required argument 'Srcaddrs'")
	}
	if args.Srcintf == nil {
		return nil, errors.New("invalid value for required argument 'Srcintf'")
	}
	if args.Ttl == nil {
		return nil, errors.New("invalid value for required argument 'Ttl'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallTtlPolicy
	err := ctx.RegisterResource("fortios:index/firewallTtlPolicy:FirewallTtlPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallTtlPolicy gets an existing FirewallTtlPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallTtlPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallTtlPolicyState, opts ...pulumi.ResourceOption) (*FirewallTtlPolicy, error) {
	var resource FirewallTtlPolicy
	err := ctx.ReadResource("fortios:index/firewallTtlPolicy:FirewallTtlPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallTtlPolicy resources.
type firewallTtlPolicyState struct {
	Action              *string                    `pulumi:"action"`
	DynamicSortSubtable *string                    `pulumi:"dynamicSortSubtable"`
	Fosid               *int                       `pulumi:"fosid"`
	Schedule            *string                    `pulumi:"schedule"`
	Services            []FirewallTtlPolicyService `pulumi:"services"`
	Srcaddrs            []FirewallTtlPolicySrcaddr `pulumi:"srcaddrs"`
	Srcintf             *string                    `pulumi:"srcintf"`
	Status              *string                    `pulumi:"status"`
	Ttl                 *string                    `pulumi:"ttl"`
	Vdomparam           *string                    `pulumi:"vdomparam"`
}

type FirewallTtlPolicyState struct {
	Action              pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	Schedule            pulumi.StringPtrInput
	Services            FirewallTtlPolicyServiceArrayInput
	Srcaddrs            FirewallTtlPolicySrcaddrArrayInput
	Srcintf             pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Ttl                 pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallTtlPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallTtlPolicyState)(nil)).Elem()
}

type firewallTtlPolicyArgs struct {
	Action              *string                    `pulumi:"action"`
	DynamicSortSubtable *string                    `pulumi:"dynamicSortSubtable"`
	Fosid               int                        `pulumi:"fosid"`
	Schedule            string                     `pulumi:"schedule"`
	Services            []FirewallTtlPolicyService `pulumi:"services"`
	Srcaddrs            []FirewallTtlPolicySrcaddr `pulumi:"srcaddrs"`
	Srcintf             string                     `pulumi:"srcintf"`
	Status              *string                    `pulumi:"status"`
	Ttl                 string                     `pulumi:"ttl"`
	Vdomparam           *string                    `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallTtlPolicy resource.
type FirewallTtlPolicyArgs struct {
	Action              pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Fosid               pulumi.IntInput
	Schedule            pulumi.StringInput
	Services            FirewallTtlPolicyServiceArrayInput
	Srcaddrs            FirewallTtlPolicySrcaddrArrayInput
	Srcintf             pulumi.StringInput
	Status              pulumi.StringPtrInput
	Ttl                 pulumi.StringInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallTtlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallTtlPolicyArgs)(nil)).Elem()
}

type FirewallTtlPolicyInput interface {
	pulumi.Input

	ToFirewallTtlPolicyOutput() FirewallTtlPolicyOutput
	ToFirewallTtlPolicyOutputWithContext(ctx context.Context) FirewallTtlPolicyOutput
}

func (*FirewallTtlPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallTtlPolicy)(nil)).Elem()
}

func (i *FirewallTtlPolicy) ToFirewallTtlPolicyOutput() FirewallTtlPolicyOutput {
	return i.ToFirewallTtlPolicyOutputWithContext(context.Background())
}

func (i *FirewallTtlPolicy) ToFirewallTtlPolicyOutputWithContext(ctx context.Context) FirewallTtlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlPolicyOutput)
}

// FirewallTtlPolicyArrayInput is an input type that accepts FirewallTtlPolicyArray and FirewallTtlPolicyArrayOutput values.
// You can construct a concrete instance of `FirewallTtlPolicyArrayInput` via:
//
//	FirewallTtlPolicyArray{ FirewallTtlPolicyArgs{...} }
type FirewallTtlPolicyArrayInput interface {
	pulumi.Input

	ToFirewallTtlPolicyArrayOutput() FirewallTtlPolicyArrayOutput
	ToFirewallTtlPolicyArrayOutputWithContext(context.Context) FirewallTtlPolicyArrayOutput
}

type FirewallTtlPolicyArray []FirewallTtlPolicyInput

func (FirewallTtlPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallTtlPolicy)(nil)).Elem()
}

func (i FirewallTtlPolicyArray) ToFirewallTtlPolicyArrayOutput() FirewallTtlPolicyArrayOutput {
	return i.ToFirewallTtlPolicyArrayOutputWithContext(context.Background())
}

func (i FirewallTtlPolicyArray) ToFirewallTtlPolicyArrayOutputWithContext(ctx context.Context) FirewallTtlPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlPolicyArrayOutput)
}

// FirewallTtlPolicyMapInput is an input type that accepts FirewallTtlPolicyMap and FirewallTtlPolicyMapOutput values.
// You can construct a concrete instance of `FirewallTtlPolicyMapInput` via:
//
//	FirewallTtlPolicyMap{ "key": FirewallTtlPolicyArgs{...} }
type FirewallTtlPolicyMapInput interface {
	pulumi.Input

	ToFirewallTtlPolicyMapOutput() FirewallTtlPolicyMapOutput
	ToFirewallTtlPolicyMapOutputWithContext(context.Context) FirewallTtlPolicyMapOutput
}

type FirewallTtlPolicyMap map[string]FirewallTtlPolicyInput

func (FirewallTtlPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallTtlPolicy)(nil)).Elem()
}

func (i FirewallTtlPolicyMap) ToFirewallTtlPolicyMapOutput() FirewallTtlPolicyMapOutput {
	return i.ToFirewallTtlPolicyMapOutputWithContext(context.Background())
}

func (i FirewallTtlPolicyMap) ToFirewallTtlPolicyMapOutputWithContext(ctx context.Context) FirewallTtlPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTtlPolicyMapOutput)
}

type FirewallTtlPolicyOutput struct{ *pulumi.OutputState }

func (FirewallTtlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallTtlPolicy)(nil)).Elem()
}

func (o FirewallTtlPolicyOutput) ToFirewallTtlPolicyOutput() FirewallTtlPolicyOutput {
	return o
}

func (o FirewallTtlPolicyOutput) ToFirewallTtlPolicyOutputWithContext(ctx context.Context) FirewallTtlPolicyOutput {
	return o
}

func (o FirewallTtlPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallTtlPolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallTtlPolicyOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o FirewallTtlPolicyOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

func (o FirewallTtlPolicyOutput) Services() FirewallTtlPolicyServiceArrayOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) FirewallTtlPolicyServiceArrayOutput { return v.Services }).(FirewallTtlPolicyServiceArrayOutput)
}

func (o FirewallTtlPolicyOutput) Srcaddrs() FirewallTtlPolicySrcaddrArrayOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) FirewallTtlPolicySrcaddrArrayOutput { return v.Srcaddrs }).(FirewallTtlPolicySrcaddrArrayOutput)
}

func (o FirewallTtlPolicyOutput) Srcintf() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringOutput { return v.Srcintf }).(pulumi.StringOutput)
}

func (o FirewallTtlPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o FirewallTtlPolicyOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringOutput { return v.Ttl }).(pulumi.StringOutput)
}

func (o FirewallTtlPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallTtlPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallTtlPolicyArrayOutput struct{ *pulumi.OutputState }

func (FirewallTtlPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallTtlPolicy)(nil)).Elem()
}

func (o FirewallTtlPolicyArrayOutput) ToFirewallTtlPolicyArrayOutput() FirewallTtlPolicyArrayOutput {
	return o
}

func (o FirewallTtlPolicyArrayOutput) ToFirewallTtlPolicyArrayOutputWithContext(ctx context.Context) FirewallTtlPolicyArrayOutput {
	return o
}

func (o FirewallTtlPolicyArrayOutput) Index(i pulumi.IntInput) FirewallTtlPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallTtlPolicy {
		return vs[0].([]*FirewallTtlPolicy)[vs[1].(int)]
	}).(FirewallTtlPolicyOutput)
}

type FirewallTtlPolicyMapOutput struct{ *pulumi.OutputState }

func (FirewallTtlPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallTtlPolicy)(nil)).Elem()
}

func (o FirewallTtlPolicyMapOutput) ToFirewallTtlPolicyMapOutput() FirewallTtlPolicyMapOutput {
	return o
}

func (o FirewallTtlPolicyMapOutput) ToFirewallTtlPolicyMapOutputWithContext(ctx context.Context) FirewallTtlPolicyMapOutput {
	return o
}

func (o FirewallTtlPolicyMapOutput) MapIndex(k pulumi.StringInput) FirewallTtlPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallTtlPolicy {
		return vs[0].(map[string]*FirewallTtlPolicy)[vs[1].(string)]
	}).(FirewallTtlPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlPolicyInput)(nil)).Elem(), &FirewallTtlPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlPolicyArrayInput)(nil)).Elem(), FirewallTtlPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTtlPolicyMapInput)(nil)).Elem(), FirewallTtlPolicyMap{})
	pulumi.RegisterOutputType(FirewallTtlPolicyOutput{})
	pulumi.RegisterOutputType(FirewallTtlPolicyArrayOutput{})
	pulumi.RegisterOutputType(FirewallTtlPolicyMapOutput{})
}
