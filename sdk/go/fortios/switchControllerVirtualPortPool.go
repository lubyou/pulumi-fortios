// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerVirtualPortPool struct {
	pulumi.CustomResourceState

	Description pulumi.StringOutput    `pulumi:"description"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Vdomparam   pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerVirtualPortPool registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerVirtualPortPool(ctx *pulumi.Context,
	name string, args *SwitchControllerVirtualPortPoolArgs, opts ...pulumi.ResourceOption) (*SwitchControllerVirtualPortPool, error) {
	if args == nil {
		args = &SwitchControllerVirtualPortPoolArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerVirtualPortPool
	err := ctx.RegisterResource("fortios:index/switchControllerVirtualPortPool:SwitchControllerVirtualPortPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerVirtualPortPool gets an existing SwitchControllerVirtualPortPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerVirtualPortPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerVirtualPortPoolState, opts ...pulumi.ResourceOption) (*SwitchControllerVirtualPortPool, error) {
	var resource SwitchControllerVirtualPortPool
	err := ctx.ReadResource("fortios:index/switchControllerVirtualPortPool:SwitchControllerVirtualPortPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerVirtualPortPool resources.
type switchControllerVirtualPortPoolState struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Vdomparam   *string `pulumi:"vdomparam"`
}

type SwitchControllerVirtualPortPoolState struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Vdomparam   pulumi.StringPtrInput
}

func (SwitchControllerVirtualPortPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVirtualPortPoolState)(nil)).Elem()
}

type switchControllerVirtualPortPoolArgs struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Vdomparam   *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerVirtualPortPool resource.
type SwitchControllerVirtualPortPoolArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Vdomparam   pulumi.StringPtrInput
}

func (SwitchControllerVirtualPortPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerVirtualPortPoolArgs)(nil)).Elem()
}

type SwitchControllerVirtualPortPoolInput interface {
	pulumi.Input

	ToSwitchControllerVirtualPortPoolOutput() SwitchControllerVirtualPortPoolOutput
	ToSwitchControllerVirtualPortPoolOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolOutput
}

func (*SwitchControllerVirtualPortPool) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (i *SwitchControllerVirtualPortPool) ToSwitchControllerVirtualPortPoolOutput() SwitchControllerVirtualPortPoolOutput {
	return i.ToSwitchControllerVirtualPortPoolOutputWithContext(context.Background())
}

func (i *SwitchControllerVirtualPortPool) ToSwitchControllerVirtualPortPoolOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVirtualPortPoolOutput)
}

// SwitchControllerVirtualPortPoolArrayInput is an input type that accepts SwitchControllerVirtualPortPoolArray and SwitchControllerVirtualPortPoolArrayOutput values.
// You can construct a concrete instance of `SwitchControllerVirtualPortPoolArrayInput` via:
//
//	SwitchControllerVirtualPortPoolArray{ SwitchControllerVirtualPortPoolArgs{...} }
type SwitchControllerVirtualPortPoolArrayInput interface {
	pulumi.Input

	ToSwitchControllerVirtualPortPoolArrayOutput() SwitchControllerVirtualPortPoolArrayOutput
	ToSwitchControllerVirtualPortPoolArrayOutputWithContext(context.Context) SwitchControllerVirtualPortPoolArrayOutput
}

type SwitchControllerVirtualPortPoolArray []SwitchControllerVirtualPortPoolInput

func (SwitchControllerVirtualPortPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (i SwitchControllerVirtualPortPoolArray) ToSwitchControllerVirtualPortPoolArrayOutput() SwitchControllerVirtualPortPoolArrayOutput {
	return i.ToSwitchControllerVirtualPortPoolArrayOutputWithContext(context.Background())
}

func (i SwitchControllerVirtualPortPoolArray) ToSwitchControllerVirtualPortPoolArrayOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVirtualPortPoolArrayOutput)
}

// SwitchControllerVirtualPortPoolMapInput is an input type that accepts SwitchControllerVirtualPortPoolMap and SwitchControllerVirtualPortPoolMapOutput values.
// You can construct a concrete instance of `SwitchControllerVirtualPortPoolMapInput` via:
//
//	SwitchControllerVirtualPortPoolMap{ "key": SwitchControllerVirtualPortPoolArgs{...} }
type SwitchControllerVirtualPortPoolMapInput interface {
	pulumi.Input

	ToSwitchControllerVirtualPortPoolMapOutput() SwitchControllerVirtualPortPoolMapOutput
	ToSwitchControllerVirtualPortPoolMapOutputWithContext(context.Context) SwitchControllerVirtualPortPoolMapOutput
}

type SwitchControllerVirtualPortPoolMap map[string]SwitchControllerVirtualPortPoolInput

func (SwitchControllerVirtualPortPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (i SwitchControllerVirtualPortPoolMap) ToSwitchControllerVirtualPortPoolMapOutput() SwitchControllerVirtualPortPoolMapOutput {
	return i.ToSwitchControllerVirtualPortPoolMapOutputWithContext(context.Background())
}

func (i SwitchControllerVirtualPortPoolMap) ToSwitchControllerVirtualPortPoolMapOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerVirtualPortPoolMapOutput)
}

type SwitchControllerVirtualPortPoolOutput struct{ *pulumi.OutputState }

func (SwitchControllerVirtualPortPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (o SwitchControllerVirtualPortPoolOutput) ToSwitchControllerVirtualPortPoolOutput() SwitchControllerVirtualPortPoolOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolOutput) ToSwitchControllerVirtualPortPoolOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVirtualPortPool) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SwitchControllerVirtualPortPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerVirtualPortPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerVirtualPortPoolOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerVirtualPortPool) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerVirtualPortPoolArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerVirtualPortPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (o SwitchControllerVirtualPortPoolArrayOutput) ToSwitchControllerVirtualPortPoolArrayOutput() SwitchControllerVirtualPortPoolArrayOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolArrayOutput) ToSwitchControllerVirtualPortPoolArrayOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolArrayOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolArrayOutput) Index(i pulumi.IntInput) SwitchControllerVirtualPortPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerVirtualPortPool {
		return vs[0].([]*SwitchControllerVirtualPortPool)[vs[1].(int)]
	}).(SwitchControllerVirtualPortPoolOutput)
}

type SwitchControllerVirtualPortPoolMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerVirtualPortPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerVirtualPortPool)(nil)).Elem()
}

func (o SwitchControllerVirtualPortPoolMapOutput) ToSwitchControllerVirtualPortPoolMapOutput() SwitchControllerVirtualPortPoolMapOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolMapOutput) ToSwitchControllerVirtualPortPoolMapOutputWithContext(ctx context.Context) SwitchControllerVirtualPortPoolMapOutput {
	return o
}

func (o SwitchControllerVirtualPortPoolMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerVirtualPortPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerVirtualPortPool {
		return vs[0].(map[string]*SwitchControllerVirtualPortPool)[vs[1].(string)]
	}).(SwitchControllerVirtualPortPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVirtualPortPoolInput)(nil)).Elem(), &SwitchControllerVirtualPortPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVirtualPortPoolArrayInput)(nil)).Elem(), SwitchControllerVirtualPortPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerVirtualPortPoolMapInput)(nil)).Elem(), SwitchControllerVirtualPortPoolMap{})
	pulumi.RegisterOutputType(SwitchControllerVirtualPortPoolOutput{})
	pulumi.RegisterOutputType(SwitchControllerVirtualPortPoolArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerVirtualPortPoolMapOutput{})
}
