// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPv6 prefix lists.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewRouterPrefixList6(ctx, "trname", nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Router PrefixList6 can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/routerPrefixList6:RouterPrefixList6 labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type RouterPrefixList6 struct {
	pulumi.CustomResourceState

	// Comment.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// IPv6 prefix list rule. The structure of `rule` block is documented below.
	Rules RouterPrefixList6RuleArrayOutput `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewRouterPrefixList6 registers a new resource with the given unique name, arguments, and options.
func NewRouterPrefixList6(ctx *pulumi.Context,
	name string, args *RouterPrefixList6Args, opts ...pulumi.ResourceOption) (*RouterPrefixList6, error) {
	if args == nil {
		args = &RouterPrefixList6Args{}
	}

	var resource RouterPrefixList6
	err := ctx.RegisterResource("fortios:index/routerPrefixList6:RouterPrefixList6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterPrefixList6 gets an existing RouterPrefixList6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterPrefixList6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterPrefixList6State, opts ...pulumi.ResourceOption) (*RouterPrefixList6, error) {
	var resource RouterPrefixList6
	err := ctx.ReadResource("fortios:index/routerPrefixList6:RouterPrefixList6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterPrefixList6 resources.
type routerPrefixList6State struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// IPv6 prefix list rule. The structure of `rule` block is documented below.
	Rules []RouterPrefixList6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type RouterPrefixList6State struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// IPv6 prefix list rule. The structure of `rule` block is documented below.
	Rules RouterPrefixList6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterPrefixList6State) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPrefixList6State)(nil)).Elem()
}

type routerPrefixList6Args struct {
	// Comment.
	Comments *string `pulumi:"comments"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Name.
	Name *string `pulumi:"name"`
	// IPv6 prefix list rule. The structure of `rule` block is documented below.
	Rules []RouterPrefixList6Rule `pulumi:"rules"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a RouterPrefixList6 resource.
type RouterPrefixList6Args struct {
	// Comment.
	Comments pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// IPv6 prefix list rule. The structure of `rule` block is documented below.
	Rules RouterPrefixList6RuleArrayInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (RouterPrefixList6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*routerPrefixList6Args)(nil)).Elem()
}

type RouterPrefixList6Input interface {
	pulumi.Input

	ToRouterPrefixList6Output() RouterPrefixList6Output
	ToRouterPrefixList6OutputWithContext(ctx context.Context) RouterPrefixList6Output
}

func (*RouterPrefixList6) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixList6)(nil))
}

func (i *RouterPrefixList6) ToRouterPrefixList6Output() RouterPrefixList6Output {
	return i.ToRouterPrefixList6OutputWithContext(context.Background())
}

func (i *RouterPrefixList6) ToRouterPrefixList6OutputWithContext(ctx context.Context) RouterPrefixList6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6Output)
}

func (i *RouterPrefixList6) ToRouterPrefixList6PtrOutput() RouterPrefixList6PtrOutput {
	return i.ToRouterPrefixList6PtrOutputWithContext(context.Background())
}

func (i *RouterPrefixList6) ToRouterPrefixList6PtrOutputWithContext(ctx context.Context) RouterPrefixList6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6PtrOutput)
}

type RouterPrefixList6PtrInput interface {
	pulumi.Input

	ToRouterPrefixList6PtrOutput() RouterPrefixList6PtrOutput
	ToRouterPrefixList6PtrOutputWithContext(ctx context.Context) RouterPrefixList6PtrOutput
}

type routerPrefixList6PtrType RouterPrefixList6Args

func (*routerPrefixList6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPrefixList6)(nil))
}

func (i *routerPrefixList6PtrType) ToRouterPrefixList6PtrOutput() RouterPrefixList6PtrOutput {
	return i.ToRouterPrefixList6PtrOutputWithContext(context.Background())
}

func (i *routerPrefixList6PtrType) ToRouterPrefixList6PtrOutputWithContext(ctx context.Context) RouterPrefixList6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6PtrOutput)
}

// RouterPrefixList6ArrayInput is an input type that accepts RouterPrefixList6Array and RouterPrefixList6ArrayOutput values.
// You can construct a concrete instance of `RouterPrefixList6ArrayInput` via:
//
//          RouterPrefixList6Array{ RouterPrefixList6Args{...} }
type RouterPrefixList6ArrayInput interface {
	pulumi.Input

	ToRouterPrefixList6ArrayOutput() RouterPrefixList6ArrayOutput
	ToRouterPrefixList6ArrayOutputWithContext(context.Context) RouterPrefixList6ArrayOutput
}

type RouterPrefixList6Array []RouterPrefixList6Input

func (RouterPrefixList6Array) ElementType() reflect.Type {
	return reflect.TypeOf(([]*RouterPrefixList6)(nil))
}

func (i RouterPrefixList6Array) ToRouterPrefixList6ArrayOutput() RouterPrefixList6ArrayOutput {
	return i.ToRouterPrefixList6ArrayOutputWithContext(context.Background())
}

func (i RouterPrefixList6Array) ToRouterPrefixList6ArrayOutputWithContext(ctx context.Context) RouterPrefixList6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6ArrayOutput)
}

// RouterPrefixList6MapInput is an input type that accepts RouterPrefixList6Map and RouterPrefixList6MapOutput values.
// You can construct a concrete instance of `RouterPrefixList6MapInput` via:
//
//          RouterPrefixList6Map{ "key": RouterPrefixList6Args{...} }
type RouterPrefixList6MapInput interface {
	pulumi.Input

	ToRouterPrefixList6MapOutput() RouterPrefixList6MapOutput
	ToRouterPrefixList6MapOutputWithContext(context.Context) RouterPrefixList6MapOutput
}

type RouterPrefixList6Map map[string]RouterPrefixList6Input

func (RouterPrefixList6Map) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*RouterPrefixList6)(nil))
}

func (i RouterPrefixList6Map) ToRouterPrefixList6MapOutput() RouterPrefixList6MapOutput {
	return i.ToRouterPrefixList6MapOutputWithContext(context.Background())
}

func (i RouterPrefixList6Map) ToRouterPrefixList6MapOutputWithContext(ctx context.Context) RouterPrefixList6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterPrefixList6MapOutput)
}

type RouterPrefixList6Output struct {
	*pulumi.OutputState
}

func (RouterPrefixList6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterPrefixList6)(nil))
}

func (o RouterPrefixList6Output) ToRouterPrefixList6Output() RouterPrefixList6Output {
	return o
}

func (o RouterPrefixList6Output) ToRouterPrefixList6OutputWithContext(ctx context.Context) RouterPrefixList6Output {
	return o
}

func (o RouterPrefixList6Output) ToRouterPrefixList6PtrOutput() RouterPrefixList6PtrOutput {
	return o.ToRouterPrefixList6PtrOutputWithContext(context.Background())
}

func (o RouterPrefixList6Output) ToRouterPrefixList6PtrOutputWithContext(ctx context.Context) RouterPrefixList6PtrOutput {
	return o.ApplyT(func(v RouterPrefixList6) *RouterPrefixList6 {
		return &v
	}).(RouterPrefixList6PtrOutput)
}

type RouterPrefixList6PtrOutput struct {
	*pulumi.OutputState
}

func (RouterPrefixList6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterPrefixList6)(nil))
}

func (o RouterPrefixList6PtrOutput) ToRouterPrefixList6PtrOutput() RouterPrefixList6PtrOutput {
	return o
}

func (o RouterPrefixList6PtrOutput) ToRouterPrefixList6PtrOutputWithContext(ctx context.Context) RouterPrefixList6PtrOutput {
	return o
}

type RouterPrefixList6ArrayOutput struct{ *pulumi.OutputState }

func (RouterPrefixList6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterPrefixList6)(nil))
}

func (o RouterPrefixList6ArrayOutput) ToRouterPrefixList6ArrayOutput() RouterPrefixList6ArrayOutput {
	return o
}

func (o RouterPrefixList6ArrayOutput) ToRouterPrefixList6ArrayOutputWithContext(ctx context.Context) RouterPrefixList6ArrayOutput {
	return o
}

func (o RouterPrefixList6ArrayOutput) Index(i pulumi.IntInput) RouterPrefixList6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterPrefixList6 {
		return vs[0].([]RouterPrefixList6)[vs[1].(int)]
	}).(RouterPrefixList6Output)
}

type RouterPrefixList6MapOutput struct{ *pulumi.OutputState }

func (RouterPrefixList6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RouterPrefixList6)(nil))
}

func (o RouterPrefixList6MapOutput) ToRouterPrefixList6MapOutput() RouterPrefixList6MapOutput {
	return o
}

func (o RouterPrefixList6MapOutput) ToRouterPrefixList6MapOutputWithContext(ctx context.Context) RouterPrefixList6MapOutput {
	return o
}

func (o RouterPrefixList6MapOutput) MapIndex(k pulumi.StringInput) RouterPrefixList6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) RouterPrefixList6 {
		return vs[0].(map[string]RouterPrefixList6)[vs[1].(string)]
	}).(RouterPrefixList6Output)
}

func init() {
	pulumi.RegisterOutputType(RouterPrefixList6Output{})
	pulumi.RegisterOutputType(RouterPrefixList6PtrOutput{})
	pulumi.RegisterOutputType(RouterPrefixList6ArrayOutput{})
	pulumi.RegisterOutputType(RouterPrefixList6MapOutput{})
}
