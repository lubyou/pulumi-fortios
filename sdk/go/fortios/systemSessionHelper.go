// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemSessionHelper struct {
	pulumi.CustomResourceState

	Fosid     pulumi.IntOutput       `pulumi:"fosid"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Port      pulumi.IntOutput       `pulumi:"port"`
	Protocol  pulumi.IntOutput       `pulumi:"protocol"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSessionHelper registers a new resource with the given unique name, arguments, and options.
func NewSystemSessionHelper(ctx *pulumi.Context,
	name string, args *SystemSessionHelperArgs, opts ...pulumi.ResourceOption) (*SystemSessionHelper, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSessionHelper
	err := ctx.RegisterResource("fortios:index/systemSessionHelper:SystemSessionHelper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSessionHelper gets an existing SystemSessionHelper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSessionHelper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSessionHelperState, opts ...pulumi.ResourceOption) (*SystemSessionHelper, error) {
	var resource SystemSessionHelper
	err := ctx.ReadResource("fortios:index/systemSessionHelper:SystemSessionHelper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSessionHelper resources.
type systemSessionHelperState struct {
	Fosid     *int    `pulumi:"fosid"`
	Name      *string `pulumi:"name"`
	Port      *int    `pulumi:"port"`
	Protocol  *int    `pulumi:"protocol"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemSessionHelperState struct {
	Fosid     pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Port      pulumi.IntPtrInput
	Protocol  pulumi.IntPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemSessionHelperState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSessionHelperState)(nil)).Elem()
}

type systemSessionHelperArgs struct {
	Fosid     *int    `pulumi:"fosid"`
	Name      *string `pulumi:"name"`
	Port      int     `pulumi:"port"`
	Protocol  int     `pulumi:"protocol"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSessionHelper resource.
type SystemSessionHelperArgs struct {
	Fosid     pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Port      pulumi.IntInput
	Protocol  pulumi.IntInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemSessionHelperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSessionHelperArgs)(nil)).Elem()
}

type SystemSessionHelperInput interface {
	pulumi.Input

	ToSystemSessionHelperOutput() SystemSessionHelperOutput
	ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput
}

func (*SystemSessionHelper) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSessionHelper)(nil)).Elem()
}

func (i *SystemSessionHelper) ToSystemSessionHelperOutput() SystemSessionHelperOutput {
	return i.ToSystemSessionHelperOutputWithContext(context.Background())
}

func (i *SystemSessionHelper) ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperOutput)
}

// SystemSessionHelperArrayInput is an input type that accepts SystemSessionHelperArray and SystemSessionHelperArrayOutput values.
// You can construct a concrete instance of `SystemSessionHelperArrayInput` via:
//
//	SystemSessionHelperArray{ SystemSessionHelperArgs{...} }
type SystemSessionHelperArrayInput interface {
	pulumi.Input

	ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput
	ToSystemSessionHelperArrayOutputWithContext(context.Context) SystemSessionHelperArrayOutput
}

type SystemSessionHelperArray []SystemSessionHelperInput

func (SystemSessionHelperArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSessionHelper)(nil)).Elem()
}

func (i SystemSessionHelperArray) ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput {
	return i.ToSystemSessionHelperArrayOutputWithContext(context.Background())
}

func (i SystemSessionHelperArray) ToSystemSessionHelperArrayOutputWithContext(ctx context.Context) SystemSessionHelperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperArrayOutput)
}

// SystemSessionHelperMapInput is an input type that accepts SystemSessionHelperMap and SystemSessionHelperMapOutput values.
// You can construct a concrete instance of `SystemSessionHelperMapInput` via:
//
//	SystemSessionHelperMap{ "key": SystemSessionHelperArgs{...} }
type SystemSessionHelperMapInput interface {
	pulumi.Input

	ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput
	ToSystemSessionHelperMapOutputWithContext(context.Context) SystemSessionHelperMapOutput
}

type SystemSessionHelperMap map[string]SystemSessionHelperInput

func (SystemSessionHelperMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSessionHelper)(nil)).Elem()
}

func (i SystemSessionHelperMap) ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput {
	return i.ToSystemSessionHelperMapOutputWithContext(context.Background())
}

func (i SystemSessionHelperMap) ToSystemSessionHelperMapOutputWithContext(ctx context.Context) SystemSessionHelperMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperMapOutput)
}

type SystemSessionHelperOutput struct{ *pulumi.OutputState }

func (SystemSessionHelperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSessionHelper)(nil)).Elem()
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperOutput() SystemSessionHelperOutput {
	return o
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput {
	return o
}

func (o SystemSessionHelperOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSessionHelper) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SystemSessionHelperOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSessionHelper) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemSessionHelperOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSessionHelper) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o SystemSessionHelperOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSessionHelper) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

func (o SystemSessionHelperOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSessionHelper) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemSessionHelperArrayOutput struct{ *pulumi.OutputState }

func (SystemSessionHelperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSessionHelper)(nil)).Elem()
}

func (o SystemSessionHelperArrayOutput) ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput {
	return o
}

func (o SystemSessionHelperArrayOutput) ToSystemSessionHelperArrayOutputWithContext(ctx context.Context) SystemSessionHelperArrayOutput {
	return o
}

func (o SystemSessionHelperArrayOutput) Index(i pulumi.IntInput) SystemSessionHelperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSessionHelper {
		return vs[0].([]*SystemSessionHelper)[vs[1].(int)]
	}).(SystemSessionHelperOutput)
}

type SystemSessionHelperMapOutput struct{ *pulumi.OutputState }

func (SystemSessionHelperMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSessionHelper)(nil)).Elem()
}

func (o SystemSessionHelperMapOutput) ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput {
	return o
}

func (o SystemSessionHelperMapOutput) ToSystemSessionHelperMapOutputWithContext(ctx context.Context) SystemSessionHelperMapOutput {
	return o
}

func (o SystemSessionHelperMapOutput) MapIndex(k pulumi.StringInput) SystemSessionHelperOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSessionHelper {
		return vs[0].(map[string]*SystemSessionHelper)[vs[1].(string)]
	}).(SystemSessionHelperOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionHelperInput)(nil)).Elem(), &SystemSessionHelper{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionHelperArrayInput)(nil)).Elem(), SystemSessionHelperArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSessionHelperMapInput)(nil)).Elem(), SystemSessionHelperMap{})
	pulumi.RegisterOutputType(SystemSessionHelperOutput{})
	pulumi.RegisterOutputType(SystemSessionHelperArrayOutput{})
	pulumi.RegisterOutputType(SystemSessionHelperMapOutput{})
}
