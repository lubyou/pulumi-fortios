// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure session helper.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemSessionHelper(ctx, "trname", &fortios.SystemSessionHelperArgs{
// 			Fosid:    pulumi.Int(33),
// 			Port:     pulumi.Int(3234),
// 			Protocol: pulumi.Int(17),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System SessionHelper can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemSessionHelper:SystemSessionHelper labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemSessionHelper struct {
	pulumi.CustomResourceState

	// Session helper ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Helper name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Protocol port.
	Port pulumi.IntOutput `pulumi:"port"`
	// Protocol number.
	Protocol pulumi.IntOutput `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemSessionHelper registers a new resource with the given unique name, arguments, and options.
func NewSystemSessionHelper(ctx *pulumi.Context,
	name string, args *SystemSessionHelperArgs, opts ...pulumi.ResourceOption) (*SystemSessionHelper, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	var resource SystemSessionHelper
	err := ctx.RegisterResource("fortios:index/systemSessionHelper:SystemSessionHelper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSessionHelper gets an existing SystemSessionHelper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSessionHelper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSessionHelperState, opts ...pulumi.ResourceOption) (*SystemSessionHelper, error) {
	var resource SystemSessionHelper
	err := ctx.ReadResource("fortios:index/systemSessionHelper:SystemSessionHelper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSessionHelper resources.
type systemSessionHelperState struct {
	// Session helper ID.
	Fosid *int `pulumi:"fosid"`
	// Helper name.
	Name *string `pulumi:"name"`
	// Protocol port.
	Port *int `pulumi:"port"`
	// Protocol number.
	Protocol *int `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemSessionHelperState struct {
	// Session helper ID.
	Fosid pulumi.IntPtrInput
	// Helper name.
	Name pulumi.StringPtrInput
	// Protocol port.
	Port pulumi.IntPtrInput
	// Protocol number.
	Protocol pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSessionHelperState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSessionHelperState)(nil)).Elem()
}

type systemSessionHelperArgs struct {
	// Session helper ID.
	Fosid *int `pulumi:"fosid"`
	// Helper name.
	Name *string `pulumi:"name"`
	// Protocol port.
	Port int `pulumi:"port"`
	// Protocol number.
	Protocol int `pulumi:"protocol"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemSessionHelper resource.
type SystemSessionHelperArgs struct {
	// Session helper ID.
	Fosid pulumi.IntPtrInput
	// Helper name.
	Name pulumi.StringPtrInput
	// Protocol port.
	Port pulumi.IntInput
	// Protocol number.
	Protocol pulumi.IntInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SystemSessionHelperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSessionHelperArgs)(nil)).Elem()
}

type SystemSessionHelperInput interface {
	pulumi.Input

	ToSystemSessionHelperOutput() SystemSessionHelperOutput
	ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput
}

func (*SystemSessionHelper) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionHelper)(nil))
}

func (i *SystemSessionHelper) ToSystemSessionHelperOutput() SystemSessionHelperOutput {
	return i.ToSystemSessionHelperOutputWithContext(context.Background())
}

func (i *SystemSessionHelper) ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperOutput)
}

func (i *SystemSessionHelper) ToSystemSessionHelperPtrOutput() SystemSessionHelperPtrOutput {
	return i.ToSystemSessionHelperPtrOutputWithContext(context.Background())
}

func (i *SystemSessionHelper) ToSystemSessionHelperPtrOutputWithContext(ctx context.Context) SystemSessionHelperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperPtrOutput)
}

type SystemSessionHelperPtrInput interface {
	pulumi.Input

	ToSystemSessionHelperPtrOutput() SystemSessionHelperPtrOutput
	ToSystemSessionHelperPtrOutputWithContext(ctx context.Context) SystemSessionHelperPtrOutput
}

type systemSessionHelperPtrType SystemSessionHelperArgs

func (*systemSessionHelperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSessionHelper)(nil))
}

func (i *systemSessionHelperPtrType) ToSystemSessionHelperPtrOutput() SystemSessionHelperPtrOutput {
	return i.ToSystemSessionHelperPtrOutputWithContext(context.Background())
}

func (i *systemSessionHelperPtrType) ToSystemSessionHelperPtrOutputWithContext(ctx context.Context) SystemSessionHelperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperPtrOutput)
}

// SystemSessionHelperArrayInput is an input type that accepts SystemSessionHelperArray and SystemSessionHelperArrayOutput values.
// You can construct a concrete instance of `SystemSessionHelperArrayInput` via:
//
//          SystemSessionHelperArray{ SystemSessionHelperArgs{...} }
type SystemSessionHelperArrayInput interface {
	pulumi.Input

	ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput
	ToSystemSessionHelperArrayOutputWithContext(context.Context) SystemSessionHelperArrayOutput
}

type SystemSessionHelperArray []SystemSessionHelperInput

func (SystemSessionHelperArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemSessionHelper)(nil))
}

func (i SystemSessionHelperArray) ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput {
	return i.ToSystemSessionHelperArrayOutputWithContext(context.Background())
}

func (i SystemSessionHelperArray) ToSystemSessionHelperArrayOutputWithContext(ctx context.Context) SystemSessionHelperArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperArrayOutput)
}

// SystemSessionHelperMapInput is an input type that accepts SystemSessionHelperMap and SystemSessionHelperMapOutput values.
// You can construct a concrete instance of `SystemSessionHelperMapInput` via:
//
//          SystemSessionHelperMap{ "key": SystemSessionHelperArgs{...} }
type SystemSessionHelperMapInput interface {
	pulumi.Input

	ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput
	ToSystemSessionHelperMapOutputWithContext(context.Context) SystemSessionHelperMapOutput
}

type SystemSessionHelperMap map[string]SystemSessionHelperInput

func (SystemSessionHelperMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemSessionHelper)(nil))
}

func (i SystemSessionHelperMap) ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput {
	return i.ToSystemSessionHelperMapOutputWithContext(context.Background())
}

func (i SystemSessionHelperMap) ToSystemSessionHelperMapOutputWithContext(ctx context.Context) SystemSessionHelperMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSessionHelperMapOutput)
}

type SystemSessionHelperOutput struct {
	*pulumi.OutputState
}

func (SystemSessionHelperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemSessionHelper)(nil))
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperOutput() SystemSessionHelperOutput {
	return o
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperOutputWithContext(ctx context.Context) SystemSessionHelperOutput {
	return o
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperPtrOutput() SystemSessionHelperPtrOutput {
	return o.ToSystemSessionHelperPtrOutputWithContext(context.Background())
}

func (o SystemSessionHelperOutput) ToSystemSessionHelperPtrOutputWithContext(ctx context.Context) SystemSessionHelperPtrOutput {
	return o.ApplyT(func(v SystemSessionHelper) *SystemSessionHelper {
		return &v
	}).(SystemSessionHelperPtrOutput)
}

type SystemSessionHelperPtrOutput struct {
	*pulumi.OutputState
}

func (SystemSessionHelperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSessionHelper)(nil))
}

func (o SystemSessionHelperPtrOutput) ToSystemSessionHelperPtrOutput() SystemSessionHelperPtrOutput {
	return o
}

func (o SystemSessionHelperPtrOutput) ToSystemSessionHelperPtrOutputWithContext(ctx context.Context) SystemSessionHelperPtrOutput {
	return o
}

type SystemSessionHelperArrayOutput struct{ *pulumi.OutputState }

func (SystemSessionHelperArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemSessionHelper)(nil))
}

func (o SystemSessionHelperArrayOutput) ToSystemSessionHelperArrayOutput() SystemSessionHelperArrayOutput {
	return o
}

func (o SystemSessionHelperArrayOutput) ToSystemSessionHelperArrayOutputWithContext(ctx context.Context) SystemSessionHelperArrayOutput {
	return o
}

func (o SystemSessionHelperArrayOutput) Index(i pulumi.IntInput) SystemSessionHelperOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemSessionHelper {
		return vs[0].([]SystemSessionHelper)[vs[1].(int)]
	}).(SystemSessionHelperOutput)
}

type SystemSessionHelperMapOutput struct{ *pulumi.OutputState }

func (SystemSessionHelperMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemSessionHelper)(nil))
}

func (o SystemSessionHelperMapOutput) ToSystemSessionHelperMapOutput() SystemSessionHelperMapOutput {
	return o
}

func (o SystemSessionHelperMapOutput) ToSystemSessionHelperMapOutputWithContext(ctx context.Context) SystemSessionHelperMapOutput {
	return o
}

func (o SystemSessionHelperMapOutput) MapIndex(k pulumi.StringInput) SystemSessionHelperOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemSessionHelper {
		return vs[0].(map[string]SystemSessionHelper)[vs[1].(string)]
	}).(SystemSessionHelperOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemSessionHelperOutput{})
	pulumi.RegisterOutputType(SystemSessionHelperPtrOutput{})
	pulumi.RegisterOutputType(SystemSessionHelperArrayOutput{})
	pulumi.RegisterOutputType(SystemSessionHelperMapOutput{})
}
