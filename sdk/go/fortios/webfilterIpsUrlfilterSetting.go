// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WebfilterIpsUrlfilterSetting struct {
	pulumi.CustomResourceState

	Device    pulumi.StringOutput    `pulumi:"device"`
	Distance  pulumi.IntOutput       `pulumi:"distance"`
	Gateway   pulumi.StringOutput    `pulumi:"gateway"`
	GeoFilter pulumi.StringPtrOutput `pulumi:"geoFilter"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebfilterIpsUrlfilterSetting registers a new resource with the given unique name, arguments, and options.
func NewWebfilterIpsUrlfilterSetting(ctx *pulumi.Context,
	name string, args *WebfilterIpsUrlfilterSettingArgs, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting, error) {
	if args == nil {
		args = &WebfilterIpsUrlfilterSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebfilterIpsUrlfilterSetting
	err := ctx.RegisterResource("fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterIpsUrlfilterSetting gets an existing WebfilterIpsUrlfilterSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterIpsUrlfilterSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterIpsUrlfilterSettingState, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting, error) {
	var resource WebfilterIpsUrlfilterSetting
	err := ctx.ReadResource("fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterIpsUrlfilterSetting resources.
type webfilterIpsUrlfilterSettingState struct {
	Device    *string `pulumi:"device"`
	Distance  *int    `pulumi:"distance"`
	Gateway   *string `pulumi:"gateway"`
	GeoFilter *string `pulumi:"geoFilter"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type WebfilterIpsUrlfilterSettingState struct {
	Device    pulumi.StringPtrInput
	Distance  pulumi.IntPtrInput
	Gateway   pulumi.StringPtrInput
	GeoFilter pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSettingState)(nil)).Elem()
}

type webfilterIpsUrlfilterSettingArgs struct {
	Device    *string `pulumi:"device"`
	Distance  *int    `pulumi:"distance"`
	Gateway   *string `pulumi:"gateway"`
	GeoFilter *string `pulumi:"geoFilter"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebfilterIpsUrlfilterSetting resource.
type WebfilterIpsUrlfilterSettingArgs struct {
	Device    pulumi.StringPtrInput
	Distance  pulumi.IntPtrInput
	Gateway   pulumi.StringPtrInput
	GeoFilter pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSettingArgs)(nil)).Elem()
}

type WebfilterIpsUrlfilterSettingInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput
	ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput
}

func (*WebfilterIpsUrlfilterSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput {
	return i.ToWebfilterIpsUrlfilterSettingOutputWithContext(context.Background())
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingOutput)
}

func (i *WebfilterIpsUrlfilterSetting) ToOutput(ctx context.Context) pulumix.Output[*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[*WebfilterIpsUrlfilterSetting]{
		OutputState: i.ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx).OutputState,
	}
}

// WebfilterIpsUrlfilterSettingArrayInput is an input type that accepts WebfilterIpsUrlfilterSettingArray and WebfilterIpsUrlfilterSettingArrayOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSettingArrayInput` via:
//
//	WebfilterIpsUrlfilterSettingArray{ WebfilterIpsUrlfilterSettingArgs{...} }
type WebfilterIpsUrlfilterSettingArrayInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput
	ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(context.Context) WebfilterIpsUrlfilterSettingArrayOutput
}

type WebfilterIpsUrlfilterSettingArray []WebfilterIpsUrlfilterSettingInput

func (WebfilterIpsUrlfilterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (i WebfilterIpsUrlfilterSettingArray) ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput {
	return i.ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSettingArray) ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingArrayOutput)
}

func (i WebfilterIpsUrlfilterSettingArray) ToOutput(ctx context.Context) pulumix.Output[[]*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[[]*WebfilterIpsUrlfilterSetting]{
		OutputState: i.ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(ctx).OutputState,
	}
}

// WebfilterIpsUrlfilterSettingMapInput is an input type that accepts WebfilterIpsUrlfilterSettingMap and WebfilterIpsUrlfilterSettingMapOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSettingMapInput` via:
//
//	WebfilterIpsUrlfilterSettingMap{ "key": WebfilterIpsUrlfilterSettingArgs{...} }
type WebfilterIpsUrlfilterSettingMapInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput
	ToWebfilterIpsUrlfilterSettingMapOutputWithContext(context.Context) WebfilterIpsUrlfilterSettingMapOutput
}

type WebfilterIpsUrlfilterSettingMap map[string]WebfilterIpsUrlfilterSettingInput

func (WebfilterIpsUrlfilterSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (i WebfilterIpsUrlfilterSettingMap) ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput {
	return i.ToWebfilterIpsUrlfilterSettingMapOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSettingMap) ToWebfilterIpsUrlfilterSettingMapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingMapOutput)
}

func (i WebfilterIpsUrlfilterSettingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[map[string]*WebfilterIpsUrlfilterSetting]{
		OutputState: i.ToWebfilterIpsUrlfilterSettingMapOutputWithContext(ctx).OutputState,
	}
}

type WebfilterIpsUrlfilterSettingOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingOutput) ToOutput(ctx context.Context) pulumix.Output[*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[*WebfilterIpsUrlfilterSetting]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterIpsUrlfilterSettingOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterIpsUrlfilterSetting) pulumi.StringOutput { return v.Device }).(pulumi.StringOutput)
}

func (o WebfilterIpsUrlfilterSettingOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v *WebfilterIpsUrlfilterSetting) pulumi.IntOutput { return v.Distance }).(pulumi.IntOutput)
}

func (o WebfilterIpsUrlfilterSettingOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *WebfilterIpsUrlfilterSetting) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

func (o WebfilterIpsUrlfilterSettingOutput) GeoFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterIpsUrlfilterSetting) pulumi.StringPtrOutput { return v.GeoFilter }).(pulumi.StringPtrOutput)
}

func (o WebfilterIpsUrlfilterSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebfilterIpsUrlfilterSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WebfilterIpsUrlfilterSettingArrayOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[[]*WebfilterIpsUrlfilterSetting]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) Index(i pulumi.IntInput) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebfilterIpsUrlfilterSetting {
		return vs[0].([]*WebfilterIpsUrlfilterSetting)[vs[1].(int)]
	}).(WebfilterIpsUrlfilterSettingOutput)
}

type WebfilterIpsUrlfilterSettingMapOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebfilterIpsUrlfilterSetting)(nil)).Elem()
}

func (o WebfilterIpsUrlfilterSettingMapOutput) ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingMapOutput) ToWebfilterIpsUrlfilterSettingMapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingMapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WebfilterIpsUrlfilterSetting] {
	return pulumix.Output[map[string]*WebfilterIpsUrlfilterSetting]{
		OutputState: o.OutputState,
	}
}

func (o WebfilterIpsUrlfilterSettingMapOutput) MapIndex(k pulumi.StringInput) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebfilterIpsUrlfilterSetting {
		return vs[0].(map[string]*WebfilterIpsUrlfilterSetting)[vs[1].(string)]
	}).(WebfilterIpsUrlfilterSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterIpsUrlfilterSettingInput)(nil)).Elem(), &WebfilterIpsUrlfilterSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterIpsUrlfilterSettingArrayInput)(nil)).Elem(), WebfilterIpsUrlfilterSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebfilterIpsUrlfilterSettingMapInput)(nil)).Elem(), WebfilterIpsUrlfilterSettingMap{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingArrayOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingMapOutput{})
}
