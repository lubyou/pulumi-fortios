// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure IPS URL filter settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewWebfilterIpsUrlfilterSetting(ctx, "trname", &fortios.WebfilterIpsUrlfilterSettingArgs{
// 			Distance: pulumi.Int(1),
// 			Gateway:  pulumi.String("0.0.0.0"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Webfilter IpsUrlfilterSetting can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting labelname WebfilterIpsUrlfilterSetting
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type WebfilterIpsUrlfilterSetting struct {
	pulumi.CustomResourceState

	// Interface for this route.
	Device pulumi.StringOutput `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrOutput `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewWebfilterIpsUrlfilterSetting registers a new resource with the given unique name, arguments, and options.
func NewWebfilterIpsUrlfilterSetting(ctx *pulumi.Context,
	name string, args *WebfilterIpsUrlfilterSettingArgs, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting, error) {
	if args == nil {
		args = &WebfilterIpsUrlfilterSettingArgs{}
	}

	var resource WebfilterIpsUrlfilterSetting
	err := ctx.RegisterResource("fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebfilterIpsUrlfilterSetting gets an existing WebfilterIpsUrlfilterSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebfilterIpsUrlfilterSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebfilterIpsUrlfilterSettingState, opts ...pulumi.ResourceOption) (*WebfilterIpsUrlfilterSetting, error) {
	var resource WebfilterIpsUrlfilterSetting
	err := ctx.ReadResource("fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebfilterIpsUrlfilterSetting resources.
type webfilterIpsUrlfilterSettingState struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway *string `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type WebfilterIpsUrlfilterSettingState struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IP address for this route.
	Gateway pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSettingState)(nil)).Elem()
}

type webfilterIpsUrlfilterSettingArgs struct {
	// Interface for this route.
	Device *string `pulumi:"device"`
	// Administrative distance (1 - 255) for this route.
	Distance *int `pulumi:"distance"`
	// Gateway IP address for this route.
	Gateway *string `pulumi:"gateway"`
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter *string `pulumi:"geoFilter"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WebfilterIpsUrlfilterSetting resource.
type WebfilterIpsUrlfilterSettingArgs struct {
	// Interface for this route.
	Device pulumi.StringPtrInput
	// Administrative distance (1 - 255) for this route.
	Distance pulumi.IntPtrInput
	// Gateway IP address for this route.
	Gateway pulumi.StringPtrInput
	// Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.
	GeoFilter pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (WebfilterIpsUrlfilterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webfilterIpsUrlfilterSettingArgs)(nil)).Elem()
}

type WebfilterIpsUrlfilterSettingInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput
	ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput
}

func (*WebfilterIpsUrlfilterSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterIpsUrlfilterSetting)(nil))
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput {
	return i.ToWebfilterIpsUrlfilterSettingOutputWithContext(context.Background())
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingOutput)
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingPtrOutput() WebfilterIpsUrlfilterSettingPtrOutput {
	return i.ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(context.Background())
}

func (i *WebfilterIpsUrlfilterSetting) ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingPtrOutput)
}

type WebfilterIpsUrlfilterSettingPtrInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingPtrOutput() WebfilterIpsUrlfilterSettingPtrOutput
	ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingPtrOutput
}

type webfilterIpsUrlfilterSettingPtrType WebfilterIpsUrlfilterSettingArgs

func (*webfilterIpsUrlfilterSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting)(nil))
}

func (i *webfilterIpsUrlfilterSettingPtrType) ToWebfilterIpsUrlfilterSettingPtrOutput() WebfilterIpsUrlfilterSettingPtrOutput {
	return i.ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(context.Background())
}

func (i *webfilterIpsUrlfilterSettingPtrType) ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingPtrOutput)
}

// WebfilterIpsUrlfilterSettingArrayInput is an input type that accepts WebfilterIpsUrlfilterSettingArray and WebfilterIpsUrlfilterSettingArrayOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSettingArrayInput` via:
//
//          WebfilterIpsUrlfilterSettingArray{ WebfilterIpsUrlfilterSettingArgs{...} }
type WebfilterIpsUrlfilterSettingArrayInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput
	ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(context.Context) WebfilterIpsUrlfilterSettingArrayOutput
}

type WebfilterIpsUrlfilterSettingArray []WebfilterIpsUrlfilterSettingInput

func (WebfilterIpsUrlfilterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*WebfilterIpsUrlfilterSetting)(nil))
}

func (i WebfilterIpsUrlfilterSettingArray) ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput {
	return i.ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSettingArray) ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingArrayOutput)
}

// WebfilterIpsUrlfilterSettingMapInput is an input type that accepts WebfilterIpsUrlfilterSettingMap and WebfilterIpsUrlfilterSettingMapOutput values.
// You can construct a concrete instance of `WebfilterIpsUrlfilterSettingMapInput` via:
//
//          WebfilterIpsUrlfilterSettingMap{ "key": WebfilterIpsUrlfilterSettingArgs{...} }
type WebfilterIpsUrlfilterSettingMapInput interface {
	pulumi.Input

	ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput
	ToWebfilterIpsUrlfilterSettingMapOutputWithContext(context.Context) WebfilterIpsUrlfilterSettingMapOutput
}

type WebfilterIpsUrlfilterSettingMap map[string]WebfilterIpsUrlfilterSettingInput

func (WebfilterIpsUrlfilterSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*WebfilterIpsUrlfilterSetting)(nil))
}

func (i WebfilterIpsUrlfilterSettingMap) ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput {
	return i.ToWebfilterIpsUrlfilterSettingMapOutputWithContext(context.Background())
}

func (i WebfilterIpsUrlfilterSettingMap) ToWebfilterIpsUrlfilterSettingMapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebfilterIpsUrlfilterSettingMapOutput)
}

type WebfilterIpsUrlfilterSettingOutput struct {
	*pulumi.OutputState
}

func (WebfilterIpsUrlfilterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebfilterIpsUrlfilterSetting)(nil))
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingOutput() WebfilterIpsUrlfilterSettingOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingPtrOutput() WebfilterIpsUrlfilterSettingPtrOutput {
	return o.ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(context.Background())
}

func (o WebfilterIpsUrlfilterSettingOutput) ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingPtrOutput {
	return o.ApplyT(func(v WebfilterIpsUrlfilterSetting) *WebfilterIpsUrlfilterSetting {
		return &v
	}).(WebfilterIpsUrlfilterSettingPtrOutput)
}

type WebfilterIpsUrlfilterSettingPtrOutput struct {
	*pulumi.OutputState
}

func (WebfilterIpsUrlfilterSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebfilterIpsUrlfilterSetting)(nil))
}

func (o WebfilterIpsUrlfilterSettingPtrOutput) ToWebfilterIpsUrlfilterSettingPtrOutput() WebfilterIpsUrlfilterSettingPtrOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingPtrOutput) ToWebfilterIpsUrlfilterSettingPtrOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingPtrOutput {
	return o
}

type WebfilterIpsUrlfilterSettingArrayOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebfilterIpsUrlfilterSetting)(nil))
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) ToWebfilterIpsUrlfilterSettingArrayOutput() WebfilterIpsUrlfilterSettingArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) ToWebfilterIpsUrlfilterSettingArrayOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingArrayOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingArrayOutput) Index(i pulumi.IntInput) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebfilterIpsUrlfilterSetting {
		return vs[0].([]WebfilterIpsUrlfilterSetting)[vs[1].(int)]
	}).(WebfilterIpsUrlfilterSettingOutput)
}

type WebfilterIpsUrlfilterSettingMapOutput struct{ *pulumi.OutputState }

func (WebfilterIpsUrlfilterSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebfilterIpsUrlfilterSetting)(nil))
}

func (o WebfilterIpsUrlfilterSettingMapOutput) ToWebfilterIpsUrlfilterSettingMapOutput() WebfilterIpsUrlfilterSettingMapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingMapOutput) ToWebfilterIpsUrlfilterSettingMapOutputWithContext(ctx context.Context) WebfilterIpsUrlfilterSettingMapOutput {
	return o
}

func (o WebfilterIpsUrlfilterSettingMapOutput) MapIndex(k pulumi.StringInput) WebfilterIpsUrlfilterSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WebfilterIpsUrlfilterSetting {
		return vs[0].(map[string]WebfilterIpsUrlfilterSetting)[vs[1].(string)]
	}).(WebfilterIpsUrlfilterSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingPtrOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingArrayOutput{})
	pulumi.RegisterOutputType(WebfilterIpsUrlfilterSettingMapOutput{})
}
