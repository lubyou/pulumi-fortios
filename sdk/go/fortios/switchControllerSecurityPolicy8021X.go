// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerSecurityPolicy8021X struct {
	pulumi.CustomResourceState

	AuthFailVlan            pulumi.StringOutput                                     `pulumi:"authFailVlan"`
	AuthFailVlanId          pulumi.StringOutput                                     `pulumi:"authFailVlanId"`
	AuthFailVlanid          pulumi.IntOutput                                        `pulumi:"authFailVlanid"`
	AuthserverTimeoutPeriod pulumi.IntOutput                                        `pulumi:"authserverTimeoutPeriod"`
	AuthserverTimeoutVlan   pulumi.StringOutput                                     `pulumi:"authserverTimeoutVlan"`
	AuthserverTimeoutVlanid pulumi.StringOutput                                     `pulumi:"authserverTimeoutVlanid"`
	DynamicSortSubtable     pulumi.StringPtrOutput                                  `pulumi:"dynamicSortSubtable"`
	EapAutoUntaggedVlans    pulumi.StringOutput                                     `pulumi:"eapAutoUntaggedVlans"`
	EapPassthru             pulumi.StringOutput                                     `pulumi:"eapPassthru"`
	FramevidApply           pulumi.StringOutput                                     `pulumi:"framevidApply"`
	GetAllTables            pulumi.StringPtrOutput                                  `pulumi:"getAllTables"`
	GuestAuthDelay          pulumi.IntOutput                                        `pulumi:"guestAuthDelay"`
	GuestVlan               pulumi.StringOutput                                     `pulumi:"guestVlan"`
	GuestVlanId             pulumi.StringOutput                                     `pulumi:"guestVlanId"`
	GuestVlanid             pulumi.IntOutput                                        `pulumi:"guestVlanid"`
	MacAuthBypass           pulumi.StringOutput                                     `pulumi:"macAuthBypass"`
	Name                    pulumi.StringOutput                                     `pulumi:"name"`
	OpenAuth                pulumi.StringOutput                                     `pulumi:"openAuth"`
	PolicyType              pulumi.StringOutput                                     `pulumi:"policyType"`
	RadiusTimeoutOverwrite  pulumi.StringOutput                                     `pulumi:"radiusTimeoutOverwrite"`
	SecurityMode            pulumi.StringOutput                                     `pulumi:"securityMode"`
	UserGroups              SwitchControllerSecurityPolicy8021XUserGroupArrayOutput `pulumi:"userGroups"`
	Vdomparam               pulumi.StringPtrOutput                                  `pulumi:"vdomparam"`
}

// NewSwitchControllerSecurityPolicy8021X registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerSecurityPolicy8021X(ctx *pulumi.Context,
	name string, args *SwitchControllerSecurityPolicy8021XArgs, opts ...pulumi.ResourceOption) (*SwitchControllerSecurityPolicy8021X, error) {
	if args == nil {
		args = &SwitchControllerSecurityPolicy8021XArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerSecurityPolicy8021X
	err := ctx.RegisterResource("fortios:index/switchControllerSecurityPolicy8021X:SwitchControllerSecurityPolicy8021X", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerSecurityPolicy8021X gets an existing SwitchControllerSecurityPolicy8021X resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerSecurityPolicy8021X(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerSecurityPolicy8021XState, opts ...pulumi.ResourceOption) (*SwitchControllerSecurityPolicy8021X, error) {
	var resource SwitchControllerSecurityPolicy8021X
	err := ctx.ReadResource("fortios:index/switchControllerSecurityPolicy8021X:SwitchControllerSecurityPolicy8021X", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerSecurityPolicy8021X resources.
type switchControllerSecurityPolicy8021XState struct {
	AuthFailVlan            *string                                        `pulumi:"authFailVlan"`
	AuthFailVlanId          *string                                        `pulumi:"authFailVlanId"`
	AuthFailVlanid          *int                                           `pulumi:"authFailVlanid"`
	AuthserverTimeoutPeriod *int                                           `pulumi:"authserverTimeoutPeriod"`
	AuthserverTimeoutVlan   *string                                        `pulumi:"authserverTimeoutVlan"`
	AuthserverTimeoutVlanid *string                                        `pulumi:"authserverTimeoutVlanid"`
	DynamicSortSubtable     *string                                        `pulumi:"dynamicSortSubtable"`
	EapAutoUntaggedVlans    *string                                        `pulumi:"eapAutoUntaggedVlans"`
	EapPassthru             *string                                        `pulumi:"eapPassthru"`
	FramevidApply           *string                                        `pulumi:"framevidApply"`
	GetAllTables            *string                                        `pulumi:"getAllTables"`
	GuestAuthDelay          *int                                           `pulumi:"guestAuthDelay"`
	GuestVlan               *string                                        `pulumi:"guestVlan"`
	GuestVlanId             *string                                        `pulumi:"guestVlanId"`
	GuestVlanid             *int                                           `pulumi:"guestVlanid"`
	MacAuthBypass           *string                                        `pulumi:"macAuthBypass"`
	Name                    *string                                        `pulumi:"name"`
	OpenAuth                *string                                        `pulumi:"openAuth"`
	PolicyType              *string                                        `pulumi:"policyType"`
	RadiusTimeoutOverwrite  *string                                        `pulumi:"radiusTimeoutOverwrite"`
	SecurityMode            *string                                        `pulumi:"securityMode"`
	UserGroups              []SwitchControllerSecurityPolicy8021XUserGroup `pulumi:"userGroups"`
	Vdomparam               *string                                        `pulumi:"vdomparam"`
}

type SwitchControllerSecurityPolicy8021XState struct {
	AuthFailVlan            pulumi.StringPtrInput
	AuthFailVlanId          pulumi.StringPtrInput
	AuthFailVlanid          pulumi.IntPtrInput
	AuthserverTimeoutPeriod pulumi.IntPtrInput
	AuthserverTimeoutVlan   pulumi.StringPtrInput
	AuthserverTimeoutVlanid pulumi.StringPtrInput
	DynamicSortSubtable     pulumi.StringPtrInput
	EapAutoUntaggedVlans    pulumi.StringPtrInput
	EapPassthru             pulumi.StringPtrInput
	FramevidApply           pulumi.StringPtrInput
	GetAllTables            pulumi.StringPtrInput
	GuestAuthDelay          pulumi.IntPtrInput
	GuestVlan               pulumi.StringPtrInput
	GuestVlanId             pulumi.StringPtrInput
	GuestVlanid             pulumi.IntPtrInput
	MacAuthBypass           pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	OpenAuth                pulumi.StringPtrInput
	PolicyType              pulumi.StringPtrInput
	RadiusTimeoutOverwrite  pulumi.StringPtrInput
	SecurityMode            pulumi.StringPtrInput
	UserGroups              SwitchControllerSecurityPolicy8021XUserGroupArrayInput
	Vdomparam               pulumi.StringPtrInput
}

func (SwitchControllerSecurityPolicy8021XState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSecurityPolicy8021XState)(nil)).Elem()
}

type switchControllerSecurityPolicy8021XArgs struct {
	AuthFailVlan            *string                                        `pulumi:"authFailVlan"`
	AuthFailVlanId          *string                                        `pulumi:"authFailVlanId"`
	AuthFailVlanid          *int                                           `pulumi:"authFailVlanid"`
	AuthserverTimeoutPeriod *int                                           `pulumi:"authserverTimeoutPeriod"`
	AuthserverTimeoutVlan   *string                                        `pulumi:"authserverTimeoutVlan"`
	AuthserverTimeoutVlanid *string                                        `pulumi:"authserverTimeoutVlanid"`
	DynamicSortSubtable     *string                                        `pulumi:"dynamicSortSubtable"`
	EapAutoUntaggedVlans    *string                                        `pulumi:"eapAutoUntaggedVlans"`
	EapPassthru             *string                                        `pulumi:"eapPassthru"`
	FramevidApply           *string                                        `pulumi:"framevidApply"`
	GetAllTables            *string                                        `pulumi:"getAllTables"`
	GuestAuthDelay          *int                                           `pulumi:"guestAuthDelay"`
	GuestVlan               *string                                        `pulumi:"guestVlan"`
	GuestVlanId             *string                                        `pulumi:"guestVlanId"`
	GuestVlanid             *int                                           `pulumi:"guestVlanid"`
	MacAuthBypass           *string                                        `pulumi:"macAuthBypass"`
	Name                    *string                                        `pulumi:"name"`
	OpenAuth                *string                                        `pulumi:"openAuth"`
	PolicyType              *string                                        `pulumi:"policyType"`
	RadiusTimeoutOverwrite  *string                                        `pulumi:"radiusTimeoutOverwrite"`
	SecurityMode            *string                                        `pulumi:"securityMode"`
	UserGroups              []SwitchControllerSecurityPolicy8021XUserGroup `pulumi:"userGroups"`
	Vdomparam               *string                                        `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerSecurityPolicy8021X resource.
type SwitchControllerSecurityPolicy8021XArgs struct {
	AuthFailVlan            pulumi.StringPtrInput
	AuthFailVlanId          pulumi.StringPtrInput
	AuthFailVlanid          pulumi.IntPtrInput
	AuthserverTimeoutPeriod pulumi.IntPtrInput
	AuthserverTimeoutVlan   pulumi.StringPtrInput
	AuthserverTimeoutVlanid pulumi.StringPtrInput
	DynamicSortSubtable     pulumi.StringPtrInput
	EapAutoUntaggedVlans    pulumi.StringPtrInput
	EapPassthru             pulumi.StringPtrInput
	FramevidApply           pulumi.StringPtrInput
	GetAllTables            pulumi.StringPtrInput
	GuestAuthDelay          pulumi.IntPtrInput
	GuestVlan               pulumi.StringPtrInput
	GuestVlanId             pulumi.StringPtrInput
	GuestVlanid             pulumi.IntPtrInput
	MacAuthBypass           pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	OpenAuth                pulumi.StringPtrInput
	PolicyType              pulumi.StringPtrInput
	RadiusTimeoutOverwrite  pulumi.StringPtrInput
	SecurityMode            pulumi.StringPtrInput
	UserGroups              SwitchControllerSecurityPolicy8021XUserGroupArrayInput
	Vdomparam               pulumi.StringPtrInput
}

func (SwitchControllerSecurityPolicy8021XArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSecurityPolicy8021XArgs)(nil)).Elem()
}

type SwitchControllerSecurityPolicy8021XInput interface {
	pulumi.Input

	ToSwitchControllerSecurityPolicy8021XOutput() SwitchControllerSecurityPolicy8021XOutput
	ToSwitchControllerSecurityPolicy8021XOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XOutput
}

func (*SwitchControllerSecurityPolicy8021X) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (i *SwitchControllerSecurityPolicy8021X) ToSwitchControllerSecurityPolicy8021XOutput() SwitchControllerSecurityPolicy8021XOutput {
	return i.ToSwitchControllerSecurityPolicy8021XOutputWithContext(context.Background())
}

func (i *SwitchControllerSecurityPolicy8021X) ToSwitchControllerSecurityPolicy8021XOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSecurityPolicy8021XOutput)
}

// SwitchControllerSecurityPolicy8021XArrayInput is an input type that accepts SwitchControllerSecurityPolicy8021XArray and SwitchControllerSecurityPolicy8021XArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSecurityPolicy8021XArrayInput` via:
//
//	SwitchControllerSecurityPolicy8021XArray{ SwitchControllerSecurityPolicy8021XArgs{...} }
type SwitchControllerSecurityPolicy8021XArrayInput interface {
	pulumi.Input

	ToSwitchControllerSecurityPolicy8021XArrayOutput() SwitchControllerSecurityPolicy8021XArrayOutput
	ToSwitchControllerSecurityPolicy8021XArrayOutputWithContext(context.Context) SwitchControllerSecurityPolicy8021XArrayOutput
}

type SwitchControllerSecurityPolicy8021XArray []SwitchControllerSecurityPolicy8021XInput

func (SwitchControllerSecurityPolicy8021XArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (i SwitchControllerSecurityPolicy8021XArray) ToSwitchControllerSecurityPolicy8021XArrayOutput() SwitchControllerSecurityPolicy8021XArrayOutput {
	return i.ToSwitchControllerSecurityPolicy8021XArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSecurityPolicy8021XArray) ToSwitchControllerSecurityPolicy8021XArrayOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSecurityPolicy8021XArrayOutput)
}

// SwitchControllerSecurityPolicy8021XMapInput is an input type that accepts SwitchControllerSecurityPolicy8021XMap and SwitchControllerSecurityPolicy8021XMapOutput values.
// You can construct a concrete instance of `SwitchControllerSecurityPolicy8021XMapInput` via:
//
//	SwitchControllerSecurityPolicy8021XMap{ "key": SwitchControllerSecurityPolicy8021XArgs{...} }
type SwitchControllerSecurityPolicy8021XMapInput interface {
	pulumi.Input

	ToSwitchControllerSecurityPolicy8021XMapOutput() SwitchControllerSecurityPolicy8021XMapOutput
	ToSwitchControllerSecurityPolicy8021XMapOutputWithContext(context.Context) SwitchControllerSecurityPolicy8021XMapOutput
}

type SwitchControllerSecurityPolicy8021XMap map[string]SwitchControllerSecurityPolicy8021XInput

func (SwitchControllerSecurityPolicy8021XMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (i SwitchControllerSecurityPolicy8021XMap) ToSwitchControllerSecurityPolicy8021XMapOutput() SwitchControllerSecurityPolicy8021XMapOutput {
	return i.ToSwitchControllerSecurityPolicy8021XMapOutputWithContext(context.Background())
}

func (i SwitchControllerSecurityPolicy8021XMap) ToSwitchControllerSecurityPolicy8021XMapOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSecurityPolicy8021XMapOutput)
}

type SwitchControllerSecurityPolicy8021XOutput struct{ *pulumi.OutputState }

func (SwitchControllerSecurityPolicy8021XOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (o SwitchControllerSecurityPolicy8021XOutput) ToSwitchControllerSecurityPolicy8021XOutput() SwitchControllerSecurityPolicy8021XOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XOutput) ToSwitchControllerSecurityPolicy8021XOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthFailVlan() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.AuthFailVlan }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthFailVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.AuthFailVlanId }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthFailVlanid() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.IntOutput { return v.AuthFailVlanid }).(pulumi.IntOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthserverTimeoutPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.IntOutput { return v.AuthserverTimeoutPeriod }).(pulumi.IntOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthserverTimeoutVlan() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.AuthserverTimeoutVlan }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) AuthserverTimeoutVlanid() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.AuthserverTimeoutVlanid }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) EapAutoUntaggedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.EapAutoUntaggedVlans }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) EapPassthru() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.EapPassthru }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) FramevidApply() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.FramevidApply }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) GuestAuthDelay() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.IntOutput { return v.GuestAuthDelay }).(pulumi.IntOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) GuestVlan() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.GuestVlan }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) GuestVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.GuestVlanId }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) GuestVlanid() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.IntOutput { return v.GuestVlanid }).(pulumi.IntOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) MacAuthBypass() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.MacAuthBypass }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) OpenAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.OpenAuth }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) RadiusTimeoutOverwrite() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.RadiusTimeoutOverwrite }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) SecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringOutput { return v.SecurityMode }).(pulumi.StringOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) UserGroups() SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) SwitchControllerSecurityPolicy8021XUserGroupArrayOutput {
		return v.UserGroups
	}).(SwitchControllerSecurityPolicy8021XUserGroupArrayOutput)
}

func (o SwitchControllerSecurityPolicy8021XOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSecurityPolicy8021X) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerSecurityPolicy8021XArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSecurityPolicy8021XArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (o SwitchControllerSecurityPolicy8021XArrayOutput) ToSwitchControllerSecurityPolicy8021XArrayOutput() SwitchControllerSecurityPolicy8021XArrayOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XArrayOutput) ToSwitchControllerSecurityPolicy8021XArrayOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XArrayOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XArrayOutput) Index(i pulumi.IntInput) SwitchControllerSecurityPolicy8021XOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerSecurityPolicy8021X {
		return vs[0].([]*SwitchControllerSecurityPolicy8021X)[vs[1].(int)]
	}).(SwitchControllerSecurityPolicy8021XOutput)
}

type SwitchControllerSecurityPolicy8021XMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerSecurityPolicy8021XMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSecurityPolicy8021X)(nil)).Elem()
}

func (o SwitchControllerSecurityPolicy8021XMapOutput) ToSwitchControllerSecurityPolicy8021XMapOutput() SwitchControllerSecurityPolicy8021XMapOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XMapOutput) ToSwitchControllerSecurityPolicy8021XMapOutputWithContext(ctx context.Context) SwitchControllerSecurityPolicy8021XMapOutput {
	return o
}

func (o SwitchControllerSecurityPolicy8021XMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerSecurityPolicy8021XOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerSecurityPolicy8021X {
		return vs[0].(map[string]*SwitchControllerSecurityPolicy8021X)[vs[1].(string)]
	}).(SwitchControllerSecurityPolicy8021XOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSecurityPolicy8021XInput)(nil)).Elem(), &SwitchControllerSecurityPolicy8021X{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSecurityPolicy8021XArrayInput)(nil)).Elem(), SwitchControllerSecurityPolicy8021XArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSecurityPolicy8021XMapInput)(nil)).Elem(), SwitchControllerSecurityPolicy8021XMap{})
	pulumi.RegisterOutputType(SwitchControllerSecurityPolicy8021XOutput{})
	pulumi.RegisterOutputType(SwitchControllerSecurityPolicy8021XArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSecurityPolicy8021XMapOutput{})
}
