// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemAutomationStitch struct {
	pulumi.CustomResourceState

	Action              SystemAutomationStitchActionArrayOutput      `pulumi:"action"`
	Actions             SystemAutomationStitchActionArrayOutput      `pulumi:"actions"`
	Description         pulumi.StringPtrOutput                       `pulumi:"description"`
	Destinations        SystemAutomationStitchDestinationArrayOutput `pulumi:"destinations"`
	DynamicSortSubtable pulumi.StringPtrOutput                       `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput                       `pulumi:"getAllTables"`
	Name                pulumi.StringOutput                          `pulumi:"name"`
	Status              pulumi.StringOutput                          `pulumi:"status"`
	Trigger             pulumi.StringOutput                          `pulumi:"trigger"`
	Vdomparam           pulumi.StringPtrOutput                       `pulumi:"vdomparam"`
}

// NewSystemAutomationStitch registers a new resource with the given unique name, arguments, and options.
func NewSystemAutomationStitch(ctx *pulumi.Context,
	name string, args *SystemAutomationStitchArgs, opts ...pulumi.ResourceOption) (*SystemAutomationStitch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.Trigger == nil {
		return nil, errors.New("invalid value for required argument 'Trigger'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemAutomationStitch
	err := ctx.RegisterResource("fortios:index/systemAutomationStitch:SystemAutomationStitch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAutomationStitch gets an existing SystemAutomationStitch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAutomationStitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAutomationStitchState, opts ...pulumi.ResourceOption) (*SystemAutomationStitch, error) {
	var resource SystemAutomationStitch
	err := ctx.ReadResource("fortios:index/systemAutomationStitch:SystemAutomationStitch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAutomationStitch resources.
type systemAutomationStitchState struct {
	Action              []SystemAutomationStitchAction      `pulumi:"action"`
	Actions             []SystemAutomationStitchAction      `pulumi:"actions"`
	Description         *string                             `pulumi:"description"`
	Destinations        []SystemAutomationStitchDestination `pulumi:"destinations"`
	DynamicSortSubtable *string                             `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                             `pulumi:"getAllTables"`
	Name                *string                             `pulumi:"name"`
	Status              *string                             `pulumi:"status"`
	Trigger             *string                             `pulumi:"trigger"`
	Vdomparam           *string                             `pulumi:"vdomparam"`
}

type SystemAutomationStitchState struct {
	Action              SystemAutomationStitchActionArrayInput
	Actions             SystemAutomationStitchActionArrayInput
	Description         pulumi.StringPtrInput
	Destinations        SystemAutomationStitchDestinationArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	Trigger             pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemAutomationStitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutomationStitchState)(nil)).Elem()
}

type systemAutomationStitchArgs struct {
	Action              []SystemAutomationStitchAction      `pulumi:"action"`
	Actions             []SystemAutomationStitchAction      `pulumi:"actions"`
	Description         *string                             `pulumi:"description"`
	Destinations        []SystemAutomationStitchDestination `pulumi:"destinations"`
	DynamicSortSubtable *string                             `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                             `pulumi:"getAllTables"`
	Name                *string                             `pulumi:"name"`
	Status              string                              `pulumi:"status"`
	Trigger             string                              `pulumi:"trigger"`
	Vdomparam           *string                             `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemAutomationStitch resource.
type SystemAutomationStitchArgs struct {
	Action              SystemAutomationStitchActionArrayInput
	Actions             SystemAutomationStitchActionArrayInput
	Description         pulumi.StringPtrInput
	Destinations        SystemAutomationStitchDestinationArrayInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Status              pulumi.StringInput
	Trigger             pulumi.StringInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemAutomationStitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAutomationStitchArgs)(nil)).Elem()
}

type SystemAutomationStitchInput interface {
	pulumi.Input

	ToSystemAutomationStitchOutput() SystemAutomationStitchOutput
	ToSystemAutomationStitchOutputWithContext(ctx context.Context) SystemAutomationStitchOutput
}

func (*SystemAutomationStitch) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutomationStitch)(nil)).Elem()
}

func (i *SystemAutomationStitch) ToSystemAutomationStitchOutput() SystemAutomationStitchOutput {
	return i.ToSystemAutomationStitchOutputWithContext(context.Background())
}

func (i *SystemAutomationStitch) ToSystemAutomationStitchOutputWithContext(ctx context.Context) SystemAutomationStitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchOutput)
}

// SystemAutomationStitchArrayInput is an input type that accepts SystemAutomationStitchArray and SystemAutomationStitchArrayOutput values.
// You can construct a concrete instance of `SystemAutomationStitchArrayInput` via:
//
//	SystemAutomationStitchArray{ SystemAutomationStitchArgs{...} }
type SystemAutomationStitchArrayInput interface {
	pulumi.Input

	ToSystemAutomationStitchArrayOutput() SystemAutomationStitchArrayOutput
	ToSystemAutomationStitchArrayOutputWithContext(context.Context) SystemAutomationStitchArrayOutput
}

type SystemAutomationStitchArray []SystemAutomationStitchInput

func (SystemAutomationStitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutomationStitch)(nil)).Elem()
}

func (i SystemAutomationStitchArray) ToSystemAutomationStitchArrayOutput() SystemAutomationStitchArrayOutput {
	return i.ToSystemAutomationStitchArrayOutputWithContext(context.Background())
}

func (i SystemAutomationStitchArray) ToSystemAutomationStitchArrayOutputWithContext(ctx context.Context) SystemAutomationStitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchArrayOutput)
}

// SystemAutomationStitchMapInput is an input type that accepts SystemAutomationStitchMap and SystemAutomationStitchMapOutput values.
// You can construct a concrete instance of `SystemAutomationStitchMapInput` via:
//
//	SystemAutomationStitchMap{ "key": SystemAutomationStitchArgs{...} }
type SystemAutomationStitchMapInput interface {
	pulumi.Input

	ToSystemAutomationStitchMapOutput() SystemAutomationStitchMapOutput
	ToSystemAutomationStitchMapOutputWithContext(context.Context) SystemAutomationStitchMapOutput
}

type SystemAutomationStitchMap map[string]SystemAutomationStitchInput

func (SystemAutomationStitchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutomationStitch)(nil)).Elem()
}

func (i SystemAutomationStitchMap) ToSystemAutomationStitchMapOutput() SystemAutomationStitchMapOutput {
	return i.ToSystemAutomationStitchMapOutputWithContext(context.Background())
}

func (i SystemAutomationStitchMap) ToSystemAutomationStitchMapOutputWithContext(ctx context.Context) SystemAutomationStitchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAutomationStitchMapOutput)
}

type SystemAutomationStitchOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAutomationStitch)(nil)).Elem()
}

func (o SystemAutomationStitchOutput) ToSystemAutomationStitchOutput() SystemAutomationStitchOutput {
	return o
}

func (o SystemAutomationStitchOutput) ToSystemAutomationStitchOutputWithContext(ctx context.Context) SystemAutomationStitchOutput {
	return o
}

func (o SystemAutomationStitchOutput) Action() SystemAutomationStitchActionArrayOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) SystemAutomationStitchActionArrayOutput { return v.Action }).(SystemAutomationStitchActionArrayOutput)
}

func (o SystemAutomationStitchOutput) Actions() SystemAutomationStitchActionArrayOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) SystemAutomationStitchActionArrayOutput { return v.Actions }).(SystemAutomationStitchActionArrayOutput)
}

func (o SystemAutomationStitchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationStitchOutput) Destinations() SystemAutomationStitchDestinationArrayOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) SystemAutomationStitchDestinationArrayOutput { return v.Destinations }).(SystemAutomationStitchDestinationArrayOutput)
}

func (o SystemAutomationStitchOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationStitchOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemAutomationStitchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemAutomationStitchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemAutomationStitchOutput) Trigger() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringOutput { return v.Trigger }).(pulumi.StringOutput)
}

func (o SystemAutomationStitchOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAutomationStitch) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemAutomationStitchArrayOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAutomationStitch)(nil)).Elem()
}

func (o SystemAutomationStitchArrayOutput) ToSystemAutomationStitchArrayOutput() SystemAutomationStitchArrayOutput {
	return o
}

func (o SystemAutomationStitchArrayOutput) ToSystemAutomationStitchArrayOutputWithContext(ctx context.Context) SystemAutomationStitchArrayOutput {
	return o
}

func (o SystemAutomationStitchArrayOutput) Index(i pulumi.IntInput) SystemAutomationStitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAutomationStitch {
		return vs[0].([]*SystemAutomationStitch)[vs[1].(int)]
	}).(SystemAutomationStitchOutput)
}

type SystemAutomationStitchMapOutput struct{ *pulumi.OutputState }

func (SystemAutomationStitchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAutomationStitch)(nil)).Elem()
}

func (o SystemAutomationStitchMapOutput) ToSystemAutomationStitchMapOutput() SystemAutomationStitchMapOutput {
	return o
}

func (o SystemAutomationStitchMapOutput) ToSystemAutomationStitchMapOutputWithContext(ctx context.Context) SystemAutomationStitchMapOutput {
	return o
}

func (o SystemAutomationStitchMapOutput) MapIndex(k pulumi.StringInput) SystemAutomationStitchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAutomationStitch {
		return vs[0].(map[string]*SystemAutomationStitch)[vs[1].(string)]
	}).(SystemAutomationStitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchInput)(nil)).Elem(), &SystemAutomationStitch{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchArrayInput)(nil)).Elem(), SystemAutomationStitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAutomationStitchMapInput)(nil)).Elem(), SystemAutomationStitchMap{})
	pulumi.RegisterOutputType(SystemAutomationStitchOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchArrayOutput{})
	pulumi.RegisterOutputType(SystemAutomationStitchMapOutput{})
}
