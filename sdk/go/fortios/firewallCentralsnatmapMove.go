// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallCentralsnatmapMove struct {
	pulumi.CustomResourceState

	Comment              pulumi.StringPtrOutput `pulumi:"comment"`
	Move                 pulumi.StringOutput    `pulumi:"move"`
	PolicyidDst          pulumi.IntOutput       `pulumi:"policyidDst"`
	PolicyidSrc          pulumi.IntOutput       `pulumi:"policyidSrc"`
	StatePolicySrcdstPos pulumi.StringPtrOutput `pulumi:"statePolicySrcdstPos"`
	Vdomparam            pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallCentralsnatmapMove registers a new resource with the given unique name, arguments, and options.
func NewFirewallCentralsnatmapMove(ctx *pulumi.Context,
	name string, args *FirewallCentralsnatmapMoveArgs, opts ...pulumi.ResourceOption) (*FirewallCentralsnatmapMove, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Move == nil {
		return nil, errors.New("invalid value for required argument 'Move'")
	}
	if args.PolicyidDst == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidDst'")
	}
	if args.PolicyidSrc == nil {
		return nil, errors.New("invalid value for required argument 'PolicyidSrc'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallCentralsnatmapMove
	err := ctx.RegisterResource("fortios:index/firewallCentralsnatmapMove:FirewallCentralsnatmapMove", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallCentralsnatmapMove gets an existing FirewallCentralsnatmapMove resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallCentralsnatmapMove(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallCentralsnatmapMoveState, opts ...pulumi.ResourceOption) (*FirewallCentralsnatmapMove, error) {
	var resource FirewallCentralsnatmapMove
	err := ctx.ReadResource("fortios:index/firewallCentralsnatmapMove:FirewallCentralsnatmapMove", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallCentralsnatmapMove resources.
type firewallCentralsnatmapMoveState struct {
	Comment              *string `pulumi:"comment"`
	Move                 *string `pulumi:"move"`
	PolicyidDst          *int    `pulumi:"policyidDst"`
	PolicyidSrc          *int    `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

type FirewallCentralsnatmapMoveState struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringPtrInput
	PolicyidDst          pulumi.IntPtrInput
	PolicyidSrc          pulumi.IntPtrInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallCentralsnatmapMoveState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallCentralsnatmapMoveState)(nil)).Elem()
}

type firewallCentralsnatmapMoveArgs struct {
	Comment              *string `pulumi:"comment"`
	Move                 string  `pulumi:"move"`
	PolicyidDst          int     `pulumi:"policyidDst"`
	PolicyidSrc          int     `pulumi:"policyidSrc"`
	StatePolicySrcdstPos *string `pulumi:"statePolicySrcdstPos"`
	Vdomparam            *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallCentralsnatmapMove resource.
type FirewallCentralsnatmapMoveArgs struct {
	Comment              pulumi.StringPtrInput
	Move                 pulumi.StringInput
	PolicyidDst          pulumi.IntInput
	PolicyidSrc          pulumi.IntInput
	StatePolicySrcdstPos pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
}

func (FirewallCentralsnatmapMoveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallCentralsnatmapMoveArgs)(nil)).Elem()
}

type FirewallCentralsnatmapMoveInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapMoveOutput() FirewallCentralsnatmapMoveOutput
	ToFirewallCentralsnatmapMoveOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveOutput
}

func (*FirewallCentralsnatmapMove) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallCentralsnatmapMove)(nil)).Elem()
}

func (i *FirewallCentralsnatmapMove) ToFirewallCentralsnatmapMoveOutput() FirewallCentralsnatmapMoveOutput {
	return i.ToFirewallCentralsnatmapMoveOutputWithContext(context.Background())
}

func (i *FirewallCentralsnatmapMove) ToFirewallCentralsnatmapMoveOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapMoveOutput)
}

// FirewallCentralsnatmapMoveArrayInput is an input type that accepts FirewallCentralsnatmapMoveArray and FirewallCentralsnatmapMoveArrayOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapMoveArrayInput` via:
//
//          FirewallCentralsnatmapMoveArray{ FirewallCentralsnatmapMoveArgs{...} }
type FirewallCentralsnatmapMoveArrayInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapMoveArrayOutput() FirewallCentralsnatmapMoveArrayOutput
	ToFirewallCentralsnatmapMoveArrayOutputWithContext(context.Context) FirewallCentralsnatmapMoveArrayOutput
}

type FirewallCentralsnatmapMoveArray []FirewallCentralsnatmapMoveInput

func (FirewallCentralsnatmapMoveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallCentralsnatmapMove)(nil)).Elem()
}

func (i FirewallCentralsnatmapMoveArray) ToFirewallCentralsnatmapMoveArrayOutput() FirewallCentralsnatmapMoveArrayOutput {
	return i.ToFirewallCentralsnatmapMoveArrayOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapMoveArray) ToFirewallCentralsnatmapMoveArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapMoveArrayOutput)
}

// FirewallCentralsnatmapMoveMapInput is an input type that accepts FirewallCentralsnatmapMoveMap and FirewallCentralsnatmapMoveMapOutput values.
// You can construct a concrete instance of `FirewallCentralsnatmapMoveMapInput` via:
//
//          FirewallCentralsnatmapMoveMap{ "key": FirewallCentralsnatmapMoveArgs{...} }
type FirewallCentralsnatmapMoveMapInput interface {
	pulumi.Input

	ToFirewallCentralsnatmapMoveMapOutput() FirewallCentralsnatmapMoveMapOutput
	ToFirewallCentralsnatmapMoveMapOutputWithContext(context.Context) FirewallCentralsnatmapMoveMapOutput
}

type FirewallCentralsnatmapMoveMap map[string]FirewallCentralsnatmapMoveInput

func (FirewallCentralsnatmapMoveMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallCentralsnatmapMove)(nil)).Elem()
}

func (i FirewallCentralsnatmapMoveMap) ToFirewallCentralsnatmapMoveMapOutput() FirewallCentralsnatmapMoveMapOutput {
	return i.ToFirewallCentralsnatmapMoveMapOutputWithContext(context.Background())
}

func (i FirewallCentralsnatmapMoveMap) ToFirewallCentralsnatmapMoveMapOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallCentralsnatmapMoveMapOutput)
}

type FirewallCentralsnatmapMoveOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapMoveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallCentralsnatmapMove)(nil)).Elem()
}

func (o FirewallCentralsnatmapMoveOutput) ToFirewallCentralsnatmapMoveOutput() FirewallCentralsnatmapMoveOutput {
	return o
}

func (o FirewallCentralsnatmapMoveOutput) ToFirewallCentralsnatmapMoveOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveOutput {
	return o
}

type FirewallCentralsnatmapMoveArrayOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapMoveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallCentralsnatmapMove)(nil)).Elem()
}

func (o FirewallCentralsnatmapMoveArrayOutput) ToFirewallCentralsnatmapMoveArrayOutput() FirewallCentralsnatmapMoveArrayOutput {
	return o
}

func (o FirewallCentralsnatmapMoveArrayOutput) ToFirewallCentralsnatmapMoveArrayOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveArrayOutput {
	return o
}

func (o FirewallCentralsnatmapMoveArrayOutput) Index(i pulumi.IntInput) FirewallCentralsnatmapMoveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallCentralsnatmapMove {
		return vs[0].([]*FirewallCentralsnatmapMove)[vs[1].(int)]
	}).(FirewallCentralsnatmapMoveOutput)
}

type FirewallCentralsnatmapMoveMapOutput struct{ *pulumi.OutputState }

func (FirewallCentralsnatmapMoveMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallCentralsnatmapMove)(nil)).Elem()
}

func (o FirewallCentralsnatmapMoveMapOutput) ToFirewallCentralsnatmapMoveMapOutput() FirewallCentralsnatmapMoveMapOutput {
	return o
}

func (o FirewallCentralsnatmapMoveMapOutput) ToFirewallCentralsnatmapMoveMapOutputWithContext(ctx context.Context) FirewallCentralsnatmapMoveMapOutput {
	return o
}

func (o FirewallCentralsnatmapMoveMapOutput) MapIndex(k pulumi.StringInput) FirewallCentralsnatmapMoveOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallCentralsnatmapMove {
		return vs[0].(map[string]*FirewallCentralsnatmapMove)[vs[1].(string)]
	}).(FirewallCentralsnatmapMoveOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapMoveInput)(nil)).Elem(), &FirewallCentralsnatmapMove{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapMoveArrayInput)(nil)).Elem(), FirewallCentralsnatmapMoveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallCentralsnatmapMoveMapInput)(nil)).Elem(), FirewallCentralsnatmapMoveMap{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapMoveOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapMoveArrayOutput{})
	pulumi.RegisterOutputType(FirewallCentralsnatmapMoveMapOutput{})
}
