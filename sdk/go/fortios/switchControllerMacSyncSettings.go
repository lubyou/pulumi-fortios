// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure global MAC synchronization settings. Applies to FortiOS Version `<= 6.2.0`.
//
// ## Import
//
// SwitchController MacSyncSettings can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerMacSyncSettings:SwitchControllerMacSyncSettings labelname SwitchControllerMacSyncSettings
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerMacSyncSettings:SwitchControllerMacSyncSettings labelname SwitchControllerMacSyncSettings
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerMacSyncSettings struct {
	pulumi.CustomResourceState

	// Time interval between MAC synchronizations (30 - 1800 sec, default = 60, 0 = disable MAC synchronization).
	MacSyncInterval pulumi.IntOutput `pulumi:"macSyncInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSwitchControllerMacSyncSettings registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerMacSyncSettings(ctx *pulumi.Context,
	name string, args *SwitchControllerMacSyncSettingsArgs, opts ...pulumi.ResourceOption) (*SwitchControllerMacSyncSettings, error) {
	if args == nil {
		args = &SwitchControllerMacSyncSettingsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerMacSyncSettings
	err := ctx.RegisterResource("fortios:index/switchControllerMacSyncSettings:SwitchControllerMacSyncSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerMacSyncSettings gets an existing SwitchControllerMacSyncSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerMacSyncSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerMacSyncSettingsState, opts ...pulumi.ResourceOption) (*SwitchControllerMacSyncSettings, error) {
	var resource SwitchControllerMacSyncSettings
	err := ctx.ReadResource("fortios:index/switchControllerMacSyncSettings:SwitchControllerMacSyncSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerMacSyncSettings resources.
type switchControllerMacSyncSettingsState struct {
	// Time interval between MAC synchronizations (30 - 1800 sec, default = 60, 0 = disable MAC synchronization).
	MacSyncInterval *int `pulumi:"macSyncInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SwitchControllerMacSyncSettingsState struct {
	// Time interval between MAC synchronizations (30 - 1800 sec, default = 60, 0 = disable MAC synchronization).
	MacSyncInterval pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerMacSyncSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerMacSyncSettingsState)(nil)).Elem()
}

type switchControllerMacSyncSettingsArgs struct {
	// Time interval between MAC synchronizations (30 - 1800 sec, default = 60, 0 = disable MAC synchronization).
	MacSyncInterval *int `pulumi:"macSyncInterval"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerMacSyncSettings resource.
type SwitchControllerMacSyncSettingsArgs struct {
	// Time interval between MAC synchronizations (30 - 1800 sec, default = 60, 0 = disable MAC synchronization).
	MacSyncInterval pulumi.IntPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SwitchControllerMacSyncSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerMacSyncSettingsArgs)(nil)).Elem()
}

type SwitchControllerMacSyncSettingsInput interface {
	pulumi.Input

	ToSwitchControllerMacSyncSettingsOutput() SwitchControllerMacSyncSettingsOutput
	ToSwitchControllerMacSyncSettingsOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsOutput
}

func (*SwitchControllerMacSyncSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (i *SwitchControllerMacSyncSettings) ToSwitchControllerMacSyncSettingsOutput() SwitchControllerMacSyncSettingsOutput {
	return i.ToSwitchControllerMacSyncSettingsOutputWithContext(context.Background())
}

func (i *SwitchControllerMacSyncSettings) ToSwitchControllerMacSyncSettingsOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerMacSyncSettingsOutput)
}

// SwitchControllerMacSyncSettingsArrayInput is an input type that accepts SwitchControllerMacSyncSettingsArray and SwitchControllerMacSyncSettingsArrayOutput values.
// You can construct a concrete instance of `SwitchControllerMacSyncSettingsArrayInput` via:
//
//          SwitchControllerMacSyncSettingsArray{ SwitchControllerMacSyncSettingsArgs{...} }
type SwitchControllerMacSyncSettingsArrayInput interface {
	pulumi.Input

	ToSwitchControllerMacSyncSettingsArrayOutput() SwitchControllerMacSyncSettingsArrayOutput
	ToSwitchControllerMacSyncSettingsArrayOutputWithContext(context.Context) SwitchControllerMacSyncSettingsArrayOutput
}

type SwitchControllerMacSyncSettingsArray []SwitchControllerMacSyncSettingsInput

func (SwitchControllerMacSyncSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (i SwitchControllerMacSyncSettingsArray) ToSwitchControllerMacSyncSettingsArrayOutput() SwitchControllerMacSyncSettingsArrayOutput {
	return i.ToSwitchControllerMacSyncSettingsArrayOutputWithContext(context.Background())
}

func (i SwitchControllerMacSyncSettingsArray) ToSwitchControllerMacSyncSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerMacSyncSettingsArrayOutput)
}

// SwitchControllerMacSyncSettingsMapInput is an input type that accepts SwitchControllerMacSyncSettingsMap and SwitchControllerMacSyncSettingsMapOutput values.
// You can construct a concrete instance of `SwitchControllerMacSyncSettingsMapInput` via:
//
//          SwitchControllerMacSyncSettingsMap{ "key": SwitchControllerMacSyncSettingsArgs{...} }
type SwitchControllerMacSyncSettingsMapInput interface {
	pulumi.Input

	ToSwitchControllerMacSyncSettingsMapOutput() SwitchControllerMacSyncSettingsMapOutput
	ToSwitchControllerMacSyncSettingsMapOutputWithContext(context.Context) SwitchControllerMacSyncSettingsMapOutput
}

type SwitchControllerMacSyncSettingsMap map[string]SwitchControllerMacSyncSettingsInput

func (SwitchControllerMacSyncSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (i SwitchControllerMacSyncSettingsMap) ToSwitchControllerMacSyncSettingsMapOutput() SwitchControllerMacSyncSettingsMapOutput {
	return i.ToSwitchControllerMacSyncSettingsMapOutputWithContext(context.Background())
}

func (i SwitchControllerMacSyncSettingsMap) ToSwitchControllerMacSyncSettingsMapOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerMacSyncSettingsMapOutput)
}

type SwitchControllerMacSyncSettingsOutput struct{ *pulumi.OutputState }

func (SwitchControllerMacSyncSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (o SwitchControllerMacSyncSettingsOutput) ToSwitchControllerMacSyncSettingsOutput() SwitchControllerMacSyncSettingsOutput {
	return o
}

func (o SwitchControllerMacSyncSettingsOutput) ToSwitchControllerMacSyncSettingsOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsOutput {
	return o
}

type SwitchControllerMacSyncSettingsArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerMacSyncSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (o SwitchControllerMacSyncSettingsArrayOutput) ToSwitchControllerMacSyncSettingsArrayOutput() SwitchControllerMacSyncSettingsArrayOutput {
	return o
}

func (o SwitchControllerMacSyncSettingsArrayOutput) ToSwitchControllerMacSyncSettingsArrayOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsArrayOutput {
	return o
}

func (o SwitchControllerMacSyncSettingsArrayOutput) Index(i pulumi.IntInput) SwitchControllerMacSyncSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerMacSyncSettings {
		return vs[0].([]*SwitchControllerMacSyncSettings)[vs[1].(int)]
	}).(SwitchControllerMacSyncSettingsOutput)
}

type SwitchControllerMacSyncSettingsMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerMacSyncSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerMacSyncSettings)(nil)).Elem()
}

func (o SwitchControllerMacSyncSettingsMapOutput) ToSwitchControllerMacSyncSettingsMapOutput() SwitchControllerMacSyncSettingsMapOutput {
	return o
}

func (o SwitchControllerMacSyncSettingsMapOutput) ToSwitchControllerMacSyncSettingsMapOutputWithContext(ctx context.Context) SwitchControllerMacSyncSettingsMapOutput {
	return o
}

func (o SwitchControllerMacSyncSettingsMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerMacSyncSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerMacSyncSettings {
		return vs[0].(map[string]*SwitchControllerMacSyncSettings)[vs[1].(string)]
	}).(SwitchControllerMacSyncSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerMacSyncSettingsInput)(nil)).Elem(), &SwitchControllerMacSyncSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerMacSyncSettingsArrayInput)(nil)).Elem(), SwitchControllerMacSyncSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerMacSyncSettingsMapInput)(nil)).Elem(), SwitchControllerMacSyncSettingsMap{})
	pulumi.RegisterOutputType(SwitchControllerMacSyncSettingsOutput{})
	pulumi.RegisterOutputType(SwitchControllerMacSyncSettingsArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerMacSyncSettingsMapOutput{})
}
