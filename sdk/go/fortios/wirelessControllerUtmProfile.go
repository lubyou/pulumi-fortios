// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WirelessControllerUtmProfile struct {
	pulumi.CustomResourceState

	AntivirusProfile      pulumi.StringOutput    `pulumi:"antivirusProfile"`
	ApplicationList       pulumi.StringOutput    `pulumi:"applicationList"`
	Comment               pulumi.StringOutput    `pulumi:"comment"`
	IpsSensor             pulumi.StringOutput    `pulumi:"ipsSensor"`
	Name                  pulumi.StringOutput    `pulumi:"name"`
	ScanBotnetConnections pulumi.StringOutput    `pulumi:"scanBotnetConnections"`
	UtmLog                pulumi.StringOutput    `pulumi:"utmLog"`
	Vdomparam             pulumi.StringPtrOutput `pulumi:"vdomparam"`
	WebfilterProfile      pulumi.StringOutput    `pulumi:"webfilterProfile"`
}

// NewWirelessControllerUtmProfile registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerUtmProfile(ctx *pulumi.Context,
	name string, args *WirelessControllerUtmProfileArgs, opts ...pulumi.ResourceOption) (*WirelessControllerUtmProfile, error) {
	if args == nil {
		args = &WirelessControllerUtmProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessControllerUtmProfile
	err := ctx.RegisterResource("fortios:index/wirelessControllerUtmProfile:WirelessControllerUtmProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerUtmProfile gets an existing WirelessControllerUtmProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerUtmProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerUtmProfileState, opts ...pulumi.ResourceOption) (*WirelessControllerUtmProfile, error) {
	var resource WirelessControllerUtmProfile
	err := ctx.ReadResource("fortios:index/wirelessControllerUtmProfile:WirelessControllerUtmProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerUtmProfile resources.
type wirelessControllerUtmProfileState struct {
	AntivirusProfile      *string `pulumi:"antivirusProfile"`
	ApplicationList       *string `pulumi:"applicationList"`
	Comment               *string `pulumi:"comment"`
	IpsSensor             *string `pulumi:"ipsSensor"`
	Name                  *string `pulumi:"name"`
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	UtmLog                *string `pulumi:"utmLog"`
	Vdomparam             *string `pulumi:"vdomparam"`
	WebfilterProfile      *string `pulumi:"webfilterProfile"`
}

type WirelessControllerUtmProfileState struct {
	AntivirusProfile      pulumi.StringPtrInput
	ApplicationList       pulumi.StringPtrInput
	Comment               pulumi.StringPtrInput
	IpsSensor             pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	ScanBotnetConnections pulumi.StringPtrInput
	UtmLog                pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
	WebfilterProfile      pulumi.StringPtrInput
}

func (WirelessControllerUtmProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerUtmProfileState)(nil)).Elem()
}

type wirelessControllerUtmProfileArgs struct {
	AntivirusProfile      *string `pulumi:"antivirusProfile"`
	ApplicationList       *string `pulumi:"applicationList"`
	Comment               *string `pulumi:"comment"`
	IpsSensor             *string `pulumi:"ipsSensor"`
	Name                  *string `pulumi:"name"`
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	UtmLog                *string `pulumi:"utmLog"`
	Vdomparam             *string `pulumi:"vdomparam"`
	WebfilterProfile      *string `pulumi:"webfilterProfile"`
}

// The set of arguments for constructing a WirelessControllerUtmProfile resource.
type WirelessControllerUtmProfileArgs struct {
	AntivirusProfile      pulumi.StringPtrInput
	ApplicationList       pulumi.StringPtrInput
	Comment               pulumi.StringPtrInput
	IpsSensor             pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	ScanBotnetConnections pulumi.StringPtrInput
	UtmLog                pulumi.StringPtrInput
	Vdomparam             pulumi.StringPtrInput
	WebfilterProfile      pulumi.StringPtrInput
}

func (WirelessControllerUtmProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerUtmProfileArgs)(nil)).Elem()
}

type WirelessControllerUtmProfileInput interface {
	pulumi.Input

	ToWirelessControllerUtmProfileOutput() WirelessControllerUtmProfileOutput
	ToWirelessControllerUtmProfileOutputWithContext(ctx context.Context) WirelessControllerUtmProfileOutput
}

func (*WirelessControllerUtmProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerUtmProfile)(nil)).Elem()
}

func (i *WirelessControllerUtmProfile) ToWirelessControllerUtmProfileOutput() WirelessControllerUtmProfileOutput {
	return i.ToWirelessControllerUtmProfileOutputWithContext(context.Background())
}

func (i *WirelessControllerUtmProfile) ToWirelessControllerUtmProfileOutputWithContext(ctx context.Context) WirelessControllerUtmProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerUtmProfileOutput)
}

func (i *WirelessControllerUtmProfile) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerUtmProfile] {
	return pulumix.Output[*WirelessControllerUtmProfile]{
		OutputState: i.ToWirelessControllerUtmProfileOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerUtmProfileArrayInput is an input type that accepts WirelessControllerUtmProfileArray and WirelessControllerUtmProfileArrayOutput values.
// You can construct a concrete instance of `WirelessControllerUtmProfileArrayInput` via:
//
//	WirelessControllerUtmProfileArray{ WirelessControllerUtmProfileArgs{...} }
type WirelessControllerUtmProfileArrayInput interface {
	pulumi.Input

	ToWirelessControllerUtmProfileArrayOutput() WirelessControllerUtmProfileArrayOutput
	ToWirelessControllerUtmProfileArrayOutputWithContext(context.Context) WirelessControllerUtmProfileArrayOutput
}

type WirelessControllerUtmProfileArray []WirelessControllerUtmProfileInput

func (WirelessControllerUtmProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerUtmProfile)(nil)).Elem()
}

func (i WirelessControllerUtmProfileArray) ToWirelessControllerUtmProfileArrayOutput() WirelessControllerUtmProfileArrayOutput {
	return i.ToWirelessControllerUtmProfileArrayOutputWithContext(context.Background())
}

func (i WirelessControllerUtmProfileArray) ToWirelessControllerUtmProfileArrayOutputWithContext(ctx context.Context) WirelessControllerUtmProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerUtmProfileArrayOutput)
}

func (i WirelessControllerUtmProfileArray) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerUtmProfile] {
	return pulumix.Output[[]*WirelessControllerUtmProfile]{
		OutputState: i.ToWirelessControllerUtmProfileArrayOutputWithContext(ctx).OutputState,
	}
}

// WirelessControllerUtmProfileMapInput is an input type that accepts WirelessControllerUtmProfileMap and WirelessControllerUtmProfileMapOutput values.
// You can construct a concrete instance of `WirelessControllerUtmProfileMapInput` via:
//
//	WirelessControllerUtmProfileMap{ "key": WirelessControllerUtmProfileArgs{...} }
type WirelessControllerUtmProfileMapInput interface {
	pulumi.Input

	ToWirelessControllerUtmProfileMapOutput() WirelessControllerUtmProfileMapOutput
	ToWirelessControllerUtmProfileMapOutputWithContext(context.Context) WirelessControllerUtmProfileMapOutput
}

type WirelessControllerUtmProfileMap map[string]WirelessControllerUtmProfileInput

func (WirelessControllerUtmProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerUtmProfile)(nil)).Elem()
}

func (i WirelessControllerUtmProfileMap) ToWirelessControllerUtmProfileMapOutput() WirelessControllerUtmProfileMapOutput {
	return i.ToWirelessControllerUtmProfileMapOutputWithContext(context.Background())
}

func (i WirelessControllerUtmProfileMap) ToWirelessControllerUtmProfileMapOutputWithContext(ctx context.Context) WirelessControllerUtmProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerUtmProfileMapOutput)
}

func (i WirelessControllerUtmProfileMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerUtmProfile] {
	return pulumix.Output[map[string]*WirelessControllerUtmProfile]{
		OutputState: i.ToWirelessControllerUtmProfileMapOutputWithContext(ctx).OutputState,
	}
}

type WirelessControllerUtmProfileOutput struct{ *pulumi.OutputState }

func (WirelessControllerUtmProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerUtmProfile)(nil)).Elem()
}

func (o WirelessControllerUtmProfileOutput) ToWirelessControllerUtmProfileOutput() WirelessControllerUtmProfileOutput {
	return o
}

func (o WirelessControllerUtmProfileOutput) ToWirelessControllerUtmProfileOutputWithContext(ctx context.Context) WirelessControllerUtmProfileOutput {
	return o
}

func (o WirelessControllerUtmProfileOutput) ToOutput(ctx context.Context) pulumix.Output[*WirelessControllerUtmProfile] {
	return pulumix.Output[*WirelessControllerUtmProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerUtmProfileOutput) AntivirusProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.AntivirusProfile }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) ApplicationList() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.ApplicationList }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) IpsSensor() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.IpsSensor }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) ScanBotnetConnections() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.ScanBotnetConnections }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) UtmLog() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.UtmLog }).(pulumi.StringOutput)
}

func (o WirelessControllerUtmProfileOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerUtmProfileOutput) WebfilterProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerUtmProfile) pulumi.StringOutput { return v.WebfilterProfile }).(pulumi.StringOutput)
}

type WirelessControllerUtmProfileArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerUtmProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerUtmProfile)(nil)).Elem()
}

func (o WirelessControllerUtmProfileArrayOutput) ToWirelessControllerUtmProfileArrayOutput() WirelessControllerUtmProfileArrayOutput {
	return o
}

func (o WirelessControllerUtmProfileArrayOutput) ToWirelessControllerUtmProfileArrayOutputWithContext(ctx context.Context) WirelessControllerUtmProfileArrayOutput {
	return o
}

func (o WirelessControllerUtmProfileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WirelessControllerUtmProfile] {
	return pulumix.Output[[]*WirelessControllerUtmProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerUtmProfileArrayOutput) Index(i pulumi.IntInput) WirelessControllerUtmProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerUtmProfile {
		return vs[0].([]*WirelessControllerUtmProfile)[vs[1].(int)]
	}).(WirelessControllerUtmProfileOutput)
}

type WirelessControllerUtmProfileMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerUtmProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerUtmProfile)(nil)).Elem()
}

func (o WirelessControllerUtmProfileMapOutput) ToWirelessControllerUtmProfileMapOutput() WirelessControllerUtmProfileMapOutput {
	return o
}

func (o WirelessControllerUtmProfileMapOutput) ToWirelessControllerUtmProfileMapOutputWithContext(ctx context.Context) WirelessControllerUtmProfileMapOutput {
	return o
}

func (o WirelessControllerUtmProfileMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WirelessControllerUtmProfile] {
	return pulumix.Output[map[string]*WirelessControllerUtmProfile]{
		OutputState: o.OutputState,
	}
}

func (o WirelessControllerUtmProfileMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerUtmProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerUtmProfile {
		return vs[0].(map[string]*WirelessControllerUtmProfile)[vs[1].(string)]
	}).(WirelessControllerUtmProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerUtmProfileInput)(nil)).Elem(), &WirelessControllerUtmProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerUtmProfileArrayInput)(nil)).Elem(), WirelessControllerUtmProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerUtmProfileMapInput)(nil)).Elem(), WirelessControllerUtmProfileMap{})
	pulumi.RegisterOutputType(WirelessControllerUtmProfileOutput{})
	pulumi.RegisterOutputType(WirelessControllerUtmProfileArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerUtmProfileMapOutput{})
}
