// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemCustomLanguage struct {
	pulumi.CustomResourceState

	Comments  pulumi.StringPtrOutput `pulumi:"comments"`
	Filename  pulumi.StringOutput    `pulumi:"filename"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemCustomLanguage registers a new resource with the given unique name, arguments, and options.
func NewSystemCustomLanguage(ctx *pulumi.Context,
	name string, args *SystemCustomLanguageArgs, opts ...pulumi.ResourceOption) (*SystemCustomLanguage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filename == nil {
		return nil, errors.New("invalid value for required argument 'Filename'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemCustomLanguage
	err := ctx.RegisterResource("fortios:index/systemCustomLanguage:SystemCustomLanguage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemCustomLanguage gets an existing SystemCustomLanguage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemCustomLanguage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemCustomLanguageState, opts ...pulumi.ResourceOption) (*SystemCustomLanguage, error) {
	var resource SystemCustomLanguage
	err := ctx.ReadResource("fortios:index/systemCustomLanguage:SystemCustomLanguage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemCustomLanguage resources.
type systemCustomLanguageState struct {
	Comments  *string `pulumi:"comments"`
	Filename  *string `pulumi:"filename"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemCustomLanguageState struct {
	Comments  pulumi.StringPtrInput
	Filename  pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemCustomLanguageState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemCustomLanguageState)(nil)).Elem()
}

type systemCustomLanguageArgs struct {
	Comments  *string `pulumi:"comments"`
	Filename  string  `pulumi:"filename"`
	Name      *string `pulumi:"name"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemCustomLanguage resource.
type SystemCustomLanguageArgs struct {
	Comments  pulumi.StringPtrInput
	Filename  pulumi.StringInput
	Name      pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemCustomLanguageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemCustomLanguageArgs)(nil)).Elem()
}

type SystemCustomLanguageInput interface {
	pulumi.Input

	ToSystemCustomLanguageOutput() SystemCustomLanguageOutput
	ToSystemCustomLanguageOutputWithContext(ctx context.Context) SystemCustomLanguageOutput
}

func (*SystemCustomLanguage) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCustomLanguage)(nil)).Elem()
}

func (i *SystemCustomLanguage) ToSystemCustomLanguageOutput() SystemCustomLanguageOutput {
	return i.ToSystemCustomLanguageOutputWithContext(context.Background())
}

func (i *SystemCustomLanguage) ToSystemCustomLanguageOutputWithContext(ctx context.Context) SystemCustomLanguageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCustomLanguageOutput)
}

// SystemCustomLanguageArrayInput is an input type that accepts SystemCustomLanguageArray and SystemCustomLanguageArrayOutput values.
// You can construct a concrete instance of `SystemCustomLanguageArrayInput` via:
//
//	SystemCustomLanguageArray{ SystemCustomLanguageArgs{...} }
type SystemCustomLanguageArrayInput interface {
	pulumi.Input

	ToSystemCustomLanguageArrayOutput() SystemCustomLanguageArrayOutput
	ToSystemCustomLanguageArrayOutputWithContext(context.Context) SystemCustomLanguageArrayOutput
}

type SystemCustomLanguageArray []SystemCustomLanguageInput

func (SystemCustomLanguageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemCustomLanguage)(nil)).Elem()
}

func (i SystemCustomLanguageArray) ToSystemCustomLanguageArrayOutput() SystemCustomLanguageArrayOutput {
	return i.ToSystemCustomLanguageArrayOutputWithContext(context.Background())
}

func (i SystemCustomLanguageArray) ToSystemCustomLanguageArrayOutputWithContext(ctx context.Context) SystemCustomLanguageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCustomLanguageArrayOutput)
}

// SystemCustomLanguageMapInput is an input type that accepts SystemCustomLanguageMap and SystemCustomLanguageMapOutput values.
// You can construct a concrete instance of `SystemCustomLanguageMapInput` via:
//
//	SystemCustomLanguageMap{ "key": SystemCustomLanguageArgs{...} }
type SystemCustomLanguageMapInput interface {
	pulumi.Input

	ToSystemCustomLanguageMapOutput() SystemCustomLanguageMapOutput
	ToSystemCustomLanguageMapOutputWithContext(context.Context) SystemCustomLanguageMapOutput
}

type SystemCustomLanguageMap map[string]SystemCustomLanguageInput

func (SystemCustomLanguageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemCustomLanguage)(nil)).Elem()
}

func (i SystemCustomLanguageMap) ToSystemCustomLanguageMapOutput() SystemCustomLanguageMapOutput {
	return i.ToSystemCustomLanguageMapOutputWithContext(context.Background())
}

func (i SystemCustomLanguageMap) ToSystemCustomLanguageMapOutputWithContext(ctx context.Context) SystemCustomLanguageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCustomLanguageMapOutput)
}

type SystemCustomLanguageOutput struct{ *pulumi.OutputState }

func (SystemCustomLanguageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCustomLanguage)(nil)).Elem()
}

func (o SystemCustomLanguageOutput) ToSystemCustomLanguageOutput() SystemCustomLanguageOutput {
	return o
}

func (o SystemCustomLanguageOutput) ToSystemCustomLanguageOutputWithContext(ctx context.Context) SystemCustomLanguageOutput {
	return o
}

func (o SystemCustomLanguageOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCustomLanguage) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o SystemCustomLanguageOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemCustomLanguage) pulumi.StringOutput { return v.Filename }).(pulumi.StringOutput)
}

func (o SystemCustomLanguageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemCustomLanguage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemCustomLanguageOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCustomLanguage) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemCustomLanguageArrayOutput struct{ *pulumi.OutputState }

func (SystemCustomLanguageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemCustomLanguage)(nil)).Elem()
}

func (o SystemCustomLanguageArrayOutput) ToSystemCustomLanguageArrayOutput() SystemCustomLanguageArrayOutput {
	return o
}

func (o SystemCustomLanguageArrayOutput) ToSystemCustomLanguageArrayOutputWithContext(ctx context.Context) SystemCustomLanguageArrayOutput {
	return o
}

func (o SystemCustomLanguageArrayOutput) Index(i pulumi.IntInput) SystemCustomLanguageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemCustomLanguage {
		return vs[0].([]*SystemCustomLanguage)[vs[1].(int)]
	}).(SystemCustomLanguageOutput)
}

type SystemCustomLanguageMapOutput struct{ *pulumi.OutputState }

func (SystemCustomLanguageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemCustomLanguage)(nil)).Elem()
}

func (o SystemCustomLanguageMapOutput) ToSystemCustomLanguageMapOutput() SystemCustomLanguageMapOutput {
	return o
}

func (o SystemCustomLanguageMapOutput) ToSystemCustomLanguageMapOutputWithContext(ctx context.Context) SystemCustomLanguageMapOutput {
	return o
}

func (o SystemCustomLanguageMapOutput) MapIndex(k pulumi.StringInput) SystemCustomLanguageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemCustomLanguage {
		return vs[0].(map[string]*SystemCustomLanguage)[vs[1].(string)]
	}).(SystemCustomLanguageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCustomLanguageInput)(nil)).Elem(), &SystemCustomLanguage{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCustomLanguageArrayInput)(nil)).Elem(), SystemCustomLanguageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemCustomLanguageMapInput)(nil)).Elem(), SystemCustomLanguageMap{})
	pulumi.RegisterOutputType(SystemCustomLanguageOutput{})
	pulumi.RegisterOutputType(SystemCustomLanguageArrayOutput{})
	pulumi.RegisterOutputType(SystemCustomLanguageMapOutput{})
}
