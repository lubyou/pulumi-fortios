// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemEvpn struct {
	pulumi.CustomResourceState

	ArpSuppression      pulumi.StringOutput           `pulumi:"arpSuppression"`
	DynamicSortSubtable pulumi.StringPtrOutput        `pulumi:"dynamicSortSubtable"`
	ExportRts           SystemEvpnExportRtArrayOutput `pulumi:"exportRts"`
	Fosid               pulumi.IntOutput              `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput        `pulumi:"getAllTables"`
	ImportRts           SystemEvpnImportRtArrayOutput `pulumi:"importRts"`
	IpLocalLearning     pulumi.StringOutput           `pulumi:"ipLocalLearning"`
	Rd                  pulumi.StringOutput           `pulumi:"rd"`
	Vdomparam           pulumi.StringPtrOutput        `pulumi:"vdomparam"`
}

// NewSystemEvpn registers a new resource with the given unique name, arguments, and options.
func NewSystemEvpn(ctx *pulumi.Context,
	name string, args *SystemEvpnArgs, opts ...pulumi.ResourceOption) (*SystemEvpn, error) {
	if args == nil {
		args = &SystemEvpnArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemEvpn
	err := ctx.RegisterResource("fortios:index/systemEvpn:SystemEvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemEvpn gets an existing SystemEvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemEvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemEvpnState, opts ...pulumi.ResourceOption) (*SystemEvpn, error) {
	var resource SystemEvpn
	err := ctx.ReadResource("fortios:index/systemEvpn:SystemEvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemEvpn resources.
type systemEvpnState struct {
	ArpSuppression      *string              `pulumi:"arpSuppression"`
	DynamicSortSubtable *string              `pulumi:"dynamicSortSubtable"`
	ExportRts           []SystemEvpnExportRt `pulumi:"exportRts"`
	Fosid               *int                 `pulumi:"fosid"`
	GetAllTables        *string              `pulumi:"getAllTables"`
	ImportRts           []SystemEvpnImportRt `pulumi:"importRts"`
	IpLocalLearning     *string              `pulumi:"ipLocalLearning"`
	Rd                  *string              `pulumi:"rd"`
	Vdomparam           *string              `pulumi:"vdomparam"`
}

type SystemEvpnState struct {
	ArpSuppression      pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	ExportRts           SystemEvpnExportRtArrayInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	ImportRts           SystemEvpnImportRtArrayInput
	IpLocalLearning     pulumi.StringPtrInput
	Rd                  pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemEvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemEvpnState)(nil)).Elem()
}

type systemEvpnArgs struct {
	ArpSuppression      *string              `pulumi:"arpSuppression"`
	DynamicSortSubtable *string              `pulumi:"dynamicSortSubtable"`
	ExportRts           []SystemEvpnExportRt `pulumi:"exportRts"`
	Fosid               *int                 `pulumi:"fosid"`
	GetAllTables        *string              `pulumi:"getAllTables"`
	ImportRts           []SystemEvpnImportRt `pulumi:"importRts"`
	IpLocalLearning     *string              `pulumi:"ipLocalLearning"`
	Rd                  *string              `pulumi:"rd"`
	Vdomparam           *string              `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemEvpn resource.
type SystemEvpnArgs struct {
	ArpSuppression      pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	ExportRts           SystemEvpnExportRtArrayInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	ImportRts           SystemEvpnImportRtArrayInput
	IpLocalLearning     pulumi.StringPtrInput
	Rd                  pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SystemEvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemEvpnArgs)(nil)).Elem()
}

type SystemEvpnInput interface {
	pulumi.Input

	ToSystemEvpnOutput() SystemEvpnOutput
	ToSystemEvpnOutputWithContext(ctx context.Context) SystemEvpnOutput
}

func (*SystemEvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemEvpn)(nil)).Elem()
}

func (i *SystemEvpn) ToSystemEvpnOutput() SystemEvpnOutput {
	return i.ToSystemEvpnOutputWithContext(context.Background())
}

func (i *SystemEvpn) ToSystemEvpnOutputWithContext(ctx context.Context) SystemEvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnOutput)
}

// SystemEvpnArrayInput is an input type that accepts SystemEvpnArray and SystemEvpnArrayOutput values.
// You can construct a concrete instance of `SystemEvpnArrayInput` via:
//
//	SystemEvpnArray{ SystemEvpnArgs{...} }
type SystemEvpnArrayInput interface {
	pulumi.Input

	ToSystemEvpnArrayOutput() SystemEvpnArrayOutput
	ToSystemEvpnArrayOutputWithContext(context.Context) SystemEvpnArrayOutput
}

type SystemEvpnArray []SystemEvpnInput

func (SystemEvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemEvpn)(nil)).Elem()
}

func (i SystemEvpnArray) ToSystemEvpnArrayOutput() SystemEvpnArrayOutput {
	return i.ToSystemEvpnArrayOutputWithContext(context.Background())
}

func (i SystemEvpnArray) ToSystemEvpnArrayOutputWithContext(ctx context.Context) SystemEvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnArrayOutput)
}

// SystemEvpnMapInput is an input type that accepts SystemEvpnMap and SystemEvpnMapOutput values.
// You can construct a concrete instance of `SystemEvpnMapInput` via:
//
//	SystemEvpnMap{ "key": SystemEvpnArgs{...} }
type SystemEvpnMapInput interface {
	pulumi.Input

	ToSystemEvpnMapOutput() SystemEvpnMapOutput
	ToSystemEvpnMapOutputWithContext(context.Context) SystemEvpnMapOutput
}

type SystemEvpnMap map[string]SystemEvpnInput

func (SystemEvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemEvpn)(nil)).Elem()
}

func (i SystemEvpnMap) ToSystemEvpnMapOutput() SystemEvpnMapOutput {
	return i.ToSystemEvpnMapOutputWithContext(context.Background())
}

func (i SystemEvpnMap) ToSystemEvpnMapOutputWithContext(ctx context.Context) SystemEvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemEvpnMapOutput)
}

type SystemEvpnOutput struct{ *pulumi.OutputState }

func (SystemEvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemEvpn)(nil)).Elem()
}

func (o SystemEvpnOutput) ToSystemEvpnOutput() SystemEvpnOutput {
	return o
}

func (o SystemEvpnOutput) ToSystemEvpnOutputWithContext(ctx context.Context) SystemEvpnOutput {
	return o
}

func (o SystemEvpnOutput) ArpSuppression() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringOutput { return v.ArpSuppression }).(pulumi.StringOutput)
}

func (o SystemEvpnOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemEvpnOutput) ExportRts() SystemEvpnExportRtArrayOutput {
	return o.ApplyT(func(v *SystemEvpn) SystemEvpnExportRtArrayOutput { return v.ExportRts }).(SystemEvpnExportRtArrayOutput)
}

func (o SystemEvpnOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SystemEvpnOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemEvpnOutput) ImportRts() SystemEvpnImportRtArrayOutput {
	return o.ApplyT(func(v *SystemEvpn) SystemEvpnImportRtArrayOutput { return v.ImportRts }).(SystemEvpnImportRtArrayOutput)
}

func (o SystemEvpnOutput) IpLocalLearning() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringOutput { return v.IpLocalLearning }).(pulumi.StringOutput)
}

func (o SystemEvpnOutput) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringOutput { return v.Rd }).(pulumi.StringOutput)
}

func (o SystemEvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemEvpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemEvpnArrayOutput struct{ *pulumi.OutputState }

func (SystemEvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemEvpn)(nil)).Elem()
}

func (o SystemEvpnArrayOutput) ToSystemEvpnArrayOutput() SystemEvpnArrayOutput {
	return o
}

func (o SystemEvpnArrayOutput) ToSystemEvpnArrayOutputWithContext(ctx context.Context) SystemEvpnArrayOutput {
	return o
}

func (o SystemEvpnArrayOutput) Index(i pulumi.IntInput) SystemEvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemEvpn {
		return vs[0].([]*SystemEvpn)[vs[1].(int)]
	}).(SystemEvpnOutput)
}

type SystemEvpnMapOutput struct{ *pulumi.OutputState }

func (SystemEvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemEvpn)(nil)).Elem()
}

func (o SystemEvpnMapOutput) ToSystemEvpnMapOutput() SystemEvpnMapOutput {
	return o
}

func (o SystemEvpnMapOutput) ToSystemEvpnMapOutputWithContext(ctx context.Context) SystemEvpnMapOutput {
	return o
}

func (o SystemEvpnMapOutput) MapIndex(k pulumi.StringInput) SystemEvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemEvpn {
		return vs[0].(map[string]*SystemEvpn)[vs[1].(string)]
	}).(SystemEvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnInput)(nil)).Elem(), &SystemEvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnArrayInput)(nil)).Elem(), SystemEvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemEvpnMapInput)(nil)).Elem(), SystemEvpnMap{})
	pulumi.RegisterOutputType(SystemEvpnOutput{})
	pulumi.RegisterOutputType(SystemEvpnArrayOutput{})
	pulumi.RegisterOutputType(SystemEvpnMapOutput{})
}
