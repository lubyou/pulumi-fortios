// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure BGP.
//
// > The provider supports the definition of Neighbor in Router Bgp `RouterBgp`, and also allows the definition of separate Neighbor resources `RouterbgpNeighbor`, but do not use a `RouterBgp` with in-line Neighbor in conjunction with any `RouterbgpNeighbor` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Network in Router Bgp `RouterBgp`, and also allows the definition of separate Network resources `RouterbgpNetwork`, but do not use a `RouterBgp` with in-line Network in conjunction with any `RouterbgpNetwork` resources, otherwise conflicts and overwrite will occur.
//
// > The provider supports the definition of Network6 in Router Bgp `RouterBgp`, and also allows the definition of separate Network6 resources `RouterbgpNetwork6`, but do not use a `RouterBgp` with in-line Network6 in conjunction with any `RouterbgpNetwork6` resources, otherwise conflicts and overwrite will occur.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/lubyou/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewRouterBgp(ctx, "trname", &fortios.RouterBgpArgs{
// 			AdditionalPathSelect:            pulumi.Int(2),
// 			AdditionalPathSelect6:           pulumi.Int(2),
// 			AlwaysCompareMed:                pulumi.String("disable"),
// 			As:                              pulumi.Int(0),
// 			ClientToClientReflection:        pulumi.String("enable"),
// 			ClusterId:                       pulumi.String("0.0.0.0"),
// 			Dampening:                       pulumi.String("disable"),
// 			DampeningMaxSuppressTime:        pulumi.Int(60),
// 			DampeningReachabilityHalfLife:   pulumi.Int(15),
// 			DampeningReuse:                  pulumi.Int(750),
// 			DampeningSuppress:               pulumi.Int(2000),
// 			DampeningUnreachabilityHalfLife: pulumi.Int(15),
// 			DefaultLocalPreference:          pulumi.Int(100),
// 			DeterministicMed:                pulumi.String("disable"),
// 			DistanceExternal:                pulumi.Int(20),
// 			DistanceInternal:                pulumi.Int(200),
// 			DistanceLocal:                   pulumi.Int(200),
// 			GracefulRestartTime:             pulumi.Int(120),
// 			GracefulStalepathTime:           pulumi.Int(360),
// 			GracefulUpdateDelay:             pulumi.Int(120),
// 			HoldtimeTimer:                   pulumi.Int(180),
// 			IbgpMultipath:                   pulumi.String("disable"),
// 			IgnoreOptionalCapability:        pulumi.String("enable"),
// 			KeepaliveTimer:                  pulumi.Int(60),
// 			LogNeighbourChanges:             pulumi.String("enable"),
// 			NetworkImportCheck:              pulumi.String("enable"),
// 			Redistributes: RouterBgpRedistributeArray{
// 				&RouterBgpRedistributeArgs{
// 					Name:   pulumi.String("connected"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistributeArgs{
// 					Name:   pulumi.String("rip"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistributeArgs{
// 					Name:   pulumi.String("ospf"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistributeArgs{
// 					Name:   pulumi.String("static"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistributeArgs{
// 					Name:   pulumi.String("isis"),
// 					Status: pulumi.String("disable"),
// 				},
// 			},
// 			Redistribute6s: RouterBgpRedistribute6Array{
// 				&RouterBgpRedistribute6Args{
// 					Name:   pulumi.String("connected"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistribute6Args{
// 					Name:   pulumi.String("rip"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistribute6Args{
// 					Name:   pulumi.String("ospf"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistribute6Args{
// 					Name:   pulumi.String("static"),
// 					Status: pulumi.String("disable"),
// 				},
// 				&RouterBgpRedistribute6Args{
// 					Name:   pulumi.String("isis"),
// 					Status: pulumi.String("disable"),
// 				},
// 			},
// 			ScanTime:        pulumi.Int(60),
// 			Synchronization: pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Router Bgp can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/routerBgp:RouterBgp labelname RouterBgp
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/routerBgp:RouterBgp labelname RouterBgp
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type RouterBgp struct {
	pulumi.CustomResourceState

	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringOutput `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringOutput `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntOutput `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntOutput `pulumi:"additionalPathSelect6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances RouterBgpAdminDistanceArrayOutput `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s RouterBgpAggregateAddress6ArrayOutput `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterBgpAggregateAddressArrayOutput `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringOutput `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntOutput `pulumi:"as"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringOutput `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringOutput `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringOutput `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringOutput `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringOutput `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringOutput `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntOutput `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers RouterBgpConfederationPeerArrayOutput `pulumi:"confederationPeers"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringOutput `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntOutput `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntOutput `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntOutput `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringOutput `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntOutput `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntOutput `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference pulumi.IntOutput `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringOutput `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntOutput `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntOutput `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntOutput `pulumi:"distanceLocal"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringOutput `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringOutput `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringOutput `pulumi:"fastExternalFailover"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringOutput `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringOutput `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntOutput `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntOutput `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntOutput `pulumi:"gracefulUpdateDelay"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntOutput `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringOutput `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringOutput `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntOutput `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringOutput `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringOutput `pulumi:"multipathRecursiveDistance"`
	// Neighbor group name.
	NeighborGroups RouterBgpNeighborGroupArrayOutput `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s RouterBgpNeighborRange6ArrayOutput `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges RouterBgpNeighborRangeArrayOutput `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors RouterBgpNeighborTypeArrayOutput `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s RouterBgpNetwork6TypeArrayOutput `pulumi:"network6s"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck pulumi.StringOutput `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks RouterBgpNetworkTypeArrayOutput `pulumi:"networks"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringOutput `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s RouterBgpRedistribute6ArrayOutput `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes RouterBgpRedistributeArrayOutput `pulumi:"redistributes"`
	// Router ID.
	RouterId pulumi.StringOutput `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntOutput `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringOutput `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringOutput `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s RouterBgpVrfLeak6ArrayOutput `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks RouterBgpVrfLeakArrayOutput `pulumi:"vrfLeaks"`
}

// NewRouterBgp registers a new resource with the given unique name, arguments, and options.
func NewRouterBgp(ctx *pulumi.Context,
	name string, args *RouterBgpArgs, opts ...pulumi.ResourceOption) (*RouterBgp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.As == nil {
		return nil, errors.New("invalid value for required argument 'As'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RouterBgp
	err := ctx.RegisterResource("fortios:index/routerBgp:RouterBgp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterBgp gets an existing RouterBgp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterBgp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterBgpState, opts ...pulumi.ResourceOption) (*RouterBgp, error) {
	var resource RouterBgp
	err := ctx.ReadResource("fortios:index/routerBgp:RouterBgp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterBgp resources.
type routerBgpState struct {
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect *int `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 *int `pulumi:"additionalPathSelect6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances []RouterBgpAdminDistance `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s []RouterBgpAggregateAddress6 `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RouterBgpAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed *string `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As *int `pulumi:"as"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore *string `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath *string `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid *string `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed *string `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst *string `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection *string `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier *int `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers []RouterBgpConfederationPeer `pulumi:"confederationPeers"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening *string `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime *int `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife *int `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse *int `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap *string `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress *int `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife *int `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference *int `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed *string `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal *int `pulumi:"distanceLocal"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath *string `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs *string `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover *string `pulumi:"fastExternalFailover"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer *string `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart *string `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime *int `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime *int `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay *int `pulumi:"gracefulUpdateDelay"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath *string `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability *string `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer *int `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance *string `pulumi:"multipathRecursiveDistance"`
	// Neighbor group name.
	NeighborGroups []RouterBgpNeighborGroup `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s []RouterBgpNeighborRange6 `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges []RouterBgpNeighborRange `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors []RouterBgpNeighborType `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s []RouterBgpNetwork6Type `pulumi:"network6s"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks []RouterBgpNetworkType `pulumi:"networks"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop *string `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s []RouterBgpRedistribute6 `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes []RouterBgpRedistribute `pulumi:"redistributes"`
	// Router ID.
	RouterId *string `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime *int `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization *string `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode *string `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s []RouterBgpVrfLeak6 `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks []RouterBgpVrfLeak `pulumi:"vrfLeaks"`
}

type RouterBgpState struct {
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntPtrInput
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntPtrInput
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances RouterBgpAdminDistanceArrayInput
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s RouterBgpAggregateAddress6ArrayInput
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterBgpAggregateAddressArrayInput
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringPtrInput
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntPtrInput
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringPtrInput
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringPtrInput
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringPtrInput
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringPtrInput
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringPtrInput
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringPtrInput
	// Route reflector cluster ID.
	ClusterId pulumi.StringPtrInput
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntPtrInput
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers RouterBgpConfederationPeerArrayInput
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringPtrInput
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntPtrInput
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntPtrInput
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntPtrInput
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringPtrInput
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntPtrInput
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntPtrInput
	// Default local preference.
	DefaultLocalPreference pulumi.IntPtrInput
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringPtrInput
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntPtrInput
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntPtrInput
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringPtrInput
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringPtrInput
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringPtrInput
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringPtrInput
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringPtrInput
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntPtrInput
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntPtrInput
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntPtrInput
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringPtrInput
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringPtrInput
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntPtrInput
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringPtrInput
	// Neighbor group name.
	NeighborGroups RouterBgpNeighborGroupArrayInput
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s RouterBgpNeighborRange6ArrayInput
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges RouterBgpNeighborRangeArrayInput
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors RouterBgpNeighborTypeArrayInput
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s RouterBgpNetwork6TypeArrayInput
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput
	// BGP network table. The structure of `network` block is documented below.
	Networks RouterBgpNetworkTypeArrayInput
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringPtrInput
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s RouterBgpRedistribute6ArrayInput
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes RouterBgpRedistributeArrayInput
	// Router ID.
	RouterId pulumi.StringPtrInput
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntPtrInput
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringPtrInput
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s RouterBgpVrfLeak6ArrayInput
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks RouterBgpVrfLeakArrayInput
}

func (RouterBgpState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerBgpState)(nil)).Elem()
}

type routerBgpArgs struct {
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath *string `pulumi:"additionalPath"`
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 *string `pulumi:"additionalPath6"`
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect *int `pulumi:"additionalPathSelect"`
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 *int `pulumi:"additionalPathSelect6"`
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances []RouterBgpAdminDistance `pulumi:"adminDistances"`
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s []RouterBgpAggregateAddress6 `pulumi:"aggregateAddress6s"`
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses []RouterBgpAggregateAddress `pulumi:"aggregateAddresses"`
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed *string `pulumi:"alwaysCompareMed"`
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As int `pulumi:"as"`
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore *string `pulumi:"bestpathAsPathIgnore"`
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath *string `pulumi:"bestpathCmpConfedAspath"`
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid *string `pulumi:"bestpathCmpRouterid"`
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed *string `pulumi:"bestpathMedConfed"`
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst *string `pulumi:"bestpathMedMissingAsWorst"`
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection *string `pulumi:"clientToClientReflection"`
	// Route reflector cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Confederation identifier.
	ConfederationIdentifier *int `pulumi:"confederationIdentifier"`
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers []RouterBgpConfederationPeer `pulumi:"confederationPeers"`
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening *string `pulumi:"dampening"`
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime *int `pulumi:"dampeningMaxSuppressTime"`
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife *int `pulumi:"dampeningReachabilityHalfLife"`
	// Threshold to reuse routes.
	DampeningReuse *int `pulumi:"dampeningReuse"`
	// Criteria for dampening.
	DampeningRouteMap *string `pulumi:"dampeningRouteMap"`
	// Threshold to suppress routes.
	DampeningSuppress *int `pulumi:"dampeningSuppress"`
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife *int `pulumi:"dampeningUnreachabilityHalfLife"`
	// Default local preference.
	DefaultLocalPreference *int `pulumi:"defaultLocalPreference"`
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed *string `pulumi:"deterministicMed"`
	// Distance for routes external to the AS.
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Distance for routes internal to the AS.
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Distance for routes local to the AS.
	DistanceLocal *int `pulumi:"distanceLocal"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath *string `pulumi:"ebgpMultipath"`
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs *string `pulumi:"enforceFirstAs"`
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover *string `pulumi:"fastExternalFailover"`
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer *string `pulumi:"gracefulEndOnTimer"`
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart *string `pulumi:"gracefulRestart"`
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime *int `pulumi:"gracefulRestartTime"`
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime *int `pulumi:"gracefulStalepathTime"`
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay *int `pulumi:"gracefulUpdateDelay"`
	// Interval (sec) before peer considered dead.
	HoldtimeTimer *int `pulumi:"holdtimeTimer"`
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath *string `pulumi:"ibgpMultipath"`
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability *string `pulumi:"ignoreOptionalCapability"`
	// Frequency to send keep alive requests.
	KeepaliveTimer *int `pulumi:"keepaliveTimer"`
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges *string `pulumi:"logNeighbourChanges"`
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance *string `pulumi:"multipathRecursiveDistance"`
	// Neighbor group name.
	NeighborGroups []RouterBgpNeighborGroup `pulumi:"neighborGroups"`
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s []RouterBgpNeighborRange6 `pulumi:"neighborRange6s"`
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges []RouterBgpNeighborRange `pulumi:"neighborRanges"`
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors []RouterBgpNeighborType `pulumi:"neighbors"`
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s []RouterBgpNetwork6Type `pulumi:"network6s"`
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck *string `pulumi:"networkImportCheck"`
	// BGP network table. The structure of `network` block is documented below.
	Networks []RouterBgpNetworkType `pulumi:"networks"`
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop *string `pulumi:"recursiveNextHop"`
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s []RouterBgpRedistribute6 `pulumi:"redistribute6s"`
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes []RouterBgpRedistribute `pulumi:"redistributes"`
	// Router ID.
	RouterId *string `pulumi:"routerId"`
	// Background scanner interval (sec), 0 to disable it.
	ScanTime *int `pulumi:"scanTime"`
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization *string `pulumi:"synchronization"`
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode *string `pulumi:"tagResolveMode"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s []RouterBgpVrfLeak6 `pulumi:"vrfLeak6s"`
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks []RouterBgpVrfLeak `pulumi:"vrfLeaks"`
}

// The set of arguments for constructing a RouterBgp resource.
type RouterBgpArgs struct {
	// Enable/disable IPv4 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath pulumi.StringPtrInput
	// Enable/disable IPv6 additional-path capability. Valid values: `send`, `receive`, `both`, `disable`.
	AdditionalPath6 pulumi.StringPtrInput
	// Number of additional paths to be selected for each IPv4 NLRI.
	AdditionalPathSelect pulumi.IntPtrInput
	// Number of additional paths to be selected for each IPv6 NLRI.
	AdditionalPathSelect6 pulumi.IntPtrInput
	// Administrative distance modifications. The structure of `adminDistance` block is documented below.
	AdminDistances RouterBgpAdminDistanceArrayInput
	// BGP IPv6 aggregate address table. The structure of `aggregateAddress6` block is documented below.
	AggregateAddress6s RouterBgpAggregateAddress6ArrayInput
	// BGP aggregate address table. The structure of `aggregateAddress` block is documented below.
	AggregateAddresses RouterBgpAggregateAddressArrayInput
	// Enable/disable always compare MED. Valid values: `enable`, `disable`.
	AlwaysCompareMed pulumi.StringPtrInput
	// Router AS number, valid from 1 to 4294967295, 0 to disable BGP.
	As pulumi.IntInput
	// Enable/disable ignore AS path. Valid values: `enable`, `disable`.
	BestpathAsPathIgnore pulumi.StringPtrInput
	// Enable/disable compare federation AS path length. Valid values: `enable`, `disable`.
	BestpathCmpConfedAspath pulumi.StringPtrInput
	// Enable/disable compare router ID for identical EBGP paths. Valid values: `enable`, `disable`.
	BestpathCmpRouterid pulumi.StringPtrInput
	// Enable/disable compare MED among confederation paths. Valid values: `enable`, `disable`.
	BestpathMedConfed pulumi.StringPtrInput
	// Enable/disable treat missing MED as least preferred. Valid values: `enable`, `disable`.
	BestpathMedMissingAsWorst pulumi.StringPtrInput
	// Enable/disable client-to-client route reflection. Valid values: `enable`, `disable`.
	ClientToClientReflection pulumi.StringPtrInput
	// Route reflector cluster ID.
	ClusterId pulumi.StringPtrInput
	// Confederation identifier.
	ConfederationIdentifier pulumi.IntPtrInput
	// Confederation peers. The structure of `confederationPeers` block is documented below.
	ConfederationPeers RouterBgpConfederationPeerArrayInput
	// Enable/disable route-flap dampening. Valid values: `enable`, `disable`.
	Dampening pulumi.StringPtrInput
	// Maximum minutes a route can be suppressed.
	DampeningMaxSuppressTime pulumi.IntPtrInput
	// Reachability half-life time for penalty (min).
	DampeningReachabilityHalfLife pulumi.IntPtrInput
	// Threshold to reuse routes.
	DampeningReuse pulumi.IntPtrInput
	// Criteria for dampening.
	DampeningRouteMap pulumi.StringPtrInput
	// Threshold to suppress routes.
	DampeningSuppress pulumi.IntPtrInput
	// Unreachability half-life time for penalty (min).
	DampeningUnreachabilityHalfLife pulumi.IntPtrInput
	// Default local preference.
	DefaultLocalPreference pulumi.IntPtrInput
	// Enable/disable enforce deterministic comparison of MED. Valid values: `enable`, `disable`.
	DeterministicMed pulumi.StringPtrInput
	// Distance for routes external to the AS.
	DistanceExternal pulumi.IntPtrInput
	// Distance for routes internal to the AS.
	DistanceInternal pulumi.IntPtrInput
	// Distance for routes local to the AS.
	DistanceLocal pulumi.IntPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable EBGP multi-path. Valid values: `enable`, `disable`.
	EbgpMultipath pulumi.StringPtrInput
	// Enable/disable enforce first AS for EBGP routes. Valid values: `enable`, `disable`.
	EnforceFirstAs pulumi.StringPtrInput
	// Enable/disable reset peer BGP session if link goes down. Valid values: `enable`, `disable`.
	FastExternalFailover pulumi.StringPtrInput
	// Enable/disable to exit graceful restart on timer only. Valid values: `enable`, `disable`.
	GracefulEndOnTimer pulumi.StringPtrInput
	// Enable/disable BGP graceful restart capabilities. Valid values: `enable`, `disable`.
	GracefulRestart pulumi.StringPtrInput
	// Time needed for neighbors to restart (sec).
	GracefulRestartTime pulumi.IntPtrInput
	// Time to hold stale paths of restarting neighbor (sec).
	GracefulStalepathTime pulumi.IntPtrInput
	// Route advertisement/selection delay after restart (sec).
	GracefulUpdateDelay pulumi.IntPtrInput
	// Interval (sec) before peer considered dead.
	HoldtimeTimer pulumi.IntPtrInput
	// Enable/disable IBGP multi-path. Valid values: `enable`, `disable`.
	IbgpMultipath pulumi.StringPtrInput
	// Don't send unknown optional capability notification message Valid values: `enable`, `disable`.
	IgnoreOptionalCapability pulumi.StringPtrInput
	// Frequency to send keep alive requests.
	KeepaliveTimer pulumi.IntPtrInput
	// Enable logging of BGP neighbour's changes Valid values: `enable`, `disable`.
	LogNeighbourChanges pulumi.StringPtrInput
	// Enable/disable use of recursive distance to select multipath. Valid values: `enable`, `disable`.
	MultipathRecursiveDistance pulumi.StringPtrInput
	// Neighbor group name.
	NeighborGroups RouterBgpNeighborGroupArrayInput
	// BGP IPv6 neighbor range table. The structure of `neighborRange6` block is documented below.
	NeighborRange6s RouterBgpNeighborRange6ArrayInput
	// BGP neighbor range table. The structure of `neighborRange` block is documented below.
	NeighborRanges RouterBgpNeighborRangeArrayInput
	// BGP neighbor table. The structure of `neighbor` block is documented below.
	Neighbors RouterBgpNeighborTypeArrayInput
	// BGP IPv6 network table. The structure of `network6` block is documented below.
	Network6s RouterBgpNetwork6TypeArrayInput
	// Configure insurance of BGP network route existence in IGP. Valid values: `global`, `enable`, `disable`.
	NetworkImportCheck pulumi.StringPtrInput
	// BGP network table. The structure of `network` block is documented below.
	Networks RouterBgpNetworkTypeArrayInput
	// Enable/disable recursive resolution of next-hop using BGP route. Valid values: `enable`, `disable`.
	RecursiveNextHop pulumi.StringPtrInput
	// BGP IPv6 redistribute table. The structure of `redistribute6` block is documented below.
	Redistribute6s RouterBgpRedistribute6ArrayInput
	// BGP IPv4 redistribute table. The structure of `redistribute` block is documented below.
	Redistributes RouterBgpRedistributeArrayInput
	// Router ID.
	RouterId pulumi.StringPtrInput
	// Background scanner interval (sec), 0 to disable it.
	ScanTime pulumi.IntPtrInput
	// Enable/disable only advertise routes from iBGP if routes present in an IGP. Valid values: `enable`, `disable`.
	Synchronization pulumi.StringPtrInput
	// Configure tag-match mode. Resolves BGP routes with other routes containing the same tag. Valid values: `disable`, `preferred`, `merge`.
	TagResolveMode pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// BGP IPv6 VRF leaking table. The structure of `vrfLeak6` block is documented below.
	VrfLeak6s RouterBgpVrfLeak6ArrayInput
	// BGP VRF leaking table. The structure of `vrfLeak` block is documented below.
	VrfLeaks RouterBgpVrfLeakArrayInput
}

func (RouterBgpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerBgpArgs)(nil)).Elem()
}

type RouterBgpInput interface {
	pulumi.Input

	ToRouterBgpOutput() RouterBgpOutput
	ToRouterBgpOutputWithContext(ctx context.Context) RouterBgpOutput
}

func (*RouterBgp) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgp)(nil)).Elem()
}

func (i *RouterBgp) ToRouterBgpOutput() RouterBgpOutput {
	return i.ToRouterBgpOutputWithContext(context.Background())
}

func (i *RouterBgp) ToRouterBgpOutputWithContext(ctx context.Context) RouterBgpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpOutput)
}

// RouterBgpArrayInput is an input type that accepts RouterBgpArray and RouterBgpArrayOutput values.
// You can construct a concrete instance of `RouterBgpArrayInput` via:
//
//          RouterBgpArray{ RouterBgpArgs{...} }
type RouterBgpArrayInput interface {
	pulumi.Input

	ToRouterBgpArrayOutput() RouterBgpArrayOutput
	ToRouterBgpArrayOutputWithContext(context.Context) RouterBgpArrayOutput
}

type RouterBgpArray []RouterBgpInput

func (RouterBgpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterBgp)(nil)).Elem()
}

func (i RouterBgpArray) ToRouterBgpArrayOutput() RouterBgpArrayOutput {
	return i.ToRouterBgpArrayOutputWithContext(context.Background())
}

func (i RouterBgpArray) ToRouterBgpArrayOutputWithContext(ctx context.Context) RouterBgpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpArrayOutput)
}

// RouterBgpMapInput is an input type that accepts RouterBgpMap and RouterBgpMapOutput values.
// You can construct a concrete instance of `RouterBgpMapInput` via:
//
//          RouterBgpMap{ "key": RouterBgpArgs{...} }
type RouterBgpMapInput interface {
	pulumi.Input

	ToRouterBgpMapOutput() RouterBgpMapOutput
	ToRouterBgpMapOutputWithContext(context.Context) RouterBgpMapOutput
}

type RouterBgpMap map[string]RouterBgpInput

func (RouterBgpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterBgp)(nil)).Elem()
}

func (i RouterBgpMap) ToRouterBgpMapOutput() RouterBgpMapOutput {
	return i.ToRouterBgpMapOutputWithContext(context.Background())
}

func (i RouterBgpMap) ToRouterBgpMapOutputWithContext(ctx context.Context) RouterBgpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpMapOutput)
}

type RouterBgpOutput struct{ *pulumi.OutputState }

func (RouterBgpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgp)(nil)).Elem()
}

func (o RouterBgpOutput) ToRouterBgpOutput() RouterBgpOutput {
	return o
}

func (o RouterBgpOutput) ToRouterBgpOutputWithContext(ctx context.Context) RouterBgpOutput {
	return o
}

type RouterBgpArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterBgp)(nil)).Elem()
}

func (o RouterBgpArrayOutput) ToRouterBgpArrayOutput() RouterBgpArrayOutput {
	return o
}

func (o RouterBgpArrayOutput) ToRouterBgpArrayOutputWithContext(ctx context.Context) RouterBgpArrayOutput {
	return o
}

func (o RouterBgpArrayOutput) Index(i pulumi.IntInput) RouterBgpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterBgp {
		return vs[0].([]*RouterBgp)[vs[1].(int)]
	}).(RouterBgpOutput)
}

type RouterBgpMapOutput struct{ *pulumi.OutputState }

func (RouterBgpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterBgp)(nil)).Elem()
}

func (o RouterBgpMapOutput) ToRouterBgpMapOutput() RouterBgpMapOutput {
	return o
}

func (o RouterBgpMapOutput) ToRouterBgpMapOutputWithContext(ctx context.Context) RouterBgpMapOutput {
	return o
}

func (o RouterBgpMapOutput) MapIndex(k pulumi.StringInput) RouterBgpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterBgp {
		return vs[0].(map[string]*RouterBgp)[vs[1].(string)]
	}).(RouterBgpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpInput)(nil)).Elem(), &RouterBgp{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpArrayInput)(nil)).Elem(), RouterBgpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpMapInput)(nil)).Elem(), RouterBgpMap{})
	pulumi.RegisterOutputType(RouterBgpOutput{})
	pulumi.RegisterOutputType(RouterBgpArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpMapOutput{})
}
