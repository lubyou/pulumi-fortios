// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure protocol options.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewFirewallProfileProtocolOptions(ctx, "trname", &fortios.FirewallProfileProtocolOptionsArgs{
// 			Dns: &FirewallProfileProtocolOptionsDnsArgs{
// 				Ports:  pulumi.Int(53),
// 				Status: pulumi.String("enable"),
// 			},
// 			Ftp: &FirewallProfileProtocolOptionsFtpArgs{
// 				ComfortAmount:             pulumi.Int(1),
// 				ComfortInterval:           pulumi.Int(10),
// 				InspectAll:                pulumi.String("disable"),
// 				Options:                   pulumi.String("splice"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(21),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			Http: &FirewallProfileProtocolOptionsHttpArgs{
// 				BlockPageStatusCode:       pulumi.Int(403),
// 				ComfortAmount:             pulumi.Int(1),
// 				ComfortInterval:           pulumi.Int(10),
// 				FortinetBar:               pulumi.String("disable"),
// 				FortinetBarPort:           pulumi.Int(8011),
// 				HttpPolicy:                pulumi.String("disable"),
// 				InspectAll:                pulumi.String("disable"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(80),
// 				RangeBlock:                pulumi.String("disable"),
// 				RetryCount:                pulumi.Int(0),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				StreamingContentBypass:    pulumi.String("enable"),
// 				StripXForwardedFor:        pulumi.String("disable"),
// 				SwitchingProtocols:        pulumi.String("bypass"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			Imap: &FirewallProfileProtocolOptionsImapArgs{
// 				InspectAll:                pulumi.String("disable"),
// 				Options:                   pulumi.String("fragmail"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(143),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			MailSignature: &FirewallProfileProtocolOptionsMailSignatureArgs{
// 				Status: pulumi.String("disable"),
// 			},
// 			Mapi: &FirewallProfileProtocolOptionsMapiArgs{
// 				Options:                   pulumi.String("fragmail"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(135),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			Nntp: &FirewallProfileProtocolOptionsNntpArgs{
// 				InspectAll:                pulumi.String("disable"),
// 				Options:                   pulumi.String("splice"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(119),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			OversizeLog: pulumi.String("disable"),
// 			Pop3: &FirewallProfileProtocolOptionsPop3Args{
// 				InspectAll:                pulumi.String("disable"),
// 				Options:                   pulumi.String("fragmail"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(110),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			RpcOverHttp: pulumi.String("disable"),
// 			Smtp: &FirewallProfileProtocolOptionsSmtpArgs{
// 				InspectAll:                pulumi.String("disable"),
// 				Options:                   pulumi.String("fragmail splice"),
// 				OversizeLimit:             pulumi.Int(10),
// 				Ports:                     pulumi.Int(25),
// 				ScanBzip2:                 pulumi.String("enable"),
// 				ServerBusy:                pulumi.String("disable"),
// 				Status:                    pulumi.String("enable"),
// 				UncompressedNestLimit:     pulumi.Int(12),
// 				UncompressedOversizeLimit: pulumi.Int(10),
// 			},
// 			SwitchingProtocolsLog: pulumi.String("disable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Firewall ProfileProtocolOptions can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/firewallProfileProtocolOptions:FirewallProfileProtocolOptions labelname {{name}}
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/firewallProfileProtocolOptions:FirewallProfileProtocolOptions labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type FirewallProfileProtocolOptions struct {
	pulumi.CustomResourceState

	// Configure CIFS protocol options. The structure of `cifs` block is documented below.
	Cifs FirewallProfileProtocolOptionsCifsPtrOutput `pulumi:"cifs"`
	// Optional comments.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Configure DNS protocol options. The structure of `dns` block is documented below.
	Dns FirewallProfileProtocolOptionsDnsPtrOutput `pulumi:"dns"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringOutput `pulumi:"featureSet"`
	// Configure FTP protocol options. The structure of `ftp` block is documented below.
	Ftp FirewallProfileProtocolOptionsFtpPtrOutput `pulumi:"ftp"`
	// Configure HTTP protocol options. The structure of `http` block is documented below.
	Http FirewallProfileProtocolOptionsHttpPtrOutput `pulumi:"http"`
	// Configure IMAP protocol options. The structure of `imap` block is documented below.
	Imap FirewallProfileProtocolOptionsImapPtrOutput `pulumi:"imap"`
	// Configure Mail signature. The structure of `mailSignature` block is documented below.
	MailSignature FirewallProfileProtocolOptionsMailSignaturePtrOutput `pulumi:"mailSignature"`
	// Configure MAPI protocol options. The structure of `mapi` block is documented below.
	Mapi FirewallProfileProtocolOptionsMapiPtrOutput `pulumi:"mapi"`
	// Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure NNTP protocol options. The structure of `nntp` block is documented below.
	Nntp FirewallProfileProtocolOptionsNntpPtrOutput `pulumi:"nntp"`
	// Enable/disable logging for antivirus oversize file blocking. Valid values: `disable`, `enable`.
	OversizeLog pulumi.StringOutput `pulumi:"oversizeLog"`
	// Configure POP3 protocol options. The structure of `pop3` block is documented below.
	Pop3 FirewallProfileProtocolOptionsPop3PtrOutput `pulumi:"pop3"`
	// Name of the replacement message group to be used
	ReplacemsgGroup pulumi.StringOutput `pulumi:"replacemsgGroup"`
	// Enable/disable inspection of RPC over HTTP. Valid values: `enable`, `disable`.
	RpcOverHttp pulumi.StringOutput `pulumi:"rpcOverHttp"`
	// Configure SMTP protocol options. The structure of `smtp` block is documented below.
	Smtp FirewallProfileProtocolOptionsSmtpPtrOutput `pulumi:"smtp"`
	// Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
	Ssh FirewallProfileProtocolOptionsSshPtrOutput `pulumi:"ssh"`
	// Enable/disable logging for HTTP/HTTPS switching protocols. Valid values: `disable`, `enable`.
	SwitchingProtocolsLog pulumi.StringOutput `pulumi:"switchingProtocolsLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallProfileProtocolOptions registers a new resource with the given unique name, arguments, and options.
func NewFirewallProfileProtocolOptions(ctx *pulumi.Context,
	name string, args *FirewallProfileProtocolOptionsArgs, opts ...pulumi.ResourceOption) (*FirewallProfileProtocolOptions, error) {
	if args == nil {
		args = &FirewallProfileProtocolOptionsArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FirewallProfileProtocolOptions
	err := ctx.RegisterResource("fortios:index/firewallProfileProtocolOptions:FirewallProfileProtocolOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallProfileProtocolOptions gets an existing FirewallProfileProtocolOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallProfileProtocolOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallProfileProtocolOptionsState, opts ...pulumi.ResourceOption) (*FirewallProfileProtocolOptions, error) {
	var resource FirewallProfileProtocolOptions
	err := ctx.ReadResource("fortios:index/firewallProfileProtocolOptions:FirewallProfileProtocolOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallProfileProtocolOptions resources.
type firewallProfileProtocolOptionsState struct {
	// Configure CIFS protocol options. The structure of `cifs` block is documented below.
	Cifs *FirewallProfileProtocolOptionsCifs `pulumi:"cifs"`
	// Optional comments.
	Comment *string `pulumi:"comment"`
	// Configure DNS protocol options. The structure of `dns` block is documented below.
	Dns *FirewallProfileProtocolOptionsDns `pulumi:"dns"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet *string `pulumi:"featureSet"`
	// Configure FTP protocol options. The structure of `ftp` block is documented below.
	Ftp *FirewallProfileProtocolOptionsFtp `pulumi:"ftp"`
	// Configure HTTP protocol options. The structure of `http` block is documented below.
	Http *FirewallProfileProtocolOptionsHttp `pulumi:"http"`
	// Configure IMAP protocol options. The structure of `imap` block is documented below.
	Imap *FirewallProfileProtocolOptionsImap `pulumi:"imap"`
	// Configure Mail signature. The structure of `mailSignature` block is documented below.
	MailSignature *FirewallProfileProtocolOptionsMailSignature `pulumi:"mailSignature"`
	// Configure MAPI protocol options. The structure of `mapi` block is documented below.
	Mapi *FirewallProfileProtocolOptionsMapi `pulumi:"mapi"`
	// Name.
	Name *string `pulumi:"name"`
	// Configure NNTP protocol options. The structure of `nntp` block is documented below.
	Nntp *FirewallProfileProtocolOptionsNntp `pulumi:"nntp"`
	// Enable/disable logging for antivirus oversize file blocking. Valid values: `disable`, `enable`.
	OversizeLog *string `pulumi:"oversizeLog"`
	// Configure POP3 protocol options. The structure of `pop3` block is documented below.
	Pop3 *FirewallProfileProtocolOptionsPop3 `pulumi:"pop3"`
	// Name of the replacement message group to be used
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable inspection of RPC over HTTP. Valid values: `enable`, `disable`.
	RpcOverHttp *string `pulumi:"rpcOverHttp"`
	// Configure SMTP protocol options. The structure of `smtp` block is documented below.
	Smtp *FirewallProfileProtocolOptionsSmtp `pulumi:"smtp"`
	// Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
	Ssh *FirewallProfileProtocolOptionsSsh `pulumi:"ssh"`
	// Enable/disable logging for HTTP/HTTPS switching protocols. Valid values: `disable`, `enable`.
	SwitchingProtocolsLog *string `pulumi:"switchingProtocolsLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type FirewallProfileProtocolOptionsState struct {
	// Configure CIFS protocol options. The structure of `cifs` block is documented below.
	Cifs FirewallProfileProtocolOptionsCifsPtrInput
	// Optional comments.
	Comment pulumi.StringPtrInput
	// Configure DNS protocol options. The structure of `dns` block is documented below.
	Dns FirewallProfileProtocolOptionsDnsPtrInput
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringPtrInput
	// Configure FTP protocol options. The structure of `ftp` block is documented below.
	Ftp FirewallProfileProtocolOptionsFtpPtrInput
	// Configure HTTP protocol options. The structure of `http` block is documented below.
	Http FirewallProfileProtocolOptionsHttpPtrInput
	// Configure IMAP protocol options. The structure of `imap` block is documented below.
	Imap FirewallProfileProtocolOptionsImapPtrInput
	// Configure Mail signature. The structure of `mailSignature` block is documented below.
	MailSignature FirewallProfileProtocolOptionsMailSignaturePtrInput
	// Configure MAPI protocol options. The structure of `mapi` block is documented below.
	Mapi FirewallProfileProtocolOptionsMapiPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Configure NNTP protocol options. The structure of `nntp` block is documented below.
	Nntp FirewallProfileProtocolOptionsNntpPtrInput
	// Enable/disable logging for antivirus oversize file blocking. Valid values: `disable`, `enable`.
	OversizeLog pulumi.StringPtrInput
	// Configure POP3 protocol options. The structure of `pop3` block is documented below.
	Pop3 FirewallProfileProtocolOptionsPop3PtrInput
	// Name of the replacement message group to be used
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable inspection of RPC over HTTP. Valid values: `enable`, `disable`.
	RpcOverHttp pulumi.StringPtrInput
	// Configure SMTP protocol options. The structure of `smtp` block is documented below.
	Smtp FirewallProfileProtocolOptionsSmtpPtrInput
	// Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
	Ssh FirewallProfileProtocolOptionsSshPtrInput
	// Enable/disable logging for HTTP/HTTPS switching protocols. Valid values: `disable`, `enable`.
	SwitchingProtocolsLog pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallProfileProtocolOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProfileProtocolOptionsState)(nil)).Elem()
}

type firewallProfileProtocolOptionsArgs struct {
	// Configure CIFS protocol options. The structure of `cifs` block is documented below.
	Cifs *FirewallProfileProtocolOptionsCifs `pulumi:"cifs"`
	// Optional comments.
	Comment *string `pulumi:"comment"`
	// Configure DNS protocol options. The structure of `dns` block is documented below.
	Dns *FirewallProfileProtocolOptionsDns `pulumi:"dns"`
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet *string `pulumi:"featureSet"`
	// Configure FTP protocol options. The structure of `ftp` block is documented below.
	Ftp *FirewallProfileProtocolOptionsFtp `pulumi:"ftp"`
	// Configure HTTP protocol options. The structure of `http` block is documented below.
	Http *FirewallProfileProtocolOptionsHttp `pulumi:"http"`
	// Configure IMAP protocol options. The structure of `imap` block is documented below.
	Imap *FirewallProfileProtocolOptionsImap `pulumi:"imap"`
	// Configure Mail signature. The structure of `mailSignature` block is documented below.
	MailSignature *FirewallProfileProtocolOptionsMailSignature `pulumi:"mailSignature"`
	// Configure MAPI protocol options. The structure of `mapi` block is documented below.
	Mapi *FirewallProfileProtocolOptionsMapi `pulumi:"mapi"`
	// Name.
	Name *string `pulumi:"name"`
	// Configure NNTP protocol options. The structure of `nntp` block is documented below.
	Nntp *FirewallProfileProtocolOptionsNntp `pulumi:"nntp"`
	// Enable/disable logging for antivirus oversize file blocking. Valid values: `disable`, `enable`.
	OversizeLog *string `pulumi:"oversizeLog"`
	// Configure POP3 protocol options. The structure of `pop3` block is documented below.
	Pop3 *FirewallProfileProtocolOptionsPop3 `pulumi:"pop3"`
	// Name of the replacement message group to be used
	ReplacemsgGroup *string `pulumi:"replacemsgGroup"`
	// Enable/disable inspection of RPC over HTTP. Valid values: `enable`, `disable`.
	RpcOverHttp *string `pulumi:"rpcOverHttp"`
	// Configure SMTP protocol options. The structure of `smtp` block is documented below.
	Smtp *FirewallProfileProtocolOptionsSmtp `pulumi:"smtp"`
	// Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
	Ssh *FirewallProfileProtocolOptionsSsh `pulumi:"ssh"`
	// Enable/disable logging for HTTP/HTTPS switching protocols. Valid values: `disable`, `enable`.
	SwitchingProtocolsLog *string `pulumi:"switchingProtocolsLog"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallProfileProtocolOptions resource.
type FirewallProfileProtocolOptionsArgs struct {
	// Configure CIFS protocol options. The structure of `cifs` block is documented below.
	Cifs FirewallProfileProtocolOptionsCifsPtrInput
	// Optional comments.
	Comment pulumi.StringPtrInput
	// Configure DNS protocol options. The structure of `dns` block is documented below.
	Dns FirewallProfileProtocolOptionsDnsPtrInput
	// Flow/proxy feature set. Valid values: `flow`, `proxy`.
	FeatureSet pulumi.StringPtrInput
	// Configure FTP protocol options. The structure of `ftp` block is documented below.
	Ftp FirewallProfileProtocolOptionsFtpPtrInput
	// Configure HTTP protocol options. The structure of `http` block is documented below.
	Http FirewallProfileProtocolOptionsHttpPtrInput
	// Configure IMAP protocol options. The structure of `imap` block is documented below.
	Imap FirewallProfileProtocolOptionsImapPtrInput
	// Configure Mail signature. The structure of `mailSignature` block is documented below.
	MailSignature FirewallProfileProtocolOptionsMailSignaturePtrInput
	// Configure MAPI protocol options. The structure of `mapi` block is documented below.
	Mapi FirewallProfileProtocolOptionsMapiPtrInput
	// Name.
	Name pulumi.StringPtrInput
	// Configure NNTP protocol options. The structure of `nntp` block is documented below.
	Nntp FirewallProfileProtocolOptionsNntpPtrInput
	// Enable/disable logging for antivirus oversize file blocking. Valid values: `disable`, `enable`.
	OversizeLog pulumi.StringPtrInput
	// Configure POP3 protocol options. The structure of `pop3` block is documented below.
	Pop3 FirewallProfileProtocolOptionsPop3PtrInput
	// Name of the replacement message group to be used
	ReplacemsgGroup pulumi.StringPtrInput
	// Enable/disable inspection of RPC over HTTP. Valid values: `enable`, `disable`.
	RpcOverHttp pulumi.StringPtrInput
	// Configure SMTP protocol options. The structure of `smtp` block is documented below.
	Smtp FirewallProfileProtocolOptionsSmtpPtrInput
	// Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
	Ssh FirewallProfileProtocolOptionsSshPtrInput
	// Enable/disable logging for HTTP/HTTPS switching protocols. Valid values: `disable`, `enable`.
	SwitchingProtocolsLog pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (FirewallProfileProtocolOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallProfileProtocolOptionsArgs)(nil)).Elem()
}

type FirewallProfileProtocolOptionsInput interface {
	pulumi.Input

	ToFirewallProfileProtocolOptionsOutput() FirewallProfileProtocolOptionsOutput
	ToFirewallProfileProtocolOptionsOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsOutput
}

func (*FirewallProfileProtocolOptions) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileProtocolOptions)(nil)).Elem()
}

func (i *FirewallProfileProtocolOptions) ToFirewallProfileProtocolOptionsOutput() FirewallProfileProtocolOptionsOutput {
	return i.ToFirewallProfileProtocolOptionsOutputWithContext(context.Background())
}

func (i *FirewallProfileProtocolOptions) ToFirewallProfileProtocolOptionsOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileProtocolOptionsOutput)
}

// FirewallProfileProtocolOptionsArrayInput is an input type that accepts FirewallProfileProtocolOptionsArray and FirewallProfileProtocolOptionsArrayOutput values.
// You can construct a concrete instance of `FirewallProfileProtocolOptionsArrayInput` via:
//
//          FirewallProfileProtocolOptionsArray{ FirewallProfileProtocolOptionsArgs{...} }
type FirewallProfileProtocolOptionsArrayInput interface {
	pulumi.Input

	ToFirewallProfileProtocolOptionsArrayOutput() FirewallProfileProtocolOptionsArrayOutput
	ToFirewallProfileProtocolOptionsArrayOutputWithContext(context.Context) FirewallProfileProtocolOptionsArrayOutput
}

type FirewallProfileProtocolOptionsArray []FirewallProfileProtocolOptionsInput

func (FirewallProfileProtocolOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProfileProtocolOptions)(nil)).Elem()
}

func (i FirewallProfileProtocolOptionsArray) ToFirewallProfileProtocolOptionsArrayOutput() FirewallProfileProtocolOptionsArrayOutput {
	return i.ToFirewallProfileProtocolOptionsArrayOutputWithContext(context.Background())
}

func (i FirewallProfileProtocolOptionsArray) ToFirewallProfileProtocolOptionsArrayOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileProtocolOptionsArrayOutput)
}

// FirewallProfileProtocolOptionsMapInput is an input type that accepts FirewallProfileProtocolOptionsMap and FirewallProfileProtocolOptionsMapOutput values.
// You can construct a concrete instance of `FirewallProfileProtocolOptionsMapInput` via:
//
//          FirewallProfileProtocolOptionsMap{ "key": FirewallProfileProtocolOptionsArgs{...} }
type FirewallProfileProtocolOptionsMapInput interface {
	pulumi.Input

	ToFirewallProfileProtocolOptionsMapOutput() FirewallProfileProtocolOptionsMapOutput
	ToFirewallProfileProtocolOptionsMapOutputWithContext(context.Context) FirewallProfileProtocolOptionsMapOutput
}

type FirewallProfileProtocolOptionsMap map[string]FirewallProfileProtocolOptionsInput

func (FirewallProfileProtocolOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProfileProtocolOptions)(nil)).Elem()
}

func (i FirewallProfileProtocolOptionsMap) ToFirewallProfileProtocolOptionsMapOutput() FirewallProfileProtocolOptionsMapOutput {
	return i.ToFirewallProfileProtocolOptionsMapOutputWithContext(context.Background())
}

func (i FirewallProfileProtocolOptionsMap) ToFirewallProfileProtocolOptionsMapOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProfileProtocolOptionsMapOutput)
}

type FirewallProfileProtocolOptionsOutput struct{ *pulumi.OutputState }

func (FirewallProfileProtocolOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallProfileProtocolOptions)(nil)).Elem()
}

func (o FirewallProfileProtocolOptionsOutput) ToFirewallProfileProtocolOptionsOutput() FirewallProfileProtocolOptionsOutput {
	return o
}

func (o FirewallProfileProtocolOptionsOutput) ToFirewallProfileProtocolOptionsOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsOutput {
	return o
}

type FirewallProfileProtocolOptionsArrayOutput struct{ *pulumi.OutputState }

func (FirewallProfileProtocolOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallProfileProtocolOptions)(nil)).Elem()
}

func (o FirewallProfileProtocolOptionsArrayOutput) ToFirewallProfileProtocolOptionsArrayOutput() FirewallProfileProtocolOptionsArrayOutput {
	return o
}

func (o FirewallProfileProtocolOptionsArrayOutput) ToFirewallProfileProtocolOptionsArrayOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsArrayOutput {
	return o
}

func (o FirewallProfileProtocolOptionsArrayOutput) Index(i pulumi.IntInput) FirewallProfileProtocolOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallProfileProtocolOptions {
		return vs[0].([]*FirewallProfileProtocolOptions)[vs[1].(int)]
	}).(FirewallProfileProtocolOptionsOutput)
}

type FirewallProfileProtocolOptionsMapOutput struct{ *pulumi.OutputState }

func (FirewallProfileProtocolOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallProfileProtocolOptions)(nil)).Elem()
}

func (o FirewallProfileProtocolOptionsMapOutput) ToFirewallProfileProtocolOptionsMapOutput() FirewallProfileProtocolOptionsMapOutput {
	return o
}

func (o FirewallProfileProtocolOptionsMapOutput) ToFirewallProfileProtocolOptionsMapOutputWithContext(ctx context.Context) FirewallProfileProtocolOptionsMapOutput {
	return o
}

func (o FirewallProfileProtocolOptionsMapOutput) MapIndex(k pulumi.StringInput) FirewallProfileProtocolOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallProfileProtocolOptions {
		return vs[0].(map[string]*FirewallProfileProtocolOptions)[vs[1].(string)]
	}).(FirewallProfileProtocolOptionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileProtocolOptionsInput)(nil)).Elem(), &FirewallProfileProtocolOptions{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileProtocolOptionsArrayInput)(nil)).Elem(), FirewallProfileProtocolOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProfileProtocolOptionsMapInput)(nil)).Elem(), FirewallProfileProtocolOptionsMap{})
	pulumi.RegisterOutputType(FirewallProfileProtocolOptionsOutput{})
	pulumi.RegisterOutputType(FirewallProfileProtocolOptionsArrayOutput{})
	pulumi.RegisterOutputType(FirewallProfileProtocolOptionsMapOutput{})
}
