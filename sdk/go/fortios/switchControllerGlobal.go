// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure FortiSwitch global settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSwitchControllerGlobal(ctx, "trname", &fortios.SwitchControllerGlobalArgs{
// 			AllowMultipleInterfaces: pulumi.String("disable"),
// 			HttpsImagePush:          pulumi.String("disable"),
// 			LogMacLimitViolations:   pulumi.String("disable"),
// 			MacAgingInterval:        pulumi.Int(332),
// 			MacRetentionPeriod:      pulumi.Int(24),
// 			MacViolationTimer:       pulumi.Int(0),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// SwitchController Global can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import fortios:index/switchControllerGlobal:SwitchControllerGlobal labelname SwitchControllerGlobal
// ```
//
//  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
//
// ```sh
//  $ pulumi import fortios:index/switchControllerGlobal:SwitchControllerGlobal labelname SwitchControllerGlobal
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SwitchControllerGlobal struct {
	pulumi.CustomResourceState

	// Enable/disable multiple FortiLink interfaces for redundant connections between a managed FortiSwitch and FortiGate. Valid values: `enable`, `disable`.
	AllowMultipleInterfaces pulumi.StringOutput `pulumi:"allowMultipleInterfaces"`
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where a quarantined device was seen last. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceQuarantinedLink pulumi.StringOutput `pulumi:"bounceQuarantinedLink"`
	// List of custom commands to be pushed to all FortiSwitches in the VDOM. The structure of `customCommand` block is documented below.
	CustomCommands SwitchControllerGlobalCustomCommandArrayOutput `pulumi:"customCommands"`
	// Default VLAN for ports when added to the virtual-switch.
	DefaultVirtualSwitchVlan pulumi.StringOutput `pulumi:"defaultVirtualSwitchVlan"`
	// Enable/disable DHCP snooping server access list. Valid values: `enable`, `disable`.
	DhcpServerAccessList pulumi.StringOutput `pulumi:"dhcpServerAccessList"`
	// Prevent this FortiSwitch from discovering. The structure of `disableDiscovery` block is documented below.
	DisableDiscoveries SwitchControllerGlobalDisableDiscoveryArrayOutput `pulumi:"disableDiscoveries"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Enable/disable enforcement of FIPS on managed FortiSwitch devices. Valid values: `disable`, `enable`.
	FipsEnforce pulumi.StringOutput `pulumi:"fipsEnforce"`
	// Enable/disable automatic provisioning of latest firmware on authorization. Valid values: `enable`, `disable`.
	FirmwareProvisionOnAuthorization pulumi.StringOutput `pulumi:"firmwareProvisionOnAuthorization"`
	// Enable/disable image push to FortiSwitch using HTTPS. Valid values: `enable`, `disable`.
	HttpsImagePush pulumi.StringOutput `pulumi:"httpsImagePush"`
	// Enable/disable logs for Learning Limit Violations. Valid values: `enable`, `disable`.
	LogMacLimitViolations pulumi.StringOutput `pulumi:"logMacLimitViolations"`
	// Time after which an inactive MAC is aged out (10 - 1000000 sec, default = 300, 0 = disable).
	MacAgingInterval pulumi.IntOutput `pulumi:"macAgingInterval"`
	// Enable/disable MAC address event logging. Valid values: `enable`, `disable`.
	MacEventLogging pulumi.StringOutput `pulumi:"macEventLogging"`
	// Time in hours after which an inactive MAC is removed from client DB.
	MacRetentionPeriod pulumi.IntOutput `pulumi:"macRetentionPeriod"`
	// Set timeout for Learning Limit Violations (0 = disabled).
	MacViolationTimer pulumi.IntOutput `pulumi:"macViolationTimer"`
	// Quarantine mode. Valid values: `by-vlan`, `by-redirect`.
	QuarantineMode pulumi.StringOutput `pulumi:"quarantineMode"`
	// Enable/disable DNS resolution of the FortiSwitch unit's IP address by use of its serial number. Valid values: `enable`, `disable`.
	SnDnsResolution pulumi.StringOutput `pulumi:"snDnsResolution"`
	// Control which sources update the device user list. Valid values: `mac-cache`, `lldp`, `dhcp-snooping`, `l2-db`, `l3-db`.
	UpdateUserDevice pulumi.StringOutput `pulumi:"updateUserDevice"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// VLAN configuration mode, user-defined-vlans or all-possible-vlans. Valid values: `all`, `defined`.
	VlanAllMode pulumi.StringOutput `pulumi:"vlanAllMode"`
	// FortiLink VLAN optimization. Valid values: `enable`, `disable`.
	VlanOptimization pulumi.StringOutput `pulumi:"vlanOptimization"`
}

// NewSwitchControllerGlobal registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerGlobal(ctx *pulumi.Context,
	name string, args *SwitchControllerGlobalArgs, opts ...pulumi.ResourceOption) (*SwitchControllerGlobal, error) {
	if args == nil {
		args = &SwitchControllerGlobalArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchControllerGlobal
	err := ctx.RegisterResource("fortios:index/switchControllerGlobal:SwitchControllerGlobal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerGlobal gets an existing SwitchControllerGlobal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerGlobalState, opts ...pulumi.ResourceOption) (*SwitchControllerGlobal, error) {
	var resource SwitchControllerGlobal
	err := ctx.ReadResource("fortios:index/switchControllerGlobal:SwitchControllerGlobal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerGlobal resources.
type switchControllerGlobalState struct {
	// Enable/disable multiple FortiLink interfaces for redundant connections between a managed FortiSwitch and FortiGate. Valid values: `enable`, `disable`.
	AllowMultipleInterfaces *string `pulumi:"allowMultipleInterfaces"`
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where a quarantined device was seen last. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceQuarantinedLink *string `pulumi:"bounceQuarantinedLink"`
	// List of custom commands to be pushed to all FortiSwitches in the VDOM. The structure of `customCommand` block is documented below.
	CustomCommands []SwitchControllerGlobalCustomCommand `pulumi:"customCommands"`
	// Default VLAN for ports when added to the virtual-switch.
	DefaultVirtualSwitchVlan *string `pulumi:"defaultVirtualSwitchVlan"`
	// Enable/disable DHCP snooping server access list. Valid values: `enable`, `disable`.
	DhcpServerAccessList *string `pulumi:"dhcpServerAccessList"`
	// Prevent this FortiSwitch from discovering. The structure of `disableDiscovery` block is documented below.
	DisableDiscoveries []SwitchControllerGlobalDisableDiscovery `pulumi:"disableDiscoveries"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable enforcement of FIPS on managed FortiSwitch devices. Valid values: `disable`, `enable`.
	FipsEnforce *string `pulumi:"fipsEnforce"`
	// Enable/disable automatic provisioning of latest firmware on authorization. Valid values: `enable`, `disable`.
	FirmwareProvisionOnAuthorization *string `pulumi:"firmwareProvisionOnAuthorization"`
	// Enable/disable image push to FortiSwitch using HTTPS. Valid values: `enable`, `disable`.
	HttpsImagePush *string `pulumi:"httpsImagePush"`
	// Enable/disable logs for Learning Limit Violations. Valid values: `enable`, `disable`.
	LogMacLimitViolations *string `pulumi:"logMacLimitViolations"`
	// Time after which an inactive MAC is aged out (10 - 1000000 sec, default = 300, 0 = disable).
	MacAgingInterval *int `pulumi:"macAgingInterval"`
	// Enable/disable MAC address event logging. Valid values: `enable`, `disable`.
	MacEventLogging *string `pulumi:"macEventLogging"`
	// Time in hours after which an inactive MAC is removed from client DB.
	MacRetentionPeriod *int `pulumi:"macRetentionPeriod"`
	// Set timeout for Learning Limit Violations (0 = disabled).
	MacViolationTimer *int `pulumi:"macViolationTimer"`
	// Quarantine mode. Valid values: `by-vlan`, `by-redirect`.
	QuarantineMode *string `pulumi:"quarantineMode"`
	// Enable/disable DNS resolution of the FortiSwitch unit's IP address by use of its serial number. Valid values: `enable`, `disable`.
	SnDnsResolution *string `pulumi:"snDnsResolution"`
	// Control which sources update the device user list. Valid values: `mac-cache`, `lldp`, `dhcp-snooping`, `l2-db`, `l3-db`.
	UpdateUserDevice *string `pulumi:"updateUserDevice"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN configuration mode, user-defined-vlans or all-possible-vlans. Valid values: `all`, `defined`.
	VlanAllMode *string `pulumi:"vlanAllMode"`
	// FortiLink VLAN optimization. Valid values: `enable`, `disable`.
	VlanOptimization *string `pulumi:"vlanOptimization"`
}

type SwitchControllerGlobalState struct {
	// Enable/disable multiple FortiLink interfaces for redundant connections between a managed FortiSwitch and FortiGate. Valid values: `enable`, `disable`.
	AllowMultipleInterfaces pulumi.StringPtrInput
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where a quarantined device was seen last. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceQuarantinedLink pulumi.StringPtrInput
	// List of custom commands to be pushed to all FortiSwitches in the VDOM. The structure of `customCommand` block is documented below.
	CustomCommands SwitchControllerGlobalCustomCommandArrayInput
	// Default VLAN for ports when added to the virtual-switch.
	DefaultVirtualSwitchVlan pulumi.StringPtrInput
	// Enable/disable DHCP snooping server access list. Valid values: `enable`, `disable`.
	DhcpServerAccessList pulumi.StringPtrInput
	// Prevent this FortiSwitch from discovering. The structure of `disableDiscovery` block is documented below.
	DisableDiscoveries SwitchControllerGlobalDisableDiscoveryArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable enforcement of FIPS on managed FortiSwitch devices. Valid values: `disable`, `enable`.
	FipsEnforce pulumi.StringPtrInput
	// Enable/disable automatic provisioning of latest firmware on authorization. Valid values: `enable`, `disable`.
	FirmwareProvisionOnAuthorization pulumi.StringPtrInput
	// Enable/disable image push to FortiSwitch using HTTPS. Valid values: `enable`, `disable`.
	HttpsImagePush pulumi.StringPtrInput
	// Enable/disable logs for Learning Limit Violations. Valid values: `enable`, `disable`.
	LogMacLimitViolations pulumi.StringPtrInput
	// Time after which an inactive MAC is aged out (10 - 1000000 sec, default = 300, 0 = disable).
	MacAgingInterval pulumi.IntPtrInput
	// Enable/disable MAC address event logging. Valid values: `enable`, `disable`.
	MacEventLogging pulumi.StringPtrInput
	// Time in hours after which an inactive MAC is removed from client DB.
	MacRetentionPeriod pulumi.IntPtrInput
	// Set timeout for Learning Limit Violations (0 = disabled).
	MacViolationTimer pulumi.IntPtrInput
	// Quarantine mode. Valid values: `by-vlan`, `by-redirect`.
	QuarantineMode pulumi.StringPtrInput
	// Enable/disable DNS resolution of the FortiSwitch unit's IP address by use of its serial number. Valid values: `enable`, `disable`.
	SnDnsResolution pulumi.StringPtrInput
	// Control which sources update the device user list. Valid values: `mac-cache`, `lldp`, `dhcp-snooping`, `l2-db`, `l3-db`.
	UpdateUserDevice pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN configuration mode, user-defined-vlans or all-possible-vlans. Valid values: `all`, `defined`.
	VlanAllMode pulumi.StringPtrInput
	// FortiLink VLAN optimization. Valid values: `enable`, `disable`.
	VlanOptimization pulumi.StringPtrInput
}

func (SwitchControllerGlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerGlobalState)(nil)).Elem()
}

type switchControllerGlobalArgs struct {
	// Enable/disable multiple FortiLink interfaces for redundant connections between a managed FortiSwitch and FortiGate. Valid values: `enable`, `disable`.
	AllowMultipleInterfaces *string `pulumi:"allowMultipleInterfaces"`
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where a quarantined device was seen last. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceQuarantinedLink *string `pulumi:"bounceQuarantinedLink"`
	// List of custom commands to be pushed to all FortiSwitches in the VDOM. The structure of `customCommand` block is documented below.
	CustomCommands []SwitchControllerGlobalCustomCommand `pulumi:"customCommands"`
	// Default VLAN for ports when added to the virtual-switch.
	DefaultVirtualSwitchVlan *string `pulumi:"defaultVirtualSwitchVlan"`
	// Enable/disable DHCP snooping server access list. Valid values: `enable`, `disable`.
	DhcpServerAccessList *string `pulumi:"dhcpServerAccessList"`
	// Prevent this FortiSwitch from discovering. The structure of `disableDiscovery` block is documented below.
	DisableDiscoveries []SwitchControllerGlobalDisableDiscovery `pulumi:"disableDiscoveries"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Enable/disable enforcement of FIPS on managed FortiSwitch devices. Valid values: `disable`, `enable`.
	FipsEnforce *string `pulumi:"fipsEnforce"`
	// Enable/disable automatic provisioning of latest firmware on authorization. Valid values: `enable`, `disable`.
	FirmwareProvisionOnAuthorization *string `pulumi:"firmwareProvisionOnAuthorization"`
	// Enable/disable image push to FortiSwitch using HTTPS. Valid values: `enable`, `disable`.
	HttpsImagePush *string `pulumi:"httpsImagePush"`
	// Enable/disable logs for Learning Limit Violations. Valid values: `enable`, `disable`.
	LogMacLimitViolations *string `pulumi:"logMacLimitViolations"`
	// Time after which an inactive MAC is aged out (10 - 1000000 sec, default = 300, 0 = disable).
	MacAgingInterval *int `pulumi:"macAgingInterval"`
	// Enable/disable MAC address event logging. Valid values: `enable`, `disable`.
	MacEventLogging *string `pulumi:"macEventLogging"`
	// Time in hours after which an inactive MAC is removed from client DB.
	MacRetentionPeriod *int `pulumi:"macRetentionPeriod"`
	// Set timeout for Learning Limit Violations (0 = disabled).
	MacViolationTimer *int `pulumi:"macViolationTimer"`
	// Quarantine mode. Valid values: `by-vlan`, `by-redirect`.
	QuarantineMode *string `pulumi:"quarantineMode"`
	// Enable/disable DNS resolution of the FortiSwitch unit's IP address by use of its serial number. Valid values: `enable`, `disable`.
	SnDnsResolution *string `pulumi:"snDnsResolution"`
	// Control which sources update the device user list. Valid values: `mac-cache`, `lldp`, `dhcp-snooping`, `l2-db`, `l3-db`.
	UpdateUserDevice *string `pulumi:"updateUserDevice"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// VLAN configuration mode, user-defined-vlans or all-possible-vlans. Valid values: `all`, `defined`.
	VlanAllMode *string `pulumi:"vlanAllMode"`
	// FortiLink VLAN optimization. Valid values: `enable`, `disable`.
	VlanOptimization *string `pulumi:"vlanOptimization"`
}

// The set of arguments for constructing a SwitchControllerGlobal resource.
type SwitchControllerGlobalArgs struct {
	// Enable/disable multiple FortiLink interfaces for redundant connections between a managed FortiSwitch and FortiGate. Valid values: `enable`, `disable`.
	AllowMultipleInterfaces pulumi.StringPtrInput
	// Enable/disable bouncing (administratively bring the link down, up) of a switch port where a quarantined device was seen last. Helps to re-initiate the DHCP process for a device. Valid values: `disable`, `enable`.
	BounceQuarantinedLink pulumi.StringPtrInput
	// List of custom commands to be pushed to all FortiSwitches in the VDOM. The structure of `customCommand` block is documented below.
	CustomCommands SwitchControllerGlobalCustomCommandArrayInput
	// Default VLAN for ports when added to the virtual-switch.
	DefaultVirtualSwitchVlan pulumi.StringPtrInput
	// Enable/disable DHCP snooping server access list. Valid values: `enable`, `disable`.
	DhcpServerAccessList pulumi.StringPtrInput
	// Prevent this FortiSwitch from discovering. The structure of `disableDiscovery` block is documented below.
	DisableDiscoveries SwitchControllerGlobalDisableDiscoveryArrayInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Enable/disable enforcement of FIPS on managed FortiSwitch devices. Valid values: `disable`, `enable`.
	FipsEnforce pulumi.StringPtrInput
	// Enable/disable automatic provisioning of latest firmware on authorization. Valid values: `enable`, `disable`.
	FirmwareProvisionOnAuthorization pulumi.StringPtrInput
	// Enable/disable image push to FortiSwitch using HTTPS. Valid values: `enable`, `disable`.
	HttpsImagePush pulumi.StringPtrInput
	// Enable/disable logs for Learning Limit Violations. Valid values: `enable`, `disable`.
	LogMacLimitViolations pulumi.StringPtrInput
	// Time after which an inactive MAC is aged out (10 - 1000000 sec, default = 300, 0 = disable).
	MacAgingInterval pulumi.IntPtrInput
	// Enable/disable MAC address event logging. Valid values: `enable`, `disable`.
	MacEventLogging pulumi.StringPtrInput
	// Time in hours after which an inactive MAC is removed from client DB.
	MacRetentionPeriod pulumi.IntPtrInput
	// Set timeout for Learning Limit Violations (0 = disabled).
	MacViolationTimer pulumi.IntPtrInput
	// Quarantine mode. Valid values: `by-vlan`, `by-redirect`.
	QuarantineMode pulumi.StringPtrInput
	// Enable/disable DNS resolution of the FortiSwitch unit's IP address by use of its serial number. Valid values: `enable`, `disable`.
	SnDnsResolution pulumi.StringPtrInput
	// Control which sources update the device user list. Valid values: `mac-cache`, `lldp`, `dhcp-snooping`, `l2-db`, `l3-db`.
	UpdateUserDevice pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// VLAN configuration mode, user-defined-vlans or all-possible-vlans. Valid values: `all`, `defined`.
	VlanAllMode pulumi.StringPtrInput
	// FortiLink VLAN optimization. Valid values: `enable`, `disable`.
	VlanOptimization pulumi.StringPtrInput
}

func (SwitchControllerGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerGlobalArgs)(nil)).Elem()
}

type SwitchControllerGlobalInput interface {
	pulumi.Input

	ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput
	ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput
}

func (*SwitchControllerGlobal) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerGlobal)(nil)).Elem()
}

func (i *SwitchControllerGlobal) ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput {
	return i.ToSwitchControllerGlobalOutputWithContext(context.Background())
}

func (i *SwitchControllerGlobal) ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalOutput)
}

// SwitchControllerGlobalArrayInput is an input type that accepts SwitchControllerGlobalArray and SwitchControllerGlobalArrayOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalArrayInput` via:
//
//          SwitchControllerGlobalArray{ SwitchControllerGlobalArgs{...} }
type SwitchControllerGlobalArrayInput interface {
	pulumi.Input

	ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput
	ToSwitchControllerGlobalArrayOutputWithContext(context.Context) SwitchControllerGlobalArrayOutput
}

type SwitchControllerGlobalArray []SwitchControllerGlobalInput

func (SwitchControllerGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerGlobal)(nil)).Elem()
}

func (i SwitchControllerGlobalArray) ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput {
	return i.ToSwitchControllerGlobalArrayOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalArray) ToSwitchControllerGlobalArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalArrayOutput)
}

// SwitchControllerGlobalMapInput is an input type that accepts SwitchControllerGlobalMap and SwitchControllerGlobalMapOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalMapInput` via:
//
//          SwitchControllerGlobalMap{ "key": SwitchControllerGlobalArgs{...} }
type SwitchControllerGlobalMapInput interface {
	pulumi.Input

	ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput
	ToSwitchControllerGlobalMapOutputWithContext(context.Context) SwitchControllerGlobalMapOutput
}

type SwitchControllerGlobalMap map[string]SwitchControllerGlobalInput

func (SwitchControllerGlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerGlobal)(nil)).Elem()
}

func (i SwitchControllerGlobalMap) ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput {
	return i.ToSwitchControllerGlobalMapOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalMap) ToSwitchControllerGlobalMapOutputWithContext(ctx context.Context) SwitchControllerGlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalMapOutput)
}

type SwitchControllerGlobalOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalOutput) ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput {
	return o
}

func (o SwitchControllerGlobalOutput) ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput {
	return o
}

type SwitchControllerGlobalArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalArrayOutput) ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput {
	return o
}

func (o SwitchControllerGlobalArrayOutput) ToSwitchControllerGlobalArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalArrayOutput {
	return o
}

func (o SwitchControllerGlobalArrayOutput) Index(i pulumi.IntInput) SwitchControllerGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerGlobal {
		return vs[0].([]*SwitchControllerGlobal)[vs[1].(int)]
	}).(SwitchControllerGlobalOutput)
}

type SwitchControllerGlobalMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalMapOutput) ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput {
	return o
}

func (o SwitchControllerGlobalMapOutput) ToSwitchControllerGlobalMapOutputWithContext(ctx context.Context) SwitchControllerGlobalMapOutput {
	return o
}

func (o SwitchControllerGlobalMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerGlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerGlobal {
		return vs[0].(map[string]*SwitchControllerGlobal)[vs[1].(string)]
	}).(SwitchControllerGlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalInput)(nil)).Elem(), &SwitchControllerGlobal{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalArrayInput)(nil)).Elem(), SwitchControllerGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalMapInput)(nil)).Elem(), SwitchControllerGlobalMap{})
	pulumi.RegisterOutputType(SwitchControllerGlobalOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalMapOutput{})
}
