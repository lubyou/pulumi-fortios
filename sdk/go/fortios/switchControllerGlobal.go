// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SwitchControllerGlobal struct {
	pulumi.CustomResourceState

	AllowMultipleInterfaces          pulumi.StringOutput                               `pulumi:"allowMultipleInterfaces"`
	BounceQuarantinedLink            pulumi.StringOutput                               `pulumi:"bounceQuarantinedLink"`
	CustomCommands                   SwitchControllerGlobalCustomCommandArrayOutput    `pulumi:"customCommands"`
	DefaultVirtualSwitchVlan         pulumi.StringOutput                               `pulumi:"defaultVirtualSwitchVlan"`
	DhcpOption82CircuitId            pulumi.StringOutput                               `pulumi:"dhcpOption82CircuitId"`
	DhcpOption82Format               pulumi.StringOutput                               `pulumi:"dhcpOption82Format"`
	DhcpOption82RemoteId             pulumi.StringOutput                               `pulumi:"dhcpOption82RemoteId"`
	DhcpServerAccessList             pulumi.StringOutput                               `pulumi:"dhcpServerAccessList"`
	DhcpSnoopClientDbExp             pulumi.IntOutput                                  `pulumi:"dhcpSnoopClientDbExp"`
	DhcpSnoopClientReq               pulumi.StringOutput                               `pulumi:"dhcpSnoopClientReq"`
	DhcpSnoopDbPerPortLearnLimit     pulumi.IntOutput                                  `pulumi:"dhcpSnoopDbPerPortLearnLimit"`
	DisableDiscoveries               SwitchControllerGlobalDisableDiscoveryArrayOutput `pulumi:"disableDiscoveries"`
	DynamicSortSubtable              pulumi.StringPtrOutput                            `pulumi:"dynamicSortSubtable"`
	FipsEnforce                      pulumi.StringOutput                               `pulumi:"fipsEnforce"`
	FirmwareProvisionOnAuthorization pulumi.StringOutput                               `pulumi:"firmwareProvisionOnAuthorization"`
	GetAllTables                     pulumi.StringPtrOutput                            `pulumi:"getAllTables"`
	HttpsImagePush                   pulumi.StringOutput                               `pulumi:"httpsImagePush"`
	LogMacLimitViolations            pulumi.StringOutput                               `pulumi:"logMacLimitViolations"`
	MacAgingInterval                 pulumi.IntOutput                                  `pulumi:"macAgingInterval"`
	MacEventLogging                  pulumi.StringOutput                               `pulumi:"macEventLogging"`
	MacRetentionPeriod               pulumi.IntOutput                                  `pulumi:"macRetentionPeriod"`
	MacViolationTimer                pulumi.IntOutput                                  `pulumi:"macViolationTimer"`
	QuarantineMode                   pulumi.StringOutput                               `pulumi:"quarantineMode"`
	SnDnsResolution                  pulumi.StringOutput                               `pulumi:"snDnsResolution"`
	UpdateUserDevice                 pulumi.StringOutput                               `pulumi:"updateUserDevice"`
	Vdomparam                        pulumi.StringPtrOutput                            `pulumi:"vdomparam"`
	VlanAllMode                      pulumi.StringOutput                               `pulumi:"vlanAllMode"`
	VlanIdentity                     pulumi.StringOutput                               `pulumi:"vlanIdentity"`
	VlanOptimization                 pulumi.StringOutput                               `pulumi:"vlanOptimization"`
}

// NewSwitchControllerGlobal registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerGlobal(ctx *pulumi.Context,
	name string, args *SwitchControllerGlobalArgs, opts ...pulumi.ResourceOption) (*SwitchControllerGlobal, error) {
	if args == nil {
		args = &SwitchControllerGlobalArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerGlobal
	err := ctx.RegisterResource("fortios:index/switchControllerGlobal:SwitchControllerGlobal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerGlobal gets an existing SwitchControllerGlobal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerGlobalState, opts ...pulumi.ResourceOption) (*SwitchControllerGlobal, error) {
	var resource SwitchControllerGlobal
	err := ctx.ReadResource("fortios:index/switchControllerGlobal:SwitchControllerGlobal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerGlobal resources.
type switchControllerGlobalState struct {
	AllowMultipleInterfaces          *string                                  `pulumi:"allowMultipleInterfaces"`
	BounceQuarantinedLink            *string                                  `pulumi:"bounceQuarantinedLink"`
	CustomCommands                   []SwitchControllerGlobalCustomCommand    `pulumi:"customCommands"`
	DefaultVirtualSwitchVlan         *string                                  `pulumi:"defaultVirtualSwitchVlan"`
	DhcpOption82CircuitId            *string                                  `pulumi:"dhcpOption82CircuitId"`
	DhcpOption82Format               *string                                  `pulumi:"dhcpOption82Format"`
	DhcpOption82RemoteId             *string                                  `pulumi:"dhcpOption82RemoteId"`
	DhcpServerAccessList             *string                                  `pulumi:"dhcpServerAccessList"`
	DhcpSnoopClientDbExp             *int                                     `pulumi:"dhcpSnoopClientDbExp"`
	DhcpSnoopClientReq               *string                                  `pulumi:"dhcpSnoopClientReq"`
	DhcpSnoopDbPerPortLearnLimit     *int                                     `pulumi:"dhcpSnoopDbPerPortLearnLimit"`
	DisableDiscoveries               []SwitchControllerGlobalDisableDiscovery `pulumi:"disableDiscoveries"`
	DynamicSortSubtable              *string                                  `pulumi:"dynamicSortSubtable"`
	FipsEnforce                      *string                                  `pulumi:"fipsEnforce"`
	FirmwareProvisionOnAuthorization *string                                  `pulumi:"firmwareProvisionOnAuthorization"`
	GetAllTables                     *string                                  `pulumi:"getAllTables"`
	HttpsImagePush                   *string                                  `pulumi:"httpsImagePush"`
	LogMacLimitViolations            *string                                  `pulumi:"logMacLimitViolations"`
	MacAgingInterval                 *int                                     `pulumi:"macAgingInterval"`
	MacEventLogging                  *string                                  `pulumi:"macEventLogging"`
	MacRetentionPeriod               *int                                     `pulumi:"macRetentionPeriod"`
	MacViolationTimer                *int                                     `pulumi:"macViolationTimer"`
	QuarantineMode                   *string                                  `pulumi:"quarantineMode"`
	SnDnsResolution                  *string                                  `pulumi:"snDnsResolution"`
	UpdateUserDevice                 *string                                  `pulumi:"updateUserDevice"`
	Vdomparam                        *string                                  `pulumi:"vdomparam"`
	VlanAllMode                      *string                                  `pulumi:"vlanAllMode"`
	VlanIdentity                     *string                                  `pulumi:"vlanIdentity"`
	VlanOptimization                 *string                                  `pulumi:"vlanOptimization"`
}

type SwitchControllerGlobalState struct {
	AllowMultipleInterfaces          pulumi.StringPtrInput
	BounceQuarantinedLink            pulumi.StringPtrInput
	CustomCommands                   SwitchControllerGlobalCustomCommandArrayInput
	DefaultVirtualSwitchVlan         pulumi.StringPtrInput
	DhcpOption82CircuitId            pulumi.StringPtrInput
	DhcpOption82Format               pulumi.StringPtrInput
	DhcpOption82RemoteId             pulumi.StringPtrInput
	DhcpServerAccessList             pulumi.StringPtrInput
	DhcpSnoopClientDbExp             pulumi.IntPtrInput
	DhcpSnoopClientReq               pulumi.StringPtrInput
	DhcpSnoopDbPerPortLearnLimit     pulumi.IntPtrInput
	DisableDiscoveries               SwitchControllerGlobalDisableDiscoveryArrayInput
	DynamicSortSubtable              pulumi.StringPtrInput
	FipsEnforce                      pulumi.StringPtrInput
	FirmwareProvisionOnAuthorization pulumi.StringPtrInput
	GetAllTables                     pulumi.StringPtrInput
	HttpsImagePush                   pulumi.StringPtrInput
	LogMacLimitViolations            pulumi.StringPtrInput
	MacAgingInterval                 pulumi.IntPtrInput
	MacEventLogging                  pulumi.StringPtrInput
	MacRetentionPeriod               pulumi.IntPtrInput
	MacViolationTimer                pulumi.IntPtrInput
	QuarantineMode                   pulumi.StringPtrInput
	SnDnsResolution                  pulumi.StringPtrInput
	UpdateUserDevice                 pulumi.StringPtrInput
	Vdomparam                        pulumi.StringPtrInput
	VlanAllMode                      pulumi.StringPtrInput
	VlanIdentity                     pulumi.StringPtrInput
	VlanOptimization                 pulumi.StringPtrInput
}

func (SwitchControllerGlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerGlobalState)(nil)).Elem()
}

type switchControllerGlobalArgs struct {
	AllowMultipleInterfaces          *string                                  `pulumi:"allowMultipleInterfaces"`
	BounceQuarantinedLink            *string                                  `pulumi:"bounceQuarantinedLink"`
	CustomCommands                   []SwitchControllerGlobalCustomCommand    `pulumi:"customCommands"`
	DefaultVirtualSwitchVlan         *string                                  `pulumi:"defaultVirtualSwitchVlan"`
	DhcpOption82CircuitId            *string                                  `pulumi:"dhcpOption82CircuitId"`
	DhcpOption82Format               *string                                  `pulumi:"dhcpOption82Format"`
	DhcpOption82RemoteId             *string                                  `pulumi:"dhcpOption82RemoteId"`
	DhcpServerAccessList             *string                                  `pulumi:"dhcpServerAccessList"`
	DhcpSnoopClientDbExp             *int                                     `pulumi:"dhcpSnoopClientDbExp"`
	DhcpSnoopClientReq               *string                                  `pulumi:"dhcpSnoopClientReq"`
	DhcpSnoopDbPerPortLearnLimit     *int                                     `pulumi:"dhcpSnoopDbPerPortLearnLimit"`
	DisableDiscoveries               []SwitchControllerGlobalDisableDiscovery `pulumi:"disableDiscoveries"`
	DynamicSortSubtable              *string                                  `pulumi:"dynamicSortSubtable"`
	FipsEnforce                      *string                                  `pulumi:"fipsEnforce"`
	FirmwareProvisionOnAuthorization *string                                  `pulumi:"firmwareProvisionOnAuthorization"`
	GetAllTables                     *string                                  `pulumi:"getAllTables"`
	HttpsImagePush                   *string                                  `pulumi:"httpsImagePush"`
	LogMacLimitViolations            *string                                  `pulumi:"logMacLimitViolations"`
	MacAgingInterval                 *int                                     `pulumi:"macAgingInterval"`
	MacEventLogging                  *string                                  `pulumi:"macEventLogging"`
	MacRetentionPeriod               *int                                     `pulumi:"macRetentionPeriod"`
	MacViolationTimer                *int                                     `pulumi:"macViolationTimer"`
	QuarantineMode                   *string                                  `pulumi:"quarantineMode"`
	SnDnsResolution                  *string                                  `pulumi:"snDnsResolution"`
	UpdateUserDevice                 *string                                  `pulumi:"updateUserDevice"`
	Vdomparam                        *string                                  `pulumi:"vdomparam"`
	VlanAllMode                      *string                                  `pulumi:"vlanAllMode"`
	VlanIdentity                     *string                                  `pulumi:"vlanIdentity"`
	VlanOptimization                 *string                                  `pulumi:"vlanOptimization"`
}

// The set of arguments for constructing a SwitchControllerGlobal resource.
type SwitchControllerGlobalArgs struct {
	AllowMultipleInterfaces          pulumi.StringPtrInput
	BounceQuarantinedLink            pulumi.StringPtrInput
	CustomCommands                   SwitchControllerGlobalCustomCommandArrayInput
	DefaultVirtualSwitchVlan         pulumi.StringPtrInput
	DhcpOption82CircuitId            pulumi.StringPtrInput
	DhcpOption82Format               pulumi.StringPtrInput
	DhcpOption82RemoteId             pulumi.StringPtrInput
	DhcpServerAccessList             pulumi.StringPtrInput
	DhcpSnoopClientDbExp             pulumi.IntPtrInput
	DhcpSnoopClientReq               pulumi.StringPtrInput
	DhcpSnoopDbPerPortLearnLimit     pulumi.IntPtrInput
	DisableDiscoveries               SwitchControllerGlobalDisableDiscoveryArrayInput
	DynamicSortSubtable              pulumi.StringPtrInput
	FipsEnforce                      pulumi.StringPtrInput
	FirmwareProvisionOnAuthorization pulumi.StringPtrInput
	GetAllTables                     pulumi.StringPtrInput
	HttpsImagePush                   pulumi.StringPtrInput
	LogMacLimitViolations            pulumi.StringPtrInput
	MacAgingInterval                 pulumi.IntPtrInput
	MacEventLogging                  pulumi.StringPtrInput
	MacRetentionPeriod               pulumi.IntPtrInput
	MacViolationTimer                pulumi.IntPtrInput
	QuarantineMode                   pulumi.StringPtrInput
	SnDnsResolution                  pulumi.StringPtrInput
	UpdateUserDevice                 pulumi.StringPtrInput
	Vdomparam                        pulumi.StringPtrInput
	VlanAllMode                      pulumi.StringPtrInput
	VlanIdentity                     pulumi.StringPtrInput
	VlanOptimization                 pulumi.StringPtrInput
}

func (SwitchControllerGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerGlobalArgs)(nil)).Elem()
}

type SwitchControllerGlobalInput interface {
	pulumi.Input

	ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput
	ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput
}

func (*SwitchControllerGlobal) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerGlobal)(nil)).Elem()
}

func (i *SwitchControllerGlobal) ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput {
	return i.ToSwitchControllerGlobalOutputWithContext(context.Background())
}

func (i *SwitchControllerGlobal) ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalOutput)
}

func (i *SwitchControllerGlobal) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerGlobal] {
	return pulumix.Output[*SwitchControllerGlobal]{
		OutputState: i.ToSwitchControllerGlobalOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerGlobalArrayInput is an input type that accepts SwitchControllerGlobalArray and SwitchControllerGlobalArrayOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalArrayInput` via:
//
//	SwitchControllerGlobalArray{ SwitchControllerGlobalArgs{...} }
type SwitchControllerGlobalArrayInput interface {
	pulumi.Input

	ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput
	ToSwitchControllerGlobalArrayOutputWithContext(context.Context) SwitchControllerGlobalArrayOutput
}

type SwitchControllerGlobalArray []SwitchControllerGlobalInput

func (SwitchControllerGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerGlobal)(nil)).Elem()
}

func (i SwitchControllerGlobalArray) ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput {
	return i.ToSwitchControllerGlobalArrayOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalArray) ToSwitchControllerGlobalArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalArrayOutput)
}

func (i SwitchControllerGlobalArray) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerGlobal] {
	return pulumix.Output[[]*SwitchControllerGlobal]{
		OutputState: i.ToSwitchControllerGlobalArrayOutputWithContext(ctx).OutputState,
	}
}

// SwitchControllerGlobalMapInput is an input type that accepts SwitchControllerGlobalMap and SwitchControllerGlobalMapOutput values.
// You can construct a concrete instance of `SwitchControllerGlobalMapInput` via:
//
//	SwitchControllerGlobalMap{ "key": SwitchControllerGlobalArgs{...} }
type SwitchControllerGlobalMapInput interface {
	pulumi.Input

	ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput
	ToSwitchControllerGlobalMapOutputWithContext(context.Context) SwitchControllerGlobalMapOutput
}

type SwitchControllerGlobalMap map[string]SwitchControllerGlobalInput

func (SwitchControllerGlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerGlobal)(nil)).Elem()
}

func (i SwitchControllerGlobalMap) ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput {
	return i.ToSwitchControllerGlobalMapOutputWithContext(context.Background())
}

func (i SwitchControllerGlobalMap) ToSwitchControllerGlobalMapOutputWithContext(ctx context.Context) SwitchControllerGlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerGlobalMapOutput)
}

func (i SwitchControllerGlobalMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerGlobal] {
	return pulumix.Output[map[string]*SwitchControllerGlobal]{
		OutputState: i.ToSwitchControllerGlobalMapOutputWithContext(ctx).OutputState,
	}
}

type SwitchControllerGlobalOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalOutput) ToSwitchControllerGlobalOutput() SwitchControllerGlobalOutput {
	return o
}

func (o SwitchControllerGlobalOutput) ToSwitchControllerGlobalOutputWithContext(ctx context.Context) SwitchControllerGlobalOutput {
	return o
}

func (o SwitchControllerGlobalOutput) ToOutput(ctx context.Context) pulumix.Output[*SwitchControllerGlobal] {
	return pulumix.Output[*SwitchControllerGlobal]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalOutput) AllowMultipleInterfaces() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.AllowMultipleInterfaces }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) BounceQuarantinedLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.BounceQuarantinedLink }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) CustomCommands() SwitchControllerGlobalCustomCommandArrayOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) SwitchControllerGlobalCustomCommandArrayOutput {
		return v.CustomCommands
	}).(SwitchControllerGlobalCustomCommandArrayOutput)
}

func (o SwitchControllerGlobalOutput) DefaultVirtualSwitchVlan() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DefaultVirtualSwitchVlan }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpOption82CircuitId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DhcpOption82CircuitId }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpOption82Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DhcpOption82Format }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpOption82RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DhcpOption82RemoteId }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpServerAccessList() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DhcpServerAccessList }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpSnoopClientDbExp() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.IntOutput { return v.DhcpSnoopClientDbExp }).(pulumi.IntOutput)
}

func (o SwitchControllerGlobalOutput) DhcpSnoopClientReq() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.DhcpSnoopClientReq }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) DhcpSnoopDbPerPortLearnLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.IntOutput { return v.DhcpSnoopDbPerPortLearnLimit }).(pulumi.IntOutput)
}

func (o SwitchControllerGlobalOutput) DisableDiscoveries() SwitchControllerGlobalDisableDiscoveryArrayOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) SwitchControllerGlobalDisableDiscoveryArrayOutput {
		return v.DisableDiscoveries
	}).(SwitchControllerGlobalDisableDiscoveryArrayOutput)
}

func (o SwitchControllerGlobalOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerGlobalOutput) FipsEnforce() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.FipsEnforce }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) FirmwareProvisionOnAuthorization() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.FirmwareProvisionOnAuthorization }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerGlobalOutput) HttpsImagePush() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.HttpsImagePush }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) LogMacLimitViolations() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.LogMacLimitViolations }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) MacAgingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.IntOutput { return v.MacAgingInterval }).(pulumi.IntOutput)
}

func (o SwitchControllerGlobalOutput) MacEventLogging() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.MacEventLogging }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) MacRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.IntOutput { return v.MacRetentionPeriod }).(pulumi.IntOutput)
}

func (o SwitchControllerGlobalOutput) MacViolationTimer() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.IntOutput { return v.MacViolationTimer }).(pulumi.IntOutput)
}

func (o SwitchControllerGlobalOutput) QuarantineMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.QuarantineMode }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) SnDnsResolution() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.SnDnsResolution }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) UpdateUserDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.UpdateUserDevice }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerGlobalOutput) VlanAllMode() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.VlanAllMode }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) VlanIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.VlanIdentity }).(pulumi.StringOutput)
}

func (o SwitchControllerGlobalOutput) VlanOptimization() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerGlobal) pulumi.StringOutput { return v.VlanOptimization }).(pulumi.StringOutput)
}

type SwitchControllerGlobalArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalArrayOutput) ToSwitchControllerGlobalArrayOutput() SwitchControllerGlobalArrayOutput {
	return o
}

func (o SwitchControllerGlobalArrayOutput) ToSwitchControllerGlobalArrayOutputWithContext(ctx context.Context) SwitchControllerGlobalArrayOutput {
	return o
}

func (o SwitchControllerGlobalArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SwitchControllerGlobal] {
	return pulumix.Output[[]*SwitchControllerGlobal]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalArrayOutput) Index(i pulumi.IntInput) SwitchControllerGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerGlobal {
		return vs[0].([]*SwitchControllerGlobal)[vs[1].(int)]
	}).(SwitchControllerGlobalOutput)
}

type SwitchControllerGlobalMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerGlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerGlobal)(nil)).Elem()
}

func (o SwitchControllerGlobalMapOutput) ToSwitchControllerGlobalMapOutput() SwitchControllerGlobalMapOutput {
	return o
}

func (o SwitchControllerGlobalMapOutput) ToSwitchControllerGlobalMapOutputWithContext(ctx context.Context) SwitchControllerGlobalMapOutput {
	return o
}

func (o SwitchControllerGlobalMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SwitchControllerGlobal] {
	return pulumix.Output[map[string]*SwitchControllerGlobal]{
		OutputState: o.OutputState,
	}
}

func (o SwitchControllerGlobalMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerGlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerGlobal {
		return vs[0].(map[string]*SwitchControllerGlobal)[vs[1].(string)]
	}).(SwitchControllerGlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalInput)(nil)).Elem(), &SwitchControllerGlobal{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalArrayInput)(nil)).Elem(), SwitchControllerGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerGlobalMapInput)(nil)).Elem(), SwitchControllerGlobalMap{})
	pulumi.RegisterOutputType(SwitchControllerGlobalOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerGlobalMapOutput{})
}
