// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemReplacemsgSslvpn struct {
	pulumi.CustomResourceState

	Buffer    pulumi.StringPtrOutput `pulumi:"buffer"`
	Format    pulumi.StringOutput    `pulumi:"format"`
	Header    pulumi.StringOutput    `pulumi:"header"`
	MsgType   pulumi.StringOutput    `pulumi:"msgType"`
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSystemReplacemsgSslvpn registers a new resource with the given unique name, arguments, and options.
func NewSystemReplacemsgSslvpn(ctx *pulumi.Context,
	name string, args *SystemReplacemsgSslvpnArgs, opts ...pulumi.ResourceOption) (*SystemReplacemsgSslvpn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MsgType == nil {
		return nil, errors.New("invalid value for required argument 'MsgType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemReplacemsgSslvpn
	err := ctx.RegisterResource("fortios:index/systemReplacemsgSslvpn:SystemReplacemsgSslvpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemReplacemsgSslvpn gets an existing SystemReplacemsgSslvpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemReplacemsgSslvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemReplacemsgSslvpnState, opts ...pulumi.ResourceOption) (*SystemReplacemsgSslvpn, error) {
	var resource SystemReplacemsgSslvpn
	err := ctx.ReadResource("fortios:index/systemReplacemsgSslvpn:SystemReplacemsgSslvpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemReplacemsgSslvpn resources.
type systemReplacemsgSslvpnState struct {
	Buffer    *string `pulumi:"buffer"`
	Format    *string `pulumi:"format"`
	Header    *string `pulumi:"header"`
	MsgType   *string `pulumi:"msgType"`
	Vdomparam *string `pulumi:"vdomparam"`
}

type SystemReplacemsgSslvpnState struct {
	Buffer    pulumi.StringPtrInput
	Format    pulumi.StringPtrInput
	Header    pulumi.StringPtrInput
	MsgType   pulumi.StringPtrInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgSslvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgSslvpnState)(nil)).Elem()
}

type systemReplacemsgSslvpnArgs struct {
	Buffer    *string `pulumi:"buffer"`
	Format    *string `pulumi:"format"`
	Header    *string `pulumi:"header"`
	MsgType   string  `pulumi:"msgType"`
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemReplacemsgSslvpn resource.
type SystemReplacemsgSslvpnArgs struct {
	Buffer    pulumi.StringPtrInput
	Format    pulumi.StringPtrInput
	Header    pulumi.StringPtrInput
	MsgType   pulumi.StringInput
	Vdomparam pulumi.StringPtrInput
}

func (SystemReplacemsgSslvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemReplacemsgSslvpnArgs)(nil)).Elem()
}

type SystemReplacemsgSslvpnInput interface {
	pulumi.Input

	ToSystemReplacemsgSslvpnOutput() SystemReplacemsgSslvpnOutput
	ToSystemReplacemsgSslvpnOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnOutput
}

func (*SystemReplacemsgSslvpn) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgSslvpn)(nil)).Elem()
}

func (i *SystemReplacemsgSslvpn) ToSystemReplacemsgSslvpnOutput() SystemReplacemsgSslvpnOutput {
	return i.ToSystemReplacemsgSslvpnOutputWithContext(context.Background())
}

func (i *SystemReplacemsgSslvpn) ToSystemReplacemsgSslvpnOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgSslvpnOutput)
}

// SystemReplacemsgSslvpnArrayInput is an input type that accepts SystemReplacemsgSslvpnArray and SystemReplacemsgSslvpnArrayOutput values.
// You can construct a concrete instance of `SystemReplacemsgSslvpnArrayInput` via:
//
//	SystemReplacemsgSslvpnArray{ SystemReplacemsgSslvpnArgs{...} }
type SystemReplacemsgSslvpnArrayInput interface {
	pulumi.Input

	ToSystemReplacemsgSslvpnArrayOutput() SystemReplacemsgSslvpnArrayOutput
	ToSystemReplacemsgSslvpnArrayOutputWithContext(context.Context) SystemReplacemsgSslvpnArrayOutput
}

type SystemReplacemsgSslvpnArray []SystemReplacemsgSslvpnInput

func (SystemReplacemsgSslvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgSslvpn)(nil)).Elem()
}

func (i SystemReplacemsgSslvpnArray) ToSystemReplacemsgSslvpnArrayOutput() SystemReplacemsgSslvpnArrayOutput {
	return i.ToSystemReplacemsgSslvpnArrayOutputWithContext(context.Background())
}

func (i SystemReplacemsgSslvpnArray) ToSystemReplacemsgSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgSslvpnArrayOutput)
}

// SystemReplacemsgSslvpnMapInput is an input type that accepts SystemReplacemsgSslvpnMap and SystemReplacemsgSslvpnMapOutput values.
// You can construct a concrete instance of `SystemReplacemsgSslvpnMapInput` via:
//
//	SystemReplacemsgSslvpnMap{ "key": SystemReplacemsgSslvpnArgs{...} }
type SystemReplacemsgSslvpnMapInput interface {
	pulumi.Input

	ToSystemReplacemsgSslvpnMapOutput() SystemReplacemsgSslvpnMapOutput
	ToSystemReplacemsgSslvpnMapOutputWithContext(context.Context) SystemReplacemsgSslvpnMapOutput
}

type SystemReplacemsgSslvpnMap map[string]SystemReplacemsgSslvpnInput

func (SystemReplacemsgSslvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgSslvpn)(nil)).Elem()
}

func (i SystemReplacemsgSslvpnMap) ToSystemReplacemsgSslvpnMapOutput() SystemReplacemsgSslvpnMapOutput {
	return i.ToSystemReplacemsgSslvpnMapOutputWithContext(context.Background())
}

func (i SystemReplacemsgSslvpnMap) ToSystemReplacemsgSslvpnMapOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemReplacemsgSslvpnMapOutput)
}

type SystemReplacemsgSslvpnOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgSslvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemReplacemsgSslvpn)(nil)).Elem()
}

func (o SystemReplacemsgSslvpnOutput) ToSystemReplacemsgSslvpnOutput() SystemReplacemsgSslvpnOutput {
	return o
}

func (o SystemReplacemsgSslvpnOutput) ToSystemReplacemsgSslvpnOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnOutput {
	return o
}

func (o SystemReplacemsgSslvpnOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemReplacemsgSslvpn) pulumi.StringPtrOutput { return v.Buffer }).(pulumi.StringPtrOutput)
}

func (o SystemReplacemsgSslvpnOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgSslvpn) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

func (o SystemReplacemsgSslvpnOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgSslvpn) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

func (o SystemReplacemsgSslvpnOutput) MsgType() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemReplacemsgSslvpn) pulumi.StringOutput { return v.MsgType }).(pulumi.StringOutput)
}

func (o SystemReplacemsgSslvpnOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemReplacemsgSslvpn) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemReplacemsgSslvpnArrayOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgSslvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemReplacemsgSslvpn)(nil)).Elem()
}

func (o SystemReplacemsgSslvpnArrayOutput) ToSystemReplacemsgSslvpnArrayOutput() SystemReplacemsgSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsgSslvpnArrayOutput) ToSystemReplacemsgSslvpnArrayOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnArrayOutput {
	return o
}

func (o SystemReplacemsgSslvpnArrayOutput) Index(i pulumi.IntInput) SystemReplacemsgSslvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemReplacemsgSslvpn {
		return vs[0].([]*SystemReplacemsgSslvpn)[vs[1].(int)]
	}).(SystemReplacemsgSslvpnOutput)
}

type SystemReplacemsgSslvpnMapOutput struct{ *pulumi.OutputState }

func (SystemReplacemsgSslvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemReplacemsgSslvpn)(nil)).Elem()
}

func (o SystemReplacemsgSslvpnMapOutput) ToSystemReplacemsgSslvpnMapOutput() SystemReplacemsgSslvpnMapOutput {
	return o
}

func (o SystemReplacemsgSslvpnMapOutput) ToSystemReplacemsgSslvpnMapOutputWithContext(ctx context.Context) SystemReplacemsgSslvpnMapOutput {
	return o
}

func (o SystemReplacemsgSslvpnMapOutput) MapIndex(k pulumi.StringInput) SystemReplacemsgSslvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemReplacemsgSslvpn {
		return vs[0].(map[string]*SystemReplacemsgSslvpn)[vs[1].(string)]
	}).(SystemReplacemsgSslvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgSslvpnInput)(nil)).Elem(), &SystemReplacemsgSslvpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgSslvpnArrayInput)(nil)).Elem(), SystemReplacemsgSslvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemReplacemsgSslvpnMapInput)(nil)).Elem(), SystemReplacemsgSslvpnMap{})
	pulumi.RegisterOutputType(SystemReplacemsgSslvpnOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgSslvpnArrayOutput{})
	pulumi.RegisterOutputType(SystemReplacemsgSslvpnMapOutput{})
}
