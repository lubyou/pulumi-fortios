// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallIppool6 struct {
	pulumi.CustomResourceState

	AddNat46Route pulumi.StringOutput    `pulumi:"addNat46Route"`
	Comments      pulumi.StringPtrOutput `pulumi:"comments"`
	Endip         pulumi.StringOutput    `pulumi:"endip"`
	Name          pulumi.StringOutput    `pulumi:"name"`
	Nat46         pulumi.StringOutput    `pulumi:"nat46"`
	Startip       pulumi.StringOutput    `pulumi:"startip"`
	Vdomparam     pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallIppool6 registers a new resource with the given unique name, arguments, and options.
func NewFirewallIppool6(ctx *pulumi.Context,
	name string, args *FirewallIppool6Args, opts ...pulumi.ResourceOption) (*FirewallIppool6, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endip == nil {
		return nil, errors.New("invalid value for required argument 'Endip'")
	}
	if args.Startip == nil {
		return nil, errors.New("invalid value for required argument 'Startip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallIppool6
	err := ctx.RegisterResource("fortios:index/firewallIppool6:FirewallIppool6", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallIppool6 gets an existing FirewallIppool6 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallIppool6(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallIppool6State, opts ...pulumi.ResourceOption) (*FirewallIppool6, error) {
	var resource FirewallIppool6
	err := ctx.ReadResource("fortios:index/firewallIppool6:FirewallIppool6", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallIppool6 resources.
type firewallIppool6State struct {
	AddNat46Route *string `pulumi:"addNat46Route"`
	Comments      *string `pulumi:"comments"`
	Endip         *string `pulumi:"endip"`
	Name          *string `pulumi:"name"`
	Nat46         *string `pulumi:"nat46"`
	Startip       *string `pulumi:"startip"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

type FirewallIppool6State struct {
	AddNat46Route pulumi.StringPtrInput
	Comments      pulumi.StringPtrInput
	Endip         pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Nat46         pulumi.StringPtrInput
	Startip       pulumi.StringPtrInput
	Vdomparam     pulumi.StringPtrInput
}

func (FirewallIppool6State) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIppool6State)(nil)).Elem()
}

type firewallIppool6Args struct {
	AddNat46Route *string `pulumi:"addNat46Route"`
	Comments      *string `pulumi:"comments"`
	Endip         string  `pulumi:"endip"`
	Name          *string `pulumi:"name"`
	Nat46         *string `pulumi:"nat46"`
	Startip       string  `pulumi:"startip"`
	Vdomparam     *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallIppool6 resource.
type FirewallIppool6Args struct {
	AddNat46Route pulumi.StringPtrInput
	Comments      pulumi.StringPtrInput
	Endip         pulumi.StringInput
	Name          pulumi.StringPtrInput
	Nat46         pulumi.StringPtrInput
	Startip       pulumi.StringInput
	Vdomparam     pulumi.StringPtrInput
}

func (FirewallIppool6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallIppool6Args)(nil)).Elem()
}

type FirewallIppool6Input interface {
	pulumi.Input

	ToFirewallIppool6Output() FirewallIppool6Output
	ToFirewallIppool6OutputWithContext(ctx context.Context) FirewallIppool6Output
}

func (*FirewallIppool6) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIppool6)(nil)).Elem()
}

func (i *FirewallIppool6) ToFirewallIppool6Output() FirewallIppool6Output {
	return i.ToFirewallIppool6OutputWithContext(context.Background())
}

func (i *FirewallIppool6) ToFirewallIppool6OutputWithContext(ctx context.Context) FirewallIppool6Output {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIppool6Output)
}

func (i *FirewallIppool6) ToOutput(ctx context.Context) pulumix.Output[*FirewallIppool6] {
	return pulumix.Output[*FirewallIppool6]{
		OutputState: i.ToFirewallIppool6OutputWithContext(ctx).OutputState,
	}
}

// FirewallIppool6ArrayInput is an input type that accepts FirewallIppool6Array and FirewallIppool6ArrayOutput values.
// You can construct a concrete instance of `FirewallIppool6ArrayInput` via:
//
//	FirewallIppool6Array{ FirewallIppool6Args{...} }
type FirewallIppool6ArrayInput interface {
	pulumi.Input

	ToFirewallIppool6ArrayOutput() FirewallIppool6ArrayOutput
	ToFirewallIppool6ArrayOutputWithContext(context.Context) FirewallIppool6ArrayOutput
}

type FirewallIppool6Array []FirewallIppool6Input

func (FirewallIppool6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIppool6)(nil)).Elem()
}

func (i FirewallIppool6Array) ToFirewallIppool6ArrayOutput() FirewallIppool6ArrayOutput {
	return i.ToFirewallIppool6ArrayOutputWithContext(context.Background())
}

func (i FirewallIppool6Array) ToFirewallIppool6ArrayOutputWithContext(ctx context.Context) FirewallIppool6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIppool6ArrayOutput)
}

func (i FirewallIppool6Array) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallIppool6] {
	return pulumix.Output[[]*FirewallIppool6]{
		OutputState: i.ToFirewallIppool6ArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallIppool6MapInput is an input type that accepts FirewallIppool6Map and FirewallIppool6MapOutput values.
// You can construct a concrete instance of `FirewallIppool6MapInput` via:
//
//	FirewallIppool6Map{ "key": FirewallIppool6Args{...} }
type FirewallIppool6MapInput interface {
	pulumi.Input

	ToFirewallIppool6MapOutput() FirewallIppool6MapOutput
	ToFirewallIppool6MapOutputWithContext(context.Context) FirewallIppool6MapOutput
}

type FirewallIppool6Map map[string]FirewallIppool6Input

func (FirewallIppool6Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIppool6)(nil)).Elem()
}

func (i FirewallIppool6Map) ToFirewallIppool6MapOutput() FirewallIppool6MapOutput {
	return i.ToFirewallIppool6MapOutputWithContext(context.Background())
}

func (i FirewallIppool6Map) ToFirewallIppool6MapOutputWithContext(ctx context.Context) FirewallIppool6MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIppool6MapOutput)
}

func (i FirewallIppool6Map) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallIppool6] {
	return pulumix.Output[map[string]*FirewallIppool6]{
		OutputState: i.ToFirewallIppool6MapOutputWithContext(ctx).OutputState,
	}
}

type FirewallIppool6Output struct{ *pulumi.OutputState }

func (FirewallIppool6Output) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallIppool6)(nil)).Elem()
}

func (o FirewallIppool6Output) ToFirewallIppool6Output() FirewallIppool6Output {
	return o
}

func (o FirewallIppool6Output) ToFirewallIppool6OutputWithContext(ctx context.Context) FirewallIppool6Output {
	return o
}

func (o FirewallIppool6Output) ToOutput(ctx context.Context) pulumix.Output[*FirewallIppool6] {
	return pulumix.Output[*FirewallIppool6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallIppool6Output) AddNat46Route() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringOutput { return v.AddNat46Route }).(pulumi.StringOutput)
}

func (o FirewallIppool6Output) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallIppool6Output) Endip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringOutput { return v.Endip }).(pulumi.StringOutput)
}

func (o FirewallIppool6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallIppool6Output) Nat46() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringOutput { return v.Nat46 }).(pulumi.StringOutput)
}

func (o FirewallIppool6Output) Startip() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringOutput { return v.Startip }).(pulumi.StringOutput)
}

func (o FirewallIppool6Output) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallIppool6) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallIppool6ArrayOutput struct{ *pulumi.OutputState }

func (FirewallIppool6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallIppool6)(nil)).Elem()
}

func (o FirewallIppool6ArrayOutput) ToFirewallIppool6ArrayOutput() FirewallIppool6ArrayOutput {
	return o
}

func (o FirewallIppool6ArrayOutput) ToFirewallIppool6ArrayOutputWithContext(ctx context.Context) FirewallIppool6ArrayOutput {
	return o
}

func (o FirewallIppool6ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallIppool6] {
	return pulumix.Output[[]*FirewallIppool6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallIppool6ArrayOutput) Index(i pulumi.IntInput) FirewallIppool6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallIppool6 {
		return vs[0].([]*FirewallIppool6)[vs[1].(int)]
	}).(FirewallIppool6Output)
}

type FirewallIppool6MapOutput struct{ *pulumi.OutputState }

func (FirewallIppool6MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallIppool6)(nil)).Elem()
}

func (o FirewallIppool6MapOutput) ToFirewallIppool6MapOutput() FirewallIppool6MapOutput {
	return o
}

func (o FirewallIppool6MapOutput) ToFirewallIppool6MapOutputWithContext(ctx context.Context) FirewallIppool6MapOutput {
	return o
}

func (o FirewallIppool6MapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallIppool6] {
	return pulumix.Output[map[string]*FirewallIppool6]{
		OutputState: o.OutputState,
	}
}

func (o FirewallIppool6MapOutput) MapIndex(k pulumi.StringInput) FirewallIppool6Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallIppool6 {
		return vs[0].(map[string]*FirewallIppool6)[vs[1].(string)]
	}).(FirewallIppool6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIppool6Input)(nil)).Elem(), &FirewallIppool6{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIppool6ArrayInput)(nil)).Elem(), FirewallIppool6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIppool6MapInput)(nil)).Elem(), FirewallIppool6Map{})
	pulumi.RegisterOutputType(FirewallIppool6Output{})
	pulumi.RegisterOutputType(FirewallIppool6ArrayOutput{})
	pulumi.RegisterOutputType(FirewallIppool6MapOutput{})
}
