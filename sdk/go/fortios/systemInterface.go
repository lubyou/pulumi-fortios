// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure interfaces.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := fortios.NewSystemInterface(ctx, "trname", &fortios.SystemInterfaceArgs{
// 			Algorithm:   pulumi.String("L4"),
// 			Defaultgw:   pulumi.String("enable"),
// 			Description: pulumi.String("Created by Terraform Provider for FortiOS"),
// 			Distance:    pulumi.Int(5),
// 			Ip:          pulumi.String("0.0.0.0 0.0.0.0"),
// 			Ipv6: &fortios.SystemInterfaceIpv6Args{
// 				NdMode: pulumi.String("basic"),
// 			},
// 			Mode:        pulumi.String("dhcp"),
// 			Mtu:         pulumi.Int(1500),
// 			MtuOverride: pulumi.String("disable"),
// 			SnmpIndex:   pulumi.Int(3),
// 			Type:        pulumi.String("physical"),
// 			Vdom:        pulumi.String("root"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// System Interface can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/systemInterface:SystemInterface labelname {{name}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SystemInterface struct {
	pulumi.CustomResourceState

	// PPPoE server name.
	AcName pulumi.StringOutput `pulumi:"acName"`
	// Aggregate interface.
	Aggregate pulumi.StringOutput `pulumi:"aggregate"`
	// Frame distribution algorithm. Valid values: `L2`, `L3`, `L4`.
	Algorithm pulumi.StringOutput `pulumi:"algorithm"`
	// Alias will be displayed with the interface name to make it easier to distinguish.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringOutput `pulumi:"allowaccess"`
	// Enable/disable automatic registration of unknown FortiAP devices. Valid values: `enable`, `disable`.
	ApDiscover pulumi.StringOutput `pulumi:"apDiscover"`
	// Enable/disable ARP forwarding. Valid values: `enable`, `disable`.
	Arpforward pulumi.StringOutput `pulumi:"arpforward"`
	// PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	AuthType pulumi.StringOutput `pulumi:"authType"`
	// Enable/disable automatic authorization of dedicated Fortinet extension device on this interface. Valid values: `enable`, `disable`.
	AutoAuthExtensionDevice pulumi.StringOutput `pulumi:"autoAuthExtensionDevice"`
	// Indicates whether the interface is automatically created by FortiGate, for example, created during the VPN creation process. If it is, set it to "auto", else keep it empty.
	Autogenerated pulumi.StringOutput `pulumi:"autogenerated"`
	// Bandwidth measure time
	BandwidthMeasureTime pulumi.IntOutput `pulumi:"bandwidthMeasureTime"`
	// Bidirectional Forwarding Detection (BFD) settings. Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringOutput `pulumi:"bfd"`
	// BFD desired minimal transmit interval.
	BfdDesiredMinTx pulumi.IntOutput `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntOutput `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval.
	BfdRequiredMinRx pulumi.IntOutput `pulumi:"bfdRequiredMinRx"`
	// Enable/disable broadcasting FortiClient discovery messages. Valid values: `enable`, `disable`.
	BroadcastForticlientDiscovery pulumi.StringOutput `pulumi:"broadcastForticlientDiscovery"`
	// Enable/disable broadcast forwarding. Valid values: `enable`, `disable`.
	BroadcastForward pulumi.StringOutput `pulumi:"broadcastForward"`
	// Enable/disable captive portal.
	CaptivePortal pulumi.IntOutput `pulumi:"captivePortal"`
	// CLI connection status.
	CliConnStatus pulumi.IntOutput `pulumi:"cliConnStatus"`
	// DHCP client options. The structure of `clientOptions` block is documented below.
	ClientOptions SystemInterfaceClientOptionArrayOutput `pulumi:"clientOptions"`
	// Color of icon on the GUI.
	Color pulumi.IntOutput `pulumi:"color"`
	// Configure interface for single purpose. Valid values: `none`, `management`.
	DedicatedTo pulumi.StringOutput `pulumi:"dedicatedTo"`
	// Enable to get the gateway IP from the DHCP or PPPoE server. Valid values: `enable`, `disable`.
	Defaultgw pulumi.StringOutput `pulumi:"defaultgw"`
	// Description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// MTU of detected peer (0 - 4294967295).
	DetectedPeerMtu pulumi.IntOutput `pulumi:"detectedPeerMtu"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol pulumi.StringOutput `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringOutput `pulumi:"detectserver"`
	// Device access list.
	DeviceAccessList pulumi.StringOutput `pulumi:"deviceAccessList"`
	// Enable/disable passively gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentification pulumi.StringOutput `pulumi:"deviceIdentification"`
	// Enable/disable active gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentificationActiveScan pulumi.StringOutput `pulumi:"deviceIdentificationActiveScan"`
	// Enable/disable inclusion of devices detected on this interface in network vulnerability scans. Valid values: `disable`, `enable`.
	DeviceNetscan pulumi.StringOutput `pulumi:"deviceNetscan"`
	// Enable/disable passive gathering of user identity information about users on this interface. Valid values: `enable`, `disable`.
	DeviceUserIdentification pulumi.StringOutput `pulumi:"deviceUserIdentification"`
	// Device Index.
	Devindex pulumi.IntOutput `pulumi:"devindex"`
	// DHCP client identifier.
	DhcpClientIdentifier pulumi.StringOutput `pulumi:"dhcpClientIdentifier"`
	// Enable/disable DHCP relay agent option. Valid values: `enable`, `disable`.
	DhcpRelayAgentOption pulumi.StringOutput `pulumi:"dhcpRelayAgentOption"`
	// Specify outgoing interface to reach server.
	DhcpRelayInterface pulumi.StringOutput `pulumi:"dhcpRelayInterface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	DhcpRelayInterfaceSelectMethod pulumi.StringOutput `pulumi:"dhcpRelayInterfaceSelectMethod"`
	// DHCP relay IP address.
	DhcpRelayIp pulumi.StringOutput `pulumi:"dhcpRelayIp"`
	// Enable/disable allowing this interface to act as a DHCP relay. Valid values: `disable`, `enable`.
	DhcpRelayService pulumi.StringOutput `pulumi:"dhcpRelayService"`
	// DHCP relay type (regular or IPsec). Valid values: `regular`, `ipsec`.
	DhcpRelayType pulumi.StringOutput `pulumi:"dhcpRelayType"`
	// DHCP renew time in seconds (300-604800), 0 means use the renew time provided by the server.
	DhcpRenewTime pulumi.IntOutput `pulumi:"dhcpRenewTime"`
	// Time in seconds to wait before retrying to start a PPPoE discovery, 0 means no timeout.
	DiscRetryTimeout pulumi.IntOutput `pulumi:"discRetryTimeout"`
	// Time in milliseconds to wait before sending a notification that this interface is down or disconnected.
	DisconnectThreshold pulumi.IntOutput `pulumi:"disconnectThreshold"`
	// Distance for routes learned through PPPoE or DHCP, lower distance indicates preferred route.
	Distance pulumi.IntOutput `pulumi:"distance"`
	// Enable/disable use DNS acquired by DHCP or PPPoE. Valid values: `enable`, `disable`.
	DnsServerOverride pulumi.StringOutput `pulumi:"dnsServerOverride"`
	// Enable/disable drop fragment packets. Valid values: `enable`, `disable`.
	DropFragment pulumi.StringOutput `pulumi:"dropFragment"`
	// Enable/disable drop overlapped fragment packets. Valid values: `enable`, `disable`.
	DropOverlappedFragment pulumi.StringOutput `pulumi:"dropOverlappedFragment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Outgoing traffic shaping profile.
	EgressShapingProfile pulumi.StringOutput `pulumi:"egressShapingProfile"`
	// Enable/disable endpoint compliance enforcement. Valid values: `enable`, `disable`.
	EndpointCompliance pulumi.StringOutput `pulumi:"endpointCompliance"`
	// Estimated maximum downstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedDownstreamBandwidth pulumi.IntOutput `pulumi:"estimatedDownstreamBandwidth"`
	// Estimated maximum upstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedUpstreamBandwidth pulumi.IntOutput `pulumi:"estimatedUpstreamBandwidth"`
	// Enable/disable the explicit FTP proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitFtpProxy pulumi.StringOutput `pulumi:"explicitFtpProxy"`
	// Enable/disable the explicit web proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitWebProxy pulumi.StringOutput `pulumi:"explicitWebProxy"`
	// Enable/disable identifying the interface as an external interface (which usually means it's connected to the Internet). Valid values: `enable`, `disable`.
	External pulumi.StringOutput `pulumi:"external"`
	// Action on extender when interface fail . Valid values: `soft-restart`, `hard-restart`, `reboot`.
	FailActionOnExtender pulumi.StringOutput `pulumi:"failActionOnExtender"`
	// Names of the FortiGate interfaces from which the link failure alert is sent for this interface. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemInterfaceFailAlertInterfaceArrayOutput `pulumi:"failAlertInterfaces"`
	// Select link-failed-signal or link-down method to alert about a failed link. Valid values: `link-failed-signal`, `link-down`.
	FailAlertMethod pulumi.StringOutput `pulumi:"failAlertMethod"`
	// Enable/disable fail detection features for this interface. Valid values: `enable`, `disable`.
	FailDetect pulumi.StringOutput `pulumi:"failDetect"`
	// Options for detecting that this interface has failed. Valid values: `detectserver`, `link-down`.
	FailDetectOption pulumi.StringOutput `pulumi:"failDetectOption"`
	// Enable/disable FortiHeartBeat (FortiTelemetry on GUI). Valid values: `enable`, `disable`.
	Fortiheartbeat pulumi.StringOutput `pulumi:"fortiheartbeat"`
	// Enable FortiLink to dedicate this interface to manage other Fortinet devices. Valid values: `enable`, `disable`.
	Fortilink pulumi.StringOutput `pulumi:"fortilink"`
	// fortilink split interface backup link.
	FortilinkBackupLink pulumi.IntOutput `pulumi:"fortilinkBackupLink"`
	// Protocol for FortiGate neighbor discovery. Valid values: `lldp`, `fortilink`.
	FortilinkNeighborDetect pulumi.StringOutput `pulumi:"fortilinkNeighborDetect"`
	// Enable/disable FortiLink split interface to connect member link to different FortiSwitch in stack for uplink redundancy. Valid values: `enable`, `disable`.
	FortilinkSplitInterface pulumi.StringOutput `pulumi:"fortilinkSplitInterface"`
	// Enable/disable FortiLink switch-stacking on this interface. Valid values: `enable`, `disable`.
	FortilinkStacking pulumi.StringOutput `pulumi:"fortilinkStacking"`
	// Transparent mode forward domain.
	ForwardDomain pulumi.IntOutput `pulumi:"forwardDomain"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect pulumi.StringOutput `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority pulumi.IntOutput `pulumi:"haPriority"`
	// Enable/disable ICMP accept redirect. Valid values: `enable`, `disable`.
	IcmpAcceptRedirect pulumi.StringOutput `pulumi:"icmpAcceptRedirect"`
	// Enable/disable ICMP send redirect. Valid values: `enable`, `disable`.
	IcmpSendRedirect pulumi.StringOutput `pulumi:"icmpSendRedirect"`
	// Enable/disable authentication for this interface. Valid values: `enable`, `disable`.
	IdentAccept pulumi.StringOutput `pulumi:"identAccept"`
	// PPPoE auto disconnect after idle timeout seconds, 0 means no timeout.
	IdleTimeout pulumi.IntOutput `pulumi:"idleTimeout"`
	// Bandwidth limit for incoming traffic (0 - 16776000 kbps), 0 means unlimited.
	Inbandwidth pulumi.IntOutput `pulumi:"inbandwidth"`
	// Incoming traffic shaping profile.
	IngressShapingProfile pulumi.StringOutput `pulumi:"ingressShapingProfile"`
	// Ingress Spillover threshold (0 - 16776000 kbps).
	IngressSpilloverThreshold pulumi.IntOutput `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Implicitly created.
	Internal pulumi.IntOutput `pulumi:"internal"`
	// Secondary IP address of the interface.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// Enable/disable automatic IP address assignment of this interface by FortiIPAM. Valid values: `enable`, `disable`.
	IpManagedByFortiipam pulumi.StringOutput `pulumi:"ipManagedByFortiipam"`
	// Enable/disable IP/MAC binding. Valid values: `enable`, `disable`.
	Ipmac pulumi.StringOutput `pulumi:"ipmac"`
	// Enable/disable the use of this interface as a one-armed sniffer. Valid values: `enable`, `disable`.
	IpsSnifferMode pulumi.StringOutput `pulumi:"ipsSnifferMode"`
	// Unnumbered IP used for PPPoE interfaces for which no unique local address is provided.
	Ipunnumbered pulumi.StringOutput `pulumi:"ipunnumbered"`
	// IPv6 of interface. The structure of `ipv6` block is documented below.
	Ipv6 SystemInterfaceIpv6PtrOutput `pulumi:"ipv6"`
	// Enable/disable l2 forwarding. Valid values: `enable`, `disable`.
	L2forward pulumi.StringOutput `pulumi:"l2forward"`
	// LACP HA slave. Valid values: `enable`, `disable`.
	LacpHaSlave pulumi.StringOutput `pulumi:"lacpHaSlave"`
	// LACP mode. Valid values: `static`, `passive`, `active`.
	LacpMode pulumi.StringOutput `pulumi:"lacpMode"`
	// How often the interface sends LACP messages. Valid values: `slow`, `fast`.
	LacpSpeed pulumi.StringOutput `pulumi:"lacpSpeed"`
	// Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.
	LcpEchoInterval pulumi.IntOutput `pulumi:"lcpEchoInterval"`
	// Maximum missed LCP echo messages before disconnect.
	LcpMaxEchoFails pulumi.IntOutput `pulumi:"lcpMaxEchoFails"`
	// Number of milliseconds to wait before considering a link is up.
	LinkUpDelay pulumi.IntOutput `pulumi:"linkUpDelay"`
	// LLDP-MED network policy profile.
	LldpNetworkPolicy pulumi.StringOutput `pulumi:"lldpNetworkPolicy"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception. Valid values: `enable`, `disable`, `vdom`.
	LldpReception pulumi.StringOutput `pulumi:"lldpReception"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission. Valid values: `enable`, `disable`, `vdom`.
	LldpTransmission pulumi.StringOutput `pulumi:"lldpTransmission"`
	// Change the interface's MAC address.
	Macaddr pulumi.StringOutput `pulumi:"macaddr"`
	// Available when FortiLink is enabled, used for managed devices through FortiLink interface. The structure of `managedDevice` block is documented below.
	ManagedDevices SystemInterfaceManagedDeviceArrayOutput `pulumi:"managedDevices"`
	// Number of IP addresses to be allocated by FortiIPAM and used by this FortiGate unit's DHCP server settings. Valid values: `256`, `512`, `1024`, `2048`, `4096`, `8192`, `16384`, `32768`, `65536`.
	ManagedSubnetworkSize pulumi.StringOutput `pulumi:"managedSubnetworkSize"`
	// High Availability in-band management IP address of this interface.
	ManagementIp pulumi.StringOutput `pulumi:"managementIp"`
	// Measured downstream bandwidth (kbps).
	MeasuredDownstreamBandwidth pulumi.IntOutput `pulumi:"measuredDownstreamBandwidth"`
	// Measured upstream bandwidth (kbps).
	MeasuredUpstreamBandwidth pulumi.IntOutput `pulumi:"measuredUpstreamBandwidth"`
	// Physical interfaces that belong to the aggregate or redundant interface. The structure of `member` block is documented below.
	Members SystemInterfaceMemberArrayOutput `pulumi:"members"`
	// Minimum number of aggregated ports that must be up.
	MinLinks pulumi.IntOutput `pulumi:"minLinks"`
	// Action to take when less than the configured minimum number of links are active. Valid values: `operational`, `administrative`.
	MinLinksDown pulumi.StringOutput `pulumi:"minLinksDown"`
	// Addressing mode (static, DHCP, PPPoE). Valid values: `static`, `dhcp`, `pppoe`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Enable monitoring bandwidth on this interface. Valid values: `enable`, `disable`.
	MonitorBandwidth pulumi.StringOutput `pulumi:"monitorBandwidth"`
	// MTU value for this interface.
	Mtu pulumi.IntOutput `pulumi:"mtu"`
	// Enable to set a custom MTU for this interface. Valid values: `enable`, `disable`.
	MtuOverride pulumi.StringOutput `pulumi:"mtuOverride"`
	// Tag name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable/disable NDISC forwarding. Valid values: `enable`, `disable`.
	Ndiscforward pulumi.StringOutput `pulumi:"ndiscforward"`
	// Enable/disable NETBIOS forwarding. Valid values: `disable`, `enable`.
	NetbiosForward pulumi.StringOutput `pulumi:"netbiosForward"`
	// Enable/disable NetFlow on this interface and set the data that NetFlow collects (rx, tx, or both). Valid values: `disable`, `tx`, `rx`, `both`.
	NetflowSampler pulumi.StringOutput `pulumi:"netflowSampler"`
	// Bandwidth limit for outgoing traffic (0 - 16776000 kbps).
	Outbandwidth pulumi.IntOutput `pulumi:"outbandwidth"`
	// PPPoE Active Discovery Terminate (PADT) used to terminate sessions after an idle time.
	PadtRetryTimeout pulumi.IntOutput `pulumi:"padtRetryTimeout"`
	// PPPoE account's password.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// PING server status.
	PingServStatus pulumi.IntOutput `pulumi:"pingServStatus"`
	// sFlow polling interval (1 - 255 sec).
	PollingInterval pulumi.IntOutput `pulumi:"pollingInterval"`
	// Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`.
	PppoeUnnumberedNegotiate pulumi.StringOutput `pulumi:"pppoeUnnumberedNegotiate"`
	// PPTP authentication type. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	PptpAuthType pulumi.StringOutput `pulumi:"pptpAuthType"`
	// Enable/disable PPTP client. Valid values: `enable`, `disable`.
	PptpClient pulumi.StringOutput `pulumi:"pptpClient"`
	// PPTP password.
	PptpPassword pulumi.StringPtrOutput `pulumi:"pptpPassword"`
	// PPTP server IP address.
	PptpServerIp pulumi.StringOutput `pulumi:"pptpServerIp"`
	// Idle timer in minutes (0 for disabled).
	PptpTimeout pulumi.IntOutput `pulumi:"pptpTimeout"`
	// PPTP user name.
	PptpUser pulumi.StringOutput `pulumi:"pptpUser"`
	// Enable/disable preservation of session route when dirty. Valid values: `enable`, `disable`.
	PreserveSessionRoute pulumi.StringOutput `pulumi:"preserveSessionRoute"`
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Enable/disable fail back to higher priority port once recovered. Valid values: `enable`, `disable`.
	PriorityOverride pulumi.StringOutput `pulumi:"priorityOverride"`
	// Enable/disable proxy captive portal on this interface. Valid values: `enable`, `disable`.
	ProxyCaptivePortal pulumi.StringOutput `pulumi:"proxyCaptivePortal"`
	// Redundant interface.
	RedundantInterface pulumi.StringOutput `pulumi:"redundantInterface"`
	// Remote IP address of tunnel.
	RemoteIp pulumi.StringOutput `pulumi:"remoteIp"`
	// Replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringOutput `pulumi:"replacemsgOverrideGroup"`
	// RX ring size.
	RingRx pulumi.IntOutput `pulumi:"ringRx"`
	// TX ring size.
	RingTx pulumi.IntOutput `pulumi:"ringTx"`
	// Interface role. Valid values: `lan`, `wan`, `dmz`, `undefined`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Data that NetFlow collects (rx, tx, or both). Valid values: `tx`, `rx`, `both`.
	SampleDirection pulumi.StringOutput `pulumi:"sampleDirection"`
	// sFlow sample rate (10 - 99999).
	SampleRate pulumi.IntOutput `pulumi:"sampleRate"`
	// Enable monitoring or blocking connections to Botnet servers through this interface. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringOutput `pulumi:"scanBotnetConnections"`
	SecondaryIp           pulumi.StringOutput `pulumi:"secondaryIp"`
	// Second IP address of interface. The structure of `secondaryip` block is documented below.
	Secondaryips SystemInterfaceSecondaryipArrayOutput `pulumi:"secondaryips"`
	// Name of security-exempt-list.
	SecurityExemptList pulumi.StringOutput `pulumi:"securityExemptList"`
	// URL of external authentication logout server.
	SecurityExternalLogout pulumi.StringOutput `pulumi:"securityExternalLogout"`
	// URL of external authentication web server.
	SecurityExternalWeb pulumi.StringOutput `pulumi:"securityExternalWeb"`
	// User groups that can authenticate with the captive portal. The structure of `securityGroups` block is documented below.
	SecurityGroups SystemInterfaceSecurityGroupArrayOutput `pulumi:"securityGroups"`
	// Enable/disable MAC authentication bypass. Valid values: `mac-auth-only`, `enable`, `disable`.
	SecurityMacAuthBypass pulumi.StringOutput `pulumi:"securityMacAuthBypass"`
	// Turn on captive portal authentication for this interface. Valid values: `none`, `captive-portal`, `802.1X`.
	SecurityMode pulumi.StringOutput `pulumi:"securityMode"`
	// URL redirection after disclaimer/authentication.
	SecurityRedirectUrl pulumi.StringOutput `pulumi:"securityRedirectUrl"`
	// PPPoE service name.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Enable/disable sFlow on this interface. Valid values: `enable`, `disable`.
	SflowSampler pulumi.StringOutput `pulumi:"sflowSampler"`
	// Permanent SNMP Index of the interface.
	SnmpIndex pulumi.IntOutput `pulumi:"snmpIndex"`
	// Interface speed. The default setting and the options available depend on the interface hardware. Valid values: `auto`, `10full`, `10half`, `100full`, `100half`, `1000full`, `1000half`, `1000auto`.
	Speed pulumi.StringOutput `pulumi:"speed"`
	// Egress Spillover threshold (0 - 16776000 kbps), 0 means unlimited.
	SpilloverThreshold pulumi.IntOutput `pulumi:"spilloverThreshold"`
	// Enable/disable source IP check. Valid values: `enable`, `disable`.
	SrcCheck pulumi.StringOutput `pulumi:"srcCheck"`
	// Enable/disable VRRP. Valid values: `enable`, `disable`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Enable/disable STP forwarding. Valid values: `enable`, `disable`.
	Stpforward pulumi.StringOutput `pulumi:"stpforward"`
	// Configure STP forwarding mode. Valid values: `rpl-all-ext-id`, `rpl-bridge-ext-id`, `rpl-nothing`.
	StpforwardMode pulumi.StringOutput `pulumi:"stpforwardMode"`
	// Enable to always send packets from this interface to a destination MAC address. Valid values: `enable`, `disable`.
	Subst pulumi.StringOutput `pulumi:"subst"`
	// Destination MAC address that all packets are sent to from this interface.
	SubstituteDstMac pulumi.StringOutput `pulumi:"substituteDstMac"`
	// Initial create for switch-controller VLANs.
	SwcFirstCreate pulumi.IntOutput `pulumi:"swcFirstCreate"`
	// Creation status for switch-controller VLANs.
	SwcVlan pulumi.IntOutput `pulumi:"swcVlan"`
	// Contained in switch.
	Switch pulumi.StringOutput `pulumi:"switch"`
	// Block FortiSwitch port-to-port traffic. Valid values: `enable`, `disable`.
	SwitchControllerAccessVlan pulumi.StringOutput `pulumi:"switchControllerAccessVlan"`
	// Enable/disable FortiSwitch ARP inspection. Valid values: `enable`, `disable`.
	SwitchControllerArpInspection pulumi.StringOutput `pulumi:"switchControllerArpInspection"`
	// Switch controller DHCP snooping. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnooping pulumi.StringOutput `pulumi:"switchControllerDhcpSnooping"`
	// Switch controller DHCP snooping option82. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingOption82 pulumi.StringOutput `pulumi:"switchControllerDhcpSnoopingOption82"`
	// Switch controller DHCP snooping verify MAC. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingVerifyMac pulumi.StringOutput `pulumi:"switchControllerDhcpSnoopingVerifyMac"`
	// Interface's purpose when assigning traffic (read only). Valid values: `none`, `default-vlan`, `quarantine`, `rspan`, `voice`, `video`, `nac`.
	SwitchControllerFeature pulumi.StringOutput `pulumi:"switchControllerFeature"`
	// Switch controller IGMP snooping. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnooping pulumi.StringOutput `pulumi:"switchControllerIgmpSnooping"`
	// Switch controller IGMP snooping fast-leave. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingFastLeave pulumi.StringOutput `pulumi:"switchControllerIgmpSnoopingFastLeave"`
	// Switch controller IGMP snooping proxy. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingProxy pulumi.StringOutput `pulumi:"switchControllerIgmpSnoopingProxy"`
	// Enable/disable managed FortiSwitch IoT scanning. Valid values: `enable`, `disable`.
	SwitchControllerIotScanning pulumi.StringOutput `pulumi:"switchControllerIotScanning"`
	// Limit the number of dynamic MAC addresses on this VLAN (1 - 128, 0 = no limit, default).
	SwitchControllerLearningLimit pulumi.IntOutput `pulumi:"switchControllerLearningLimit"`
	// VLAN to use for FortiLink management purposes.
	SwitchControllerMgmtVlan pulumi.IntOutput `pulumi:"switchControllerMgmtVlan"`
	// Integrated NAC settings for managed FortiSwitch.
	SwitchControllerNac pulumi.StringOutput `pulumi:"switchControllerNac"`
	// Stop Layer2 MAC learning and interception of BPDUs and other packets on this interface. Valid values: `disable`, `enable`.
	SwitchControllerRspanMode pulumi.StringOutput `pulumi:"switchControllerRspanMode"`
	// Source IP address used in FortiLink over L3 connections. Valid values: `outbound`, `fixed`.
	SwitchControllerSourceIp pulumi.StringOutput `pulumi:"switchControllerSourceIp"`
	// Switch controller traffic policy for the VLAN.
	SwitchControllerTrafficPolicy pulumi.StringOutput `pulumi:"switchControllerTrafficPolicy"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings SystemInterfaceTaggingArrayOutput `pulumi:"taggings"`
	// TCP maximum segment size. 0 means do not change segment size.
	TcpMss pulumi.IntOutput `pulumi:"tcpMss"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp1 pulumi.StringOutput `pulumi:"trustIp1"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp2 pulumi.StringOutput `pulumi:"trustIp2"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp3 pulumi.StringOutput `pulumi:"trustIp3"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp61 pulumi.StringOutput `pulumi:"trustIp61"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp62 pulumi.StringOutput `pulumi:"trustIp62"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp63 pulumi.StringOutput `pulumi:"trustIp63"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringOutput `pulumi:"type"`
	// Username of the PPPoE account, provided by your ISP.
	Username pulumi.StringOutput `pulumi:"username"`
	// Interface is in this virtual domain (VDOM).
	Vdom pulumi.StringOutput `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
	// Switch control interface VLAN ID.
	Vindex pulumi.IntOutput `pulumi:"vindex"`
	// Ethernet protocol of VLAN. Valid values: `8021q`, `8021ad`.
	VlanProtocol pulumi.StringOutput `pulumi:"vlanProtocol"`
	// Enable/disable traffic forwarding between VLANs on this interface. Valid values: `enable`, `disable`.
	Vlanforward pulumi.StringOutput `pulumi:"vlanforward"`
	// VLAN ID (1 - 4094).
	Vlanid pulumi.IntOutput `pulumi:"vlanid"`
	// Virtual Routing Forwarding ID.
	Vrf pulumi.IntOutput `pulumi:"vrf"`
	// Enable/disable use of virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac pulumi.StringOutput `pulumi:"vrrpVirtualMac"`
	// VRRP configuration. The structure of `vrrp` block is documented below.
	Vrrps SystemInterfaceVrrpArrayOutput `pulumi:"vrrps"`
	// Enable/disable WCCP on this interface. Used for encapsulated WCCP communication between WCCP clients and servers. Valid values: `enable`, `disable`.
	Wccp pulumi.StringOutput `pulumi:"wccp"`
	// Default weight for static routes (if route has no weight configured).
	Weight pulumi.IntOutput `pulumi:"weight"`
	// WINS server IP.
	WinsIp pulumi.StringOutput `pulumi:"winsIp"`
}

// NewSystemInterface registers a new resource with the given unique name, arguments, and options.
func NewSystemInterface(ctx *pulumi.Context,
	name string, args *SystemInterfaceArgs, opts ...pulumi.ResourceOption) (*SystemInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Vdom == nil {
		return nil, errors.New("invalid value for required argument 'Vdom'")
	}
	var resource SystemInterface
	err := ctx.RegisterResource("fortios:index/systemInterface:SystemInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemInterface gets an existing SystemInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemInterfaceState, opts ...pulumi.ResourceOption) (*SystemInterface, error) {
	var resource SystemInterface
	err := ctx.ReadResource("fortios:index/systemInterface:SystemInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemInterface resources.
type systemInterfaceState struct {
	// PPPoE server name.
	AcName *string `pulumi:"acName"`
	// Aggregate interface.
	Aggregate *string `pulumi:"aggregate"`
	// Frame distribution algorithm. Valid values: `L2`, `L3`, `L4`.
	Algorithm *string `pulumi:"algorithm"`
	// Alias will be displayed with the interface name to make it easier to distinguish.
	Alias *string `pulumi:"alias"`
	// Management access settings for the secondary IP address.
	Allowaccess *string `pulumi:"allowaccess"`
	// Enable/disable automatic registration of unknown FortiAP devices. Valid values: `enable`, `disable`.
	ApDiscover *string `pulumi:"apDiscover"`
	// Enable/disable ARP forwarding. Valid values: `enable`, `disable`.
	Arpforward *string `pulumi:"arpforward"`
	// PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	AuthType *string `pulumi:"authType"`
	// Enable/disable automatic authorization of dedicated Fortinet extension device on this interface. Valid values: `enable`, `disable`.
	AutoAuthExtensionDevice *string `pulumi:"autoAuthExtensionDevice"`
	// Indicates whether the interface is automatically created by FortiGate, for example, created during the VPN creation process. If it is, set it to "auto", else keep it empty.
	Autogenerated *string `pulumi:"autogenerated"`
	// Bandwidth measure time
	BandwidthMeasureTime *int `pulumi:"bandwidthMeasureTime"`
	// Bidirectional Forwarding Detection (BFD) settings. Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// BFD desired minimal transmit interval.
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval.
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Enable/disable broadcasting FortiClient discovery messages. Valid values: `enable`, `disable`.
	BroadcastForticlientDiscovery *string `pulumi:"broadcastForticlientDiscovery"`
	// Enable/disable broadcast forwarding. Valid values: `enable`, `disable`.
	BroadcastForward *string `pulumi:"broadcastForward"`
	// Enable/disable captive portal.
	CaptivePortal *int `pulumi:"captivePortal"`
	// CLI connection status.
	CliConnStatus *int `pulumi:"cliConnStatus"`
	// DHCP client options. The structure of `clientOptions` block is documented below.
	ClientOptions []SystemInterfaceClientOption `pulumi:"clientOptions"`
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// Configure interface for single purpose. Valid values: `none`, `management`.
	DedicatedTo *string `pulumi:"dedicatedTo"`
	// Enable to get the gateway IP from the DHCP or PPPoE server. Valid values: `enable`, `disable`.
	Defaultgw *string `pulumi:"defaultgw"`
	// Description.
	Description *string `pulumi:"description"`
	// MTU of detected peer (0 - 4294967295).
	DetectedPeerMtu *int `pulumi:"detectedPeerMtu"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol *string `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver *string `pulumi:"detectserver"`
	// Device access list.
	DeviceAccessList *string `pulumi:"deviceAccessList"`
	// Enable/disable passively gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentification *string `pulumi:"deviceIdentification"`
	// Enable/disable active gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentificationActiveScan *string `pulumi:"deviceIdentificationActiveScan"`
	// Enable/disable inclusion of devices detected on this interface in network vulnerability scans. Valid values: `disable`, `enable`.
	DeviceNetscan *string `pulumi:"deviceNetscan"`
	// Enable/disable passive gathering of user identity information about users on this interface. Valid values: `enable`, `disable`.
	DeviceUserIdentification *string `pulumi:"deviceUserIdentification"`
	// Device Index.
	Devindex *int `pulumi:"devindex"`
	// DHCP client identifier.
	DhcpClientIdentifier *string `pulumi:"dhcpClientIdentifier"`
	// Enable/disable DHCP relay agent option. Valid values: `enable`, `disable`.
	DhcpRelayAgentOption *string `pulumi:"dhcpRelayAgentOption"`
	// Specify outgoing interface to reach server.
	DhcpRelayInterface *string `pulumi:"dhcpRelayInterface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	DhcpRelayInterfaceSelectMethod *string `pulumi:"dhcpRelayInterfaceSelectMethod"`
	// DHCP relay IP address.
	DhcpRelayIp *string `pulumi:"dhcpRelayIp"`
	// Enable/disable allowing this interface to act as a DHCP relay. Valid values: `disable`, `enable`.
	DhcpRelayService *string `pulumi:"dhcpRelayService"`
	// DHCP relay type (regular or IPsec). Valid values: `regular`, `ipsec`.
	DhcpRelayType *string `pulumi:"dhcpRelayType"`
	// DHCP renew time in seconds (300-604800), 0 means use the renew time provided by the server.
	DhcpRenewTime *int `pulumi:"dhcpRenewTime"`
	// Time in seconds to wait before retrying to start a PPPoE discovery, 0 means no timeout.
	DiscRetryTimeout *int `pulumi:"discRetryTimeout"`
	// Time in milliseconds to wait before sending a notification that this interface is down or disconnected.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Distance for routes learned through PPPoE or DHCP, lower distance indicates preferred route.
	Distance *int `pulumi:"distance"`
	// Enable/disable use DNS acquired by DHCP or PPPoE. Valid values: `enable`, `disable`.
	DnsServerOverride *string `pulumi:"dnsServerOverride"`
	// Enable/disable drop fragment packets. Valid values: `enable`, `disable`.
	DropFragment *string `pulumi:"dropFragment"`
	// Enable/disable drop overlapped fragment packets. Valid values: `enable`, `disable`.
	DropOverlappedFragment *string `pulumi:"dropOverlappedFragment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Outgoing traffic shaping profile.
	EgressShapingProfile *string `pulumi:"egressShapingProfile"`
	// Enable/disable endpoint compliance enforcement. Valid values: `enable`, `disable`.
	EndpointCompliance *string `pulumi:"endpointCompliance"`
	// Estimated maximum downstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedDownstreamBandwidth *int `pulumi:"estimatedDownstreamBandwidth"`
	// Estimated maximum upstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedUpstreamBandwidth *int `pulumi:"estimatedUpstreamBandwidth"`
	// Enable/disable the explicit FTP proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitFtpProxy *string `pulumi:"explicitFtpProxy"`
	// Enable/disable the explicit web proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitWebProxy *string `pulumi:"explicitWebProxy"`
	// Enable/disable identifying the interface as an external interface (which usually means it's connected to the Internet). Valid values: `enable`, `disable`.
	External *string `pulumi:"external"`
	// Action on extender when interface fail . Valid values: `soft-restart`, `hard-restart`, `reboot`.
	FailActionOnExtender *string `pulumi:"failActionOnExtender"`
	// Names of the FortiGate interfaces from which the link failure alert is sent for this interface. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemInterfaceFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Select link-failed-signal or link-down method to alert about a failed link. Valid values: `link-failed-signal`, `link-down`.
	FailAlertMethod *string `pulumi:"failAlertMethod"`
	// Enable/disable fail detection features for this interface. Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// Options for detecting that this interface has failed. Valid values: `detectserver`, `link-down`.
	FailDetectOption *string `pulumi:"failDetectOption"`
	// Enable/disable FortiHeartBeat (FortiTelemetry on GUI). Valid values: `enable`, `disable`.
	Fortiheartbeat *string `pulumi:"fortiheartbeat"`
	// Enable FortiLink to dedicate this interface to manage other Fortinet devices. Valid values: `enable`, `disable`.
	Fortilink *string `pulumi:"fortilink"`
	// fortilink split interface backup link.
	FortilinkBackupLink *int `pulumi:"fortilinkBackupLink"`
	// Protocol for FortiGate neighbor discovery. Valid values: `lldp`, `fortilink`.
	FortilinkNeighborDetect *string `pulumi:"fortilinkNeighborDetect"`
	// Enable/disable FortiLink split interface to connect member link to different FortiSwitch in stack for uplink redundancy. Valid values: `enable`, `disable`.
	FortilinkSplitInterface *string `pulumi:"fortilinkSplitInterface"`
	// Enable/disable FortiLink switch-stacking on this interface. Valid values: `enable`, `disable`.
	FortilinkStacking *string `pulumi:"fortilinkStacking"`
	// Transparent mode forward domain.
	ForwardDomain *int `pulumi:"forwardDomain"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect *string `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority *int `pulumi:"haPriority"`
	// Enable/disable ICMP accept redirect. Valid values: `enable`, `disable`.
	IcmpAcceptRedirect *string `pulumi:"icmpAcceptRedirect"`
	// Enable/disable ICMP send redirect. Valid values: `enable`, `disable`.
	IcmpSendRedirect *string `pulumi:"icmpSendRedirect"`
	// Enable/disable authentication for this interface. Valid values: `enable`, `disable`.
	IdentAccept *string `pulumi:"identAccept"`
	// PPPoE auto disconnect after idle timeout seconds, 0 means no timeout.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// Bandwidth limit for incoming traffic (0 - 16776000 kbps), 0 means unlimited.
	Inbandwidth *int `pulumi:"inbandwidth"`
	// Incoming traffic shaping profile.
	IngressShapingProfile *string `pulumi:"ingressShapingProfile"`
	// Ingress Spillover threshold (0 - 16776000 kbps).
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Implicitly created.
	Internal *int `pulumi:"internal"`
	// Secondary IP address of the interface.
	Ip *string `pulumi:"ip"`
	// Enable/disable automatic IP address assignment of this interface by FortiIPAM. Valid values: `enable`, `disable`.
	IpManagedByFortiipam *string `pulumi:"ipManagedByFortiipam"`
	// Enable/disable IP/MAC binding. Valid values: `enable`, `disable`.
	Ipmac *string `pulumi:"ipmac"`
	// Enable/disable the use of this interface as a one-armed sniffer. Valid values: `enable`, `disable`.
	IpsSnifferMode *string `pulumi:"ipsSnifferMode"`
	// Unnumbered IP used for PPPoE interfaces for which no unique local address is provided.
	Ipunnumbered *string `pulumi:"ipunnumbered"`
	// IPv6 of interface. The structure of `ipv6` block is documented below.
	Ipv6 *SystemInterfaceIpv6 `pulumi:"ipv6"`
	// Enable/disable l2 forwarding. Valid values: `enable`, `disable`.
	L2forward *string `pulumi:"l2forward"`
	// LACP HA slave. Valid values: `enable`, `disable`.
	LacpHaSlave *string `pulumi:"lacpHaSlave"`
	// LACP mode. Valid values: `static`, `passive`, `active`.
	LacpMode *string `pulumi:"lacpMode"`
	// How often the interface sends LACP messages. Valid values: `slow`, `fast`.
	LacpSpeed *string `pulumi:"lacpSpeed"`
	// Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.
	LcpEchoInterval *int `pulumi:"lcpEchoInterval"`
	// Maximum missed LCP echo messages before disconnect.
	LcpMaxEchoFails *int `pulumi:"lcpMaxEchoFails"`
	// Number of milliseconds to wait before considering a link is up.
	LinkUpDelay *int `pulumi:"linkUpDelay"`
	// LLDP-MED network policy profile.
	LldpNetworkPolicy *string `pulumi:"lldpNetworkPolicy"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception. Valid values: `enable`, `disable`, `vdom`.
	LldpReception *string `pulumi:"lldpReception"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission. Valid values: `enable`, `disable`, `vdom`.
	LldpTransmission *string `pulumi:"lldpTransmission"`
	// Change the interface's MAC address.
	Macaddr *string `pulumi:"macaddr"`
	// Available when FortiLink is enabled, used for managed devices through FortiLink interface. The structure of `managedDevice` block is documented below.
	ManagedDevices []SystemInterfaceManagedDevice `pulumi:"managedDevices"`
	// Number of IP addresses to be allocated by FortiIPAM and used by this FortiGate unit's DHCP server settings. Valid values: `256`, `512`, `1024`, `2048`, `4096`, `8192`, `16384`, `32768`, `65536`.
	ManagedSubnetworkSize *string `pulumi:"managedSubnetworkSize"`
	// High Availability in-band management IP address of this interface.
	ManagementIp *string `pulumi:"managementIp"`
	// Measured downstream bandwidth (kbps).
	MeasuredDownstreamBandwidth *int `pulumi:"measuredDownstreamBandwidth"`
	// Measured upstream bandwidth (kbps).
	MeasuredUpstreamBandwidth *int `pulumi:"measuredUpstreamBandwidth"`
	// Physical interfaces that belong to the aggregate or redundant interface. The structure of `member` block is documented below.
	Members []SystemInterfaceMember `pulumi:"members"`
	// Minimum number of aggregated ports that must be up.
	MinLinks *int `pulumi:"minLinks"`
	// Action to take when less than the configured minimum number of links are active. Valid values: `operational`, `administrative`.
	MinLinksDown *string `pulumi:"minLinksDown"`
	// Addressing mode (static, DHCP, PPPoE). Valid values: `static`, `dhcp`, `pppoe`.
	Mode *string `pulumi:"mode"`
	// Enable monitoring bandwidth on this interface. Valid values: `enable`, `disable`.
	MonitorBandwidth *string `pulumi:"monitorBandwidth"`
	// MTU value for this interface.
	Mtu *int `pulumi:"mtu"`
	// Enable to set a custom MTU for this interface. Valid values: `enable`, `disable`.
	MtuOverride *string `pulumi:"mtuOverride"`
	// Tag name.
	Name *string `pulumi:"name"`
	// Enable/disable NDISC forwarding. Valid values: `enable`, `disable`.
	Ndiscforward *string `pulumi:"ndiscforward"`
	// Enable/disable NETBIOS forwarding. Valid values: `disable`, `enable`.
	NetbiosForward *string `pulumi:"netbiosForward"`
	// Enable/disable NetFlow on this interface and set the data that NetFlow collects (rx, tx, or both). Valid values: `disable`, `tx`, `rx`, `both`.
	NetflowSampler *string `pulumi:"netflowSampler"`
	// Bandwidth limit for outgoing traffic (0 - 16776000 kbps).
	Outbandwidth *int `pulumi:"outbandwidth"`
	// PPPoE Active Discovery Terminate (PADT) used to terminate sessions after an idle time.
	PadtRetryTimeout *int `pulumi:"padtRetryTimeout"`
	// PPPoE account's password.
	Password *string `pulumi:"password"`
	// PING server status.
	PingServStatus *int `pulumi:"pingServStatus"`
	// sFlow polling interval (1 - 255 sec).
	PollingInterval *int `pulumi:"pollingInterval"`
	// Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`.
	PppoeUnnumberedNegotiate *string `pulumi:"pppoeUnnumberedNegotiate"`
	// PPTP authentication type. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	PptpAuthType *string `pulumi:"pptpAuthType"`
	// Enable/disable PPTP client. Valid values: `enable`, `disable`.
	PptpClient *string `pulumi:"pptpClient"`
	// PPTP password.
	PptpPassword *string `pulumi:"pptpPassword"`
	// PPTP server IP address.
	PptpServerIp *string `pulumi:"pptpServerIp"`
	// Idle timer in minutes (0 for disabled).
	PptpTimeout *int `pulumi:"pptpTimeout"`
	// PPTP user name.
	PptpUser *string `pulumi:"pptpUser"`
	// Enable/disable preservation of session route when dirty. Valid values: `enable`, `disable`.
	PreserveSessionRoute *string `pulumi:"preserveSessionRoute"`
	// Priority of the virtual router (1 - 255).
	Priority *int `pulumi:"priority"`
	// Enable/disable fail back to higher priority port once recovered. Valid values: `enable`, `disable`.
	PriorityOverride *string `pulumi:"priorityOverride"`
	// Enable/disable proxy captive portal on this interface. Valid values: `enable`, `disable`.
	ProxyCaptivePortal *string `pulumi:"proxyCaptivePortal"`
	// Redundant interface.
	RedundantInterface *string `pulumi:"redundantInterface"`
	// Remote IP address of tunnel.
	RemoteIp *string `pulumi:"remoteIp"`
	// Replacement message override group.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// RX ring size.
	RingRx *int `pulumi:"ringRx"`
	// TX ring size.
	RingTx *int `pulumi:"ringTx"`
	// Interface role. Valid values: `lan`, `wan`, `dmz`, `undefined`.
	Role *string `pulumi:"role"`
	// Data that NetFlow collects (rx, tx, or both). Valid values: `tx`, `rx`, `both`.
	SampleDirection *string `pulumi:"sampleDirection"`
	// sFlow sample rate (10 - 99999).
	SampleRate *int `pulumi:"sampleRate"`
	// Enable monitoring or blocking connections to Botnet servers through this interface. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	SecondaryIp           *string `pulumi:"secondaryIp"`
	// Second IP address of interface. The structure of `secondaryip` block is documented below.
	Secondaryips []SystemInterfaceSecondaryip `pulumi:"secondaryips"`
	// Name of security-exempt-list.
	SecurityExemptList *string `pulumi:"securityExemptList"`
	// URL of external authentication logout server.
	SecurityExternalLogout *string `pulumi:"securityExternalLogout"`
	// URL of external authentication web server.
	SecurityExternalWeb *string `pulumi:"securityExternalWeb"`
	// User groups that can authenticate with the captive portal. The structure of `securityGroups` block is documented below.
	SecurityGroups []SystemInterfaceSecurityGroup `pulumi:"securityGroups"`
	// Enable/disable MAC authentication bypass. Valid values: `mac-auth-only`, `enable`, `disable`.
	SecurityMacAuthBypass *string `pulumi:"securityMacAuthBypass"`
	// Turn on captive portal authentication for this interface. Valid values: `none`, `captive-portal`, `802.1X`.
	SecurityMode *string `pulumi:"securityMode"`
	// URL redirection after disclaimer/authentication.
	SecurityRedirectUrl *string `pulumi:"securityRedirectUrl"`
	// PPPoE service name.
	ServiceName *string `pulumi:"serviceName"`
	// Enable/disable sFlow on this interface. Valid values: `enable`, `disable`.
	SflowSampler *string `pulumi:"sflowSampler"`
	// Permanent SNMP Index of the interface.
	SnmpIndex *int `pulumi:"snmpIndex"`
	// Interface speed. The default setting and the options available depend on the interface hardware. Valid values: `auto`, `10full`, `10half`, `100full`, `100half`, `1000full`, `1000half`, `1000auto`.
	Speed *string `pulumi:"speed"`
	// Egress Spillover threshold (0 - 16776000 kbps), 0 means unlimited.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable source IP check. Valid values: `enable`, `disable`.
	SrcCheck *string `pulumi:"srcCheck"`
	// Enable/disable VRRP. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable STP forwarding. Valid values: `enable`, `disable`.
	Stpforward *string `pulumi:"stpforward"`
	// Configure STP forwarding mode. Valid values: `rpl-all-ext-id`, `rpl-bridge-ext-id`, `rpl-nothing`.
	StpforwardMode *string `pulumi:"stpforwardMode"`
	// Enable to always send packets from this interface to a destination MAC address. Valid values: `enable`, `disable`.
	Subst *string `pulumi:"subst"`
	// Destination MAC address that all packets are sent to from this interface.
	SubstituteDstMac *string `pulumi:"substituteDstMac"`
	// Initial create for switch-controller VLANs.
	SwcFirstCreate *int `pulumi:"swcFirstCreate"`
	// Creation status for switch-controller VLANs.
	SwcVlan *int `pulumi:"swcVlan"`
	// Contained in switch.
	Switch *string `pulumi:"switch"`
	// Block FortiSwitch port-to-port traffic. Valid values: `enable`, `disable`.
	SwitchControllerAccessVlan *string `pulumi:"switchControllerAccessVlan"`
	// Enable/disable FortiSwitch ARP inspection. Valid values: `enable`, `disable`.
	SwitchControllerArpInspection *string `pulumi:"switchControllerArpInspection"`
	// Switch controller DHCP snooping. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnooping *string `pulumi:"switchControllerDhcpSnooping"`
	// Switch controller DHCP snooping option82. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingOption82 *string `pulumi:"switchControllerDhcpSnoopingOption82"`
	// Switch controller DHCP snooping verify MAC. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingVerifyMac *string `pulumi:"switchControllerDhcpSnoopingVerifyMac"`
	// Interface's purpose when assigning traffic (read only). Valid values: `none`, `default-vlan`, `quarantine`, `rspan`, `voice`, `video`, `nac`.
	SwitchControllerFeature *string `pulumi:"switchControllerFeature"`
	// Switch controller IGMP snooping. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnooping *string `pulumi:"switchControllerIgmpSnooping"`
	// Switch controller IGMP snooping fast-leave. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingFastLeave *string `pulumi:"switchControllerIgmpSnoopingFastLeave"`
	// Switch controller IGMP snooping proxy. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingProxy *string `pulumi:"switchControllerIgmpSnoopingProxy"`
	// Enable/disable managed FortiSwitch IoT scanning. Valid values: `enable`, `disable`.
	SwitchControllerIotScanning *string `pulumi:"switchControllerIotScanning"`
	// Limit the number of dynamic MAC addresses on this VLAN (1 - 128, 0 = no limit, default).
	SwitchControllerLearningLimit *int `pulumi:"switchControllerLearningLimit"`
	// VLAN to use for FortiLink management purposes.
	SwitchControllerMgmtVlan *int `pulumi:"switchControllerMgmtVlan"`
	// Integrated NAC settings for managed FortiSwitch.
	SwitchControllerNac *string `pulumi:"switchControllerNac"`
	// Stop Layer2 MAC learning and interception of BPDUs and other packets on this interface. Valid values: `disable`, `enable`.
	SwitchControllerRspanMode *string `pulumi:"switchControllerRspanMode"`
	// Source IP address used in FortiLink over L3 connections. Valid values: `outbound`, `fixed`.
	SwitchControllerSourceIp *string `pulumi:"switchControllerSourceIp"`
	// Switch controller traffic policy for the VLAN.
	SwitchControllerTrafficPolicy *string `pulumi:"switchControllerTrafficPolicy"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []SystemInterfaceTagging `pulumi:"taggings"`
	// TCP maximum segment size. 0 means do not change segment size.
	TcpMss *int `pulumi:"tcpMss"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp1 *string `pulumi:"trustIp1"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp2 *string `pulumi:"trustIp2"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp3 *string `pulumi:"trustIp3"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp61 *string `pulumi:"trustIp61"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp62 *string `pulumi:"trustIp62"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp63 *string `pulumi:"trustIp63"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type *string `pulumi:"type"`
	// Username of the PPPoE account, provided by your ISP.
	Username *string `pulumi:"username"`
	// Interface is in this virtual domain (VDOM).
	Vdom *string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Switch control interface VLAN ID.
	Vindex *int `pulumi:"vindex"`
	// Ethernet protocol of VLAN. Valid values: `8021q`, `8021ad`.
	VlanProtocol *string `pulumi:"vlanProtocol"`
	// Enable/disable traffic forwarding between VLANs on this interface. Valid values: `enable`, `disable`.
	Vlanforward *string `pulumi:"vlanforward"`
	// VLAN ID (1 - 4094).
	Vlanid *int `pulumi:"vlanid"`
	// Virtual Routing Forwarding ID.
	Vrf *int `pulumi:"vrf"`
	// Enable/disable use of virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac *string `pulumi:"vrrpVirtualMac"`
	// VRRP configuration. The structure of `vrrp` block is documented below.
	Vrrps []SystemInterfaceVrrp `pulumi:"vrrps"`
	// Enable/disable WCCP on this interface. Used for encapsulated WCCP communication between WCCP clients and servers. Valid values: `enable`, `disable`.
	Wccp *string `pulumi:"wccp"`
	// Default weight for static routes (if route has no weight configured).
	Weight *int `pulumi:"weight"`
	// WINS server IP.
	WinsIp *string `pulumi:"winsIp"`
}

type SystemInterfaceState struct {
	// PPPoE server name.
	AcName pulumi.StringPtrInput
	// Aggregate interface.
	Aggregate pulumi.StringPtrInput
	// Frame distribution algorithm. Valid values: `L2`, `L3`, `L4`.
	Algorithm pulumi.StringPtrInput
	// Alias will be displayed with the interface name to make it easier to distinguish.
	Alias pulumi.StringPtrInput
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringPtrInput
	// Enable/disable automatic registration of unknown FortiAP devices. Valid values: `enable`, `disable`.
	ApDiscover pulumi.StringPtrInput
	// Enable/disable ARP forwarding. Valid values: `enable`, `disable`.
	Arpforward pulumi.StringPtrInput
	// PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	AuthType pulumi.StringPtrInput
	// Enable/disable automatic authorization of dedicated Fortinet extension device on this interface. Valid values: `enable`, `disable`.
	AutoAuthExtensionDevice pulumi.StringPtrInput
	// Indicates whether the interface is automatically created by FortiGate, for example, created during the VPN creation process. If it is, set it to "auto", else keep it empty.
	Autogenerated pulumi.StringPtrInput
	// Bandwidth measure time
	BandwidthMeasureTime pulumi.IntPtrInput
	// Bidirectional Forwarding Detection (BFD) settings. Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// BFD desired minimal transmit interval.
	BfdDesiredMinTx pulumi.IntPtrInput
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput
	// BFD required minimal receive interval.
	BfdRequiredMinRx pulumi.IntPtrInput
	// Enable/disable broadcasting FortiClient discovery messages. Valid values: `enable`, `disable`.
	BroadcastForticlientDiscovery pulumi.StringPtrInput
	// Enable/disable broadcast forwarding. Valid values: `enable`, `disable`.
	BroadcastForward pulumi.StringPtrInput
	// Enable/disable captive portal.
	CaptivePortal pulumi.IntPtrInput
	// CLI connection status.
	CliConnStatus pulumi.IntPtrInput
	// DHCP client options. The structure of `clientOptions` block is documented below.
	ClientOptions SystemInterfaceClientOptionArrayInput
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// Configure interface for single purpose. Valid values: `none`, `management`.
	DedicatedTo pulumi.StringPtrInput
	// Enable to get the gateway IP from the DHCP or PPPoE server. Valid values: `enable`, `disable`.
	Defaultgw pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// MTU of detected peer (0 - 4294967295).
	DetectedPeerMtu pulumi.IntPtrInput
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol pulumi.StringPtrInput
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringPtrInput
	// Device access list.
	DeviceAccessList pulumi.StringPtrInput
	// Enable/disable passively gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentification pulumi.StringPtrInput
	// Enable/disable active gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentificationActiveScan pulumi.StringPtrInput
	// Enable/disable inclusion of devices detected on this interface in network vulnerability scans. Valid values: `disable`, `enable`.
	DeviceNetscan pulumi.StringPtrInput
	// Enable/disable passive gathering of user identity information about users on this interface. Valid values: `enable`, `disable`.
	DeviceUserIdentification pulumi.StringPtrInput
	// Device Index.
	Devindex pulumi.IntPtrInput
	// DHCP client identifier.
	DhcpClientIdentifier pulumi.StringPtrInput
	// Enable/disable DHCP relay agent option. Valid values: `enable`, `disable`.
	DhcpRelayAgentOption pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	DhcpRelayInterface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	DhcpRelayInterfaceSelectMethod pulumi.StringPtrInput
	// DHCP relay IP address.
	DhcpRelayIp pulumi.StringPtrInput
	// Enable/disable allowing this interface to act as a DHCP relay. Valid values: `disable`, `enable`.
	DhcpRelayService pulumi.StringPtrInput
	// DHCP relay type (regular or IPsec). Valid values: `regular`, `ipsec`.
	DhcpRelayType pulumi.StringPtrInput
	// DHCP renew time in seconds (300-604800), 0 means use the renew time provided by the server.
	DhcpRenewTime pulumi.IntPtrInput
	// Time in seconds to wait before retrying to start a PPPoE discovery, 0 means no timeout.
	DiscRetryTimeout pulumi.IntPtrInput
	// Time in milliseconds to wait before sending a notification that this interface is down or disconnected.
	DisconnectThreshold pulumi.IntPtrInput
	// Distance for routes learned through PPPoE or DHCP, lower distance indicates preferred route.
	Distance pulumi.IntPtrInput
	// Enable/disable use DNS acquired by DHCP or PPPoE. Valid values: `enable`, `disable`.
	DnsServerOverride pulumi.StringPtrInput
	// Enable/disable drop fragment packets. Valid values: `enable`, `disable`.
	DropFragment pulumi.StringPtrInput
	// Enable/disable drop overlapped fragment packets. Valid values: `enable`, `disable`.
	DropOverlappedFragment pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Outgoing traffic shaping profile.
	EgressShapingProfile pulumi.StringPtrInput
	// Enable/disable endpoint compliance enforcement. Valid values: `enable`, `disable`.
	EndpointCompliance pulumi.StringPtrInput
	// Estimated maximum downstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedDownstreamBandwidth pulumi.IntPtrInput
	// Estimated maximum upstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedUpstreamBandwidth pulumi.IntPtrInput
	// Enable/disable the explicit FTP proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitFtpProxy pulumi.StringPtrInput
	// Enable/disable the explicit web proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitWebProxy pulumi.StringPtrInput
	// Enable/disable identifying the interface as an external interface (which usually means it's connected to the Internet). Valid values: `enable`, `disable`.
	External pulumi.StringPtrInput
	// Action on extender when interface fail . Valid values: `soft-restart`, `hard-restart`, `reboot`.
	FailActionOnExtender pulumi.StringPtrInput
	// Names of the FortiGate interfaces from which the link failure alert is sent for this interface. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemInterfaceFailAlertInterfaceArrayInput
	// Select link-failed-signal or link-down method to alert about a failed link. Valid values: `link-failed-signal`, `link-down`.
	FailAlertMethod pulumi.StringPtrInput
	// Enable/disable fail detection features for this interface. Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// Options for detecting that this interface has failed. Valid values: `detectserver`, `link-down`.
	FailDetectOption pulumi.StringPtrInput
	// Enable/disable FortiHeartBeat (FortiTelemetry on GUI). Valid values: `enable`, `disable`.
	Fortiheartbeat pulumi.StringPtrInput
	// Enable FortiLink to dedicate this interface to manage other Fortinet devices. Valid values: `enable`, `disable`.
	Fortilink pulumi.StringPtrInput
	// fortilink split interface backup link.
	FortilinkBackupLink pulumi.IntPtrInput
	// Protocol for FortiGate neighbor discovery. Valid values: `lldp`, `fortilink`.
	FortilinkNeighborDetect pulumi.StringPtrInput
	// Enable/disable FortiLink split interface to connect member link to different FortiSwitch in stack for uplink redundancy. Valid values: `enable`, `disable`.
	FortilinkSplitInterface pulumi.StringPtrInput
	// Enable/disable FortiLink switch-stacking on this interface. Valid values: `enable`, `disable`.
	FortilinkStacking pulumi.StringPtrInput
	// Transparent mode forward domain.
	ForwardDomain pulumi.IntPtrInput
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect pulumi.StringPtrInput
	// HA election priority for the PING server.
	HaPriority pulumi.IntPtrInput
	// Enable/disable ICMP accept redirect. Valid values: `enable`, `disable`.
	IcmpAcceptRedirect pulumi.StringPtrInput
	// Enable/disable ICMP send redirect. Valid values: `enable`, `disable`.
	IcmpSendRedirect pulumi.StringPtrInput
	// Enable/disable authentication for this interface. Valid values: `enable`, `disable`.
	IdentAccept pulumi.StringPtrInput
	// PPPoE auto disconnect after idle timeout seconds, 0 means no timeout.
	IdleTimeout pulumi.IntPtrInput
	// Bandwidth limit for incoming traffic (0 - 16776000 kbps), 0 means unlimited.
	Inbandwidth pulumi.IntPtrInput
	// Incoming traffic shaping profile.
	IngressShapingProfile pulumi.StringPtrInput
	// Ingress Spillover threshold (0 - 16776000 kbps).
	IngressSpilloverThreshold pulumi.IntPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// Implicitly created.
	Internal pulumi.IntPtrInput
	// Secondary IP address of the interface.
	Ip pulumi.StringPtrInput
	// Enable/disable automatic IP address assignment of this interface by FortiIPAM. Valid values: `enable`, `disable`.
	IpManagedByFortiipam pulumi.StringPtrInput
	// Enable/disable IP/MAC binding. Valid values: `enable`, `disable`.
	Ipmac pulumi.StringPtrInput
	// Enable/disable the use of this interface as a one-armed sniffer. Valid values: `enable`, `disable`.
	IpsSnifferMode pulumi.StringPtrInput
	// Unnumbered IP used for PPPoE interfaces for which no unique local address is provided.
	Ipunnumbered pulumi.StringPtrInput
	// IPv6 of interface. The structure of `ipv6` block is documented below.
	Ipv6 SystemInterfaceIpv6PtrInput
	// Enable/disable l2 forwarding. Valid values: `enable`, `disable`.
	L2forward pulumi.StringPtrInput
	// LACP HA slave. Valid values: `enable`, `disable`.
	LacpHaSlave pulumi.StringPtrInput
	// LACP mode. Valid values: `static`, `passive`, `active`.
	LacpMode pulumi.StringPtrInput
	// How often the interface sends LACP messages. Valid values: `slow`, `fast`.
	LacpSpeed pulumi.StringPtrInput
	// Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.
	LcpEchoInterval pulumi.IntPtrInput
	// Maximum missed LCP echo messages before disconnect.
	LcpMaxEchoFails pulumi.IntPtrInput
	// Number of milliseconds to wait before considering a link is up.
	LinkUpDelay pulumi.IntPtrInput
	// LLDP-MED network policy profile.
	LldpNetworkPolicy pulumi.StringPtrInput
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception. Valid values: `enable`, `disable`, `vdom`.
	LldpReception pulumi.StringPtrInput
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission. Valid values: `enable`, `disable`, `vdom`.
	LldpTransmission pulumi.StringPtrInput
	// Change the interface's MAC address.
	Macaddr pulumi.StringPtrInput
	// Available when FortiLink is enabled, used for managed devices through FortiLink interface. The structure of `managedDevice` block is documented below.
	ManagedDevices SystemInterfaceManagedDeviceArrayInput
	// Number of IP addresses to be allocated by FortiIPAM and used by this FortiGate unit's DHCP server settings. Valid values: `256`, `512`, `1024`, `2048`, `4096`, `8192`, `16384`, `32768`, `65536`.
	ManagedSubnetworkSize pulumi.StringPtrInput
	// High Availability in-band management IP address of this interface.
	ManagementIp pulumi.StringPtrInput
	// Measured downstream bandwidth (kbps).
	MeasuredDownstreamBandwidth pulumi.IntPtrInput
	// Measured upstream bandwidth (kbps).
	MeasuredUpstreamBandwidth pulumi.IntPtrInput
	// Physical interfaces that belong to the aggregate or redundant interface. The structure of `member` block is documented below.
	Members SystemInterfaceMemberArrayInput
	// Minimum number of aggregated ports that must be up.
	MinLinks pulumi.IntPtrInput
	// Action to take when less than the configured minimum number of links are active. Valid values: `operational`, `administrative`.
	MinLinksDown pulumi.StringPtrInput
	// Addressing mode (static, DHCP, PPPoE). Valid values: `static`, `dhcp`, `pppoe`.
	Mode pulumi.StringPtrInput
	// Enable monitoring bandwidth on this interface. Valid values: `enable`, `disable`.
	MonitorBandwidth pulumi.StringPtrInput
	// MTU value for this interface.
	Mtu pulumi.IntPtrInput
	// Enable to set a custom MTU for this interface. Valid values: `enable`, `disable`.
	MtuOverride pulumi.StringPtrInput
	// Tag name.
	Name pulumi.StringPtrInput
	// Enable/disable NDISC forwarding. Valid values: `enable`, `disable`.
	Ndiscforward pulumi.StringPtrInput
	// Enable/disable NETBIOS forwarding. Valid values: `disable`, `enable`.
	NetbiosForward pulumi.StringPtrInput
	// Enable/disable NetFlow on this interface and set the data that NetFlow collects (rx, tx, or both). Valid values: `disable`, `tx`, `rx`, `both`.
	NetflowSampler pulumi.StringPtrInput
	// Bandwidth limit for outgoing traffic (0 - 16776000 kbps).
	Outbandwidth pulumi.IntPtrInput
	// PPPoE Active Discovery Terminate (PADT) used to terminate sessions after an idle time.
	PadtRetryTimeout pulumi.IntPtrInput
	// PPPoE account's password.
	Password pulumi.StringPtrInput
	// PING server status.
	PingServStatus pulumi.IntPtrInput
	// sFlow polling interval (1 - 255 sec).
	PollingInterval pulumi.IntPtrInput
	// Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`.
	PppoeUnnumberedNegotiate pulumi.StringPtrInput
	// PPTP authentication type. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	PptpAuthType pulumi.StringPtrInput
	// Enable/disable PPTP client. Valid values: `enable`, `disable`.
	PptpClient pulumi.StringPtrInput
	// PPTP password.
	PptpPassword pulumi.StringPtrInput
	// PPTP server IP address.
	PptpServerIp pulumi.StringPtrInput
	// Idle timer in minutes (0 for disabled).
	PptpTimeout pulumi.IntPtrInput
	// PPTP user name.
	PptpUser pulumi.StringPtrInput
	// Enable/disable preservation of session route when dirty. Valid values: `enable`, `disable`.
	PreserveSessionRoute pulumi.StringPtrInput
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntPtrInput
	// Enable/disable fail back to higher priority port once recovered. Valid values: `enable`, `disable`.
	PriorityOverride pulumi.StringPtrInput
	// Enable/disable proxy captive portal on this interface. Valid values: `enable`, `disable`.
	ProxyCaptivePortal pulumi.StringPtrInput
	// Redundant interface.
	RedundantInterface pulumi.StringPtrInput
	// Remote IP address of tunnel.
	RemoteIp pulumi.StringPtrInput
	// Replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// RX ring size.
	RingRx pulumi.IntPtrInput
	// TX ring size.
	RingTx pulumi.IntPtrInput
	// Interface role. Valid values: `lan`, `wan`, `dmz`, `undefined`.
	Role pulumi.StringPtrInput
	// Data that NetFlow collects (rx, tx, or both). Valid values: `tx`, `rx`, `both`.
	SampleDirection pulumi.StringPtrInput
	// sFlow sample rate (10 - 99999).
	SampleRate pulumi.IntPtrInput
	// Enable monitoring or blocking connections to Botnet servers through this interface. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	SecondaryIp           pulumi.StringPtrInput
	// Second IP address of interface. The structure of `secondaryip` block is documented below.
	Secondaryips SystemInterfaceSecondaryipArrayInput
	// Name of security-exempt-list.
	SecurityExemptList pulumi.StringPtrInput
	// URL of external authentication logout server.
	SecurityExternalLogout pulumi.StringPtrInput
	// URL of external authentication web server.
	SecurityExternalWeb pulumi.StringPtrInput
	// User groups that can authenticate with the captive portal. The structure of `securityGroups` block is documented below.
	SecurityGroups SystemInterfaceSecurityGroupArrayInput
	// Enable/disable MAC authentication bypass. Valid values: `mac-auth-only`, `enable`, `disable`.
	SecurityMacAuthBypass pulumi.StringPtrInput
	// Turn on captive portal authentication for this interface. Valid values: `none`, `captive-portal`, `802.1X`.
	SecurityMode pulumi.StringPtrInput
	// URL redirection after disclaimer/authentication.
	SecurityRedirectUrl pulumi.StringPtrInput
	// PPPoE service name.
	ServiceName pulumi.StringPtrInput
	// Enable/disable sFlow on this interface. Valid values: `enable`, `disable`.
	SflowSampler pulumi.StringPtrInput
	// Permanent SNMP Index of the interface.
	SnmpIndex pulumi.IntPtrInput
	// Interface speed. The default setting and the options available depend on the interface hardware. Valid values: `auto`, `10full`, `10half`, `100full`, `100half`, `1000full`, `1000half`, `1000auto`.
	Speed pulumi.StringPtrInput
	// Egress Spillover threshold (0 - 16776000 kbps), 0 means unlimited.
	SpilloverThreshold pulumi.IntPtrInput
	// Enable/disable source IP check. Valid values: `enable`, `disable`.
	SrcCheck pulumi.StringPtrInput
	// Enable/disable VRRP. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable STP forwarding. Valid values: `enable`, `disable`.
	Stpforward pulumi.StringPtrInput
	// Configure STP forwarding mode. Valid values: `rpl-all-ext-id`, `rpl-bridge-ext-id`, `rpl-nothing`.
	StpforwardMode pulumi.StringPtrInput
	// Enable to always send packets from this interface to a destination MAC address. Valid values: `enable`, `disable`.
	Subst pulumi.StringPtrInput
	// Destination MAC address that all packets are sent to from this interface.
	SubstituteDstMac pulumi.StringPtrInput
	// Initial create for switch-controller VLANs.
	SwcFirstCreate pulumi.IntPtrInput
	// Creation status for switch-controller VLANs.
	SwcVlan pulumi.IntPtrInput
	// Contained in switch.
	Switch pulumi.StringPtrInput
	// Block FortiSwitch port-to-port traffic. Valid values: `enable`, `disable`.
	SwitchControllerAccessVlan pulumi.StringPtrInput
	// Enable/disable FortiSwitch ARP inspection. Valid values: `enable`, `disable`.
	SwitchControllerArpInspection pulumi.StringPtrInput
	// Switch controller DHCP snooping. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnooping pulumi.StringPtrInput
	// Switch controller DHCP snooping option82. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingOption82 pulumi.StringPtrInput
	// Switch controller DHCP snooping verify MAC. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingVerifyMac pulumi.StringPtrInput
	// Interface's purpose when assigning traffic (read only). Valid values: `none`, `default-vlan`, `quarantine`, `rspan`, `voice`, `video`, `nac`.
	SwitchControllerFeature pulumi.StringPtrInput
	// Switch controller IGMP snooping. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnooping pulumi.StringPtrInput
	// Switch controller IGMP snooping fast-leave. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingFastLeave pulumi.StringPtrInput
	// Switch controller IGMP snooping proxy. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingProxy pulumi.StringPtrInput
	// Enable/disable managed FortiSwitch IoT scanning. Valid values: `enable`, `disable`.
	SwitchControllerIotScanning pulumi.StringPtrInput
	// Limit the number of dynamic MAC addresses on this VLAN (1 - 128, 0 = no limit, default).
	SwitchControllerLearningLimit pulumi.IntPtrInput
	// VLAN to use for FortiLink management purposes.
	SwitchControllerMgmtVlan pulumi.IntPtrInput
	// Integrated NAC settings for managed FortiSwitch.
	SwitchControllerNac pulumi.StringPtrInput
	// Stop Layer2 MAC learning and interception of BPDUs and other packets on this interface. Valid values: `disable`, `enable`.
	SwitchControllerRspanMode pulumi.StringPtrInput
	// Source IP address used in FortiLink over L3 connections. Valid values: `outbound`, `fixed`.
	SwitchControllerSourceIp pulumi.StringPtrInput
	// Switch controller traffic policy for the VLAN.
	SwitchControllerTrafficPolicy pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings SystemInterfaceTaggingArrayInput
	// TCP maximum segment size. 0 means do not change segment size.
	TcpMss pulumi.IntPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp1 pulumi.StringPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp2 pulumi.StringPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp3 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp61 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp62 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp63 pulumi.StringPtrInput
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringPtrInput
	// Username of the PPPoE account, provided by your ISP.
	Username pulumi.StringPtrInput
	// Interface is in this virtual domain (VDOM).
	Vdom pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Switch control interface VLAN ID.
	Vindex pulumi.IntPtrInput
	// Ethernet protocol of VLAN. Valid values: `8021q`, `8021ad`.
	VlanProtocol pulumi.StringPtrInput
	// Enable/disable traffic forwarding between VLANs on this interface. Valid values: `enable`, `disable`.
	Vlanforward pulumi.StringPtrInput
	// VLAN ID (1 - 4094).
	Vlanid pulumi.IntPtrInput
	// Virtual Routing Forwarding ID.
	Vrf pulumi.IntPtrInput
	// Enable/disable use of virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac pulumi.StringPtrInput
	// VRRP configuration. The structure of `vrrp` block is documented below.
	Vrrps SystemInterfaceVrrpArrayInput
	// Enable/disable WCCP on this interface. Used for encapsulated WCCP communication between WCCP clients and servers. Valid values: `enable`, `disable`.
	Wccp pulumi.StringPtrInput
	// Default weight for static routes (if route has no weight configured).
	Weight pulumi.IntPtrInput
	// WINS server IP.
	WinsIp pulumi.StringPtrInput
}

func (SystemInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemInterfaceState)(nil)).Elem()
}

type systemInterfaceArgs struct {
	// PPPoE server name.
	AcName *string `pulumi:"acName"`
	// Aggregate interface.
	Aggregate *string `pulumi:"aggregate"`
	// Frame distribution algorithm. Valid values: `L2`, `L3`, `L4`.
	Algorithm *string `pulumi:"algorithm"`
	// Alias will be displayed with the interface name to make it easier to distinguish.
	Alias *string `pulumi:"alias"`
	// Management access settings for the secondary IP address.
	Allowaccess *string `pulumi:"allowaccess"`
	// Enable/disable automatic registration of unknown FortiAP devices. Valid values: `enable`, `disable`.
	ApDiscover *string `pulumi:"apDiscover"`
	// Enable/disable ARP forwarding. Valid values: `enable`, `disable`.
	Arpforward *string `pulumi:"arpforward"`
	// PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	AuthType *string `pulumi:"authType"`
	// Enable/disable automatic authorization of dedicated Fortinet extension device on this interface. Valid values: `enable`, `disable`.
	AutoAuthExtensionDevice *string `pulumi:"autoAuthExtensionDevice"`
	// Indicates whether the interface is automatically created by FortiGate, for example, created during the VPN creation process. If it is, set it to "auto", else keep it empty.
	Autogenerated *string `pulumi:"autogenerated"`
	// Bandwidth measure time
	BandwidthMeasureTime *int `pulumi:"bandwidthMeasureTime"`
	// Bidirectional Forwarding Detection (BFD) settings. Valid values: `global`, `enable`, `disable`.
	Bfd *string `pulumi:"bfd"`
	// BFD desired minimal transmit interval.
	BfdDesiredMinTx *int `pulumi:"bfdDesiredMinTx"`
	// BFD detection multiplier.
	BfdDetectMult *int `pulumi:"bfdDetectMult"`
	// BFD required minimal receive interval.
	BfdRequiredMinRx *int `pulumi:"bfdRequiredMinRx"`
	// Enable/disable broadcasting FortiClient discovery messages. Valid values: `enable`, `disable`.
	BroadcastForticlientDiscovery *string `pulumi:"broadcastForticlientDiscovery"`
	// Enable/disable broadcast forwarding. Valid values: `enable`, `disable`.
	BroadcastForward *string `pulumi:"broadcastForward"`
	// Enable/disable captive portal.
	CaptivePortal *int `pulumi:"captivePortal"`
	// CLI connection status.
	CliConnStatus *int `pulumi:"cliConnStatus"`
	// DHCP client options. The structure of `clientOptions` block is documented below.
	ClientOptions []SystemInterfaceClientOption `pulumi:"clientOptions"`
	// Color of icon on the GUI.
	Color *int `pulumi:"color"`
	// Configure interface for single purpose. Valid values: `none`, `management`.
	DedicatedTo *string `pulumi:"dedicatedTo"`
	// Enable to get the gateway IP from the DHCP or PPPoE server. Valid values: `enable`, `disable`.
	Defaultgw *string `pulumi:"defaultgw"`
	// Description.
	Description *string `pulumi:"description"`
	// MTU of detected peer (0 - 4294967295).
	DetectedPeerMtu *int `pulumi:"detectedPeerMtu"`
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol *string `pulumi:"detectprotocol"`
	// Gateway's ping server for this IP.
	Detectserver *string `pulumi:"detectserver"`
	// Device access list.
	DeviceAccessList *string `pulumi:"deviceAccessList"`
	// Enable/disable passively gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentification *string `pulumi:"deviceIdentification"`
	// Enable/disable active gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentificationActiveScan *string `pulumi:"deviceIdentificationActiveScan"`
	// Enable/disable inclusion of devices detected on this interface in network vulnerability scans. Valid values: `disable`, `enable`.
	DeviceNetscan *string `pulumi:"deviceNetscan"`
	// Enable/disable passive gathering of user identity information about users on this interface. Valid values: `enable`, `disable`.
	DeviceUserIdentification *string `pulumi:"deviceUserIdentification"`
	// Device Index.
	Devindex *int `pulumi:"devindex"`
	// DHCP client identifier.
	DhcpClientIdentifier *string `pulumi:"dhcpClientIdentifier"`
	// Enable/disable DHCP relay agent option. Valid values: `enable`, `disable`.
	DhcpRelayAgentOption *string `pulumi:"dhcpRelayAgentOption"`
	// Specify outgoing interface to reach server.
	DhcpRelayInterface *string `pulumi:"dhcpRelayInterface"`
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	DhcpRelayInterfaceSelectMethod *string `pulumi:"dhcpRelayInterfaceSelectMethod"`
	// DHCP relay IP address.
	DhcpRelayIp *string `pulumi:"dhcpRelayIp"`
	// Enable/disable allowing this interface to act as a DHCP relay. Valid values: `disable`, `enable`.
	DhcpRelayService *string `pulumi:"dhcpRelayService"`
	// DHCP relay type (regular or IPsec). Valid values: `regular`, `ipsec`.
	DhcpRelayType *string `pulumi:"dhcpRelayType"`
	// DHCP renew time in seconds (300-604800), 0 means use the renew time provided by the server.
	DhcpRenewTime *int `pulumi:"dhcpRenewTime"`
	// Time in seconds to wait before retrying to start a PPPoE discovery, 0 means no timeout.
	DiscRetryTimeout *int `pulumi:"discRetryTimeout"`
	// Time in milliseconds to wait before sending a notification that this interface is down or disconnected.
	DisconnectThreshold *int `pulumi:"disconnectThreshold"`
	// Distance for routes learned through PPPoE or DHCP, lower distance indicates preferred route.
	Distance *int `pulumi:"distance"`
	// Enable/disable use DNS acquired by DHCP or PPPoE. Valid values: `enable`, `disable`.
	DnsServerOverride *string `pulumi:"dnsServerOverride"`
	// Enable/disable drop fragment packets. Valid values: `enable`, `disable`.
	DropFragment *string `pulumi:"dropFragment"`
	// Enable/disable drop overlapped fragment packets. Valid values: `enable`, `disable`.
	DropOverlappedFragment *string `pulumi:"dropOverlappedFragment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Outgoing traffic shaping profile.
	EgressShapingProfile *string `pulumi:"egressShapingProfile"`
	// Enable/disable endpoint compliance enforcement. Valid values: `enable`, `disable`.
	EndpointCompliance *string `pulumi:"endpointCompliance"`
	// Estimated maximum downstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedDownstreamBandwidth *int `pulumi:"estimatedDownstreamBandwidth"`
	// Estimated maximum upstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedUpstreamBandwidth *int `pulumi:"estimatedUpstreamBandwidth"`
	// Enable/disable the explicit FTP proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitFtpProxy *string `pulumi:"explicitFtpProxy"`
	// Enable/disable the explicit web proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitWebProxy *string `pulumi:"explicitWebProxy"`
	// Enable/disable identifying the interface as an external interface (which usually means it's connected to the Internet). Valid values: `enable`, `disable`.
	External *string `pulumi:"external"`
	// Action on extender when interface fail . Valid values: `soft-restart`, `hard-restart`, `reboot`.
	FailActionOnExtender *string `pulumi:"failActionOnExtender"`
	// Names of the FortiGate interfaces from which the link failure alert is sent for this interface. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces []SystemInterfaceFailAlertInterface `pulumi:"failAlertInterfaces"`
	// Select link-failed-signal or link-down method to alert about a failed link. Valid values: `link-failed-signal`, `link-down`.
	FailAlertMethod *string `pulumi:"failAlertMethod"`
	// Enable/disable fail detection features for this interface. Valid values: `enable`, `disable`.
	FailDetect *string `pulumi:"failDetect"`
	// Options for detecting that this interface has failed. Valid values: `detectserver`, `link-down`.
	FailDetectOption *string `pulumi:"failDetectOption"`
	// Enable/disable FortiHeartBeat (FortiTelemetry on GUI). Valid values: `enable`, `disable`.
	Fortiheartbeat *string `pulumi:"fortiheartbeat"`
	// Enable FortiLink to dedicate this interface to manage other Fortinet devices. Valid values: `enable`, `disable`.
	Fortilink *string `pulumi:"fortilink"`
	// fortilink split interface backup link.
	FortilinkBackupLink *int `pulumi:"fortilinkBackupLink"`
	// Protocol for FortiGate neighbor discovery. Valid values: `lldp`, `fortilink`.
	FortilinkNeighborDetect *string `pulumi:"fortilinkNeighborDetect"`
	// Enable/disable FortiLink split interface to connect member link to different FortiSwitch in stack for uplink redundancy. Valid values: `enable`, `disable`.
	FortilinkSplitInterface *string `pulumi:"fortilinkSplitInterface"`
	// Enable/disable FortiLink switch-stacking on this interface. Valid values: `enable`, `disable`.
	FortilinkStacking *string `pulumi:"fortilinkStacking"`
	// Transparent mode forward domain.
	ForwardDomain *int `pulumi:"forwardDomain"`
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect *string `pulumi:"gwdetect"`
	// HA election priority for the PING server.
	HaPriority *int `pulumi:"haPriority"`
	// Enable/disable ICMP accept redirect. Valid values: `enable`, `disable`.
	IcmpAcceptRedirect *string `pulumi:"icmpAcceptRedirect"`
	// Enable/disable ICMP send redirect. Valid values: `enable`, `disable`.
	IcmpSendRedirect *string `pulumi:"icmpSendRedirect"`
	// Enable/disable authentication for this interface. Valid values: `enable`, `disable`.
	IdentAccept *string `pulumi:"identAccept"`
	// PPPoE auto disconnect after idle timeout seconds, 0 means no timeout.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// Bandwidth limit for incoming traffic (0 - 16776000 kbps), 0 means unlimited.
	Inbandwidth *int `pulumi:"inbandwidth"`
	// Incoming traffic shaping profile.
	IngressShapingProfile *string `pulumi:"ingressShapingProfile"`
	// Ingress Spillover threshold (0 - 16776000 kbps).
	IngressSpilloverThreshold *int `pulumi:"ingressSpilloverThreshold"`
	// Interface name.
	Interface *string `pulumi:"interface"`
	// Implicitly created.
	Internal *int `pulumi:"internal"`
	// Secondary IP address of the interface.
	Ip *string `pulumi:"ip"`
	// Enable/disable automatic IP address assignment of this interface by FortiIPAM. Valid values: `enable`, `disable`.
	IpManagedByFortiipam *string `pulumi:"ipManagedByFortiipam"`
	// Enable/disable IP/MAC binding. Valid values: `enable`, `disable`.
	Ipmac *string `pulumi:"ipmac"`
	// Enable/disable the use of this interface as a one-armed sniffer. Valid values: `enable`, `disable`.
	IpsSnifferMode *string `pulumi:"ipsSnifferMode"`
	// Unnumbered IP used for PPPoE interfaces for which no unique local address is provided.
	Ipunnumbered *string `pulumi:"ipunnumbered"`
	// IPv6 of interface. The structure of `ipv6` block is documented below.
	Ipv6 *SystemInterfaceIpv6 `pulumi:"ipv6"`
	// Enable/disable l2 forwarding. Valid values: `enable`, `disable`.
	L2forward *string `pulumi:"l2forward"`
	// LACP HA slave. Valid values: `enable`, `disable`.
	LacpHaSlave *string `pulumi:"lacpHaSlave"`
	// LACP mode. Valid values: `static`, `passive`, `active`.
	LacpMode *string `pulumi:"lacpMode"`
	// How often the interface sends LACP messages. Valid values: `slow`, `fast`.
	LacpSpeed *string `pulumi:"lacpSpeed"`
	// Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.
	LcpEchoInterval *int `pulumi:"lcpEchoInterval"`
	// Maximum missed LCP echo messages before disconnect.
	LcpMaxEchoFails *int `pulumi:"lcpMaxEchoFails"`
	// Number of milliseconds to wait before considering a link is up.
	LinkUpDelay *int `pulumi:"linkUpDelay"`
	// LLDP-MED network policy profile.
	LldpNetworkPolicy *string `pulumi:"lldpNetworkPolicy"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception. Valid values: `enable`, `disable`, `vdom`.
	LldpReception *string `pulumi:"lldpReception"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission. Valid values: `enable`, `disable`, `vdom`.
	LldpTransmission *string `pulumi:"lldpTransmission"`
	// Change the interface's MAC address.
	Macaddr *string `pulumi:"macaddr"`
	// Available when FortiLink is enabled, used for managed devices through FortiLink interface. The structure of `managedDevice` block is documented below.
	ManagedDevices []SystemInterfaceManagedDevice `pulumi:"managedDevices"`
	// Number of IP addresses to be allocated by FortiIPAM and used by this FortiGate unit's DHCP server settings. Valid values: `256`, `512`, `1024`, `2048`, `4096`, `8192`, `16384`, `32768`, `65536`.
	ManagedSubnetworkSize *string `pulumi:"managedSubnetworkSize"`
	// High Availability in-band management IP address of this interface.
	ManagementIp *string `pulumi:"managementIp"`
	// Measured downstream bandwidth (kbps).
	MeasuredDownstreamBandwidth *int `pulumi:"measuredDownstreamBandwidth"`
	// Measured upstream bandwidth (kbps).
	MeasuredUpstreamBandwidth *int `pulumi:"measuredUpstreamBandwidth"`
	// Physical interfaces that belong to the aggregate or redundant interface. The structure of `member` block is documented below.
	Members []SystemInterfaceMember `pulumi:"members"`
	// Minimum number of aggregated ports that must be up.
	MinLinks *int `pulumi:"minLinks"`
	// Action to take when less than the configured minimum number of links are active. Valid values: `operational`, `administrative`.
	MinLinksDown *string `pulumi:"minLinksDown"`
	// Addressing mode (static, DHCP, PPPoE). Valid values: `static`, `dhcp`, `pppoe`.
	Mode *string `pulumi:"mode"`
	// Enable monitoring bandwidth on this interface. Valid values: `enable`, `disable`.
	MonitorBandwidth *string `pulumi:"monitorBandwidth"`
	// MTU value for this interface.
	Mtu *int `pulumi:"mtu"`
	// Enable to set a custom MTU for this interface. Valid values: `enable`, `disable`.
	MtuOverride *string `pulumi:"mtuOverride"`
	// Tag name.
	Name *string `pulumi:"name"`
	// Enable/disable NDISC forwarding. Valid values: `enable`, `disable`.
	Ndiscforward *string `pulumi:"ndiscforward"`
	// Enable/disable NETBIOS forwarding. Valid values: `disable`, `enable`.
	NetbiosForward *string `pulumi:"netbiosForward"`
	// Enable/disable NetFlow on this interface and set the data that NetFlow collects (rx, tx, or both). Valid values: `disable`, `tx`, `rx`, `both`.
	NetflowSampler *string `pulumi:"netflowSampler"`
	// Bandwidth limit for outgoing traffic (0 - 16776000 kbps).
	Outbandwidth *int `pulumi:"outbandwidth"`
	// PPPoE Active Discovery Terminate (PADT) used to terminate sessions after an idle time.
	PadtRetryTimeout *int `pulumi:"padtRetryTimeout"`
	// PPPoE account's password.
	Password *string `pulumi:"password"`
	// PING server status.
	PingServStatus *int `pulumi:"pingServStatus"`
	// sFlow polling interval (1 - 255 sec).
	PollingInterval *int `pulumi:"pollingInterval"`
	// Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`.
	PppoeUnnumberedNegotiate *string `pulumi:"pppoeUnnumberedNegotiate"`
	// PPTP authentication type. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	PptpAuthType *string `pulumi:"pptpAuthType"`
	// Enable/disable PPTP client. Valid values: `enable`, `disable`.
	PptpClient *string `pulumi:"pptpClient"`
	// PPTP password.
	PptpPassword *string `pulumi:"pptpPassword"`
	// PPTP server IP address.
	PptpServerIp *string `pulumi:"pptpServerIp"`
	// Idle timer in minutes (0 for disabled).
	PptpTimeout *int `pulumi:"pptpTimeout"`
	// PPTP user name.
	PptpUser *string `pulumi:"pptpUser"`
	// Enable/disable preservation of session route when dirty. Valid values: `enable`, `disable`.
	PreserveSessionRoute *string `pulumi:"preserveSessionRoute"`
	// Priority of the virtual router (1 - 255).
	Priority *int `pulumi:"priority"`
	// Enable/disable fail back to higher priority port once recovered. Valid values: `enable`, `disable`.
	PriorityOverride *string `pulumi:"priorityOverride"`
	// Enable/disable proxy captive portal on this interface. Valid values: `enable`, `disable`.
	ProxyCaptivePortal *string `pulumi:"proxyCaptivePortal"`
	// Redundant interface.
	RedundantInterface *string `pulumi:"redundantInterface"`
	// Remote IP address of tunnel.
	RemoteIp *string `pulumi:"remoteIp"`
	// Replacement message override group.
	ReplacemsgOverrideGroup *string `pulumi:"replacemsgOverrideGroup"`
	// RX ring size.
	RingRx *int `pulumi:"ringRx"`
	// TX ring size.
	RingTx *int `pulumi:"ringTx"`
	// Interface role. Valid values: `lan`, `wan`, `dmz`, `undefined`.
	Role *string `pulumi:"role"`
	// Data that NetFlow collects (rx, tx, or both). Valid values: `tx`, `rx`, `both`.
	SampleDirection *string `pulumi:"sampleDirection"`
	// sFlow sample rate (10 - 99999).
	SampleRate *int `pulumi:"sampleRate"`
	// Enable monitoring or blocking connections to Botnet servers through this interface. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections *string `pulumi:"scanBotnetConnections"`
	SecondaryIp           *string `pulumi:"secondaryIp"`
	// Second IP address of interface. The structure of `secondaryip` block is documented below.
	Secondaryips []SystemInterfaceSecondaryip `pulumi:"secondaryips"`
	// Name of security-exempt-list.
	SecurityExemptList *string `pulumi:"securityExemptList"`
	// URL of external authentication logout server.
	SecurityExternalLogout *string `pulumi:"securityExternalLogout"`
	// URL of external authentication web server.
	SecurityExternalWeb *string `pulumi:"securityExternalWeb"`
	// User groups that can authenticate with the captive portal. The structure of `securityGroups` block is documented below.
	SecurityGroups []SystemInterfaceSecurityGroup `pulumi:"securityGroups"`
	// Enable/disable MAC authentication bypass. Valid values: `mac-auth-only`, `enable`, `disable`.
	SecurityMacAuthBypass *string `pulumi:"securityMacAuthBypass"`
	// Turn on captive portal authentication for this interface. Valid values: `none`, `captive-portal`, `802.1X`.
	SecurityMode *string `pulumi:"securityMode"`
	// URL redirection after disclaimer/authentication.
	SecurityRedirectUrl *string `pulumi:"securityRedirectUrl"`
	// PPPoE service name.
	ServiceName *string `pulumi:"serviceName"`
	// Enable/disable sFlow on this interface. Valid values: `enable`, `disable`.
	SflowSampler *string `pulumi:"sflowSampler"`
	// Permanent SNMP Index of the interface.
	SnmpIndex *int `pulumi:"snmpIndex"`
	// Interface speed. The default setting and the options available depend on the interface hardware. Valid values: `auto`, `10full`, `10half`, `100full`, `100half`, `1000full`, `1000half`, `1000auto`.
	Speed *string `pulumi:"speed"`
	// Egress Spillover threshold (0 - 16776000 kbps), 0 means unlimited.
	SpilloverThreshold *int `pulumi:"spilloverThreshold"`
	// Enable/disable source IP check. Valid values: `enable`, `disable`.
	SrcCheck *string `pulumi:"srcCheck"`
	// Enable/disable VRRP. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Enable/disable STP forwarding. Valid values: `enable`, `disable`.
	Stpforward *string `pulumi:"stpforward"`
	// Configure STP forwarding mode. Valid values: `rpl-all-ext-id`, `rpl-bridge-ext-id`, `rpl-nothing`.
	StpforwardMode *string `pulumi:"stpforwardMode"`
	// Enable to always send packets from this interface to a destination MAC address. Valid values: `enable`, `disable`.
	Subst *string `pulumi:"subst"`
	// Destination MAC address that all packets are sent to from this interface.
	SubstituteDstMac *string `pulumi:"substituteDstMac"`
	// Initial create for switch-controller VLANs.
	SwcFirstCreate *int `pulumi:"swcFirstCreate"`
	// Creation status for switch-controller VLANs.
	SwcVlan *int `pulumi:"swcVlan"`
	// Contained in switch.
	Switch *string `pulumi:"switch"`
	// Block FortiSwitch port-to-port traffic. Valid values: `enable`, `disable`.
	SwitchControllerAccessVlan *string `pulumi:"switchControllerAccessVlan"`
	// Enable/disable FortiSwitch ARP inspection. Valid values: `enable`, `disable`.
	SwitchControllerArpInspection *string `pulumi:"switchControllerArpInspection"`
	// Switch controller DHCP snooping. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnooping *string `pulumi:"switchControllerDhcpSnooping"`
	// Switch controller DHCP snooping option82. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingOption82 *string `pulumi:"switchControllerDhcpSnoopingOption82"`
	// Switch controller DHCP snooping verify MAC. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingVerifyMac *string `pulumi:"switchControllerDhcpSnoopingVerifyMac"`
	// Interface's purpose when assigning traffic (read only). Valid values: `none`, `default-vlan`, `quarantine`, `rspan`, `voice`, `video`, `nac`.
	SwitchControllerFeature *string `pulumi:"switchControllerFeature"`
	// Switch controller IGMP snooping. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnooping *string `pulumi:"switchControllerIgmpSnooping"`
	// Switch controller IGMP snooping fast-leave. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingFastLeave *string `pulumi:"switchControllerIgmpSnoopingFastLeave"`
	// Switch controller IGMP snooping proxy. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingProxy *string `pulumi:"switchControllerIgmpSnoopingProxy"`
	// Enable/disable managed FortiSwitch IoT scanning. Valid values: `enable`, `disable`.
	SwitchControllerIotScanning *string `pulumi:"switchControllerIotScanning"`
	// Limit the number of dynamic MAC addresses on this VLAN (1 - 128, 0 = no limit, default).
	SwitchControllerLearningLimit *int `pulumi:"switchControllerLearningLimit"`
	// VLAN to use for FortiLink management purposes.
	SwitchControllerMgmtVlan *int `pulumi:"switchControllerMgmtVlan"`
	// Integrated NAC settings for managed FortiSwitch.
	SwitchControllerNac *string `pulumi:"switchControllerNac"`
	// Stop Layer2 MAC learning and interception of BPDUs and other packets on this interface. Valid values: `disable`, `enable`.
	SwitchControllerRspanMode *string `pulumi:"switchControllerRspanMode"`
	// Source IP address used in FortiLink over L3 connections. Valid values: `outbound`, `fixed`.
	SwitchControllerSourceIp *string `pulumi:"switchControllerSourceIp"`
	// Switch controller traffic policy for the VLAN.
	SwitchControllerTrafficPolicy *string `pulumi:"switchControllerTrafficPolicy"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []SystemInterfaceTagging `pulumi:"taggings"`
	// TCP maximum segment size. 0 means do not change segment size.
	TcpMss *int `pulumi:"tcpMss"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp1 *string `pulumi:"trustIp1"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp2 *string `pulumi:"trustIp2"`
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp3 *string `pulumi:"trustIp3"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp61 *string `pulumi:"trustIp61"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp62 *string `pulumi:"trustIp62"`
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp63 *string `pulumi:"trustIp63"`
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type *string `pulumi:"type"`
	// Username of the PPPoE account, provided by your ISP.
	Username *string `pulumi:"username"`
	// Interface is in this virtual domain (VDOM).
	Vdom string `pulumi:"vdom"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
	// Switch control interface VLAN ID.
	Vindex *int `pulumi:"vindex"`
	// Ethernet protocol of VLAN. Valid values: `8021q`, `8021ad`.
	VlanProtocol *string `pulumi:"vlanProtocol"`
	// Enable/disable traffic forwarding between VLANs on this interface. Valid values: `enable`, `disable`.
	Vlanforward *string `pulumi:"vlanforward"`
	// VLAN ID (1 - 4094).
	Vlanid *int `pulumi:"vlanid"`
	// Virtual Routing Forwarding ID.
	Vrf *int `pulumi:"vrf"`
	// Enable/disable use of virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac *string `pulumi:"vrrpVirtualMac"`
	// VRRP configuration. The structure of `vrrp` block is documented below.
	Vrrps []SystemInterfaceVrrp `pulumi:"vrrps"`
	// Enable/disable WCCP on this interface. Used for encapsulated WCCP communication between WCCP clients and servers. Valid values: `enable`, `disable`.
	Wccp *string `pulumi:"wccp"`
	// Default weight for static routes (if route has no weight configured).
	Weight *int `pulumi:"weight"`
	// WINS server IP.
	WinsIp *string `pulumi:"winsIp"`
}

// The set of arguments for constructing a SystemInterface resource.
type SystemInterfaceArgs struct {
	// PPPoE server name.
	AcName pulumi.StringPtrInput
	// Aggregate interface.
	Aggregate pulumi.StringPtrInput
	// Frame distribution algorithm. Valid values: `L2`, `L3`, `L4`.
	Algorithm pulumi.StringPtrInput
	// Alias will be displayed with the interface name to make it easier to distinguish.
	Alias pulumi.StringPtrInput
	// Management access settings for the secondary IP address.
	Allowaccess pulumi.StringPtrInput
	// Enable/disable automatic registration of unknown FortiAP devices. Valid values: `enable`, `disable`.
	ApDiscover pulumi.StringPtrInput
	// Enable/disable ARP forwarding. Valid values: `enable`, `disable`.
	Arpforward pulumi.StringPtrInput
	// PPP authentication type to use. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	AuthType pulumi.StringPtrInput
	// Enable/disable automatic authorization of dedicated Fortinet extension device on this interface. Valid values: `enable`, `disable`.
	AutoAuthExtensionDevice pulumi.StringPtrInput
	// Indicates whether the interface is automatically created by FortiGate, for example, created during the VPN creation process. If it is, set it to "auto", else keep it empty.
	Autogenerated pulumi.StringPtrInput
	// Bandwidth measure time
	BandwidthMeasureTime pulumi.IntPtrInput
	// Bidirectional Forwarding Detection (BFD) settings. Valid values: `global`, `enable`, `disable`.
	Bfd pulumi.StringPtrInput
	// BFD desired minimal transmit interval.
	BfdDesiredMinTx pulumi.IntPtrInput
	// BFD detection multiplier.
	BfdDetectMult pulumi.IntPtrInput
	// BFD required minimal receive interval.
	BfdRequiredMinRx pulumi.IntPtrInput
	// Enable/disable broadcasting FortiClient discovery messages. Valid values: `enable`, `disable`.
	BroadcastForticlientDiscovery pulumi.StringPtrInput
	// Enable/disable broadcast forwarding. Valid values: `enable`, `disable`.
	BroadcastForward pulumi.StringPtrInput
	// Enable/disable captive portal.
	CaptivePortal pulumi.IntPtrInput
	// CLI connection status.
	CliConnStatus pulumi.IntPtrInput
	// DHCP client options. The structure of `clientOptions` block is documented below.
	ClientOptions SystemInterfaceClientOptionArrayInput
	// Color of icon on the GUI.
	Color pulumi.IntPtrInput
	// Configure interface for single purpose. Valid values: `none`, `management`.
	DedicatedTo pulumi.StringPtrInput
	// Enable to get the gateway IP from the DHCP or PPPoE server. Valid values: `enable`, `disable`.
	Defaultgw pulumi.StringPtrInput
	// Description.
	Description pulumi.StringPtrInput
	// MTU of detected peer (0 - 4294967295).
	DetectedPeerMtu pulumi.IntPtrInput
	// Protocols used to detect the server. Valid values: `ping`, `tcp-echo`, `udp-echo`.
	Detectprotocol pulumi.StringPtrInput
	// Gateway's ping server for this IP.
	Detectserver pulumi.StringPtrInput
	// Device access list.
	DeviceAccessList pulumi.StringPtrInput
	// Enable/disable passively gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentification pulumi.StringPtrInput
	// Enable/disable active gathering of device identity information about the devices on the network connected to this interface. Valid values: `enable`, `disable`.
	DeviceIdentificationActiveScan pulumi.StringPtrInput
	// Enable/disable inclusion of devices detected on this interface in network vulnerability scans. Valid values: `disable`, `enable`.
	DeviceNetscan pulumi.StringPtrInput
	// Enable/disable passive gathering of user identity information about users on this interface. Valid values: `enable`, `disable`.
	DeviceUserIdentification pulumi.StringPtrInput
	// Device Index.
	Devindex pulumi.IntPtrInput
	// DHCP client identifier.
	DhcpClientIdentifier pulumi.StringPtrInput
	// Enable/disable DHCP relay agent option. Valid values: `enable`, `disable`.
	DhcpRelayAgentOption pulumi.StringPtrInput
	// Specify outgoing interface to reach server.
	DhcpRelayInterface pulumi.StringPtrInput
	// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
	DhcpRelayInterfaceSelectMethod pulumi.StringPtrInput
	// DHCP relay IP address.
	DhcpRelayIp pulumi.StringPtrInput
	// Enable/disable allowing this interface to act as a DHCP relay. Valid values: `disable`, `enable`.
	DhcpRelayService pulumi.StringPtrInput
	// DHCP relay type (regular or IPsec). Valid values: `regular`, `ipsec`.
	DhcpRelayType pulumi.StringPtrInput
	// DHCP renew time in seconds (300-604800), 0 means use the renew time provided by the server.
	DhcpRenewTime pulumi.IntPtrInput
	// Time in seconds to wait before retrying to start a PPPoE discovery, 0 means no timeout.
	DiscRetryTimeout pulumi.IntPtrInput
	// Time in milliseconds to wait before sending a notification that this interface is down or disconnected.
	DisconnectThreshold pulumi.IntPtrInput
	// Distance for routes learned through PPPoE or DHCP, lower distance indicates preferred route.
	Distance pulumi.IntPtrInput
	// Enable/disable use DNS acquired by DHCP or PPPoE. Valid values: `enable`, `disable`.
	DnsServerOverride pulumi.StringPtrInput
	// Enable/disable drop fragment packets. Valid values: `enable`, `disable`.
	DropFragment pulumi.StringPtrInput
	// Enable/disable drop overlapped fragment packets. Valid values: `enable`, `disable`.
	DropOverlappedFragment pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Outgoing traffic shaping profile.
	EgressShapingProfile pulumi.StringPtrInput
	// Enable/disable endpoint compliance enforcement. Valid values: `enable`, `disable`.
	EndpointCompliance pulumi.StringPtrInput
	// Estimated maximum downstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedDownstreamBandwidth pulumi.IntPtrInput
	// Estimated maximum upstream bandwidth (kbps). Used to estimate link utilization.
	EstimatedUpstreamBandwidth pulumi.IntPtrInput
	// Enable/disable the explicit FTP proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitFtpProxy pulumi.StringPtrInput
	// Enable/disable the explicit web proxy on this interface. Valid values: `enable`, `disable`.
	ExplicitWebProxy pulumi.StringPtrInput
	// Enable/disable identifying the interface as an external interface (which usually means it's connected to the Internet). Valid values: `enable`, `disable`.
	External pulumi.StringPtrInput
	// Action on extender when interface fail . Valid values: `soft-restart`, `hard-restart`, `reboot`.
	FailActionOnExtender pulumi.StringPtrInput
	// Names of the FortiGate interfaces from which the link failure alert is sent for this interface. The structure of `failAlertInterfaces` block is documented below.
	FailAlertInterfaces SystemInterfaceFailAlertInterfaceArrayInput
	// Select link-failed-signal or link-down method to alert about a failed link. Valid values: `link-failed-signal`, `link-down`.
	FailAlertMethod pulumi.StringPtrInput
	// Enable/disable fail detection features for this interface. Valid values: `enable`, `disable`.
	FailDetect pulumi.StringPtrInput
	// Options for detecting that this interface has failed. Valid values: `detectserver`, `link-down`.
	FailDetectOption pulumi.StringPtrInput
	// Enable/disable FortiHeartBeat (FortiTelemetry on GUI). Valid values: `enable`, `disable`.
	Fortiheartbeat pulumi.StringPtrInput
	// Enable FortiLink to dedicate this interface to manage other Fortinet devices. Valid values: `enable`, `disable`.
	Fortilink pulumi.StringPtrInput
	// fortilink split interface backup link.
	FortilinkBackupLink pulumi.IntPtrInput
	// Protocol for FortiGate neighbor discovery. Valid values: `lldp`, `fortilink`.
	FortilinkNeighborDetect pulumi.StringPtrInput
	// Enable/disable FortiLink split interface to connect member link to different FortiSwitch in stack for uplink redundancy. Valid values: `enable`, `disable`.
	FortilinkSplitInterface pulumi.StringPtrInput
	// Enable/disable FortiLink switch-stacking on this interface. Valid values: `enable`, `disable`.
	FortilinkStacking pulumi.StringPtrInput
	// Transparent mode forward domain.
	ForwardDomain pulumi.IntPtrInput
	// Enable/disable detect gateway alive for first. Valid values: `enable`, `disable`.
	Gwdetect pulumi.StringPtrInput
	// HA election priority for the PING server.
	HaPriority pulumi.IntPtrInput
	// Enable/disable ICMP accept redirect. Valid values: `enable`, `disable`.
	IcmpAcceptRedirect pulumi.StringPtrInput
	// Enable/disable ICMP send redirect. Valid values: `enable`, `disable`.
	IcmpSendRedirect pulumi.StringPtrInput
	// Enable/disable authentication for this interface. Valid values: `enable`, `disable`.
	IdentAccept pulumi.StringPtrInput
	// PPPoE auto disconnect after idle timeout seconds, 0 means no timeout.
	IdleTimeout pulumi.IntPtrInput
	// Bandwidth limit for incoming traffic (0 - 16776000 kbps), 0 means unlimited.
	Inbandwidth pulumi.IntPtrInput
	// Incoming traffic shaping profile.
	IngressShapingProfile pulumi.StringPtrInput
	// Ingress Spillover threshold (0 - 16776000 kbps).
	IngressSpilloverThreshold pulumi.IntPtrInput
	// Interface name.
	Interface pulumi.StringPtrInput
	// Implicitly created.
	Internal pulumi.IntPtrInput
	// Secondary IP address of the interface.
	Ip pulumi.StringPtrInput
	// Enable/disable automatic IP address assignment of this interface by FortiIPAM. Valid values: `enable`, `disable`.
	IpManagedByFortiipam pulumi.StringPtrInput
	// Enable/disable IP/MAC binding. Valid values: `enable`, `disable`.
	Ipmac pulumi.StringPtrInput
	// Enable/disable the use of this interface as a one-armed sniffer. Valid values: `enable`, `disable`.
	IpsSnifferMode pulumi.StringPtrInput
	// Unnumbered IP used for PPPoE interfaces for which no unique local address is provided.
	Ipunnumbered pulumi.StringPtrInput
	// IPv6 of interface. The structure of `ipv6` block is documented below.
	Ipv6 SystemInterfaceIpv6PtrInput
	// Enable/disable l2 forwarding. Valid values: `enable`, `disable`.
	L2forward pulumi.StringPtrInput
	// LACP HA slave. Valid values: `enable`, `disable`.
	LacpHaSlave pulumi.StringPtrInput
	// LACP mode. Valid values: `static`, `passive`, `active`.
	LacpMode pulumi.StringPtrInput
	// How often the interface sends LACP messages. Valid values: `slow`, `fast`.
	LacpSpeed pulumi.StringPtrInput
	// Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.
	LcpEchoInterval pulumi.IntPtrInput
	// Maximum missed LCP echo messages before disconnect.
	LcpMaxEchoFails pulumi.IntPtrInput
	// Number of milliseconds to wait before considering a link is up.
	LinkUpDelay pulumi.IntPtrInput
	// LLDP-MED network policy profile.
	LldpNetworkPolicy pulumi.StringPtrInput
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception. Valid values: `enable`, `disable`, `vdom`.
	LldpReception pulumi.StringPtrInput
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission. Valid values: `enable`, `disable`, `vdom`.
	LldpTransmission pulumi.StringPtrInput
	// Change the interface's MAC address.
	Macaddr pulumi.StringPtrInput
	// Available when FortiLink is enabled, used for managed devices through FortiLink interface. The structure of `managedDevice` block is documented below.
	ManagedDevices SystemInterfaceManagedDeviceArrayInput
	// Number of IP addresses to be allocated by FortiIPAM and used by this FortiGate unit's DHCP server settings. Valid values: `256`, `512`, `1024`, `2048`, `4096`, `8192`, `16384`, `32768`, `65536`.
	ManagedSubnetworkSize pulumi.StringPtrInput
	// High Availability in-band management IP address of this interface.
	ManagementIp pulumi.StringPtrInput
	// Measured downstream bandwidth (kbps).
	MeasuredDownstreamBandwidth pulumi.IntPtrInput
	// Measured upstream bandwidth (kbps).
	MeasuredUpstreamBandwidth pulumi.IntPtrInput
	// Physical interfaces that belong to the aggregate or redundant interface. The structure of `member` block is documented below.
	Members SystemInterfaceMemberArrayInput
	// Minimum number of aggregated ports that must be up.
	MinLinks pulumi.IntPtrInput
	// Action to take when less than the configured minimum number of links are active. Valid values: `operational`, `administrative`.
	MinLinksDown pulumi.StringPtrInput
	// Addressing mode (static, DHCP, PPPoE). Valid values: `static`, `dhcp`, `pppoe`.
	Mode pulumi.StringPtrInput
	// Enable monitoring bandwidth on this interface. Valid values: `enable`, `disable`.
	MonitorBandwidth pulumi.StringPtrInput
	// MTU value for this interface.
	Mtu pulumi.IntPtrInput
	// Enable to set a custom MTU for this interface. Valid values: `enable`, `disable`.
	MtuOverride pulumi.StringPtrInput
	// Tag name.
	Name pulumi.StringPtrInput
	// Enable/disable NDISC forwarding. Valid values: `enable`, `disable`.
	Ndiscforward pulumi.StringPtrInput
	// Enable/disable NETBIOS forwarding. Valid values: `disable`, `enable`.
	NetbiosForward pulumi.StringPtrInput
	// Enable/disable NetFlow on this interface and set the data that NetFlow collects (rx, tx, or both). Valid values: `disable`, `tx`, `rx`, `both`.
	NetflowSampler pulumi.StringPtrInput
	// Bandwidth limit for outgoing traffic (0 - 16776000 kbps).
	Outbandwidth pulumi.IntPtrInput
	// PPPoE Active Discovery Terminate (PADT) used to terminate sessions after an idle time.
	PadtRetryTimeout pulumi.IntPtrInput
	// PPPoE account's password.
	Password pulumi.StringPtrInput
	// PING server status.
	PingServStatus pulumi.IntPtrInput
	// sFlow polling interval (1 - 255 sec).
	PollingInterval pulumi.IntPtrInput
	// Enable/disable PPPoE unnumbered negotiation. Valid values: `enable`, `disable`.
	PppoeUnnumberedNegotiate pulumi.StringPtrInput
	// PPTP authentication type. Valid values: `auto`, `pap`, `chap`, `mschapv1`, `mschapv2`.
	PptpAuthType pulumi.StringPtrInput
	// Enable/disable PPTP client. Valid values: `enable`, `disable`.
	PptpClient pulumi.StringPtrInput
	// PPTP password.
	PptpPassword pulumi.StringPtrInput
	// PPTP server IP address.
	PptpServerIp pulumi.StringPtrInput
	// Idle timer in minutes (0 for disabled).
	PptpTimeout pulumi.IntPtrInput
	// PPTP user name.
	PptpUser pulumi.StringPtrInput
	// Enable/disable preservation of session route when dirty. Valid values: `enable`, `disable`.
	PreserveSessionRoute pulumi.StringPtrInput
	// Priority of the virtual router (1 - 255).
	Priority pulumi.IntPtrInput
	// Enable/disable fail back to higher priority port once recovered. Valid values: `enable`, `disable`.
	PriorityOverride pulumi.StringPtrInput
	// Enable/disable proxy captive portal on this interface. Valid values: `enable`, `disable`.
	ProxyCaptivePortal pulumi.StringPtrInput
	// Redundant interface.
	RedundantInterface pulumi.StringPtrInput
	// Remote IP address of tunnel.
	RemoteIp pulumi.StringPtrInput
	// Replacement message override group.
	ReplacemsgOverrideGroup pulumi.StringPtrInput
	// RX ring size.
	RingRx pulumi.IntPtrInput
	// TX ring size.
	RingTx pulumi.IntPtrInput
	// Interface role. Valid values: `lan`, `wan`, `dmz`, `undefined`.
	Role pulumi.StringPtrInput
	// Data that NetFlow collects (rx, tx, or both). Valid values: `tx`, `rx`, `both`.
	SampleDirection pulumi.StringPtrInput
	// sFlow sample rate (10 - 99999).
	SampleRate pulumi.IntPtrInput
	// Enable monitoring or blocking connections to Botnet servers through this interface. Valid values: `disable`, `block`, `monitor`.
	ScanBotnetConnections pulumi.StringPtrInput
	SecondaryIp           pulumi.StringPtrInput
	// Second IP address of interface. The structure of `secondaryip` block is documented below.
	Secondaryips SystemInterfaceSecondaryipArrayInput
	// Name of security-exempt-list.
	SecurityExemptList pulumi.StringPtrInput
	// URL of external authentication logout server.
	SecurityExternalLogout pulumi.StringPtrInput
	// URL of external authentication web server.
	SecurityExternalWeb pulumi.StringPtrInput
	// User groups that can authenticate with the captive portal. The structure of `securityGroups` block is documented below.
	SecurityGroups SystemInterfaceSecurityGroupArrayInput
	// Enable/disable MAC authentication bypass. Valid values: `mac-auth-only`, `enable`, `disable`.
	SecurityMacAuthBypass pulumi.StringPtrInput
	// Turn on captive portal authentication for this interface. Valid values: `none`, `captive-portal`, `802.1X`.
	SecurityMode pulumi.StringPtrInput
	// URL redirection after disclaimer/authentication.
	SecurityRedirectUrl pulumi.StringPtrInput
	// PPPoE service name.
	ServiceName pulumi.StringPtrInput
	// Enable/disable sFlow on this interface. Valid values: `enable`, `disable`.
	SflowSampler pulumi.StringPtrInput
	// Permanent SNMP Index of the interface.
	SnmpIndex pulumi.IntPtrInput
	// Interface speed. The default setting and the options available depend on the interface hardware. Valid values: `auto`, `10full`, `10half`, `100full`, `100half`, `1000full`, `1000half`, `1000auto`.
	Speed pulumi.StringPtrInput
	// Egress Spillover threshold (0 - 16776000 kbps), 0 means unlimited.
	SpilloverThreshold pulumi.IntPtrInput
	// Enable/disable source IP check. Valid values: `enable`, `disable`.
	SrcCheck pulumi.StringPtrInput
	// Enable/disable VRRP. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput
	// Enable/disable STP forwarding. Valid values: `enable`, `disable`.
	Stpforward pulumi.StringPtrInput
	// Configure STP forwarding mode. Valid values: `rpl-all-ext-id`, `rpl-bridge-ext-id`, `rpl-nothing`.
	StpforwardMode pulumi.StringPtrInput
	// Enable to always send packets from this interface to a destination MAC address. Valid values: `enable`, `disable`.
	Subst pulumi.StringPtrInput
	// Destination MAC address that all packets are sent to from this interface.
	SubstituteDstMac pulumi.StringPtrInput
	// Initial create for switch-controller VLANs.
	SwcFirstCreate pulumi.IntPtrInput
	// Creation status for switch-controller VLANs.
	SwcVlan pulumi.IntPtrInput
	// Contained in switch.
	Switch pulumi.StringPtrInput
	// Block FortiSwitch port-to-port traffic. Valid values: `enable`, `disable`.
	SwitchControllerAccessVlan pulumi.StringPtrInput
	// Enable/disable FortiSwitch ARP inspection. Valid values: `enable`, `disable`.
	SwitchControllerArpInspection pulumi.StringPtrInput
	// Switch controller DHCP snooping. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnooping pulumi.StringPtrInput
	// Switch controller DHCP snooping option82. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingOption82 pulumi.StringPtrInput
	// Switch controller DHCP snooping verify MAC. Valid values: `enable`, `disable`.
	SwitchControllerDhcpSnoopingVerifyMac pulumi.StringPtrInput
	// Interface's purpose when assigning traffic (read only). Valid values: `none`, `default-vlan`, `quarantine`, `rspan`, `voice`, `video`, `nac`.
	SwitchControllerFeature pulumi.StringPtrInput
	// Switch controller IGMP snooping. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnooping pulumi.StringPtrInput
	// Switch controller IGMP snooping fast-leave. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingFastLeave pulumi.StringPtrInput
	// Switch controller IGMP snooping proxy. Valid values: `enable`, `disable`.
	SwitchControllerIgmpSnoopingProxy pulumi.StringPtrInput
	// Enable/disable managed FortiSwitch IoT scanning. Valid values: `enable`, `disable`.
	SwitchControllerIotScanning pulumi.StringPtrInput
	// Limit the number of dynamic MAC addresses on this VLAN (1 - 128, 0 = no limit, default).
	SwitchControllerLearningLimit pulumi.IntPtrInput
	// VLAN to use for FortiLink management purposes.
	SwitchControllerMgmtVlan pulumi.IntPtrInput
	// Integrated NAC settings for managed FortiSwitch.
	SwitchControllerNac pulumi.StringPtrInput
	// Stop Layer2 MAC learning and interception of BPDUs and other packets on this interface. Valid values: `disable`, `enable`.
	SwitchControllerRspanMode pulumi.StringPtrInput
	// Source IP address used in FortiLink over L3 connections. Valid values: `outbound`, `fixed`.
	SwitchControllerSourceIp pulumi.StringPtrInput
	// Switch controller traffic policy for the VLAN.
	SwitchControllerTrafficPolicy pulumi.StringPtrInput
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings SystemInterfaceTaggingArrayInput
	// TCP maximum segment size. 0 means do not change segment size.
	TcpMss pulumi.IntPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp1 pulumi.StringPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp2 pulumi.StringPtrInput
	// Trusted host for dedicated management traffic (0.0.0.0/24 for all hosts).
	TrustIp3 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp61 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp62 pulumi.StringPtrInput
	// Trusted IPv6 host for dedicated management traffic (::/0 for all hosts).
	TrustIp63 pulumi.StringPtrInput
	// DHCP client option type. Valid values: `hex`, `string`, `ip`, `fqdn`.
	Type pulumi.StringPtrInput
	// Username of the PPPoE account, provided by your ISP.
	Username pulumi.StringPtrInput
	// Interface is in this virtual domain (VDOM).
	Vdom pulumi.StringInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
	// Switch control interface VLAN ID.
	Vindex pulumi.IntPtrInput
	// Ethernet protocol of VLAN. Valid values: `8021q`, `8021ad`.
	VlanProtocol pulumi.StringPtrInput
	// Enable/disable traffic forwarding between VLANs on this interface. Valid values: `enable`, `disable`.
	Vlanforward pulumi.StringPtrInput
	// VLAN ID (1 - 4094).
	Vlanid pulumi.IntPtrInput
	// Virtual Routing Forwarding ID.
	Vrf pulumi.IntPtrInput
	// Enable/disable use of virtual MAC for VRRP. Valid values: `enable`, `disable`.
	VrrpVirtualMac pulumi.StringPtrInput
	// VRRP configuration. The structure of `vrrp` block is documented below.
	Vrrps SystemInterfaceVrrpArrayInput
	// Enable/disable WCCP on this interface. Used for encapsulated WCCP communication between WCCP clients and servers. Valid values: `enable`, `disable`.
	Wccp pulumi.StringPtrInput
	// Default weight for static routes (if route has no weight configured).
	Weight pulumi.IntPtrInput
	// WINS server IP.
	WinsIp pulumi.StringPtrInput
}

func (SystemInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemInterfaceArgs)(nil)).Elem()
}

type SystemInterfaceInput interface {
	pulumi.Input

	ToSystemInterfaceOutput() SystemInterfaceOutput
	ToSystemInterfaceOutputWithContext(ctx context.Context) SystemInterfaceOutput
}

func (*SystemInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterface)(nil))
}

func (i *SystemInterface) ToSystemInterfaceOutput() SystemInterfaceOutput {
	return i.ToSystemInterfaceOutputWithContext(context.Background())
}

func (i *SystemInterface) ToSystemInterfaceOutputWithContext(ctx context.Context) SystemInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceOutput)
}

func (i *SystemInterface) ToSystemInterfacePtrOutput() SystemInterfacePtrOutput {
	return i.ToSystemInterfacePtrOutputWithContext(context.Background())
}

func (i *SystemInterface) ToSystemInterfacePtrOutputWithContext(ctx context.Context) SystemInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfacePtrOutput)
}

type SystemInterfacePtrInput interface {
	pulumi.Input

	ToSystemInterfacePtrOutput() SystemInterfacePtrOutput
	ToSystemInterfacePtrOutputWithContext(ctx context.Context) SystemInterfacePtrOutput
}

type systemInterfacePtrType SystemInterfaceArgs

func (*systemInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterface)(nil))
}

func (i *systemInterfacePtrType) ToSystemInterfacePtrOutput() SystemInterfacePtrOutput {
	return i.ToSystemInterfacePtrOutputWithContext(context.Background())
}

func (i *systemInterfacePtrType) ToSystemInterfacePtrOutputWithContext(ctx context.Context) SystemInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfacePtrOutput)
}

// SystemInterfaceArrayInput is an input type that accepts SystemInterfaceArray and SystemInterfaceArrayOutput values.
// You can construct a concrete instance of `SystemInterfaceArrayInput` via:
//
//          SystemInterfaceArray{ SystemInterfaceArgs{...} }
type SystemInterfaceArrayInput interface {
	pulumi.Input

	ToSystemInterfaceArrayOutput() SystemInterfaceArrayOutput
	ToSystemInterfaceArrayOutputWithContext(context.Context) SystemInterfaceArrayOutput
}

type SystemInterfaceArray []SystemInterfaceInput

func (SystemInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SystemInterface)(nil))
}

func (i SystemInterfaceArray) ToSystemInterfaceArrayOutput() SystemInterfaceArrayOutput {
	return i.ToSystemInterfaceArrayOutputWithContext(context.Background())
}

func (i SystemInterfaceArray) ToSystemInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceArrayOutput)
}

// SystemInterfaceMapInput is an input type that accepts SystemInterfaceMap and SystemInterfaceMapOutput values.
// You can construct a concrete instance of `SystemInterfaceMapInput` via:
//
//          SystemInterfaceMap{ "key": SystemInterfaceArgs{...} }
type SystemInterfaceMapInput interface {
	pulumi.Input

	ToSystemInterfaceMapOutput() SystemInterfaceMapOutput
	ToSystemInterfaceMapOutputWithContext(context.Context) SystemInterfaceMapOutput
}

type SystemInterfaceMap map[string]SystemInterfaceInput

func (SystemInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SystemInterface)(nil))
}

func (i SystemInterfaceMap) ToSystemInterfaceMapOutput() SystemInterfaceMapOutput {
	return i.ToSystemInterfaceMapOutputWithContext(context.Background())
}

func (i SystemInterfaceMap) ToSystemInterfaceMapOutputWithContext(ctx context.Context) SystemInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemInterfaceMapOutput)
}

type SystemInterfaceOutput struct {
	*pulumi.OutputState
}

func (SystemInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemInterface)(nil))
}

func (o SystemInterfaceOutput) ToSystemInterfaceOutput() SystemInterfaceOutput {
	return o
}

func (o SystemInterfaceOutput) ToSystemInterfaceOutputWithContext(ctx context.Context) SystemInterfaceOutput {
	return o
}

func (o SystemInterfaceOutput) ToSystemInterfacePtrOutput() SystemInterfacePtrOutput {
	return o.ToSystemInterfacePtrOutputWithContext(context.Background())
}

func (o SystemInterfaceOutput) ToSystemInterfacePtrOutputWithContext(ctx context.Context) SystemInterfacePtrOutput {
	return o.ApplyT(func(v SystemInterface) *SystemInterface {
		return &v
	}).(SystemInterfacePtrOutput)
}

type SystemInterfacePtrOutput struct {
	*pulumi.OutputState
}

func (SystemInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemInterface)(nil))
}

func (o SystemInterfacePtrOutput) ToSystemInterfacePtrOutput() SystemInterfacePtrOutput {
	return o
}

func (o SystemInterfacePtrOutput) ToSystemInterfacePtrOutputWithContext(ctx context.Context) SystemInterfacePtrOutput {
	return o
}

type SystemInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SystemInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemInterface)(nil))
}

func (o SystemInterfaceArrayOutput) ToSystemInterfaceArrayOutput() SystemInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceArrayOutput) ToSystemInterfaceArrayOutputWithContext(ctx context.Context) SystemInterfaceArrayOutput {
	return o
}

func (o SystemInterfaceArrayOutput) Index(i pulumi.IntInput) SystemInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemInterface {
		return vs[0].([]SystemInterface)[vs[1].(int)]
	}).(SystemInterfaceOutput)
}

type SystemInterfaceMapOutput struct{ *pulumi.OutputState }

func (SystemInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SystemInterface)(nil))
}

func (o SystemInterfaceMapOutput) ToSystemInterfaceMapOutput() SystemInterfaceMapOutput {
	return o
}

func (o SystemInterfaceMapOutput) ToSystemInterfaceMapOutputWithContext(ctx context.Context) SystemInterfaceMapOutput {
	return o
}

func (o SystemInterfaceMapOutput) MapIndex(k pulumi.StringInput) SystemInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SystemInterface {
		return vs[0].(map[string]SystemInterface)[vs[1].(string)]
	}).(SystemInterfaceOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemInterfaceOutput{})
	pulumi.RegisterOutputType(SystemInterfacePtrOutput{})
	pulumi.RegisterOutputType(SystemInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SystemInterfaceMapOutput{})
}
