// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system global
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-fortios/sdk/go/fortios"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sample1, err := fortios.GetSystemGlobal(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("output1", sample1.Hostname)
// 		return nil
// 	})
// }
// ```
func LookupSystemGlobal(ctx *pulumi.Context, args *LookupSystemGlobalArgs, opts ...pulumi.InvokeOption) (*LookupSystemGlobalResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSystemGlobalResult
	err := ctx.Invoke("fortios:index/getSystemGlobal:GetSystemGlobal", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetSystemGlobal.
type LookupSystemGlobalArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by GetSystemGlobal.
type LookupSystemGlobalResult struct {
	// Enable/disable concurrent administrator logins. (Use policy-auth-concurrent for firewall authenticated users.)
	AdminConcurrent string `pulumi:"adminConcurrent"`
	// Console login timeout that overrides the admintimeout value. (15 - 300 seconds) (15 seconds to 5 minutes). 0 the default, disables this timeout.
	AdminConsoleTimeout int `pulumi:"adminConsoleTimeout"`
	// Enable/disable FortiCloud admin login via SSO.
	AdminForticloudSsoLogin string `pulumi:"adminForticloudSsoLogin"`
	// HTTPS Strict-Transport-Security header max-age in seconds. A value of 0 will reset any HSTS records in the browser.When admin-https-redirect is disabled the header max-age will be 0.
	AdminHstsMaxAge int `pulumi:"adminHstsMaxAge"`
	// Enable/disable admin login method. Enable to force administrators to provide a valid certificate to log in if PKI is enabled. Disable to allow administrators to log in with a certificate or password.
	AdminHttpsPkiRequired string `pulumi:"adminHttpsPkiRequired"`
	// Enable/disable redirection of HTTP administration access to HTTPS.
	AdminHttpsRedirect string `pulumi:"adminHttpsRedirect"`
	// Select one or more cipher technologies that cannot be used in GUI HTTPS negotiations. Only applies to TLS 1.2 and below.
	AdminHttpsSslBannedCiphers string `pulumi:"adminHttpsSslBannedCiphers"`
	// Select one or more TLS 1.3 ciphersuites to enable. Does not affect ciphers in TLS 1.2 and below. At least one must be enabled. To disable all, remove TLS1.3 from admin-https-ssl-versions.
	AdminHttpsSslCiphersuites string `pulumi:"adminHttpsSslCiphersuites"`
	// Allowed TLS versions for web administration.
	AdminHttpsSslVersions string `pulumi:"adminHttpsSslVersions"`
	// Amount of time in seconds that an administrator account is locked out after reaching the admin-lockout-threshold for repeated failed login attempts.
	AdminLockoutDuration int `pulumi:"adminLockoutDuration"`
	// Number of failed login attempts before an administrator account is locked out for the admin-lockout-duration.
	AdminLockoutThreshold int `pulumi:"adminLockoutThreshold"`
	// Maximum number of administrators who can be logged in at the same time (1 - 100, default = 100)
	AdminLoginMax int `pulumi:"adminLoginMax"`
	// Enable/disable maintainer administrator login. When enabled, the maintainer account can be used to log in from the console after a hard reboot. The password is "bcpb" followed by the FortiGate unit serial number. You have limited time to complete this login.
	AdminMaintainer string `pulumi:"adminMaintainer"`
	// Administrative access port for HTTP. (1 - 65535, default = 80).
	AdminPort int `pulumi:"adminPort"`
	// Enable/disable local admin authentication restriction when remote authenticator is up and running. (default = disable)
	AdminRestrictLocal string `pulumi:"adminRestrictLocal"`
	// Enable/disable using SCP to download the system configuration. You can use SCP as an alternative method for backing up the configuration.
	AdminScp string `pulumi:"adminScp"`
	// Server certificate that the FortiGate uses for HTTPS administrative connections.
	AdminServerCert string `pulumi:"adminServerCert"`
	// Administrative access port for HTTPS. (1 - 65535, default = 443).
	AdminSport int `pulumi:"adminSport"`
	// Maximum time in seconds permitted between making an SSH connection to the FortiGate unit and authenticating (10 - 3600 sec (1 hour), default 120).
	AdminSshGraceTime int `pulumi:"adminSshGraceTime"`
	// Enable/disable password authentication for SSH admin access.
	AdminSshPassword string `pulumi:"adminSshPassword"`
	// Administrative access port for SSH. (1 - 65535, default = 22).
	AdminSshPort int `pulumi:"adminSshPort"`
	// Enable/disable SSH v1 compatibility.
	AdminSshV1 string `pulumi:"adminSshV1"`
	// Enable/disable TELNET service.
	AdminTelnet string `pulumi:"adminTelnet"`
	// Administrative access port for TELNET. (1 - 65535, default = 23).
	AdminTelnetPort int `pulumi:"adminTelnetPort"`
	// Number of minutes before an idle administrator session times out (5 - 480 minutes (8 hours), default = 5). A shorter idle timeout is more secure.
	Admintimeout int `pulumi:"admintimeout"`
	// Alias for your FortiGate unit.
	Alias string `pulumi:"alias"`
	// Disable to allow traffic to be routed back on a different interface.
	AllowTrafficRedirect string `pulumi:"allowTrafficRedirect"`
	// Level of checking for packet replay and TCP sequence checking.
	AntiReplay string `pulumi:"antiReplay"`
	// Maximum number of dynamically learned MAC addresses that can be added to the ARP table (131072 - 2147483647, default = 131072).
	ArpMaxEntry int `pulumi:"arpMaxEntry"`
	// Enable/disable asymmetric route.
	Asymroute string `pulumi:"asymroute"`
	// Server certificate that the FortiGate uses for HTTPS firewall authentication connections.
	AuthCert string `pulumi:"authCert"`
	// User authentication HTTP port. (1 - 65535, default = 80).
	AuthHttpPort int `pulumi:"authHttpPort"`
	// User authentication HTTPS port. (1 - 65535, default = 443).
	AuthHttpsPort int `pulumi:"authHttpsPort"`
	// Enable to prevent user authentication sessions from timing out when idle.
	AuthKeepalive string `pulumi:"authKeepalive"`
	// Action to take when the number of allowed user authenticated sessions is reached.
	AuthSessionLimit string `pulumi:"authSessionLimit"`
	// Enable/disable automatic authorization of dedicated Fortinet extension devices.
	AutoAuthExtensionDevice string `pulumi:"autoAuthExtensionDevice"`
	// Enable/disable automatic log partition check after ungraceful shutdown.
	AutorunLogFsck string `pulumi:"autorunLogFsck"`
	// Affinity setting for AV scanning (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	AvAffinity string `pulumi:"avAffinity"`
	// Set the action to take if the FortiGate is running low on memory or the proxy connection limit has been reached.
	AvFailopen string `pulumi:"avFailopen"`
	// When enabled and a proxy for a protocol runs out of room in its session table, that protocol goes into failopen mode and enacts the action specified by av-failopen.
	AvFailopenSession string `pulumi:"avFailopenSession"`
	// Enable/disable batch mode, allowing you to enter a series of CLI commands that will execute as a group once they are loaded.
	BatchCmdb string `pulumi:"batchCmdb"`
	// Duration in seconds for blocked sessions (1 - 300 sec  (5 minutes), default = 30).
	BlockSessionTimer int `pulumi:"blockSessionTimer"`
	// Maximum number of bridge forwarding database (FDB) entries.
	BrFdbMaxEntry int `pulumi:"brFdbMaxEntry"`
	// Maximum number of certificates that can be traversed in a certificate chain.
	CertChainMax int `pulumi:"certChainMax"`
	// Time-out for reverting to the last saved configuration.
	CfgRevertTimeout int `pulumi:"cfgRevertTimeout"`
	// Configuration file save mode for CLI changes.
	CfgSave string `pulumi:"cfgSave"`
	// Level of checking performed on protocol headers. Strict checking is more thorough but may affect performance. Loose checking is ok in most cases.
	CheckProtocolHeader string `pulumi:"checkProtocolHeader"`
	// Configure ICMP error message verification. You can either apply strict RST range checking or disable it.
	CheckResetRange string `pulumi:"checkResetRange"`
	// Enable/disable CLI audit log.
	CliAuditLog string `pulumi:"cliAuditLog"`
	// Enable/disable all cloud communication.
	CloudCommunication string `pulumi:"cloudCommunication"`
	// Enable/disable requiring administrators to have a client certificate to log into the GUI using HTTPS.
	CltCertReq string `pulumi:"cltCertReq"`
	// Affinity setting for cmdbsvr (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	CmdbsvrAffinity string `pulumi:"cmdbsvrAffinity"`
	// Enable/disable global PCI DSS compliance check.
	ComplianceCheck string `pulumi:"complianceCheck"`
	// Time of day to run scheduled PCI DSS compliance checks.
	ComplianceCheckTime string `pulumi:"complianceCheckTime"`
	// Threshold at which CPU usage is reported. (% of total CPU, default = 90).
	CpuUseThreshold int `pulumi:"cpuUseThreshold"`
	// Enable/disable the CA attribute in certificates. Some CA servers reject CSRs that have the CA attribute.
	CsrCaAttribute string `pulumi:"csrCaAttribute"`
	// Enable/disable daily restart of FortiGate unit. Use the restart-time option to set the time of day for the restart.
	DailyRestart string `pulumi:"dailyRestart"`
	// Default service source port range. (default=1-65535)
	DefaultServiceSourcePort string `pulumi:"defaultServiceSourcePort"`
	// Number of seconds to passively scan a device before performing an active scan. (20 - 3600 sec, (20 sec to 1 hour), default = 90).
	DeviceIdentificationActiveScanDelay int `pulumi:"deviceIdentificationActiveScanDelay"`
	// Time in seconds that a device must be idle to automatically log the device user out. (30 - 31536000 sec (30 sec to 1 year), default = 300).
	DeviceIdleTimeout int `pulumi:"deviceIdleTimeout"`
	// Number of bits to use in the Diffie-Hellman exchange for HTTPS/SSH protocols.
	DhParams string `pulumi:"dhParams"`
	// DNS proxy worker count.
	DnsproxyWorkerCount int `pulumi:"dnsproxyWorkerCount"`
	// Enable/disable daylight saving time.
	Dst string `pulumi:"dst"`
	// Enable/disable edit new VDOM prompt.
	EditVdomPrompt string `pulumi:"editVdomPrompt"`
	// Enable/disable access to the FortiGuard network for non-compliant endpoints.
	EndpointControlFdsAccess string `pulumi:"endpointControlFdsAccess"`
	// Endpoint control portal port (1 - 65535).
	EndpointControlPortalPort int `pulumi:"endpointControlPortalPort"`
	// Configure reserved network subnet for managed LAN extension FortiExtenders. This is available when the extender daemon is running.
	ExtenderControllerReservedNetwork string `pulumi:"extenderControllerReservedNetwork"`
	// Fail-time for server lost.
	Failtime int `pulumi:"failtime"`
	// Maximum disk buffer size to temporarily store logs destined for FortiAnalyzer. To be used in the event that FortiAnalyzer is unavailalble.
	FazDiskBufferSize int `pulumi:"fazDiskBufferSize"`
	// Enable/disable sending IPS, Application Control, and AntiVirus data to FortiGuard. This data is used to improve FortiGuard services and is not shared with external parties and is protected by Fortinet's privacy policy.
	FdsStatistics string `pulumi:"fdsStatistics"`
	// FortiGuard statistics collection period in minutes. (1 - 1440 min (1 min to 24 hours), default = 60).
	FdsStatisticsPeriod int `pulumi:"fdsStatisticsPeriod"`
	// Local UDP port for Forward Error Correction (49152 - 65535).
	FecPort int `pulumi:"fecPort"`
	// Type of alert to retrieve from FortiGuard.
	FgdAlertSubscription string `pulumi:"fgdAlertSubscription"`
	// Enable/disable FortiExtender.
	Fortiextender string `pulumi:"fortiextender"`
	// FortiExtender data port (1024 - 49150, default = 25246).
	FortiextenderDataPort int `pulumi:"fortiextenderDataPort"`
	// Enable/disable FortiExtender CAPWAP lockdown.
	FortiextenderDiscoveryLockdown string `pulumi:"fortiextenderDiscoveryLockdown"`
	// Enable/disable FortiExtender VLAN mode.
	FortiextenderVlanMode string `pulumi:"fortiextenderVlanMode"`
	// Enable/disable integration with the FortiIPAM cloud service.
	FortiipamIntegration string `pulumi:"fortiipamIntegration"`
	// FortiService port (1 - 65535, default = 8013). Used by FortiClient endpoint compliance. Older versions of FortiClient used a different port.
	FortiservicePort int `pulumi:"fortiservicePort"`
	// Enable/disable FortiToken Cloud service.
	FortitokenCloud string `pulumi:"fortitokenCloud"`
	// Enable/disable the GUI warning about using a default hostname
	GuiAllowDefaultHostname string `pulumi:"guiAllowDefaultHostname"`
	// Enable/disable Load GUI static files from a CDN.
	GuiCdnUsage string `pulumi:"guiCdnUsage"`
	// Enable/disable the System > Certificate GUI page, allowing you to add and configure certificates from the GUI.
	GuiCertificates string `pulumi:"guiCertificates"`
	// Enable/disable custom languages in GUI.
	GuiCustomLanguage string `pulumi:"guiCustomLanguage"`
	// Default date format used throughout GUI.
	GuiDateFormat string `pulumi:"guiDateFormat"`
	// Source from which the FortiGate GUI uses to display date and time entries.
	GuiDateTimeSource string `pulumi:"guiDateTimeSource"`
	// Add the latitude of the location of this FortiGate to position it on the Threat Map.
	GuiDeviceLatitude string `pulumi:"guiDeviceLatitude"`
	// Add the longitude of the location of this FortiGate to position it on the Threat Map.
	GuiDeviceLongitude string `pulumi:"guiDeviceLongitude"`
	// Enable/disable displaying the FortiGate's hostname on the GUI login page.
	GuiDisplayHostname string `pulumi:"guiDisplayHostname"`
	// Enable/disable the firmware upgrade warning on GUI setup wizard.
	GuiFirmwareUpgradeSetupWarning string `pulumi:"guiFirmwareUpgradeSetupWarning"`
	// Enable/disable the firmware upgrade warning on the GUI.
	GuiFirmwareUpgradeWarning string `pulumi:"guiFirmwareUpgradeWarning"`
	// Enable/disable the FortiCare registration setup warning on the GUI.
	GuiForticareRegistrationSetupWarning string `pulumi:"guiForticareRegistrationSetupWarning"`
	// Enable/disable displaying FortiGate Cloud Sandbox on the GUI.
	GuiFortigateCloudSandbox string `pulumi:"guiFortigateCloudSandbox"`
	// Enable/disable displaying FortiSandbox Cloud on the GUI.
	GuiFortisandboxCloud string `pulumi:"guiFortisandboxCloud"`
	// Enable/disable IPv6 settings on the GUI.
	GuiIpv6 string `pulumi:"guiIpv6"`
	// Number of lines to display per page for web administration.
	GuiLinesPerPage int `pulumi:"guiLinesPerPage"`
	// Enable/disable Local-out traffic on the GUI.
	GuiLocalOut string `pulumi:"guiLocalOut"`
	// Enable/disable replacement message groups on the GUI.
	GuiReplacementMessageGroups string `pulumi:"guiReplacementMessageGroups"`
	// Enable/disable REST API result caching on FortiGate.
	GuiRestApiCache string `pulumi:"guiRestApiCache"`
	// Color scheme for the administration GUI.
	GuiTheme string `pulumi:"guiTheme"`
	// Enable/disable wireless open security option on the GUI.
	GuiWirelessOpensecurity string `pulumi:"guiWirelessOpensecurity"`
	// Affinity setting for HA daemons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	HaAffinity string `pulumi:"haAffinity"`
	// Enable/disable honoring of Don't-Fragment (DF) flag.
	HonorDf string `pulumi:"honorDf"`
	// FortiGate unit's hostname. Most models will truncate names longer than 24 characters. Some models support hostnames up to 35 characters.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Maximum number of IGMP memberships (96 - 64000, default = 3200).
	IgmpStateLimit int `pulumi:"igmpStateLimit"`
	// Maximum number of IPsec tunnels to negotiate simultaneously.
	IkeEmbryonicLimit int `pulumi:"ikeEmbryonicLimit"`
	// Configure which Internet Service database size to download from FortiGuard and use.
	InternetServiceDatabase string `pulumi:"internetServiceDatabase"`
	// Dead gateway detection interval.
	Interval int `pulumi:"interval"`
	// IP source port range used for traffic originating from the FortiGate unit.
	IpSrcPortRange string `pulumi:"ipSrcPortRange"`
	// Affinity setting for IPS (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx; allowed CPUs must be less than total number of IPS engine daemons).
	IpsAffinity string `pulumi:"ipsAffinity"`
	// Enable/disable ASIC offloading (hardware acceleration) for IPsec VPN traffic. Hardware acceleration can offload IPsec VPN sessions and accelerate encryption and decryption.
	IpsecAsicOffload string `pulumi:"ipsecAsicOffload"`
	// ESP jump ahead rate (1G - 10G pps equivalent).
	IpsecHaSeqjumpRate int `pulumi:"ipsecHaSeqjumpRate"`
	// Enable/disable offloading (hardware acceleration) of HMAC processing for IPsec VPN.
	IpsecHmacOffload string `pulumi:"ipsecHmacOffload"`
	// Enable/disable software decryption asynchronization (using multiple CPUs to do decryption) for IPsec VPN traffic.
	IpsecSoftDecAsync string `pulumi:"ipsecSoftDecAsync"`
	// Enable/disable acceptance of IPv6 Duplicate Address Detection (DAD).
	Ipv6AcceptDad int `pulumi:"ipv6AcceptDad"`
	// Enable/disable IPv6 address probe through Anycast.
	Ipv6AllowAnycastProbe string `pulumi:"ipv6AllowAnycastProbe"`
	// Disable to prevent IPv6 traffic with same local ingress and egress interface from being forwarded without policy check.
	Ipv6AllowTrafficRedirect string `pulumi:"ipv6AllowTrafficRedirect"`
	// Configure CPU IRQ time accounting mode.
	IrqTimeAccounting string `pulumi:"irqTimeAccounting"`
	// GUI display language.
	Language string `pulumi:"language"`
	// Global timeout for connections with remote LDAP servers in milliseconds (1 - 300000, default 500).
	Ldapconntimeout int `pulumi:"ldapconntimeout"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) reception.
	LldpReception string `pulumi:"lldpReception"`
	// Enable/disable Link Layer Discovery Protocol (LLDP) transmission.
	LldpTransmission string `pulumi:"lldpTransmission"`
	// Enable/disable logging of SSL connection events.
	LogSslConnection string `pulumi:"logSslConnection"`
	// Enable/disable insertion of address UUIDs to traffic logs.
	LogUuidAddress string `pulumi:"logUuidAddress"`
	// Enable/disable insertion of policy UUIDs to traffic logs.
	LogUuidPolicy string `pulumi:"logUuidPolicy"`
	// Enable/disable login time recording.
	LoginTimestamp string `pulumi:"loginTimestamp"`
	// Enable/disable long VDOM name support.
	LongVdomName string `pulumi:"longVdomName"`
	// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
	ManagementIp string `pulumi:"managementIp"`
	// Overriding port for management connection (Overrides admin port).
	ManagementPort int `pulumi:"managementPort"`
	// Enable/disable use of the admin-sport setting for the management port. If disabled, FortiGate will allow user to specify management-port.
	ManagementPortUseAdminSport string `pulumi:"managementPortUseAdminSport"`
	// Management virtual domain name.
	ManagementVdom string `pulumi:"managementVdom"`
	// Maximum DLP stat memory (0 - 4294967295).
	MaxDlpstatMemory int `pulumi:"maxDlpstatMemory"`
	// Maximum number of IP route cache entries (0 - 2147483647).
	MaxRouteCacheSize int `pulumi:"maxRouteCacheSize"`
	// Enable/disable no modification of multicast TTL.
	McTtlNotchange string `pulumi:"mcTtlNotchange"`
	// Threshold at which memory usage is considered extreme (new sessions are dropped) (% of total RAM, default = 95).
	MemoryUseThresholdExtreme int `pulumi:"memoryUseThresholdExtreme"`
	// Threshold at which memory usage forces the FortiGate to exit conserve mode (% of total RAM, default = 82).
	MemoryUseThresholdGreen int `pulumi:"memoryUseThresholdGreen"`
	// Threshold at which memory usage forces the FortiGate to enter conserve mode (% of total RAM, default = 88).
	MemoryUseThresholdRed int `pulumi:"memoryUseThresholdRed"`
	// Affinity setting for logging (64-bit hexadecimal value in the format of xxxxxxxxxxxxxxxx).
	MiglogAffinity string `pulumi:"miglogAffinity"`
	// Number of logging (miglogd) processes to be allowed to run. Higher number can reduce performance; lower number can slow log processing time. No logs will be dropped or lost if the number is changed.
	MiglogdChildren int `pulumi:"miglogdChildren"`
	// Enforce all login methods to require an additional authentication factor (default = optional).
	MultiFactorAuthentication string `pulumi:"multiFactorAuthentication"`
	// Enable/disable multicast forwarding.
	MulticastForward string `pulumi:"multicastForward"`
	// Maximum number of NDP table entries (set to 65,536 or higher; if set to 0, kernel holds 65,536 entries).
	NdpMaxEntry int `pulumi:"ndpMaxEntry"`
	// Enable/disable per-user block/allow list filter.
	PerUserBal string `pulumi:"perUserBal"`
	// Enable/disable per-user black/white list filter.
	PerUserBwl string `pulumi:"perUserBwl"`
	// Enable/disable path MTU discovery.
	PmtuDiscovery string `pulumi:"pmtuDiscovery"`
	// Number of concurrent firewall use logins from the same user (1 - 100, default = 0 means no limit).
	PolicyAuthConcurrent int `pulumi:"policyAuthConcurrent"`
	// Enable/disable displaying the administrator access disclaimer message after an administrator successfully logs in.
	PostLoginBanner string `pulumi:"postLoginBanner"`
	// Enable/disable displaying the administrator access disclaimer message on the login page before an administrator logs in.
	PreLoginBanner string `pulumi:"preLoginBanner"`
	// Enable/disable private data encryption using an AES 128-bit key.
	PrivateDataEncryption string `pulumi:"privateDataEncryption"`
	// Enable/disable authenticated users lifetime control.  This is a cap on the total time a proxy user can be authenticated for after which re-authentication will take place.
	ProxyAuthLifetime string `pulumi:"proxyAuthLifetime"`
	// Lifetime timeout in minutes for authenticated users (5  - 65535 min, default=480 (8 hours)).
	ProxyAuthLifetimeTimeout int `pulumi:"proxyAuthLifetimeTimeout"`
	// Authentication timeout in minutes for authenticated users (1 - 300 min, default = 10).
	ProxyAuthTimeout int `pulumi:"proxyAuthTimeout"`
	// Enable/disable using management VDOM to send requests.
	ProxyCertUseMgmtVdom string `pulumi:"proxyCertUseMgmtVdom"`
	// Enable/disable using content processor (CP8 or CP9) hardware acceleration to encrypt and decrypt IPsec and SSL traffic.
	ProxyCipherHardwareAcceleration string `pulumi:"proxyCipherHardwareAcceleration"`
	// Enable/disable email proxy hardware acceleration.
	ProxyHardwareAcceleration string `pulumi:"proxyHardwareAcceleration"`
	// Enable/disable using the content processor to accelerate KXP traffic.
	ProxyKxpHardwareAcceleration string `pulumi:"proxyKxpHardwareAcceleration"`
	// Control if users must re-authenticate after a session is closed, traffic has been idle, or from the point at which the user was first created.
	ProxyReAuthenticationMode string `pulumi:"proxyReAuthenticationMode"`
	// Enable/disable use of the maximum memory usage on the FortiGate unit's proxy processing of resources, such as block lists, allow lists, and external resources.
	ProxyResourceMode string `pulumi:"proxyResourceMode"`
	// Proxy worker count.
	ProxyWorkerCount int `pulumi:"proxyWorkerCount"`
	// RADIUS service port number.
	RadiusPort int `pulumi:"radiusPort"`
	// Enable/disable reboot of system upon restoring configuration.
	RebootUponConfigRestore string `pulumi:"rebootUponConfigRestore"`
	// Statistics refresh interval in GUI.
	Refresh int `pulumi:"refresh"`
	// Number of seconds that the FortiGate waits for responses from remote RADIUS, LDAP, or TACACS+ authentication servers. (0-300 sec, default = 5, 0 means no timeout).
	Remoteauthtimeout int `pulumi:"remoteauthtimeout"`
	// Action to perform if the FortiGate receives a TCP packet but cannot find a corresponding session in its session table. NAT/Route mode only.
	ResetSessionlessTcp string `pulumi:"resetSessionlessTcp"`
	// Daily restart time (hh:mm).
	RestartTime string `pulumi:"restartTime"`
	// Enable/disable back-up of the latest configuration revision when an administrator logs out of the CLI or GUI.
	RevisionBackupOnLogout string `pulumi:"revisionBackupOnLogout"`
	// Enable/disable back-up of the latest configuration revision after the firmware is upgraded.
	RevisionImageAutoBackup string `pulumi:"revisionImageAutoBackup"`
	// Number of scanunits. The range and the default depend on the number of CPUs. Only available on FortiGate units with multiple CPUs.
	ScanunitCount int `pulumi:"scanunitCount"`
	// Enable/disable the submission of Security Rating results to FortiGuard.
	SecurityRatingResultSubmission string `pulumi:"securityRatingResultSubmission"`
	// Enable/disable scheduled runs of Security Rating.
	SecurityRatingRunOnSchedule string `pulumi:"securityRatingRunOnSchedule"`
	// Enable/disable sending of path maximum transmission unit (PMTU) - ICMP destination unreachable packet and to support PMTUD protocol on your network to reduce fragmentation of packets.
	SendPmtuIcmp string `pulumi:"sendPmtuIcmp"`
	// Enable/disable the ability to change the static NAT route.
	SnatRouteChange string `pulumi:"snatRouteChange"`
	// Enable/disable IPS detection of HIBUN format files when using Data Leak Protection.
	SpecialFile23Support string `pulumi:"specialFile23Support"`
	// Enable/disable speed test server.
	SpeedtestServer string `pulumi:"speedtestServer"`
	// Split port(s) to multiple 10Gbps ports.
	SplitPort string `pulumi:"splitPort"`
	// Date within a month to run ssd trim.
	SsdTrimDate int `pulumi:"ssdTrimDate"`
	// How often to run SSD Trim (default = weekly). SSD Trim prevents SSD drive data loss by finding and isolating errors.
	SsdTrimFreq string `pulumi:"ssdTrimFreq"`
	// Hour of the day on which to run SSD Trim (0 - 23, default = 1).
	SsdTrimHour int `pulumi:"ssdTrimHour"`
	// Minute of the hour on which to run SSD Trim (0 - 59, 60 for random).
	SsdTrimMin int `pulumi:"ssdTrimMin"`
	// Day of week to run SSD Trim.
	SsdTrimWeekday string `pulumi:"ssdTrimWeekday"`
	// Enable/disable CBC cipher for SSH access.
	SshCbcCipher string `pulumi:"sshCbcCipher"`
	// Select one or more SSH ciphers.
	SshEncAlgo string `pulumi:"sshEncAlgo"`
	// Enable/disable HMAC-MD5 for SSH access.
	SshHmacMd5 string `pulumi:"sshHmacMd5"`
	// Select one or more SSH kex algorithms.
	SshKexAlgo string `pulumi:"sshKexAlgo"`
	// Enable/disable SHA1 key exchange for SSH access.
	SshKexSha1 string `pulumi:"sshKexSha1"`
	// Select one or more SSH MAC algorithms.
	SshMacAlgo string `pulumi:"sshMacAlgo"`
	// Enable/disable HMAC-SHA1 and UMAC-64-ETM for SSH access.
	SshMacWeak string `pulumi:"sshMacWeak"`
	// Minimum supported protocol version for SSL/TLS connections (default = TLSv1.2).
	SslMinProtoVersion string `pulumi:"sslMinProtoVersion"`
	// Enable/disable static key ciphers in SSL/TLS connections (e.g. AES128-SHA, AES256-SHA, AES128-SHA256, AES256-SHA256).
	SslStaticKeyCiphers string `pulumi:"sslStaticKeyCiphers"`
	// Enable/disable SSL VPN hardware acceleration.
	SslvpnCipherHardwareAcceleration string `pulumi:"sslvpnCipherHardwareAcceleration"`
	// Enable/disable verification of EMS serial number in SSL-VPN connection.
	SslvpnEmsSnCheck string `pulumi:"sslvpnEmsSnCheck"`
	// Enable/disable SSL VPN KXP hardware acceleration.
	SslvpnKxpHardwareAcceleration string `pulumi:"sslvpnKxpHardwareAcceleration"`
	// Maximum number of SSL VPN processes. Upper limit for this value is the number of CPUs and depends on the model.
	SslvpnMaxWorkerCount int `pulumi:"sslvpnMaxWorkerCount"`
	// Enable/disable checking browser's plugin version by SSL VPN.
	SslvpnPluginVersionCheck string `pulumi:"sslvpnPluginVersionCheck"`
	// Enable to check the session against the original policy when revalidating. This can prevent dropping of redirected sessions when web-filtering and authentication are enabled together. If this option is enabled, the FortiGate unit deletes a session if a routing or policy change causes the session to no longer match the policy that originally allowed the session.
	StrictDirtySessionCheck string `pulumi:"strictDirtySessionCheck"`
	// Enable to use strong encryption and only allow strong ciphers (AES, 3DES) and digest (SHA1) for HTTPS/SSH/TLS/SSL functions.
	StrongCrypto string `pulumi:"strongCrypto"`
	// Enable/disable switch controller feature. Switch controller allows you to manage FortiSwitch from the FortiGate itself.
	SwitchController string `pulumi:"switchController"`
	// Enable reserved network subnet for controlled switches. This is available when the switch controller is enabled.
	SwitchControllerReservedNetwork string `pulumi:"switchControllerReservedNetwork"`
	// Time in minutes between updates of performance statistics logging. (1 - 15 min, default = 5, 0 = disabled).
	SysPerfLogInterval int `pulumi:"sysPerfLogInterval"`
	// Number of seconds the FortiGate unit should wait to close a session after one peer has sent a FIN packet but the other has not responded (1 - 86400 sec (1 day), default = 120).
	TcpHalfcloseTimer int `pulumi:"tcpHalfcloseTimer"`
	// Number of seconds the FortiGate unit should wait to close a session after one peer has sent an open session packet but the other has not responded (1 - 86400 sec (1 day), default = 10).
	TcpHalfopenTimer int `pulumi:"tcpHalfopenTimer"`
	// Enable SACK, timestamp and MSS TCP options.
	TcpOption string `pulumi:"tcpOption"`
	// Length of the TCP CLOSE state in seconds (5 - 300 sec, default = 5).
	TcpRstTimer int `pulumi:"tcpRstTimer"`
	// Length of the TCP TIME-WAIT state in seconds.
	TcpTimewaitTimer int `pulumi:"tcpTimewaitTimer"`
	// Enable/disable TFTP.
	Tftp string `pulumi:"tftp"`
	// Number corresponding to your time zone from 00 to 86. Enter set timezone ? to view the list of time zones and the numbers that represent them.
	Timezone string `pulumi:"timezone"`
	// Enable/disable skip policy check and allow multicast through.
	TpMcSkipPolicy string `pulumi:"tpMcSkipPolicy"`
	// Choose Type of Service (ToS) or Differentiated Services Code Point (DSCP) for traffic prioritization in traffic shaping.
	TrafficPriority string `pulumi:"trafficPriority"`
	// Default system-wide level of priority for traffic prioritization.
	TrafficPriorityLevel string `pulumi:"trafficPriorityLevel"`
	// Email-based two-factor authentication session timeout (30 - 300 seconds (5 minutes), default = 60).
	TwoFactorEmailExpiry int `pulumi:"twoFactorEmailExpiry"`
	// FortiAuthenticator token authentication session timeout (10 - 3600 seconds (1 hour), default = 60).
	TwoFactorFacExpiry int `pulumi:"twoFactorFacExpiry"`
	// FortiToken authentication session timeout (60 - 600 sec (10 minutes), default = 60).
	TwoFactorFtkExpiry int `pulumi:"twoFactorFtkExpiry"`
	// FortiToken Mobile session timeout (1 - 168 hours (7 days), default = 72).
	TwoFactorFtmExpiry int `pulumi:"twoFactorFtmExpiry"`
	// SMS-based two-factor authentication session timeout (30 - 300 sec, default = 60).
	TwoFactorSmsExpiry int `pulumi:"twoFactorSmsExpiry"`
	// UDP connection session timeout. This command can be useful in managing CPU and memory resources (1 - 86400 seconds (1 day), default = 60).
	UdpIdleTimer int `pulumi:"udpIdleTimer"`
	// URL filter CPU affinity.
	UrlFilterAffinity string `pulumi:"urlFilterAffinity"`
	// URL filter daemon count.
	UrlFilterCount int `pulumi:"urlFilterCount"`
	// Maximum number of devices allowed in user device store.
	UserDeviceStoreMaxDevices int `pulumi:"userDeviceStoreMaxDevices"`
	// Maximum unified memory allowed in user device store.
	UserDeviceStoreMaxUnifiedMem int `pulumi:"userDeviceStoreMaxUnifiedMem"`
	// Maximum number of users allowed in user device store.
	UserDeviceStoreMaxUsers int `pulumi:"userDeviceStoreMaxUsers"`
	// Certificate to use for https user authentication.
	UserServerCert string `pulumi:"userServerCert"`
	// Enable/disable support for multiple virtual domains (VDOMs).
	VdomAdmin string `pulumi:"vdomAdmin"`
	// Enable/disable support for split/multiple virtual domains (VDOMs).
	VdomMode  string  `pulumi:"vdomMode"`
	Vdomparam *string `pulumi:"vdomparam"`
	// Controls the number of ARPs that the FortiGate sends for a Virtual IP (VIP) address range.
	VipArpRange string `pulumi:"vipArpRange"`
	// Maximum number of virtual server processes to create. The maximum is the number of CPU cores. This is not available on single-core CPUs.
	VirtualServerCount int `pulumi:"virtualServerCount"`
	// Enable/disable virtual server hardware acceleration.
	VirtualServerHardwareAcceleration string `pulumi:"virtualServerHardwareAcceleration"`
	// Enable/disable virtual switch VLAN.
	VirtualSwitchVlan string `pulumi:"virtualSwitchVlan"`
	// Affinity setting for wad (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
	WadAffinity string `pulumi:"wadAffinity"`
	// Number of concurrent WAD-cache-service object-cache processes.
	WadCsvcCsCount int `pulumi:"wadCsvcCsCount"`
	// Number of concurrent WAD-cache-service byte-cache processes.
	WadCsvcDbCount int `pulumi:"wadCsvcDbCount"`
	// Minimum percentage change in system memory usage detected by the wad daemon prior to adjusting TCP window size for any active connection.
	WadMemoryChangeGranularity int `pulumi:"wadMemoryChangeGranularity"`
	// Enable/disable dispatching traffic to WAD workers based on source affinity.
	WadSourceAffinity string `pulumi:"wadSourceAffinity"`
	// Number of explicit proxy WAN optimization daemon (WAD) processes. By default WAN optimization, explicit proxy, and web caching is handled by all of the CPU cores in a FortiGate unit.
	WadWorkerCount int `pulumi:"wadWorkerCount"`
	// CA certificate that verifies the WiFi certificate.
	WifiCaCertificate string `pulumi:"wifiCaCertificate"`
	// Certificate to use for WiFi authentication.
	WifiCertificate string `pulumi:"wifiCertificate"`
	// Enable/disable comparability with WiMAX 4G USB devices.
	Wimax4gUsb string `pulumi:"wimax4gUsb"`
	// Enable/disable the wireless controller feature to use the FortiGate unit to manage FortiAPs.
	WirelessController string `pulumi:"wirelessController"`
	// Port used for the control channel in wireless controller mode (wireless-mode is ac). The data channel port is the control channel port number plus one (1024 - 49150, default = 5246).
	WirelessControllerPort int `pulumi:"wirelessControllerPort"`
}

func LookupSystemGlobalOutput(ctx *pulumi.Context, args LookupSystemGlobalOutputArgs, opts ...pulumi.InvokeOption) LookupSystemGlobalResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemGlobalResult, error) {
			args := v.(LookupSystemGlobalArgs)
			r, err := LookupSystemGlobal(ctx, &args, opts...)
			return *r, err
		}).(LookupSystemGlobalResultOutput)
}

// A collection of arguments for invoking GetSystemGlobal.
type LookupSystemGlobalOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSystemGlobalOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemGlobalArgs)(nil)).Elem()
}

// A collection of values returned by GetSystemGlobal.
type LookupSystemGlobalResultOutput struct{ *pulumi.OutputState }

func (LookupSystemGlobalResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemGlobalResult)(nil)).Elem()
}

func (o LookupSystemGlobalResultOutput) ToLookupSystemGlobalResultOutput() LookupSystemGlobalResultOutput {
	return o
}

func (o LookupSystemGlobalResultOutput) ToLookupSystemGlobalResultOutputWithContext(ctx context.Context) LookupSystemGlobalResultOutput {
	return o
}

// Enable/disable concurrent administrator logins. (Use policy-auth-concurrent for firewall authenticated users.)
func (o LookupSystemGlobalResultOutput) AdminConcurrent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminConcurrent }).(pulumi.StringOutput)
}

// Console login timeout that overrides the admintimeout value. (15 - 300 seconds) (15 seconds to 5 minutes). 0 the default, disables this timeout.
func (o LookupSystemGlobalResultOutput) AdminConsoleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminConsoleTimeout }).(pulumi.IntOutput)
}

// Enable/disable FortiCloud admin login via SSO.
func (o LookupSystemGlobalResultOutput) AdminForticloudSsoLogin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminForticloudSsoLogin }).(pulumi.StringOutput)
}

// HTTPS Strict-Transport-Security header max-age in seconds. A value of 0 will reset any HSTS records in the browser.When admin-https-redirect is disabled the header max-age will be 0.
func (o LookupSystemGlobalResultOutput) AdminHstsMaxAge() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminHstsMaxAge }).(pulumi.IntOutput)
}

// Enable/disable admin login method. Enable to force administrators to provide a valid certificate to log in if PKI is enabled. Disable to allow administrators to log in with a certificate or password.
func (o LookupSystemGlobalResultOutput) AdminHttpsPkiRequired() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminHttpsPkiRequired }).(pulumi.StringOutput)
}

// Enable/disable redirection of HTTP administration access to HTTPS.
func (o LookupSystemGlobalResultOutput) AdminHttpsRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminHttpsRedirect }).(pulumi.StringOutput)
}

// Select one or more cipher technologies that cannot be used in GUI HTTPS negotiations. Only applies to TLS 1.2 and below.
func (o LookupSystemGlobalResultOutput) AdminHttpsSslBannedCiphers() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminHttpsSslBannedCiphers }).(pulumi.StringOutput)
}

// Select one or more TLS 1.3 ciphersuites to enable. Does not affect ciphers in TLS 1.2 and below. At least one must be enabled. To disable all, remove TLS1.3 from admin-https-ssl-versions.
func (o LookupSystemGlobalResultOutput) AdminHttpsSslCiphersuites() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminHttpsSslCiphersuites }).(pulumi.StringOutput)
}

// Allowed TLS versions for web administration.
func (o LookupSystemGlobalResultOutput) AdminHttpsSslVersions() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminHttpsSslVersions }).(pulumi.StringOutput)
}

// Amount of time in seconds that an administrator account is locked out after reaching the admin-lockout-threshold for repeated failed login attempts.
func (o LookupSystemGlobalResultOutput) AdminLockoutDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminLockoutDuration }).(pulumi.IntOutput)
}

// Number of failed login attempts before an administrator account is locked out for the admin-lockout-duration.
func (o LookupSystemGlobalResultOutput) AdminLockoutThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminLockoutThreshold }).(pulumi.IntOutput)
}

// Maximum number of administrators who can be logged in at the same time (1 - 100, default = 100)
func (o LookupSystemGlobalResultOutput) AdminLoginMax() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminLoginMax }).(pulumi.IntOutput)
}

// Enable/disable maintainer administrator login. When enabled, the maintainer account can be used to log in from the console after a hard reboot. The password is "bcpb" followed by the FortiGate unit serial number. You have limited time to complete this login.
func (o LookupSystemGlobalResultOutput) AdminMaintainer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminMaintainer }).(pulumi.StringOutput)
}

// Administrative access port for HTTP. (1 - 65535, default = 80).
func (o LookupSystemGlobalResultOutput) AdminPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminPort }).(pulumi.IntOutput)
}

// Enable/disable local admin authentication restriction when remote authenticator is up and running. (default = disable)
func (o LookupSystemGlobalResultOutput) AdminRestrictLocal() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminRestrictLocal }).(pulumi.StringOutput)
}

// Enable/disable using SCP to download the system configuration. You can use SCP as an alternative method for backing up the configuration.
func (o LookupSystemGlobalResultOutput) AdminScp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminScp }).(pulumi.StringOutput)
}

// Server certificate that the FortiGate uses for HTTPS administrative connections.
func (o LookupSystemGlobalResultOutput) AdminServerCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminServerCert }).(pulumi.StringOutput)
}

// Administrative access port for HTTPS. (1 - 65535, default = 443).
func (o LookupSystemGlobalResultOutput) AdminSport() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminSport }).(pulumi.IntOutput)
}

// Maximum time in seconds permitted between making an SSH connection to the FortiGate unit and authenticating (10 - 3600 sec (1 hour), default 120).
func (o LookupSystemGlobalResultOutput) AdminSshGraceTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminSshGraceTime }).(pulumi.IntOutput)
}

// Enable/disable password authentication for SSH admin access.
func (o LookupSystemGlobalResultOutput) AdminSshPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminSshPassword }).(pulumi.StringOutput)
}

// Administrative access port for SSH. (1 - 65535, default = 22).
func (o LookupSystemGlobalResultOutput) AdminSshPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminSshPort }).(pulumi.IntOutput)
}

// Enable/disable SSH v1 compatibility.
func (o LookupSystemGlobalResultOutput) AdminSshV1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminSshV1 }).(pulumi.StringOutput)
}

// Enable/disable TELNET service.
func (o LookupSystemGlobalResultOutput) AdminTelnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AdminTelnet }).(pulumi.StringOutput)
}

// Administrative access port for TELNET. (1 - 65535, default = 23).
func (o LookupSystemGlobalResultOutput) AdminTelnetPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AdminTelnetPort }).(pulumi.IntOutput)
}

// Number of minutes before an idle administrator session times out (5 - 480 minutes (8 hours), default = 5). A shorter idle timeout is more secure.
func (o LookupSystemGlobalResultOutput) Admintimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Admintimeout }).(pulumi.IntOutput)
}

// Alias for your FortiGate unit.
func (o LookupSystemGlobalResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Alias }).(pulumi.StringOutput)
}

// Disable to allow traffic to be routed back on a different interface.
func (o LookupSystemGlobalResultOutput) AllowTrafficRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AllowTrafficRedirect }).(pulumi.StringOutput)
}

// Level of checking for packet replay and TCP sequence checking.
func (o LookupSystemGlobalResultOutput) AntiReplay() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AntiReplay }).(pulumi.StringOutput)
}

// Maximum number of dynamically learned MAC addresses that can be added to the ARP table (131072 - 2147483647, default = 131072).
func (o LookupSystemGlobalResultOutput) ArpMaxEntry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ArpMaxEntry }).(pulumi.IntOutput)
}

// Enable/disable asymmetric route.
func (o LookupSystemGlobalResultOutput) Asymroute() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Asymroute }).(pulumi.StringOutput)
}

// Server certificate that the FortiGate uses for HTTPS firewall authentication connections.
func (o LookupSystemGlobalResultOutput) AuthCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AuthCert }).(pulumi.StringOutput)
}

// User authentication HTTP port. (1 - 65535, default = 80).
func (o LookupSystemGlobalResultOutput) AuthHttpPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AuthHttpPort }).(pulumi.IntOutput)
}

// User authentication HTTPS port. (1 - 65535, default = 443).
func (o LookupSystemGlobalResultOutput) AuthHttpsPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.AuthHttpsPort }).(pulumi.IntOutput)
}

// Enable to prevent user authentication sessions from timing out when idle.
func (o LookupSystemGlobalResultOutput) AuthKeepalive() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AuthKeepalive }).(pulumi.StringOutput)
}

// Action to take when the number of allowed user authenticated sessions is reached.
func (o LookupSystemGlobalResultOutput) AuthSessionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AuthSessionLimit }).(pulumi.StringOutput)
}

// Enable/disable automatic authorization of dedicated Fortinet extension devices.
func (o LookupSystemGlobalResultOutput) AutoAuthExtensionDevice() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AutoAuthExtensionDevice }).(pulumi.StringOutput)
}

// Enable/disable automatic log partition check after ungraceful shutdown.
func (o LookupSystemGlobalResultOutput) AutorunLogFsck() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AutorunLogFsck }).(pulumi.StringOutput)
}

// Affinity setting for AV scanning (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
func (o LookupSystemGlobalResultOutput) AvAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AvAffinity }).(pulumi.StringOutput)
}

// Set the action to take if the FortiGate is running low on memory or the proxy connection limit has been reached.
func (o LookupSystemGlobalResultOutput) AvFailopen() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AvFailopen }).(pulumi.StringOutput)
}

// When enabled and a proxy for a protocol runs out of room in its session table, that protocol goes into failopen mode and enacts the action specified by av-failopen.
func (o LookupSystemGlobalResultOutput) AvFailopenSession() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.AvFailopenSession }).(pulumi.StringOutput)
}

// Enable/disable batch mode, allowing you to enter a series of CLI commands that will execute as a group once they are loaded.
func (o LookupSystemGlobalResultOutput) BatchCmdb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.BatchCmdb }).(pulumi.StringOutput)
}

// Duration in seconds for blocked sessions (1 - 300 sec  (5 minutes), default = 30).
func (o LookupSystemGlobalResultOutput) BlockSessionTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.BlockSessionTimer }).(pulumi.IntOutput)
}

// Maximum number of bridge forwarding database (FDB) entries.
func (o LookupSystemGlobalResultOutput) BrFdbMaxEntry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.BrFdbMaxEntry }).(pulumi.IntOutput)
}

// Maximum number of certificates that can be traversed in a certificate chain.
func (o LookupSystemGlobalResultOutput) CertChainMax() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.CertChainMax }).(pulumi.IntOutput)
}

// Time-out for reverting to the last saved configuration.
func (o LookupSystemGlobalResultOutput) CfgRevertTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.CfgRevertTimeout }).(pulumi.IntOutput)
}

// Configuration file save mode for CLI changes.
func (o LookupSystemGlobalResultOutput) CfgSave() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CfgSave }).(pulumi.StringOutput)
}

// Level of checking performed on protocol headers. Strict checking is more thorough but may affect performance. Loose checking is ok in most cases.
func (o LookupSystemGlobalResultOutput) CheckProtocolHeader() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CheckProtocolHeader }).(pulumi.StringOutput)
}

// Configure ICMP error message verification. You can either apply strict RST range checking or disable it.
func (o LookupSystemGlobalResultOutput) CheckResetRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CheckResetRange }).(pulumi.StringOutput)
}

// Enable/disable CLI audit log.
func (o LookupSystemGlobalResultOutput) CliAuditLog() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CliAuditLog }).(pulumi.StringOutput)
}

// Enable/disable all cloud communication.
func (o LookupSystemGlobalResultOutput) CloudCommunication() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CloudCommunication }).(pulumi.StringOutput)
}

// Enable/disable requiring administrators to have a client certificate to log into the GUI using HTTPS.
func (o LookupSystemGlobalResultOutput) CltCertReq() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CltCertReq }).(pulumi.StringOutput)
}

// Affinity setting for cmdbsvr (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
func (o LookupSystemGlobalResultOutput) CmdbsvrAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CmdbsvrAffinity }).(pulumi.StringOutput)
}

// Enable/disable global PCI DSS compliance check.
func (o LookupSystemGlobalResultOutput) ComplianceCheck() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ComplianceCheck }).(pulumi.StringOutput)
}

// Time of day to run scheduled PCI DSS compliance checks.
func (o LookupSystemGlobalResultOutput) ComplianceCheckTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ComplianceCheckTime }).(pulumi.StringOutput)
}

// Threshold at which CPU usage is reported. (% of total CPU, default = 90).
func (o LookupSystemGlobalResultOutput) CpuUseThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.CpuUseThreshold }).(pulumi.IntOutput)
}

// Enable/disable the CA attribute in certificates. Some CA servers reject CSRs that have the CA attribute.
func (o LookupSystemGlobalResultOutput) CsrCaAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.CsrCaAttribute }).(pulumi.StringOutput)
}

// Enable/disable daily restart of FortiGate unit. Use the restart-time option to set the time of day for the restart.
func (o LookupSystemGlobalResultOutput) DailyRestart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.DailyRestart }).(pulumi.StringOutput)
}

// Default service source port range. (default=1-65535)
func (o LookupSystemGlobalResultOutput) DefaultServiceSourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.DefaultServiceSourcePort }).(pulumi.StringOutput)
}

// Number of seconds to passively scan a device before performing an active scan. (20 - 3600 sec, (20 sec to 1 hour), default = 90).
func (o LookupSystemGlobalResultOutput) DeviceIdentificationActiveScanDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.DeviceIdentificationActiveScanDelay }).(pulumi.IntOutput)
}

// Time in seconds that a device must be idle to automatically log the device user out. (30 - 31536000 sec (30 sec to 1 year), default = 300).
func (o LookupSystemGlobalResultOutput) DeviceIdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.DeviceIdleTimeout }).(pulumi.IntOutput)
}

// Number of bits to use in the Diffie-Hellman exchange for HTTPS/SSH protocols.
func (o LookupSystemGlobalResultOutput) DhParams() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.DhParams }).(pulumi.StringOutput)
}

// DNS proxy worker count.
func (o LookupSystemGlobalResultOutput) DnsproxyWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.DnsproxyWorkerCount }).(pulumi.IntOutput)
}

// Enable/disable daylight saving time.
func (o LookupSystemGlobalResultOutput) Dst() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Dst }).(pulumi.StringOutput)
}

// Enable/disable edit new VDOM prompt.
func (o LookupSystemGlobalResultOutput) EditVdomPrompt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.EditVdomPrompt }).(pulumi.StringOutput)
}

// Enable/disable access to the FortiGuard network for non-compliant endpoints.
func (o LookupSystemGlobalResultOutput) EndpointControlFdsAccess() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.EndpointControlFdsAccess }).(pulumi.StringOutput)
}

// Endpoint control portal port (1 - 65535).
func (o LookupSystemGlobalResultOutput) EndpointControlPortalPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.EndpointControlPortalPort }).(pulumi.IntOutput)
}

// Configure reserved network subnet for managed LAN extension FortiExtenders. This is available when the extender daemon is running.
func (o LookupSystemGlobalResultOutput) ExtenderControllerReservedNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ExtenderControllerReservedNetwork }).(pulumi.StringOutput)
}

// Fail-time for server lost.
func (o LookupSystemGlobalResultOutput) Failtime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Failtime }).(pulumi.IntOutput)
}

// Maximum disk buffer size to temporarily store logs destined for FortiAnalyzer. To be used in the event that FortiAnalyzer is unavailalble.
func (o LookupSystemGlobalResultOutput) FazDiskBufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.FazDiskBufferSize }).(pulumi.IntOutput)
}

// Enable/disable sending IPS, Application Control, and AntiVirus data to FortiGuard. This data is used to improve FortiGuard services and is not shared with external parties and is protected by Fortinet's privacy policy.
func (o LookupSystemGlobalResultOutput) FdsStatistics() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FdsStatistics }).(pulumi.StringOutput)
}

// FortiGuard statistics collection period in minutes. (1 - 1440 min (1 min to 24 hours), default = 60).
func (o LookupSystemGlobalResultOutput) FdsStatisticsPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.FdsStatisticsPeriod }).(pulumi.IntOutput)
}

// Local UDP port for Forward Error Correction (49152 - 65535).
func (o LookupSystemGlobalResultOutput) FecPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.FecPort }).(pulumi.IntOutput)
}

// Type of alert to retrieve from FortiGuard.
func (o LookupSystemGlobalResultOutput) FgdAlertSubscription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FgdAlertSubscription }).(pulumi.StringOutput)
}

// Enable/disable FortiExtender.
func (o LookupSystemGlobalResultOutput) Fortiextender() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Fortiextender }).(pulumi.StringOutput)
}

// FortiExtender data port (1024 - 49150, default = 25246).
func (o LookupSystemGlobalResultOutput) FortiextenderDataPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.FortiextenderDataPort }).(pulumi.IntOutput)
}

// Enable/disable FortiExtender CAPWAP lockdown.
func (o LookupSystemGlobalResultOutput) FortiextenderDiscoveryLockdown() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FortiextenderDiscoveryLockdown }).(pulumi.StringOutput)
}

// Enable/disable FortiExtender VLAN mode.
func (o LookupSystemGlobalResultOutput) FortiextenderVlanMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FortiextenderVlanMode }).(pulumi.StringOutput)
}

// Enable/disable integration with the FortiIPAM cloud service.
func (o LookupSystemGlobalResultOutput) FortiipamIntegration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FortiipamIntegration }).(pulumi.StringOutput)
}

// FortiService port (1 - 65535, default = 8013). Used by FortiClient endpoint compliance. Older versions of FortiClient used a different port.
func (o LookupSystemGlobalResultOutput) FortiservicePort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.FortiservicePort }).(pulumi.IntOutput)
}

// Enable/disable FortiToken Cloud service.
func (o LookupSystemGlobalResultOutput) FortitokenCloud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.FortitokenCloud }).(pulumi.StringOutput)
}

// Enable/disable the GUI warning about using a default hostname
func (o LookupSystemGlobalResultOutput) GuiAllowDefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiAllowDefaultHostname }).(pulumi.StringOutput)
}

// Enable/disable Load GUI static files from a CDN.
func (o LookupSystemGlobalResultOutput) GuiCdnUsage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiCdnUsage }).(pulumi.StringOutput)
}

// Enable/disable the System > Certificate GUI page, allowing you to add and configure certificates from the GUI.
func (o LookupSystemGlobalResultOutput) GuiCertificates() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiCertificates }).(pulumi.StringOutput)
}

// Enable/disable custom languages in GUI.
func (o LookupSystemGlobalResultOutput) GuiCustomLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiCustomLanguage }).(pulumi.StringOutput)
}

// Default date format used throughout GUI.
func (o LookupSystemGlobalResultOutput) GuiDateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiDateFormat }).(pulumi.StringOutput)
}

// Source from which the FortiGate GUI uses to display date and time entries.
func (o LookupSystemGlobalResultOutput) GuiDateTimeSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiDateTimeSource }).(pulumi.StringOutput)
}

// Add the latitude of the location of this FortiGate to position it on the Threat Map.
func (o LookupSystemGlobalResultOutput) GuiDeviceLatitude() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiDeviceLatitude }).(pulumi.StringOutput)
}

// Add the longitude of the location of this FortiGate to position it on the Threat Map.
func (o LookupSystemGlobalResultOutput) GuiDeviceLongitude() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiDeviceLongitude }).(pulumi.StringOutput)
}

// Enable/disable displaying the FortiGate's hostname on the GUI login page.
func (o LookupSystemGlobalResultOutput) GuiDisplayHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiDisplayHostname }).(pulumi.StringOutput)
}

// Enable/disable the firmware upgrade warning on GUI setup wizard.
func (o LookupSystemGlobalResultOutput) GuiFirmwareUpgradeSetupWarning() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiFirmwareUpgradeSetupWarning }).(pulumi.StringOutput)
}

// Enable/disable the firmware upgrade warning on the GUI.
func (o LookupSystemGlobalResultOutput) GuiFirmwareUpgradeWarning() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiFirmwareUpgradeWarning }).(pulumi.StringOutput)
}

// Enable/disable the FortiCare registration setup warning on the GUI.
func (o LookupSystemGlobalResultOutput) GuiForticareRegistrationSetupWarning() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiForticareRegistrationSetupWarning }).(pulumi.StringOutput)
}

// Enable/disable displaying FortiGate Cloud Sandbox on the GUI.
func (o LookupSystemGlobalResultOutput) GuiFortigateCloudSandbox() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiFortigateCloudSandbox }).(pulumi.StringOutput)
}

// Enable/disable displaying FortiSandbox Cloud on the GUI.
func (o LookupSystemGlobalResultOutput) GuiFortisandboxCloud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiFortisandboxCloud }).(pulumi.StringOutput)
}

// Enable/disable IPv6 settings on the GUI.
func (o LookupSystemGlobalResultOutput) GuiIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiIpv6 }).(pulumi.StringOutput)
}

// Number of lines to display per page for web administration.
func (o LookupSystemGlobalResultOutput) GuiLinesPerPage() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.GuiLinesPerPage }).(pulumi.IntOutput)
}

// Enable/disable Local-out traffic on the GUI.
func (o LookupSystemGlobalResultOutput) GuiLocalOut() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiLocalOut }).(pulumi.StringOutput)
}

// Enable/disable replacement message groups on the GUI.
func (o LookupSystemGlobalResultOutput) GuiReplacementMessageGroups() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiReplacementMessageGroups }).(pulumi.StringOutput)
}

// Enable/disable REST API result caching on FortiGate.
func (o LookupSystemGlobalResultOutput) GuiRestApiCache() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiRestApiCache }).(pulumi.StringOutput)
}

// Color scheme for the administration GUI.
func (o LookupSystemGlobalResultOutput) GuiTheme() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiTheme }).(pulumi.StringOutput)
}

// Enable/disable wireless open security option on the GUI.
func (o LookupSystemGlobalResultOutput) GuiWirelessOpensecurity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.GuiWirelessOpensecurity }).(pulumi.StringOutput)
}

// Affinity setting for HA daemons (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
func (o LookupSystemGlobalResultOutput) HaAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.HaAffinity }).(pulumi.StringOutput)
}

// Enable/disable honoring of Don't-Fragment (DF) flag.
func (o LookupSystemGlobalResultOutput) HonorDf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.HonorDf }).(pulumi.StringOutput)
}

// FortiGate unit's hostname. Most models will truncate names longer than 24 characters. Some models support hostnames up to 35 characters.
func (o LookupSystemGlobalResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSystemGlobalResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum number of IGMP memberships (96 - 64000, default = 3200).
func (o LookupSystemGlobalResultOutput) IgmpStateLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.IgmpStateLimit }).(pulumi.IntOutput)
}

// Maximum number of IPsec tunnels to negotiate simultaneously.
func (o LookupSystemGlobalResultOutput) IkeEmbryonicLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.IkeEmbryonicLimit }).(pulumi.IntOutput)
}

// Configure which Internet Service database size to download from FortiGuard and use.
func (o LookupSystemGlobalResultOutput) InternetServiceDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.InternetServiceDatabase }).(pulumi.StringOutput)
}

// Dead gateway detection interval.
func (o LookupSystemGlobalResultOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Interval }).(pulumi.IntOutput)
}

// IP source port range used for traffic originating from the FortiGate unit.
func (o LookupSystemGlobalResultOutput) IpSrcPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IpSrcPortRange }).(pulumi.StringOutput)
}

// Affinity setting for IPS (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx; allowed CPUs must be less than total number of IPS engine daemons).
func (o LookupSystemGlobalResultOutput) IpsAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IpsAffinity }).(pulumi.StringOutput)
}

// Enable/disable ASIC offloading (hardware acceleration) for IPsec VPN traffic. Hardware acceleration can offload IPsec VPN sessions and accelerate encryption and decryption.
func (o LookupSystemGlobalResultOutput) IpsecAsicOffload() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IpsecAsicOffload }).(pulumi.StringOutput)
}

// ESP jump ahead rate (1G - 10G pps equivalent).
func (o LookupSystemGlobalResultOutput) IpsecHaSeqjumpRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.IpsecHaSeqjumpRate }).(pulumi.IntOutput)
}

// Enable/disable offloading (hardware acceleration) of HMAC processing for IPsec VPN.
func (o LookupSystemGlobalResultOutput) IpsecHmacOffload() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IpsecHmacOffload }).(pulumi.StringOutput)
}

// Enable/disable software decryption asynchronization (using multiple CPUs to do decryption) for IPsec VPN traffic.
func (o LookupSystemGlobalResultOutput) IpsecSoftDecAsync() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IpsecSoftDecAsync }).(pulumi.StringOutput)
}

// Enable/disable acceptance of IPv6 Duplicate Address Detection (DAD).
func (o LookupSystemGlobalResultOutput) Ipv6AcceptDad() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Ipv6AcceptDad }).(pulumi.IntOutput)
}

// Enable/disable IPv6 address probe through Anycast.
func (o LookupSystemGlobalResultOutput) Ipv6AllowAnycastProbe() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Ipv6AllowAnycastProbe }).(pulumi.StringOutput)
}

// Disable to prevent IPv6 traffic with same local ingress and egress interface from being forwarded without policy check.
func (o LookupSystemGlobalResultOutput) Ipv6AllowTrafficRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Ipv6AllowTrafficRedirect }).(pulumi.StringOutput)
}

// Configure CPU IRQ time accounting mode.
func (o LookupSystemGlobalResultOutput) IrqTimeAccounting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.IrqTimeAccounting }).(pulumi.StringOutput)
}

// GUI display language.
func (o LookupSystemGlobalResultOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Language }).(pulumi.StringOutput)
}

// Global timeout for connections with remote LDAP servers in milliseconds (1 - 300000, default 500).
func (o LookupSystemGlobalResultOutput) Ldapconntimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Ldapconntimeout }).(pulumi.IntOutput)
}

// Enable/disable Link Layer Discovery Protocol (LLDP) reception.
func (o LookupSystemGlobalResultOutput) LldpReception() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LldpReception }).(pulumi.StringOutput)
}

// Enable/disable Link Layer Discovery Protocol (LLDP) transmission.
func (o LookupSystemGlobalResultOutput) LldpTransmission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LldpTransmission }).(pulumi.StringOutput)
}

// Enable/disable logging of SSL connection events.
func (o LookupSystemGlobalResultOutput) LogSslConnection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LogSslConnection }).(pulumi.StringOutput)
}

// Enable/disable insertion of address UUIDs to traffic logs.
func (o LookupSystemGlobalResultOutput) LogUuidAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LogUuidAddress }).(pulumi.StringOutput)
}

// Enable/disable insertion of policy UUIDs to traffic logs.
func (o LookupSystemGlobalResultOutput) LogUuidPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LogUuidPolicy }).(pulumi.StringOutput)
}

// Enable/disable login time recording.
func (o LookupSystemGlobalResultOutput) LoginTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LoginTimestamp }).(pulumi.StringOutput)
}

// Enable/disable long VDOM name support.
func (o LookupSystemGlobalResultOutput) LongVdomName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.LongVdomName }).(pulumi.StringOutput)
}

// Management IP address of this FortiGate. Used to log into this FortiGate from another FortiGate in the Security Fabric.
func (o LookupSystemGlobalResultOutput) ManagementIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ManagementIp }).(pulumi.StringOutput)
}

// Overriding port for management connection (Overrides admin port).
func (o LookupSystemGlobalResultOutput) ManagementPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ManagementPort }).(pulumi.IntOutput)
}

// Enable/disable use of the admin-sport setting for the management port. If disabled, FortiGate will allow user to specify management-port.
func (o LookupSystemGlobalResultOutput) ManagementPortUseAdminSport() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ManagementPortUseAdminSport }).(pulumi.StringOutput)
}

// Management virtual domain name.
func (o LookupSystemGlobalResultOutput) ManagementVdom() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ManagementVdom }).(pulumi.StringOutput)
}

// Maximum DLP stat memory (0 - 4294967295).
func (o LookupSystemGlobalResultOutput) MaxDlpstatMemory() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MaxDlpstatMemory }).(pulumi.IntOutput)
}

// Maximum number of IP route cache entries (0 - 2147483647).
func (o LookupSystemGlobalResultOutput) MaxRouteCacheSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MaxRouteCacheSize }).(pulumi.IntOutput)
}

// Enable/disable no modification of multicast TTL.
func (o LookupSystemGlobalResultOutput) McTtlNotchange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.McTtlNotchange }).(pulumi.StringOutput)
}

// Threshold at which memory usage is considered extreme (new sessions are dropped) (% of total RAM, default = 95).
func (o LookupSystemGlobalResultOutput) MemoryUseThresholdExtreme() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MemoryUseThresholdExtreme }).(pulumi.IntOutput)
}

// Threshold at which memory usage forces the FortiGate to exit conserve mode (% of total RAM, default = 82).
func (o LookupSystemGlobalResultOutput) MemoryUseThresholdGreen() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MemoryUseThresholdGreen }).(pulumi.IntOutput)
}

// Threshold at which memory usage forces the FortiGate to enter conserve mode (% of total RAM, default = 88).
func (o LookupSystemGlobalResultOutput) MemoryUseThresholdRed() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MemoryUseThresholdRed }).(pulumi.IntOutput)
}

// Affinity setting for logging (64-bit hexadecimal value in the format of xxxxxxxxxxxxxxxx).
func (o LookupSystemGlobalResultOutput) MiglogAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.MiglogAffinity }).(pulumi.StringOutput)
}

// Number of logging (miglogd) processes to be allowed to run. Higher number can reduce performance; lower number can slow log processing time. No logs will be dropped or lost if the number is changed.
func (o LookupSystemGlobalResultOutput) MiglogdChildren() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.MiglogdChildren }).(pulumi.IntOutput)
}

// Enforce all login methods to require an additional authentication factor (default = optional).
func (o LookupSystemGlobalResultOutput) MultiFactorAuthentication() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.MultiFactorAuthentication }).(pulumi.StringOutput)
}

// Enable/disable multicast forwarding.
func (o LookupSystemGlobalResultOutput) MulticastForward() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.MulticastForward }).(pulumi.StringOutput)
}

// Maximum number of NDP table entries (set to 65,536 or higher; if set to 0, kernel holds 65,536 entries).
func (o LookupSystemGlobalResultOutput) NdpMaxEntry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.NdpMaxEntry }).(pulumi.IntOutput)
}

// Enable/disable per-user block/allow list filter.
func (o LookupSystemGlobalResultOutput) PerUserBal() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PerUserBal }).(pulumi.StringOutput)
}

// Enable/disable per-user black/white list filter.
func (o LookupSystemGlobalResultOutput) PerUserBwl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PerUserBwl }).(pulumi.StringOutput)
}

// Enable/disable path MTU discovery.
func (o LookupSystemGlobalResultOutput) PmtuDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PmtuDiscovery }).(pulumi.StringOutput)
}

// Number of concurrent firewall use logins from the same user (1 - 100, default = 0 means no limit).
func (o LookupSystemGlobalResultOutput) PolicyAuthConcurrent() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.PolicyAuthConcurrent }).(pulumi.IntOutput)
}

// Enable/disable displaying the administrator access disclaimer message after an administrator successfully logs in.
func (o LookupSystemGlobalResultOutput) PostLoginBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PostLoginBanner }).(pulumi.StringOutput)
}

// Enable/disable displaying the administrator access disclaimer message on the login page before an administrator logs in.
func (o LookupSystemGlobalResultOutput) PreLoginBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PreLoginBanner }).(pulumi.StringOutput)
}

// Enable/disable private data encryption using an AES 128-bit key.
func (o LookupSystemGlobalResultOutput) PrivateDataEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.PrivateDataEncryption }).(pulumi.StringOutput)
}

// Enable/disable authenticated users lifetime control.  This is a cap on the total time a proxy user can be authenticated for after which re-authentication will take place.
func (o LookupSystemGlobalResultOutput) ProxyAuthLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyAuthLifetime }).(pulumi.StringOutput)
}

// Lifetime timeout in minutes for authenticated users (5  - 65535 min, default=480 (8 hours)).
func (o LookupSystemGlobalResultOutput) ProxyAuthLifetimeTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ProxyAuthLifetimeTimeout }).(pulumi.IntOutput)
}

// Authentication timeout in minutes for authenticated users (1 - 300 min, default = 10).
func (o LookupSystemGlobalResultOutput) ProxyAuthTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ProxyAuthTimeout }).(pulumi.IntOutput)
}

// Enable/disable using management VDOM to send requests.
func (o LookupSystemGlobalResultOutput) ProxyCertUseMgmtVdom() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyCertUseMgmtVdom }).(pulumi.StringOutput)
}

// Enable/disable using content processor (CP8 or CP9) hardware acceleration to encrypt and decrypt IPsec and SSL traffic.
func (o LookupSystemGlobalResultOutput) ProxyCipherHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyCipherHardwareAcceleration }).(pulumi.StringOutput)
}

// Enable/disable email proxy hardware acceleration.
func (o LookupSystemGlobalResultOutput) ProxyHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyHardwareAcceleration }).(pulumi.StringOutput)
}

// Enable/disable using the content processor to accelerate KXP traffic.
func (o LookupSystemGlobalResultOutput) ProxyKxpHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyKxpHardwareAcceleration }).(pulumi.StringOutput)
}

// Control if users must re-authenticate after a session is closed, traffic has been idle, or from the point at which the user was first created.
func (o LookupSystemGlobalResultOutput) ProxyReAuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyReAuthenticationMode }).(pulumi.StringOutput)
}

// Enable/disable use of the maximum memory usage on the FortiGate unit's proxy processing of resources, such as block lists, allow lists, and external resources.
func (o LookupSystemGlobalResultOutput) ProxyResourceMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ProxyResourceMode }).(pulumi.StringOutput)
}

// Proxy worker count.
func (o LookupSystemGlobalResultOutput) ProxyWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ProxyWorkerCount }).(pulumi.IntOutput)
}

// RADIUS service port number.
func (o LookupSystemGlobalResultOutput) RadiusPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.RadiusPort }).(pulumi.IntOutput)
}

// Enable/disable reboot of system upon restoring configuration.
func (o LookupSystemGlobalResultOutput) RebootUponConfigRestore() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.RebootUponConfigRestore }).(pulumi.StringOutput)
}

// Statistics refresh interval in GUI.
func (o LookupSystemGlobalResultOutput) Refresh() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Refresh }).(pulumi.IntOutput)
}

// Number of seconds that the FortiGate waits for responses from remote RADIUS, LDAP, or TACACS+ authentication servers. (0-300 sec, default = 5, 0 means no timeout).
func (o LookupSystemGlobalResultOutput) Remoteauthtimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.Remoteauthtimeout }).(pulumi.IntOutput)
}

// Action to perform if the FortiGate receives a TCP packet but cannot find a corresponding session in its session table. NAT/Route mode only.
func (o LookupSystemGlobalResultOutput) ResetSessionlessTcp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.ResetSessionlessTcp }).(pulumi.StringOutput)
}

// Daily restart time (hh:mm).
func (o LookupSystemGlobalResultOutput) RestartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.RestartTime }).(pulumi.StringOutput)
}

// Enable/disable back-up of the latest configuration revision when an administrator logs out of the CLI or GUI.
func (o LookupSystemGlobalResultOutput) RevisionBackupOnLogout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.RevisionBackupOnLogout }).(pulumi.StringOutput)
}

// Enable/disable back-up of the latest configuration revision after the firmware is upgraded.
func (o LookupSystemGlobalResultOutput) RevisionImageAutoBackup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.RevisionImageAutoBackup }).(pulumi.StringOutput)
}

// Number of scanunits. The range and the default depend on the number of CPUs. Only available on FortiGate units with multiple CPUs.
func (o LookupSystemGlobalResultOutput) ScanunitCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.ScanunitCount }).(pulumi.IntOutput)
}

// Enable/disable the submission of Security Rating results to FortiGuard.
func (o LookupSystemGlobalResultOutput) SecurityRatingResultSubmission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SecurityRatingResultSubmission }).(pulumi.StringOutput)
}

// Enable/disable scheduled runs of Security Rating.
func (o LookupSystemGlobalResultOutput) SecurityRatingRunOnSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SecurityRatingRunOnSchedule }).(pulumi.StringOutput)
}

// Enable/disable sending of path maximum transmission unit (PMTU) - ICMP destination unreachable packet and to support PMTUD protocol on your network to reduce fragmentation of packets.
func (o LookupSystemGlobalResultOutput) SendPmtuIcmp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SendPmtuIcmp }).(pulumi.StringOutput)
}

// Enable/disable the ability to change the static NAT route.
func (o LookupSystemGlobalResultOutput) SnatRouteChange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SnatRouteChange }).(pulumi.StringOutput)
}

// Enable/disable IPS detection of HIBUN format files when using Data Leak Protection.
func (o LookupSystemGlobalResultOutput) SpecialFile23Support() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SpecialFile23Support }).(pulumi.StringOutput)
}

// Enable/disable speed test server.
func (o LookupSystemGlobalResultOutput) SpeedtestServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SpeedtestServer }).(pulumi.StringOutput)
}

// Split port(s) to multiple 10Gbps ports.
func (o LookupSystemGlobalResultOutput) SplitPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SplitPort }).(pulumi.StringOutput)
}

// Date within a month to run ssd trim.
func (o LookupSystemGlobalResultOutput) SsdTrimDate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.SsdTrimDate }).(pulumi.IntOutput)
}

// How often to run SSD Trim (default = weekly). SSD Trim prevents SSD drive data loss by finding and isolating errors.
func (o LookupSystemGlobalResultOutput) SsdTrimFreq() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SsdTrimFreq }).(pulumi.StringOutput)
}

// Hour of the day on which to run SSD Trim (0 - 23, default = 1).
func (o LookupSystemGlobalResultOutput) SsdTrimHour() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.SsdTrimHour }).(pulumi.IntOutput)
}

// Minute of the hour on which to run SSD Trim (0 - 59, 60 for random).
func (o LookupSystemGlobalResultOutput) SsdTrimMin() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.SsdTrimMin }).(pulumi.IntOutput)
}

// Day of week to run SSD Trim.
func (o LookupSystemGlobalResultOutput) SsdTrimWeekday() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SsdTrimWeekday }).(pulumi.StringOutput)
}

// Enable/disable CBC cipher for SSH access.
func (o LookupSystemGlobalResultOutput) SshCbcCipher() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshCbcCipher }).(pulumi.StringOutput)
}

// Select one or more SSH ciphers.
func (o LookupSystemGlobalResultOutput) SshEncAlgo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshEncAlgo }).(pulumi.StringOutput)
}

// Enable/disable HMAC-MD5 for SSH access.
func (o LookupSystemGlobalResultOutput) SshHmacMd5() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshHmacMd5 }).(pulumi.StringOutput)
}

// Select one or more SSH kex algorithms.
func (o LookupSystemGlobalResultOutput) SshKexAlgo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshKexAlgo }).(pulumi.StringOutput)
}

// Enable/disable SHA1 key exchange for SSH access.
func (o LookupSystemGlobalResultOutput) SshKexSha1() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshKexSha1 }).(pulumi.StringOutput)
}

// Select one or more SSH MAC algorithms.
func (o LookupSystemGlobalResultOutput) SshMacAlgo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshMacAlgo }).(pulumi.StringOutput)
}

// Enable/disable HMAC-SHA1 and UMAC-64-ETM for SSH access.
func (o LookupSystemGlobalResultOutput) SshMacWeak() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SshMacWeak }).(pulumi.StringOutput)
}

// Minimum supported protocol version for SSL/TLS connections (default = TLSv1.2).
func (o LookupSystemGlobalResultOutput) SslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslMinProtoVersion }).(pulumi.StringOutput)
}

// Enable/disable static key ciphers in SSL/TLS connections (e.g. AES128-SHA, AES256-SHA, AES128-SHA256, AES256-SHA256).
func (o LookupSystemGlobalResultOutput) SslStaticKeyCiphers() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslStaticKeyCiphers }).(pulumi.StringOutput)
}

// Enable/disable SSL VPN hardware acceleration.
func (o LookupSystemGlobalResultOutput) SslvpnCipherHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslvpnCipherHardwareAcceleration }).(pulumi.StringOutput)
}

// Enable/disable verification of EMS serial number in SSL-VPN connection.
func (o LookupSystemGlobalResultOutput) SslvpnEmsSnCheck() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslvpnEmsSnCheck }).(pulumi.StringOutput)
}

// Enable/disable SSL VPN KXP hardware acceleration.
func (o LookupSystemGlobalResultOutput) SslvpnKxpHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslvpnKxpHardwareAcceleration }).(pulumi.StringOutput)
}

// Maximum number of SSL VPN processes. Upper limit for this value is the number of CPUs and depends on the model.
func (o LookupSystemGlobalResultOutput) SslvpnMaxWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.SslvpnMaxWorkerCount }).(pulumi.IntOutput)
}

// Enable/disable checking browser's plugin version by SSL VPN.
func (o LookupSystemGlobalResultOutput) SslvpnPluginVersionCheck() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SslvpnPluginVersionCheck }).(pulumi.StringOutput)
}

// Enable to check the session against the original policy when revalidating. This can prevent dropping of redirected sessions when web-filtering and authentication are enabled together. If this option is enabled, the FortiGate unit deletes a session if a routing or policy change causes the session to no longer match the policy that originally allowed the session.
func (o LookupSystemGlobalResultOutput) StrictDirtySessionCheck() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.StrictDirtySessionCheck }).(pulumi.StringOutput)
}

// Enable to use strong encryption and only allow strong ciphers (AES, 3DES) and digest (SHA1) for HTTPS/SSH/TLS/SSL functions.
func (o LookupSystemGlobalResultOutput) StrongCrypto() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.StrongCrypto }).(pulumi.StringOutput)
}

// Enable/disable switch controller feature. Switch controller allows you to manage FortiSwitch from the FortiGate itself.
func (o LookupSystemGlobalResultOutput) SwitchController() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SwitchController }).(pulumi.StringOutput)
}

// Enable reserved network subnet for controlled switches. This is available when the switch controller is enabled.
func (o LookupSystemGlobalResultOutput) SwitchControllerReservedNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.SwitchControllerReservedNetwork }).(pulumi.StringOutput)
}

// Time in minutes between updates of performance statistics logging. (1 - 15 min, default = 5, 0 = disabled).
func (o LookupSystemGlobalResultOutput) SysPerfLogInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.SysPerfLogInterval }).(pulumi.IntOutput)
}

// Number of seconds the FortiGate unit should wait to close a session after one peer has sent a FIN packet but the other has not responded (1 - 86400 sec (1 day), default = 120).
func (o LookupSystemGlobalResultOutput) TcpHalfcloseTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TcpHalfcloseTimer }).(pulumi.IntOutput)
}

// Number of seconds the FortiGate unit should wait to close a session after one peer has sent an open session packet but the other has not responded (1 - 86400 sec (1 day), default = 10).
func (o LookupSystemGlobalResultOutput) TcpHalfopenTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TcpHalfopenTimer }).(pulumi.IntOutput)
}

// Enable SACK, timestamp and MSS TCP options.
func (o LookupSystemGlobalResultOutput) TcpOption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.TcpOption }).(pulumi.StringOutput)
}

// Length of the TCP CLOSE state in seconds (5 - 300 sec, default = 5).
func (o LookupSystemGlobalResultOutput) TcpRstTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TcpRstTimer }).(pulumi.IntOutput)
}

// Length of the TCP TIME-WAIT state in seconds.
func (o LookupSystemGlobalResultOutput) TcpTimewaitTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TcpTimewaitTimer }).(pulumi.IntOutput)
}

// Enable/disable TFTP.
func (o LookupSystemGlobalResultOutput) Tftp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Tftp }).(pulumi.StringOutput)
}

// Number corresponding to your time zone from 00 to 86. Enter set timezone ? to view the list of time zones and the numbers that represent them.
func (o LookupSystemGlobalResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Timezone }).(pulumi.StringOutput)
}

// Enable/disable skip policy check and allow multicast through.
func (o LookupSystemGlobalResultOutput) TpMcSkipPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.TpMcSkipPolicy }).(pulumi.StringOutput)
}

// Choose Type of Service (ToS) or Differentiated Services Code Point (DSCP) for traffic prioritization in traffic shaping.
func (o LookupSystemGlobalResultOutput) TrafficPriority() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.TrafficPriority }).(pulumi.StringOutput)
}

// Default system-wide level of priority for traffic prioritization.
func (o LookupSystemGlobalResultOutput) TrafficPriorityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.TrafficPriorityLevel }).(pulumi.StringOutput)
}

// Email-based two-factor authentication session timeout (30 - 300 seconds (5 minutes), default = 60).
func (o LookupSystemGlobalResultOutput) TwoFactorEmailExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TwoFactorEmailExpiry }).(pulumi.IntOutput)
}

// FortiAuthenticator token authentication session timeout (10 - 3600 seconds (1 hour), default = 60).
func (o LookupSystemGlobalResultOutput) TwoFactorFacExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TwoFactorFacExpiry }).(pulumi.IntOutput)
}

// FortiToken authentication session timeout (60 - 600 sec (10 minutes), default = 60).
func (o LookupSystemGlobalResultOutput) TwoFactorFtkExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TwoFactorFtkExpiry }).(pulumi.IntOutput)
}

// FortiToken Mobile session timeout (1 - 168 hours (7 days), default = 72).
func (o LookupSystemGlobalResultOutput) TwoFactorFtmExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TwoFactorFtmExpiry }).(pulumi.IntOutput)
}

// SMS-based two-factor authentication session timeout (30 - 300 sec, default = 60).
func (o LookupSystemGlobalResultOutput) TwoFactorSmsExpiry() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.TwoFactorSmsExpiry }).(pulumi.IntOutput)
}

// UDP connection session timeout. This command can be useful in managing CPU and memory resources (1 - 86400 seconds (1 day), default = 60).
func (o LookupSystemGlobalResultOutput) UdpIdleTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.UdpIdleTimer }).(pulumi.IntOutput)
}

// URL filter CPU affinity.
func (o LookupSystemGlobalResultOutput) UrlFilterAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.UrlFilterAffinity }).(pulumi.StringOutput)
}

// URL filter daemon count.
func (o LookupSystemGlobalResultOutput) UrlFilterCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.UrlFilterCount }).(pulumi.IntOutput)
}

// Maximum number of devices allowed in user device store.
func (o LookupSystemGlobalResultOutput) UserDeviceStoreMaxDevices() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.UserDeviceStoreMaxDevices }).(pulumi.IntOutput)
}

// Maximum unified memory allowed in user device store.
func (o LookupSystemGlobalResultOutput) UserDeviceStoreMaxUnifiedMem() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.UserDeviceStoreMaxUnifiedMem }).(pulumi.IntOutput)
}

// Maximum number of users allowed in user device store.
func (o LookupSystemGlobalResultOutput) UserDeviceStoreMaxUsers() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.UserDeviceStoreMaxUsers }).(pulumi.IntOutput)
}

// Certificate to use for https user authentication.
func (o LookupSystemGlobalResultOutput) UserServerCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.UserServerCert }).(pulumi.StringOutput)
}

// Enable/disable support for multiple virtual domains (VDOMs).
func (o LookupSystemGlobalResultOutput) VdomAdmin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.VdomAdmin }).(pulumi.StringOutput)
}

// Enable/disable support for split/multiple virtual domains (VDOMs).
func (o LookupSystemGlobalResultOutput) VdomMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.VdomMode }).(pulumi.StringOutput)
}

func (o LookupSystemGlobalResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Controls the number of ARPs that the FortiGate sends for a Virtual IP (VIP) address range.
func (o LookupSystemGlobalResultOutput) VipArpRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.VipArpRange }).(pulumi.StringOutput)
}

// Maximum number of virtual server processes to create. The maximum is the number of CPU cores. This is not available on single-core CPUs.
func (o LookupSystemGlobalResultOutput) VirtualServerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.VirtualServerCount }).(pulumi.IntOutput)
}

// Enable/disable virtual server hardware acceleration.
func (o LookupSystemGlobalResultOutput) VirtualServerHardwareAcceleration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.VirtualServerHardwareAcceleration }).(pulumi.StringOutput)
}

// Enable/disable virtual switch VLAN.
func (o LookupSystemGlobalResultOutput) VirtualSwitchVlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.VirtualSwitchVlan }).(pulumi.StringOutput)
}

// Affinity setting for wad (hexadecimal value up to 256 bits in the format of xxxxxxxxxxxxxxxx).
func (o LookupSystemGlobalResultOutput) WadAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.WadAffinity }).(pulumi.StringOutput)
}

// Number of concurrent WAD-cache-service object-cache processes.
func (o LookupSystemGlobalResultOutput) WadCsvcCsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.WadCsvcCsCount }).(pulumi.IntOutput)
}

// Number of concurrent WAD-cache-service byte-cache processes.
func (o LookupSystemGlobalResultOutput) WadCsvcDbCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.WadCsvcDbCount }).(pulumi.IntOutput)
}

// Minimum percentage change in system memory usage detected by the wad daemon prior to adjusting TCP window size for any active connection.
func (o LookupSystemGlobalResultOutput) WadMemoryChangeGranularity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.WadMemoryChangeGranularity }).(pulumi.IntOutput)
}

// Enable/disable dispatching traffic to WAD workers based on source affinity.
func (o LookupSystemGlobalResultOutput) WadSourceAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.WadSourceAffinity }).(pulumi.StringOutput)
}

// Number of explicit proxy WAN optimization daemon (WAD) processes. By default WAN optimization, explicit proxy, and web caching is handled by all of the CPU cores in a FortiGate unit.
func (o LookupSystemGlobalResultOutput) WadWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.WadWorkerCount }).(pulumi.IntOutput)
}

// CA certificate that verifies the WiFi certificate.
func (o LookupSystemGlobalResultOutput) WifiCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.WifiCaCertificate }).(pulumi.StringOutput)
}

// Certificate to use for WiFi authentication.
func (o LookupSystemGlobalResultOutput) WifiCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.WifiCertificate }).(pulumi.StringOutput)
}

// Enable/disable comparability with WiMAX 4G USB devices.
func (o LookupSystemGlobalResultOutput) Wimax4gUsb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.Wimax4gUsb }).(pulumi.StringOutput)
}

// Enable/disable the wireless controller feature to use the FortiGate unit to manage FortiAPs.
func (o LookupSystemGlobalResultOutput) WirelessController() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) string { return v.WirelessController }).(pulumi.StringOutput)
}

// Port used for the control channel in wireless controller mode (wireless-mode is ac). The data channel port is the control channel port number plus one (1024 - 49150, default = 5246).
func (o LookupSystemGlobalResultOutput) WirelessControllerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemGlobalResult) int { return v.WirelessControllerPort }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemGlobalResultOutput{})
}
