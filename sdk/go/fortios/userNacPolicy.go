// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type UserNacPolicy struct {
	pulumi.CustomResourceState

	Category            pulumi.StringOutput                 `pulumi:"category"`
	Description         pulumi.StringOutput                 `pulumi:"description"`
	DynamicSortSubtable pulumi.StringPtrOutput              `pulumi:"dynamicSortSubtable"`
	EmsTag              pulumi.StringOutput                 `pulumi:"emsTag"`
	Family              pulumi.StringOutput                 `pulumi:"family"`
	FirewallAddress     pulumi.StringOutput                 `pulumi:"firewallAddress"`
	GetAllTables        pulumi.StringPtrOutput              `pulumi:"getAllTables"`
	Host                pulumi.StringOutput                 `pulumi:"host"`
	HwVendor            pulumi.StringOutput                 `pulumi:"hwVendor"`
	HwVersion           pulumi.StringOutput                 `pulumi:"hwVersion"`
	Mac                 pulumi.StringOutput                 `pulumi:"mac"`
	Name                pulumi.StringOutput                 `pulumi:"name"`
	Os                  pulumi.StringOutput                 `pulumi:"os"`
	Severities          UserNacPolicySeverityArrayOutput    `pulumi:"severities"`
	Src                 pulumi.StringOutput                 `pulumi:"src"`
	SsidPolicy          pulumi.StringOutput                 `pulumi:"ssidPolicy"`
	Status              pulumi.StringOutput                 `pulumi:"status"`
	SwVersion           pulumi.StringOutput                 `pulumi:"swVersion"`
	SwitchAutoAuth      pulumi.StringOutput                 `pulumi:"switchAutoAuth"`
	SwitchFortilink     pulumi.StringOutput                 `pulumi:"switchFortilink"`
	SwitchGroups        UserNacPolicySwitchGroupArrayOutput `pulumi:"switchGroups"`
	SwitchMacPolicy     pulumi.StringOutput                 `pulumi:"switchMacPolicy"`
	SwitchPortPolicy    pulumi.StringOutput                 `pulumi:"switchPortPolicy"`
	SwitchScopes        UserNacPolicySwitchScopeArrayOutput `pulumi:"switchScopes"`
	Type                pulumi.StringOutput                 `pulumi:"type"`
	User                pulumi.StringOutput                 `pulumi:"user"`
	UserGroup           pulumi.StringOutput                 `pulumi:"userGroup"`
	Vdomparam           pulumi.StringPtrOutput              `pulumi:"vdomparam"`
}

// NewUserNacPolicy registers a new resource with the given unique name, arguments, and options.
func NewUserNacPolicy(ctx *pulumi.Context,
	name string, args *UserNacPolicyArgs, opts ...pulumi.ResourceOption) (*UserNacPolicy, error) {
	if args == nil {
		args = &UserNacPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserNacPolicy
	err := ctx.RegisterResource("fortios:index/userNacPolicy:UserNacPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserNacPolicy gets an existing UserNacPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserNacPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserNacPolicyState, opts ...pulumi.ResourceOption) (*UserNacPolicy, error) {
	var resource UserNacPolicy
	err := ctx.ReadResource("fortios:index/userNacPolicy:UserNacPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserNacPolicy resources.
type userNacPolicyState struct {
	Category            *string                    `pulumi:"category"`
	Description         *string                    `pulumi:"description"`
	DynamicSortSubtable *string                    `pulumi:"dynamicSortSubtable"`
	EmsTag              *string                    `pulumi:"emsTag"`
	Family              *string                    `pulumi:"family"`
	FirewallAddress     *string                    `pulumi:"firewallAddress"`
	GetAllTables        *string                    `pulumi:"getAllTables"`
	Host                *string                    `pulumi:"host"`
	HwVendor            *string                    `pulumi:"hwVendor"`
	HwVersion           *string                    `pulumi:"hwVersion"`
	Mac                 *string                    `pulumi:"mac"`
	Name                *string                    `pulumi:"name"`
	Os                  *string                    `pulumi:"os"`
	Severities          []UserNacPolicySeverity    `pulumi:"severities"`
	Src                 *string                    `pulumi:"src"`
	SsidPolicy          *string                    `pulumi:"ssidPolicy"`
	Status              *string                    `pulumi:"status"`
	SwVersion           *string                    `pulumi:"swVersion"`
	SwitchAutoAuth      *string                    `pulumi:"switchAutoAuth"`
	SwitchFortilink     *string                    `pulumi:"switchFortilink"`
	SwitchGroups        []UserNacPolicySwitchGroup `pulumi:"switchGroups"`
	SwitchMacPolicy     *string                    `pulumi:"switchMacPolicy"`
	SwitchPortPolicy    *string                    `pulumi:"switchPortPolicy"`
	SwitchScopes        []UserNacPolicySwitchScope `pulumi:"switchScopes"`
	Type                *string                    `pulumi:"type"`
	User                *string                    `pulumi:"user"`
	UserGroup           *string                    `pulumi:"userGroup"`
	Vdomparam           *string                    `pulumi:"vdomparam"`
}

type UserNacPolicyState struct {
	Category            pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EmsTag              pulumi.StringPtrInput
	Family              pulumi.StringPtrInput
	FirewallAddress     pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Host                pulumi.StringPtrInput
	HwVendor            pulumi.StringPtrInput
	HwVersion           pulumi.StringPtrInput
	Mac                 pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Os                  pulumi.StringPtrInput
	Severities          UserNacPolicySeverityArrayInput
	Src                 pulumi.StringPtrInput
	SsidPolicy          pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	SwVersion           pulumi.StringPtrInput
	SwitchAutoAuth      pulumi.StringPtrInput
	SwitchFortilink     pulumi.StringPtrInput
	SwitchGroups        UserNacPolicySwitchGroupArrayInput
	SwitchMacPolicy     pulumi.StringPtrInput
	SwitchPortPolicy    pulumi.StringPtrInput
	SwitchScopes        UserNacPolicySwitchScopeArrayInput
	Type                pulumi.StringPtrInput
	User                pulumi.StringPtrInput
	UserGroup           pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (UserNacPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*userNacPolicyState)(nil)).Elem()
}

type userNacPolicyArgs struct {
	Category            *string                    `pulumi:"category"`
	Description         *string                    `pulumi:"description"`
	DynamicSortSubtable *string                    `pulumi:"dynamicSortSubtable"`
	EmsTag              *string                    `pulumi:"emsTag"`
	Family              *string                    `pulumi:"family"`
	FirewallAddress     *string                    `pulumi:"firewallAddress"`
	GetAllTables        *string                    `pulumi:"getAllTables"`
	Host                *string                    `pulumi:"host"`
	HwVendor            *string                    `pulumi:"hwVendor"`
	HwVersion           *string                    `pulumi:"hwVersion"`
	Mac                 *string                    `pulumi:"mac"`
	Name                *string                    `pulumi:"name"`
	Os                  *string                    `pulumi:"os"`
	Severities          []UserNacPolicySeverity    `pulumi:"severities"`
	Src                 *string                    `pulumi:"src"`
	SsidPolicy          *string                    `pulumi:"ssidPolicy"`
	Status              *string                    `pulumi:"status"`
	SwVersion           *string                    `pulumi:"swVersion"`
	SwitchAutoAuth      *string                    `pulumi:"switchAutoAuth"`
	SwitchFortilink     *string                    `pulumi:"switchFortilink"`
	SwitchGroups        []UserNacPolicySwitchGroup `pulumi:"switchGroups"`
	SwitchMacPolicy     *string                    `pulumi:"switchMacPolicy"`
	SwitchPortPolicy    *string                    `pulumi:"switchPortPolicy"`
	SwitchScopes        []UserNacPolicySwitchScope `pulumi:"switchScopes"`
	Type                *string                    `pulumi:"type"`
	User                *string                    `pulumi:"user"`
	UserGroup           *string                    `pulumi:"userGroup"`
	Vdomparam           *string                    `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserNacPolicy resource.
type UserNacPolicyArgs struct {
	Category            pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	EmsTag              pulumi.StringPtrInput
	Family              pulumi.StringPtrInput
	FirewallAddress     pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Host                pulumi.StringPtrInput
	HwVendor            pulumi.StringPtrInput
	HwVersion           pulumi.StringPtrInput
	Mac                 pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Os                  pulumi.StringPtrInput
	Severities          UserNacPolicySeverityArrayInput
	Src                 pulumi.StringPtrInput
	SsidPolicy          pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	SwVersion           pulumi.StringPtrInput
	SwitchAutoAuth      pulumi.StringPtrInput
	SwitchFortilink     pulumi.StringPtrInput
	SwitchGroups        UserNacPolicySwitchGroupArrayInput
	SwitchMacPolicy     pulumi.StringPtrInput
	SwitchPortPolicy    pulumi.StringPtrInput
	SwitchScopes        UserNacPolicySwitchScopeArrayInput
	Type                pulumi.StringPtrInput
	User                pulumi.StringPtrInput
	UserGroup           pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (UserNacPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userNacPolicyArgs)(nil)).Elem()
}

type UserNacPolicyInput interface {
	pulumi.Input

	ToUserNacPolicyOutput() UserNacPolicyOutput
	ToUserNacPolicyOutputWithContext(ctx context.Context) UserNacPolicyOutput
}

func (*UserNacPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**UserNacPolicy)(nil)).Elem()
}

func (i *UserNacPolicy) ToUserNacPolicyOutput() UserNacPolicyOutput {
	return i.ToUserNacPolicyOutputWithContext(context.Background())
}

func (i *UserNacPolicy) ToUserNacPolicyOutputWithContext(ctx context.Context) UserNacPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacPolicyOutput)
}

func (i *UserNacPolicy) ToOutput(ctx context.Context) pulumix.Output[*UserNacPolicy] {
	return pulumix.Output[*UserNacPolicy]{
		OutputState: i.ToUserNacPolicyOutputWithContext(ctx).OutputState,
	}
}

// UserNacPolicyArrayInput is an input type that accepts UserNacPolicyArray and UserNacPolicyArrayOutput values.
// You can construct a concrete instance of `UserNacPolicyArrayInput` via:
//
//	UserNacPolicyArray{ UserNacPolicyArgs{...} }
type UserNacPolicyArrayInput interface {
	pulumi.Input

	ToUserNacPolicyArrayOutput() UserNacPolicyArrayOutput
	ToUserNacPolicyArrayOutputWithContext(context.Context) UserNacPolicyArrayOutput
}

type UserNacPolicyArray []UserNacPolicyInput

func (UserNacPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserNacPolicy)(nil)).Elem()
}

func (i UserNacPolicyArray) ToUserNacPolicyArrayOutput() UserNacPolicyArrayOutput {
	return i.ToUserNacPolicyArrayOutputWithContext(context.Background())
}

func (i UserNacPolicyArray) ToUserNacPolicyArrayOutputWithContext(ctx context.Context) UserNacPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacPolicyArrayOutput)
}

func (i UserNacPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*UserNacPolicy] {
	return pulumix.Output[[]*UserNacPolicy]{
		OutputState: i.ToUserNacPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// UserNacPolicyMapInput is an input type that accepts UserNacPolicyMap and UserNacPolicyMapOutput values.
// You can construct a concrete instance of `UserNacPolicyMapInput` via:
//
//	UserNacPolicyMap{ "key": UserNacPolicyArgs{...} }
type UserNacPolicyMapInput interface {
	pulumi.Input

	ToUserNacPolicyMapOutput() UserNacPolicyMapOutput
	ToUserNacPolicyMapOutputWithContext(context.Context) UserNacPolicyMapOutput
}

type UserNacPolicyMap map[string]UserNacPolicyInput

func (UserNacPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserNacPolicy)(nil)).Elem()
}

func (i UserNacPolicyMap) ToUserNacPolicyMapOutput() UserNacPolicyMapOutput {
	return i.ToUserNacPolicyMapOutputWithContext(context.Background())
}

func (i UserNacPolicyMap) ToUserNacPolicyMapOutputWithContext(ctx context.Context) UserNacPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNacPolicyMapOutput)
}

func (i UserNacPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*UserNacPolicy] {
	return pulumix.Output[map[string]*UserNacPolicy]{
		OutputState: i.ToUserNacPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type UserNacPolicyOutput struct{ *pulumi.OutputState }

func (UserNacPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserNacPolicy)(nil)).Elem()
}

func (o UserNacPolicyOutput) ToUserNacPolicyOutput() UserNacPolicyOutput {
	return o
}

func (o UserNacPolicyOutput) ToUserNacPolicyOutputWithContext(ctx context.Context) UserNacPolicyOutput {
	return o
}

func (o UserNacPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*UserNacPolicy] {
	return pulumix.Output[*UserNacPolicy]{
		OutputState: o.OutputState,
	}
}

func (o UserNacPolicyOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o UserNacPolicyOutput) EmsTag() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.EmsTag }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Family }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) FirewallAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.FirewallAddress }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o UserNacPolicyOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) HwVendor() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.HwVendor }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) HwVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.HwVersion }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Mac }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Severities() UserNacPolicySeverityArrayOutput {
	return o.ApplyT(func(v *UserNacPolicy) UserNacPolicySeverityArrayOutput { return v.Severities }).(UserNacPolicySeverityArrayOutput)
}

func (o UserNacPolicyOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Src }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SsidPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SsidPolicy }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SwVersion }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwitchAutoAuth() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SwitchAutoAuth }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwitchFortilink() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SwitchFortilink }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwitchGroups() UserNacPolicySwitchGroupArrayOutput {
	return o.ApplyT(func(v *UserNacPolicy) UserNacPolicySwitchGroupArrayOutput { return v.SwitchGroups }).(UserNacPolicySwitchGroupArrayOutput)
}

func (o UserNacPolicyOutput) SwitchMacPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SwitchMacPolicy }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwitchPortPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.SwitchPortPolicy }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) SwitchScopes() UserNacPolicySwitchScopeArrayOutput {
	return o.ApplyT(func(v *UserNacPolicy) UserNacPolicySwitchScopeArrayOutput { return v.SwitchScopes }).(UserNacPolicySwitchScopeArrayOutput)
}

func (o UserNacPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) UserGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringOutput { return v.UserGroup }).(pulumi.StringOutput)
}

func (o UserNacPolicyOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserNacPolicy) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserNacPolicyArrayOutput struct{ *pulumi.OutputState }

func (UserNacPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserNacPolicy)(nil)).Elem()
}

func (o UserNacPolicyArrayOutput) ToUserNacPolicyArrayOutput() UserNacPolicyArrayOutput {
	return o
}

func (o UserNacPolicyArrayOutput) ToUserNacPolicyArrayOutputWithContext(ctx context.Context) UserNacPolicyArrayOutput {
	return o
}

func (o UserNacPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*UserNacPolicy] {
	return pulumix.Output[[]*UserNacPolicy]{
		OutputState: o.OutputState,
	}
}

func (o UserNacPolicyArrayOutput) Index(i pulumi.IntInput) UserNacPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserNacPolicy {
		return vs[0].([]*UserNacPolicy)[vs[1].(int)]
	}).(UserNacPolicyOutput)
}

type UserNacPolicyMapOutput struct{ *pulumi.OutputState }

func (UserNacPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserNacPolicy)(nil)).Elem()
}

func (o UserNacPolicyMapOutput) ToUserNacPolicyMapOutput() UserNacPolicyMapOutput {
	return o
}

func (o UserNacPolicyMapOutput) ToUserNacPolicyMapOutputWithContext(ctx context.Context) UserNacPolicyMapOutput {
	return o
}

func (o UserNacPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*UserNacPolicy] {
	return pulumix.Output[map[string]*UserNacPolicy]{
		OutputState: o.OutputState,
	}
}

func (o UserNacPolicyMapOutput) MapIndex(k pulumi.StringInput) UserNacPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserNacPolicy {
		return vs[0].(map[string]*UserNacPolicy)[vs[1].(string)]
	}).(UserNacPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacPolicyInput)(nil)).Elem(), &UserNacPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacPolicyArrayInput)(nil)).Elem(), UserNacPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserNacPolicyMapInput)(nil)).Elem(), UserNacPolicyMap{})
	pulumi.RegisterOutputType(UserNacPolicyOutput{})
	pulumi.RegisterOutputType(UserNacPolicyArrayOutput{})
	pulumi.RegisterOutputType(UserNacPolicyMapOutput{})
}
