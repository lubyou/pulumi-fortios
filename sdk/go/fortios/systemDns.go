// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemDns struct {
	pulumi.CustomResourceState

	AltPrimary             pulumi.StringOutput                `pulumi:"altPrimary"`
	AltSecondary           pulumi.StringOutput                `pulumi:"altSecondary"`
	CacheNotfoundResponses pulumi.StringOutput                `pulumi:"cacheNotfoundResponses"`
	DnsCacheLimit          pulumi.IntOutput                   `pulumi:"dnsCacheLimit"`
	DnsCacheTtl            pulumi.IntOutput                   `pulumi:"dnsCacheTtl"`
	DnsOverTls             pulumi.StringOutput                `pulumi:"dnsOverTls"`
	Domains                SystemDnsDomainArrayOutput         `pulumi:"domains"`
	DynamicSortSubtable    pulumi.StringPtrOutput             `pulumi:"dynamicSortSubtable"`
	FqdnCacheTtl           pulumi.IntOutput                   `pulumi:"fqdnCacheTtl"`
	FqdnMaxRefresh         pulumi.IntOutput                   `pulumi:"fqdnMaxRefresh"`
	FqdnMinRefresh         pulumi.IntOutput                   `pulumi:"fqdnMinRefresh"`
	GetAllTables           pulumi.StringPtrOutput             `pulumi:"getAllTables"`
	Interface              pulumi.StringOutput                `pulumi:"interface"`
	InterfaceSelectMethod  pulumi.StringOutput                `pulumi:"interfaceSelectMethod"`
	Ip6Primary             pulumi.StringOutput                `pulumi:"ip6Primary"`
	Ip6Secondary           pulumi.StringOutput                `pulumi:"ip6Secondary"`
	Log                    pulumi.StringOutput                `pulumi:"log"`
	Primary                pulumi.StringOutput                `pulumi:"primary"`
	Protocol               pulumi.StringOutput                `pulumi:"protocol"`
	Retry                  pulumi.IntOutput                   `pulumi:"retry"`
	Secondary              pulumi.StringOutput                `pulumi:"secondary"`
	ServerHostnames        SystemDnsServerHostnameArrayOutput `pulumi:"serverHostnames"`
	ServerSelectMethod     pulumi.StringOutput                `pulumi:"serverSelectMethod"`
	SourceIp               pulumi.StringOutput                `pulumi:"sourceIp"`
	SslCertificate         pulumi.StringOutput                `pulumi:"sslCertificate"`
	Timeout                pulumi.IntOutput                   `pulumi:"timeout"`
	Vdomparam              pulumi.StringPtrOutput             `pulumi:"vdomparam"`
}

// NewSystemDns registers a new resource with the given unique name, arguments, and options.
func NewSystemDns(ctx *pulumi.Context,
	name string, args *SystemDnsArgs, opts ...pulumi.ResourceOption) (*SystemDns, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Primary == nil {
		return nil, errors.New("invalid value for required argument 'Primary'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemDns
	err := ctx.RegisterResource("fortios:index/systemDns:SystemDns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemDns gets an existing SystemDns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemDnsState, opts ...pulumi.ResourceOption) (*SystemDns, error) {
	var resource SystemDns
	err := ctx.ReadResource("fortios:index/systemDns:SystemDns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemDns resources.
type systemDnsState struct {
	AltPrimary             *string                   `pulumi:"altPrimary"`
	AltSecondary           *string                   `pulumi:"altSecondary"`
	CacheNotfoundResponses *string                   `pulumi:"cacheNotfoundResponses"`
	DnsCacheLimit          *int                      `pulumi:"dnsCacheLimit"`
	DnsCacheTtl            *int                      `pulumi:"dnsCacheTtl"`
	DnsOverTls             *string                   `pulumi:"dnsOverTls"`
	Domains                []SystemDnsDomain         `pulumi:"domains"`
	DynamicSortSubtable    *string                   `pulumi:"dynamicSortSubtable"`
	FqdnCacheTtl           *int                      `pulumi:"fqdnCacheTtl"`
	FqdnMaxRefresh         *int                      `pulumi:"fqdnMaxRefresh"`
	FqdnMinRefresh         *int                      `pulumi:"fqdnMinRefresh"`
	GetAllTables           *string                   `pulumi:"getAllTables"`
	Interface              *string                   `pulumi:"interface"`
	InterfaceSelectMethod  *string                   `pulumi:"interfaceSelectMethod"`
	Ip6Primary             *string                   `pulumi:"ip6Primary"`
	Ip6Secondary           *string                   `pulumi:"ip6Secondary"`
	Log                    *string                   `pulumi:"log"`
	Primary                *string                   `pulumi:"primary"`
	Protocol               *string                   `pulumi:"protocol"`
	Retry                  *int                      `pulumi:"retry"`
	Secondary              *string                   `pulumi:"secondary"`
	ServerHostnames        []SystemDnsServerHostname `pulumi:"serverHostnames"`
	ServerSelectMethod     *string                   `pulumi:"serverSelectMethod"`
	SourceIp               *string                   `pulumi:"sourceIp"`
	SslCertificate         *string                   `pulumi:"sslCertificate"`
	Timeout                *int                      `pulumi:"timeout"`
	Vdomparam              *string                   `pulumi:"vdomparam"`
}

type SystemDnsState struct {
	AltPrimary             pulumi.StringPtrInput
	AltSecondary           pulumi.StringPtrInput
	CacheNotfoundResponses pulumi.StringPtrInput
	DnsCacheLimit          pulumi.IntPtrInput
	DnsCacheTtl            pulumi.IntPtrInput
	DnsOverTls             pulumi.StringPtrInput
	Domains                SystemDnsDomainArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	FqdnCacheTtl           pulumi.IntPtrInput
	FqdnMaxRefresh         pulumi.IntPtrInput
	FqdnMinRefresh         pulumi.IntPtrInput
	GetAllTables           pulumi.StringPtrInput
	Interface              pulumi.StringPtrInput
	InterfaceSelectMethod  pulumi.StringPtrInput
	Ip6Primary             pulumi.StringPtrInput
	Ip6Secondary           pulumi.StringPtrInput
	Log                    pulumi.StringPtrInput
	Primary                pulumi.StringPtrInput
	Protocol               pulumi.StringPtrInput
	Retry                  pulumi.IntPtrInput
	Secondary              pulumi.StringPtrInput
	ServerHostnames        SystemDnsServerHostnameArrayInput
	ServerSelectMethod     pulumi.StringPtrInput
	SourceIp               pulumi.StringPtrInput
	SslCertificate         pulumi.StringPtrInput
	Timeout                pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemDnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemDnsState)(nil)).Elem()
}

type systemDnsArgs struct {
	AltPrimary             *string                   `pulumi:"altPrimary"`
	AltSecondary           *string                   `pulumi:"altSecondary"`
	CacheNotfoundResponses *string                   `pulumi:"cacheNotfoundResponses"`
	DnsCacheLimit          *int                      `pulumi:"dnsCacheLimit"`
	DnsCacheTtl            *int                      `pulumi:"dnsCacheTtl"`
	DnsOverTls             *string                   `pulumi:"dnsOverTls"`
	Domains                []SystemDnsDomain         `pulumi:"domains"`
	DynamicSortSubtable    *string                   `pulumi:"dynamicSortSubtable"`
	FqdnCacheTtl           *int                      `pulumi:"fqdnCacheTtl"`
	FqdnMaxRefresh         *int                      `pulumi:"fqdnMaxRefresh"`
	FqdnMinRefresh         *int                      `pulumi:"fqdnMinRefresh"`
	GetAllTables           *string                   `pulumi:"getAllTables"`
	Interface              *string                   `pulumi:"interface"`
	InterfaceSelectMethod  *string                   `pulumi:"interfaceSelectMethod"`
	Ip6Primary             *string                   `pulumi:"ip6Primary"`
	Ip6Secondary           *string                   `pulumi:"ip6Secondary"`
	Log                    *string                   `pulumi:"log"`
	Primary                string                    `pulumi:"primary"`
	Protocol               *string                   `pulumi:"protocol"`
	Retry                  *int                      `pulumi:"retry"`
	Secondary              *string                   `pulumi:"secondary"`
	ServerHostnames        []SystemDnsServerHostname `pulumi:"serverHostnames"`
	ServerSelectMethod     *string                   `pulumi:"serverSelectMethod"`
	SourceIp               *string                   `pulumi:"sourceIp"`
	SslCertificate         *string                   `pulumi:"sslCertificate"`
	Timeout                *int                      `pulumi:"timeout"`
	Vdomparam              *string                   `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SystemDns resource.
type SystemDnsArgs struct {
	AltPrimary             pulumi.StringPtrInput
	AltSecondary           pulumi.StringPtrInput
	CacheNotfoundResponses pulumi.StringPtrInput
	DnsCacheLimit          pulumi.IntPtrInput
	DnsCacheTtl            pulumi.IntPtrInput
	DnsOverTls             pulumi.StringPtrInput
	Domains                SystemDnsDomainArrayInput
	DynamicSortSubtable    pulumi.StringPtrInput
	FqdnCacheTtl           pulumi.IntPtrInput
	FqdnMaxRefresh         pulumi.IntPtrInput
	FqdnMinRefresh         pulumi.IntPtrInput
	GetAllTables           pulumi.StringPtrInput
	Interface              pulumi.StringPtrInput
	InterfaceSelectMethod  pulumi.StringPtrInput
	Ip6Primary             pulumi.StringPtrInput
	Ip6Secondary           pulumi.StringPtrInput
	Log                    pulumi.StringPtrInput
	Primary                pulumi.StringInput
	Protocol               pulumi.StringPtrInput
	Retry                  pulumi.IntPtrInput
	Secondary              pulumi.StringPtrInput
	ServerHostnames        SystemDnsServerHostnameArrayInput
	ServerSelectMethod     pulumi.StringPtrInput
	SourceIp               pulumi.StringPtrInput
	SslCertificate         pulumi.StringPtrInput
	Timeout                pulumi.IntPtrInput
	Vdomparam              pulumi.StringPtrInput
}

func (SystemDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemDnsArgs)(nil)).Elem()
}

type SystemDnsInput interface {
	pulumi.Input

	ToSystemDnsOutput() SystemDnsOutput
	ToSystemDnsOutputWithContext(ctx context.Context) SystemDnsOutput
}

func (*SystemDns) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDns)(nil)).Elem()
}

func (i *SystemDns) ToSystemDnsOutput() SystemDnsOutput {
	return i.ToSystemDnsOutputWithContext(context.Background())
}

func (i *SystemDns) ToSystemDnsOutputWithContext(ctx context.Context) SystemDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsOutput)
}

// SystemDnsArrayInput is an input type that accepts SystemDnsArray and SystemDnsArrayOutput values.
// You can construct a concrete instance of `SystemDnsArrayInput` via:
//
//	SystemDnsArray{ SystemDnsArgs{...} }
type SystemDnsArrayInput interface {
	pulumi.Input

	ToSystemDnsArrayOutput() SystemDnsArrayOutput
	ToSystemDnsArrayOutputWithContext(context.Context) SystemDnsArrayOutput
}

type SystemDnsArray []SystemDnsInput

func (SystemDnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemDns)(nil)).Elem()
}

func (i SystemDnsArray) ToSystemDnsArrayOutput() SystemDnsArrayOutput {
	return i.ToSystemDnsArrayOutputWithContext(context.Background())
}

func (i SystemDnsArray) ToSystemDnsArrayOutputWithContext(ctx context.Context) SystemDnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsArrayOutput)
}

// SystemDnsMapInput is an input type that accepts SystemDnsMap and SystemDnsMapOutput values.
// You can construct a concrete instance of `SystemDnsMapInput` via:
//
//	SystemDnsMap{ "key": SystemDnsArgs{...} }
type SystemDnsMapInput interface {
	pulumi.Input

	ToSystemDnsMapOutput() SystemDnsMapOutput
	ToSystemDnsMapOutputWithContext(context.Context) SystemDnsMapOutput
}

type SystemDnsMap map[string]SystemDnsInput

func (SystemDnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemDns)(nil)).Elem()
}

func (i SystemDnsMap) ToSystemDnsMapOutput() SystemDnsMapOutput {
	return i.ToSystemDnsMapOutputWithContext(context.Background())
}

func (i SystemDnsMap) ToSystemDnsMapOutputWithContext(ctx context.Context) SystemDnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDnsMapOutput)
}

type SystemDnsOutput struct{ *pulumi.OutputState }

func (SystemDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDns)(nil)).Elem()
}

func (o SystemDnsOutput) ToSystemDnsOutput() SystemDnsOutput {
	return o
}

func (o SystemDnsOutput) ToSystemDnsOutputWithContext(ctx context.Context) SystemDnsOutput {
	return o
}

func (o SystemDnsOutput) AltPrimary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.AltPrimary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) AltSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.AltSecondary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) CacheNotfoundResponses() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.CacheNotfoundResponses }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) DnsCacheLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.DnsCacheLimit }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) DnsCacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.DnsCacheTtl }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) DnsOverTls() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.DnsOverTls }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Domains() SystemDnsDomainArrayOutput {
	return o.ApplyT(func(v *SystemDns) SystemDnsDomainArrayOutput { return v.Domains }).(SystemDnsDomainArrayOutput)
}

func (o SystemDnsOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemDnsOutput) FqdnCacheTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.FqdnCacheTtl }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) FqdnMaxRefresh() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.FqdnMaxRefresh }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) FqdnMinRefresh() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.FqdnMinRefresh }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SystemDnsOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) InterfaceSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.InterfaceSelectMethod }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Ip6Primary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Ip6Primary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Ip6Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Ip6Secondary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Log }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Primary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Retry() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.Retry }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.Secondary }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) ServerHostnames() SystemDnsServerHostnameArrayOutput {
	return o.ApplyT(func(v *SystemDns) SystemDnsServerHostnameArrayOutput { return v.ServerHostnames }).(SystemDnsServerHostnameArrayOutput)
}

func (o SystemDnsOutput) ServerSelectMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.ServerSelectMethod }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringOutput { return v.SslCertificate }).(pulumi.StringOutput)
}

func (o SystemDnsOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

func (o SystemDnsOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDns) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SystemDnsArrayOutput struct{ *pulumi.OutputState }

func (SystemDnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemDns)(nil)).Elem()
}

func (o SystemDnsArrayOutput) ToSystemDnsArrayOutput() SystemDnsArrayOutput {
	return o
}

func (o SystemDnsArrayOutput) ToSystemDnsArrayOutputWithContext(ctx context.Context) SystemDnsArrayOutput {
	return o
}

func (o SystemDnsArrayOutput) Index(i pulumi.IntInput) SystemDnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemDns {
		return vs[0].([]*SystemDns)[vs[1].(int)]
	}).(SystemDnsOutput)
}

type SystemDnsMapOutput struct{ *pulumi.OutputState }

func (SystemDnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemDns)(nil)).Elem()
}

func (o SystemDnsMapOutput) ToSystemDnsMapOutput() SystemDnsMapOutput {
	return o
}

func (o SystemDnsMapOutput) ToSystemDnsMapOutputWithContext(ctx context.Context) SystemDnsMapOutput {
	return o
}

func (o SystemDnsMapOutput) MapIndex(k pulumi.StringInput) SystemDnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemDns {
		return vs[0].(map[string]*SystemDns)[vs[1].(string)]
	}).(SystemDnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsInput)(nil)).Elem(), &SystemDns{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsArrayInput)(nil)).Elem(), SystemDnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemDnsMapInput)(nil)).Elem(), SystemDnsMap{})
	pulumi.RegisterOutputType(SystemDnsOutput{})
	pulumi.RegisterOutputType(SystemDnsArrayOutput{})
	pulumi.RegisterOutputType(SystemDnsMapOutput{})
}
