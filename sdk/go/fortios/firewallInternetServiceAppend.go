// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallInternetServiceAppend struct {
	pulumi.CustomResourceState

	AddrMode   pulumi.StringOutput    `pulumi:"addrMode"`
	AppendPort pulumi.IntOutput       `pulumi:"appendPort"`
	MatchPort  pulumi.IntOutput       `pulumi:"matchPort"`
	Vdomparam  pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallInternetServiceAppend registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetServiceAppend(ctx *pulumi.Context,
	name string, args *FirewallInternetServiceAppendArgs, opts ...pulumi.ResourceOption) (*FirewallInternetServiceAppend, error) {
	if args == nil {
		args = &FirewallInternetServiceAppendArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallInternetServiceAppend
	err := ctx.RegisterResource("fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetServiceAppend gets an existing FirewallInternetServiceAppend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetServiceAppend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetServiceAppendState, opts ...pulumi.ResourceOption) (*FirewallInternetServiceAppend, error) {
	var resource FirewallInternetServiceAppend
	err := ctx.ReadResource("fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetServiceAppend resources.
type firewallInternetServiceAppendState struct {
	AddrMode   *string `pulumi:"addrMode"`
	AppendPort *int    `pulumi:"appendPort"`
	MatchPort  *int    `pulumi:"matchPort"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

type FirewallInternetServiceAppendState struct {
	AddrMode   pulumi.StringPtrInput
	AppendPort pulumi.IntPtrInput
	MatchPort  pulumi.IntPtrInput
	Vdomparam  pulumi.StringPtrInput
}

func (FirewallInternetServiceAppendState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceAppendState)(nil)).Elem()
}

type firewallInternetServiceAppendArgs struct {
	AddrMode   *string `pulumi:"addrMode"`
	AppendPort *int    `pulumi:"appendPort"`
	MatchPort  *int    `pulumi:"matchPort"`
	Vdomparam  *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetServiceAppend resource.
type FirewallInternetServiceAppendArgs struct {
	AddrMode   pulumi.StringPtrInput
	AppendPort pulumi.IntPtrInput
	MatchPort  pulumi.IntPtrInput
	Vdomparam  pulumi.StringPtrInput
}

func (FirewallInternetServiceAppendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceAppendArgs)(nil)).Elem()
}

type FirewallInternetServiceAppendInput interface {
	pulumi.Input

	ToFirewallInternetServiceAppendOutput() FirewallInternetServiceAppendOutput
	ToFirewallInternetServiceAppendOutputWithContext(ctx context.Context) FirewallInternetServiceAppendOutput
}

func (*FirewallInternetServiceAppend) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceAppend)(nil)).Elem()
}

func (i *FirewallInternetServiceAppend) ToFirewallInternetServiceAppendOutput() FirewallInternetServiceAppendOutput {
	return i.ToFirewallInternetServiceAppendOutputWithContext(context.Background())
}

func (i *FirewallInternetServiceAppend) ToFirewallInternetServiceAppendOutputWithContext(ctx context.Context) FirewallInternetServiceAppendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceAppendOutput)
}

func (i *FirewallInternetServiceAppend) ToOutput(ctx context.Context) pulumix.Output[*FirewallInternetServiceAppend] {
	return pulumix.Output[*FirewallInternetServiceAppend]{
		OutputState: i.ToFirewallInternetServiceAppendOutputWithContext(ctx).OutputState,
	}
}

// FirewallInternetServiceAppendArrayInput is an input type that accepts FirewallInternetServiceAppendArray and FirewallInternetServiceAppendArrayOutput values.
// You can construct a concrete instance of `FirewallInternetServiceAppendArrayInput` via:
//
//	FirewallInternetServiceAppendArray{ FirewallInternetServiceAppendArgs{...} }
type FirewallInternetServiceAppendArrayInput interface {
	pulumi.Input

	ToFirewallInternetServiceAppendArrayOutput() FirewallInternetServiceAppendArrayOutput
	ToFirewallInternetServiceAppendArrayOutputWithContext(context.Context) FirewallInternetServiceAppendArrayOutput
}

type FirewallInternetServiceAppendArray []FirewallInternetServiceAppendInput

func (FirewallInternetServiceAppendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceAppend)(nil)).Elem()
}

func (i FirewallInternetServiceAppendArray) ToFirewallInternetServiceAppendArrayOutput() FirewallInternetServiceAppendArrayOutput {
	return i.ToFirewallInternetServiceAppendArrayOutputWithContext(context.Background())
}

func (i FirewallInternetServiceAppendArray) ToFirewallInternetServiceAppendArrayOutputWithContext(ctx context.Context) FirewallInternetServiceAppendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceAppendArrayOutput)
}

func (i FirewallInternetServiceAppendArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallInternetServiceAppend] {
	return pulumix.Output[[]*FirewallInternetServiceAppend]{
		OutputState: i.ToFirewallInternetServiceAppendArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallInternetServiceAppendMapInput is an input type that accepts FirewallInternetServiceAppendMap and FirewallInternetServiceAppendMapOutput values.
// You can construct a concrete instance of `FirewallInternetServiceAppendMapInput` via:
//
//	FirewallInternetServiceAppendMap{ "key": FirewallInternetServiceAppendArgs{...} }
type FirewallInternetServiceAppendMapInput interface {
	pulumi.Input

	ToFirewallInternetServiceAppendMapOutput() FirewallInternetServiceAppendMapOutput
	ToFirewallInternetServiceAppendMapOutputWithContext(context.Context) FirewallInternetServiceAppendMapOutput
}

type FirewallInternetServiceAppendMap map[string]FirewallInternetServiceAppendInput

func (FirewallInternetServiceAppendMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceAppend)(nil)).Elem()
}

func (i FirewallInternetServiceAppendMap) ToFirewallInternetServiceAppendMapOutput() FirewallInternetServiceAppendMapOutput {
	return i.ToFirewallInternetServiceAppendMapOutputWithContext(context.Background())
}

func (i FirewallInternetServiceAppendMap) ToFirewallInternetServiceAppendMapOutputWithContext(ctx context.Context) FirewallInternetServiceAppendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceAppendMapOutput)
}

func (i FirewallInternetServiceAppendMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallInternetServiceAppend] {
	return pulumix.Output[map[string]*FirewallInternetServiceAppend]{
		OutputState: i.ToFirewallInternetServiceAppendMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallInternetServiceAppendOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceAppendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceAppend)(nil)).Elem()
}

func (o FirewallInternetServiceAppendOutput) ToFirewallInternetServiceAppendOutput() FirewallInternetServiceAppendOutput {
	return o
}

func (o FirewallInternetServiceAppendOutput) ToFirewallInternetServiceAppendOutputWithContext(ctx context.Context) FirewallInternetServiceAppendOutput {
	return o
}

func (o FirewallInternetServiceAppendOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallInternetServiceAppend] {
	return pulumix.Output[*FirewallInternetServiceAppend]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceAppendOutput) AddrMode() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetServiceAppend) pulumi.StringOutput { return v.AddrMode }).(pulumi.StringOutput)
}

func (o FirewallInternetServiceAppendOutput) AppendPort() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceAppend) pulumi.IntOutput { return v.AppendPort }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceAppendOutput) MatchPort() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceAppend) pulumi.IntOutput { return v.MatchPort }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceAppendOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetServiceAppend) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallInternetServiceAppendArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceAppendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceAppend)(nil)).Elem()
}

func (o FirewallInternetServiceAppendArrayOutput) ToFirewallInternetServiceAppendArrayOutput() FirewallInternetServiceAppendArrayOutput {
	return o
}

func (o FirewallInternetServiceAppendArrayOutput) ToFirewallInternetServiceAppendArrayOutputWithContext(ctx context.Context) FirewallInternetServiceAppendArrayOutput {
	return o
}

func (o FirewallInternetServiceAppendArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallInternetServiceAppend] {
	return pulumix.Output[[]*FirewallInternetServiceAppend]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceAppendArrayOutput) Index(i pulumi.IntInput) FirewallInternetServiceAppendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetServiceAppend {
		return vs[0].([]*FirewallInternetServiceAppend)[vs[1].(int)]
	}).(FirewallInternetServiceAppendOutput)
}

type FirewallInternetServiceAppendMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceAppendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceAppend)(nil)).Elem()
}

func (o FirewallInternetServiceAppendMapOutput) ToFirewallInternetServiceAppendMapOutput() FirewallInternetServiceAppendMapOutput {
	return o
}

func (o FirewallInternetServiceAppendMapOutput) ToFirewallInternetServiceAppendMapOutputWithContext(ctx context.Context) FirewallInternetServiceAppendMapOutput {
	return o
}

func (o FirewallInternetServiceAppendMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallInternetServiceAppend] {
	return pulumix.Output[map[string]*FirewallInternetServiceAppend]{
		OutputState: o.OutputState,
	}
}

func (o FirewallInternetServiceAppendMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetServiceAppendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetServiceAppend {
		return vs[0].(map[string]*FirewallInternetServiceAppend)[vs[1].(string)]
	}).(FirewallInternetServiceAppendOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceAppendInput)(nil)).Elem(), &FirewallInternetServiceAppend{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceAppendArrayInput)(nil)).Elem(), FirewallInternetServiceAppendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceAppendMapInput)(nil)).Elem(), FirewallInternetServiceAppendMap{})
	pulumi.RegisterOutputType(FirewallInternetServiceAppendOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceAppendArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceAppendMapOutput{})
}
