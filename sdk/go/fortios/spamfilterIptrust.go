// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configure AntiSpam IP trust. Applies to FortiOS Version `<= 6.2.0`.
//
// ## Import
//
// Spamfilter Iptrust can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
//
// ```sh
//  $ pulumi import fortios:index/spamfilterIptrust:SpamfilterIptrust labelname {{fosid}}
// ```
//
//  $ unset "FORTIOS_IMPORT_TABLE"
type SpamfilterIptrust struct {
	pulumi.CustomResourceState

	// Optional comments.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrOutput `pulumi:"dynamicSortSubtable"`
	// Spam filter trusted IP addresses. The structure of `entries` block is documented below.
	Entries SpamfilterIptrustEntryArrayOutput `pulumi:"entries"`
	// ID.
	Fosid pulumi.IntOutput `pulumi:"fosid"`
	// Name of table.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewSpamfilterIptrust registers a new resource with the given unique name, arguments, and options.
func NewSpamfilterIptrust(ctx *pulumi.Context,
	name string, args *SpamfilterIptrustArgs, opts ...pulumi.ResourceOption) (*SpamfilterIptrust, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fosid == nil {
		return nil, errors.New("invalid value for required argument 'Fosid'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SpamfilterIptrust
	err := ctx.RegisterResource("fortios:index/spamfilterIptrust:SpamfilterIptrust", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpamfilterIptrust gets an existing SpamfilterIptrust resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpamfilterIptrust(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpamfilterIptrustState, opts ...pulumi.ResourceOption) (*SpamfilterIptrust, error) {
	var resource SpamfilterIptrust
	err := ctx.ReadResource("fortios:index/spamfilterIptrust:SpamfilterIptrust", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpamfilterIptrust resources.
type spamfilterIptrustState struct {
	// Optional comments.
	Comment *string `pulumi:"comment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Spam filter trusted IP addresses. The structure of `entries` block is documented below.
	Entries []SpamfilterIptrustEntry `pulumi:"entries"`
	// ID.
	Fosid *int `pulumi:"fosid"`
	// Name of table.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

type SpamfilterIptrustState struct {
	// Optional comments.
	Comment pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Spam filter trusted IP addresses. The structure of `entries` block is documented below.
	Entries SpamfilterIptrustEntryArrayInput
	// ID.
	Fosid pulumi.IntPtrInput
	// Name of table.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SpamfilterIptrustState) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterIptrustState)(nil)).Elem()
}

type spamfilterIptrustArgs struct {
	// Optional comments.
	Comment *string `pulumi:"comment"`
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable *string `pulumi:"dynamicSortSubtable"`
	// Spam filter trusted IP addresses. The structure of `entries` block is documented below.
	Entries []SpamfilterIptrustEntry `pulumi:"entries"`
	// ID.
	Fosid int `pulumi:"fosid"`
	// Name of table.
	Name *string `pulumi:"name"`
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SpamfilterIptrust resource.
type SpamfilterIptrustArgs struct {
	// Optional comments.
	Comment pulumi.StringPtrInput
	// true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
	DynamicSortSubtable pulumi.StringPtrInput
	// Spam filter trusted IP addresses. The structure of `entries` block is documented below.
	Entries SpamfilterIptrustEntryArrayInput
	// ID.
	Fosid pulumi.IntInput
	// Name of table.
	Name pulumi.StringPtrInput
	// Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput
}

func (SpamfilterIptrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spamfilterIptrustArgs)(nil)).Elem()
}

type SpamfilterIptrustInput interface {
	pulumi.Input

	ToSpamfilterIptrustOutput() SpamfilterIptrustOutput
	ToSpamfilterIptrustOutputWithContext(ctx context.Context) SpamfilterIptrustOutput
}

func (*SpamfilterIptrust) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterIptrust)(nil)).Elem()
}

func (i *SpamfilterIptrust) ToSpamfilterIptrustOutput() SpamfilterIptrustOutput {
	return i.ToSpamfilterIptrustOutputWithContext(context.Background())
}

func (i *SpamfilterIptrust) ToSpamfilterIptrustOutputWithContext(ctx context.Context) SpamfilterIptrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustOutput)
}

// SpamfilterIptrustArrayInput is an input type that accepts SpamfilterIptrustArray and SpamfilterIptrustArrayOutput values.
// You can construct a concrete instance of `SpamfilterIptrustArrayInput` via:
//
//          SpamfilterIptrustArray{ SpamfilterIptrustArgs{...} }
type SpamfilterIptrustArrayInput interface {
	pulumi.Input

	ToSpamfilterIptrustArrayOutput() SpamfilterIptrustArrayOutput
	ToSpamfilterIptrustArrayOutputWithContext(context.Context) SpamfilterIptrustArrayOutput
}

type SpamfilterIptrustArray []SpamfilterIptrustInput

func (SpamfilterIptrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterIptrust)(nil)).Elem()
}

func (i SpamfilterIptrustArray) ToSpamfilterIptrustArrayOutput() SpamfilterIptrustArrayOutput {
	return i.ToSpamfilterIptrustArrayOutputWithContext(context.Background())
}

func (i SpamfilterIptrustArray) ToSpamfilterIptrustArrayOutputWithContext(ctx context.Context) SpamfilterIptrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustArrayOutput)
}

// SpamfilterIptrustMapInput is an input type that accepts SpamfilterIptrustMap and SpamfilterIptrustMapOutput values.
// You can construct a concrete instance of `SpamfilterIptrustMapInput` via:
//
//          SpamfilterIptrustMap{ "key": SpamfilterIptrustArgs{...} }
type SpamfilterIptrustMapInput interface {
	pulumi.Input

	ToSpamfilterIptrustMapOutput() SpamfilterIptrustMapOutput
	ToSpamfilterIptrustMapOutputWithContext(context.Context) SpamfilterIptrustMapOutput
}

type SpamfilterIptrustMap map[string]SpamfilterIptrustInput

func (SpamfilterIptrustMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterIptrust)(nil)).Elem()
}

func (i SpamfilterIptrustMap) ToSpamfilterIptrustMapOutput() SpamfilterIptrustMapOutput {
	return i.ToSpamfilterIptrustMapOutputWithContext(context.Background())
}

func (i SpamfilterIptrustMap) ToSpamfilterIptrustMapOutputWithContext(ctx context.Context) SpamfilterIptrustMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpamfilterIptrustMapOutput)
}

type SpamfilterIptrustOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpamfilterIptrust)(nil)).Elem()
}

func (o SpamfilterIptrustOutput) ToSpamfilterIptrustOutput() SpamfilterIptrustOutput {
	return o
}

func (o SpamfilterIptrustOutput) ToSpamfilterIptrustOutputWithContext(ctx context.Context) SpamfilterIptrustOutput {
	return o
}

type SpamfilterIptrustArrayOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpamfilterIptrust)(nil)).Elem()
}

func (o SpamfilterIptrustArrayOutput) ToSpamfilterIptrustArrayOutput() SpamfilterIptrustArrayOutput {
	return o
}

func (o SpamfilterIptrustArrayOutput) ToSpamfilterIptrustArrayOutputWithContext(ctx context.Context) SpamfilterIptrustArrayOutput {
	return o
}

func (o SpamfilterIptrustArrayOutput) Index(i pulumi.IntInput) SpamfilterIptrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpamfilterIptrust {
		return vs[0].([]*SpamfilterIptrust)[vs[1].(int)]
	}).(SpamfilterIptrustOutput)
}

type SpamfilterIptrustMapOutput struct{ *pulumi.OutputState }

func (SpamfilterIptrustMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpamfilterIptrust)(nil)).Elem()
}

func (o SpamfilterIptrustMapOutput) ToSpamfilterIptrustMapOutput() SpamfilterIptrustMapOutput {
	return o
}

func (o SpamfilterIptrustMapOutput) ToSpamfilterIptrustMapOutputWithContext(ctx context.Context) SpamfilterIptrustMapOutput {
	return o
}

func (o SpamfilterIptrustMapOutput) MapIndex(k pulumi.StringInput) SpamfilterIptrustOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpamfilterIptrust {
		return vs[0].(map[string]*SpamfilterIptrust)[vs[1].(string)]
	}).(SpamfilterIptrustOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustInput)(nil)).Elem(), &SpamfilterIptrust{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustArrayInput)(nil)).Elem(), SpamfilterIptrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpamfilterIptrustMapInput)(nil)).Elem(), SpamfilterIptrustMap{})
	pulumi.RegisterOutputType(SpamfilterIptrustOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustArrayOutput{})
	pulumi.RegisterOutputType(SpamfilterIptrustMapOutput{})
}
