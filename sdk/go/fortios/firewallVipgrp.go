// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallVipgrp struct {
	pulumi.CustomResourceState

	Color               pulumi.IntOutput                `pulumi:"color"`
	Comments            pulumi.StringPtrOutput          `pulumi:"comments"`
	DynamicSortSubtable pulumi.StringPtrOutput          `pulumi:"dynamicSortSubtable"`
	GetAllTables        pulumi.StringPtrOutput          `pulumi:"getAllTables"`
	Interface           pulumi.StringOutput             `pulumi:"interface"`
	Members             FirewallVipgrpMemberArrayOutput `pulumi:"members"`
	Name                pulumi.StringOutput             `pulumi:"name"`
	Uuid                pulumi.StringOutput             `pulumi:"uuid"`
	Vdomparam           pulumi.StringPtrOutput          `pulumi:"vdomparam"`
}

// NewFirewallVipgrp registers a new resource with the given unique name, arguments, and options.
func NewFirewallVipgrp(ctx *pulumi.Context,
	name string, args *FirewallVipgrpArgs, opts ...pulumi.ResourceOption) (*FirewallVipgrp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallVipgrp
	err := ctx.RegisterResource("fortios:index/firewallVipgrp:FirewallVipgrp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallVipgrp gets an existing FirewallVipgrp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallVipgrp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallVipgrpState, opts ...pulumi.ResourceOption) (*FirewallVipgrp, error) {
	var resource FirewallVipgrp
	err := ctx.ReadResource("fortios:index/firewallVipgrp:FirewallVipgrp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallVipgrp resources.
type firewallVipgrpState struct {
	Color               *int                   `pulumi:"color"`
	Comments            *string                `pulumi:"comments"`
	DynamicSortSubtable *string                `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                `pulumi:"getAllTables"`
	Interface           *string                `pulumi:"interface"`
	Members             []FirewallVipgrpMember `pulumi:"members"`
	Name                *string                `pulumi:"name"`
	Uuid                *string                `pulumi:"uuid"`
	Vdomparam           *string                `pulumi:"vdomparam"`
}

type FirewallVipgrpState struct {
	Color               pulumi.IntPtrInput
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Interface           pulumi.StringPtrInput
	Members             FirewallVipgrpMemberArrayInput
	Name                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallVipgrpState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrpState)(nil)).Elem()
}

type firewallVipgrpArgs struct {
	Color               *int                   `pulumi:"color"`
	Comments            *string                `pulumi:"comments"`
	DynamicSortSubtable *string                `pulumi:"dynamicSortSubtable"`
	GetAllTables        *string                `pulumi:"getAllTables"`
	Interface           string                 `pulumi:"interface"`
	Members             []FirewallVipgrpMember `pulumi:"members"`
	Name                *string                `pulumi:"name"`
	Uuid                *string                `pulumi:"uuid"`
	Vdomparam           *string                `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallVipgrp resource.
type FirewallVipgrpArgs struct {
	Color               pulumi.IntPtrInput
	Comments            pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	GetAllTables        pulumi.StringPtrInput
	Interface           pulumi.StringInput
	Members             FirewallVipgrpMemberArrayInput
	Name                pulumi.StringPtrInput
	Uuid                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (FirewallVipgrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVipgrpArgs)(nil)).Elem()
}

type FirewallVipgrpInput interface {
	pulumi.Input

	ToFirewallVipgrpOutput() FirewallVipgrpOutput
	ToFirewallVipgrpOutputWithContext(ctx context.Context) FirewallVipgrpOutput
}

func (*FirewallVipgrp) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp)(nil)).Elem()
}

func (i *FirewallVipgrp) ToFirewallVipgrpOutput() FirewallVipgrpOutput {
	return i.ToFirewallVipgrpOutputWithContext(context.Background())
}

func (i *FirewallVipgrp) ToFirewallVipgrpOutputWithContext(ctx context.Context) FirewallVipgrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrpOutput)
}

// FirewallVipgrpArrayInput is an input type that accepts FirewallVipgrpArray and FirewallVipgrpArrayOutput values.
// You can construct a concrete instance of `FirewallVipgrpArrayInput` via:
//
//	FirewallVipgrpArray{ FirewallVipgrpArgs{...} }
type FirewallVipgrpArrayInput interface {
	pulumi.Input

	ToFirewallVipgrpArrayOutput() FirewallVipgrpArrayOutput
	ToFirewallVipgrpArrayOutputWithContext(context.Context) FirewallVipgrpArrayOutput
}

type FirewallVipgrpArray []FirewallVipgrpInput

func (FirewallVipgrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp)(nil)).Elem()
}

func (i FirewallVipgrpArray) ToFirewallVipgrpArrayOutput() FirewallVipgrpArrayOutput {
	return i.ToFirewallVipgrpArrayOutputWithContext(context.Background())
}

func (i FirewallVipgrpArray) ToFirewallVipgrpArrayOutputWithContext(ctx context.Context) FirewallVipgrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrpArrayOutput)
}

// FirewallVipgrpMapInput is an input type that accepts FirewallVipgrpMap and FirewallVipgrpMapOutput values.
// You can construct a concrete instance of `FirewallVipgrpMapInput` via:
//
//	FirewallVipgrpMap{ "key": FirewallVipgrpArgs{...} }
type FirewallVipgrpMapInput interface {
	pulumi.Input

	ToFirewallVipgrpMapOutput() FirewallVipgrpMapOutput
	ToFirewallVipgrpMapOutputWithContext(context.Context) FirewallVipgrpMapOutput
}

type FirewallVipgrpMap map[string]FirewallVipgrpInput

func (FirewallVipgrpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp)(nil)).Elem()
}

func (i FirewallVipgrpMap) ToFirewallVipgrpMapOutput() FirewallVipgrpMapOutput {
	return i.ToFirewallVipgrpMapOutputWithContext(context.Background())
}

func (i FirewallVipgrpMap) ToFirewallVipgrpMapOutputWithContext(ctx context.Context) FirewallVipgrpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVipgrpMapOutput)
}

type FirewallVipgrpOutput struct{ *pulumi.OutputState }

func (FirewallVipgrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVipgrp)(nil)).Elem()
}

func (o FirewallVipgrpOutput) ToFirewallVipgrpOutput() FirewallVipgrpOutput {
	return o
}

func (o FirewallVipgrpOutput) ToFirewallVipgrpOutputWithContext(ctx context.Context) FirewallVipgrpOutput {
	return o
}

func (o FirewallVipgrpOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.IntOutput { return v.Color }).(pulumi.IntOutput)
}

func (o FirewallVipgrpOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrpOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrpOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o FirewallVipgrpOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o FirewallVipgrpOutput) Members() FirewallVipgrpMemberArrayOutput {
	return o.ApplyT(func(v *FirewallVipgrp) FirewallVipgrpMemberArrayOutput { return v.Members }).(FirewallVipgrpMemberArrayOutput)
}

func (o FirewallVipgrpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallVipgrpOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

func (o FirewallVipgrpOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVipgrp) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallVipgrpArrayOutput struct{ *pulumi.OutputState }

func (FirewallVipgrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVipgrp)(nil)).Elem()
}

func (o FirewallVipgrpArrayOutput) ToFirewallVipgrpArrayOutput() FirewallVipgrpArrayOutput {
	return o
}

func (o FirewallVipgrpArrayOutput) ToFirewallVipgrpArrayOutputWithContext(ctx context.Context) FirewallVipgrpArrayOutput {
	return o
}

func (o FirewallVipgrpArrayOutput) Index(i pulumi.IntInput) FirewallVipgrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallVipgrp {
		return vs[0].([]*FirewallVipgrp)[vs[1].(int)]
	}).(FirewallVipgrpOutput)
}

type FirewallVipgrpMapOutput struct{ *pulumi.OutputState }

func (FirewallVipgrpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVipgrp)(nil)).Elem()
}

func (o FirewallVipgrpMapOutput) ToFirewallVipgrpMapOutput() FirewallVipgrpMapOutput {
	return o
}

func (o FirewallVipgrpMapOutput) ToFirewallVipgrpMapOutputWithContext(ctx context.Context) FirewallVipgrpMapOutput {
	return o
}

func (o FirewallVipgrpMapOutput) MapIndex(k pulumi.StringInput) FirewallVipgrpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallVipgrp {
		return vs[0].(map[string]*FirewallVipgrp)[vs[1].(string)]
	}).(FirewallVipgrpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrpInput)(nil)).Elem(), &FirewallVipgrp{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrpArrayInput)(nil)).Elem(), FirewallVipgrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVipgrpMapInput)(nil)).Elem(), FirewallVipgrpMap{})
	pulumi.RegisterOutputType(FirewallVipgrpOutput{})
	pulumi.RegisterOutputType(FirewallVipgrpArrayOutput{})
	pulumi.RegisterOutputType(FirewallVipgrpMapOutput{})
}
