// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SwitchControllerSnmpCommunity struct {
	pulumi.CustomResourceState

	DynamicSortSubtable pulumi.StringPtrOutput                       `pulumi:"dynamicSortSubtable"`
	Events              pulumi.StringOutput                          `pulumi:"events"`
	Fosid               pulumi.IntOutput                             `pulumi:"fosid"`
	GetAllTables        pulumi.StringPtrOutput                       `pulumi:"getAllTables"`
	Hosts               SwitchControllerSnmpCommunityHostArrayOutput `pulumi:"hosts"`
	Name                pulumi.StringOutput                          `pulumi:"name"`
	QueryV1Port         pulumi.IntOutput                             `pulumi:"queryV1Port"`
	QueryV1Status       pulumi.StringOutput                          `pulumi:"queryV1Status"`
	QueryV2cPort        pulumi.IntOutput                             `pulumi:"queryV2cPort"`
	QueryV2cStatus      pulumi.StringOutput                          `pulumi:"queryV2cStatus"`
	Status              pulumi.StringOutput                          `pulumi:"status"`
	TrapV1Lport         pulumi.IntOutput                             `pulumi:"trapV1Lport"`
	TrapV1Rport         pulumi.IntOutput                             `pulumi:"trapV1Rport"`
	TrapV1Status        pulumi.StringOutput                          `pulumi:"trapV1Status"`
	TrapV2cLport        pulumi.IntOutput                             `pulumi:"trapV2cLport"`
	TrapV2cRport        pulumi.IntOutput                             `pulumi:"trapV2cRport"`
	TrapV2cStatus       pulumi.StringOutput                          `pulumi:"trapV2cStatus"`
	Vdomparam           pulumi.StringPtrOutput                       `pulumi:"vdomparam"`
}

// NewSwitchControllerSnmpCommunity registers a new resource with the given unique name, arguments, and options.
func NewSwitchControllerSnmpCommunity(ctx *pulumi.Context,
	name string, args *SwitchControllerSnmpCommunityArgs, opts ...pulumi.ResourceOption) (*SwitchControllerSnmpCommunity, error) {
	if args == nil {
		args = &SwitchControllerSnmpCommunityArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwitchControllerSnmpCommunity
	err := ctx.RegisterResource("fortios:index/switchControllerSnmpCommunity:SwitchControllerSnmpCommunity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchControllerSnmpCommunity gets an existing SwitchControllerSnmpCommunity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchControllerSnmpCommunity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchControllerSnmpCommunityState, opts ...pulumi.ResourceOption) (*SwitchControllerSnmpCommunity, error) {
	var resource SwitchControllerSnmpCommunity
	err := ctx.ReadResource("fortios:index/switchControllerSnmpCommunity:SwitchControllerSnmpCommunity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchControllerSnmpCommunity resources.
type switchControllerSnmpCommunityState struct {
	DynamicSortSubtable *string                             `pulumi:"dynamicSortSubtable"`
	Events              *string                             `pulumi:"events"`
	Fosid               *int                                `pulumi:"fosid"`
	GetAllTables        *string                             `pulumi:"getAllTables"`
	Hosts               []SwitchControllerSnmpCommunityHost `pulumi:"hosts"`
	Name                *string                             `pulumi:"name"`
	QueryV1Port         *int                                `pulumi:"queryV1Port"`
	QueryV1Status       *string                             `pulumi:"queryV1Status"`
	QueryV2cPort        *int                                `pulumi:"queryV2cPort"`
	QueryV2cStatus      *string                             `pulumi:"queryV2cStatus"`
	Status              *string                             `pulumi:"status"`
	TrapV1Lport         *int                                `pulumi:"trapV1Lport"`
	TrapV1Rport         *int                                `pulumi:"trapV1Rport"`
	TrapV1Status        *string                             `pulumi:"trapV1Status"`
	TrapV2cLport        *int                                `pulumi:"trapV2cLport"`
	TrapV2cRport        *int                                `pulumi:"trapV2cRport"`
	TrapV2cStatus       *string                             `pulumi:"trapV2cStatus"`
	Vdomparam           *string                             `pulumi:"vdomparam"`
}

type SwitchControllerSnmpCommunityState struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Hosts               SwitchControllerSnmpCommunityHostArrayInput
	Name                pulumi.StringPtrInput
	QueryV1Port         pulumi.IntPtrInput
	QueryV1Status       pulumi.StringPtrInput
	QueryV2cPort        pulumi.IntPtrInput
	QueryV2cStatus      pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapV1Lport         pulumi.IntPtrInput
	TrapV1Rport         pulumi.IntPtrInput
	TrapV1Status        pulumi.StringPtrInput
	TrapV2cLport        pulumi.IntPtrInput
	TrapV2cRport        pulumi.IntPtrInput
	TrapV2cStatus       pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerSnmpCommunityState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSnmpCommunityState)(nil)).Elem()
}

type switchControllerSnmpCommunityArgs struct {
	DynamicSortSubtable *string                             `pulumi:"dynamicSortSubtable"`
	Events              *string                             `pulumi:"events"`
	Fosid               *int                                `pulumi:"fosid"`
	GetAllTables        *string                             `pulumi:"getAllTables"`
	Hosts               []SwitchControllerSnmpCommunityHost `pulumi:"hosts"`
	Name                *string                             `pulumi:"name"`
	QueryV1Port         *int                                `pulumi:"queryV1Port"`
	QueryV1Status       *string                             `pulumi:"queryV1Status"`
	QueryV2cPort        *int                                `pulumi:"queryV2cPort"`
	QueryV2cStatus      *string                             `pulumi:"queryV2cStatus"`
	Status              *string                             `pulumi:"status"`
	TrapV1Lport         *int                                `pulumi:"trapV1Lport"`
	TrapV1Rport         *int                                `pulumi:"trapV1Rport"`
	TrapV1Status        *string                             `pulumi:"trapV1Status"`
	TrapV2cLport        *int                                `pulumi:"trapV2cLport"`
	TrapV2cRport        *int                                `pulumi:"trapV2cRport"`
	TrapV2cStatus       *string                             `pulumi:"trapV2cStatus"`
	Vdomparam           *string                             `pulumi:"vdomparam"`
}

// The set of arguments for constructing a SwitchControllerSnmpCommunity resource.
type SwitchControllerSnmpCommunityArgs struct {
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	Fosid               pulumi.IntPtrInput
	GetAllTables        pulumi.StringPtrInput
	Hosts               SwitchControllerSnmpCommunityHostArrayInput
	Name                pulumi.StringPtrInput
	QueryV1Port         pulumi.IntPtrInput
	QueryV1Status       pulumi.StringPtrInput
	QueryV2cPort        pulumi.IntPtrInput
	QueryV2cStatus      pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapV1Lport         pulumi.IntPtrInput
	TrapV1Rport         pulumi.IntPtrInput
	TrapV1Status        pulumi.StringPtrInput
	TrapV2cLport        pulumi.IntPtrInput
	TrapV2cRport        pulumi.IntPtrInput
	TrapV2cStatus       pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (SwitchControllerSnmpCommunityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchControllerSnmpCommunityArgs)(nil)).Elem()
}

type SwitchControllerSnmpCommunityInput interface {
	pulumi.Input

	ToSwitchControllerSnmpCommunityOutput() SwitchControllerSnmpCommunityOutput
	ToSwitchControllerSnmpCommunityOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityOutput
}

func (*SwitchControllerSnmpCommunity) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (i *SwitchControllerSnmpCommunity) ToSwitchControllerSnmpCommunityOutput() SwitchControllerSnmpCommunityOutput {
	return i.ToSwitchControllerSnmpCommunityOutputWithContext(context.Background())
}

func (i *SwitchControllerSnmpCommunity) ToSwitchControllerSnmpCommunityOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpCommunityOutput)
}

// SwitchControllerSnmpCommunityArrayInput is an input type that accepts SwitchControllerSnmpCommunityArray and SwitchControllerSnmpCommunityArrayOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpCommunityArrayInput` via:
//
//	SwitchControllerSnmpCommunityArray{ SwitchControllerSnmpCommunityArgs{...} }
type SwitchControllerSnmpCommunityArrayInput interface {
	pulumi.Input

	ToSwitchControllerSnmpCommunityArrayOutput() SwitchControllerSnmpCommunityArrayOutput
	ToSwitchControllerSnmpCommunityArrayOutputWithContext(context.Context) SwitchControllerSnmpCommunityArrayOutput
}

type SwitchControllerSnmpCommunityArray []SwitchControllerSnmpCommunityInput

func (SwitchControllerSnmpCommunityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (i SwitchControllerSnmpCommunityArray) ToSwitchControllerSnmpCommunityArrayOutput() SwitchControllerSnmpCommunityArrayOutput {
	return i.ToSwitchControllerSnmpCommunityArrayOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpCommunityArray) ToSwitchControllerSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpCommunityArrayOutput)
}

// SwitchControllerSnmpCommunityMapInput is an input type that accepts SwitchControllerSnmpCommunityMap and SwitchControllerSnmpCommunityMapOutput values.
// You can construct a concrete instance of `SwitchControllerSnmpCommunityMapInput` via:
//
//	SwitchControllerSnmpCommunityMap{ "key": SwitchControllerSnmpCommunityArgs{...} }
type SwitchControllerSnmpCommunityMapInput interface {
	pulumi.Input

	ToSwitchControllerSnmpCommunityMapOutput() SwitchControllerSnmpCommunityMapOutput
	ToSwitchControllerSnmpCommunityMapOutputWithContext(context.Context) SwitchControllerSnmpCommunityMapOutput
}

type SwitchControllerSnmpCommunityMap map[string]SwitchControllerSnmpCommunityInput

func (SwitchControllerSnmpCommunityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (i SwitchControllerSnmpCommunityMap) ToSwitchControllerSnmpCommunityMapOutput() SwitchControllerSnmpCommunityMapOutput {
	return i.ToSwitchControllerSnmpCommunityMapOutputWithContext(context.Background())
}

func (i SwitchControllerSnmpCommunityMap) ToSwitchControllerSnmpCommunityMapOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchControllerSnmpCommunityMapOutput)
}

type SwitchControllerSnmpCommunityOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpCommunityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (o SwitchControllerSnmpCommunityOutput) ToSwitchControllerSnmpCommunityOutput() SwitchControllerSnmpCommunityOutput {
	return o
}

func (o SwitchControllerSnmpCommunityOutput) ToSwitchControllerSnmpCommunityOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityOutput {
	return o
}

func (o SwitchControllerSnmpCommunityOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Events() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.Events }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.Fosid }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Hosts() SwitchControllerSnmpCommunityHostArrayOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) SwitchControllerSnmpCommunityHostArrayOutput { return v.Hosts }).(SwitchControllerSnmpCommunityHostArrayOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) QueryV1Port() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.QueryV1Port }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) QueryV1Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.QueryV1Status }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) QueryV2cPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.QueryV2cPort }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) QueryV2cStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.QueryV2cStatus }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV1Lport() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.TrapV1Lport }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV1Rport() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.TrapV1Rport }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV1Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.TrapV1Status }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV2cLport() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.TrapV2cLport }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV2cRport() pulumi.IntOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.IntOutput { return v.TrapV2cRport }).(pulumi.IntOutput)
}

func (o SwitchControllerSnmpCommunityOutput) TrapV2cStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringOutput { return v.TrapV2cStatus }).(pulumi.StringOutput)
}

func (o SwitchControllerSnmpCommunityOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SwitchControllerSnmpCommunity) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type SwitchControllerSnmpCommunityArrayOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpCommunityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (o SwitchControllerSnmpCommunityArrayOutput) ToSwitchControllerSnmpCommunityArrayOutput() SwitchControllerSnmpCommunityArrayOutput {
	return o
}

func (o SwitchControllerSnmpCommunityArrayOutput) ToSwitchControllerSnmpCommunityArrayOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityArrayOutput {
	return o
}

func (o SwitchControllerSnmpCommunityArrayOutput) Index(i pulumi.IntInput) SwitchControllerSnmpCommunityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchControllerSnmpCommunity {
		return vs[0].([]*SwitchControllerSnmpCommunity)[vs[1].(int)]
	}).(SwitchControllerSnmpCommunityOutput)
}

type SwitchControllerSnmpCommunityMapOutput struct{ *pulumi.OutputState }

func (SwitchControllerSnmpCommunityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchControllerSnmpCommunity)(nil)).Elem()
}

func (o SwitchControllerSnmpCommunityMapOutput) ToSwitchControllerSnmpCommunityMapOutput() SwitchControllerSnmpCommunityMapOutput {
	return o
}

func (o SwitchControllerSnmpCommunityMapOutput) ToSwitchControllerSnmpCommunityMapOutputWithContext(ctx context.Context) SwitchControllerSnmpCommunityMapOutput {
	return o
}

func (o SwitchControllerSnmpCommunityMapOutput) MapIndex(k pulumi.StringInput) SwitchControllerSnmpCommunityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchControllerSnmpCommunity {
		return vs[0].(map[string]*SwitchControllerSnmpCommunity)[vs[1].(string)]
	}).(SwitchControllerSnmpCommunityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpCommunityInput)(nil)).Elem(), &SwitchControllerSnmpCommunity{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpCommunityArrayInput)(nil)).Elem(), SwitchControllerSnmpCommunityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchControllerSnmpCommunityMapInput)(nil)).Elem(), SwitchControllerSnmpCommunityMap{})
	pulumi.RegisterOutputType(SwitchControllerSnmpCommunityOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpCommunityArrayOutput{})
	pulumi.RegisterOutputType(SwitchControllerSnmpCommunityMapOutput{})
}
