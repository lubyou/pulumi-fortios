// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SystemSnmpUser struct {
	pulumi.CustomResourceState

	AuthProto           pulumi.StringOutput           `pulumi:"authProto"`
	AuthPwd             pulumi.StringPtrOutput        `pulumi:"authPwd"`
	DynamicSortSubtable pulumi.StringPtrOutput        `pulumi:"dynamicSortSubtable"`
	Events              pulumi.StringOutput           `pulumi:"events"`
	HaDirect            pulumi.StringOutput           `pulumi:"haDirect"`
	MibView             pulumi.StringOutput           `pulumi:"mibView"`
	Name                pulumi.StringOutput           `pulumi:"name"`
	NotifyHosts         pulumi.StringOutput           `pulumi:"notifyHosts"`
	NotifyHosts6        pulumi.StringOutput           `pulumi:"notifyHosts6"`
	PrivProto           pulumi.StringOutput           `pulumi:"privProto"`
	PrivPwd             pulumi.StringPtrOutput        `pulumi:"privPwd"`
	Queries             pulumi.StringOutput           `pulumi:"queries"`
	QueryPort           pulumi.IntOutput              `pulumi:"queryPort"`
	SecurityLevel       pulumi.StringOutput           `pulumi:"securityLevel"`
	SourceIp            pulumi.StringOutput           `pulumi:"sourceIp"`
	SourceIpv6          pulumi.StringOutput           `pulumi:"sourceIpv6"`
	Status              pulumi.StringOutput           `pulumi:"status"`
	TrapLport           pulumi.IntOutput              `pulumi:"trapLport"`
	TrapRport           pulumi.IntOutput              `pulumi:"trapRport"`
	TrapStatus          pulumi.StringOutput           `pulumi:"trapStatus"`
	Vdomparam           pulumi.StringPtrOutput        `pulumi:"vdomparam"`
	Vdoms               SystemSnmpUserVdomArrayOutput `pulumi:"vdoms"`
}

// NewSystemSnmpUser registers a new resource with the given unique name, arguments, and options.
func NewSystemSnmpUser(ctx *pulumi.Context,
	name string, args *SystemSnmpUserArgs, opts ...pulumi.ResourceOption) (*SystemSnmpUser, error) {
	if args == nil {
		args = &SystemSnmpUserArgs{}
	}

	if args.AuthPwd != nil {
		args.AuthPwd = pulumi.ToSecret(args.AuthPwd).(pulumi.StringPtrInput)
	}
	if args.PrivPwd != nil {
		args.PrivPwd = pulumi.ToSecret(args.PrivPwd).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"authPwd",
		"privPwd",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource SystemSnmpUser
	err := ctx.RegisterResource("fortios:index/systemSnmpUser:SystemSnmpUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSnmpUser gets an existing SystemSnmpUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSnmpUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSnmpUserState, opts ...pulumi.ResourceOption) (*SystemSnmpUser, error) {
	var resource SystemSnmpUser
	err := ctx.ReadResource("fortios:index/systemSnmpUser:SystemSnmpUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSnmpUser resources.
type systemSnmpUserState struct {
	AuthProto           *string              `pulumi:"authProto"`
	AuthPwd             *string              `pulumi:"authPwd"`
	DynamicSortSubtable *string              `pulumi:"dynamicSortSubtable"`
	Events              *string              `pulumi:"events"`
	HaDirect            *string              `pulumi:"haDirect"`
	MibView             *string              `pulumi:"mibView"`
	Name                *string              `pulumi:"name"`
	NotifyHosts         *string              `pulumi:"notifyHosts"`
	NotifyHosts6        *string              `pulumi:"notifyHosts6"`
	PrivProto           *string              `pulumi:"privProto"`
	PrivPwd             *string              `pulumi:"privPwd"`
	Queries             *string              `pulumi:"queries"`
	QueryPort           *int                 `pulumi:"queryPort"`
	SecurityLevel       *string              `pulumi:"securityLevel"`
	SourceIp            *string              `pulumi:"sourceIp"`
	SourceIpv6          *string              `pulumi:"sourceIpv6"`
	Status              *string              `pulumi:"status"`
	TrapLport           *int                 `pulumi:"trapLport"`
	TrapRport           *int                 `pulumi:"trapRport"`
	TrapStatus          *string              `pulumi:"trapStatus"`
	Vdomparam           *string              `pulumi:"vdomparam"`
	Vdoms               []SystemSnmpUserVdom `pulumi:"vdoms"`
}

type SystemSnmpUserState struct {
	AuthProto           pulumi.StringPtrInput
	AuthPwd             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	HaDirect            pulumi.StringPtrInput
	MibView             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	NotifyHosts         pulumi.StringPtrInput
	NotifyHosts6        pulumi.StringPtrInput
	PrivProto           pulumi.StringPtrInput
	PrivPwd             pulumi.StringPtrInput
	Queries             pulumi.StringPtrInput
	QueryPort           pulumi.IntPtrInput
	SecurityLevel       pulumi.StringPtrInput
	SourceIp            pulumi.StringPtrInput
	SourceIpv6          pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapLport           pulumi.IntPtrInput
	TrapRport           pulumi.IntPtrInput
	TrapStatus          pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vdoms               SystemSnmpUserVdomArrayInput
}

func (SystemSnmpUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpUserState)(nil)).Elem()
}

type systemSnmpUserArgs struct {
	AuthProto           *string              `pulumi:"authProto"`
	AuthPwd             *string              `pulumi:"authPwd"`
	DynamicSortSubtable *string              `pulumi:"dynamicSortSubtable"`
	Events              *string              `pulumi:"events"`
	HaDirect            *string              `pulumi:"haDirect"`
	MibView             *string              `pulumi:"mibView"`
	Name                *string              `pulumi:"name"`
	NotifyHosts         *string              `pulumi:"notifyHosts"`
	NotifyHosts6        *string              `pulumi:"notifyHosts6"`
	PrivProto           *string              `pulumi:"privProto"`
	PrivPwd             *string              `pulumi:"privPwd"`
	Queries             *string              `pulumi:"queries"`
	QueryPort           *int                 `pulumi:"queryPort"`
	SecurityLevel       *string              `pulumi:"securityLevel"`
	SourceIp            *string              `pulumi:"sourceIp"`
	SourceIpv6          *string              `pulumi:"sourceIpv6"`
	Status              *string              `pulumi:"status"`
	TrapLport           *int                 `pulumi:"trapLport"`
	TrapRport           *int                 `pulumi:"trapRport"`
	TrapStatus          *string              `pulumi:"trapStatus"`
	Vdomparam           *string              `pulumi:"vdomparam"`
	Vdoms               []SystemSnmpUserVdom `pulumi:"vdoms"`
}

// The set of arguments for constructing a SystemSnmpUser resource.
type SystemSnmpUserArgs struct {
	AuthProto           pulumi.StringPtrInput
	AuthPwd             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Events              pulumi.StringPtrInput
	HaDirect            pulumi.StringPtrInput
	MibView             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	NotifyHosts         pulumi.StringPtrInput
	NotifyHosts6        pulumi.StringPtrInput
	PrivProto           pulumi.StringPtrInput
	PrivPwd             pulumi.StringPtrInput
	Queries             pulumi.StringPtrInput
	QueryPort           pulumi.IntPtrInput
	SecurityLevel       pulumi.StringPtrInput
	SourceIp            pulumi.StringPtrInput
	SourceIpv6          pulumi.StringPtrInput
	Status              pulumi.StringPtrInput
	TrapLport           pulumi.IntPtrInput
	TrapRport           pulumi.IntPtrInput
	TrapStatus          pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
	Vdoms               SystemSnmpUserVdomArrayInput
}

func (SystemSnmpUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpUserArgs)(nil)).Elem()
}

type SystemSnmpUserInput interface {
	pulumi.Input

	ToSystemSnmpUserOutput() SystemSnmpUserOutput
	ToSystemSnmpUserOutputWithContext(ctx context.Context) SystemSnmpUserOutput
}

func (*SystemSnmpUser) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpUser)(nil)).Elem()
}

func (i *SystemSnmpUser) ToSystemSnmpUserOutput() SystemSnmpUserOutput {
	return i.ToSystemSnmpUserOutputWithContext(context.Background())
}

func (i *SystemSnmpUser) ToSystemSnmpUserOutputWithContext(ctx context.Context) SystemSnmpUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpUserOutput)
}

// SystemSnmpUserArrayInput is an input type that accepts SystemSnmpUserArray and SystemSnmpUserArrayOutput values.
// You can construct a concrete instance of `SystemSnmpUserArrayInput` via:
//
//	SystemSnmpUserArray{ SystemSnmpUserArgs{...} }
type SystemSnmpUserArrayInput interface {
	pulumi.Input

	ToSystemSnmpUserArrayOutput() SystemSnmpUserArrayOutput
	ToSystemSnmpUserArrayOutputWithContext(context.Context) SystemSnmpUserArrayOutput
}

type SystemSnmpUserArray []SystemSnmpUserInput

func (SystemSnmpUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpUser)(nil)).Elem()
}

func (i SystemSnmpUserArray) ToSystemSnmpUserArrayOutput() SystemSnmpUserArrayOutput {
	return i.ToSystemSnmpUserArrayOutputWithContext(context.Background())
}

func (i SystemSnmpUserArray) ToSystemSnmpUserArrayOutputWithContext(ctx context.Context) SystemSnmpUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpUserArrayOutput)
}

// SystemSnmpUserMapInput is an input type that accepts SystemSnmpUserMap and SystemSnmpUserMapOutput values.
// You can construct a concrete instance of `SystemSnmpUserMapInput` via:
//
//	SystemSnmpUserMap{ "key": SystemSnmpUserArgs{...} }
type SystemSnmpUserMapInput interface {
	pulumi.Input

	ToSystemSnmpUserMapOutput() SystemSnmpUserMapOutput
	ToSystemSnmpUserMapOutputWithContext(context.Context) SystemSnmpUserMapOutput
}

type SystemSnmpUserMap map[string]SystemSnmpUserInput

func (SystemSnmpUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpUser)(nil)).Elem()
}

func (i SystemSnmpUserMap) ToSystemSnmpUserMapOutput() SystemSnmpUserMapOutput {
	return i.ToSystemSnmpUserMapOutputWithContext(context.Background())
}

func (i SystemSnmpUserMap) ToSystemSnmpUserMapOutputWithContext(ctx context.Context) SystemSnmpUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpUserMapOutput)
}

type SystemSnmpUserOutput struct{ *pulumi.OutputState }

func (SystemSnmpUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpUser)(nil)).Elem()
}

func (o SystemSnmpUserOutput) ToSystemSnmpUserOutput() SystemSnmpUserOutput {
	return o
}

func (o SystemSnmpUserOutput) ToSystemSnmpUserOutputWithContext(ctx context.Context) SystemSnmpUserOutput {
	return o
}

func (o SystemSnmpUserOutput) AuthProto() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.AuthProto }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) AuthPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringPtrOutput { return v.AuthPwd }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpUserOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpUserOutput) Events() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.Events }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) HaDirect() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.HaDirect }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) MibView() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.MibView }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) NotifyHosts() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.NotifyHosts }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) NotifyHosts6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.NotifyHosts6 }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) PrivProto() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.PrivProto }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) PrivPwd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringPtrOutput { return v.PrivPwd }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpUserOutput) Queries() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.Queries }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) QueryPort() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.IntOutput { return v.QueryPort }).(pulumi.IntOutput)
}

func (o SystemSnmpUserOutput) SecurityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.SecurityLevel }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) SourceIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.SourceIpv6 }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) TrapLport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.IntOutput { return v.TrapLport }).(pulumi.IntOutput)
}

func (o SystemSnmpUserOutput) TrapRport() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.IntOutput { return v.TrapRport }).(pulumi.IntOutput)
}

func (o SystemSnmpUserOutput) TrapStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringOutput { return v.TrapStatus }).(pulumi.StringOutput)
}

func (o SystemSnmpUserOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpUser) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o SystemSnmpUserOutput) Vdoms() SystemSnmpUserVdomArrayOutput {
	return o.ApplyT(func(v *SystemSnmpUser) SystemSnmpUserVdomArrayOutput { return v.Vdoms }).(SystemSnmpUserVdomArrayOutput)
}

type SystemSnmpUserArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpUser)(nil)).Elem()
}

func (o SystemSnmpUserArrayOutput) ToSystemSnmpUserArrayOutput() SystemSnmpUserArrayOutput {
	return o
}

func (o SystemSnmpUserArrayOutput) ToSystemSnmpUserArrayOutputWithContext(ctx context.Context) SystemSnmpUserArrayOutput {
	return o
}

func (o SystemSnmpUserArrayOutput) Index(i pulumi.IntInput) SystemSnmpUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSnmpUser {
		return vs[0].([]*SystemSnmpUser)[vs[1].(int)]
	}).(SystemSnmpUserOutput)
}

type SystemSnmpUserMapOutput struct{ *pulumi.OutputState }

func (SystemSnmpUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpUser)(nil)).Elem()
}

func (o SystemSnmpUserMapOutput) ToSystemSnmpUserMapOutput() SystemSnmpUserMapOutput {
	return o
}

func (o SystemSnmpUserMapOutput) ToSystemSnmpUserMapOutputWithContext(ctx context.Context) SystemSnmpUserMapOutput {
	return o
}

func (o SystemSnmpUserMapOutput) MapIndex(k pulumi.StringInput) SystemSnmpUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSnmpUser {
		return vs[0].(map[string]*SystemSnmpUser)[vs[1].(string)]
	}).(SystemSnmpUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpUserInput)(nil)).Elem(), &SystemSnmpUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpUserArrayInput)(nil)).Elem(), SystemSnmpUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpUserMapInput)(nil)).Elem(), SystemSnmpUserMap{})
	pulumi.RegisterOutputType(SystemSnmpUserOutput{})
	pulumi.RegisterOutputType(SystemSnmpUserArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpUserMapOutput{})
}
