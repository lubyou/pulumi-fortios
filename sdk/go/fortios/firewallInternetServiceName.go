// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallInternetServiceName struct {
	pulumi.CustomResourceState

	CityId            pulumi.IntOutput       `pulumi:"cityId"`
	CountryId         pulumi.IntOutput       `pulumi:"countryId"`
	InternetServiceId pulumi.IntOutput       `pulumi:"internetServiceId"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	RegionId          pulumi.IntOutput       `pulumi:"regionId"`
	Type              pulumi.StringOutput    `pulumi:"type"`
	Vdomparam         pulumi.StringPtrOutput `pulumi:"vdomparam"`
}

// NewFirewallInternetServiceName registers a new resource with the given unique name, arguments, and options.
func NewFirewallInternetServiceName(ctx *pulumi.Context,
	name string, args *FirewallInternetServiceNameArgs, opts ...pulumi.ResourceOption) (*FirewallInternetServiceName, error) {
	if args == nil {
		args = &FirewallInternetServiceNameArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallInternetServiceName
	err := ctx.RegisterResource("fortios:index/firewallInternetServiceName:FirewallInternetServiceName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallInternetServiceName gets an existing FirewallInternetServiceName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallInternetServiceName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallInternetServiceNameState, opts ...pulumi.ResourceOption) (*FirewallInternetServiceName, error) {
	var resource FirewallInternetServiceName
	err := ctx.ReadResource("fortios:index/firewallInternetServiceName:FirewallInternetServiceName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallInternetServiceName resources.
type firewallInternetServiceNameState struct {
	CityId            *int    `pulumi:"cityId"`
	CountryId         *int    `pulumi:"countryId"`
	InternetServiceId *int    `pulumi:"internetServiceId"`
	Name              *string `pulumi:"name"`
	RegionId          *int    `pulumi:"regionId"`
	Type              *string `pulumi:"type"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

type FirewallInternetServiceNameState struct {
	CityId            pulumi.IntPtrInput
	CountryId         pulumi.IntPtrInput
	InternetServiceId pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	RegionId          pulumi.IntPtrInput
	Type              pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (FirewallInternetServiceNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceNameState)(nil)).Elem()
}

type firewallInternetServiceNameArgs struct {
	CityId            *int    `pulumi:"cityId"`
	CountryId         *int    `pulumi:"countryId"`
	InternetServiceId *int    `pulumi:"internetServiceId"`
	Name              *string `pulumi:"name"`
	RegionId          *int    `pulumi:"regionId"`
	Type              *string `pulumi:"type"`
	Vdomparam         *string `pulumi:"vdomparam"`
}

// The set of arguments for constructing a FirewallInternetServiceName resource.
type FirewallInternetServiceNameArgs struct {
	CityId            pulumi.IntPtrInput
	CountryId         pulumi.IntPtrInput
	InternetServiceId pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	RegionId          pulumi.IntPtrInput
	Type              pulumi.StringPtrInput
	Vdomparam         pulumi.StringPtrInput
}

func (FirewallInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallInternetServiceNameArgs)(nil)).Elem()
}

type FirewallInternetServiceNameInput interface {
	pulumi.Input

	ToFirewallInternetServiceNameOutput() FirewallInternetServiceNameOutput
	ToFirewallInternetServiceNameOutputWithContext(ctx context.Context) FirewallInternetServiceNameOutput
}

func (*FirewallInternetServiceName) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceName)(nil)).Elem()
}

func (i *FirewallInternetServiceName) ToFirewallInternetServiceNameOutput() FirewallInternetServiceNameOutput {
	return i.ToFirewallInternetServiceNameOutputWithContext(context.Background())
}

func (i *FirewallInternetServiceName) ToFirewallInternetServiceNameOutputWithContext(ctx context.Context) FirewallInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceNameOutput)
}

// FirewallInternetServiceNameArrayInput is an input type that accepts FirewallInternetServiceNameArray and FirewallInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `FirewallInternetServiceNameArrayInput` via:
//
//	FirewallInternetServiceNameArray{ FirewallInternetServiceNameArgs{...} }
type FirewallInternetServiceNameArrayInput interface {
	pulumi.Input

	ToFirewallInternetServiceNameArrayOutput() FirewallInternetServiceNameArrayOutput
	ToFirewallInternetServiceNameArrayOutputWithContext(context.Context) FirewallInternetServiceNameArrayOutput
}

type FirewallInternetServiceNameArray []FirewallInternetServiceNameInput

func (FirewallInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceName)(nil)).Elem()
}

func (i FirewallInternetServiceNameArray) ToFirewallInternetServiceNameArrayOutput() FirewallInternetServiceNameArrayOutput {
	return i.ToFirewallInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i FirewallInternetServiceNameArray) ToFirewallInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceNameArrayOutput)
}

// FirewallInternetServiceNameMapInput is an input type that accepts FirewallInternetServiceNameMap and FirewallInternetServiceNameMapOutput values.
// You can construct a concrete instance of `FirewallInternetServiceNameMapInput` via:
//
//	FirewallInternetServiceNameMap{ "key": FirewallInternetServiceNameArgs{...} }
type FirewallInternetServiceNameMapInput interface {
	pulumi.Input

	ToFirewallInternetServiceNameMapOutput() FirewallInternetServiceNameMapOutput
	ToFirewallInternetServiceNameMapOutputWithContext(context.Context) FirewallInternetServiceNameMapOutput
}

type FirewallInternetServiceNameMap map[string]FirewallInternetServiceNameInput

func (FirewallInternetServiceNameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceName)(nil)).Elem()
}

func (i FirewallInternetServiceNameMap) ToFirewallInternetServiceNameMapOutput() FirewallInternetServiceNameMapOutput {
	return i.ToFirewallInternetServiceNameMapOutputWithContext(context.Background())
}

func (i FirewallInternetServiceNameMap) ToFirewallInternetServiceNameMapOutputWithContext(ctx context.Context) FirewallInternetServiceNameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInternetServiceNameMapOutput)
}

type FirewallInternetServiceNameOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallInternetServiceName)(nil)).Elem()
}

func (o FirewallInternetServiceNameOutput) ToFirewallInternetServiceNameOutput() FirewallInternetServiceNameOutput {
	return o
}

func (o FirewallInternetServiceNameOutput) ToFirewallInternetServiceNameOutputWithContext(ctx context.Context) FirewallInternetServiceNameOutput {
	return o
}

func (o FirewallInternetServiceNameOutput) CityId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.IntOutput { return v.CityId }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceNameOutput) CountryId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.IntOutput { return v.CountryId }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceNameOutput) InternetServiceId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.IntOutput { return v.InternetServiceId }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirewallInternetServiceNameOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.IntOutput { return v.RegionId }).(pulumi.IntOutput)
}

func (o FirewallInternetServiceNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o FirewallInternetServiceNameOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallInternetServiceName) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type FirewallInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallInternetServiceName)(nil)).Elem()
}

func (o FirewallInternetServiceNameArrayOutput) ToFirewallInternetServiceNameArrayOutput() FirewallInternetServiceNameArrayOutput {
	return o
}

func (o FirewallInternetServiceNameArrayOutput) ToFirewallInternetServiceNameArrayOutputWithContext(ctx context.Context) FirewallInternetServiceNameArrayOutput {
	return o
}

func (o FirewallInternetServiceNameArrayOutput) Index(i pulumi.IntInput) FirewallInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallInternetServiceName {
		return vs[0].([]*FirewallInternetServiceName)[vs[1].(int)]
	}).(FirewallInternetServiceNameOutput)
}

type FirewallInternetServiceNameMapOutput struct{ *pulumi.OutputState }

func (FirewallInternetServiceNameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallInternetServiceName)(nil)).Elem()
}

func (o FirewallInternetServiceNameMapOutput) ToFirewallInternetServiceNameMapOutput() FirewallInternetServiceNameMapOutput {
	return o
}

func (o FirewallInternetServiceNameMapOutput) ToFirewallInternetServiceNameMapOutputWithContext(ctx context.Context) FirewallInternetServiceNameMapOutput {
	return o
}

func (o FirewallInternetServiceNameMapOutput) MapIndex(k pulumi.StringInput) FirewallInternetServiceNameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallInternetServiceName {
		return vs[0].(map[string]*FirewallInternetServiceName)[vs[1].(string)]
	}).(FirewallInternetServiceNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceNameInput)(nil)).Elem(), &FirewallInternetServiceName{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceNameArrayInput)(nil)).Elem(), FirewallInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInternetServiceNameMapInput)(nil)).Elem(), FirewallInternetServiceNameMap{})
	pulumi.RegisterOutputType(FirewallInternetServiceNameOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(FirewallInternetServiceNameMapOutput{})
}
