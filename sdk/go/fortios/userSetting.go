// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UserSetting struct {
	pulumi.CustomResourceState

	AuthBlackoutTime          pulumi.IntOutput               `pulumi:"authBlackoutTime"`
	AuthCaCert                pulumi.StringOutput            `pulumi:"authCaCert"`
	AuthCert                  pulumi.StringOutput            `pulumi:"authCert"`
	AuthHttpBasic             pulumi.StringOutput            `pulumi:"authHttpBasic"`
	AuthInvalidMax            pulumi.IntOutput               `pulumi:"authInvalidMax"`
	AuthLockoutDuration       pulumi.IntOutput               `pulumi:"authLockoutDuration"`
	AuthLockoutThreshold      pulumi.IntOutput               `pulumi:"authLockoutThreshold"`
	AuthOnDemand              pulumi.StringOutput            `pulumi:"authOnDemand"`
	AuthPortalTimeout         pulumi.IntOutput               `pulumi:"authPortalTimeout"`
	AuthPorts                 UserSettingAuthPortArrayOutput `pulumi:"authPorts"`
	AuthSecureHttp            pulumi.StringOutput            `pulumi:"authSecureHttp"`
	AuthSrcMac                pulumi.StringOutput            `pulumi:"authSrcMac"`
	AuthSslAllowRenegotiation pulumi.StringOutput            `pulumi:"authSslAllowRenegotiation"`
	AuthSslMaxProtoVersion    pulumi.StringOutput            `pulumi:"authSslMaxProtoVersion"`
	AuthSslMinProtoVersion    pulumi.StringOutput            `pulumi:"authSslMinProtoVersion"`
	AuthSslSigalgs            pulumi.StringOutput            `pulumi:"authSslSigalgs"`
	AuthTimeout               pulumi.IntOutput               `pulumi:"authTimeout"`
	AuthTimeoutType           pulumi.StringOutput            `pulumi:"authTimeoutType"`
	AuthType                  pulumi.StringOutput            `pulumi:"authType"`
	DynamicSortSubtable       pulumi.StringPtrOutput         `pulumi:"dynamicSortSubtable"`
	GetAllTables              pulumi.StringPtrOutput         `pulumi:"getAllTables"`
	PerPolicyDisclaimer       pulumi.StringOutput            `pulumi:"perPolicyDisclaimer"`
	RadiusSesTimeoutAct       pulumi.StringOutput            `pulumi:"radiusSesTimeoutAct"`
	Vdomparam                 pulumi.StringPtrOutput         `pulumi:"vdomparam"`
}

// NewUserSetting registers a new resource with the given unique name, arguments, and options.
func NewUserSetting(ctx *pulumi.Context,
	name string, args *UserSettingArgs, opts ...pulumi.ResourceOption) (*UserSetting, error) {
	if args == nil {
		args = &UserSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserSetting
	err := ctx.RegisterResource("fortios:index/userSetting:UserSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserSetting gets an existing UserSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserSettingState, opts ...pulumi.ResourceOption) (*UserSetting, error) {
	var resource UserSetting
	err := ctx.ReadResource("fortios:index/userSetting:UserSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserSetting resources.
type userSettingState struct {
	AuthBlackoutTime          *int                  `pulumi:"authBlackoutTime"`
	AuthCaCert                *string               `pulumi:"authCaCert"`
	AuthCert                  *string               `pulumi:"authCert"`
	AuthHttpBasic             *string               `pulumi:"authHttpBasic"`
	AuthInvalidMax            *int                  `pulumi:"authInvalidMax"`
	AuthLockoutDuration       *int                  `pulumi:"authLockoutDuration"`
	AuthLockoutThreshold      *int                  `pulumi:"authLockoutThreshold"`
	AuthOnDemand              *string               `pulumi:"authOnDemand"`
	AuthPortalTimeout         *int                  `pulumi:"authPortalTimeout"`
	AuthPorts                 []UserSettingAuthPort `pulumi:"authPorts"`
	AuthSecureHttp            *string               `pulumi:"authSecureHttp"`
	AuthSrcMac                *string               `pulumi:"authSrcMac"`
	AuthSslAllowRenegotiation *string               `pulumi:"authSslAllowRenegotiation"`
	AuthSslMaxProtoVersion    *string               `pulumi:"authSslMaxProtoVersion"`
	AuthSslMinProtoVersion    *string               `pulumi:"authSslMinProtoVersion"`
	AuthSslSigalgs            *string               `pulumi:"authSslSigalgs"`
	AuthTimeout               *int                  `pulumi:"authTimeout"`
	AuthTimeoutType           *string               `pulumi:"authTimeoutType"`
	AuthType                  *string               `pulumi:"authType"`
	DynamicSortSubtable       *string               `pulumi:"dynamicSortSubtable"`
	GetAllTables              *string               `pulumi:"getAllTables"`
	PerPolicyDisclaimer       *string               `pulumi:"perPolicyDisclaimer"`
	RadiusSesTimeoutAct       *string               `pulumi:"radiusSesTimeoutAct"`
	Vdomparam                 *string               `pulumi:"vdomparam"`
}

type UserSettingState struct {
	AuthBlackoutTime          pulumi.IntPtrInput
	AuthCaCert                pulumi.StringPtrInput
	AuthCert                  pulumi.StringPtrInput
	AuthHttpBasic             pulumi.StringPtrInput
	AuthInvalidMax            pulumi.IntPtrInput
	AuthLockoutDuration       pulumi.IntPtrInput
	AuthLockoutThreshold      pulumi.IntPtrInput
	AuthOnDemand              pulumi.StringPtrInput
	AuthPortalTimeout         pulumi.IntPtrInput
	AuthPorts                 UserSettingAuthPortArrayInput
	AuthSecureHttp            pulumi.StringPtrInput
	AuthSrcMac                pulumi.StringPtrInput
	AuthSslAllowRenegotiation pulumi.StringPtrInput
	AuthSslMaxProtoVersion    pulumi.StringPtrInput
	AuthSslMinProtoVersion    pulumi.StringPtrInput
	AuthSslSigalgs            pulumi.StringPtrInput
	AuthTimeout               pulumi.IntPtrInput
	AuthTimeoutType           pulumi.StringPtrInput
	AuthType                  pulumi.StringPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	GetAllTables              pulumi.StringPtrInput
	PerPolicyDisclaimer       pulumi.StringPtrInput
	RadiusSesTimeoutAct       pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (UserSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*userSettingState)(nil)).Elem()
}

type userSettingArgs struct {
	AuthBlackoutTime          *int                  `pulumi:"authBlackoutTime"`
	AuthCaCert                *string               `pulumi:"authCaCert"`
	AuthCert                  *string               `pulumi:"authCert"`
	AuthHttpBasic             *string               `pulumi:"authHttpBasic"`
	AuthInvalidMax            *int                  `pulumi:"authInvalidMax"`
	AuthLockoutDuration       *int                  `pulumi:"authLockoutDuration"`
	AuthLockoutThreshold      *int                  `pulumi:"authLockoutThreshold"`
	AuthOnDemand              *string               `pulumi:"authOnDemand"`
	AuthPortalTimeout         *int                  `pulumi:"authPortalTimeout"`
	AuthPorts                 []UserSettingAuthPort `pulumi:"authPorts"`
	AuthSecureHttp            *string               `pulumi:"authSecureHttp"`
	AuthSrcMac                *string               `pulumi:"authSrcMac"`
	AuthSslAllowRenegotiation *string               `pulumi:"authSslAllowRenegotiation"`
	AuthSslMaxProtoVersion    *string               `pulumi:"authSslMaxProtoVersion"`
	AuthSslMinProtoVersion    *string               `pulumi:"authSslMinProtoVersion"`
	AuthSslSigalgs            *string               `pulumi:"authSslSigalgs"`
	AuthTimeout               *int                  `pulumi:"authTimeout"`
	AuthTimeoutType           *string               `pulumi:"authTimeoutType"`
	AuthType                  *string               `pulumi:"authType"`
	DynamicSortSubtable       *string               `pulumi:"dynamicSortSubtable"`
	GetAllTables              *string               `pulumi:"getAllTables"`
	PerPolicyDisclaimer       *string               `pulumi:"perPolicyDisclaimer"`
	RadiusSesTimeoutAct       *string               `pulumi:"radiusSesTimeoutAct"`
	Vdomparam                 *string               `pulumi:"vdomparam"`
}

// The set of arguments for constructing a UserSetting resource.
type UserSettingArgs struct {
	AuthBlackoutTime          pulumi.IntPtrInput
	AuthCaCert                pulumi.StringPtrInput
	AuthCert                  pulumi.StringPtrInput
	AuthHttpBasic             pulumi.StringPtrInput
	AuthInvalidMax            pulumi.IntPtrInput
	AuthLockoutDuration       pulumi.IntPtrInput
	AuthLockoutThreshold      pulumi.IntPtrInput
	AuthOnDemand              pulumi.StringPtrInput
	AuthPortalTimeout         pulumi.IntPtrInput
	AuthPorts                 UserSettingAuthPortArrayInput
	AuthSecureHttp            pulumi.StringPtrInput
	AuthSrcMac                pulumi.StringPtrInput
	AuthSslAllowRenegotiation pulumi.StringPtrInput
	AuthSslMaxProtoVersion    pulumi.StringPtrInput
	AuthSslMinProtoVersion    pulumi.StringPtrInput
	AuthSslSigalgs            pulumi.StringPtrInput
	AuthTimeout               pulumi.IntPtrInput
	AuthTimeoutType           pulumi.StringPtrInput
	AuthType                  pulumi.StringPtrInput
	DynamicSortSubtable       pulumi.StringPtrInput
	GetAllTables              pulumi.StringPtrInput
	PerPolicyDisclaimer       pulumi.StringPtrInput
	RadiusSesTimeoutAct       pulumi.StringPtrInput
	Vdomparam                 pulumi.StringPtrInput
}

func (UserSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userSettingArgs)(nil)).Elem()
}

type UserSettingInput interface {
	pulumi.Input

	ToUserSettingOutput() UserSettingOutput
	ToUserSettingOutputWithContext(ctx context.Context) UserSettingOutput
}

func (*UserSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSetting)(nil)).Elem()
}

func (i *UserSetting) ToUserSettingOutput() UserSettingOutput {
	return i.ToUserSettingOutputWithContext(context.Background())
}

func (i *UserSetting) ToUserSettingOutputWithContext(ctx context.Context) UserSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingOutput)
}

// UserSettingArrayInput is an input type that accepts UserSettingArray and UserSettingArrayOutput values.
// You can construct a concrete instance of `UserSettingArrayInput` via:
//
//	UserSettingArray{ UserSettingArgs{...} }
type UserSettingArrayInput interface {
	pulumi.Input

	ToUserSettingArrayOutput() UserSettingArrayOutput
	ToUserSettingArrayOutputWithContext(context.Context) UserSettingArrayOutput
}

type UserSettingArray []UserSettingInput

func (UserSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserSetting)(nil)).Elem()
}

func (i UserSettingArray) ToUserSettingArrayOutput() UserSettingArrayOutput {
	return i.ToUserSettingArrayOutputWithContext(context.Background())
}

func (i UserSettingArray) ToUserSettingArrayOutputWithContext(ctx context.Context) UserSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingArrayOutput)
}

// UserSettingMapInput is an input type that accepts UserSettingMap and UserSettingMapOutput values.
// You can construct a concrete instance of `UserSettingMapInput` via:
//
//	UserSettingMap{ "key": UserSettingArgs{...} }
type UserSettingMapInput interface {
	pulumi.Input

	ToUserSettingMapOutput() UserSettingMapOutput
	ToUserSettingMapOutputWithContext(context.Context) UserSettingMapOutput
}

type UserSettingMap map[string]UserSettingInput

func (UserSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserSetting)(nil)).Elem()
}

func (i UserSettingMap) ToUserSettingMapOutput() UserSettingMapOutput {
	return i.ToUserSettingMapOutputWithContext(context.Background())
}

func (i UserSettingMap) ToUserSettingMapOutputWithContext(ctx context.Context) UserSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingMapOutput)
}

type UserSettingOutput struct{ *pulumi.OutputState }

func (UserSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSetting)(nil)).Elem()
}

func (o UserSettingOutput) ToUserSettingOutput() UserSettingOutput {
	return o
}

func (o UserSettingOutput) ToUserSettingOutputWithContext(ctx context.Context) UserSettingOutput {
	return o
}

func (o UserSettingOutput) AuthBlackoutTime() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthBlackoutTime }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthCaCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthCaCert }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthCert() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthCert }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthHttpBasic() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthHttpBasic }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthInvalidMax() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthInvalidMax }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthLockoutDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthLockoutDuration }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthLockoutThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthLockoutThreshold }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthOnDemand() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthOnDemand }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthPortalTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthPortalTimeout }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthPorts() UserSettingAuthPortArrayOutput {
	return o.ApplyT(func(v *UserSetting) UserSettingAuthPortArrayOutput { return v.AuthPorts }).(UserSettingAuthPortArrayOutput)
}

func (o UserSettingOutput) AuthSecureHttp() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSecureHttp }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthSrcMac() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSrcMac }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthSslAllowRenegotiation() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSslAllowRenegotiation }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthSslMaxProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSslMaxProtoVersion }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthSslMinProtoVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSslMinProtoVersion }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthSslSigalgs() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthSslSigalgs }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.IntOutput { return v.AuthTimeout }).(pulumi.IntOutput)
}

func (o UserSettingOutput) AuthTimeoutType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthTimeoutType }).(pulumi.StringOutput)
}

func (o UserSettingOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.AuthType }).(pulumi.StringOutput)
}

func (o UserSettingOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o UserSettingOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o UserSettingOutput) PerPolicyDisclaimer() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.PerPolicyDisclaimer }).(pulumi.StringOutput)
}

func (o UserSettingOutput) RadiusSesTimeoutAct() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringOutput { return v.RadiusSesTimeoutAct }).(pulumi.StringOutput)
}

func (o UserSettingOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSetting) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type UserSettingArrayOutput struct{ *pulumi.OutputState }

func (UserSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserSetting)(nil)).Elem()
}

func (o UserSettingArrayOutput) ToUserSettingArrayOutput() UserSettingArrayOutput {
	return o
}

func (o UserSettingArrayOutput) ToUserSettingArrayOutputWithContext(ctx context.Context) UserSettingArrayOutput {
	return o
}

func (o UserSettingArrayOutput) Index(i pulumi.IntInput) UserSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserSetting {
		return vs[0].([]*UserSetting)[vs[1].(int)]
	}).(UserSettingOutput)
}

type UserSettingMapOutput struct{ *pulumi.OutputState }

func (UserSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserSetting)(nil)).Elem()
}

func (o UserSettingMapOutput) ToUserSettingMapOutput() UserSettingMapOutput {
	return o
}

func (o UserSettingMapOutput) ToUserSettingMapOutputWithContext(ctx context.Context) UserSettingMapOutput {
	return o
}

func (o UserSettingMapOutput) MapIndex(k pulumi.StringInput) UserSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserSetting {
		return vs[0].(map[string]*UserSetting)[vs[1].(string)]
	}).(UserSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingInput)(nil)).Elem(), &UserSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingArrayInput)(nil)).Elem(), UserSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingMapInput)(nil)).Elem(), UserSettingMap{})
	pulumi.RegisterOutputType(UserSettingOutput{})
	pulumi.RegisterOutputType(UserSettingArrayOutput{})
	pulumi.RegisterOutputType(UserSettingMapOutput{})
}
