// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WirelessControllerAccessControlList struct {
	pulumi.CustomResourceState

	Comment             pulumi.StringOutput                                          `pulumi:"comment"`
	DynamicSortSubtable pulumi.StringPtrOutput                                       `pulumi:"dynamicSortSubtable"`
	Layer3Ipv4Rules     WirelessControllerAccessControlListLayer3Ipv4RuleArrayOutput `pulumi:"layer3Ipv4Rules"`
	Layer3Ipv6Rules     WirelessControllerAccessControlListLayer3Ipv6RuleArrayOutput `pulumi:"layer3Ipv6Rules"`
	Name                pulumi.StringOutput                                          `pulumi:"name"`
	Vdomparam           pulumi.StringPtrOutput                                       `pulumi:"vdomparam"`
}

// NewWirelessControllerAccessControlList registers a new resource with the given unique name, arguments, and options.
func NewWirelessControllerAccessControlList(ctx *pulumi.Context,
	name string, args *WirelessControllerAccessControlListArgs, opts ...pulumi.ResourceOption) (*WirelessControllerAccessControlList, error) {
	if args == nil {
		args = &WirelessControllerAccessControlListArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource WirelessControllerAccessControlList
	err := ctx.RegisterResource("fortios:index/wirelessControllerAccessControlList:WirelessControllerAccessControlList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessControllerAccessControlList gets an existing WirelessControllerAccessControlList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessControllerAccessControlList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessControllerAccessControlListState, opts ...pulumi.ResourceOption) (*WirelessControllerAccessControlList, error) {
	var resource WirelessControllerAccessControlList
	err := ctx.ReadResource("fortios:index/wirelessControllerAccessControlList:WirelessControllerAccessControlList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessControllerAccessControlList resources.
type wirelessControllerAccessControlListState struct {
	Comment             *string                                             `pulumi:"comment"`
	DynamicSortSubtable *string                                             `pulumi:"dynamicSortSubtable"`
	Layer3Ipv4Rules     []WirelessControllerAccessControlListLayer3Ipv4Rule `pulumi:"layer3Ipv4Rules"`
	Layer3Ipv6Rules     []WirelessControllerAccessControlListLayer3Ipv6Rule `pulumi:"layer3Ipv6Rules"`
	Name                *string                                             `pulumi:"name"`
	Vdomparam           *string                                             `pulumi:"vdomparam"`
}

type WirelessControllerAccessControlListState struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Layer3Ipv4Rules     WirelessControllerAccessControlListLayer3Ipv4RuleArrayInput
	Layer3Ipv6Rules     WirelessControllerAccessControlListLayer3Ipv6RuleArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (WirelessControllerAccessControlListState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerAccessControlListState)(nil)).Elem()
}

type wirelessControllerAccessControlListArgs struct {
	Comment             *string                                             `pulumi:"comment"`
	DynamicSortSubtable *string                                             `pulumi:"dynamicSortSubtable"`
	Layer3Ipv4Rules     []WirelessControllerAccessControlListLayer3Ipv4Rule `pulumi:"layer3Ipv4Rules"`
	Layer3Ipv6Rules     []WirelessControllerAccessControlListLayer3Ipv6Rule `pulumi:"layer3Ipv6Rules"`
	Name                *string                                             `pulumi:"name"`
	Vdomparam           *string                                             `pulumi:"vdomparam"`
}

// The set of arguments for constructing a WirelessControllerAccessControlList resource.
type WirelessControllerAccessControlListArgs struct {
	Comment             pulumi.StringPtrInput
	DynamicSortSubtable pulumi.StringPtrInput
	Layer3Ipv4Rules     WirelessControllerAccessControlListLayer3Ipv4RuleArrayInput
	Layer3Ipv6Rules     WirelessControllerAccessControlListLayer3Ipv6RuleArrayInput
	Name                pulumi.StringPtrInput
	Vdomparam           pulumi.StringPtrInput
}

func (WirelessControllerAccessControlListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessControllerAccessControlListArgs)(nil)).Elem()
}

type WirelessControllerAccessControlListInput interface {
	pulumi.Input

	ToWirelessControllerAccessControlListOutput() WirelessControllerAccessControlListOutput
	ToWirelessControllerAccessControlListOutputWithContext(ctx context.Context) WirelessControllerAccessControlListOutput
}

func (*WirelessControllerAccessControlList) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerAccessControlList)(nil)).Elem()
}

func (i *WirelessControllerAccessControlList) ToWirelessControllerAccessControlListOutput() WirelessControllerAccessControlListOutput {
	return i.ToWirelessControllerAccessControlListOutputWithContext(context.Background())
}

func (i *WirelessControllerAccessControlList) ToWirelessControllerAccessControlListOutputWithContext(ctx context.Context) WirelessControllerAccessControlListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerAccessControlListOutput)
}

// WirelessControllerAccessControlListArrayInput is an input type that accepts WirelessControllerAccessControlListArray and WirelessControllerAccessControlListArrayOutput values.
// You can construct a concrete instance of `WirelessControllerAccessControlListArrayInput` via:
//
//	WirelessControllerAccessControlListArray{ WirelessControllerAccessControlListArgs{...} }
type WirelessControllerAccessControlListArrayInput interface {
	pulumi.Input

	ToWirelessControllerAccessControlListArrayOutput() WirelessControllerAccessControlListArrayOutput
	ToWirelessControllerAccessControlListArrayOutputWithContext(context.Context) WirelessControllerAccessControlListArrayOutput
}

type WirelessControllerAccessControlListArray []WirelessControllerAccessControlListInput

func (WirelessControllerAccessControlListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerAccessControlList)(nil)).Elem()
}

func (i WirelessControllerAccessControlListArray) ToWirelessControllerAccessControlListArrayOutput() WirelessControllerAccessControlListArrayOutput {
	return i.ToWirelessControllerAccessControlListArrayOutputWithContext(context.Background())
}

func (i WirelessControllerAccessControlListArray) ToWirelessControllerAccessControlListArrayOutputWithContext(ctx context.Context) WirelessControllerAccessControlListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerAccessControlListArrayOutput)
}

// WirelessControllerAccessControlListMapInput is an input type that accepts WirelessControllerAccessControlListMap and WirelessControllerAccessControlListMapOutput values.
// You can construct a concrete instance of `WirelessControllerAccessControlListMapInput` via:
//
//	WirelessControllerAccessControlListMap{ "key": WirelessControllerAccessControlListArgs{...} }
type WirelessControllerAccessControlListMapInput interface {
	pulumi.Input

	ToWirelessControllerAccessControlListMapOutput() WirelessControllerAccessControlListMapOutput
	ToWirelessControllerAccessControlListMapOutputWithContext(context.Context) WirelessControllerAccessControlListMapOutput
}

type WirelessControllerAccessControlListMap map[string]WirelessControllerAccessControlListInput

func (WirelessControllerAccessControlListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerAccessControlList)(nil)).Elem()
}

func (i WirelessControllerAccessControlListMap) ToWirelessControllerAccessControlListMapOutput() WirelessControllerAccessControlListMapOutput {
	return i.ToWirelessControllerAccessControlListMapOutputWithContext(context.Background())
}

func (i WirelessControllerAccessControlListMap) ToWirelessControllerAccessControlListMapOutputWithContext(ctx context.Context) WirelessControllerAccessControlListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessControllerAccessControlListMapOutput)
}

type WirelessControllerAccessControlListOutput struct{ *pulumi.OutputState }

func (WirelessControllerAccessControlListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessControllerAccessControlList)(nil)).Elem()
}

func (o WirelessControllerAccessControlListOutput) ToWirelessControllerAccessControlListOutput() WirelessControllerAccessControlListOutput {
	return o
}

func (o WirelessControllerAccessControlListOutput) ToWirelessControllerAccessControlListOutputWithContext(ctx context.Context) WirelessControllerAccessControlListOutput {
	return o
}

func (o WirelessControllerAccessControlListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

func (o WirelessControllerAccessControlListOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o WirelessControllerAccessControlListOutput) Layer3Ipv4Rules() WirelessControllerAccessControlListLayer3Ipv4RuleArrayOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) WirelessControllerAccessControlListLayer3Ipv4RuleArrayOutput {
		return v.Layer3Ipv4Rules
	}).(WirelessControllerAccessControlListLayer3Ipv4RuleArrayOutput)
}

func (o WirelessControllerAccessControlListOutput) Layer3Ipv6Rules() WirelessControllerAccessControlListLayer3Ipv6RuleArrayOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) WirelessControllerAccessControlListLayer3Ipv6RuleArrayOutput {
		return v.Layer3Ipv6Rules
	}).(WirelessControllerAccessControlListLayer3Ipv6RuleArrayOutput)
}

func (o WirelessControllerAccessControlListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WirelessControllerAccessControlListOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WirelessControllerAccessControlList) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

type WirelessControllerAccessControlListArrayOutput struct{ *pulumi.OutputState }

func (WirelessControllerAccessControlListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WirelessControllerAccessControlList)(nil)).Elem()
}

func (o WirelessControllerAccessControlListArrayOutput) ToWirelessControllerAccessControlListArrayOutput() WirelessControllerAccessControlListArrayOutput {
	return o
}

func (o WirelessControllerAccessControlListArrayOutput) ToWirelessControllerAccessControlListArrayOutputWithContext(ctx context.Context) WirelessControllerAccessControlListArrayOutput {
	return o
}

func (o WirelessControllerAccessControlListArrayOutput) Index(i pulumi.IntInput) WirelessControllerAccessControlListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WirelessControllerAccessControlList {
		return vs[0].([]*WirelessControllerAccessControlList)[vs[1].(int)]
	}).(WirelessControllerAccessControlListOutput)
}

type WirelessControllerAccessControlListMapOutput struct{ *pulumi.OutputState }

func (WirelessControllerAccessControlListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WirelessControllerAccessControlList)(nil)).Elem()
}

func (o WirelessControllerAccessControlListMapOutput) ToWirelessControllerAccessControlListMapOutput() WirelessControllerAccessControlListMapOutput {
	return o
}

func (o WirelessControllerAccessControlListMapOutput) ToWirelessControllerAccessControlListMapOutputWithContext(ctx context.Context) WirelessControllerAccessControlListMapOutput {
	return o
}

func (o WirelessControllerAccessControlListMapOutput) MapIndex(k pulumi.StringInput) WirelessControllerAccessControlListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WirelessControllerAccessControlList {
		return vs[0].(map[string]*WirelessControllerAccessControlList)[vs[1].(string)]
	}).(WirelessControllerAccessControlListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerAccessControlListInput)(nil)).Elem(), &WirelessControllerAccessControlList{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerAccessControlListArrayInput)(nil)).Elem(), WirelessControllerAccessControlListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessControllerAccessControlListMapInput)(nil)).Elem(), WirelessControllerAccessControlListMap{})
	pulumi.RegisterOutputType(WirelessControllerAccessControlListOutput{})
	pulumi.RegisterOutputType(WirelessControllerAccessControlListArrayOutput{})
	pulumi.RegisterOutputType(WirelessControllerAccessControlListMapOutput{})
}
