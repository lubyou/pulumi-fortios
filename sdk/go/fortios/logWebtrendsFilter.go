// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LogWebtrendsFilter struct {
	pulumi.CustomResourceState

	Anomaly              pulumi.StringOutput                    `pulumi:"anomaly"`
	Dns                  pulumi.StringOutput                    `pulumi:"dns"`
	DynamicSortSubtable  pulumi.StringPtrOutput                 `pulumi:"dynamicSortSubtable"`
	Filter               pulumi.StringOutput                    `pulumi:"filter"`
	FilterType           pulumi.StringOutput                    `pulumi:"filterType"`
	ForwardTraffic       pulumi.StringOutput                    `pulumi:"forwardTraffic"`
	FreeStyles           LogWebtrendsFilterFreeStyleArrayOutput `pulumi:"freeStyles"`
	GetAllTables         pulumi.StringPtrOutput                 `pulumi:"getAllTables"`
	Gtp                  pulumi.StringOutput                    `pulumi:"gtp"`
	LocalTraffic         pulumi.StringOutput                    `pulumi:"localTraffic"`
	MulticastTraffic     pulumi.StringOutput                    `pulumi:"multicastTraffic"`
	NetscanDiscovery     pulumi.StringOutput                    `pulumi:"netscanDiscovery"`
	NetscanVulnerability pulumi.StringOutput                    `pulumi:"netscanVulnerability"`
	Severity             pulumi.StringOutput                    `pulumi:"severity"`
	SnifferTraffic       pulumi.StringOutput                    `pulumi:"snifferTraffic"`
	Ssh                  pulumi.StringOutput                    `pulumi:"ssh"`
	Vdomparam            pulumi.StringPtrOutput                 `pulumi:"vdomparam"`
	Voip                 pulumi.StringOutput                    `pulumi:"voip"`
	ZtnaTraffic          pulumi.StringOutput                    `pulumi:"ztnaTraffic"`
}

// NewLogWebtrendsFilter registers a new resource with the given unique name, arguments, and options.
func NewLogWebtrendsFilter(ctx *pulumi.Context,
	name string, args *LogWebtrendsFilterArgs, opts ...pulumi.ResourceOption) (*LogWebtrendsFilter, error) {
	if args == nil {
		args = &LogWebtrendsFilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogWebtrendsFilter
	err := ctx.RegisterResource("fortios:index/logWebtrendsFilter:LogWebtrendsFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogWebtrendsFilter gets an existing LogWebtrendsFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogWebtrendsFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogWebtrendsFilterState, opts ...pulumi.ResourceOption) (*LogWebtrendsFilter, error) {
	var resource LogWebtrendsFilter
	err := ctx.ReadResource("fortios:index/logWebtrendsFilter:LogWebtrendsFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogWebtrendsFilter resources.
type logWebtrendsFilterState struct {
	Anomaly              *string                       `pulumi:"anomaly"`
	Dns                  *string                       `pulumi:"dns"`
	DynamicSortSubtable  *string                       `pulumi:"dynamicSortSubtable"`
	Filter               *string                       `pulumi:"filter"`
	FilterType           *string                       `pulumi:"filterType"`
	ForwardTraffic       *string                       `pulumi:"forwardTraffic"`
	FreeStyles           []LogWebtrendsFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                       `pulumi:"getAllTables"`
	Gtp                  *string                       `pulumi:"gtp"`
	LocalTraffic         *string                       `pulumi:"localTraffic"`
	MulticastTraffic     *string                       `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                       `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                       `pulumi:"netscanVulnerability"`
	Severity             *string                       `pulumi:"severity"`
	SnifferTraffic       *string                       `pulumi:"snifferTraffic"`
	Ssh                  *string                       `pulumi:"ssh"`
	Vdomparam            *string                       `pulumi:"vdomparam"`
	Voip                 *string                       `pulumi:"voip"`
	ZtnaTraffic          *string                       `pulumi:"ztnaTraffic"`
}

type LogWebtrendsFilterState struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogWebtrendsFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogWebtrendsFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*logWebtrendsFilterState)(nil)).Elem()
}

type logWebtrendsFilterArgs struct {
	Anomaly              *string                       `pulumi:"anomaly"`
	Dns                  *string                       `pulumi:"dns"`
	DynamicSortSubtable  *string                       `pulumi:"dynamicSortSubtable"`
	Filter               *string                       `pulumi:"filter"`
	FilterType           *string                       `pulumi:"filterType"`
	ForwardTraffic       *string                       `pulumi:"forwardTraffic"`
	FreeStyles           []LogWebtrendsFilterFreeStyle `pulumi:"freeStyles"`
	GetAllTables         *string                       `pulumi:"getAllTables"`
	Gtp                  *string                       `pulumi:"gtp"`
	LocalTraffic         *string                       `pulumi:"localTraffic"`
	MulticastTraffic     *string                       `pulumi:"multicastTraffic"`
	NetscanDiscovery     *string                       `pulumi:"netscanDiscovery"`
	NetscanVulnerability *string                       `pulumi:"netscanVulnerability"`
	Severity             *string                       `pulumi:"severity"`
	SnifferTraffic       *string                       `pulumi:"snifferTraffic"`
	Ssh                  *string                       `pulumi:"ssh"`
	Vdomparam            *string                       `pulumi:"vdomparam"`
	Voip                 *string                       `pulumi:"voip"`
	ZtnaTraffic          *string                       `pulumi:"ztnaTraffic"`
}

// The set of arguments for constructing a LogWebtrendsFilter resource.
type LogWebtrendsFilterArgs struct {
	Anomaly              pulumi.StringPtrInput
	Dns                  pulumi.StringPtrInput
	DynamicSortSubtable  pulumi.StringPtrInput
	Filter               pulumi.StringPtrInput
	FilterType           pulumi.StringPtrInput
	ForwardTraffic       pulumi.StringPtrInput
	FreeStyles           LogWebtrendsFilterFreeStyleArrayInput
	GetAllTables         pulumi.StringPtrInput
	Gtp                  pulumi.StringPtrInput
	LocalTraffic         pulumi.StringPtrInput
	MulticastTraffic     pulumi.StringPtrInput
	NetscanDiscovery     pulumi.StringPtrInput
	NetscanVulnerability pulumi.StringPtrInput
	Severity             pulumi.StringPtrInput
	SnifferTraffic       pulumi.StringPtrInput
	Ssh                  pulumi.StringPtrInput
	Vdomparam            pulumi.StringPtrInput
	Voip                 pulumi.StringPtrInput
	ZtnaTraffic          pulumi.StringPtrInput
}

func (LogWebtrendsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logWebtrendsFilterArgs)(nil)).Elem()
}

type LogWebtrendsFilterInput interface {
	pulumi.Input

	ToLogWebtrendsFilterOutput() LogWebtrendsFilterOutput
	ToLogWebtrendsFilterOutputWithContext(ctx context.Context) LogWebtrendsFilterOutput
}

func (*LogWebtrendsFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**LogWebtrendsFilter)(nil)).Elem()
}

func (i *LogWebtrendsFilter) ToLogWebtrendsFilterOutput() LogWebtrendsFilterOutput {
	return i.ToLogWebtrendsFilterOutputWithContext(context.Background())
}

func (i *LogWebtrendsFilter) ToLogWebtrendsFilterOutputWithContext(ctx context.Context) LogWebtrendsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsFilterOutput)
}

func (i *LogWebtrendsFilter) ToOutput(ctx context.Context) pulumix.Output[*LogWebtrendsFilter] {
	return pulumix.Output[*LogWebtrendsFilter]{
		OutputState: i.ToLogWebtrendsFilterOutputWithContext(ctx).OutputState,
	}
}

// LogWebtrendsFilterArrayInput is an input type that accepts LogWebtrendsFilterArray and LogWebtrendsFilterArrayOutput values.
// You can construct a concrete instance of `LogWebtrendsFilterArrayInput` via:
//
//	LogWebtrendsFilterArray{ LogWebtrendsFilterArgs{...} }
type LogWebtrendsFilterArrayInput interface {
	pulumi.Input

	ToLogWebtrendsFilterArrayOutput() LogWebtrendsFilterArrayOutput
	ToLogWebtrendsFilterArrayOutputWithContext(context.Context) LogWebtrendsFilterArrayOutput
}

type LogWebtrendsFilterArray []LogWebtrendsFilterInput

func (LogWebtrendsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogWebtrendsFilter)(nil)).Elem()
}

func (i LogWebtrendsFilterArray) ToLogWebtrendsFilterArrayOutput() LogWebtrendsFilterArrayOutput {
	return i.ToLogWebtrendsFilterArrayOutputWithContext(context.Background())
}

func (i LogWebtrendsFilterArray) ToLogWebtrendsFilterArrayOutputWithContext(ctx context.Context) LogWebtrendsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsFilterArrayOutput)
}

func (i LogWebtrendsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]*LogWebtrendsFilter] {
	return pulumix.Output[[]*LogWebtrendsFilter]{
		OutputState: i.ToLogWebtrendsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

// LogWebtrendsFilterMapInput is an input type that accepts LogWebtrendsFilterMap and LogWebtrendsFilterMapOutput values.
// You can construct a concrete instance of `LogWebtrendsFilterMapInput` via:
//
//	LogWebtrendsFilterMap{ "key": LogWebtrendsFilterArgs{...} }
type LogWebtrendsFilterMapInput interface {
	pulumi.Input

	ToLogWebtrendsFilterMapOutput() LogWebtrendsFilterMapOutput
	ToLogWebtrendsFilterMapOutputWithContext(context.Context) LogWebtrendsFilterMapOutput
}

type LogWebtrendsFilterMap map[string]LogWebtrendsFilterInput

func (LogWebtrendsFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogWebtrendsFilter)(nil)).Elem()
}

func (i LogWebtrendsFilterMap) ToLogWebtrendsFilterMapOutput() LogWebtrendsFilterMapOutput {
	return i.ToLogWebtrendsFilterMapOutputWithContext(context.Background())
}

func (i LogWebtrendsFilterMap) ToLogWebtrendsFilterMapOutputWithContext(ctx context.Context) LogWebtrendsFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogWebtrendsFilterMapOutput)
}

func (i LogWebtrendsFilterMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogWebtrendsFilter] {
	return pulumix.Output[map[string]*LogWebtrendsFilter]{
		OutputState: i.ToLogWebtrendsFilterMapOutputWithContext(ctx).OutputState,
	}
}

type LogWebtrendsFilterOutput struct{ *pulumi.OutputState }

func (LogWebtrendsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogWebtrendsFilter)(nil)).Elem()
}

func (o LogWebtrendsFilterOutput) ToLogWebtrendsFilterOutput() LogWebtrendsFilterOutput {
	return o
}

func (o LogWebtrendsFilterOutput) ToLogWebtrendsFilterOutputWithContext(ctx context.Context) LogWebtrendsFilterOutput {
	return o
}

func (o LogWebtrendsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[*LogWebtrendsFilter] {
	return pulumix.Output[*LogWebtrendsFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogWebtrendsFilterOutput) Anomaly() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Anomaly }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) DynamicSortSubtable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringPtrOutput { return v.DynamicSortSubtable }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) ForwardTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.ForwardTraffic }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) FreeStyles() LogWebtrendsFilterFreeStyleArrayOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) LogWebtrendsFilterFreeStyleArrayOutput { return v.FreeStyles }).(LogWebtrendsFilterFreeStyleArrayOutput)
}

func (o LogWebtrendsFilterOutput) GetAllTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringPtrOutput { return v.GetAllTables }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterOutput) Gtp() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Gtp }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) LocalTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.LocalTraffic }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) MulticastTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.MulticastTraffic }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) NetscanDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.NetscanDiscovery }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) NetscanVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.NetscanVulnerability }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) SnifferTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.SnifferTraffic }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) Ssh() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Ssh }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringPtrOutput { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func (o LogWebtrendsFilterOutput) Voip() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.Voip }).(pulumi.StringOutput)
}

func (o LogWebtrendsFilterOutput) ZtnaTraffic() pulumi.StringOutput {
	return o.ApplyT(func(v *LogWebtrendsFilter) pulumi.StringOutput { return v.ZtnaTraffic }).(pulumi.StringOutput)
}

type LogWebtrendsFilterArrayOutput struct{ *pulumi.OutputState }

func (LogWebtrendsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogWebtrendsFilter)(nil)).Elem()
}

func (o LogWebtrendsFilterArrayOutput) ToLogWebtrendsFilterArrayOutput() LogWebtrendsFilterArrayOutput {
	return o
}

func (o LogWebtrendsFilterArrayOutput) ToLogWebtrendsFilterArrayOutputWithContext(ctx context.Context) LogWebtrendsFilterArrayOutput {
	return o
}

func (o LogWebtrendsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LogWebtrendsFilter] {
	return pulumix.Output[[]*LogWebtrendsFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogWebtrendsFilterArrayOutput) Index(i pulumi.IntInput) LogWebtrendsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogWebtrendsFilter {
		return vs[0].([]*LogWebtrendsFilter)[vs[1].(int)]
	}).(LogWebtrendsFilterOutput)
}

type LogWebtrendsFilterMapOutput struct{ *pulumi.OutputState }

func (LogWebtrendsFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogWebtrendsFilter)(nil)).Elem()
}

func (o LogWebtrendsFilterMapOutput) ToLogWebtrendsFilterMapOutput() LogWebtrendsFilterMapOutput {
	return o
}

func (o LogWebtrendsFilterMapOutput) ToLogWebtrendsFilterMapOutputWithContext(ctx context.Context) LogWebtrendsFilterMapOutput {
	return o
}

func (o LogWebtrendsFilterMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LogWebtrendsFilter] {
	return pulumix.Output[map[string]*LogWebtrendsFilter]{
		OutputState: o.OutputState,
	}
}

func (o LogWebtrendsFilterMapOutput) MapIndex(k pulumi.StringInput) LogWebtrendsFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogWebtrendsFilter {
		return vs[0].(map[string]*LogWebtrendsFilter)[vs[1].(string)]
	}).(LogWebtrendsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsFilterInput)(nil)).Elem(), &LogWebtrendsFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsFilterArrayInput)(nil)).Elem(), LogWebtrendsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogWebtrendsFilterMapInput)(nil)).Elem(), LogWebtrendsFilterMap{})
	pulumi.RegisterOutputType(LogWebtrendsFilterOutput{})
	pulumi.RegisterOutputType(LogWebtrendsFilterArrayOutput{})
	pulumi.RegisterOutputType(LogWebtrendsFilterMapOutput{})
}
