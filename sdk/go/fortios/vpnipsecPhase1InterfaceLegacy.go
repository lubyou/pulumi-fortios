// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"errors"
	"github.com/lubyou/pulumi-fortios/sdk/go/fortios/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type VPNIPsecPhase1InterfaceLegacy struct {
	pulumi.CustomResourceState

	Authmethod          pulumi.StringOutput      `pulumi:"authmethod"`
	AuthmethodRemote    pulumi.StringOutput      `pulumi:"authmethodRemote"`
	Certificates        pulumi.StringArrayOutput `pulumi:"certificates"`
	Comments            pulumi.StringPtrOutput   `pulumi:"comments"`
	Interface           pulumi.StringOutput      `pulumi:"interface"`
	Ipv4SplitExclude    pulumi.StringOutput      `pulumi:"ipv4SplitExclude"`
	Ipv4SplitInclude    pulumi.StringOutput      `pulumi:"ipv4SplitInclude"`
	ModeCfg             pulumi.StringOutput      `pulumi:"modeCfg"`
	Name                pulumi.StringOutput      `pulumi:"name"`
	Peer                pulumi.StringOutput      `pulumi:"peer"`
	Peergrp             pulumi.StringOutput      `pulumi:"peergrp"`
	Peerid              pulumi.StringOutput      `pulumi:"peerid"`
	Peertype            pulumi.StringOutput      `pulumi:"peertype"`
	Proposal            pulumi.StringOutput      `pulumi:"proposal"`
	Psksecret           pulumi.StringOutput      `pulumi:"psksecret"`
	RemoteGw            pulumi.StringOutput      `pulumi:"remoteGw"`
	SplitIncludeService pulumi.StringOutput      `pulumi:"splitIncludeService"`
	Type                pulumi.StringOutput      `pulumi:"type"`
	WizardType          pulumi.StringOutput      `pulumi:"wizardType"`
}

// NewVPNIPsecPhase1InterfaceLegacy registers a new resource with the given unique name, arguments, and options.
func NewVPNIPsecPhase1InterfaceLegacy(ctx *pulumi.Context,
	name string, args *VPNIPsecPhase1InterfaceLegacyArgs, opts ...pulumi.ResourceOption) (*VPNIPsecPhase1InterfaceLegacy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Psksecret == nil {
		return nil, errors.New("invalid value for required argument 'Psksecret'")
	}
	if args.RemoteGw == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGw'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VPNIPsecPhase1InterfaceLegacy
	err := ctx.RegisterResource("fortios:index/vPNIPsecPhase1InterfaceLegacy:VPNIPsecPhase1InterfaceLegacy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNIPsecPhase1InterfaceLegacy gets an existing VPNIPsecPhase1InterfaceLegacy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNIPsecPhase1InterfaceLegacy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNIPsecPhase1InterfaceLegacyState, opts ...pulumi.ResourceOption) (*VPNIPsecPhase1InterfaceLegacy, error) {
	var resource VPNIPsecPhase1InterfaceLegacy
	err := ctx.ReadResource("fortios:index/vPNIPsecPhase1InterfaceLegacy:VPNIPsecPhase1InterfaceLegacy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNIPsecPhase1InterfaceLegacy resources.
type vpnipsecPhase1InterfaceLegacyState struct {
	Authmethod          *string  `pulumi:"authmethod"`
	AuthmethodRemote    *string  `pulumi:"authmethodRemote"`
	Certificates        []string `pulumi:"certificates"`
	Comments            *string  `pulumi:"comments"`
	Interface           *string  `pulumi:"interface"`
	Ipv4SplitExclude    *string  `pulumi:"ipv4SplitExclude"`
	Ipv4SplitInclude    *string  `pulumi:"ipv4SplitInclude"`
	ModeCfg             *string  `pulumi:"modeCfg"`
	Name                *string  `pulumi:"name"`
	Peer                *string  `pulumi:"peer"`
	Peergrp             *string  `pulumi:"peergrp"`
	Peerid              *string  `pulumi:"peerid"`
	Peertype            *string  `pulumi:"peertype"`
	Proposal            *string  `pulumi:"proposal"`
	Psksecret           *string  `pulumi:"psksecret"`
	RemoteGw            *string  `pulumi:"remoteGw"`
	SplitIncludeService *string  `pulumi:"splitIncludeService"`
	Type                *string  `pulumi:"type"`
	WizardType          *string  `pulumi:"wizardType"`
}

type VPNIPsecPhase1InterfaceLegacyState struct {
	Authmethod          pulumi.StringPtrInput
	AuthmethodRemote    pulumi.StringPtrInput
	Certificates        pulumi.StringArrayInput
	Comments            pulumi.StringPtrInput
	Interface           pulumi.StringPtrInput
	Ipv4SplitExclude    pulumi.StringPtrInput
	Ipv4SplitInclude    pulumi.StringPtrInput
	ModeCfg             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Peer                pulumi.StringPtrInput
	Peergrp             pulumi.StringPtrInput
	Peerid              pulumi.StringPtrInput
	Peertype            pulumi.StringPtrInput
	Proposal            pulumi.StringPtrInput
	Psksecret           pulumi.StringPtrInput
	RemoteGw            pulumi.StringPtrInput
	SplitIncludeService pulumi.StringPtrInput
	Type                pulumi.StringPtrInput
	WizardType          pulumi.StringPtrInput
}

func (VPNIPsecPhase1InterfaceLegacyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase1InterfaceLegacyState)(nil)).Elem()
}

type vpnipsecPhase1InterfaceLegacyArgs struct {
	Authmethod          *string  `pulumi:"authmethod"`
	AuthmethodRemote    *string  `pulumi:"authmethodRemote"`
	Certificates        []string `pulumi:"certificates"`
	Comments            *string  `pulumi:"comments"`
	Interface           string   `pulumi:"interface"`
	Ipv4SplitExclude    *string  `pulumi:"ipv4SplitExclude"`
	Ipv4SplitInclude    *string  `pulumi:"ipv4SplitInclude"`
	ModeCfg             *string  `pulumi:"modeCfg"`
	Name                *string  `pulumi:"name"`
	Peer                *string  `pulumi:"peer"`
	Peergrp             *string  `pulumi:"peergrp"`
	Peerid              *string  `pulumi:"peerid"`
	Peertype            *string  `pulumi:"peertype"`
	Proposal            *string  `pulumi:"proposal"`
	Psksecret           string   `pulumi:"psksecret"`
	RemoteGw            string   `pulumi:"remoteGw"`
	SplitIncludeService *string  `pulumi:"splitIncludeService"`
	Type                string   `pulumi:"type"`
	WizardType          *string  `pulumi:"wizardType"`
}

// The set of arguments for constructing a VPNIPsecPhase1InterfaceLegacy resource.
type VPNIPsecPhase1InterfaceLegacyArgs struct {
	Authmethod          pulumi.StringPtrInput
	AuthmethodRemote    pulumi.StringPtrInput
	Certificates        pulumi.StringArrayInput
	Comments            pulumi.StringPtrInput
	Interface           pulumi.StringInput
	Ipv4SplitExclude    pulumi.StringPtrInput
	Ipv4SplitInclude    pulumi.StringPtrInput
	ModeCfg             pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Peer                pulumi.StringPtrInput
	Peergrp             pulumi.StringPtrInput
	Peerid              pulumi.StringPtrInput
	Peertype            pulumi.StringPtrInput
	Proposal            pulumi.StringPtrInput
	Psksecret           pulumi.StringInput
	RemoteGw            pulumi.StringInput
	SplitIncludeService pulumi.StringPtrInput
	Type                pulumi.StringInput
	WizardType          pulumi.StringPtrInput
}

func (VPNIPsecPhase1InterfaceLegacyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase1InterfaceLegacyArgs)(nil)).Elem()
}

type VPNIPsecPhase1InterfaceLegacyInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput
	ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput
}

func (*VPNIPsecPhase1InterfaceLegacy) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i *VPNIPsecPhase1InterfaceLegacy) ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(context.Background())
}

func (i *VPNIPsecPhase1InterfaceLegacy) ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyOutput)
}

func (i *VPNIPsecPhase1InterfaceLegacy) ToOutput(ctx context.Context) pulumix.Output[*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx).OutputState,
	}
}

// VPNIPsecPhase1InterfaceLegacyArrayInput is an input type that accepts VPNIPsecPhase1InterfaceLegacyArray and VPNIPsecPhase1InterfaceLegacyArrayOutput values.
// You can construct a concrete instance of `VPNIPsecPhase1InterfaceLegacyArrayInput` via:
//
//	VPNIPsecPhase1InterfaceLegacyArray{ VPNIPsecPhase1InterfaceLegacyArgs{...} }
type VPNIPsecPhase1InterfaceLegacyArrayInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput
	ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput
}

type VPNIPsecPhase1InterfaceLegacyArray []VPNIPsecPhase1InterfaceLegacyInput

func (VPNIPsecPhase1InterfaceLegacyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase1InterfaceLegacyArray) ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(context.Background())
}

func (i VPNIPsecPhase1InterfaceLegacyArray) ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyArrayOutput)
}

func (i VPNIPsecPhase1InterfaceLegacyArray) ToOutput(ctx context.Context) pulumix.Output[[]*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[[]*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(ctx).OutputState,
	}
}

// VPNIPsecPhase1InterfaceLegacyMapInput is an input type that accepts VPNIPsecPhase1InterfaceLegacyMap and VPNIPsecPhase1InterfaceLegacyMapOutput values.
// You can construct a concrete instance of `VPNIPsecPhase1InterfaceLegacyMapInput` via:
//
//	VPNIPsecPhase1InterfaceLegacyMap{ "key": VPNIPsecPhase1InterfaceLegacyArgs{...} }
type VPNIPsecPhase1InterfaceLegacyMapInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput
	ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput
}

type VPNIPsecPhase1InterfaceLegacyMap map[string]VPNIPsecPhase1InterfaceLegacyInput

func (VPNIPsecPhase1InterfaceLegacyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase1InterfaceLegacyMap) ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(context.Background())
}

func (i VPNIPsecPhase1InterfaceLegacyMap) ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyMapOutput)
}

func (i VPNIPsecPhase1InterfaceLegacyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[map[string]*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: i.ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(ctx).OutputState,
	}
}

type VPNIPsecPhase1InterfaceLegacyOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ToOutput(ctx context.Context) pulumix.Output[*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Authmethod() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Authmethod }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) AuthmethodRemote() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.AuthmethodRemote }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringArrayOutput { return v.Certificates }).(pulumi.StringArrayOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Ipv4SplitExclude() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Ipv4SplitExclude }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Ipv4SplitInclude() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Ipv4SplitInclude }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ModeCfg() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.ModeCfg }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Peer }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Peergrp() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Peergrp }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Peerid() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Peerid }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Peertype() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Peertype }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Proposal() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Proposal }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Psksecret() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Psksecret }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) RemoteGw() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.RemoteGw }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) SplitIncludeService() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.SplitIncludeService }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) WizardType() pulumi.StringOutput {
	return o.ApplyT(func(v *VPNIPsecPhase1InterfaceLegacy) pulumi.StringOutput { return v.WizardType }).(pulumi.StringOutput)
}

type VPNIPsecPhase1InterfaceLegacyArrayOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[[]*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) Index(i pulumi.IntInput) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VPNIPsecPhase1InterfaceLegacy {
		return vs[0].([]*VPNIPsecPhase1InterfaceLegacy)[vs[1].(int)]
	}).(VPNIPsecPhase1InterfaceLegacyOutput)
}

type VPNIPsecPhase1InterfaceLegacyMapOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*VPNIPsecPhase1InterfaceLegacy] {
	return pulumix.Output[map[string]*VPNIPsecPhase1InterfaceLegacy]{
		OutputState: o.OutputState,
	}
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) MapIndex(k pulumi.StringInput) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VPNIPsecPhase1InterfaceLegacy {
		return vs[0].(map[string]*VPNIPsecPhase1InterfaceLegacy)[vs[1].(string)]
	}).(VPNIPsecPhase1InterfaceLegacyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyInput)(nil)).Elem(), &VPNIPsecPhase1InterfaceLegacy{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyArrayInput)(nil)).Elem(), VPNIPsecPhase1InterfaceLegacyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyMapInput)(nil)).Elem(), VPNIPsecPhase1InterfaceLegacyMap{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyArrayOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyMapOutput{})
}
