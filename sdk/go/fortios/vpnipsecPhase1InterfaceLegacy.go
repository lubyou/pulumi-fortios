// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fortios

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to use phase1-interface to define a phase 1 definition for a route-based (interface mode) IPsec VPN tunnel that generates authentication and encryption keys automatically.
//
// !> **Warning:** The resource will be deprecated and replaced by new resource `VpnIpsecPhase1Interface`, we recommend that you use the new resource.
//
// ## Example Usage
//
// VPNIPsecPhase1InterfaceLegacy needs to be set with fortios_vpn_ipsec_phase2interface. See section fortios_vpn_ipsec_phase2interface.
type VPNIPsecPhase1InterfaceLegacy struct {
	pulumi.CustomResourceState

	// Authentication method.
	Authmethod pulumi.StringOutput `pulumi:"authmethod"`
	// Authentication method (remote side).
	AuthmethodRemote pulumi.StringOutput `pulumi:"authmethodRemote"`
	// Names of signed personal certificates.
	Certificates pulumi.StringArrayOutput `pulumi:"certificates"`
	// Comment.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringOutput `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringOutput `pulumi:"ipv4SplitInclude"`
	// Enable/disable configuration method.
	ModeCfg pulumi.StringOutput `pulumi:"modeCfg"`
	// IPsec remote gateway name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Accept this peer certificate.
	Peer pulumi.StringOutput `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp pulumi.StringOutput `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid pulumi.StringOutput `pulumi:"peerid"`
	// Accept this peer type.
	Peertype pulumi.StringOutput `pulumi:"peertype"`
	// Phase1 proposal.
	Proposal pulumi.StringOutput `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication.
	Psksecret pulumi.StringOutput `pulumi:"psksecret"`
	// IPv4 address of the remote gateway's external interface.
	RemoteGw pulumi.StringOutput `pulumi:"remoteGw"`
	// Split-include services.
	SplitIncludeService pulumi.StringOutput `pulumi:"splitIncludeService"`
	// Remote gateway type.
	Type pulumi.StringOutput `pulumi:"type"`
	// GUI VPN Wizard Type.
	WizardType pulumi.StringOutput `pulumi:"wizardType"`
}

// NewVPNIPsecPhase1InterfaceLegacy registers a new resource with the given unique name, arguments, and options.
func NewVPNIPsecPhase1InterfaceLegacy(ctx *pulumi.Context,
	name string, args *VPNIPsecPhase1InterfaceLegacyArgs, opts ...pulumi.ResourceOption) (*VPNIPsecPhase1InterfaceLegacy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Psksecret == nil {
		return nil, errors.New("invalid value for required argument 'Psksecret'")
	}
	if args.RemoteGw == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGw'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource VPNIPsecPhase1InterfaceLegacy
	err := ctx.RegisterResource("fortios:index/vPNIPsecPhase1InterfaceLegacy:VPNIPsecPhase1InterfaceLegacy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNIPsecPhase1InterfaceLegacy gets an existing VPNIPsecPhase1InterfaceLegacy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNIPsecPhase1InterfaceLegacy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNIPsecPhase1InterfaceLegacyState, opts ...pulumi.ResourceOption) (*VPNIPsecPhase1InterfaceLegacy, error) {
	var resource VPNIPsecPhase1InterfaceLegacy
	err := ctx.ReadResource("fortios:index/vPNIPsecPhase1InterfaceLegacy:VPNIPsecPhase1InterfaceLegacy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNIPsecPhase1InterfaceLegacy resources.
type vpnipsecPhase1InterfaceLegacyState struct {
	// Authentication method.
	Authmethod *string `pulumi:"authmethod"`
	// Authentication method (remote side).
	AuthmethodRemote *string `pulumi:"authmethodRemote"`
	// Names of signed personal certificates.
	Certificates []string `pulumi:"certificates"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface *string `pulumi:"interface"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude *string `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude *string `pulumi:"ipv4SplitInclude"`
	// Enable/disable configuration method.
	ModeCfg *string `pulumi:"modeCfg"`
	// IPsec remote gateway name.
	Name *string `pulumi:"name"`
	// Accept this peer certificate.
	Peer *string `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp *string `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid *string `pulumi:"peerid"`
	// Accept this peer type.
	Peertype *string `pulumi:"peertype"`
	// Phase1 proposal.
	Proposal *string `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication.
	Psksecret *string `pulumi:"psksecret"`
	// IPv4 address of the remote gateway's external interface.
	RemoteGw *string `pulumi:"remoteGw"`
	// Split-include services.
	SplitIncludeService *string `pulumi:"splitIncludeService"`
	// Remote gateway type.
	Type *string `pulumi:"type"`
	// GUI VPN Wizard Type.
	WizardType *string `pulumi:"wizardType"`
}

type VPNIPsecPhase1InterfaceLegacyState struct {
	// Authentication method.
	Authmethod pulumi.StringPtrInput
	// Authentication method (remote side).
	AuthmethodRemote pulumi.StringPtrInput
	// Names of signed personal certificates.
	Certificates pulumi.StringArrayInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringPtrInput
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringPtrInput
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringPtrInput
	// Enable/disable configuration method.
	ModeCfg pulumi.StringPtrInput
	// IPsec remote gateway name.
	Name pulumi.StringPtrInput
	// Accept this peer certificate.
	Peer pulumi.StringPtrInput
	// Accept this peer certificate group.
	Peergrp pulumi.StringPtrInput
	// Accept this peer identity.
	Peerid pulumi.StringPtrInput
	// Accept this peer type.
	Peertype pulumi.StringPtrInput
	// Phase1 proposal.
	Proposal pulumi.StringPtrInput
	// Pre-shared secret for PSK authentication.
	Psksecret pulumi.StringPtrInput
	// IPv4 address of the remote gateway's external interface.
	RemoteGw pulumi.StringPtrInput
	// Split-include services.
	SplitIncludeService pulumi.StringPtrInput
	// Remote gateway type.
	Type pulumi.StringPtrInput
	// GUI VPN Wizard Type.
	WizardType pulumi.StringPtrInput
}

func (VPNIPsecPhase1InterfaceLegacyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase1InterfaceLegacyState)(nil)).Elem()
}

type vpnipsecPhase1InterfaceLegacyArgs struct {
	// Authentication method.
	Authmethod *string `pulumi:"authmethod"`
	// Authentication method (remote side).
	AuthmethodRemote *string `pulumi:"authmethodRemote"`
	// Names of signed personal certificates.
	Certificates []string `pulumi:"certificates"`
	// Comment.
	Comments *string `pulumi:"comments"`
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface string `pulumi:"interface"`
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude *string `pulumi:"ipv4SplitExclude"`
	// IPv4 split-include subnets.
	Ipv4SplitInclude *string `pulumi:"ipv4SplitInclude"`
	// Enable/disable configuration method.
	ModeCfg *string `pulumi:"modeCfg"`
	// IPsec remote gateway name.
	Name *string `pulumi:"name"`
	// Accept this peer certificate.
	Peer *string `pulumi:"peer"`
	// Accept this peer certificate group.
	Peergrp *string `pulumi:"peergrp"`
	// Accept this peer identity.
	Peerid *string `pulumi:"peerid"`
	// Accept this peer type.
	Peertype *string `pulumi:"peertype"`
	// Phase1 proposal.
	Proposal *string `pulumi:"proposal"`
	// Pre-shared secret for PSK authentication.
	Psksecret string `pulumi:"psksecret"`
	// IPv4 address of the remote gateway's external interface.
	RemoteGw string `pulumi:"remoteGw"`
	// Split-include services.
	SplitIncludeService *string `pulumi:"splitIncludeService"`
	// Remote gateway type.
	Type string `pulumi:"type"`
	// GUI VPN Wizard Type.
	WizardType *string `pulumi:"wizardType"`
}

// The set of arguments for constructing a VPNIPsecPhase1InterfaceLegacy resource.
type VPNIPsecPhase1InterfaceLegacyArgs struct {
	// Authentication method.
	Authmethod pulumi.StringPtrInput
	// Authentication method (remote side).
	AuthmethodRemote pulumi.StringPtrInput
	// Names of signed personal certificates.
	Certificates pulumi.StringArrayInput
	// Comment.
	Comments pulumi.StringPtrInput
	// Local physical, aggregate, or VLAN outgoing interface.
	Interface pulumi.StringInput
	// IPv4 subnets that should not be sent over the IPsec tunnel.
	Ipv4SplitExclude pulumi.StringPtrInput
	// IPv4 split-include subnets.
	Ipv4SplitInclude pulumi.StringPtrInput
	// Enable/disable configuration method.
	ModeCfg pulumi.StringPtrInput
	// IPsec remote gateway name.
	Name pulumi.StringPtrInput
	// Accept this peer certificate.
	Peer pulumi.StringPtrInput
	// Accept this peer certificate group.
	Peergrp pulumi.StringPtrInput
	// Accept this peer identity.
	Peerid pulumi.StringPtrInput
	// Accept this peer type.
	Peertype pulumi.StringPtrInput
	// Phase1 proposal.
	Proposal pulumi.StringPtrInput
	// Pre-shared secret for PSK authentication.
	Psksecret pulumi.StringInput
	// IPv4 address of the remote gateway's external interface.
	RemoteGw pulumi.StringInput
	// Split-include services.
	SplitIncludeService pulumi.StringPtrInput
	// Remote gateway type.
	Type pulumi.StringInput
	// GUI VPN Wizard Type.
	WizardType pulumi.StringPtrInput
}

func (VPNIPsecPhase1InterfaceLegacyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnipsecPhase1InterfaceLegacyArgs)(nil)).Elem()
}

type VPNIPsecPhase1InterfaceLegacyInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput
	ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput
}

func (*VPNIPsecPhase1InterfaceLegacy) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i *VPNIPsecPhase1InterfaceLegacy) ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(context.Background())
}

func (i *VPNIPsecPhase1InterfaceLegacy) ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyOutput)
}

// VPNIPsecPhase1InterfaceLegacyArrayInput is an input type that accepts VPNIPsecPhase1InterfaceLegacyArray and VPNIPsecPhase1InterfaceLegacyArrayOutput values.
// You can construct a concrete instance of `VPNIPsecPhase1InterfaceLegacyArrayInput` via:
//
//          VPNIPsecPhase1InterfaceLegacyArray{ VPNIPsecPhase1InterfaceLegacyArgs{...} }
type VPNIPsecPhase1InterfaceLegacyArrayInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput
	ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput
}

type VPNIPsecPhase1InterfaceLegacyArray []VPNIPsecPhase1InterfaceLegacyInput

func (VPNIPsecPhase1InterfaceLegacyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase1InterfaceLegacyArray) ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(context.Background())
}

func (i VPNIPsecPhase1InterfaceLegacyArray) ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyArrayOutput)
}

// VPNIPsecPhase1InterfaceLegacyMapInput is an input type that accepts VPNIPsecPhase1InterfaceLegacyMap and VPNIPsecPhase1InterfaceLegacyMapOutput values.
// You can construct a concrete instance of `VPNIPsecPhase1InterfaceLegacyMapInput` via:
//
//          VPNIPsecPhase1InterfaceLegacyMap{ "key": VPNIPsecPhase1InterfaceLegacyArgs{...} }
type VPNIPsecPhase1InterfaceLegacyMapInput interface {
	pulumi.Input

	ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput
	ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput
}

type VPNIPsecPhase1InterfaceLegacyMap map[string]VPNIPsecPhase1InterfaceLegacyInput

func (VPNIPsecPhase1InterfaceLegacyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (i VPNIPsecPhase1InterfaceLegacyMap) ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput {
	return i.ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(context.Background())
}

func (i VPNIPsecPhase1InterfaceLegacyMap) ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNIPsecPhase1InterfaceLegacyMapOutput)
}

type VPNIPsecPhase1InterfaceLegacyOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ToVPNIPsecPhase1InterfaceLegacyOutput() VPNIPsecPhase1InterfaceLegacyOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyOutput) ToVPNIPsecPhase1InterfaceLegacyOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyOutput {
	return o
}

type VPNIPsecPhase1InterfaceLegacyArrayOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) ToVPNIPsecPhase1InterfaceLegacyArrayOutput() VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) ToVPNIPsecPhase1InterfaceLegacyArrayOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyArrayOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyArrayOutput) Index(i pulumi.IntInput) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VPNIPsecPhase1InterfaceLegacy {
		return vs[0].([]*VPNIPsecPhase1InterfaceLegacy)[vs[1].(int)]
	}).(VPNIPsecPhase1InterfaceLegacyOutput)
}

type VPNIPsecPhase1InterfaceLegacyMapOutput struct{ *pulumi.OutputState }

func (VPNIPsecPhase1InterfaceLegacyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VPNIPsecPhase1InterfaceLegacy)(nil)).Elem()
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) ToVPNIPsecPhase1InterfaceLegacyMapOutput() VPNIPsecPhase1InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) ToVPNIPsecPhase1InterfaceLegacyMapOutputWithContext(ctx context.Context) VPNIPsecPhase1InterfaceLegacyMapOutput {
	return o
}

func (o VPNIPsecPhase1InterfaceLegacyMapOutput) MapIndex(k pulumi.StringInput) VPNIPsecPhase1InterfaceLegacyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VPNIPsecPhase1InterfaceLegacy {
		return vs[0].(map[string]*VPNIPsecPhase1InterfaceLegacy)[vs[1].(string)]
	}).(VPNIPsecPhase1InterfaceLegacyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyInput)(nil)).Elem(), &VPNIPsecPhase1InterfaceLegacy{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyArrayInput)(nil)).Elem(), VPNIPsecPhase1InterfaceLegacyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VPNIPsecPhase1InterfaceLegacyMapInput)(nil)).Elem(), VPNIPsecPhase1InterfaceLegacyMap{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyArrayOutput{})
	pulumi.RegisterOutputType(VPNIPsecPhase1InterfaceLegacyMapOutput{})
}
