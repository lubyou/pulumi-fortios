// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * CA certificate.
 *
 * ## Import
 *
 * Certificate Ca can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/certificateCa:CertificateCa labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class CertificateCa extends pulumi.CustomResource {
    /**
     * Get an existing CertificateCa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateCaState, opts?: pulumi.CustomResourceOptions): CertificateCa {
        return new CertificateCa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/certificateCa:CertificateCa';

    /**
     * Returns true if the given object is an instance of CertificateCa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateCa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateCa.__pulumiType;
    }

    /**
     * Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
     */
    public readonly autoUpdateDays!: pulumi.Output<number>;
    /**
     * Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
     */
    public readonly autoUpdateDaysWarning!: pulumi.Output<number>;
    /**
     * CA certificate as a PEM file.
     */
    public readonly ca!: pulumi.Output<string>;
    /**
     * Time at which CA was last updated.
     */
    public readonly lastUpdated!: pulumi.Output<number>;
    /**
     * Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
     */
    public readonly range!: pulumi.Output<string>;
    /**
     * URL of the SCEP server.
     */
    public readonly scepUrl!: pulumi.Output<string>;
    /**
     * CA certificate source type.
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * Source IP address for communications to the SCEP server.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
     */
    public readonly sslInspectionTrusted!: pulumi.Output<string>;
    /**
     * Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
     */
    public readonly trusted!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a CertificateCa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateCaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateCaArgs | CertificateCaState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateCaState | undefined;
            inputs["autoUpdateDays"] = state ? state.autoUpdateDays : undefined;
            inputs["autoUpdateDaysWarning"] = state ? state.autoUpdateDaysWarning : undefined;
            inputs["ca"] = state ? state.ca : undefined;
            inputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["range"] = state ? state.range : undefined;
            inputs["scepUrl"] = state ? state.scepUrl : undefined;
            inputs["source"] = state ? state.source : undefined;
            inputs["sourceIp"] = state ? state.sourceIp : undefined;
            inputs["sslInspectionTrusted"] = state ? state.sslInspectionTrusted : undefined;
            inputs["trusted"] = state ? state.trusted : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as CertificateCaArgs | undefined;
            if ((!args || args.ca === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ca'");
            }
            inputs["autoUpdateDays"] = args ? args.autoUpdateDays : undefined;
            inputs["autoUpdateDaysWarning"] = args ? args.autoUpdateDaysWarning : undefined;
            inputs["ca"] = args ? args.ca : undefined;
            inputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["range"] = args ? args.range : undefined;
            inputs["scepUrl"] = args ? args.scepUrl : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["sourceIp"] = args ? args.sourceIp : undefined;
            inputs["sslInspectionTrusted"] = args ? args.sslInspectionTrusted : undefined;
            inputs["trusted"] = args ? args.trusted : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CertificateCa.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CertificateCa resources.
 */
export interface CertificateCaState {
    /**
     * Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
     */
    autoUpdateDays?: pulumi.Input<number>;
    /**
     * Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
     */
    autoUpdateDaysWarning?: pulumi.Input<number>;
    /**
     * CA certificate as a PEM file.
     */
    ca?: pulumi.Input<string>;
    /**
     * Time at which CA was last updated.
     */
    lastUpdated?: pulumi.Input<number>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
     */
    range?: pulumi.Input<string>;
    /**
     * URL of the SCEP server.
     */
    scepUrl?: pulumi.Input<string>;
    /**
     * CA certificate source type.
     */
    source?: pulumi.Input<string>;
    /**
     * Source IP address for communications to the SCEP server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
     */
    sslInspectionTrusted?: pulumi.Input<string>;
    /**
     * Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
     */
    trusted?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CertificateCa resource.
 */
export interface CertificateCaArgs {
    /**
     * Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).
     */
    autoUpdateDays?: pulumi.Input<number>;
    /**
     * Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).
     */
    autoUpdateDaysWarning?: pulumi.Input<number>;
    /**
     * CA certificate as a PEM file.
     */
    ca: pulumi.Input<string>;
    /**
     * Time at which CA was last updated.
     */
    lastUpdated?: pulumi.Input<number>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Either global or VDOM IP address range for the CA certificate. Valid values: `global`, `vdom`.
     */
    range?: pulumi.Input<string>;
    /**
     * URL of the SCEP server.
     */
    scepUrl?: pulumi.Input<string>;
    /**
     * CA certificate source type.
     */
    source?: pulumi.Input<string>;
    /**
     * Source IP address for communications to the SCEP server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Enable/disable this CA as a trusted CA for SSL inspection. Valid values: `enable`, `disable`.
     */
    sslInspectionTrusted?: pulumi.Input<string>;
    /**
     * Enable/disable as a trusted CA. Valid values: `enable`, `disable`.
     */
    trusted?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
