// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure file-filter profiles. Applies to FortiOS Version `>= 6.4.2`.
 *
 * ## Import
 *
 * FileFilter Profile can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/fileFilterProfile:FileFilterProfile labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FileFilterProfile extends pulumi.CustomResource {
    /**
     * Get an existing FileFilterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileFilterProfileState, opts?: pulumi.CustomResourceOptions): FileFilterProfile {
        return new FileFilterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fileFilterProfile:FileFilterProfile';

    /**
     * Returns true if the given object is an instance of FileFilterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileFilterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileFilterProfile.__pulumiType;
    }

    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable file-filter extended logging. Valid values: `disable`, `enable`.
     */
    public readonly extendedLog!: pulumi.Output<string>;
    /**
     * Flow/proxy feature set. Valid values: `flow`, `proxy`.
     */
    public readonly featureSet!: pulumi.Output<string>;
    /**
     * Enable/disable file-filter logging. Valid values: `disable`, `enable`.
     */
    public readonly log!: pulumi.Output<string>;
    /**
     * File type name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Replacement message group
     */
    public readonly replacemsgGroup!: pulumi.Output<string>;
    /**
     * File filter rules. The structure of `rules` block is documented below.
     */
    public readonly rules!: pulumi.Output<outputs.FileFilterProfileRule[] | undefined>;
    /**
     * Enable/disable archive contents scan. (Not for CIFS) Valid values: `disable`, `enable`.
     */
    public readonly scanArchiveContents!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FileFilterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FileFilterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileFilterProfileArgs | FileFilterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileFilterProfileState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["extendedLog"] = state ? state.extendedLog : undefined;
            resourceInputs["featureSet"] = state ? state.featureSet : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replacemsgGroup"] = state ? state.replacemsgGroup : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["scanArchiveContents"] = state ? state.scanArchiveContents : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FileFilterProfileArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["extendedLog"] = args ? args.extendedLog : undefined;
            resourceInputs["featureSet"] = args ? args.featureSet : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replacemsgGroup"] = args ? args.replacemsgGroup : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["scanArchiveContents"] = args ? args.scanArchiveContents : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileFilterProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileFilterProfile resources.
 */
export interface FileFilterProfileState {
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable file-filter extended logging. Valid values: `disable`, `enable`.
     */
    extendedLog?: pulumi.Input<string>;
    /**
     * Flow/proxy feature set. Valid values: `flow`, `proxy`.
     */
    featureSet?: pulumi.Input<string>;
    /**
     * Enable/disable file-filter logging. Valid values: `disable`, `enable`.
     */
    log?: pulumi.Input<string>;
    /**
     * File type name.
     */
    name?: pulumi.Input<string>;
    /**
     * Replacement message group
     */
    replacemsgGroup?: pulumi.Input<string>;
    /**
     * File filter rules. The structure of `rules` block is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.FileFilterProfileRule>[]>;
    /**
     * Enable/disable archive contents scan. (Not for CIFS) Valid values: `disable`, `enable`.
     */
    scanArchiveContents?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileFilterProfile resource.
 */
export interface FileFilterProfileArgs {
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable file-filter extended logging. Valid values: `disable`, `enable`.
     */
    extendedLog?: pulumi.Input<string>;
    /**
     * Flow/proxy feature set. Valid values: `flow`, `proxy`.
     */
    featureSet?: pulumi.Input<string>;
    /**
     * Enable/disable file-filter logging. Valid values: `disable`, `enable`.
     */
    log?: pulumi.Input<string>;
    /**
     * File type name.
     */
    name?: pulumi.Input<string>;
    /**
     * Replacement message group
     */
    replacemsgGroup?: pulumi.Input<string>;
    /**
     * File filter rules. The structure of `rules` block is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.FileFilterProfileRule>[]>;
    /**
     * Enable/disable archive contents scan. (Not for CIFS) Valid values: `disable`, `enable`.
     */
    scanArchiveContents?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
