// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Onetime schedule configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.FirewallScheduleOnetime("trname", {
 *     color: 0,
 *     end: "00:00 2020/12/12",
 *     expirationDays: 2,
 *     start: "00:00 2010/12/12",
 * });
 * ```
 *
 * ## Import
 *
 * FirewallSchedule Onetime can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/firewallScheduleOnetime:FirewallScheduleOnetime labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FirewallScheduleOnetime extends pulumi.CustomResource {
    /**
     * Get an existing FirewallScheduleOnetime resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallScheduleOnetimeState, opts?: pulumi.CustomResourceOptions): FirewallScheduleOnetime {
        return new FirewallScheduleOnetime(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallScheduleOnetime:FirewallScheduleOnetime';

    /**
     * Returns true if the given object is an instance of FirewallScheduleOnetime.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallScheduleOnetime {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallScheduleOnetime.__pulumiType;
    }

    /**
     * Color of icon on the GUI.
     */
    public readonly color!: pulumi.Output<number>;
    /**
     * Schedule end date and time, format hh:mm yyyy/mm/dd.
     */
    public readonly end!: pulumi.Output<string>;
    /**
     * Write an event log message this many days before the schedule expires.
     */
    public readonly expirationDays!: pulumi.Output<number>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    public readonly fabricObject!: pulumi.Output<string>;
    /**
     * Onetime schedule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Schedule start date and time, format hh:mm yyyy/mm/dd.
     */
    public readonly start!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallScheduleOnetime resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallScheduleOnetimeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallScheduleOnetimeArgs | FirewallScheduleOnetimeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallScheduleOnetimeState | undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["end"] = state ? state.end : undefined;
            resourceInputs["expirationDays"] = state ? state.expirationDays : undefined;
            resourceInputs["fabricObject"] = state ? state.fabricObject : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["start"] = state ? state.start : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallScheduleOnetimeArgs | undefined;
            if ((!args || args.end === undefined) && !opts.urn) {
                throw new Error("Missing required property 'end'");
            }
            if ((!args || args.start === undefined) && !opts.urn) {
                throw new Error("Missing required property 'start'");
            }
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["end"] = args ? args.end : undefined;
            resourceInputs["expirationDays"] = args ? args.expirationDays : undefined;
            resourceInputs["fabricObject"] = args ? args.fabricObject : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["start"] = args ? args.start : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallScheduleOnetime.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallScheduleOnetime resources.
 */
export interface FirewallScheduleOnetimeState {
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Schedule end date and time, format hh:mm yyyy/mm/dd.
     */
    end?: pulumi.Input<string>;
    /**
     * Write an event log message this many days before the schedule expires.
     */
    expirationDays?: pulumi.Input<number>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    fabricObject?: pulumi.Input<string>;
    /**
     * Onetime schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Schedule start date and time, format hh:mm yyyy/mm/dd.
     */
    start?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallScheduleOnetime resource.
 */
export interface FirewallScheduleOnetimeArgs {
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Schedule end date and time, format hh:mm yyyy/mm/dd.
     */
    end: pulumi.Input<string>;
    /**
     * Write an event log message this many days before the schedule expires.
     */
    expirationDays?: pulumi.Input<number>;
    /**
     * Security Fabric global object setting. Valid values: `enable`, `disable`.
     */
    fabricObject?: pulumi.Input<string>;
    /**
     * Onetime schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Schedule start date and time, format hh:mm yyyy/mm/dd.
     */
    start: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
