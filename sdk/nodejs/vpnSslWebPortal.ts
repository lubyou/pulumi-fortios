// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Portal.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.VpnSslWebPortal("trname", {
 *     allowUserAccess: "web ftp smb sftp telnet ssh vnc rdp ping citrix portforward",
 *     autoConnect: "disable",
 *     customizeForticlientDownloadUrl: "disable",
 *     displayBookmark: "enable",
 *     displayConnectionTools: "enable",
 *     displayHistory: "enable",
 *     displayStatus: "enable",
 *     dnsServer1: "0.0.0.0",
 *     dnsServer2: "0.0.0.0",
 *     exclusiveRouting: "disable",
 *     forticlientDownload: "enable",
 *     forticlientDownloadMethod: "direct",
 *     heading: "SSL-VPN Portal",
 *     hideSsoCredential: "enable",
 *     hostCheck: "none",
 *     ipMode: "range",
 *     ipPools: [{
 *         name: "SSLVPN_TUNNEL_ADDR1",
 *     }],
 *     ipv6DnsServer1: "::",
 *     ipv6DnsServer2: "::",
 *     ipv6ExclusiveRouting: "disable",
 *     ipv6Pools: [{
 *         name: "SSLVPN_TUNNEL_IPv6_ADDR1",
 *     }],
 *     ipv6ServiceRestriction: "disable",
 *     ipv6SplitTunneling: "enable",
 *     ipv6TunnelMode: "enable",
 *     ipv6WinsServer1: "::",
 *     ipv6WinsServer2: "::",
 *     keepAlive: "disable",
 *     limitUserLogins: "disable",
 *     macAddrAction: "allow",
 *     macAddrCheck: "disable",
 *     osCheck: "disable",
 *     savePassword: "disable",
 *     serviceRestriction: "disable",
 *     skipCheckForBrowser: "enable",
 *     skipCheckForUnsupportedOs: "enable",
 *     smbNtlmv1Auth: "disable",
 *     smbv1: "disable",
 *     splitTunneling: "enable",
 *     theme: "blue",
 *     tunnelMode: "enable",
 *     userBookmark: "enable",
 *     userGroupBookmark: "enable",
 *     webMode: "disable",
 *     winsServer1: "0.0.0.0",
 *     winsServer2: "0.0.0.0",
 * });
 * ```
 *
 * ## Import
 *
 * VpnSslWeb Portal can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/vpnSslWebPortal:VpnSslWebPortal labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class VpnSslWebPortal extends pulumi.CustomResource {
    /**
     * Get an existing VpnSslWebPortal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnSslWebPortalState, opts?: pulumi.CustomResourceOptions): VpnSslWebPortal {
        return new VpnSslWebPortal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/vpnSslWebPortal:VpnSslWebPortal';

    /**
     * Returns true if the given object is an instance of VpnSslWebPortal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnSslWebPortal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnSslWebPortal.__pulumiType;
    }

    /**
     * Allow user access to SSL-VPN applications. Valid values: `web`, `ftp`, `smb`, `sftp`, `telnet`, `ssh`, `vnc`, `rdp`, `ping`, `citrix`, `portforward`.
     */
    public readonly allowUserAccess!: pulumi.Output<string>;
    /**
     * Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
     */
    public readonly autoConnect!: pulumi.Output<string>;
    /**
     * Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
     */
    public readonly bookmarkGroups!: pulumi.Output<outputs.VpnSslWebPortalBookmarkGroup[] | undefined>;
    /**
     * Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
     */
    public readonly customLang!: pulumi.Output<string>;
    /**
     * Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
     */
    public readonly customizeForticlientDownloadUrl!: pulumi.Output<string>;
    /**
     * Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
     */
    public readonly displayBookmark!: pulumi.Output<string>;
    /**
     * Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
     */
    public readonly displayConnectionTools!: pulumi.Output<string>;
    /**
     * Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
     */
    public readonly displayHistory!: pulumi.Output<string>;
    /**
     * Enable to display the web portal status widget. Valid values: `enable`, `disable`.
     */
    public readonly displayStatus!: pulumi.Output<string>;
    /**
     * DNS server 1.
     */
    public readonly dnsServer1!: pulumi.Output<string>;
    /**
     * DNS server 2.
     */
    public readonly dnsServer2!: pulumi.Output<string>;
    /**
     * DNS suffix.
     */
    public readonly dnsSuffix!: pulumi.Output<string | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    public readonly exclusiveRouting!: pulumi.Output<string>;
    /**
     * Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
     */
    public readonly forticlientDownload!: pulumi.Output<string>;
    /**
     * FortiClient download method. Valid values: `direct`, `ssl-vpn`.
     */
    public readonly forticlientDownloadMethod!: pulumi.Output<string>;
    /**
     * Web portal heading message.
     */
    public readonly heading!: pulumi.Output<string>;
    /**
     * Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
     */
    public readonly hideSsoCredential!: pulumi.Output<string>;
    /**
     * Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
     */
    public readonly hostCheck!: pulumi.Output<string>;
    /**
     * Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
     */
    public readonly hostCheckInterval!: pulumi.Output<number>;
    /**
     * One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
     */
    public readonly hostCheckPolicies!: pulumi.Output<outputs.VpnSslWebPortalHostCheckPolicy[] | undefined>;
    /**
     * Method by which users of this SSL-VPN tunnel obtain IP addresses. Valid values: `range`, `user-group`.
     */
    public readonly ipMode!: pulumi.Output<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
     */
    public readonly ipPools!: pulumi.Output<outputs.VpnSslWebPortalIpPool[] | undefined>;
    /**
     * IPv6 DNS server 1.
     */
    public readonly ipv6DnsServer1!: pulumi.Output<string>;
    /**
     * IPv6 DNS server 2.
     */
    public readonly ipv6DnsServer2!: pulumi.Output<string>;
    /**
     * Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    public readonly ipv6ExclusiveRouting!: pulumi.Output<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
     */
    public readonly ipv6Pools!: pulumi.Output<outputs.VpnSslWebPortalIpv6Pool[] | undefined>;
    /**
     * Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
     */
    public readonly ipv6ServiceRestriction!: pulumi.Output<string>;
    /**
     * Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
     */
    public readonly ipv6SplitTunneling!: pulumi.Output<string>;
    /**
     * IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
     */
    public readonly ipv6SplitTunnelingRoutingAddresses!: pulumi.Output<outputs.VpnSslWebPortalIpv6SplitTunnelingRoutingAddress[] | undefined>;
    /**
     * Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
     */
    public readonly ipv6SplitTunnelingRoutingNegate!: pulumi.Output<string>;
    /**
     * Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    public readonly ipv6TunnelMode!: pulumi.Output<string>;
    /**
     * IPv6 WINS server 1.
     */
    public readonly ipv6WinsServer1!: pulumi.Output<string>;
    /**
     * IPv6 WINS server 2.
     */
    public readonly ipv6WinsServer2!: pulumi.Output<string>;
    /**
     * Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
     */
    public readonly keepAlive!: pulumi.Output<string>;
    /**
     * Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
     */
    public readonly limitUserLogins!: pulumi.Output<string>;
    /**
     * Client MAC address action. Valid values: `allow`, `deny`.
     */
    public readonly macAddrAction!: pulumi.Output<string>;
    /**
     * Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
     */
    public readonly macAddrCheck!: pulumi.Output<string>;
    /**
     * Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
     */
    public readonly macAddrCheckRules!: pulumi.Output<outputs.VpnSslWebPortalMacAddrCheckRule[] | undefined>;
    /**
     * Download URL for Mac FortiClient.
     */
    public readonly macosForticlientDownloadUrl!: pulumi.Output<string | undefined>;
    /**
     * Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
     */
    public readonly osCheck!: pulumi.Output<string>;
    /**
     * SSL VPN OS checks. The structure of `osCheckList` block is documented below.
     */
    public readonly osCheckLists!: pulumi.Output<outputs.VpnSslWebPortalOsCheckList[] | undefined>;
    /**
     * Client login redirect URL.
     */
    public readonly redirUrl!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
     */
    public readonly savePassword!: pulumi.Output<string>;
    /**
     * Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
     */
    public readonly serviceRestriction!: pulumi.Output<string>;
    /**
     * Enable to skip host check for browser support. Valid values: `enable`, `disable`.
     */
    public readonly skipCheckForBrowser!: pulumi.Output<string>;
    /**
     * Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
     */
    public readonly skipCheckForUnsupportedOs!: pulumi.Output<string>;
    /**
     * SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    public readonly smbMaxVersion!: pulumi.Output<string>;
    /**
     * SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    public readonly smbMinVersion!: pulumi.Output<string>;
    /**
     * Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    public readonly smbNtlmv1Auth!: pulumi.Output<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    public readonly smbv1!: pulumi.Output<string>;
    /**
     * Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
     */
    public readonly splitDns!: pulumi.Output<outputs.VpnSslWebPortalSplitDn[] | undefined>;
    /**
     * Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
     */
    public readonly splitTunneling!: pulumi.Output<string>;
    /**
     * IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
     */
    public readonly splitTunnelingRoutingAddresses!: pulumi.Output<outputs.VpnSslWebPortalSplitTunnelingRoutingAddress[] | undefined>;
    /**
     * Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
     */
    public readonly splitTunnelingRoutingNegate!: pulumi.Output<string>;
    /**
     * Web portal color scheme.
     */
    public readonly theme!: pulumi.Output<string>;
    /**
     * Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
     */
    public readonly transformBackwardSlashes!: pulumi.Output<string>;
    /**
     * Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    public readonly tunnelMode!: pulumi.Output<string>;
    /**
     * Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
     */
    public readonly useSdwan!: pulumi.Output<string>;
    /**
     * Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
     */
    public readonly userBookmark!: pulumi.Output<string>;
    /**
     * Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
     */
    public readonly userGroupBookmark!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
     */
    public readonly webMode!: pulumi.Output<string>;
    /**
     * Download URL for Windows FortiClient.
     */
    public readonly windowsForticlientDownloadUrl!: pulumi.Output<string | undefined>;
    /**
     * IPv4 WINS server 1.
     */
    public readonly winsServer1!: pulumi.Output<string>;
    /**
     * IPv4 WINS server 1.
     */
    public readonly winsServer2!: pulumi.Output<string>;

    /**
     * Create a VpnSslWebPortal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpnSslWebPortalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnSslWebPortalArgs | VpnSslWebPortalState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnSslWebPortalState | undefined;
            inputs["allowUserAccess"] = state ? state.allowUserAccess : undefined;
            inputs["autoConnect"] = state ? state.autoConnect : undefined;
            inputs["bookmarkGroups"] = state ? state.bookmarkGroups : undefined;
            inputs["customLang"] = state ? state.customLang : undefined;
            inputs["customizeForticlientDownloadUrl"] = state ? state.customizeForticlientDownloadUrl : undefined;
            inputs["displayBookmark"] = state ? state.displayBookmark : undefined;
            inputs["displayConnectionTools"] = state ? state.displayConnectionTools : undefined;
            inputs["displayHistory"] = state ? state.displayHistory : undefined;
            inputs["displayStatus"] = state ? state.displayStatus : undefined;
            inputs["dnsServer1"] = state ? state.dnsServer1 : undefined;
            inputs["dnsServer2"] = state ? state.dnsServer2 : undefined;
            inputs["dnsSuffix"] = state ? state.dnsSuffix : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["exclusiveRouting"] = state ? state.exclusiveRouting : undefined;
            inputs["forticlientDownload"] = state ? state.forticlientDownload : undefined;
            inputs["forticlientDownloadMethod"] = state ? state.forticlientDownloadMethod : undefined;
            inputs["heading"] = state ? state.heading : undefined;
            inputs["hideSsoCredential"] = state ? state.hideSsoCredential : undefined;
            inputs["hostCheck"] = state ? state.hostCheck : undefined;
            inputs["hostCheckInterval"] = state ? state.hostCheckInterval : undefined;
            inputs["hostCheckPolicies"] = state ? state.hostCheckPolicies : undefined;
            inputs["ipMode"] = state ? state.ipMode : undefined;
            inputs["ipPools"] = state ? state.ipPools : undefined;
            inputs["ipv6DnsServer1"] = state ? state.ipv6DnsServer1 : undefined;
            inputs["ipv6DnsServer2"] = state ? state.ipv6DnsServer2 : undefined;
            inputs["ipv6ExclusiveRouting"] = state ? state.ipv6ExclusiveRouting : undefined;
            inputs["ipv6Pools"] = state ? state.ipv6Pools : undefined;
            inputs["ipv6ServiceRestriction"] = state ? state.ipv6ServiceRestriction : undefined;
            inputs["ipv6SplitTunneling"] = state ? state.ipv6SplitTunneling : undefined;
            inputs["ipv6SplitTunnelingRoutingAddresses"] = state ? state.ipv6SplitTunnelingRoutingAddresses : undefined;
            inputs["ipv6SplitTunnelingRoutingNegate"] = state ? state.ipv6SplitTunnelingRoutingNegate : undefined;
            inputs["ipv6TunnelMode"] = state ? state.ipv6TunnelMode : undefined;
            inputs["ipv6WinsServer1"] = state ? state.ipv6WinsServer1 : undefined;
            inputs["ipv6WinsServer2"] = state ? state.ipv6WinsServer2 : undefined;
            inputs["keepAlive"] = state ? state.keepAlive : undefined;
            inputs["limitUserLogins"] = state ? state.limitUserLogins : undefined;
            inputs["macAddrAction"] = state ? state.macAddrAction : undefined;
            inputs["macAddrCheck"] = state ? state.macAddrCheck : undefined;
            inputs["macAddrCheckRules"] = state ? state.macAddrCheckRules : undefined;
            inputs["macosForticlientDownloadUrl"] = state ? state.macosForticlientDownloadUrl : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["osCheck"] = state ? state.osCheck : undefined;
            inputs["osCheckLists"] = state ? state.osCheckLists : undefined;
            inputs["redirUrl"] = state ? state.redirUrl : undefined;
            inputs["savePassword"] = state ? state.savePassword : undefined;
            inputs["serviceRestriction"] = state ? state.serviceRestriction : undefined;
            inputs["skipCheckForBrowser"] = state ? state.skipCheckForBrowser : undefined;
            inputs["skipCheckForUnsupportedOs"] = state ? state.skipCheckForUnsupportedOs : undefined;
            inputs["smbMaxVersion"] = state ? state.smbMaxVersion : undefined;
            inputs["smbMinVersion"] = state ? state.smbMinVersion : undefined;
            inputs["smbNtlmv1Auth"] = state ? state.smbNtlmv1Auth : undefined;
            inputs["smbv1"] = state ? state.smbv1 : undefined;
            inputs["splitDns"] = state ? state.splitDns : undefined;
            inputs["splitTunneling"] = state ? state.splitTunneling : undefined;
            inputs["splitTunnelingRoutingAddresses"] = state ? state.splitTunnelingRoutingAddresses : undefined;
            inputs["splitTunnelingRoutingNegate"] = state ? state.splitTunnelingRoutingNegate : undefined;
            inputs["theme"] = state ? state.theme : undefined;
            inputs["transformBackwardSlashes"] = state ? state.transformBackwardSlashes : undefined;
            inputs["tunnelMode"] = state ? state.tunnelMode : undefined;
            inputs["useSdwan"] = state ? state.useSdwan : undefined;
            inputs["userBookmark"] = state ? state.userBookmark : undefined;
            inputs["userGroupBookmark"] = state ? state.userGroupBookmark : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["webMode"] = state ? state.webMode : undefined;
            inputs["windowsForticlientDownloadUrl"] = state ? state.windowsForticlientDownloadUrl : undefined;
            inputs["winsServer1"] = state ? state.winsServer1 : undefined;
            inputs["winsServer2"] = state ? state.winsServer2 : undefined;
        } else {
            const args = argsOrState as VpnSslWebPortalArgs | undefined;
            inputs["allowUserAccess"] = args ? args.allowUserAccess : undefined;
            inputs["autoConnect"] = args ? args.autoConnect : undefined;
            inputs["bookmarkGroups"] = args ? args.bookmarkGroups : undefined;
            inputs["customLang"] = args ? args.customLang : undefined;
            inputs["customizeForticlientDownloadUrl"] = args ? args.customizeForticlientDownloadUrl : undefined;
            inputs["displayBookmark"] = args ? args.displayBookmark : undefined;
            inputs["displayConnectionTools"] = args ? args.displayConnectionTools : undefined;
            inputs["displayHistory"] = args ? args.displayHistory : undefined;
            inputs["displayStatus"] = args ? args.displayStatus : undefined;
            inputs["dnsServer1"] = args ? args.dnsServer1 : undefined;
            inputs["dnsServer2"] = args ? args.dnsServer2 : undefined;
            inputs["dnsSuffix"] = args ? args.dnsSuffix : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["exclusiveRouting"] = args ? args.exclusiveRouting : undefined;
            inputs["forticlientDownload"] = args ? args.forticlientDownload : undefined;
            inputs["forticlientDownloadMethod"] = args ? args.forticlientDownloadMethod : undefined;
            inputs["heading"] = args ? args.heading : undefined;
            inputs["hideSsoCredential"] = args ? args.hideSsoCredential : undefined;
            inputs["hostCheck"] = args ? args.hostCheck : undefined;
            inputs["hostCheckInterval"] = args ? args.hostCheckInterval : undefined;
            inputs["hostCheckPolicies"] = args ? args.hostCheckPolicies : undefined;
            inputs["ipMode"] = args ? args.ipMode : undefined;
            inputs["ipPools"] = args ? args.ipPools : undefined;
            inputs["ipv6DnsServer1"] = args ? args.ipv6DnsServer1 : undefined;
            inputs["ipv6DnsServer2"] = args ? args.ipv6DnsServer2 : undefined;
            inputs["ipv6ExclusiveRouting"] = args ? args.ipv6ExclusiveRouting : undefined;
            inputs["ipv6Pools"] = args ? args.ipv6Pools : undefined;
            inputs["ipv6ServiceRestriction"] = args ? args.ipv6ServiceRestriction : undefined;
            inputs["ipv6SplitTunneling"] = args ? args.ipv6SplitTunneling : undefined;
            inputs["ipv6SplitTunnelingRoutingAddresses"] = args ? args.ipv6SplitTunnelingRoutingAddresses : undefined;
            inputs["ipv6SplitTunnelingRoutingNegate"] = args ? args.ipv6SplitTunnelingRoutingNegate : undefined;
            inputs["ipv6TunnelMode"] = args ? args.ipv6TunnelMode : undefined;
            inputs["ipv6WinsServer1"] = args ? args.ipv6WinsServer1 : undefined;
            inputs["ipv6WinsServer2"] = args ? args.ipv6WinsServer2 : undefined;
            inputs["keepAlive"] = args ? args.keepAlive : undefined;
            inputs["limitUserLogins"] = args ? args.limitUserLogins : undefined;
            inputs["macAddrAction"] = args ? args.macAddrAction : undefined;
            inputs["macAddrCheck"] = args ? args.macAddrCheck : undefined;
            inputs["macAddrCheckRules"] = args ? args.macAddrCheckRules : undefined;
            inputs["macosForticlientDownloadUrl"] = args ? args.macosForticlientDownloadUrl : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["osCheck"] = args ? args.osCheck : undefined;
            inputs["osCheckLists"] = args ? args.osCheckLists : undefined;
            inputs["redirUrl"] = args ? args.redirUrl : undefined;
            inputs["savePassword"] = args ? args.savePassword : undefined;
            inputs["serviceRestriction"] = args ? args.serviceRestriction : undefined;
            inputs["skipCheckForBrowser"] = args ? args.skipCheckForBrowser : undefined;
            inputs["skipCheckForUnsupportedOs"] = args ? args.skipCheckForUnsupportedOs : undefined;
            inputs["smbMaxVersion"] = args ? args.smbMaxVersion : undefined;
            inputs["smbMinVersion"] = args ? args.smbMinVersion : undefined;
            inputs["smbNtlmv1Auth"] = args ? args.smbNtlmv1Auth : undefined;
            inputs["smbv1"] = args ? args.smbv1 : undefined;
            inputs["splitDns"] = args ? args.splitDns : undefined;
            inputs["splitTunneling"] = args ? args.splitTunneling : undefined;
            inputs["splitTunnelingRoutingAddresses"] = args ? args.splitTunnelingRoutingAddresses : undefined;
            inputs["splitTunnelingRoutingNegate"] = args ? args.splitTunnelingRoutingNegate : undefined;
            inputs["theme"] = args ? args.theme : undefined;
            inputs["transformBackwardSlashes"] = args ? args.transformBackwardSlashes : undefined;
            inputs["tunnelMode"] = args ? args.tunnelMode : undefined;
            inputs["useSdwan"] = args ? args.useSdwan : undefined;
            inputs["userBookmark"] = args ? args.userBookmark : undefined;
            inputs["userGroupBookmark"] = args ? args.userGroupBookmark : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["webMode"] = args ? args.webMode : undefined;
            inputs["windowsForticlientDownloadUrl"] = args ? args.windowsForticlientDownloadUrl : undefined;
            inputs["winsServer1"] = args ? args.winsServer1 : undefined;
            inputs["winsServer2"] = args ? args.winsServer2 : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VpnSslWebPortal.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpnSslWebPortal resources.
 */
export interface VpnSslWebPortalState {
    /**
     * Allow user access to SSL-VPN applications. Valid values: `web`, `ftp`, `smb`, `sftp`, `telnet`, `ssh`, `vnc`, `rdp`, `ping`, `citrix`, `portforward`.
     */
    allowUserAccess?: pulumi.Input<string>;
    /**
     * Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
     */
    autoConnect?: pulumi.Input<string>;
    /**
     * Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
     */
    bookmarkGroups?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalBookmarkGroup>[]>;
    /**
     * Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
     */
    customLang?: pulumi.Input<string>;
    /**
     * Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
     */
    customizeForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
     */
    displayBookmark?: pulumi.Input<string>;
    /**
     * Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
     */
    displayConnectionTools?: pulumi.Input<string>;
    /**
     * Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
     */
    displayHistory?: pulumi.Input<string>;
    /**
     * Enable to display the web portal status widget. Valid values: `enable`, `disable`.
     */
    displayStatus?: pulumi.Input<string>;
    /**
     * DNS server 1.
     */
    dnsServer1?: pulumi.Input<string>;
    /**
     * DNS server 2.
     */
    dnsServer2?: pulumi.Input<string>;
    /**
     * DNS suffix.
     */
    dnsSuffix?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    exclusiveRouting?: pulumi.Input<string>;
    /**
     * Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
     */
    forticlientDownload?: pulumi.Input<string>;
    /**
     * FortiClient download method. Valid values: `direct`, `ssl-vpn`.
     */
    forticlientDownloadMethod?: pulumi.Input<string>;
    /**
     * Web portal heading message.
     */
    heading?: pulumi.Input<string>;
    /**
     * Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
     */
    hideSsoCredential?: pulumi.Input<string>;
    /**
     * Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
     */
    hostCheck?: pulumi.Input<string>;
    /**
     * Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
     */
    hostCheckInterval?: pulumi.Input<number>;
    /**
     * One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
     */
    hostCheckPolicies?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalHostCheckPolicy>[]>;
    /**
     * Method by which users of this SSL-VPN tunnel obtain IP addresses. Valid values: `range`, `user-group`.
     */
    ipMode?: pulumi.Input<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
     */
    ipPools?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpPool>[]>;
    /**
     * IPv6 DNS server 1.
     */
    ipv6DnsServer1?: pulumi.Input<string>;
    /**
     * IPv6 DNS server 2.
     */
    ipv6DnsServer2?: pulumi.Input<string>;
    /**
     * Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    ipv6ExclusiveRouting?: pulumi.Input<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
     */
    ipv6Pools?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpv6Pool>[]>;
    /**
     * Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
     */
    ipv6ServiceRestriction?: pulumi.Input<string>;
    /**
     * Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
     */
    ipv6SplitTunneling?: pulumi.Input<string>;
    /**
     * IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
     */
    ipv6SplitTunnelingRoutingAddresses?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpv6SplitTunnelingRoutingAddress>[]>;
    /**
     * Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
     */
    ipv6SplitTunnelingRoutingNegate?: pulumi.Input<string>;
    /**
     * Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    ipv6TunnelMode?: pulumi.Input<string>;
    /**
     * IPv6 WINS server 1.
     */
    ipv6WinsServer1?: pulumi.Input<string>;
    /**
     * IPv6 WINS server 2.
     */
    ipv6WinsServer2?: pulumi.Input<string>;
    /**
     * Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
     */
    keepAlive?: pulumi.Input<string>;
    /**
     * Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
     */
    limitUserLogins?: pulumi.Input<string>;
    /**
     * Client MAC address action. Valid values: `allow`, `deny`.
     */
    macAddrAction?: pulumi.Input<string>;
    /**
     * Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
     */
    macAddrCheck?: pulumi.Input<string>;
    /**
     * Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
     */
    macAddrCheckRules?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalMacAddrCheckRule>[]>;
    /**
     * Download URL for Mac FortiClient.
     */
    macosForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
     */
    osCheck?: pulumi.Input<string>;
    /**
     * SSL VPN OS checks. The structure of `osCheckList` block is documented below.
     */
    osCheckLists?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalOsCheckList>[]>;
    /**
     * Client login redirect URL.
     */
    redirUrl?: pulumi.Input<string>;
    /**
     * Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
     */
    savePassword?: pulumi.Input<string>;
    /**
     * Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
     */
    serviceRestriction?: pulumi.Input<string>;
    /**
     * Enable to skip host check for browser support. Valid values: `enable`, `disable`.
     */
    skipCheckForBrowser?: pulumi.Input<string>;
    /**
     * Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
     */
    skipCheckForUnsupportedOs?: pulumi.Input<string>;
    /**
     * SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    smbMaxVersion?: pulumi.Input<string>;
    /**
     * SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    smbMinVersion?: pulumi.Input<string>;
    /**
     * Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    smbNtlmv1Auth?: pulumi.Input<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    smbv1?: pulumi.Input<string>;
    /**
     * Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
     */
    splitDns?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalSplitDn>[]>;
    /**
     * Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
     */
    splitTunneling?: pulumi.Input<string>;
    /**
     * IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
     */
    splitTunnelingRoutingAddresses?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalSplitTunnelingRoutingAddress>[]>;
    /**
     * Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
     */
    splitTunnelingRoutingNegate?: pulumi.Input<string>;
    /**
     * Web portal color scheme.
     */
    theme?: pulumi.Input<string>;
    /**
     * Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
     */
    transformBackwardSlashes?: pulumi.Input<string>;
    /**
     * Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    tunnelMode?: pulumi.Input<string>;
    /**
     * Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
     */
    useSdwan?: pulumi.Input<string>;
    /**
     * Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
     */
    userBookmark?: pulumi.Input<string>;
    /**
     * Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
     */
    userGroupBookmark?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
     */
    webMode?: pulumi.Input<string>;
    /**
     * Download URL for Windows FortiClient.
     */
    windowsForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * IPv4 WINS server 1.
     */
    winsServer1?: pulumi.Input<string>;
    /**
     * IPv4 WINS server 1.
     */
    winsServer2?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnSslWebPortal resource.
 */
export interface VpnSslWebPortalArgs {
    /**
     * Allow user access to SSL-VPN applications. Valid values: `web`, `ftp`, `smb`, `sftp`, `telnet`, `ssh`, `vnc`, `rdp`, `ping`, `citrix`, `portforward`.
     */
    allowUserAccess?: pulumi.Input<string>;
    /**
     * Enable/disable automatic connect by client when system is up. Valid values: `enable`, `disable`.
     */
    autoConnect?: pulumi.Input<string>;
    /**
     * Portal bookmark group. The structure of `bookmarkGroup` block is documented below.
     */
    bookmarkGroups?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalBookmarkGroup>[]>;
    /**
     * Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.
     */
    customLang?: pulumi.Input<string>;
    /**
     * Enable support of customized download URL for FortiClient. Valid values: `enable`, `disable`.
     */
    customizeForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * Enable to display the web portal bookmark widget. Valid values: `enable`, `disable`.
     */
    displayBookmark?: pulumi.Input<string>;
    /**
     * Enable to display the web portal connection tools widget. Valid values: `enable`, `disable`.
     */
    displayConnectionTools?: pulumi.Input<string>;
    /**
     * Enable to display the web portal user login history widget. Valid values: `enable`, `disable`.
     */
    displayHistory?: pulumi.Input<string>;
    /**
     * Enable to display the web portal status widget. Valid values: `enable`, `disable`.
     */
    displayStatus?: pulumi.Input<string>;
    /**
     * DNS server 1.
     */
    dnsServer1?: pulumi.Input<string>;
    /**
     * DNS server 2.
     */
    dnsServer2?: pulumi.Input<string>;
    /**
     * DNS suffix.
     */
    dnsSuffix?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable all traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    exclusiveRouting?: pulumi.Input<string>;
    /**
     * Enable/disable download option for FortiClient. Valid values: `enable`, `disable`.
     */
    forticlientDownload?: pulumi.Input<string>;
    /**
     * FortiClient download method. Valid values: `direct`, `ssl-vpn`.
     */
    forticlientDownloadMethod?: pulumi.Input<string>;
    /**
     * Web portal heading message.
     */
    heading?: pulumi.Input<string>;
    /**
     * Enable to prevent SSO credential being sent to client. Valid values: `enable`, `disable`.
     */
    hideSsoCredential?: pulumi.Input<string>;
    /**
     * Type of host checking performed on endpoints. Valid values: `none`, `av`, `fw`, `av-fw`, `custom`.
     */
    hostCheck?: pulumi.Input<string>;
    /**
     * Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.
     */
    hostCheckInterval?: pulumi.Input<number>;
    /**
     * One or more policies to require the endpoint to have specific security software. The structure of `hostCheckPolicy` block is documented below.
     */
    hostCheckPolicies?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalHostCheckPolicy>[]>;
    /**
     * Method by which users of this SSL-VPN tunnel obtain IP addresses. Valid values: `range`, `user-group`.
     */
    ipMode?: pulumi.Input<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipPools` block is documented below.
     */
    ipPools?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpPool>[]>;
    /**
     * IPv6 DNS server 1.
     */
    ipv6DnsServer1?: pulumi.Input<string>;
    /**
     * IPv6 DNS server 2.
     */
    ipv6DnsServer2?: pulumi.Input<string>;
    /**
     * Enable/disable all IPv6 traffic go through tunnel only. Valid values: `enable`, `disable`.
     */
    ipv6ExclusiveRouting?: pulumi.Input<string>;
    /**
     * IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients. The structure of `ipv6Pools` block is documented below.
     */
    ipv6Pools?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpv6Pool>[]>;
    /**
     * Enable/disable IPv6 tunnel service restriction. Valid values: `enable`, `disable`.
     */
    ipv6ServiceRestriction?: pulumi.Input<string>;
    /**
     * Enable/disable IPv6 split tunneling. Valid values: `enable`, `disable`.
     */
    ipv6SplitTunneling?: pulumi.Input<string>;
    /**
     * IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `ipv6SplitTunnelingRoutingAddress` block is documented below.
     */
    ipv6SplitTunnelingRoutingAddresses?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalIpv6SplitTunnelingRoutingAddress>[]>;
    /**
     * Enable to negate IPv6 split tunneling routing address. Valid values: `enable`, `disable`.
     */
    ipv6SplitTunnelingRoutingNegate?: pulumi.Input<string>;
    /**
     * Enable/disable IPv6 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    ipv6TunnelMode?: pulumi.Input<string>;
    /**
     * IPv6 WINS server 1.
     */
    ipv6WinsServer1?: pulumi.Input<string>;
    /**
     * IPv6 WINS server 2.
     */
    ipv6WinsServer2?: pulumi.Input<string>;
    /**
     * Enable/disable automatic reconnect for FortiClient connections. Valid values: `enable`, `disable`.
     */
    keepAlive?: pulumi.Input<string>;
    /**
     * Enable to limit each user to one SSL-VPN session at a time. Valid values: `enable`, `disable`.
     */
    limitUserLogins?: pulumi.Input<string>;
    /**
     * Client MAC address action. Valid values: `allow`, `deny`.
     */
    macAddrAction?: pulumi.Input<string>;
    /**
     * Enable/disable MAC address host checking. Valid values: `enable`, `disable`.
     */
    macAddrCheck?: pulumi.Input<string>;
    /**
     * Client MAC address check rule. The structure of `macAddrCheckRule` block is documented below.
     */
    macAddrCheckRules?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalMacAddrCheckRule>[]>;
    /**
     * Download URL for Mac FortiClient.
     */
    macosForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable to let the FortiGate decide action based on client OS. Valid values: `enable`, `disable`.
     */
    osCheck?: pulumi.Input<string>;
    /**
     * SSL VPN OS checks. The structure of `osCheckList` block is documented below.
     */
    osCheckLists?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalOsCheckList>[]>;
    /**
     * Client login redirect URL.
     */
    redirUrl?: pulumi.Input<string>;
    /**
     * Enable/disable FortiClient saving the user's password. Valid values: `enable`, `disable`.
     */
    savePassword?: pulumi.Input<string>;
    /**
     * Enable/disable tunnel service restriction. Valid values: `enable`, `disable`.
     */
    serviceRestriction?: pulumi.Input<string>;
    /**
     * Enable to skip host check for browser support. Valid values: `enable`, `disable`.
     */
    skipCheckForBrowser?: pulumi.Input<string>;
    /**
     * Enable to skip host check if client OS does not support it. Valid values: `enable`, `disable`.
     */
    skipCheckForUnsupportedOs?: pulumi.Input<string>;
    /**
     * SMB maximum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    smbMaxVersion?: pulumi.Input<string>;
    /**
     * SMB minimum client protocol version. Valid values: `smbv1`, `smbv2`, `smbv3`.
     */
    smbMinVersion?: pulumi.Input<string>;
    /**
     * Enable support of NTLMv1 for Samba authentication. Valid values: `enable`, `disable`.
     */
    smbNtlmv1Auth?: pulumi.Input<string>;
    /**
     * Enable/disable support of SMBv1 for Samba. Valid values: `enable`, `disable`.
     */
    smbv1?: pulumi.Input<string>;
    /**
     * Split DNS for SSL VPN. The structure of `splitDns` block is documented below.
     */
    splitDns?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalSplitDn>[]>;
    /**
     * Enable/disable IPv4 split tunneling. Valid values: `enable`, `disable`.
     */
    splitTunneling?: pulumi.Input<string>;
    /**
     * IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access. The structure of `splitTunnelingRoutingAddress` block is documented below.
     */
    splitTunnelingRoutingAddresses?: pulumi.Input<pulumi.Input<inputs.VpnSslWebPortalSplitTunnelingRoutingAddress>[]>;
    /**
     * Enable to negate split tunneling routing address. Valid values: `enable`, `disable`.
     */
    splitTunnelingRoutingNegate?: pulumi.Input<string>;
    /**
     * Web portal color scheme.
     */
    theme?: pulumi.Input<string>;
    /**
     * Transform backward slashes to forward slashes in URLs. Valid values: `enable`, `disable`.
     */
    transformBackwardSlashes?: pulumi.Input<string>;
    /**
     * Enable/disable IPv4 SSL-VPN tunnel mode. Valid values: `enable`, `disable`.
     */
    tunnelMode?: pulumi.Input<string>;
    /**
     * Use SD-WAN rules to get output interface. Valid values: `enable`, `disable`.
     */
    useSdwan?: pulumi.Input<string>;
    /**
     * Enable to allow web portal users to create their own bookmarks. Valid values: `enable`, `disable`.
     */
    userBookmark?: pulumi.Input<string>;
    /**
     * Enable to allow web portal users to create bookmarks for all users in the same user group. Valid values: `enable`, `disable`.
     */
    userGroupBookmark?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable SSL VPN web mode. Valid values: `enable`, `disable`.
     */
    webMode?: pulumi.Input<string>;
    /**
     * Download URL for Windows FortiClient.
     */
    windowsForticlientDownloadUrl?: pulumi.Input<string>;
    /**
     * IPv4 WINS server 1.
     */
    winsServer1?: pulumi.Input<string>;
    /**
     * IPv4 WINS server 1.
     */
    winsServer2?: pulumi.Input<string>;
}
