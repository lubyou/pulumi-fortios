// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./alertemailSetting";
export * from "./antivirusHeuristic";
export * from "./antivirusProfile";
export * from "./antivirusQuarantine";
export * from "./antivirusSettings";
export * from "./applicationCustom";
export * from "./applicationGroup";
export * from "./applicationList";
export * from "./applicationName";
export * from "./applicationRuleSettings";
export * from "./authenticationRule";
export * from "./authenticationScheme";
export * from "./authenticationSetting";
export * from "./certificateCa";
export * from "./certificateCrl";
export * from "./certificateLocal";
export * from "./certificateRemote";
export * from "./cifsDomainController";
export * from "./cifsProfile";
export * from "./credentialStoreDomainController";
export * from "./dlpFilepattern";
export * from "./dlpFpDocSource";
export * from "./dlpFpSensitivity";
export * from "./dlpSensitivity";
export * from "./dlpSensor";
export * from "./dlpSettings";
export * from "./dnsfilterDomainFilter";
export * from "./dnsfilterProfile";
export * from "./dpdkCpus";
export * from "./dpdkGlobal";
export * from "./emailfilterBlockAllowList";
export * from "./emailfilterBwl";
export * from "./emailfilterBword";
export * from "./emailfilterDnsbl";
export * from "./emailfilterFortishield";
export * from "./emailfilterIptrust";
export * from "./emailfilterMheader";
export * from "./emailfilterOptions";
export * from "./emailfilterProfile";
export * from "./endpointControlClient";
export * from "./endpointControlFctems";
export * from "./endpointControlForticlientEms";
export * from "./endpointControlForticlientRegistrationSync";
export * from "./endpointControlProfile";
export * from "./endpointControlRegisteredForticlient";
export * from "./endpointControlSettings";
export * from "./extenderControllerDataplan";
export * from "./extenderControllerExtender";
export * from "./extenderControllerExtender1";
export * from "./fileFilterProfile";
export * from "./firewallAddress";
export * from "./firewallAddress6";
export * from "./firewallAddress6Template";
export * from "./firewallAddrgrp";
export * from "./firewallAddrgrp6";
export * from "./firewallAuthPortal";
export * from "./firewallCentralSnatMap";
export * from "./firewallCentralsnatmapMove";
export * from "./firewallCentralsnatmapSort";
export * from "./firewallCity";
export * from "./firewallConsolidatedPolicy";
export * from "./firewallCountry";
export * from "./firewallDecryptedTrafficMirror";
export * from "./firewallDnstranslation";
export * from "./firewallDosPolicy";
export * from "./firewallDosPolicy6";
export * from "./firewallIdentityBasedRoute";
export * from "./firewallInterfacePolicy";
export * from "./firewallInterfacePolicy6";
export * from "./firewallInternetService";
export * from "./firewallInternetServiceAddition";
export * from "./firewallInternetServiceAppend";
export * from "./firewallInternetServiceBotnet";
export * from "./firewallInternetServiceCustom";
export * from "./firewallInternetServiceCustomGroup";
export * from "./firewallInternetServiceDefinition";
export * from "./firewallInternetServiceExtension";
export * from "./firewallInternetServiceGroup";
export * from "./firewallInternetServiceIpblReason";
export * from "./firewallInternetServiceIpblVendor";
export * from "./firewallInternetServiceList";
export * from "./firewallInternetServiceName";
export * from "./firewallInternetServiceOwner";
export * from "./firewallInternetServiceReputation";
export * from "./firewallIpTranslation";
export * from "./firewallIpmacbindingSetting";
export * from "./firewallIpmacbindingTable";
export * from "./firewallIppool";
export * from "./firewallIppool6";
export * from "./firewallIpv6EhFilter";
export * from "./firewallLdbMonitor";
export * from "./firewallLocalInPolicy";
export * from "./firewallLocalInPolicy6";
export * from "./firewallMulticastAddress";
export * from "./firewallMulticastAddress6";
export * from "./firewallMulticastPolicy";
export * from "./firewallMulticastPolicy6";
export * from "./firewallObjectAddress";
export * from "./firewallObjectAddressGroup";
export * from "./firewallObjectIPPool";
export * from "./firewallObjectService";
export * from "./firewallObjectServiceCategory";
export * from "./firewallObjectServiceGroup";
export * from "./firewallObjectVip";
export * from "./firewallObjectVipGroup";
export * from "./firewallPolicy";
export * from "./firewallPolicy46";
export * from "./firewallPolicy6";
export * from "./firewallPolicy64";
export * from "./firewallProfileGroup";
export * from "./firewallProfileProtocolOptions";
export * from "./firewallProxyAddress";
export * from "./firewallProxyAddrgrp";
export * from "./firewallProxyPolicy";
export * from "./firewallProxypolicyMove";
export * from "./firewallProxypolicySort";
export * from "./firewallRegion";
export * from "./firewallScheduleGroup";
export * from "./firewallScheduleOnetime";
export * from "./firewallScheduleRecurring";
export * from "./firewallSecurityPolicy";
export * from "./firewallSecurityPolicy1";
export * from "./firewallSecurityPolicySeq";
export * from "./firewallSecurityPolicySort";
export * from "./firewallServiceCategory";
export * from "./firewallServiceCustom";
export * from "./firewallServiceGroup";
export * from "./firewallShaperPerIpShaper";
export * from "./firewallShaperTrafficShaper";
export * from "./firewallShapingPolicy";
export * from "./firewallShapingProfile";
export * from "./firewallSniffer";
export * from "./firewallSshHostKey";
export * from "./firewallSshLocalCa";
export * from "./firewallSshLocalKey";
export * from "./firewallSshSetting";
export * from "./firewallSslServer";
export * from "./firewallSslSetting";
export * from "./firewallSslSshProfile";
export * from "./firewallTrafficClass";
export * from "./firewallTtlPolicy";
export * from "./firewallVendorMac";
export * from "./firewallVip";
export * from "./firewallVip46";
export * from "./firewallVip6";
export * from "./firewallVip64";
export * from "./firewallVipgrp";
export * from "./firewallVipgrp46";
export * from "./firewallVipgrp6";
export * from "./firewallVipgrp64";
export * from "./firewallWildcardFqdnCustom";
export * from "./firewallWildcardFqdnGroup";
export * from "./fortimanagerDVMDevice";
export * from "./fortimanagerDVMInstallDev";
export * from "./fortimanagerDVMInstallPolicyPackage";
export * from "./fortimanagerDVMScript";
export * from "./fortimanagerDVMScriptExecute";
export * from "./fortimanagerFirewallObjectAddress";
export * from "./fortimanagerFirewallObjectIppool";
export * from "./fortimanagerFirewallObjectService";
export * from "./fortimanagerFirewallObjectVip";
export * from "./fortimanagerFirewallSecurityPolicy";
export * from "./fortimanagerFirewallSecurityPolicyPackage";
export * from "./fortimanagerJSONRPCRequest";
export * from "./fortimanagerObjectAdomRevision";
export * from "./fortimanagerSystemAdmin";
export * from "./fortimanagerSystemAdminProfiles";
export * from "./fortimanagerSystemAdminUser";
export * from "./fortimanagerSystemAdom";
export * from "./fortimanagerSystemDNS";
export * from "./fortimanagerSystemGlobal";
export * from "./fortimanagerSystemLicenseFortiCare";
export * from "./fortimanagerSystemLicenseVM";
export * from "./fortimanagerSystemNTP";
export * from "./fortimanagerSystemNetworkInterface";
export * from "./fortimanagerSystemNetworkRoute";
export * from "./fortimanagerSystemSyslogServer";
export * from "./ftpProxyExplicit";
export * from "./getFirewallAddress";
export * from "./getFirewallAddress6";
export * from "./getFirewallAddress6List";
export * from "./getFirewallAddress6Template";
export * from "./getFirewallAddress6TemplateList";
export * from "./getFirewallAddressList";
export * from "./getFirewallAddrgrp";
export * from "./getFirewallAddrgrp6";
export * from "./getFirewallAddrgrp6List";
export * from "./getFirewallAddrgrpList";
export * from "./getFirewallCentralSnatMap";
export * from "./getFirewallCentralSnatMapList";
export * from "./getFirewallConsolidatedPolicy";
export * from "./getFirewallConsolidatedPolicyList";
export * from "./getFirewallDosPolicy";
export * from "./getFirewallDosPolicy6";
export * from "./getFirewallDosPolicy6List";
export * from "./getFirewallDosPolicyList";
export * from "./getFirewallInternetService";
export * from "./getFirewallInternetServiceCustom";
export * from "./getFirewallInternetServiceCustomGroup";
export * from "./getFirewallInternetServiceCustomGroupList";
export * from "./getFirewallInternetServiceCustomList";
export * from "./getFirewallInternetServiceDefinition";
export * from "./getFirewallInternetServiceDefinitionList";
export * from "./getFirewallInternetServiceExtension";
export * from "./getFirewallInternetServiceExtensionList";
export * from "./getFirewallInternetServiceGroup";
export * from "./getFirewallInternetServiceGroupList";
export * from "./getFirewallInternetServiceList";
export * from "./getFirewallIpv6EhFilter";
export * from "./getFirewallMulticastAddress";
export * from "./getFirewallMulticastAddress6";
export * from "./getFirewallMulticastAddress6List";
export * from "./getFirewallMulticastAddressList";
export * from "./getFirewallPolicy";
export * from "./getFirewallPolicy46";
export * from "./getFirewallPolicy46List";
export * from "./getFirewallPolicy6";
export * from "./getFirewallPolicy64";
export * from "./getFirewallPolicy64List";
export * from "./getFirewallPolicy6List";
export * from "./getFirewallPolicyList";
export * from "./getFirewallProfileProtocolOptions";
export * from "./getFirewallProfileProtocolOptionsList";
export * from "./getFirewallProxyAddress";
export * from "./getFirewallProxyAddressList";
export * from "./getFirewallProxyAddrgrp";
export * from "./getFirewallProxyAddrgrpList";
export * from "./getFirewallProxyPolicy";
export * from "./getFirewallProxyPolicyList";
export * from "./getFirewallScheduleGroup";
export * from "./getFirewallScheduleGroupList";
export * from "./getFirewallScheduleOnetime";
export * from "./getFirewallScheduleOnetimeList";
export * from "./getFirewallScheduleRecurring";
export * from "./getFirewallScheduleRecurringList";
export * from "./getFirewallServiceCategory";
export * from "./getFirewallServiceCategoryList";
export * from "./getFirewallServiceCustom";
export * from "./getFirewallServiceCustomList";
export * from "./getFirewallServiceGroup";
export * from "./getFirewallServiceGroupList";
export * from "./getFirewallShaperPerIpShaper";
export * from "./getFirewallShaperPerIpShaperList";
export * from "./getFirewallShaperTrafficShaper";
export * from "./getFirewallShaperTrafficShaperList";
export * from "./getFirewallWildcardFqdnCustom";
export * from "./getFirewallWildcardFqdnCustomList";
export * from "./getFirewallWildcardFqdnGroup";
export * from "./getFirewallWildcardFqdnGroupList";
export * from "./getIPMaskCIDR";
export * from "./getJSONGenericAPI";
export * from "./getRouterAccessList";
export * from "./getRouterAccessList6";
export * from "./getRouterAccessList6List";
export * from "./getRouterAccessListList";
export * from "./getRouterAspathList";
export * from "./getRouterAspathListList";
export * from "./getRouterAuthPath";
export * from "./getRouterAuthPathList";
export * from "./getRouterBfd";
export * from "./getRouterBfd6";
export * from "./getRouterBgp";
export * from "./getRouterCommunityList";
export * from "./getRouterCommunityListList";
export * from "./getRouterIsis";
export * from "./getRouterKeyChain";
export * from "./getRouterKeyChainList";
export * from "./getRouterMulticast";
export * from "./getRouterMulticast6";
export * from "./getRouterMulticastFlow";
export * from "./getRouterMulticastFlowList";
export * from "./getRouterOspf";
export * from "./getRouterOspf6";
export * from "./getRouterPolicy";
export * from "./getRouterPolicy6";
export * from "./getRouterPolicy6List";
export * from "./getRouterPolicyList";
export * from "./getRouterPrefixList";
export * from "./getRouterPrefixList6";
export * from "./getRouterPrefixList6List";
export * from "./getRouterPrefixListList";
export * from "./getRouterRip";
export * from "./getRouterRipng";
export * from "./getRouterRouteMap";
export * from "./getRouterRouteMapList";
export * from "./getRouterSetting";
export * from "./getRouterStatic";
export * from "./getRouterStatic6";
export * from "./getRouterStatic6List";
export * from "./getRouterStaticList";
export * from "./getRouterbgpNeighbor";
export * from "./getRouterbgpNeighborList";
export * from "./getSystemAccprofile";
export * from "./getSystemAccprofileList";
export * from "./getSystemAdmin";
export * from "./getSystemAdminList";
export * from "./getSystemAlias";
export * from "./getSystemAliasList";
export * from "./getSystemApiUser";
export * from "./getSystemApiUserList";
export * from "./getSystemArpTable";
export * from "./getSystemArpTableList";
export * from "./getSystemAutoInstall";
export * from "./getSystemAutoScript";
export * from "./getSystemAutoScriptList";
export * from "./getSystemAutomationAction";
export * from "./getSystemAutomationActionList";
export * from "./getSystemAutomationDestination";
export * from "./getSystemAutomationDestinationList";
export * from "./getSystemAutomationTrigger";
export * from "./getSystemAutomationTriggerList";
export * from "./getSystemAutoupdatePushUpdate";
export * from "./getSystemAutoupdateSchedule";
export * from "./getSystemAutoupdateTunneling";
export * from "./getSystemCentralManagement";
export * from "./getSystemClusterSync";
export * from "./getSystemClusterSyncList";
export * from "./getSystemConsole";
export * from "./getSystemCsf";
export * from "./getSystemDdns";
export * from "./getSystemDdnsList";
export * from "./getSystemDhcpServer";
export * from "./getSystemDhcpServerList";
export * from "./getSystemDns";
export * from "./getSystemDnsDatabase";
export * from "./getSystemDnsDatabaseList";
export * from "./getSystemDnsServer";
export * from "./getSystemDnsServerList";
export * from "./getSystemDscpBasedPriority";
export * from "./getSystemDscpBasedPriorityList";
export * from "./getSystemEmailServer";
export * from "./getSystemExternalResource";
export * from "./getSystemExternalResourceList";
export * from "./getSystemFipsCc";
export * from "./getSystemFm";
export * from "./getSystemFortiguard";
export * from "./getSystemFortimanager";
export * from "./getSystemFortisandbox";
export * from "./getSystemFssoPolling";
export * from "./getSystemFtmPush";
export * from "./getSystemGlobal";
export * from "./getSystemGreTunnel";
export * from "./getSystemGreTunnelList";
export * from "./getSystemHa";
export * from "./getSystemHaMonitor";
export * from "./getSystemInterface";
export * from "./getSystemInterfaceList";
export * from "./getSystemIpipTunnel";
export * from "./getSystemIpipTunnelList";
export * from "./getSystemIpv6NeighborCache";
export * from "./getSystemIpv6NeighborCacheList";
export * from "./getSystemIpv6Tunnel";
export * from "./getSystemIpv6TunnelList";
export * from "./getSystemLinkMonitor";
export * from "./getSystemLinkMonitorList";
export * from "./getSystemLldpNetworkPolicy";
export * from "./getSystemLldpNetworkPolicyList";
export * from "./getSystemManagementTunnel";
export * from "./getSystemMobileTunnel";
export * from "./getSystemMobileTunnelList";
export * from "./getSystemNat64";
export * from "./getSystemNdProxy";
export * from "./getSystemNetflow";
export * from "./getSystemNetworkVisibility";
export * from "./getSystemNtp";
export * from "./getSystemObjectTagging";
export * from "./getSystemObjectTaggingList";
export * from "./getSystemPasswordPolicy";
export * from "./getSystemPasswordPolicyGuestAdmin";
export * from "./getSystemPppoeInterface";
export * from "./getSystemPppoeInterfaceList";
export * from "./getSystemProbeResponse";
export * from "./getSystemProxyArp";
export * from "./getSystemProxyArpList";
export * from "./getSystemReplacemsgGroup";
export * from "./getSystemReplacemsgGroupList";
export * from "./getSystemReplacemsgImage";
export * from "./getSystemReplacemsgImageList";
export * from "./getSystemResourceLimits";
export * from "./getSystemSdnConnector";
export * from "./getSystemSdnConnectorList";
export * from "./getSystemSessionHelper";
export * from "./getSystemSessionHelperList";
export * from "./getSystemSessionTtl";
export * from "./getSystemSflow";
export * from "./getSystemSitTunnel";
export * from "./getSystemSitTunnelList";
export * from "./getSystemSmsServer";
export * from "./getSystemSmsServerList";
export * from "./getSystemSnmpCommunity";
export * from "./getSystemSnmpCommunityList";
export * from "./getSystemSnmpSysinfo";
export * from "./getSystemSnmpUser";
export * from "./getSystemSnmpUserList";
export * from "./getSystemTosBasedPriority";
export * from "./getSystemTosBasedPriorityList";
export * from "./getSystemVdomException";
export * from "./getSystemVdomExceptionList";
export * from "./getSystemVdomNetflow";
export * from "./getSystemVdomSflow";
export * from "./getSystemVirtualWanLink";
export * from "./getSystemVxlan";
export * from "./getSystemVxlanList";
export * from "./getSystemWccp";
export * from "./getSystemWccpList";
export * from "./getSystemZone";
export * from "./getSystemZoneList";
export * from "./getUserSaml";
export * from "./getUserSamlList";
export * from "./icapProfile";
export * from "./icapServer";
export * from "./ipsCustom";
export * from "./ipsDecoder";
export * from "./ipsGlobal";
export * from "./ipsRule";
export * from "./ipsRuleSettings";
export * from "./ipsSensor";
export * from "./ipsSettings";
export * from "./ipsViewMap";
export * from "./jsongenericAPI";
export * from "./logCustomField";
export * from "./logDiskFilter";
export * from "./logDiskSetting";
export * from "./logEventfilter";
export * from "./logFortiAnalyzerSettingLegacy";
export * from "./logFortianalyzer2Filter";
export * from "./logFortianalyzer2OverrideFilter";
export * from "./logFortianalyzer2OverrideSetting";
export * from "./logFortianalyzer2Setting";
export * from "./logFortianalyzer3Filter";
export * from "./logFortianalyzer3OverrideFilter";
export * from "./logFortianalyzer3OverrideSetting";
export * from "./logFortianalyzer3Setting";
export * from "./logFortianalyzerCloudFilter";
export * from "./logFortianalyzerCloudOverrideFilter";
export * from "./logFortianalyzerCloudOverrideSetting";
export * from "./logFortianalyzerCloudSetting";
export * from "./logFortianalyzerFilter";
export * from "./logFortianalyzerOverrideFilter";
export * from "./logFortianalyzerOverrideSetting";
export * from "./logFortianalyzerSetting";
export * from "./logFortiguardFilter";
export * from "./logFortiguardOverrideFilter";
export * from "./logFortiguardOverrideSetting";
export * from "./logFortiguardSetting";
export * from "./logGuiDisplay";
export * from "./logMemoryFilter";
export * from "./logMemoryGlobalSetting";
export * from "./logMemorySetting";
export * from "./logNullDeviceFilter";
export * from "./logNullDeviceSetting";
export * from "./logSetting";
export * from "./logSyslogSetting";
export * from "./logSyslogd2Filter";
export * from "./logSyslogd2OverrideFilter";
export * from "./logSyslogd2OverrideSetting";
export * from "./logSyslogd2Setting";
export * from "./logSyslogd3Filter";
export * from "./logSyslogd3OverrideFilter";
export * from "./logSyslogd3OverrideSetting";
export * from "./logSyslogd3Setting";
export * from "./logSyslogd4Filter";
export * from "./logSyslogd4OverrideFilter";
export * from "./logSyslogd4OverrideSetting";
export * from "./logSyslogd4Setting";
export * from "./logSyslogdFilter";
export * from "./logSyslogdOverrideFilter";
export * from "./logSyslogdOverrideSetting";
export * from "./logSyslogdSetting";
export * from "./logThreatWeight";
export * from "./logWebtrendsFilter";
export * from "./logWebtrendsSetting";
export * from "./networkingInterfacePort";
export * from "./networkingRouteStatic";
export * from "./nsxtServiceChain";
export * from "./nsxtSetting";
export * from "./provider";
export * from "./reportChart";
export * from "./reportDataset";
export * from "./reportLayout";
export * from "./reportSetting";
export * from "./reportStyle";
export * from "./reportTheme";
export * from "./routerAccessList";
export * from "./routerAccessList6";
export * from "./routerAspathList";
export * from "./routerAuthPath";
export * from "./routerBfd";
export * from "./routerBfd6";
export * from "./routerBgp";
export * from "./routerCommunityList";
export * from "./routerIsis";
export * from "./routerKeyChain";
export * from "./routerMulticast";
export * from "./routerMulticast6";
export * from "./routerMulticastFlow";
export * from "./routerOspf";
export * from "./routerOspf6";
export * from "./routerPolicy";
export * from "./routerPolicy6";
export * from "./routerPrefixList";
export * from "./routerPrefixList6";
export * from "./routerRip";
export * from "./routerRipng";
export * from "./routerRouteMap";
export * from "./routerSetting";
export * from "./routerStatic";
export * from "./routerStatic6";
export * from "./routerbgpNeighbor";
export * from "./routerbgpNetwork";
export * from "./routerbgpNetwork6";
export * from "./routerospf6Ospf6Interface";
export * from "./routerospfNeighbor";
export * from "./routerospfNetwork";
export * from "./routerospfOspfInterface";
export * from "./spamfilterBwl";
export * from "./spamfilterBword";
export * from "./spamfilterDnsbl";
export * from "./spamfilterFortishield";
export * from "./spamfilterIptrust";
export * from "./spamfilterMheader";
export * from "./spamfilterOptions";
export * from "./spamfilterProfile";
export * from "./sshFilterProfile";
export * from "./switchController8021XSettings";
export * from "./switchControllerAutoConfigCustom";
export * from "./switchControllerAutoConfigDefault";
export * from "./switchControllerAutoConfigPolicy";
export * from "./switchControllerCustomCommand";
export * from "./switchControllerFlowTracking";
export * from "./switchControllerGlobal";
export * from "./switchControllerIgmpSnooping";
export * from "./switchControllerInitialConfigTemplate";
export * from "./switchControllerInitialConfigVlans";
export * from "./switchControllerLldpProfile";
export * from "./switchControllerLldpSettings";
export * from "./switchControllerLocation";
export * from "./switchControllerMacSyncSettings";
export * from "./switchControllerManagedSwitch";
export * from "./switchControllerNacDevice";
export * from "./switchControllerNacSettings";
export * from "./switchControllerNetworkMonitorSettings";
export * from "./switchControllerPortPolicy";
export * from "./switchControllerPtpPolicy";
export * from "./switchControllerPtpSettings";
export * from "./switchControllerQosDot1PMap";
export * from "./switchControllerQosIpDscpMap";
export * from "./switchControllerQosQosPolicy";
export * from "./switchControllerQosQueuePolicy";
export * from "./switchControllerQuarantine";
export * from "./switchControllerRemoteLog";
export * from "./switchControllerSecurityPolicy8021X";
export * from "./switchControllerSecurityPolicyCaptivePortal";
export * from "./switchControllerSecurityPolicyLocalAccess";
export * from "./switchControllerSflow";
export * from "./switchControllerSnmpCommunity";
export * from "./switchControllerSnmpSysinfo";
export * from "./switchControllerSnmpTrapThreshold";
export * from "./switchControllerSnmpUser";
export * from "./switchControllerStormControl";
export * from "./switchControllerStormControlPolicy";
export * from "./switchControllerStpInstance";
export * from "./switchControllerStpSettings";
export * from "./switchControllerSwitchGroup";
export * from "./switchControllerSwitchInterfaceTag";
export * from "./switchControllerSwitchLog";
export * from "./switchControllerSwitchProfile";
export * from "./switchControllerSystem";
export * from "./switchControllerTrafficPolicy";
export * from "./switchControllerTrafficSniffer";
export * from "./switchControllerVirtualPortPool";
export * from "./switchControllerVlan";
export * from "./switchControllerVlanPolicy";
export * from "./systemAPIUserSetting";
export * from "./systemAccprofile";
export * from "./systemAdmin";
export * from "./systemAdminAdministrator";
export * from "./systemAdminProfiles";
export * from "./systemAffinityInterrupt";
export * from "./systemAffinityPacketRedistribution";
export * from "./systemAlarm";
export * from "./systemAlias";
export * from "./systemApiUser";
export * from "./systemArpTable";
export * from "./systemAutoInstall";
export * from "./systemAutoScript";
export * from "./systemAutomationAction";
export * from "./systemAutomationDestination";
export * from "./systemAutomationStitch";
export * from "./systemAutomationTrigger";
export * from "./systemAutoupdatePushUpdate";
export * from "./systemAutoupdateSchedule";
export * from "./systemAutoupdateTunneling";
export * from "./systemCentralManagement";
export * from "./systemClusterSync";
export * from "./systemConsole";
export * from "./systemCsf";
export * from "./systemCustomLanguage";
export * from "./systemDdns";
export * from "./systemDedicatedMgmt";
export * from "./systemDhcp6Server";
export * from "./systemDhcpServer";
export * from "./systemDns";
export * from "./systemDnsDatabase";
export * from "./systemDnsServer";
export * from "./systemDscpBasedPriority";
export * from "./systemEmailServer";
export * from "./systemExternalResource";
export * from "./systemFederatedUpgrade";
export * from "./systemFipsCc";
export * from "./systemFm";
export * from "./systemFortiguard";
export * from "./systemFortimanager";
export * from "./systemFortisandbox";
export * from "./systemFssoPolling";
export * from "./systemFtmPush";
export * from "./systemGeneve";
export * from "./systemGeoipCountry";
export * from "./systemGeoipOverride";
export * from "./systemGlobal";
export * from "./systemGreTunnel";
export * from "./systemHa";
export * from "./systemHaMonitor";
export * from "./systemInterface";
export * from "./systemIpipTunnel";
export * from "./systemIps";
export * from "./systemIpsUrlfilterDns";
export * from "./systemIpsUrlfilterDns6";
export * from "./systemIpsecAggregate";
export * from "./systemIpv6NeighborCache";
export * from "./systemIpv6Tunnel";
export * from "./systemLicenseFortiCare";
export * from "./systemLicenseVDOM";
export * from "./systemLicenseVM";
export * from "./systemLinkMonitor";
export * from "./systemLldpNetworkPolicy";
export * from "./systemMacAddressTable";
export * from "./systemManagementTunnel";
export * from "./systemMobileTunnel";
export * from "./systemNat64";
export * from "./systemNdProxy";
export * from "./systemNetflow";
export * from "./systemNetworkVisibility";
export * from "./systemNtp";
export * from "./systemObjectTagging";
export * from "./systemPasswordPolicy";
export * from "./systemPasswordPolicyGuestAdmin";
export * from "./systemPppoeInterface";
export * from "./systemProbeResponse";
export * from "./systemProxyArp";
export * from "./systemPtp";
export * from "./systemReplacemsgAdmin";
export * from "./systemReplacemsgAlertmail";
export * from "./systemReplacemsgAuth";
export * from "./systemReplacemsgAutomation";
export * from "./systemReplacemsgDeviceDetectionPortal";
export * from "./systemReplacemsgEc";
export * from "./systemReplacemsgFortiguardWf";
export * from "./systemReplacemsgFtp";
export * from "./systemReplacemsgGroup";
export * from "./systemReplacemsgHttp";
export * from "./systemReplacemsgIcap";
export * from "./systemReplacemsgImage";
export * from "./systemReplacemsgMail";
export * from "./systemReplacemsgNacQuar";
export * from "./systemReplacemsgNntp";
export * from "./systemReplacemsgSpam";
export * from "./systemReplacemsgSslvpn";
export * from "./systemReplacemsgTrafficQuota";
export * from "./systemReplacemsgUtm";
export * from "./systemReplacemsgWebproxy";
export * from "./systemResourceLimits";
export * from "./systemSaml";
export * from "./systemSdnConnector";
export * from "./systemSdwan";
export * from "./systemSessionHelper";
export * from "./systemSessionTtl";
export * from "./systemSettingDNS";
export * from "./systemSettingGlobal";
export * from "./systemSettingNTP";
export * from "./systemSettings";
export * from "./systemSflow";
export * from "./systemSitTunnel";
export * from "./systemSmsServer";
export * from "./systemSnmpCommunity";
export * from "./systemSnmpSysinfo";
export * from "./systemSnmpUser";
export * from "./systemSpeedTestSchedule";
export * from "./systemSpeedTestServer";
export * from "./systemSsoAdmin";
export * from "./systemStandaloneCluster";
export * from "./systemStorage";
export * from "./systemSwitchInterface";
export * from "./systemTosBasedPriority";
export * from "./systemVdom";
export * from "./systemVdomDns";
export * from "./systemVdomException";
export * from "./systemVdomLink";
export * from "./systemVdomNetflow";
export * from "./systemVdomProperty";
export * from "./systemVdomRadiusServer";
export * from "./systemVdomSetting";
export * from "./systemVdomSflow";
export * from "./systemVirtualSwitch";
export * from "./systemVirtualWanLink";
export * from "./systemVirtualWirePair";
export * from "./systemVneTunnel";
export * from "./systemVxlan";
export * from "./systemWccp";
export * from "./systemZone";
export * from "./userAdgrp";
export * from "./userDevice";
export * from "./userDeviceAccessList";
export * from "./userDeviceCategory";
export * from "./userDeviceGroup";
export * from "./userDomainController";
export * from "./userExchange";
export * from "./userFortitoken";
export * from "./userFsso";
export * from "./userFssoPolling";
export * from "./userGroup";
export * from "./userKrbKeytab";
export * from "./userLdap";
export * from "./userLocal";
export * from "./userNacPolicy";
export * from "./userPasswordPolicy";
export * from "./userPeer";
export * from "./userPeergrp";
export * from "./userPop3";
export * from "./userQuarantine";
export * from "./userRadius";
export * from "./userSaml";
export * from "./userSecurityExemptList";
export * from "./userSetting";
export * from "./userTacacs";
export * from "./voipProfile";
export * from "./vpnCertificateCa";
export * from "./vpnCertificateCrl";
export * from "./vpnCertificateLocal";
export * from "./vpnCertificateOcspServer";
export * from "./vpnCertificateRemote";
export * from "./vpnCertificateSetting";
export * from "./vpnIpsecConcentrator";
export * from "./vpnIpsecForticlient";
export * from "./vpnIpsecManualkey";
export * from "./vpnIpsecManualkeyInterface";
export * from "./vpnIpsecPhase1";
export * from "./vpnIpsecPhase1Interface";
export * from "./vpnIpsecPhase2";
export * from "./vpnIpsecPhase2Interface";
export * from "./vpnL2Tp";
export * from "./vpnOcvpn";
export * from "./vpnPptp";
export * from "./vpnSslSettings";
export * from "./vpnSslWebHostCheckSoftware";
export * from "./vpnSslWebPortal";
export * from "./vpnSslWebRealm";
export * from "./vpnSslWebUserBookmark";
export * from "./vpnSslWebUserGroupBookmark";
export * from "./vpnipsecPhase1InterfaceLegacy";
export * from "./vpnipsecPhase2InterfaceLegacy";
export * from "./wafMainClass";
export * from "./wafProfile";
export * from "./wafSignature";
export * from "./wafSubClass";
export * from "./wanoptAuthGroup";
export * from "./wanoptCacheService";
export * from "./wanoptContentDeliveryNetworkRule";
export * from "./wanoptPeer";
export * from "./wanoptProfile";
export * from "./wanoptRemoteStorage";
export * from "./wanoptSettings";
export * from "./wanoptWebcache";
export * from "./webProxyDebugUrl";
export * from "./webProxyExplicit";
export * from "./webProxyForwardServer";
export * from "./webProxyForwardServerGroup";
export * from "./webProxyGlobal";
export * from "./webProxyProfile";
export * from "./webProxyUrlMatch";
export * from "./webProxyWisp";
export * from "./webfilterContent";
export * from "./webfilterContentHeader";
export * from "./webfilterFortiguard";
export * from "./webfilterFtgdLocalCat";
export * from "./webfilterFtgdLocalRating";
export * from "./webfilterIpsUrlfilterCacheSetting";
export * from "./webfilterIpsUrlfilterSetting";
export * from "./webfilterIpsUrlfilterSetting6";
export * from "./webfilterOverride";
export * from "./webfilterProfile";
export * from "./webfilterSearchEngine";
export * from "./webfilterUrlfilter";
export * from "./wirelessControllerAccessControlList";
export * from "./wirelessControllerAddress";
export * from "./wirelessControllerAddrgrp";
export * from "./wirelessControllerApStatus";
export * from "./wirelessControllerApcfgProfile";
export * from "./wirelessControllerArrpProfile";
export * from "./wirelessControllerBleProfile";
export * from "./wirelessControllerBonjourProfile";
export * from "./wirelessControllerGlobal";
export * from "./wirelessControllerHotspot20Anqp3GppCellular";
export * from "./wirelessControllerHotspot20AnqpIpAddressType";
export * from "./wirelessControllerHotspot20AnqpNaiRealm";
export * from "./wirelessControllerHotspot20AnqpNetworkAuthType";
export * from "./wirelessControllerHotspot20AnqpRoamingConsortium";
export * from "./wirelessControllerHotspot20AnqpVenueName";
export * from "./wirelessControllerHotspot20H2QpConnCapability";
export * from "./wirelessControllerHotspot20H2QpOperatorName";
export * from "./wirelessControllerHotspot20H2QpOsuProvider";
export * from "./wirelessControllerHotspot20H2QpWanMetric";
export * from "./wirelessControllerHotspot20HsProfile";
export * from "./wirelessControllerHotspot20Icon";
export * from "./wirelessControllerHotspot20QosMap";
export * from "./wirelessControllerInterController";
export * from "./wirelessControllerLog";
export * from "./wirelessControllerMpskProfile";
export * from "./wirelessControllerQosProfile";
export * from "./wirelessControllerRegion";
export * from "./wirelessControllerSetting";
export * from "./wirelessControllerSnmp";
export * from "./wirelessControllerTimers";
export * from "./wirelessControllerUtmProfile";
export * from "./wirelessControllerVap";
export * from "./wirelessControllerVapGroup";
export * from "./wirelessControllerWagProfile";
export * from "./wirelessControllerWidsProfile";
export * from "./wirelessControllerWtp";
export * from "./wirelessControllerWtpGroup";
export * from "./wirelessControllerWtpProfile";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { AlertemailSetting } from "./alertemailSetting";
import { AntivirusHeuristic } from "./antivirusHeuristic";
import { AntivirusProfile } from "./antivirusProfile";
import { AntivirusQuarantine } from "./antivirusQuarantine";
import { AntivirusSettings } from "./antivirusSettings";
import { ApplicationCustom } from "./applicationCustom";
import { ApplicationGroup } from "./applicationGroup";
import { ApplicationList } from "./applicationList";
import { ApplicationName } from "./applicationName";
import { ApplicationRuleSettings } from "./applicationRuleSettings";
import { AuthenticationRule } from "./authenticationRule";
import { AuthenticationScheme } from "./authenticationScheme";
import { AuthenticationSetting } from "./authenticationSetting";
import { CertificateCa } from "./certificateCa";
import { CertificateCrl } from "./certificateCrl";
import { CertificateLocal } from "./certificateLocal";
import { CertificateRemote } from "./certificateRemote";
import { CifsDomainController } from "./cifsDomainController";
import { CifsProfile } from "./cifsProfile";
import { CredentialStoreDomainController } from "./credentialStoreDomainController";
import { DlpFilepattern } from "./dlpFilepattern";
import { DlpFpDocSource } from "./dlpFpDocSource";
import { DlpFpSensitivity } from "./dlpFpSensitivity";
import { DlpSensitivity } from "./dlpSensitivity";
import { DlpSensor } from "./dlpSensor";
import { DlpSettings } from "./dlpSettings";
import { DnsfilterDomainFilter } from "./dnsfilterDomainFilter";
import { DnsfilterProfile } from "./dnsfilterProfile";
import { DpdkCpus } from "./dpdkCpus";
import { DpdkGlobal } from "./dpdkGlobal";
import { EmailfilterBlockAllowList } from "./emailfilterBlockAllowList";
import { EmailfilterBwl } from "./emailfilterBwl";
import { EmailfilterBword } from "./emailfilterBword";
import { EmailfilterDnsbl } from "./emailfilterDnsbl";
import { EmailfilterFortishield } from "./emailfilterFortishield";
import { EmailfilterIptrust } from "./emailfilterIptrust";
import { EmailfilterMheader } from "./emailfilterMheader";
import { EmailfilterOptions } from "./emailfilterOptions";
import { EmailfilterProfile } from "./emailfilterProfile";
import { EndpointControlClient } from "./endpointControlClient";
import { EndpointControlFctems } from "./endpointControlFctems";
import { EndpointControlForticlientEms } from "./endpointControlForticlientEms";
import { EndpointControlForticlientRegistrationSync } from "./endpointControlForticlientRegistrationSync";
import { EndpointControlProfile } from "./endpointControlProfile";
import { EndpointControlRegisteredForticlient } from "./endpointControlRegisteredForticlient";
import { EndpointControlSettings } from "./endpointControlSettings";
import { ExtenderControllerDataplan } from "./extenderControllerDataplan";
import { ExtenderControllerExtender1 } from "./extenderControllerExtender1";
import { ExtenderControllerExtender } from "./extenderControllerExtender";
import { FileFilterProfile } from "./fileFilterProfile";
import { FirewallAddress6 } from "./firewallAddress6";
import { FirewallAddress6Template } from "./firewallAddress6Template";
import { FirewallAddress } from "./firewallAddress";
import { FirewallAddrgrp6 } from "./firewallAddrgrp6";
import { FirewallAddrgrp } from "./firewallAddrgrp";
import { FirewallAuthPortal } from "./firewallAuthPortal";
import { FirewallCentralSnatMap } from "./firewallCentralSnatMap";
import { FirewallCentralsnatmapMove } from "./firewallCentralsnatmapMove";
import { FirewallCentralsnatmapSort } from "./firewallCentralsnatmapSort";
import { FirewallCity } from "./firewallCity";
import { FirewallConsolidatedPolicy } from "./firewallConsolidatedPolicy";
import { FirewallCountry } from "./firewallCountry";
import { FirewallDecryptedTrafficMirror } from "./firewallDecryptedTrafficMirror";
import { FirewallDnstranslation } from "./firewallDnstranslation";
import { FirewallDosPolicy6 } from "./firewallDosPolicy6";
import { FirewallDosPolicy } from "./firewallDosPolicy";
import { FirewallIdentityBasedRoute } from "./firewallIdentityBasedRoute";
import { FirewallInterfacePolicy6 } from "./firewallInterfacePolicy6";
import { FirewallInterfacePolicy } from "./firewallInterfacePolicy";
import { FirewallInternetService } from "./firewallInternetService";
import { FirewallInternetServiceAddition } from "./firewallInternetServiceAddition";
import { FirewallInternetServiceAppend } from "./firewallInternetServiceAppend";
import { FirewallInternetServiceBotnet } from "./firewallInternetServiceBotnet";
import { FirewallInternetServiceCustom } from "./firewallInternetServiceCustom";
import { FirewallInternetServiceCustomGroup } from "./firewallInternetServiceCustomGroup";
import { FirewallInternetServiceDefinition } from "./firewallInternetServiceDefinition";
import { FirewallInternetServiceExtension } from "./firewallInternetServiceExtension";
import { FirewallInternetServiceGroup } from "./firewallInternetServiceGroup";
import { FirewallInternetServiceIpblReason } from "./firewallInternetServiceIpblReason";
import { FirewallInternetServiceIpblVendor } from "./firewallInternetServiceIpblVendor";
import { FirewallInternetServiceList } from "./firewallInternetServiceList";
import { FirewallInternetServiceName } from "./firewallInternetServiceName";
import { FirewallInternetServiceOwner } from "./firewallInternetServiceOwner";
import { FirewallInternetServiceReputation } from "./firewallInternetServiceReputation";
import { FirewallIpTranslation } from "./firewallIpTranslation";
import { FirewallIpmacbindingSetting } from "./firewallIpmacbindingSetting";
import { FirewallIpmacbindingTable } from "./firewallIpmacbindingTable";
import { FirewallIppool6 } from "./firewallIppool6";
import { FirewallIppool } from "./firewallIppool";
import { FirewallIpv6EhFilter } from "./firewallIpv6EhFilter";
import { FirewallLdbMonitor } from "./firewallLdbMonitor";
import { FirewallLocalInPolicy6 } from "./firewallLocalInPolicy6";
import { FirewallLocalInPolicy } from "./firewallLocalInPolicy";
import { FirewallMulticastAddress6 } from "./firewallMulticastAddress6";
import { FirewallMulticastAddress } from "./firewallMulticastAddress";
import { FirewallMulticastPolicy6 } from "./firewallMulticastPolicy6";
import { FirewallMulticastPolicy } from "./firewallMulticastPolicy";
import { FirewallObjectAddress } from "./firewallObjectAddress";
import { FirewallObjectAddressGroup } from "./firewallObjectAddressGroup";
import { FirewallObjectIPPool } from "./firewallObjectIPPool";
import { FirewallObjectService } from "./firewallObjectService";
import { FirewallObjectServiceCategory } from "./firewallObjectServiceCategory";
import { FirewallObjectServiceGroup } from "./firewallObjectServiceGroup";
import { FirewallObjectVip } from "./firewallObjectVip";
import { FirewallObjectVipGroup } from "./firewallObjectVipGroup";
import { FirewallPolicy46 } from "./firewallPolicy46";
import { FirewallPolicy64 } from "./firewallPolicy64";
import { FirewallPolicy6 } from "./firewallPolicy6";
import { FirewallPolicy } from "./firewallPolicy";
import { FirewallProfileGroup } from "./firewallProfileGroup";
import { FirewallProfileProtocolOptions } from "./firewallProfileProtocolOptions";
import { FirewallProxyAddress } from "./firewallProxyAddress";
import { FirewallProxyAddrgrp } from "./firewallProxyAddrgrp";
import { FirewallProxyPolicy } from "./firewallProxyPolicy";
import { FirewallProxypolicyMove } from "./firewallProxypolicyMove";
import { FirewallProxypolicySort } from "./firewallProxypolicySort";
import { FirewallRegion } from "./firewallRegion";
import { FirewallScheduleGroup } from "./firewallScheduleGroup";
import { FirewallScheduleOnetime } from "./firewallScheduleOnetime";
import { FirewallScheduleRecurring } from "./firewallScheduleRecurring";
import { FirewallSecurityPolicy1 } from "./firewallSecurityPolicy1";
import { FirewallSecurityPolicy } from "./firewallSecurityPolicy";
import { FirewallSecurityPolicySeq } from "./firewallSecurityPolicySeq";
import { FirewallSecurityPolicySort } from "./firewallSecurityPolicySort";
import { FirewallServiceCategory } from "./firewallServiceCategory";
import { FirewallServiceCustom } from "./firewallServiceCustom";
import { FirewallServiceGroup } from "./firewallServiceGroup";
import { FirewallShaperPerIpShaper } from "./firewallShaperPerIpShaper";
import { FirewallShaperTrafficShaper } from "./firewallShaperTrafficShaper";
import { FirewallShapingPolicy } from "./firewallShapingPolicy";
import { FirewallShapingProfile } from "./firewallShapingProfile";
import { FirewallSniffer } from "./firewallSniffer";
import { FirewallSshHostKey } from "./firewallSshHostKey";
import { FirewallSshLocalCa } from "./firewallSshLocalCa";
import { FirewallSshLocalKey } from "./firewallSshLocalKey";
import { FirewallSshSetting } from "./firewallSshSetting";
import { FirewallSslServer } from "./firewallSslServer";
import { FirewallSslSetting } from "./firewallSslSetting";
import { FirewallSslSshProfile } from "./firewallSslSshProfile";
import { FirewallTrafficClass } from "./firewallTrafficClass";
import { FirewallTtlPolicy } from "./firewallTtlPolicy";
import { FirewallVendorMac } from "./firewallVendorMac";
import { FirewallVip46 } from "./firewallVip46";
import { FirewallVip64 } from "./firewallVip64";
import { FirewallVip6 } from "./firewallVip6";
import { FirewallVip } from "./firewallVip";
import { FirewallVipgrp46 } from "./firewallVipgrp46";
import { FirewallVipgrp64 } from "./firewallVipgrp64";
import { FirewallVipgrp6 } from "./firewallVipgrp6";
import { FirewallVipgrp } from "./firewallVipgrp";
import { FirewallWildcardFqdnCustom } from "./firewallWildcardFqdnCustom";
import { FirewallWildcardFqdnGroup } from "./firewallWildcardFqdnGroup";
import { FortimanagerDVMDevice } from "./fortimanagerDVMDevice";
import { FortimanagerDVMInstallDev } from "./fortimanagerDVMInstallDev";
import { FortimanagerDVMInstallPolicyPackage } from "./fortimanagerDVMInstallPolicyPackage";
import { FortimanagerDVMScript } from "./fortimanagerDVMScript";
import { FortimanagerDVMScriptExecute } from "./fortimanagerDVMScriptExecute";
import { FortimanagerFirewallObjectAddress } from "./fortimanagerFirewallObjectAddress";
import { FortimanagerFirewallObjectIppool } from "./fortimanagerFirewallObjectIppool";
import { FortimanagerFirewallObjectService } from "./fortimanagerFirewallObjectService";
import { FortimanagerFirewallObjectVip } from "./fortimanagerFirewallObjectVip";
import { FortimanagerFirewallSecurityPolicy } from "./fortimanagerFirewallSecurityPolicy";
import { FortimanagerFirewallSecurityPolicyPackage } from "./fortimanagerFirewallSecurityPolicyPackage";
import { FortimanagerJSONRPCRequest } from "./fortimanagerJSONRPCRequest";
import { FortimanagerObjectAdomRevision } from "./fortimanagerObjectAdomRevision";
import { FortimanagerSystemAdmin } from "./fortimanagerSystemAdmin";
import { FortimanagerSystemAdminProfiles } from "./fortimanagerSystemAdminProfiles";
import { FortimanagerSystemAdminUser } from "./fortimanagerSystemAdminUser";
import { FortimanagerSystemAdom } from "./fortimanagerSystemAdom";
import { FortimanagerSystemDNS } from "./fortimanagerSystemDNS";
import { FortimanagerSystemGlobal } from "./fortimanagerSystemGlobal";
import { FortimanagerSystemLicenseFortiCare } from "./fortimanagerSystemLicenseFortiCare";
import { FortimanagerSystemLicenseVM } from "./fortimanagerSystemLicenseVM";
import { FortimanagerSystemNTP } from "./fortimanagerSystemNTP";
import { FortimanagerSystemNetworkInterface } from "./fortimanagerSystemNetworkInterface";
import { FortimanagerSystemNetworkRoute } from "./fortimanagerSystemNetworkRoute";
import { FortimanagerSystemSyslogServer } from "./fortimanagerSystemSyslogServer";
import { FtpProxyExplicit } from "./ftpProxyExplicit";
import { IcapProfile } from "./icapProfile";
import { IcapServer } from "./icapServer";
import { IpsCustom } from "./ipsCustom";
import { IpsDecoder } from "./ipsDecoder";
import { IpsGlobal } from "./ipsGlobal";
import { IpsRule } from "./ipsRule";
import { IpsRuleSettings } from "./ipsRuleSettings";
import { IpsSensor } from "./ipsSensor";
import { IpsSettings } from "./ipsSettings";
import { IpsViewMap } from "./ipsViewMap";
import { JSONGenericAPI } from "./jsongenericAPI";
import { LogCustomField } from "./logCustomField";
import { LogDiskFilter } from "./logDiskFilter";
import { LogDiskSetting } from "./logDiskSetting";
import { LogEventfilter } from "./logEventfilter";
import { LogFortiAnalyzerSettingLegacy } from "./logFortiAnalyzerSettingLegacy";
import { LogFortianalyzer2Filter } from "./logFortianalyzer2Filter";
import { LogFortianalyzer2OverrideFilter } from "./logFortianalyzer2OverrideFilter";
import { LogFortianalyzer2OverrideSetting } from "./logFortianalyzer2OverrideSetting";
import { LogFortianalyzer2Setting } from "./logFortianalyzer2Setting";
import { LogFortianalyzer3Filter } from "./logFortianalyzer3Filter";
import { LogFortianalyzer3OverrideFilter } from "./logFortianalyzer3OverrideFilter";
import { LogFortianalyzer3OverrideSetting } from "./logFortianalyzer3OverrideSetting";
import { LogFortianalyzer3Setting } from "./logFortianalyzer3Setting";
import { LogFortianalyzerCloudFilter } from "./logFortianalyzerCloudFilter";
import { LogFortianalyzerCloudOverrideFilter } from "./logFortianalyzerCloudOverrideFilter";
import { LogFortianalyzerCloudOverrideSetting } from "./logFortianalyzerCloudOverrideSetting";
import { LogFortianalyzerCloudSetting } from "./logFortianalyzerCloudSetting";
import { LogFortianalyzerFilter } from "./logFortianalyzerFilter";
import { LogFortianalyzerOverrideFilter } from "./logFortianalyzerOverrideFilter";
import { LogFortianalyzerOverrideSetting } from "./logFortianalyzerOverrideSetting";
import { LogFortianalyzerSetting } from "./logFortianalyzerSetting";
import { LogFortiguardFilter } from "./logFortiguardFilter";
import { LogFortiguardOverrideFilter } from "./logFortiguardOverrideFilter";
import { LogFortiguardOverrideSetting } from "./logFortiguardOverrideSetting";
import { LogFortiguardSetting } from "./logFortiguardSetting";
import { LogGuiDisplay } from "./logGuiDisplay";
import { LogMemoryFilter } from "./logMemoryFilter";
import { LogMemoryGlobalSetting } from "./logMemoryGlobalSetting";
import { LogMemorySetting } from "./logMemorySetting";
import { LogNullDeviceFilter } from "./logNullDeviceFilter";
import { LogNullDeviceSetting } from "./logNullDeviceSetting";
import { LogSetting } from "./logSetting";
import { LogSyslogSetting } from "./logSyslogSetting";
import { LogSyslogd2Filter } from "./logSyslogd2Filter";
import { LogSyslogd2OverrideFilter } from "./logSyslogd2OverrideFilter";
import { LogSyslogd2OverrideSetting } from "./logSyslogd2OverrideSetting";
import { LogSyslogd2Setting } from "./logSyslogd2Setting";
import { LogSyslogd3Filter } from "./logSyslogd3Filter";
import { LogSyslogd3OverrideFilter } from "./logSyslogd3OverrideFilter";
import { LogSyslogd3OverrideSetting } from "./logSyslogd3OverrideSetting";
import { LogSyslogd3Setting } from "./logSyslogd3Setting";
import { LogSyslogd4Filter } from "./logSyslogd4Filter";
import { LogSyslogd4OverrideFilter } from "./logSyslogd4OverrideFilter";
import { LogSyslogd4OverrideSetting } from "./logSyslogd4OverrideSetting";
import { LogSyslogd4Setting } from "./logSyslogd4Setting";
import { LogSyslogdFilter } from "./logSyslogdFilter";
import { LogSyslogdOverrideFilter } from "./logSyslogdOverrideFilter";
import { LogSyslogdOverrideSetting } from "./logSyslogdOverrideSetting";
import { LogSyslogdSetting } from "./logSyslogdSetting";
import { LogThreatWeight } from "./logThreatWeight";
import { LogWebtrendsFilter } from "./logWebtrendsFilter";
import { LogWebtrendsSetting } from "./logWebtrendsSetting";
import { NetworkingInterfacePort } from "./networkingInterfacePort";
import { NetworkingRouteStatic } from "./networkingRouteStatic";
import { NsxtServiceChain } from "./nsxtServiceChain";
import { NsxtSetting } from "./nsxtSetting";
import { ReportChart } from "./reportChart";
import { ReportDataset } from "./reportDataset";
import { ReportLayout } from "./reportLayout";
import { ReportSetting } from "./reportSetting";
import { ReportStyle } from "./reportStyle";
import { ReportTheme } from "./reportTheme";
import { RouterAccessList6 } from "./routerAccessList6";
import { RouterAccessList } from "./routerAccessList";
import { RouterAspathList } from "./routerAspathList";
import { RouterAuthPath } from "./routerAuthPath";
import { RouterBfd6 } from "./routerBfd6";
import { RouterBfd } from "./routerBfd";
import { RouterBgp } from "./routerBgp";
import { RouterCommunityList } from "./routerCommunityList";
import { RouterIsis } from "./routerIsis";
import { RouterKeyChain } from "./routerKeyChain";
import { RouterMulticast6 } from "./routerMulticast6";
import { RouterMulticast } from "./routerMulticast";
import { RouterMulticastFlow } from "./routerMulticastFlow";
import { RouterOspf6 } from "./routerOspf6";
import { RouterOspf } from "./routerOspf";
import { RouterPolicy6 } from "./routerPolicy6";
import { RouterPolicy } from "./routerPolicy";
import { RouterPrefixList6 } from "./routerPrefixList6";
import { RouterPrefixList } from "./routerPrefixList";
import { RouterRip } from "./routerRip";
import { RouterRipng } from "./routerRipng";
import { RouterRouteMap } from "./routerRouteMap";
import { RouterSetting } from "./routerSetting";
import { RouterStatic6 } from "./routerStatic6";
import { RouterStatic } from "./routerStatic";
import { RouterbgpNeighbor } from "./routerbgpNeighbor";
import { RouterbgpNetwork6 } from "./routerbgpNetwork6";
import { RouterbgpNetwork } from "./routerbgpNetwork";
import { Routerospf6Ospf6Interface } from "./routerospf6Ospf6Interface";
import { RouterospfNeighbor } from "./routerospfNeighbor";
import { RouterospfNetwork } from "./routerospfNetwork";
import { RouterospfOspfInterface } from "./routerospfOspfInterface";
import { SpamfilterBwl } from "./spamfilterBwl";
import { SpamfilterBword } from "./spamfilterBword";
import { SpamfilterDnsbl } from "./spamfilterDnsbl";
import { SpamfilterFortishield } from "./spamfilterFortishield";
import { SpamfilterIptrust } from "./spamfilterIptrust";
import { SpamfilterMheader } from "./spamfilterMheader";
import { SpamfilterOptions } from "./spamfilterOptions";
import { SpamfilterProfile } from "./spamfilterProfile";
import { SshFilterProfile } from "./sshFilterProfile";
import { SwitchController8021XSettings } from "./switchController8021XSettings";
import { SwitchControllerAutoConfigCustom } from "./switchControllerAutoConfigCustom";
import { SwitchControllerAutoConfigDefault } from "./switchControllerAutoConfigDefault";
import { SwitchControllerAutoConfigPolicy } from "./switchControllerAutoConfigPolicy";
import { SwitchControllerCustomCommand } from "./switchControllerCustomCommand";
import { SwitchControllerFlowTracking } from "./switchControllerFlowTracking";
import { SwitchControllerGlobal } from "./switchControllerGlobal";
import { SwitchControllerIgmpSnooping } from "./switchControllerIgmpSnooping";
import { SwitchControllerInitialConfigTemplate } from "./switchControllerInitialConfigTemplate";
import { SwitchControllerInitialConfigVlans } from "./switchControllerInitialConfigVlans";
import { SwitchControllerLldpProfile } from "./switchControllerLldpProfile";
import { SwitchControllerLldpSettings } from "./switchControllerLldpSettings";
import { SwitchControllerLocation } from "./switchControllerLocation";
import { SwitchControllerMacSyncSettings } from "./switchControllerMacSyncSettings";
import { SwitchControllerManagedSwitch } from "./switchControllerManagedSwitch";
import { SwitchControllerNacDevice } from "./switchControllerNacDevice";
import { SwitchControllerNacSettings } from "./switchControllerNacSettings";
import { SwitchControllerNetworkMonitorSettings } from "./switchControllerNetworkMonitorSettings";
import { SwitchControllerPortPolicy } from "./switchControllerPortPolicy";
import { SwitchControllerPtpPolicy } from "./switchControllerPtpPolicy";
import { SwitchControllerPtpSettings } from "./switchControllerPtpSettings";
import { SwitchControllerQosDot1PMap } from "./switchControllerQosDot1PMap";
import { SwitchControllerQosIpDscpMap } from "./switchControllerQosIpDscpMap";
import { SwitchControllerQosQosPolicy } from "./switchControllerQosQosPolicy";
import { SwitchControllerQosQueuePolicy } from "./switchControllerQosQueuePolicy";
import { SwitchControllerQuarantine } from "./switchControllerQuarantine";
import { SwitchControllerRemoteLog } from "./switchControllerRemoteLog";
import { SwitchControllerSecurityPolicy8021X } from "./switchControllerSecurityPolicy8021X";
import { SwitchControllerSecurityPolicyCaptivePortal } from "./switchControllerSecurityPolicyCaptivePortal";
import { SwitchControllerSecurityPolicyLocalAccess } from "./switchControllerSecurityPolicyLocalAccess";
import { SwitchControllerSflow } from "./switchControllerSflow";
import { SwitchControllerSnmpCommunity } from "./switchControllerSnmpCommunity";
import { SwitchControllerSnmpSysinfo } from "./switchControllerSnmpSysinfo";
import { SwitchControllerSnmpTrapThreshold } from "./switchControllerSnmpTrapThreshold";
import { SwitchControllerSnmpUser } from "./switchControllerSnmpUser";
import { SwitchControllerStormControl } from "./switchControllerStormControl";
import { SwitchControllerStormControlPolicy } from "./switchControllerStormControlPolicy";
import { SwitchControllerStpInstance } from "./switchControllerStpInstance";
import { SwitchControllerStpSettings } from "./switchControllerStpSettings";
import { SwitchControllerSwitchGroup } from "./switchControllerSwitchGroup";
import { SwitchControllerSwitchInterfaceTag } from "./switchControllerSwitchInterfaceTag";
import { SwitchControllerSwitchLog } from "./switchControllerSwitchLog";
import { SwitchControllerSwitchProfile } from "./switchControllerSwitchProfile";
import { SwitchControllerSystem } from "./switchControllerSystem";
import { SwitchControllerTrafficPolicy } from "./switchControllerTrafficPolicy";
import { SwitchControllerTrafficSniffer } from "./switchControllerTrafficSniffer";
import { SwitchControllerVirtualPortPool } from "./switchControllerVirtualPortPool";
import { SwitchControllerVlan } from "./switchControllerVlan";
import { SwitchControllerVlanPolicy } from "./switchControllerVlanPolicy";
import { SystemAPIUserSetting } from "./systemAPIUserSetting";
import { SystemAccprofile } from "./systemAccprofile";
import { SystemAdmin } from "./systemAdmin";
import { SystemAdminAdministrator } from "./systemAdminAdministrator";
import { SystemAdminProfiles } from "./systemAdminProfiles";
import { SystemAffinityInterrupt } from "./systemAffinityInterrupt";
import { SystemAffinityPacketRedistribution } from "./systemAffinityPacketRedistribution";
import { SystemAlarm } from "./systemAlarm";
import { SystemAlias } from "./systemAlias";
import { SystemApiUser } from "./systemApiUser";
import { SystemArpTable } from "./systemArpTable";
import { SystemAutoInstall } from "./systemAutoInstall";
import { SystemAutoScript } from "./systemAutoScript";
import { SystemAutomationAction } from "./systemAutomationAction";
import { SystemAutomationDestination } from "./systemAutomationDestination";
import { SystemAutomationStitch } from "./systemAutomationStitch";
import { SystemAutomationTrigger } from "./systemAutomationTrigger";
import { SystemAutoupdatePushUpdate } from "./systemAutoupdatePushUpdate";
import { SystemAutoupdateSchedule } from "./systemAutoupdateSchedule";
import { SystemAutoupdateTunneling } from "./systemAutoupdateTunneling";
import { SystemCentralManagement } from "./systemCentralManagement";
import { SystemClusterSync } from "./systemClusterSync";
import { SystemConsole } from "./systemConsole";
import { SystemCsf } from "./systemCsf";
import { SystemCustomLanguage } from "./systemCustomLanguage";
import { SystemDdns } from "./systemDdns";
import { SystemDedicatedMgmt } from "./systemDedicatedMgmt";
import { SystemDhcp6Server } from "./systemDhcp6Server";
import { SystemDhcpServer } from "./systemDhcpServer";
import { SystemDns } from "./systemDns";
import { SystemDnsDatabase } from "./systemDnsDatabase";
import { SystemDnsServer } from "./systemDnsServer";
import { SystemDscpBasedPriority } from "./systemDscpBasedPriority";
import { SystemEmailServer } from "./systemEmailServer";
import { SystemExternalResource } from "./systemExternalResource";
import { SystemFederatedUpgrade } from "./systemFederatedUpgrade";
import { SystemFipsCc } from "./systemFipsCc";
import { SystemFm } from "./systemFm";
import { SystemFortiguard } from "./systemFortiguard";
import { SystemFortimanager } from "./systemFortimanager";
import { SystemFortisandbox } from "./systemFortisandbox";
import { SystemFssoPolling } from "./systemFssoPolling";
import { SystemFtmPush } from "./systemFtmPush";
import { SystemGeneve } from "./systemGeneve";
import { SystemGeoipCountry } from "./systemGeoipCountry";
import { SystemGeoipOverride } from "./systemGeoipOverride";
import { SystemGlobal } from "./systemGlobal";
import { SystemGreTunnel } from "./systemGreTunnel";
import { SystemHa } from "./systemHa";
import { SystemHaMonitor } from "./systemHaMonitor";
import { SystemInterface } from "./systemInterface";
import { SystemIpipTunnel } from "./systemIpipTunnel";
import { SystemIps } from "./systemIps";
import { SystemIpsUrlfilterDns6 } from "./systemIpsUrlfilterDns6";
import { SystemIpsUrlfilterDns } from "./systemIpsUrlfilterDns";
import { SystemIpsecAggregate } from "./systemIpsecAggregate";
import { SystemIpv6NeighborCache } from "./systemIpv6NeighborCache";
import { SystemIpv6Tunnel } from "./systemIpv6Tunnel";
import { SystemLicenseFortiCare } from "./systemLicenseFortiCare";
import { SystemLicenseVDOM } from "./systemLicenseVDOM";
import { SystemLicenseVM } from "./systemLicenseVM";
import { SystemLinkMonitor } from "./systemLinkMonitor";
import { SystemLldpNetworkPolicy } from "./systemLldpNetworkPolicy";
import { SystemMacAddressTable } from "./systemMacAddressTable";
import { SystemManagementTunnel } from "./systemManagementTunnel";
import { SystemMobileTunnel } from "./systemMobileTunnel";
import { SystemNat64 } from "./systemNat64";
import { SystemNdProxy } from "./systemNdProxy";
import { SystemNetflow } from "./systemNetflow";
import { SystemNetworkVisibility } from "./systemNetworkVisibility";
import { SystemNtp } from "./systemNtp";
import { SystemObjectTagging } from "./systemObjectTagging";
import { SystemPasswordPolicy } from "./systemPasswordPolicy";
import { SystemPasswordPolicyGuestAdmin } from "./systemPasswordPolicyGuestAdmin";
import { SystemPppoeInterface } from "./systemPppoeInterface";
import { SystemProbeResponse } from "./systemProbeResponse";
import { SystemProxyArp } from "./systemProxyArp";
import { SystemPtp } from "./systemPtp";
import { SystemReplacemsgAdmin } from "./systemReplacemsgAdmin";
import { SystemReplacemsgAlertmail } from "./systemReplacemsgAlertmail";
import { SystemReplacemsgAuth } from "./systemReplacemsgAuth";
import { SystemReplacemsgAutomation } from "./systemReplacemsgAutomation";
import { SystemReplacemsgDeviceDetectionPortal } from "./systemReplacemsgDeviceDetectionPortal";
import { SystemReplacemsgEc } from "./systemReplacemsgEc";
import { SystemReplacemsgFortiguardWf } from "./systemReplacemsgFortiguardWf";
import { SystemReplacemsgFtp } from "./systemReplacemsgFtp";
import { SystemReplacemsgGroup } from "./systemReplacemsgGroup";
import { SystemReplacemsgHttp } from "./systemReplacemsgHttp";
import { SystemReplacemsgIcap } from "./systemReplacemsgIcap";
import { SystemReplacemsgImage } from "./systemReplacemsgImage";
import { SystemReplacemsgMail } from "./systemReplacemsgMail";
import { SystemReplacemsgNacQuar } from "./systemReplacemsgNacQuar";
import { SystemReplacemsgNntp } from "./systemReplacemsgNntp";
import { SystemReplacemsgSpam } from "./systemReplacemsgSpam";
import { SystemReplacemsgSslvpn } from "./systemReplacemsgSslvpn";
import { SystemReplacemsgTrafficQuota } from "./systemReplacemsgTrafficQuota";
import { SystemReplacemsgUtm } from "./systemReplacemsgUtm";
import { SystemReplacemsgWebproxy } from "./systemReplacemsgWebproxy";
import { SystemResourceLimits } from "./systemResourceLimits";
import { SystemSaml } from "./systemSaml";
import { SystemSdnConnector } from "./systemSdnConnector";
import { SystemSdwan } from "./systemSdwan";
import { SystemSessionHelper } from "./systemSessionHelper";
import { SystemSessionTtl } from "./systemSessionTtl";
import { SystemSettingDNS } from "./systemSettingDNS";
import { SystemSettingGlobal } from "./systemSettingGlobal";
import { SystemSettingNTP } from "./systemSettingNTP";
import { SystemSettings } from "./systemSettings";
import { SystemSflow } from "./systemSflow";
import { SystemSitTunnel } from "./systemSitTunnel";
import { SystemSmsServer } from "./systemSmsServer";
import { SystemSnmpCommunity } from "./systemSnmpCommunity";
import { SystemSnmpSysinfo } from "./systemSnmpSysinfo";
import { SystemSnmpUser } from "./systemSnmpUser";
import { SystemSpeedTestSchedule } from "./systemSpeedTestSchedule";
import { SystemSpeedTestServer } from "./systemSpeedTestServer";
import { SystemSsoAdmin } from "./systemSsoAdmin";
import { SystemStandaloneCluster } from "./systemStandaloneCluster";
import { SystemStorage } from "./systemStorage";
import { SystemSwitchInterface } from "./systemSwitchInterface";
import { SystemTosBasedPriority } from "./systemTosBasedPriority";
import { SystemVdom } from "./systemVdom";
import { SystemVdomDns } from "./systemVdomDns";
import { SystemVdomException } from "./systemVdomException";
import { SystemVdomLink } from "./systemVdomLink";
import { SystemVdomNetflow } from "./systemVdomNetflow";
import { SystemVdomProperty } from "./systemVdomProperty";
import { SystemVdomRadiusServer } from "./systemVdomRadiusServer";
import { SystemVdomSetting } from "./systemVdomSetting";
import { SystemVdomSflow } from "./systemVdomSflow";
import { SystemVirtualSwitch } from "./systemVirtualSwitch";
import { SystemVirtualWanLink } from "./systemVirtualWanLink";
import { SystemVirtualWirePair } from "./systemVirtualWirePair";
import { SystemVneTunnel } from "./systemVneTunnel";
import { SystemVxlan } from "./systemVxlan";
import { SystemWccp } from "./systemWccp";
import { SystemZone } from "./systemZone";
import { UserAdgrp } from "./userAdgrp";
import { UserDevice } from "./userDevice";
import { UserDeviceAccessList } from "./userDeviceAccessList";
import { UserDeviceCategory } from "./userDeviceCategory";
import { UserDeviceGroup } from "./userDeviceGroup";
import { UserDomainController } from "./userDomainController";
import { UserExchange } from "./userExchange";
import { UserFortitoken } from "./userFortitoken";
import { UserFsso } from "./userFsso";
import { UserFssoPolling } from "./userFssoPolling";
import { UserGroup } from "./userGroup";
import { UserKrbKeytab } from "./userKrbKeytab";
import { UserLdap } from "./userLdap";
import { UserLocal } from "./userLocal";
import { UserNacPolicy } from "./userNacPolicy";
import { UserPasswordPolicy } from "./userPasswordPolicy";
import { UserPeer } from "./userPeer";
import { UserPeergrp } from "./userPeergrp";
import { UserPop3 } from "./userPop3";
import { UserQuarantine } from "./userQuarantine";
import { UserRadius } from "./userRadius";
import { UserSaml } from "./userSaml";
import { UserSecurityExemptList } from "./userSecurityExemptList";
import { UserSetting } from "./userSetting";
import { UserTacacs } from "./userTacacs";
import { VPNIPsecPhase1InterfaceLegacy } from "./vpnipsecPhase1InterfaceLegacy";
import { VPNIPsecPhase2InterfaceLegacy } from "./vpnipsecPhase2InterfaceLegacy";
import { VoipProfile } from "./voipProfile";
import { VpnCertificateCa } from "./vpnCertificateCa";
import { VpnCertificateCrl } from "./vpnCertificateCrl";
import { VpnCertificateLocal } from "./vpnCertificateLocal";
import { VpnCertificateOcspServer } from "./vpnCertificateOcspServer";
import { VpnCertificateRemote } from "./vpnCertificateRemote";
import { VpnCertificateSetting } from "./vpnCertificateSetting";
import { VpnIpsecConcentrator } from "./vpnIpsecConcentrator";
import { VpnIpsecForticlient } from "./vpnIpsecForticlient";
import { VpnIpsecManualkey } from "./vpnIpsecManualkey";
import { VpnIpsecManualkeyInterface } from "./vpnIpsecManualkeyInterface";
import { VpnIpsecPhase1 } from "./vpnIpsecPhase1";
import { VpnIpsecPhase1Interface } from "./vpnIpsecPhase1Interface";
import { VpnIpsecPhase2 } from "./vpnIpsecPhase2";
import { VpnIpsecPhase2Interface } from "./vpnIpsecPhase2Interface";
import { VpnL2Tp } from "./vpnL2Tp";
import { VpnOcvpn } from "./vpnOcvpn";
import { VpnPptp } from "./vpnPptp";
import { VpnSslSettings } from "./vpnSslSettings";
import { VpnSslWebHostCheckSoftware } from "./vpnSslWebHostCheckSoftware";
import { VpnSslWebPortal } from "./vpnSslWebPortal";
import { VpnSslWebRealm } from "./vpnSslWebRealm";
import { VpnSslWebUserBookmark } from "./vpnSslWebUserBookmark";
import { VpnSslWebUserGroupBookmark } from "./vpnSslWebUserGroupBookmark";
import { WafMainClass } from "./wafMainClass";
import { WafProfile } from "./wafProfile";
import { WafSignature } from "./wafSignature";
import { WafSubClass } from "./wafSubClass";
import { WanoptAuthGroup } from "./wanoptAuthGroup";
import { WanoptCacheService } from "./wanoptCacheService";
import { WanoptContentDeliveryNetworkRule } from "./wanoptContentDeliveryNetworkRule";
import { WanoptPeer } from "./wanoptPeer";
import { WanoptProfile } from "./wanoptProfile";
import { WanoptRemoteStorage } from "./wanoptRemoteStorage";
import { WanoptSettings } from "./wanoptSettings";
import { WanoptWebcache } from "./wanoptWebcache";
import { WebProxyDebugUrl } from "./webProxyDebugUrl";
import { WebProxyExplicit } from "./webProxyExplicit";
import { WebProxyForwardServer } from "./webProxyForwardServer";
import { WebProxyForwardServerGroup } from "./webProxyForwardServerGroup";
import { WebProxyGlobal } from "./webProxyGlobal";
import { WebProxyProfile } from "./webProxyProfile";
import { WebProxyUrlMatch } from "./webProxyUrlMatch";
import { WebProxyWisp } from "./webProxyWisp";
import { WebfilterContent } from "./webfilterContent";
import { WebfilterContentHeader } from "./webfilterContentHeader";
import { WebfilterFortiguard } from "./webfilterFortiguard";
import { WebfilterFtgdLocalCat } from "./webfilterFtgdLocalCat";
import { WebfilterFtgdLocalRating } from "./webfilterFtgdLocalRating";
import { WebfilterIpsUrlfilterCacheSetting } from "./webfilterIpsUrlfilterCacheSetting";
import { WebfilterIpsUrlfilterSetting6 } from "./webfilterIpsUrlfilterSetting6";
import { WebfilterIpsUrlfilterSetting } from "./webfilterIpsUrlfilterSetting";
import { WebfilterOverride } from "./webfilterOverride";
import { WebfilterProfile } from "./webfilterProfile";
import { WebfilterSearchEngine } from "./webfilterSearchEngine";
import { WebfilterUrlfilter } from "./webfilterUrlfilter";
import { WirelessControllerAccessControlList } from "./wirelessControllerAccessControlList";
import { WirelessControllerAddress } from "./wirelessControllerAddress";
import { WirelessControllerAddrgrp } from "./wirelessControllerAddrgrp";
import { WirelessControllerApStatus } from "./wirelessControllerApStatus";
import { WirelessControllerApcfgProfile } from "./wirelessControllerApcfgProfile";
import { WirelessControllerArrpProfile } from "./wirelessControllerArrpProfile";
import { WirelessControllerBleProfile } from "./wirelessControllerBleProfile";
import { WirelessControllerBonjourProfile } from "./wirelessControllerBonjourProfile";
import { WirelessControllerGlobal } from "./wirelessControllerGlobal";
import { WirelessControllerHotspot20Anqp3GppCellular } from "./wirelessControllerHotspot20Anqp3GppCellular";
import { WirelessControllerHotspot20AnqpIpAddressType } from "./wirelessControllerHotspot20AnqpIpAddressType";
import { WirelessControllerHotspot20AnqpNaiRealm } from "./wirelessControllerHotspot20AnqpNaiRealm";
import { WirelessControllerHotspot20AnqpNetworkAuthType } from "./wirelessControllerHotspot20AnqpNetworkAuthType";
import { WirelessControllerHotspot20AnqpRoamingConsortium } from "./wirelessControllerHotspot20AnqpRoamingConsortium";
import { WirelessControllerHotspot20AnqpVenueName } from "./wirelessControllerHotspot20AnqpVenueName";
import { WirelessControllerHotspot20H2QpConnCapability } from "./wirelessControllerHotspot20H2QpConnCapability";
import { WirelessControllerHotspot20H2QpOperatorName } from "./wirelessControllerHotspot20H2QpOperatorName";
import { WirelessControllerHotspot20H2QpOsuProvider } from "./wirelessControllerHotspot20H2QpOsuProvider";
import { WirelessControllerHotspot20H2QpWanMetric } from "./wirelessControllerHotspot20H2QpWanMetric";
import { WirelessControllerHotspot20HsProfile } from "./wirelessControllerHotspot20HsProfile";
import { WirelessControllerHotspot20Icon } from "./wirelessControllerHotspot20Icon";
import { WirelessControllerHotspot20QosMap } from "./wirelessControllerHotspot20QosMap";
import { WirelessControllerInterController } from "./wirelessControllerInterController";
import { WirelessControllerLog } from "./wirelessControllerLog";
import { WirelessControllerMpskProfile } from "./wirelessControllerMpskProfile";
import { WirelessControllerQosProfile } from "./wirelessControllerQosProfile";
import { WirelessControllerRegion } from "./wirelessControllerRegion";
import { WirelessControllerSetting } from "./wirelessControllerSetting";
import { WirelessControllerSnmp } from "./wirelessControllerSnmp";
import { WirelessControllerTimers } from "./wirelessControllerTimers";
import { WirelessControllerUtmProfile } from "./wirelessControllerUtmProfile";
import { WirelessControllerVap } from "./wirelessControllerVap";
import { WirelessControllerVapGroup } from "./wirelessControllerVapGroup";
import { WirelessControllerWagProfile } from "./wirelessControllerWagProfile";
import { WirelessControllerWidsProfile } from "./wirelessControllerWidsProfile";
import { WirelessControllerWtp } from "./wirelessControllerWtp";
import { WirelessControllerWtpGroup } from "./wirelessControllerWtpGroup";
import { WirelessControllerWtpProfile } from "./wirelessControllerWtpProfile";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:index/alertemailSetting:AlertemailSetting":
                return new AlertemailSetting(name, <any>undefined, { urn })
            case "fortios:index/antivirusHeuristic:AntivirusHeuristic":
                return new AntivirusHeuristic(name, <any>undefined, { urn })
            case "fortios:index/antivirusProfile:AntivirusProfile":
                return new AntivirusProfile(name, <any>undefined, { urn })
            case "fortios:index/antivirusQuarantine:AntivirusQuarantine":
                return new AntivirusQuarantine(name, <any>undefined, { urn })
            case "fortios:index/antivirusSettings:AntivirusSettings":
                return new AntivirusSettings(name, <any>undefined, { urn })
            case "fortios:index/applicationCustom:ApplicationCustom":
                return new ApplicationCustom(name, <any>undefined, { urn })
            case "fortios:index/applicationGroup:ApplicationGroup":
                return new ApplicationGroup(name, <any>undefined, { urn })
            case "fortios:index/applicationList:ApplicationList":
                return new ApplicationList(name, <any>undefined, { urn })
            case "fortios:index/applicationName:ApplicationName":
                return new ApplicationName(name, <any>undefined, { urn })
            case "fortios:index/applicationRuleSettings:ApplicationRuleSettings":
                return new ApplicationRuleSettings(name, <any>undefined, { urn })
            case "fortios:index/authenticationRule:AuthenticationRule":
                return new AuthenticationRule(name, <any>undefined, { urn })
            case "fortios:index/authenticationScheme:AuthenticationScheme":
                return new AuthenticationScheme(name, <any>undefined, { urn })
            case "fortios:index/authenticationSetting:AuthenticationSetting":
                return new AuthenticationSetting(name, <any>undefined, { urn })
            case "fortios:index/certificateCa:CertificateCa":
                return new CertificateCa(name, <any>undefined, { urn })
            case "fortios:index/certificateCrl:CertificateCrl":
                return new CertificateCrl(name, <any>undefined, { urn })
            case "fortios:index/certificateLocal:CertificateLocal":
                return new CertificateLocal(name, <any>undefined, { urn })
            case "fortios:index/certificateRemote:CertificateRemote":
                return new CertificateRemote(name, <any>undefined, { urn })
            case "fortios:index/cifsDomainController:CifsDomainController":
                return new CifsDomainController(name, <any>undefined, { urn })
            case "fortios:index/cifsProfile:CifsProfile":
                return new CifsProfile(name, <any>undefined, { urn })
            case "fortios:index/credentialStoreDomainController:CredentialStoreDomainController":
                return new CredentialStoreDomainController(name, <any>undefined, { urn })
            case "fortios:index/dlpFilepattern:DlpFilepattern":
                return new DlpFilepattern(name, <any>undefined, { urn })
            case "fortios:index/dlpFpDocSource:DlpFpDocSource":
                return new DlpFpDocSource(name, <any>undefined, { urn })
            case "fortios:index/dlpFpSensitivity:DlpFpSensitivity":
                return new DlpFpSensitivity(name, <any>undefined, { urn })
            case "fortios:index/dlpSensitivity:DlpSensitivity":
                return new DlpSensitivity(name, <any>undefined, { urn })
            case "fortios:index/dlpSensor:DlpSensor":
                return new DlpSensor(name, <any>undefined, { urn })
            case "fortios:index/dlpSettings:DlpSettings":
                return new DlpSettings(name, <any>undefined, { urn })
            case "fortios:index/dnsfilterDomainFilter:DnsfilterDomainFilter":
                return new DnsfilterDomainFilter(name, <any>undefined, { urn })
            case "fortios:index/dnsfilterProfile:DnsfilterProfile":
                return new DnsfilterProfile(name, <any>undefined, { urn })
            case "fortios:index/dpdkCpus:DpdkCpus":
                return new DpdkCpus(name, <any>undefined, { urn })
            case "fortios:index/dpdkGlobal:DpdkGlobal":
                return new DpdkGlobal(name, <any>undefined, { urn })
            case "fortios:index/emailfilterBlockAllowList:EmailfilterBlockAllowList":
                return new EmailfilterBlockAllowList(name, <any>undefined, { urn })
            case "fortios:index/emailfilterBwl:EmailfilterBwl":
                return new EmailfilterBwl(name, <any>undefined, { urn })
            case "fortios:index/emailfilterBword:EmailfilterBword":
                return new EmailfilterBword(name, <any>undefined, { urn })
            case "fortios:index/emailfilterDnsbl:EmailfilterDnsbl":
                return new EmailfilterDnsbl(name, <any>undefined, { urn })
            case "fortios:index/emailfilterFortishield:EmailfilterFortishield":
                return new EmailfilterFortishield(name, <any>undefined, { urn })
            case "fortios:index/emailfilterIptrust:EmailfilterIptrust":
                return new EmailfilterIptrust(name, <any>undefined, { urn })
            case "fortios:index/emailfilterMheader:EmailfilterMheader":
                return new EmailfilterMheader(name, <any>undefined, { urn })
            case "fortios:index/emailfilterOptions:EmailfilterOptions":
                return new EmailfilterOptions(name, <any>undefined, { urn })
            case "fortios:index/emailfilterProfile:EmailfilterProfile":
                return new EmailfilterProfile(name, <any>undefined, { urn })
            case "fortios:index/endpointControlClient:EndpointControlClient":
                return new EndpointControlClient(name, <any>undefined, { urn })
            case "fortios:index/endpointControlFctems:EndpointControlFctems":
                return new EndpointControlFctems(name, <any>undefined, { urn })
            case "fortios:index/endpointControlForticlientEms:EndpointControlForticlientEms":
                return new EndpointControlForticlientEms(name, <any>undefined, { urn })
            case "fortios:index/endpointControlForticlientRegistrationSync:EndpointControlForticlientRegistrationSync":
                return new EndpointControlForticlientRegistrationSync(name, <any>undefined, { urn })
            case "fortios:index/endpointControlProfile:EndpointControlProfile":
                return new EndpointControlProfile(name, <any>undefined, { urn })
            case "fortios:index/endpointControlRegisteredForticlient:EndpointControlRegisteredForticlient":
                return new EndpointControlRegisteredForticlient(name, <any>undefined, { urn })
            case "fortios:index/endpointControlSettings:EndpointControlSettings":
                return new EndpointControlSettings(name, <any>undefined, { urn })
            case "fortios:index/extenderControllerDataplan:ExtenderControllerDataplan":
                return new ExtenderControllerDataplan(name, <any>undefined, { urn })
            case "fortios:index/extenderControllerExtender1:ExtenderControllerExtender1":
                return new ExtenderControllerExtender1(name, <any>undefined, { urn })
            case "fortios:index/extenderControllerExtender:ExtenderControllerExtender":
                return new ExtenderControllerExtender(name, <any>undefined, { urn })
            case "fortios:index/fileFilterProfile:FileFilterProfile":
                return new FileFilterProfile(name, <any>undefined, { urn })
            case "fortios:index/firewallAddress6:FirewallAddress6":
                return new FirewallAddress6(name, <any>undefined, { urn })
            case "fortios:index/firewallAddress6Template:FirewallAddress6Template":
                return new FirewallAddress6Template(name, <any>undefined, { urn })
            case "fortios:index/firewallAddress:FirewallAddress":
                return new FirewallAddress(name, <any>undefined, { urn })
            case "fortios:index/firewallAddrgrp6:FirewallAddrgrp6":
                return new FirewallAddrgrp6(name, <any>undefined, { urn })
            case "fortios:index/firewallAddrgrp:FirewallAddrgrp":
                return new FirewallAddrgrp(name, <any>undefined, { urn })
            case "fortios:index/firewallAuthPortal:FirewallAuthPortal":
                return new FirewallAuthPortal(name, <any>undefined, { urn })
            case "fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap":
                return new FirewallCentralSnatMap(name, <any>undefined, { urn })
            case "fortios:index/firewallCentralsnatmapMove:FirewallCentralsnatmapMove":
                return new FirewallCentralsnatmapMove(name, <any>undefined, { urn })
            case "fortios:index/firewallCentralsnatmapSort:FirewallCentralsnatmapSort":
                return new FirewallCentralsnatmapSort(name, <any>undefined, { urn })
            case "fortios:index/firewallCity:FirewallCity":
                return new FirewallCity(name, <any>undefined, { urn })
            case "fortios:index/firewallConsolidatedPolicy:FirewallConsolidatedPolicy":
                return new FirewallConsolidatedPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallCountry:FirewallCountry":
                return new FirewallCountry(name, <any>undefined, { urn })
            case "fortios:index/firewallDecryptedTrafficMirror:FirewallDecryptedTrafficMirror":
                return new FirewallDecryptedTrafficMirror(name, <any>undefined, { urn })
            case "fortios:index/firewallDnstranslation:FirewallDnstranslation":
                return new FirewallDnstranslation(name, <any>undefined, { urn })
            case "fortios:index/firewallDosPolicy6:FirewallDosPolicy6":
                return new FirewallDosPolicy6(name, <any>undefined, { urn })
            case "fortios:index/firewallDosPolicy:FirewallDosPolicy":
                return new FirewallDosPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallIdentityBasedRoute:FirewallIdentityBasedRoute":
                return new FirewallIdentityBasedRoute(name, <any>undefined, { urn })
            case "fortios:index/firewallInterfacePolicy6:FirewallInterfacePolicy6":
                return new FirewallInterfacePolicy6(name, <any>undefined, { urn })
            case "fortios:index/firewallInterfacePolicy:FirewallInterfacePolicy":
                return new FirewallInterfacePolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetService:FirewallInternetService":
                return new FirewallInternetService(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceAddition:FirewallInternetServiceAddition":
                return new FirewallInternetServiceAddition(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend":
                return new FirewallInternetServiceAppend(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceBotnet:FirewallInternetServiceBotnet":
                return new FirewallInternetServiceBotnet(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceCustom:FirewallInternetServiceCustom":
                return new FirewallInternetServiceCustom(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceCustomGroup:FirewallInternetServiceCustomGroup":
                return new FirewallInternetServiceCustomGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceDefinition:FirewallInternetServiceDefinition":
                return new FirewallInternetServiceDefinition(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceExtension:FirewallInternetServiceExtension":
                return new FirewallInternetServiceExtension(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceGroup:FirewallInternetServiceGroup":
                return new FirewallInternetServiceGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceIpblReason:FirewallInternetServiceIpblReason":
                return new FirewallInternetServiceIpblReason(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceIpblVendor:FirewallInternetServiceIpblVendor":
                return new FirewallInternetServiceIpblVendor(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceList:FirewallInternetServiceList":
                return new FirewallInternetServiceList(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceName:FirewallInternetServiceName":
                return new FirewallInternetServiceName(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceOwner:FirewallInternetServiceOwner":
                return new FirewallInternetServiceOwner(name, <any>undefined, { urn })
            case "fortios:index/firewallInternetServiceReputation:FirewallInternetServiceReputation":
                return new FirewallInternetServiceReputation(name, <any>undefined, { urn })
            case "fortios:index/firewallIpTranslation:FirewallIpTranslation":
                return new FirewallIpTranslation(name, <any>undefined, { urn })
            case "fortios:index/firewallIpmacbindingSetting:FirewallIpmacbindingSetting":
                return new FirewallIpmacbindingSetting(name, <any>undefined, { urn })
            case "fortios:index/firewallIpmacbindingTable:FirewallIpmacbindingTable":
                return new FirewallIpmacbindingTable(name, <any>undefined, { urn })
            case "fortios:index/firewallIppool6:FirewallIppool6":
                return new FirewallIppool6(name, <any>undefined, { urn })
            case "fortios:index/firewallIppool:FirewallIppool":
                return new FirewallIppool(name, <any>undefined, { urn })
            case "fortios:index/firewallIpv6EhFilter:FirewallIpv6EhFilter":
                return new FirewallIpv6EhFilter(name, <any>undefined, { urn })
            case "fortios:index/firewallLdbMonitor:FirewallLdbMonitor":
                return new FirewallLdbMonitor(name, <any>undefined, { urn })
            case "fortios:index/firewallLocalInPolicy6:FirewallLocalInPolicy6":
                return new FirewallLocalInPolicy6(name, <any>undefined, { urn })
            case "fortios:index/firewallLocalInPolicy:FirewallLocalInPolicy":
                return new FirewallLocalInPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallMulticastAddress6:FirewallMulticastAddress6":
                return new FirewallMulticastAddress6(name, <any>undefined, { urn })
            case "fortios:index/firewallMulticastAddress:FirewallMulticastAddress":
                return new FirewallMulticastAddress(name, <any>undefined, { urn })
            case "fortios:index/firewallMulticastPolicy6:FirewallMulticastPolicy6":
                return new FirewallMulticastPolicy6(name, <any>undefined, { urn })
            case "fortios:index/firewallMulticastPolicy:FirewallMulticastPolicy":
                return new FirewallMulticastPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectAddress:FirewallObjectAddress":
                return new FirewallObjectAddress(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectAddressGroup:FirewallObjectAddressGroup":
                return new FirewallObjectAddressGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectIPPool:FirewallObjectIPPool":
                return new FirewallObjectIPPool(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectService:FirewallObjectService":
                return new FirewallObjectService(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectServiceCategory:FirewallObjectServiceCategory":
                return new FirewallObjectServiceCategory(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectServiceGroup:FirewallObjectServiceGroup":
                return new FirewallObjectServiceGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectVip:FirewallObjectVip":
                return new FirewallObjectVip(name, <any>undefined, { urn })
            case "fortios:index/firewallObjectVipGroup:FirewallObjectVipGroup":
                return new FirewallObjectVipGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallPolicy46:FirewallPolicy46":
                return new FirewallPolicy46(name, <any>undefined, { urn })
            case "fortios:index/firewallPolicy64:FirewallPolicy64":
                return new FirewallPolicy64(name, <any>undefined, { urn })
            case "fortios:index/firewallPolicy6:FirewallPolicy6":
                return new FirewallPolicy6(name, <any>undefined, { urn })
            case "fortios:index/firewallPolicy:FirewallPolicy":
                return new FirewallPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallProfileGroup:FirewallProfileGroup":
                return new FirewallProfileGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallProfileProtocolOptions:FirewallProfileProtocolOptions":
                return new FirewallProfileProtocolOptions(name, <any>undefined, { urn })
            case "fortios:index/firewallProxyAddress:FirewallProxyAddress":
                return new FirewallProxyAddress(name, <any>undefined, { urn })
            case "fortios:index/firewallProxyAddrgrp:FirewallProxyAddrgrp":
                return new FirewallProxyAddrgrp(name, <any>undefined, { urn })
            case "fortios:index/firewallProxyPolicy:FirewallProxyPolicy":
                return new FirewallProxyPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallProxypolicyMove:FirewallProxypolicyMove":
                return new FirewallProxypolicyMove(name, <any>undefined, { urn })
            case "fortios:index/firewallProxypolicySort:FirewallProxypolicySort":
                return new FirewallProxypolicySort(name, <any>undefined, { urn })
            case "fortios:index/firewallRegion:FirewallRegion":
                return new FirewallRegion(name, <any>undefined, { urn })
            case "fortios:index/firewallScheduleGroup:FirewallScheduleGroup":
                return new FirewallScheduleGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallScheduleOnetime:FirewallScheduleOnetime":
                return new FirewallScheduleOnetime(name, <any>undefined, { urn })
            case "fortios:index/firewallScheduleRecurring:FirewallScheduleRecurring":
                return new FirewallScheduleRecurring(name, <any>undefined, { urn })
            case "fortios:index/firewallSecurityPolicy1:FirewallSecurityPolicy1":
                return new FirewallSecurityPolicy1(name, <any>undefined, { urn })
            case "fortios:index/firewallSecurityPolicy:FirewallSecurityPolicy":
                return new FirewallSecurityPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallSecurityPolicySeq:FirewallSecurityPolicySeq":
                return new FirewallSecurityPolicySeq(name, <any>undefined, { urn })
            case "fortios:index/firewallSecurityPolicySort:FirewallSecurityPolicySort":
                return new FirewallSecurityPolicySort(name, <any>undefined, { urn })
            case "fortios:index/firewallServiceCategory:FirewallServiceCategory":
                return new FirewallServiceCategory(name, <any>undefined, { urn })
            case "fortios:index/firewallServiceCustom:FirewallServiceCustom":
                return new FirewallServiceCustom(name, <any>undefined, { urn })
            case "fortios:index/firewallServiceGroup:FirewallServiceGroup":
                return new FirewallServiceGroup(name, <any>undefined, { urn })
            case "fortios:index/firewallShaperPerIpShaper:FirewallShaperPerIpShaper":
                return new FirewallShaperPerIpShaper(name, <any>undefined, { urn })
            case "fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper":
                return new FirewallShaperTrafficShaper(name, <any>undefined, { urn })
            case "fortios:index/firewallShapingPolicy:FirewallShapingPolicy":
                return new FirewallShapingPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallShapingProfile:FirewallShapingProfile":
                return new FirewallShapingProfile(name, <any>undefined, { urn })
            case "fortios:index/firewallSniffer:FirewallSniffer":
                return new FirewallSniffer(name, <any>undefined, { urn })
            case "fortios:index/firewallSshHostKey:FirewallSshHostKey":
                return new FirewallSshHostKey(name, <any>undefined, { urn })
            case "fortios:index/firewallSshLocalCa:FirewallSshLocalCa":
                return new FirewallSshLocalCa(name, <any>undefined, { urn })
            case "fortios:index/firewallSshLocalKey:FirewallSshLocalKey":
                return new FirewallSshLocalKey(name, <any>undefined, { urn })
            case "fortios:index/firewallSshSetting:FirewallSshSetting":
                return new FirewallSshSetting(name, <any>undefined, { urn })
            case "fortios:index/firewallSslServer:FirewallSslServer":
                return new FirewallSslServer(name, <any>undefined, { urn })
            case "fortios:index/firewallSslSetting:FirewallSslSetting":
                return new FirewallSslSetting(name, <any>undefined, { urn })
            case "fortios:index/firewallSslSshProfile:FirewallSslSshProfile":
                return new FirewallSslSshProfile(name, <any>undefined, { urn })
            case "fortios:index/firewallTrafficClass:FirewallTrafficClass":
                return new FirewallTrafficClass(name, <any>undefined, { urn })
            case "fortios:index/firewallTtlPolicy:FirewallTtlPolicy":
                return new FirewallTtlPolicy(name, <any>undefined, { urn })
            case "fortios:index/firewallVendorMac:FirewallVendorMac":
                return new FirewallVendorMac(name, <any>undefined, { urn })
            case "fortios:index/firewallVip46:FirewallVip46":
                return new FirewallVip46(name, <any>undefined, { urn })
            case "fortios:index/firewallVip64:FirewallVip64":
                return new FirewallVip64(name, <any>undefined, { urn })
            case "fortios:index/firewallVip6:FirewallVip6":
                return new FirewallVip6(name, <any>undefined, { urn })
            case "fortios:index/firewallVip:FirewallVip":
                return new FirewallVip(name, <any>undefined, { urn })
            case "fortios:index/firewallVipgrp46:FirewallVipgrp46":
                return new FirewallVipgrp46(name, <any>undefined, { urn })
            case "fortios:index/firewallVipgrp64:FirewallVipgrp64":
                return new FirewallVipgrp64(name, <any>undefined, { urn })
            case "fortios:index/firewallVipgrp6:FirewallVipgrp6":
                return new FirewallVipgrp6(name, <any>undefined, { urn })
            case "fortios:index/firewallVipgrp:FirewallVipgrp":
                return new FirewallVipgrp(name, <any>undefined, { urn })
            case "fortios:index/firewallWildcardFqdnCustom:FirewallWildcardFqdnCustom":
                return new FirewallWildcardFqdnCustom(name, <any>undefined, { urn })
            case "fortios:index/firewallWildcardFqdnGroup:FirewallWildcardFqdnGroup":
                return new FirewallWildcardFqdnGroup(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerDVMDevice:FortimanagerDVMDevice":
                return new FortimanagerDVMDevice(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerDVMInstallDev:FortimanagerDVMInstallDev":
                return new FortimanagerDVMInstallDev(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerDVMInstallPolicyPackage:FortimanagerDVMInstallPolicyPackage":
                return new FortimanagerDVMInstallPolicyPackage(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerDVMScript:FortimanagerDVMScript":
                return new FortimanagerDVMScript(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerDVMScriptExecute:FortimanagerDVMScriptExecute":
                return new FortimanagerDVMScriptExecute(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallObjectAddress:FortimanagerFirewallObjectAddress":
                return new FortimanagerFirewallObjectAddress(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallObjectIppool:FortimanagerFirewallObjectIppool":
                return new FortimanagerFirewallObjectIppool(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallObjectService:FortimanagerFirewallObjectService":
                return new FortimanagerFirewallObjectService(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallObjectVip:FortimanagerFirewallObjectVip":
                return new FortimanagerFirewallObjectVip(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallSecurityPolicy:FortimanagerFirewallSecurityPolicy":
                return new FortimanagerFirewallSecurityPolicy(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerFirewallSecurityPolicyPackage:FortimanagerFirewallSecurityPolicyPackage":
                return new FortimanagerFirewallSecurityPolicyPackage(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerJSONRPCRequest:FortimanagerJSONRPCRequest":
                return new FortimanagerJSONRPCRequest(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerObjectAdomRevision:FortimanagerObjectAdomRevision":
                return new FortimanagerObjectAdomRevision(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemAdmin:FortimanagerSystemAdmin":
                return new FortimanagerSystemAdmin(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemAdminProfiles:FortimanagerSystemAdminProfiles":
                return new FortimanagerSystemAdminProfiles(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemAdminUser:FortimanagerSystemAdminUser":
                return new FortimanagerSystemAdminUser(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemAdom:FortimanagerSystemAdom":
                return new FortimanagerSystemAdom(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemDNS:FortimanagerSystemDNS":
                return new FortimanagerSystemDNS(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemGlobal:FortimanagerSystemGlobal":
                return new FortimanagerSystemGlobal(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemLicenseFortiCare:FortimanagerSystemLicenseFortiCare":
                return new FortimanagerSystemLicenseFortiCare(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemLicenseVM:FortimanagerSystemLicenseVM":
                return new FortimanagerSystemLicenseVM(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemNTP:FortimanagerSystemNTP":
                return new FortimanagerSystemNTP(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemNetworkInterface:FortimanagerSystemNetworkInterface":
                return new FortimanagerSystemNetworkInterface(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemNetworkRoute:FortimanagerSystemNetworkRoute":
                return new FortimanagerSystemNetworkRoute(name, <any>undefined, { urn })
            case "fortios:index/fortimanagerSystemSyslogServer:FortimanagerSystemSyslogServer":
                return new FortimanagerSystemSyslogServer(name, <any>undefined, { urn })
            case "fortios:index/ftpProxyExplicit:FtpProxyExplicit":
                return new FtpProxyExplicit(name, <any>undefined, { urn })
            case "fortios:index/icapProfile:IcapProfile":
                return new IcapProfile(name, <any>undefined, { urn })
            case "fortios:index/icapServer:IcapServer":
                return new IcapServer(name, <any>undefined, { urn })
            case "fortios:index/ipsCustom:IpsCustom":
                return new IpsCustom(name, <any>undefined, { urn })
            case "fortios:index/ipsDecoder:IpsDecoder":
                return new IpsDecoder(name, <any>undefined, { urn })
            case "fortios:index/ipsGlobal:IpsGlobal":
                return new IpsGlobal(name, <any>undefined, { urn })
            case "fortios:index/ipsRule:IpsRule":
                return new IpsRule(name, <any>undefined, { urn })
            case "fortios:index/ipsRuleSettings:IpsRuleSettings":
                return new IpsRuleSettings(name, <any>undefined, { urn })
            case "fortios:index/ipsSensor:IpsSensor":
                return new IpsSensor(name, <any>undefined, { urn })
            case "fortios:index/ipsSettings:IpsSettings":
                return new IpsSettings(name, <any>undefined, { urn })
            case "fortios:index/ipsViewMap:IpsViewMap":
                return new IpsViewMap(name, <any>undefined, { urn })
            case "fortios:index/jSONGenericAPI:JSONGenericAPI":
                return new JSONGenericAPI(name, <any>undefined, { urn })
            case "fortios:index/logCustomField:LogCustomField":
                return new LogCustomField(name, <any>undefined, { urn })
            case "fortios:index/logDiskFilter:LogDiskFilter":
                return new LogDiskFilter(name, <any>undefined, { urn })
            case "fortios:index/logDiskSetting:LogDiskSetting":
                return new LogDiskSetting(name, <any>undefined, { urn })
            case "fortios:index/logEventfilter:LogEventfilter":
                return new LogEventfilter(name, <any>undefined, { urn })
            case "fortios:index/logFortiAnalyzerSettingLegacy:LogFortiAnalyzerSettingLegacy":
                return new LogFortiAnalyzerSettingLegacy(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer2Filter:LogFortianalyzer2Filter":
                return new LogFortianalyzer2Filter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer2OverrideFilter:LogFortianalyzer2OverrideFilter":
                return new LogFortianalyzer2OverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer2OverrideSetting:LogFortianalyzer2OverrideSetting":
                return new LogFortianalyzer2OverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer2Setting:LogFortianalyzer2Setting":
                return new LogFortianalyzer2Setting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer3Filter:LogFortianalyzer3Filter":
                return new LogFortianalyzer3Filter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer3OverrideFilter:LogFortianalyzer3OverrideFilter":
                return new LogFortianalyzer3OverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer3OverrideSetting:LogFortianalyzer3OverrideSetting":
                return new LogFortianalyzer3OverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzer3Setting:LogFortianalyzer3Setting":
                return new LogFortianalyzer3Setting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerCloudFilter:LogFortianalyzerCloudFilter":
                return new LogFortianalyzerCloudFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerCloudOverrideFilter:LogFortianalyzerCloudOverrideFilter":
                return new LogFortianalyzerCloudOverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerCloudOverrideSetting:LogFortianalyzerCloudOverrideSetting":
                return new LogFortianalyzerCloudOverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerCloudSetting:LogFortianalyzerCloudSetting":
                return new LogFortianalyzerCloudSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerFilter:LogFortianalyzerFilter":
                return new LogFortianalyzerFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerOverrideFilter:LogFortianalyzerOverrideFilter":
                return new LogFortianalyzerOverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerOverrideSetting:LogFortianalyzerOverrideSetting":
                return new LogFortianalyzerOverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortianalyzerSetting:LogFortianalyzerSetting":
                return new LogFortianalyzerSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortiguardFilter:LogFortiguardFilter":
                return new LogFortiguardFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortiguardOverrideFilter:LogFortiguardOverrideFilter":
                return new LogFortiguardOverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logFortiguardOverrideSetting:LogFortiguardOverrideSetting":
                return new LogFortiguardOverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logFortiguardSetting:LogFortiguardSetting":
                return new LogFortiguardSetting(name, <any>undefined, { urn })
            case "fortios:index/logGuiDisplay:LogGuiDisplay":
                return new LogGuiDisplay(name, <any>undefined, { urn })
            case "fortios:index/logMemoryFilter:LogMemoryFilter":
                return new LogMemoryFilter(name, <any>undefined, { urn })
            case "fortios:index/logMemoryGlobalSetting:LogMemoryGlobalSetting":
                return new LogMemoryGlobalSetting(name, <any>undefined, { urn })
            case "fortios:index/logMemorySetting:LogMemorySetting":
                return new LogMemorySetting(name, <any>undefined, { urn })
            case "fortios:index/logNullDeviceFilter:LogNullDeviceFilter":
                return new LogNullDeviceFilter(name, <any>undefined, { urn })
            case "fortios:index/logNullDeviceSetting:LogNullDeviceSetting":
                return new LogNullDeviceSetting(name, <any>undefined, { urn })
            case "fortios:index/logSetting:LogSetting":
                return new LogSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogSetting:LogSyslogSetting":
                return new LogSyslogSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd2Filter:LogSyslogd2Filter":
                return new LogSyslogd2Filter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd2OverrideFilter:LogSyslogd2OverrideFilter":
                return new LogSyslogd2OverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd2OverrideSetting:LogSyslogd2OverrideSetting":
                return new LogSyslogd2OverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd2Setting:LogSyslogd2Setting":
                return new LogSyslogd2Setting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd3Filter:LogSyslogd3Filter":
                return new LogSyslogd3Filter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd3OverrideFilter:LogSyslogd3OverrideFilter":
                return new LogSyslogd3OverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd3OverrideSetting:LogSyslogd3OverrideSetting":
                return new LogSyslogd3OverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd3Setting:LogSyslogd3Setting":
                return new LogSyslogd3Setting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd4Filter:LogSyslogd4Filter":
                return new LogSyslogd4Filter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd4OverrideFilter:LogSyslogd4OverrideFilter":
                return new LogSyslogd4OverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd4OverrideSetting:LogSyslogd4OverrideSetting":
                return new LogSyslogd4OverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogd4Setting:LogSyslogd4Setting":
                return new LogSyslogd4Setting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogdFilter:LogSyslogdFilter":
                return new LogSyslogdFilter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogdOverrideFilter:LogSyslogdOverrideFilter":
                return new LogSyslogdOverrideFilter(name, <any>undefined, { urn })
            case "fortios:index/logSyslogdOverrideSetting:LogSyslogdOverrideSetting":
                return new LogSyslogdOverrideSetting(name, <any>undefined, { urn })
            case "fortios:index/logSyslogdSetting:LogSyslogdSetting":
                return new LogSyslogdSetting(name, <any>undefined, { urn })
            case "fortios:index/logThreatWeight:LogThreatWeight":
                return new LogThreatWeight(name, <any>undefined, { urn })
            case "fortios:index/logWebtrendsFilter:LogWebtrendsFilter":
                return new LogWebtrendsFilter(name, <any>undefined, { urn })
            case "fortios:index/logWebtrendsSetting:LogWebtrendsSetting":
                return new LogWebtrendsSetting(name, <any>undefined, { urn })
            case "fortios:index/networkingInterfacePort:NetworkingInterfacePort":
                return new NetworkingInterfacePort(name, <any>undefined, { urn })
            case "fortios:index/networkingRouteStatic:NetworkingRouteStatic":
                return new NetworkingRouteStatic(name, <any>undefined, { urn })
            case "fortios:index/nsxtServiceChain:NsxtServiceChain":
                return new NsxtServiceChain(name, <any>undefined, { urn })
            case "fortios:index/nsxtSetting:NsxtSetting":
                return new NsxtSetting(name, <any>undefined, { urn })
            case "fortios:index/reportChart:ReportChart":
                return new ReportChart(name, <any>undefined, { urn })
            case "fortios:index/reportDataset:ReportDataset":
                return new ReportDataset(name, <any>undefined, { urn })
            case "fortios:index/reportLayout:ReportLayout":
                return new ReportLayout(name, <any>undefined, { urn })
            case "fortios:index/reportSetting:ReportSetting":
                return new ReportSetting(name, <any>undefined, { urn })
            case "fortios:index/reportStyle:ReportStyle":
                return new ReportStyle(name, <any>undefined, { urn })
            case "fortios:index/reportTheme:ReportTheme":
                return new ReportTheme(name, <any>undefined, { urn })
            case "fortios:index/routerAccessList6:RouterAccessList6":
                return new RouterAccessList6(name, <any>undefined, { urn })
            case "fortios:index/routerAccessList:RouterAccessList":
                return new RouterAccessList(name, <any>undefined, { urn })
            case "fortios:index/routerAspathList:RouterAspathList":
                return new RouterAspathList(name, <any>undefined, { urn })
            case "fortios:index/routerAuthPath:RouterAuthPath":
                return new RouterAuthPath(name, <any>undefined, { urn })
            case "fortios:index/routerBfd6:RouterBfd6":
                return new RouterBfd6(name, <any>undefined, { urn })
            case "fortios:index/routerBfd:RouterBfd":
                return new RouterBfd(name, <any>undefined, { urn })
            case "fortios:index/routerBgp:RouterBgp":
                return new RouterBgp(name, <any>undefined, { urn })
            case "fortios:index/routerCommunityList:RouterCommunityList":
                return new RouterCommunityList(name, <any>undefined, { urn })
            case "fortios:index/routerIsis:RouterIsis":
                return new RouterIsis(name, <any>undefined, { urn })
            case "fortios:index/routerKeyChain:RouterKeyChain":
                return new RouterKeyChain(name, <any>undefined, { urn })
            case "fortios:index/routerMulticast6:RouterMulticast6":
                return new RouterMulticast6(name, <any>undefined, { urn })
            case "fortios:index/routerMulticast:RouterMulticast":
                return new RouterMulticast(name, <any>undefined, { urn })
            case "fortios:index/routerMulticastFlow:RouterMulticastFlow":
                return new RouterMulticastFlow(name, <any>undefined, { urn })
            case "fortios:index/routerOspf6:RouterOspf6":
                return new RouterOspf6(name, <any>undefined, { urn })
            case "fortios:index/routerOspf:RouterOspf":
                return new RouterOspf(name, <any>undefined, { urn })
            case "fortios:index/routerPolicy6:RouterPolicy6":
                return new RouterPolicy6(name, <any>undefined, { urn })
            case "fortios:index/routerPolicy:RouterPolicy":
                return new RouterPolicy(name, <any>undefined, { urn })
            case "fortios:index/routerPrefixList6:RouterPrefixList6":
                return new RouterPrefixList6(name, <any>undefined, { urn })
            case "fortios:index/routerPrefixList:RouterPrefixList":
                return new RouterPrefixList(name, <any>undefined, { urn })
            case "fortios:index/routerRip:RouterRip":
                return new RouterRip(name, <any>undefined, { urn })
            case "fortios:index/routerRipng:RouterRipng":
                return new RouterRipng(name, <any>undefined, { urn })
            case "fortios:index/routerRouteMap:RouterRouteMap":
                return new RouterRouteMap(name, <any>undefined, { urn })
            case "fortios:index/routerSetting:RouterSetting":
                return new RouterSetting(name, <any>undefined, { urn })
            case "fortios:index/routerStatic6:RouterStatic6":
                return new RouterStatic6(name, <any>undefined, { urn })
            case "fortios:index/routerStatic:RouterStatic":
                return new RouterStatic(name, <any>undefined, { urn })
            case "fortios:index/routerbgpNeighbor:RouterbgpNeighbor":
                return new RouterbgpNeighbor(name, <any>undefined, { urn })
            case "fortios:index/routerbgpNetwork6:RouterbgpNetwork6":
                return new RouterbgpNetwork6(name, <any>undefined, { urn })
            case "fortios:index/routerbgpNetwork:RouterbgpNetwork":
                return new RouterbgpNetwork(name, <any>undefined, { urn })
            case "fortios:index/routerospf6Ospf6Interface:Routerospf6Ospf6Interface":
                return new Routerospf6Ospf6Interface(name, <any>undefined, { urn })
            case "fortios:index/routerospfNeighbor:RouterospfNeighbor":
                return new RouterospfNeighbor(name, <any>undefined, { urn })
            case "fortios:index/routerospfNetwork:RouterospfNetwork":
                return new RouterospfNetwork(name, <any>undefined, { urn })
            case "fortios:index/routerospfOspfInterface:RouterospfOspfInterface":
                return new RouterospfOspfInterface(name, <any>undefined, { urn })
            case "fortios:index/spamfilterBwl:SpamfilterBwl":
                return new SpamfilterBwl(name, <any>undefined, { urn })
            case "fortios:index/spamfilterBword:SpamfilterBword":
                return new SpamfilterBword(name, <any>undefined, { urn })
            case "fortios:index/spamfilterDnsbl:SpamfilterDnsbl":
                return new SpamfilterDnsbl(name, <any>undefined, { urn })
            case "fortios:index/spamfilterFortishield:SpamfilterFortishield":
                return new SpamfilterFortishield(name, <any>undefined, { urn })
            case "fortios:index/spamfilterIptrust:SpamfilterIptrust":
                return new SpamfilterIptrust(name, <any>undefined, { urn })
            case "fortios:index/spamfilterMheader:SpamfilterMheader":
                return new SpamfilterMheader(name, <any>undefined, { urn })
            case "fortios:index/spamfilterOptions:SpamfilterOptions":
                return new SpamfilterOptions(name, <any>undefined, { urn })
            case "fortios:index/spamfilterProfile:SpamfilterProfile":
                return new SpamfilterProfile(name, <any>undefined, { urn })
            case "fortios:index/sshFilterProfile:SshFilterProfile":
                return new SshFilterProfile(name, <any>undefined, { urn })
            case "fortios:index/switchController8021XSettings:SwitchController8021XSettings":
                return new SwitchController8021XSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerAutoConfigCustom:SwitchControllerAutoConfigCustom":
                return new SwitchControllerAutoConfigCustom(name, <any>undefined, { urn })
            case "fortios:index/switchControllerAutoConfigDefault:SwitchControllerAutoConfigDefault":
                return new SwitchControllerAutoConfigDefault(name, <any>undefined, { urn })
            case "fortios:index/switchControllerAutoConfigPolicy:SwitchControllerAutoConfigPolicy":
                return new SwitchControllerAutoConfigPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerCustomCommand:SwitchControllerCustomCommand":
                return new SwitchControllerCustomCommand(name, <any>undefined, { urn })
            case "fortios:index/switchControllerFlowTracking:SwitchControllerFlowTracking":
                return new SwitchControllerFlowTracking(name, <any>undefined, { urn })
            case "fortios:index/switchControllerGlobal:SwitchControllerGlobal":
                return new SwitchControllerGlobal(name, <any>undefined, { urn })
            case "fortios:index/switchControllerIgmpSnooping:SwitchControllerIgmpSnooping":
                return new SwitchControllerIgmpSnooping(name, <any>undefined, { urn })
            case "fortios:index/switchControllerInitialConfigTemplate:SwitchControllerInitialConfigTemplate":
                return new SwitchControllerInitialConfigTemplate(name, <any>undefined, { urn })
            case "fortios:index/switchControllerInitialConfigVlans:SwitchControllerInitialConfigVlans":
                return new SwitchControllerInitialConfigVlans(name, <any>undefined, { urn })
            case "fortios:index/switchControllerLldpProfile:SwitchControllerLldpProfile":
                return new SwitchControllerLldpProfile(name, <any>undefined, { urn })
            case "fortios:index/switchControllerLldpSettings:SwitchControllerLldpSettings":
                return new SwitchControllerLldpSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerLocation:SwitchControllerLocation":
                return new SwitchControllerLocation(name, <any>undefined, { urn })
            case "fortios:index/switchControllerMacSyncSettings:SwitchControllerMacSyncSettings":
                return new SwitchControllerMacSyncSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerManagedSwitch:SwitchControllerManagedSwitch":
                return new SwitchControllerManagedSwitch(name, <any>undefined, { urn })
            case "fortios:index/switchControllerNacDevice:SwitchControllerNacDevice":
                return new SwitchControllerNacDevice(name, <any>undefined, { urn })
            case "fortios:index/switchControllerNacSettings:SwitchControllerNacSettings":
                return new SwitchControllerNacSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerNetworkMonitorSettings:SwitchControllerNetworkMonitorSettings":
                return new SwitchControllerNetworkMonitorSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerPortPolicy:SwitchControllerPortPolicy":
                return new SwitchControllerPortPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerPtpPolicy:SwitchControllerPtpPolicy":
                return new SwitchControllerPtpPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerPtpSettings:SwitchControllerPtpSettings":
                return new SwitchControllerPtpSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerQosDot1PMap:SwitchControllerQosDot1PMap":
                return new SwitchControllerQosDot1PMap(name, <any>undefined, { urn })
            case "fortios:index/switchControllerQosIpDscpMap:SwitchControllerQosIpDscpMap":
                return new SwitchControllerQosIpDscpMap(name, <any>undefined, { urn })
            case "fortios:index/switchControllerQosQosPolicy:SwitchControllerQosQosPolicy":
                return new SwitchControllerQosQosPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerQosQueuePolicy:SwitchControllerQosQueuePolicy":
                return new SwitchControllerQosQueuePolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerQuarantine:SwitchControllerQuarantine":
                return new SwitchControllerQuarantine(name, <any>undefined, { urn })
            case "fortios:index/switchControllerRemoteLog:SwitchControllerRemoteLog":
                return new SwitchControllerRemoteLog(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSecurityPolicy8021X:SwitchControllerSecurityPolicy8021X":
                return new SwitchControllerSecurityPolicy8021X(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSecurityPolicyCaptivePortal:SwitchControllerSecurityPolicyCaptivePortal":
                return new SwitchControllerSecurityPolicyCaptivePortal(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSecurityPolicyLocalAccess:SwitchControllerSecurityPolicyLocalAccess":
                return new SwitchControllerSecurityPolicyLocalAccess(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSflow:SwitchControllerSflow":
                return new SwitchControllerSflow(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSnmpCommunity:SwitchControllerSnmpCommunity":
                return new SwitchControllerSnmpCommunity(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSnmpSysinfo:SwitchControllerSnmpSysinfo":
                return new SwitchControllerSnmpSysinfo(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSnmpTrapThreshold:SwitchControllerSnmpTrapThreshold":
                return new SwitchControllerSnmpTrapThreshold(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSnmpUser:SwitchControllerSnmpUser":
                return new SwitchControllerSnmpUser(name, <any>undefined, { urn })
            case "fortios:index/switchControllerStormControl:SwitchControllerStormControl":
                return new SwitchControllerStormControl(name, <any>undefined, { urn })
            case "fortios:index/switchControllerStormControlPolicy:SwitchControllerStormControlPolicy":
                return new SwitchControllerStormControlPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerStpInstance:SwitchControllerStpInstance":
                return new SwitchControllerStpInstance(name, <any>undefined, { urn })
            case "fortios:index/switchControllerStpSettings:SwitchControllerStpSettings":
                return new SwitchControllerStpSettings(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSwitchGroup:SwitchControllerSwitchGroup":
                return new SwitchControllerSwitchGroup(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSwitchInterfaceTag:SwitchControllerSwitchInterfaceTag":
                return new SwitchControllerSwitchInterfaceTag(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSwitchLog:SwitchControllerSwitchLog":
                return new SwitchControllerSwitchLog(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSwitchProfile:SwitchControllerSwitchProfile":
                return new SwitchControllerSwitchProfile(name, <any>undefined, { urn })
            case "fortios:index/switchControllerSystem:SwitchControllerSystem":
                return new SwitchControllerSystem(name, <any>undefined, { urn })
            case "fortios:index/switchControllerTrafficPolicy:SwitchControllerTrafficPolicy":
                return new SwitchControllerTrafficPolicy(name, <any>undefined, { urn })
            case "fortios:index/switchControllerTrafficSniffer:SwitchControllerTrafficSniffer":
                return new SwitchControllerTrafficSniffer(name, <any>undefined, { urn })
            case "fortios:index/switchControllerVirtualPortPool:SwitchControllerVirtualPortPool":
                return new SwitchControllerVirtualPortPool(name, <any>undefined, { urn })
            case "fortios:index/switchControllerVlan:SwitchControllerVlan":
                return new SwitchControllerVlan(name, <any>undefined, { urn })
            case "fortios:index/switchControllerVlanPolicy:SwitchControllerVlanPolicy":
                return new SwitchControllerVlanPolicy(name, <any>undefined, { urn })
            case "fortios:index/systemAPIUserSetting:SystemAPIUserSetting":
                return new SystemAPIUserSetting(name, <any>undefined, { urn })
            case "fortios:index/systemAccprofile:SystemAccprofile":
                return new SystemAccprofile(name, <any>undefined, { urn })
            case "fortios:index/systemAdmin:SystemAdmin":
                return new SystemAdmin(name, <any>undefined, { urn })
            case "fortios:index/systemAdminAdministrator:SystemAdminAdministrator":
                return new SystemAdminAdministrator(name, <any>undefined, { urn })
            case "fortios:index/systemAdminProfiles:SystemAdminProfiles":
                return new SystemAdminProfiles(name, <any>undefined, { urn })
            case "fortios:index/systemAffinityInterrupt:SystemAffinityInterrupt":
                return new SystemAffinityInterrupt(name, <any>undefined, { urn })
            case "fortios:index/systemAffinityPacketRedistribution:SystemAffinityPacketRedistribution":
                return new SystemAffinityPacketRedistribution(name, <any>undefined, { urn })
            case "fortios:index/systemAlarm:SystemAlarm":
                return new SystemAlarm(name, <any>undefined, { urn })
            case "fortios:index/systemAlias:SystemAlias":
                return new SystemAlias(name, <any>undefined, { urn })
            case "fortios:index/systemApiUser:SystemApiUser":
                return new SystemApiUser(name, <any>undefined, { urn })
            case "fortios:index/systemArpTable:SystemArpTable":
                return new SystemArpTable(name, <any>undefined, { urn })
            case "fortios:index/systemAutoInstall:SystemAutoInstall":
                return new SystemAutoInstall(name, <any>undefined, { urn })
            case "fortios:index/systemAutoScript:SystemAutoScript":
                return new SystemAutoScript(name, <any>undefined, { urn })
            case "fortios:index/systemAutomationAction:SystemAutomationAction":
                return new SystemAutomationAction(name, <any>undefined, { urn })
            case "fortios:index/systemAutomationDestination:SystemAutomationDestination":
                return new SystemAutomationDestination(name, <any>undefined, { urn })
            case "fortios:index/systemAutomationStitch:SystemAutomationStitch":
                return new SystemAutomationStitch(name, <any>undefined, { urn })
            case "fortios:index/systemAutomationTrigger:SystemAutomationTrigger":
                return new SystemAutomationTrigger(name, <any>undefined, { urn })
            case "fortios:index/systemAutoupdatePushUpdate:SystemAutoupdatePushUpdate":
                return new SystemAutoupdatePushUpdate(name, <any>undefined, { urn })
            case "fortios:index/systemAutoupdateSchedule:SystemAutoupdateSchedule":
                return new SystemAutoupdateSchedule(name, <any>undefined, { urn })
            case "fortios:index/systemAutoupdateTunneling:SystemAutoupdateTunneling":
                return new SystemAutoupdateTunneling(name, <any>undefined, { urn })
            case "fortios:index/systemCentralManagement:SystemCentralManagement":
                return new SystemCentralManagement(name, <any>undefined, { urn })
            case "fortios:index/systemClusterSync:SystemClusterSync":
                return new SystemClusterSync(name, <any>undefined, { urn })
            case "fortios:index/systemConsole:SystemConsole":
                return new SystemConsole(name, <any>undefined, { urn })
            case "fortios:index/systemCsf:SystemCsf":
                return new SystemCsf(name, <any>undefined, { urn })
            case "fortios:index/systemCustomLanguage:SystemCustomLanguage":
                return new SystemCustomLanguage(name, <any>undefined, { urn })
            case "fortios:index/systemDdns:SystemDdns":
                return new SystemDdns(name, <any>undefined, { urn })
            case "fortios:index/systemDedicatedMgmt:SystemDedicatedMgmt":
                return new SystemDedicatedMgmt(name, <any>undefined, { urn })
            case "fortios:index/systemDhcp6Server:SystemDhcp6Server":
                return new SystemDhcp6Server(name, <any>undefined, { urn })
            case "fortios:index/systemDhcpServer:SystemDhcpServer":
                return new SystemDhcpServer(name, <any>undefined, { urn })
            case "fortios:index/systemDns:SystemDns":
                return new SystemDns(name, <any>undefined, { urn })
            case "fortios:index/systemDnsDatabase:SystemDnsDatabase":
                return new SystemDnsDatabase(name, <any>undefined, { urn })
            case "fortios:index/systemDnsServer:SystemDnsServer":
                return new SystemDnsServer(name, <any>undefined, { urn })
            case "fortios:index/systemDscpBasedPriority:SystemDscpBasedPriority":
                return new SystemDscpBasedPriority(name, <any>undefined, { urn })
            case "fortios:index/systemEmailServer:SystemEmailServer":
                return new SystemEmailServer(name, <any>undefined, { urn })
            case "fortios:index/systemExternalResource:SystemExternalResource":
                return new SystemExternalResource(name, <any>undefined, { urn })
            case "fortios:index/systemFederatedUpgrade:SystemFederatedUpgrade":
                return new SystemFederatedUpgrade(name, <any>undefined, { urn })
            case "fortios:index/systemFipsCc:SystemFipsCc":
                return new SystemFipsCc(name, <any>undefined, { urn })
            case "fortios:index/systemFm:SystemFm":
                return new SystemFm(name, <any>undefined, { urn })
            case "fortios:index/systemFortiguard:SystemFortiguard":
                return new SystemFortiguard(name, <any>undefined, { urn })
            case "fortios:index/systemFortimanager:SystemFortimanager":
                return new SystemFortimanager(name, <any>undefined, { urn })
            case "fortios:index/systemFortisandbox:SystemFortisandbox":
                return new SystemFortisandbox(name, <any>undefined, { urn })
            case "fortios:index/systemFssoPolling:SystemFssoPolling":
                return new SystemFssoPolling(name, <any>undefined, { urn })
            case "fortios:index/systemFtmPush:SystemFtmPush":
                return new SystemFtmPush(name, <any>undefined, { urn })
            case "fortios:index/systemGeneve:SystemGeneve":
                return new SystemGeneve(name, <any>undefined, { urn })
            case "fortios:index/systemGeoipCountry:SystemGeoipCountry":
                return new SystemGeoipCountry(name, <any>undefined, { urn })
            case "fortios:index/systemGeoipOverride:SystemGeoipOverride":
                return new SystemGeoipOverride(name, <any>undefined, { urn })
            case "fortios:index/systemGlobal:SystemGlobal":
                return new SystemGlobal(name, <any>undefined, { urn })
            case "fortios:index/systemGreTunnel:SystemGreTunnel":
                return new SystemGreTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemHa:SystemHa":
                return new SystemHa(name, <any>undefined, { urn })
            case "fortios:index/systemHaMonitor:SystemHaMonitor":
                return new SystemHaMonitor(name, <any>undefined, { urn })
            case "fortios:index/systemInterface:SystemInterface":
                return new SystemInterface(name, <any>undefined, { urn })
            case "fortios:index/systemIpipTunnel:SystemIpipTunnel":
                return new SystemIpipTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemIps:SystemIps":
                return new SystemIps(name, <any>undefined, { urn })
            case "fortios:index/systemIpsUrlfilterDns6:SystemIpsUrlfilterDns6":
                return new SystemIpsUrlfilterDns6(name, <any>undefined, { urn })
            case "fortios:index/systemIpsUrlfilterDns:SystemIpsUrlfilterDns":
                return new SystemIpsUrlfilterDns(name, <any>undefined, { urn })
            case "fortios:index/systemIpsecAggregate:SystemIpsecAggregate":
                return new SystemIpsecAggregate(name, <any>undefined, { urn })
            case "fortios:index/systemIpv6NeighborCache:SystemIpv6NeighborCache":
                return new SystemIpv6NeighborCache(name, <any>undefined, { urn })
            case "fortios:index/systemIpv6Tunnel:SystemIpv6Tunnel":
                return new SystemIpv6Tunnel(name, <any>undefined, { urn })
            case "fortios:index/systemLicenseFortiCare:SystemLicenseFortiCare":
                return new SystemLicenseFortiCare(name, <any>undefined, { urn })
            case "fortios:index/systemLicenseVDOM:SystemLicenseVDOM":
                return new SystemLicenseVDOM(name, <any>undefined, { urn })
            case "fortios:index/systemLicenseVM:SystemLicenseVM":
                return new SystemLicenseVM(name, <any>undefined, { urn })
            case "fortios:index/systemLinkMonitor:SystemLinkMonitor":
                return new SystemLinkMonitor(name, <any>undefined, { urn })
            case "fortios:index/systemLldpNetworkPolicy:SystemLldpNetworkPolicy":
                return new SystemLldpNetworkPolicy(name, <any>undefined, { urn })
            case "fortios:index/systemMacAddressTable:SystemMacAddressTable":
                return new SystemMacAddressTable(name, <any>undefined, { urn })
            case "fortios:index/systemManagementTunnel:SystemManagementTunnel":
                return new SystemManagementTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemMobileTunnel:SystemMobileTunnel":
                return new SystemMobileTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemNat64:SystemNat64":
                return new SystemNat64(name, <any>undefined, { urn })
            case "fortios:index/systemNdProxy:SystemNdProxy":
                return new SystemNdProxy(name, <any>undefined, { urn })
            case "fortios:index/systemNetflow:SystemNetflow":
                return new SystemNetflow(name, <any>undefined, { urn })
            case "fortios:index/systemNetworkVisibility:SystemNetworkVisibility":
                return new SystemNetworkVisibility(name, <any>undefined, { urn })
            case "fortios:index/systemNtp:SystemNtp":
                return new SystemNtp(name, <any>undefined, { urn })
            case "fortios:index/systemObjectTagging:SystemObjectTagging":
                return new SystemObjectTagging(name, <any>undefined, { urn })
            case "fortios:index/systemPasswordPolicy:SystemPasswordPolicy":
                return new SystemPasswordPolicy(name, <any>undefined, { urn })
            case "fortios:index/systemPasswordPolicyGuestAdmin:SystemPasswordPolicyGuestAdmin":
                return new SystemPasswordPolicyGuestAdmin(name, <any>undefined, { urn })
            case "fortios:index/systemPppoeInterface:SystemPppoeInterface":
                return new SystemPppoeInterface(name, <any>undefined, { urn })
            case "fortios:index/systemProbeResponse:SystemProbeResponse":
                return new SystemProbeResponse(name, <any>undefined, { urn })
            case "fortios:index/systemProxyArp:SystemProxyArp":
                return new SystemProxyArp(name, <any>undefined, { urn })
            case "fortios:index/systemPtp:SystemPtp":
                return new SystemPtp(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgAdmin:SystemReplacemsgAdmin":
                return new SystemReplacemsgAdmin(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgAlertmail:SystemReplacemsgAlertmail":
                return new SystemReplacemsgAlertmail(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgAuth:SystemReplacemsgAuth":
                return new SystemReplacemsgAuth(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgAutomation:SystemReplacemsgAutomation":
                return new SystemReplacemsgAutomation(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgDeviceDetectionPortal:SystemReplacemsgDeviceDetectionPortal":
                return new SystemReplacemsgDeviceDetectionPortal(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgEc:SystemReplacemsgEc":
                return new SystemReplacemsgEc(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgFortiguardWf:SystemReplacemsgFortiguardWf":
                return new SystemReplacemsgFortiguardWf(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgFtp:SystemReplacemsgFtp":
                return new SystemReplacemsgFtp(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgGroup:SystemReplacemsgGroup":
                return new SystemReplacemsgGroup(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgHttp:SystemReplacemsgHttp":
                return new SystemReplacemsgHttp(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgIcap:SystemReplacemsgIcap":
                return new SystemReplacemsgIcap(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgImage:SystemReplacemsgImage":
                return new SystemReplacemsgImage(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgMail:SystemReplacemsgMail":
                return new SystemReplacemsgMail(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgNacQuar:SystemReplacemsgNacQuar":
                return new SystemReplacemsgNacQuar(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgNntp:SystemReplacemsgNntp":
                return new SystemReplacemsgNntp(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgSpam:SystemReplacemsgSpam":
                return new SystemReplacemsgSpam(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgSslvpn:SystemReplacemsgSslvpn":
                return new SystemReplacemsgSslvpn(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgTrafficQuota:SystemReplacemsgTrafficQuota":
                return new SystemReplacemsgTrafficQuota(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgUtm:SystemReplacemsgUtm":
                return new SystemReplacemsgUtm(name, <any>undefined, { urn })
            case "fortios:index/systemReplacemsgWebproxy:SystemReplacemsgWebproxy":
                return new SystemReplacemsgWebproxy(name, <any>undefined, { urn })
            case "fortios:index/systemResourceLimits:SystemResourceLimits":
                return new SystemResourceLimits(name, <any>undefined, { urn })
            case "fortios:index/systemSaml:SystemSaml":
                return new SystemSaml(name, <any>undefined, { urn })
            case "fortios:index/systemSdnConnector:SystemSdnConnector":
                return new SystemSdnConnector(name, <any>undefined, { urn })
            case "fortios:index/systemSdwan:SystemSdwan":
                return new SystemSdwan(name, <any>undefined, { urn })
            case "fortios:index/systemSessionHelper:SystemSessionHelper":
                return new SystemSessionHelper(name, <any>undefined, { urn })
            case "fortios:index/systemSessionTtl:SystemSessionTtl":
                return new SystemSessionTtl(name, <any>undefined, { urn })
            case "fortios:index/systemSettingDNS:SystemSettingDNS":
                return new SystemSettingDNS(name, <any>undefined, { urn })
            case "fortios:index/systemSettingGlobal:SystemSettingGlobal":
                return new SystemSettingGlobal(name, <any>undefined, { urn })
            case "fortios:index/systemSettingNTP:SystemSettingNTP":
                return new SystemSettingNTP(name, <any>undefined, { urn })
            case "fortios:index/systemSettings:SystemSettings":
                return new SystemSettings(name, <any>undefined, { urn })
            case "fortios:index/systemSflow:SystemSflow":
                return new SystemSflow(name, <any>undefined, { urn })
            case "fortios:index/systemSitTunnel:SystemSitTunnel":
                return new SystemSitTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemSmsServer:SystemSmsServer":
                return new SystemSmsServer(name, <any>undefined, { urn })
            case "fortios:index/systemSnmpCommunity:SystemSnmpCommunity":
                return new SystemSnmpCommunity(name, <any>undefined, { urn })
            case "fortios:index/systemSnmpSysinfo:SystemSnmpSysinfo":
                return new SystemSnmpSysinfo(name, <any>undefined, { urn })
            case "fortios:index/systemSnmpUser:SystemSnmpUser":
                return new SystemSnmpUser(name, <any>undefined, { urn })
            case "fortios:index/systemSpeedTestSchedule:SystemSpeedTestSchedule":
                return new SystemSpeedTestSchedule(name, <any>undefined, { urn })
            case "fortios:index/systemSpeedTestServer:SystemSpeedTestServer":
                return new SystemSpeedTestServer(name, <any>undefined, { urn })
            case "fortios:index/systemSsoAdmin:SystemSsoAdmin":
                return new SystemSsoAdmin(name, <any>undefined, { urn })
            case "fortios:index/systemStandaloneCluster:SystemStandaloneCluster":
                return new SystemStandaloneCluster(name, <any>undefined, { urn })
            case "fortios:index/systemStorage:SystemStorage":
                return new SystemStorage(name, <any>undefined, { urn })
            case "fortios:index/systemSwitchInterface:SystemSwitchInterface":
                return new SystemSwitchInterface(name, <any>undefined, { urn })
            case "fortios:index/systemTosBasedPriority:SystemTosBasedPriority":
                return new SystemTosBasedPriority(name, <any>undefined, { urn })
            case "fortios:index/systemVdom:SystemVdom":
                return new SystemVdom(name, <any>undefined, { urn })
            case "fortios:index/systemVdomDns:SystemVdomDns":
                return new SystemVdomDns(name, <any>undefined, { urn })
            case "fortios:index/systemVdomException:SystemVdomException":
                return new SystemVdomException(name, <any>undefined, { urn })
            case "fortios:index/systemVdomLink:SystemVdomLink":
                return new SystemVdomLink(name, <any>undefined, { urn })
            case "fortios:index/systemVdomNetflow:SystemVdomNetflow":
                return new SystemVdomNetflow(name, <any>undefined, { urn })
            case "fortios:index/systemVdomProperty:SystemVdomProperty":
                return new SystemVdomProperty(name, <any>undefined, { urn })
            case "fortios:index/systemVdomRadiusServer:SystemVdomRadiusServer":
                return new SystemVdomRadiusServer(name, <any>undefined, { urn })
            case "fortios:index/systemVdomSetting:SystemVdomSetting":
                return new SystemVdomSetting(name, <any>undefined, { urn })
            case "fortios:index/systemVdomSflow:SystemVdomSflow":
                return new SystemVdomSflow(name, <any>undefined, { urn })
            case "fortios:index/systemVirtualSwitch:SystemVirtualSwitch":
                return new SystemVirtualSwitch(name, <any>undefined, { urn })
            case "fortios:index/systemVirtualWanLink:SystemVirtualWanLink":
                return new SystemVirtualWanLink(name, <any>undefined, { urn })
            case "fortios:index/systemVirtualWirePair:SystemVirtualWirePair":
                return new SystemVirtualWirePair(name, <any>undefined, { urn })
            case "fortios:index/systemVneTunnel:SystemVneTunnel":
                return new SystemVneTunnel(name, <any>undefined, { urn })
            case "fortios:index/systemVxlan:SystemVxlan":
                return new SystemVxlan(name, <any>undefined, { urn })
            case "fortios:index/systemWccp:SystemWccp":
                return new SystemWccp(name, <any>undefined, { urn })
            case "fortios:index/systemZone:SystemZone":
                return new SystemZone(name, <any>undefined, { urn })
            case "fortios:index/userAdgrp:UserAdgrp":
                return new UserAdgrp(name, <any>undefined, { urn })
            case "fortios:index/userDevice:UserDevice":
                return new UserDevice(name, <any>undefined, { urn })
            case "fortios:index/userDeviceAccessList:UserDeviceAccessList":
                return new UserDeviceAccessList(name, <any>undefined, { urn })
            case "fortios:index/userDeviceCategory:UserDeviceCategory":
                return new UserDeviceCategory(name, <any>undefined, { urn })
            case "fortios:index/userDeviceGroup:UserDeviceGroup":
                return new UserDeviceGroup(name, <any>undefined, { urn })
            case "fortios:index/userDomainController:UserDomainController":
                return new UserDomainController(name, <any>undefined, { urn })
            case "fortios:index/userExchange:UserExchange":
                return new UserExchange(name, <any>undefined, { urn })
            case "fortios:index/userFortitoken:UserFortitoken":
                return new UserFortitoken(name, <any>undefined, { urn })
            case "fortios:index/userFsso:UserFsso":
                return new UserFsso(name, <any>undefined, { urn })
            case "fortios:index/userFssoPolling:UserFssoPolling":
                return new UserFssoPolling(name, <any>undefined, { urn })
            case "fortios:index/userGroup:UserGroup":
                return new UserGroup(name, <any>undefined, { urn })
            case "fortios:index/userKrbKeytab:UserKrbKeytab":
                return new UserKrbKeytab(name, <any>undefined, { urn })
            case "fortios:index/userLdap:UserLdap":
                return new UserLdap(name, <any>undefined, { urn })
            case "fortios:index/userLocal:UserLocal":
                return new UserLocal(name, <any>undefined, { urn })
            case "fortios:index/userNacPolicy:UserNacPolicy":
                return new UserNacPolicy(name, <any>undefined, { urn })
            case "fortios:index/userPasswordPolicy:UserPasswordPolicy":
                return new UserPasswordPolicy(name, <any>undefined, { urn })
            case "fortios:index/userPeer:UserPeer":
                return new UserPeer(name, <any>undefined, { urn })
            case "fortios:index/userPeergrp:UserPeergrp":
                return new UserPeergrp(name, <any>undefined, { urn })
            case "fortios:index/userPop3:UserPop3":
                return new UserPop3(name, <any>undefined, { urn })
            case "fortios:index/userQuarantine:UserQuarantine":
                return new UserQuarantine(name, <any>undefined, { urn })
            case "fortios:index/userRadius:UserRadius":
                return new UserRadius(name, <any>undefined, { urn })
            case "fortios:index/userSaml:UserSaml":
                return new UserSaml(name, <any>undefined, { urn })
            case "fortios:index/userSecurityExemptList:UserSecurityExemptList":
                return new UserSecurityExemptList(name, <any>undefined, { urn })
            case "fortios:index/userSetting:UserSetting":
                return new UserSetting(name, <any>undefined, { urn })
            case "fortios:index/userTacacs:UserTacacs":
                return new UserTacacs(name, <any>undefined, { urn })
            case "fortios:index/vPNIPsecPhase1InterfaceLegacy:VPNIPsecPhase1InterfaceLegacy":
                return new VPNIPsecPhase1InterfaceLegacy(name, <any>undefined, { urn })
            case "fortios:index/vPNIPsecPhase2InterfaceLegacy:VPNIPsecPhase2InterfaceLegacy":
                return new VPNIPsecPhase2InterfaceLegacy(name, <any>undefined, { urn })
            case "fortios:index/voipProfile:VoipProfile":
                return new VoipProfile(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateCa:VpnCertificateCa":
                return new VpnCertificateCa(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateCrl:VpnCertificateCrl":
                return new VpnCertificateCrl(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateLocal:VpnCertificateLocal":
                return new VpnCertificateLocal(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateOcspServer:VpnCertificateOcspServer":
                return new VpnCertificateOcspServer(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateRemote:VpnCertificateRemote":
                return new VpnCertificateRemote(name, <any>undefined, { urn })
            case "fortios:index/vpnCertificateSetting:VpnCertificateSetting":
                return new VpnCertificateSetting(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecConcentrator:VpnIpsecConcentrator":
                return new VpnIpsecConcentrator(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecForticlient:VpnIpsecForticlient":
                return new VpnIpsecForticlient(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecManualkey:VpnIpsecManualkey":
                return new VpnIpsecManualkey(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecManualkeyInterface:VpnIpsecManualkeyInterface":
                return new VpnIpsecManualkeyInterface(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecPhase1:VpnIpsecPhase1":
                return new VpnIpsecPhase1(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecPhase1Interface:VpnIpsecPhase1Interface":
                return new VpnIpsecPhase1Interface(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecPhase2:VpnIpsecPhase2":
                return new VpnIpsecPhase2(name, <any>undefined, { urn })
            case "fortios:index/vpnIpsecPhase2Interface:VpnIpsecPhase2Interface":
                return new VpnIpsecPhase2Interface(name, <any>undefined, { urn })
            case "fortios:index/vpnL2Tp:VpnL2Tp":
                return new VpnL2Tp(name, <any>undefined, { urn })
            case "fortios:index/vpnOcvpn:VpnOcvpn":
                return new VpnOcvpn(name, <any>undefined, { urn })
            case "fortios:index/vpnPptp:VpnPptp":
                return new VpnPptp(name, <any>undefined, { urn })
            case "fortios:index/vpnSslSettings:VpnSslSettings":
                return new VpnSslSettings(name, <any>undefined, { urn })
            case "fortios:index/vpnSslWebHostCheckSoftware:VpnSslWebHostCheckSoftware":
                return new VpnSslWebHostCheckSoftware(name, <any>undefined, { urn })
            case "fortios:index/vpnSslWebPortal:VpnSslWebPortal":
                return new VpnSslWebPortal(name, <any>undefined, { urn })
            case "fortios:index/vpnSslWebRealm:VpnSslWebRealm":
                return new VpnSslWebRealm(name, <any>undefined, { urn })
            case "fortios:index/vpnSslWebUserBookmark:VpnSslWebUserBookmark":
                return new VpnSslWebUserBookmark(name, <any>undefined, { urn })
            case "fortios:index/vpnSslWebUserGroupBookmark:VpnSslWebUserGroupBookmark":
                return new VpnSslWebUserGroupBookmark(name, <any>undefined, { urn })
            case "fortios:index/wafMainClass:WafMainClass":
                return new WafMainClass(name, <any>undefined, { urn })
            case "fortios:index/wafProfile:WafProfile":
                return new WafProfile(name, <any>undefined, { urn })
            case "fortios:index/wafSignature:WafSignature":
                return new WafSignature(name, <any>undefined, { urn })
            case "fortios:index/wafSubClass:WafSubClass":
                return new WafSubClass(name, <any>undefined, { urn })
            case "fortios:index/wanoptAuthGroup:WanoptAuthGroup":
                return new WanoptAuthGroup(name, <any>undefined, { urn })
            case "fortios:index/wanoptCacheService:WanoptCacheService":
                return new WanoptCacheService(name, <any>undefined, { urn })
            case "fortios:index/wanoptContentDeliveryNetworkRule:WanoptContentDeliveryNetworkRule":
                return new WanoptContentDeliveryNetworkRule(name, <any>undefined, { urn })
            case "fortios:index/wanoptPeer:WanoptPeer":
                return new WanoptPeer(name, <any>undefined, { urn })
            case "fortios:index/wanoptProfile:WanoptProfile":
                return new WanoptProfile(name, <any>undefined, { urn })
            case "fortios:index/wanoptRemoteStorage:WanoptRemoteStorage":
                return new WanoptRemoteStorage(name, <any>undefined, { urn })
            case "fortios:index/wanoptSettings:WanoptSettings":
                return new WanoptSettings(name, <any>undefined, { urn })
            case "fortios:index/wanoptWebcache:WanoptWebcache":
                return new WanoptWebcache(name, <any>undefined, { urn })
            case "fortios:index/webProxyDebugUrl:WebProxyDebugUrl":
                return new WebProxyDebugUrl(name, <any>undefined, { urn })
            case "fortios:index/webProxyExplicit:WebProxyExplicit":
                return new WebProxyExplicit(name, <any>undefined, { urn })
            case "fortios:index/webProxyForwardServer:WebProxyForwardServer":
                return new WebProxyForwardServer(name, <any>undefined, { urn })
            case "fortios:index/webProxyForwardServerGroup:WebProxyForwardServerGroup":
                return new WebProxyForwardServerGroup(name, <any>undefined, { urn })
            case "fortios:index/webProxyGlobal:WebProxyGlobal":
                return new WebProxyGlobal(name, <any>undefined, { urn })
            case "fortios:index/webProxyProfile:WebProxyProfile":
                return new WebProxyProfile(name, <any>undefined, { urn })
            case "fortios:index/webProxyUrlMatch:WebProxyUrlMatch":
                return new WebProxyUrlMatch(name, <any>undefined, { urn })
            case "fortios:index/webProxyWisp:WebProxyWisp":
                return new WebProxyWisp(name, <any>undefined, { urn })
            case "fortios:index/webfilterContent:WebfilterContent":
                return new WebfilterContent(name, <any>undefined, { urn })
            case "fortios:index/webfilterContentHeader:WebfilterContentHeader":
                return new WebfilterContentHeader(name, <any>undefined, { urn })
            case "fortios:index/webfilterFortiguard:WebfilterFortiguard":
                return new WebfilterFortiguard(name, <any>undefined, { urn })
            case "fortios:index/webfilterFtgdLocalCat:WebfilterFtgdLocalCat":
                return new WebfilterFtgdLocalCat(name, <any>undefined, { urn })
            case "fortios:index/webfilterFtgdLocalRating:WebfilterFtgdLocalRating":
                return new WebfilterFtgdLocalRating(name, <any>undefined, { urn })
            case "fortios:index/webfilterIpsUrlfilterCacheSetting:WebfilterIpsUrlfilterCacheSetting":
                return new WebfilterIpsUrlfilterCacheSetting(name, <any>undefined, { urn })
            case "fortios:index/webfilterIpsUrlfilterSetting6:WebfilterIpsUrlfilterSetting6":
                return new WebfilterIpsUrlfilterSetting6(name, <any>undefined, { urn })
            case "fortios:index/webfilterIpsUrlfilterSetting:WebfilterIpsUrlfilterSetting":
                return new WebfilterIpsUrlfilterSetting(name, <any>undefined, { urn })
            case "fortios:index/webfilterOverride:WebfilterOverride":
                return new WebfilterOverride(name, <any>undefined, { urn })
            case "fortios:index/webfilterProfile:WebfilterProfile":
                return new WebfilterProfile(name, <any>undefined, { urn })
            case "fortios:index/webfilterSearchEngine:WebfilterSearchEngine":
                return new WebfilterSearchEngine(name, <any>undefined, { urn })
            case "fortios:index/webfilterUrlfilter:WebfilterUrlfilter":
                return new WebfilterUrlfilter(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerAccessControlList:WirelessControllerAccessControlList":
                return new WirelessControllerAccessControlList(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerAddress:WirelessControllerAddress":
                return new WirelessControllerAddress(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerAddrgrp:WirelessControllerAddrgrp":
                return new WirelessControllerAddrgrp(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerApStatus:WirelessControllerApStatus":
                return new WirelessControllerApStatus(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerApcfgProfile:WirelessControllerApcfgProfile":
                return new WirelessControllerApcfgProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerArrpProfile:WirelessControllerArrpProfile":
                return new WirelessControllerArrpProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerBleProfile:WirelessControllerBleProfile":
                return new WirelessControllerBleProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerBonjourProfile:WirelessControllerBonjourProfile":
                return new WirelessControllerBonjourProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerGlobal:WirelessControllerGlobal":
                return new WirelessControllerGlobal(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20Anqp3GppCellular:WirelessControllerHotspot20Anqp3GppCellular":
                return new WirelessControllerHotspot20Anqp3GppCellular(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20AnqpIpAddressType:WirelessControllerHotspot20AnqpIpAddressType":
                return new WirelessControllerHotspot20AnqpIpAddressType(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20AnqpNaiRealm:WirelessControllerHotspot20AnqpNaiRealm":
                return new WirelessControllerHotspot20AnqpNaiRealm(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20AnqpNetworkAuthType:WirelessControllerHotspot20AnqpNetworkAuthType":
                return new WirelessControllerHotspot20AnqpNetworkAuthType(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20AnqpRoamingConsortium:WirelessControllerHotspot20AnqpRoamingConsortium":
                return new WirelessControllerHotspot20AnqpRoamingConsortium(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20AnqpVenueName:WirelessControllerHotspot20AnqpVenueName":
                return new WirelessControllerHotspot20AnqpVenueName(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20H2QpConnCapability:WirelessControllerHotspot20H2QpConnCapability":
                return new WirelessControllerHotspot20H2QpConnCapability(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20H2QpOperatorName:WirelessControllerHotspot20H2QpOperatorName":
                return new WirelessControllerHotspot20H2QpOperatorName(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20H2QpOsuProvider:WirelessControllerHotspot20H2QpOsuProvider":
                return new WirelessControllerHotspot20H2QpOsuProvider(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20H2QpWanMetric:WirelessControllerHotspot20H2QpWanMetric":
                return new WirelessControllerHotspot20H2QpWanMetric(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20HsProfile:WirelessControllerHotspot20HsProfile":
                return new WirelessControllerHotspot20HsProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20Icon:WirelessControllerHotspot20Icon":
                return new WirelessControllerHotspot20Icon(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerHotspot20QosMap:WirelessControllerHotspot20QosMap":
                return new WirelessControllerHotspot20QosMap(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerInterController:WirelessControllerInterController":
                return new WirelessControllerInterController(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerLog:WirelessControllerLog":
                return new WirelessControllerLog(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerMpskProfile:WirelessControllerMpskProfile":
                return new WirelessControllerMpskProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerQosProfile:WirelessControllerQosProfile":
                return new WirelessControllerQosProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerRegion:WirelessControllerRegion":
                return new WirelessControllerRegion(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerSetting:WirelessControllerSetting":
                return new WirelessControllerSetting(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerSnmp:WirelessControllerSnmp":
                return new WirelessControllerSnmp(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerTimers:WirelessControllerTimers":
                return new WirelessControllerTimers(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerUtmProfile:WirelessControllerUtmProfile":
                return new WirelessControllerUtmProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerVap:WirelessControllerVap":
                return new WirelessControllerVap(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerVapGroup:WirelessControllerVapGroup":
                return new WirelessControllerVapGroup(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerWagProfile:WirelessControllerWagProfile":
                return new WirelessControllerWagProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerWidsProfile:WirelessControllerWidsProfile":
                return new WirelessControllerWidsProfile(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerWtp:WirelessControllerWtp":
                return new WirelessControllerWtp(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerWtpGroup:WirelessControllerWtpGroup":
                return new WirelessControllerWtpGroup(name, <any>undefined, { urn })
            case "fortios:index/wirelessControllerWtpProfile:WirelessControllerWtpProfile":
                return new WirelessControllerWtpProfile(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "index/alertemailSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/antivirusHeuristic", _module)
pulumi.runtime.registerResourceModule("fortios", "index/antivirusProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/antivirusQuarantine", _module)
pulumi.runtime.registerResourceModule("fortios", "index/antivirusSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/applicationCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/applicationGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/applicationList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/applicationName", _module)
pulumi.runtime.registerResourceModule("fortios", "index/applicationRuleSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/authenticationRule", _module)
pulumi.runtime.registerResourceModule("fortios", "index/authenticationScheme", _module)
pulumi.runtime.registerResourceModule("fortios", "index/authenticationSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/certificateCa", _module)
pulumi.runtime.registerResourceModule("fortios", "index/certificateCrl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/certificateLocal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/certificateRemote", _module)
pulumi.runtime.registerResourceModule("fortios", "index/cifsDomainController", _module)
pulumi.runtime.registerResourceModule("fortios", "index/cifsProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/credentialStoreDomainController", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpFilepattern", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpFpDocSource", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpFpSensitivity", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpSensitivity", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpSensor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dlpSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dnsfilterDomainFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dnsfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dpdkCpus", _module)
pulumi.runtime.registerResourceModule("fortios", "index/dpdkGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterBlockAllowList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterBwl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterBword", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterDnsbl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterFortishield", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterIptrust", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterMheader", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterOptions", _module)
pulumi.runtime.registerResourceModule("fortios", "index/emailfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlClient", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlFctems", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlForticlientEms", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlForticlientRegistrationSync", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlRegisteredForticlient", _module)
pulumi.runtime.registerResourceModule("fortios", "index/endpointControlSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/extenderControllerDataplan", _module)
pulumi.runtime.registerResourceModule("fortios", "index/extenderControllerExtender", _module)
pulumi.runtime.registerResourceModule("fortios", "index/extenderControllerExtender1", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fileFilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAddress6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAddress6Template", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAddrgrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAddrgrp6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallAuthPortal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallCentralSnatMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallCentralsnatmapMove", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallCentralsnatmapSort", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallCity", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallConsolidatedPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallCountry", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallDecryptedTrafficMirror", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallDnstranslation", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallDosPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallDosPolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIdentityBasedRoute", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInterfacePolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInterfacePolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetService", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceAddition", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceAppend", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceBotnet", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceCustomGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceDefinition", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceExtension", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceIpblReason", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceIpblVendor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceName", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceOwner", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallInternetServiceReputation", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIpTranslation", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIpmacbindingSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIpmacbindingTable", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIppool", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIppool6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallIpv6EhFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallLdbMonitor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallLocalInPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallLocalInPolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallMulticastAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallMulticastAddress6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallMulticastPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallMulticastPolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectAddressGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectIPPool", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectService", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectServiceCategory", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectServiceGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectVip", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallObjectVipGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallPolicy46", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallPolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallPolicy64", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProfileGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProfileProtocolOptions", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProxyAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProxyAddrgrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProxyPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProxypolicyMove", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallProxypolicySort", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallRegion", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallScheduleGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallScheduleOnetime", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallScheduleRecurring", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSecurityPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSecurityPolicy1", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSecurityPolicySeq", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSecurityPolicySort", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallServiceCategory", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallServiceCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallServiceGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallShaperPerIpShaper", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallShaperTrafficShaper", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallShapingPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallShapingProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSniffer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSshHostKey", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSshLocalCa", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSshLocalKey", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSshSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSslServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSslSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallSslSshProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallTrafficClass", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallTtlPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVendorMac", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVip", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVip46", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVip6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVip64", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVipgrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVipgrp46", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVipgrp6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallVipgrp64", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallWildcardFqdnCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/firewallWildcardFqdnGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerDVMDevice", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerDVMInstallDev", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerDVMInstallPolicyPackage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerDVMScript", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerDVMScriptExecute", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallObjectAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallObjectIppool", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallObjectService", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallObjectVip", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallSecurityPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerFirewallSecurityPolicyPackage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerJSONRPCRequest", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerObjectAdomRevision", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemAdmin", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemAdminProfiles", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemAdminUser", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemAdom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemDNS", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemLicenseFortiCare", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemLicenseVM", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemNTP", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemNetworkInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemNetworkRoute", _module)
pulumi.runtime.registerResourceModule("fortios", "index/fortimanagerSystemSyslogServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ftpProxyExplicit", _module)
pulumi.runtime.registerResourceModule("fortios", "index/icapProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/icapServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsDecoder", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsRule", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsRuleSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsSensor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/ipsViewMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/jSONGenericAPI", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logCustomField", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logDiskFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logDiskSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logEventfilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortiAnalyzerSettingLegacy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer2Filter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer2OverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer2OverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer2Setting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer3Filter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer3OverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer3OverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzer3Setting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerCloudFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerCloudOverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerCloudOverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerCloudSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerOverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerOverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortianalyzerSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortiguardFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortiguardOverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortiguardOverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logFortiguardSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logGuiDisplay", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logMemoryFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logMemoryGlobalSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logMemorySetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logNullDeviceFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logNullDeviceSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd2Filter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd2OverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd2OverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd2Setting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd3Filter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd3OverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd3OverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd3Setting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd4Filter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd4OverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd4OverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogd4Setting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogdFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogdOverrideFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogdOverrideSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logSyslogdSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logThreatWeight", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logWebtrendsFilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/logWebtrendsSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/networkingInterfacePort", _module)
pulumi.runtime.registerResourceModule("fortios", "index/networkingRouteStatic", _module)
pulumi.runtime.registerResourceModule("fortios", "index/nsxtServiceChain", _module)
pulumi.runtime.registerResourceModule("fortios", "index/nsxtSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportChart", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportDataset", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportLayout", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportStyle", _module)
pulumi.runtime.registerResourceModule("fortios", "index/reportTheme", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerAccessList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerAccessList6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerAspathList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerAuthPath", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerBfd", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerBfd6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerBgp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerCommunityList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerIsis", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerKeyChain", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerMulticast", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerMulticast6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerMulticastFlow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerOspf", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerOspf6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerPolicy6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerPrefixList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerPrefixList6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerRip", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerRipng", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerRouteMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerStatic", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerStatic6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerbgpNeighbor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerbgpNetwork", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerbgpNetwork6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerospf6Ospf6Interface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerospfNeighbor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerospfNetwork", _module)
pulumi.runtime.registerResourceModule("fortios", "index/routerospfOspfInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterBwl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterBword", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterDnsbl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterFortishield", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterIptrust", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterMheader", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterOptions", _module)
pulumi.runtime.registerResourceModule("fortios", "index/spamfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/sshFilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchController8021XSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerAutoConfigCustom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerAutoConfigDefault", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerAutoConfigPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerCustomCommand", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerFlowTracking", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerIgmpSnooping", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerInitialConfigTemplate", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerInitialConfigVlans", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerLldpProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerLldpSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerLocation", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerMacSyncSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerManagedSwitch", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerNacDevice", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerNacSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerNetworkMonitorSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerPortPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerPtpPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerPtpSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerQosDot1PMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerQosIpDscpMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerQosQosPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerQosQueuePolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerQuarantine", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerRemoteLog", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSecurityPolicy8021X", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSecurityPolicyCaptivePortal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSecurityPolicyLocalAccess", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSflow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSnmpCommunity", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSnmpSysinfo", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSnmpTrapThreshold", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSnmpUser", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerStormControl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerStormControlPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerStpInstance", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerStpSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSwitchGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSwitchInterfaceTag", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSwitchLog", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSwitchProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerSystem", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerTrafficPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerTrafficSniffer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerVirtualPortPool", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerVlan", _module)
pulumi.runtime.registerResourceModule("fortios", "index/switchControllerVlanPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAPIUserSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAccprofile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAdmin", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAdminAdministrator", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAdminProfiles", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAffinityInterrupt", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAffinityPacketRedistribution", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAlarm", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAlias", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemApiUser", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemArpTable", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutoInstall", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutoScript", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutomationAction", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutomationDestination", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutomationStitch", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutomationTrigger", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutoupdatePushUpdate", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutoupdateSchedule", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemAutoupdateTunneling", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemCentralManagement", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemClusterSync", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemConsole", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemCsf", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemCustomLanguage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDdns", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDedicatedMgmt", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDhcp6Server", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDhcpServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDns", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDnsDatabase", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDnsServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemDscpBasedPriority", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemEmailServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemExternalResource", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFederatedUpgrade", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFipsCc", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFm", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFortiguard", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFortimanager", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFortisandbox", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFssoPolling", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemFtmPush", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemGeneve", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemGeoipCountry", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemGeoipOverride", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemGreTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemHa", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemHaMonitor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpipTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIps", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpsUrlfilterDns", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpsUrlfilterDns6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpsecAggregate", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpv6NeighborCache", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemIpv6Tunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemLicenseFortiCare", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemLicenseVDOM", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemLicenseVM", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemLinkMonitor", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemLldpNetworkPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemMacAddressTable", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemManagementTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemMobileTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemNat64", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemNdProxy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemNetflow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemNetworkVisibility", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemNtp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemObjectTagging", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemPasswordPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemPasswordPolicyGuestAdmin", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemPppoeInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemProbeResponse", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemProxyArp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemPtp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgAdmin", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgAlertmail", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgAuth", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgAutomation", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgDeviceDetectionPortal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgEc", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgFortiguardWf", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgFtp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgHttp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgIcap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgImage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgMail", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgNacQuar", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgNntp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgSpam", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgSslvpn", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgTrafficQuota", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgUtm", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemReplacemsgWebproxy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemResourceLimits", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSaml", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSdnConnector", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSdwan", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSessionHelper", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSessionTtl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSettingDNS", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSettingGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSettingNTP", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSflow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSitTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSmsServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSnmpCommunity", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSnmpSysinfo", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSnmpUser", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSpeedTestSchedule", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSpeedTestServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSsoAdmin", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemStandaloneCluster", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemStorage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemSwitchInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemTosBasedPriority", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdom", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomDns", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomException", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomLink", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomNetflow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomProperty", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomRadiusServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVdomSflow", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVirtualSwitch", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVirtualWanLink", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVirtualWirePair", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVneTunnel", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemVxlan", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemWccp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/systemZone", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userAdgrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userDevice", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userDeviceAccessList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userDeviceCategory", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userDeviceGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userDomainController", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userExchange", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userFortitoken", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userFsso", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userFssoPolling", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userKrbKeytab", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userLdap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userLocal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userNacPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userPasswordPolicy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userPeer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userPeergrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userPop3", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userQuarantine", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userRadius", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userSaml", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userSecurityExemptList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/userTacacs", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vPNIPsecPhase1InterfaceLegacy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vPNIPsecPhase2InterfaceLegacy", _module)
pulumi.runtime.registerResourceModule("fortios", "index/voipProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateCa", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateCrl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateLocal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateOcspServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateRemote", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnCertificateSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecConcentrator", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecForticlient", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecManualkey", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecManualkeyInterface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecPhase1", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecPhase1Interface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecPhase2", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnIpsecPhase2Interface", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnL2Tp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnOcvpn", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnPptp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslWebHostCheckSoftware", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslWebPortal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslWebRealm", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslWebUserBookmark", _module)
pulumi.runtime.registerResourceModule("fortios", "index/vpnSslWebUserGroupBookmark", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wafMainClass", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wafProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wafSignature", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wafSubClass", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptAuthGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptCacheService", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptContentDeliveryNetworkRule", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptPeer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptRemoteStorage", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptSettings", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wanoptWebcache", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyDebugUrl", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyExplicit", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyForwardServer", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyForwardServerGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyUrlMatch", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webProxyWisp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterContent", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterContentHeader", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterFortiguard", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterFtgdLocalCat", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterFtgdLocalRating", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterIpsUrlfilterCacheSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterIpsUrlfilterSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterIpsUrlfilterSetting6", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterOverride", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterSearchEngine", _module)
pulumi.runtime.registerResourceModule("fortios", "index/webfilterUrlfilter", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerAccessControlList", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerAddress", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerAddrgrp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerApStatus", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerApcfgProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerArrpProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerBleProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerBonjourProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerGlobal", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20Anqp3GppCellular", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20AnqpIpAddressType", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20AnqpNaiRealm", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20AnqpNetworkAuthType", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20AnqpRoamingConsortium", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20AnqpVenueName", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20H2QpConnCapability", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20H2QpOperatorName", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20H2QpOsuProvider", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20H2QpWanMetric", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20HsProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20Icon", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerHotspot20QosMap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerInterController", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerLog", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerMpskProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerQosProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerRegion", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerSetting", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerSnmp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerTimers", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerUtmProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerVap", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerVapGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerWagProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerWidsProfile", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerWtp", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerWtpGroup", _module)
pulumi.runtime.registerResourceModule("fortios", "index/wirelessControllerWtpProfile", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("fortios", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:fortios") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
