// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure default auto-config QoS policy for FortiSwitch.
 *
 * ## Import
 *
 * SwitchControllerAutoConfig Default can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/switchControllerAutoConfigDefault:SwitchControllerAutoConfigDefault labelname SwitchControllerAutoConfigDefault
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SwitchControllerAutoConfigDefault extends pulumi.CustomResource {
    /**
     * Get an existing SwitchControllerAutoConfigDefault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchControllerAutoConfigDefaultState, opts?: pulumi.CustomResourceOptions): SwitchControllerAutoConfigDefault {
        return new SwitchControllerAutoConfigDefault(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchControllerAutoConfigDefault:SwitchControllerAutoConfigDefault';

    /**
     * Returns true if the given object is an instance of SwitchControllerAutoConfigDefault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchControllerAutoConfigDefault {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchControllerAutoConfigDefault.__pulumiType;
    }

    /**
     * Default FortiLink auto-config policy.
     */
    public readonly fgtPolicy!: pulumi.Output<string>;
    /**
     * Default ICL auto-config policy.
     */
    public readonly iclPolicy!: pulumi.Output<string>;
    /**
     * Default ISL auto-config policy.
     */
    public readonly islPolicy!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchControllerAutoConfigDefault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchControllerAutoConfigDefaultArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchControllerAutoConfigDefaultArgs | SwitchControllerAutoConfigDefaultState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchControllerAutoConfigDefaultState | undefined;
            inputs["fgtPolicy"] = state ? state.fgtPolicy : undefined;
            inputs["iclPolicy"] = state ? state.iclPolicy : undefined;
            inputs["islPolicy"] = state ? state.islPolicy : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SwitchControllerAutoConfigDefaultArgs | undefined;
            inputs["fgtPolicy"] = args ? args.fgtPolicy : undefined;
            inputs["iclPolicy"] = args ? args.iclPolicy : undefined;
            inputs["islPolicy"] = args ? args.islPolicy : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SwitchControllerAutoConfigDefault.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchControllerAutoConfigDefault resources.
 */
export interface SwitchControllerAutoConfigDefaultState {
    /**
     * Default FortiLink auto-config policy.
     */
    fgtPolicy?: pulumi.Input<string>;
    /**
     * Default ICL auto-config policy.
     */
    iclPolicy?: pulumi.Input<string>;
    /**
     * Default ISL auto-config policy.
     */
    islPolicy?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchControllerAutoConfigDefault resource.
 */
export interface SwitchControllerAutoConfigDefaultArgs {
    /**
     * Default FortiLink auto-config policy.
     */
    fgtPolicy?: pulumi.Input<string>;
    /**
     * Default ICL auto-config policy.
     */
    iclPolicy?: pulumi.Input<string>;
    /**
     * Default ISL auto-config policy.
     */
    islPolicy?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
