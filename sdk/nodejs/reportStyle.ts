// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Report style configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.ReportStyle("trname", {
 *     borderBottom: "\" none \"",
 *     borderLeft: "\" none \"",
 *     borderRight: "\" none \"",
 *     borderTop: "\" none \"",
 *     columnSpan: "none",
 *     fontStyle: "normal",
 *     fontWeight: "normal",
 *     options: "font text color",
 * });
 * ```
 *
 * ## Import
 *
 * Report Style can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/reportStyle:ReportStyle labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class ReportStyle extends pulumi.CustomResource {
    /**
     * Get an existing ReportStyle resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReportStyleState, opts?: pulumi.CustomResourceOptions): ReportStyle {
        return new ReportStyle(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/reportStyle:ReportStyle';

    /**
     * Returns true if the given object is an instance of ReportStyle.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReportStyle {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReportStyle.__pulumiType;
    }

    /**
     * Alignment. Valid values: `left`, `center`, `right`, `justify`.
     */
    public readonly align!: pulumi.Output<string>;
    /**
     * Background color.
     */
    public readonly bgColor!: pulumi.Output<string>;
    /**
     * Border bottom.
     */
    public readonly borderBottom!: pulumi.Output<string>;
    /**
     * Border left.
     */
    public readonly borderLeft!: pulumi.Output<string>;
    /**
     * Border right.
     */
    public readonly borderRight!: pulumi.Output<string>;
    /**
     * Border top.
     */
    public readonly borderTop!: pulumi.Output<string>;
    /**
     * Column gap.
     */
    public readonly columnGap!: pulumi.Output<string>;
    /**
     * Column span. Valid values: `none`, `all`.
     */
    public readonly columnSpan!: pulumi.Output<string>;
    /**
     * Foreground color.
     */
    public readonly fgColor!: pulumi.Output<string>;
    /**
     * Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
     */
    public readonly fontFamily!: pulumi.Output<string>;
    /**
     * Font size.
     */
    public readonly fontSize!: pulumi.Output<string>;
    /**
     * Font style. Valid values: `normal`, `italic`.
     */
    public readonly fontStyle!: pulumi.Output<string>;
    /**
     * Font weight. Valid values: `normal`, `bold`.
     */
    public readonly fontWeight!: pulumi.Output<string>;
    /**
     * Height.
     */
    public readonly height!: pulumi.Output<string>;
    /**
     * Text line height.
     */
    public readonly lineHeight!: pulumi.Output<string>;
    /**
     * Margin bottom.
     */
    public readonly marginBottom!: pulumi.Output<string>;
    /**
     * Margin left.
     */
    public readonly marginLeft!: pulumi.Output<string>;
    /**
     * Margin right.
     */
    public readonly marginRight!: pulumi.Output<string>;
    /**
     * Margin top.
     */
    public readonly marginTop!: pulumi.Output<string>;
    /**
     * Report style name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
     */
    public readonly options!: pulumi.Output<string>;
    /**
     * Padding bottom.
     */
    public readonly paddingBottom!: pulumi.Output<string>;
    /**
     * Padding left.
     */
    public readonly paddingLeft!: pulumi.Output<string>;
    /**
     * Padding right.
     */
    public readonly paddingRight!: pulumi.Output<string>;
    /**
     * Padding top.
     */
    public readonly paddingTop!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Width.
     */
    public readonly width!: pulumi.Output<string>;

    /**
     * Create a ReportStyle resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ReportStyleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReportStyleArgs | ReportStyleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReportStyleState | undefined;
            inputs["align"] = state ? state.align : undefined;
            inputs["bgColor"] = state ? state.bgColor : undefined;
            inputs["borderBottom"] = state ? state.borderBottom : undefined;
            inputs["borderLeft"] = state ? state.borderLeft : undefined;
            inputs["borderRight"] = state ? state.borderRight : undefined;
            inputs["borderTop"] = state ? state.borderTop : undefined;
            inputs["columnGap"] = state ? state.columnGap : undefined;
            inputs["columnSpan"] = state ? state.columnSpan : undefined;
            inputs["fgColor"] = state ? state.fgColor : undefined;
            inputs["fontFamily"] = state ? state.fontFamily : undefined;
            inputs["fontSize"] = state ? state.fontSize : undefined;
            inputs["fontStyle"] = state ? state.fontStyle : undefined;
            inputs["fontWeight"] = state ? state.fontWeight : undefined;
            inputs["height"] = state ? state.height : undefined;
            inputs["lineHeight"] = state ? state.lineHeight : undefined;
            inputs["marginBottom"] = state ? state.marginBottom : undefined;
            inputs["marginLeft"] = state ? state.marginLeft : undefined;
            inputs["marginRight"] = state ? state.marginRight : undefined;
            inputs["marginTop"] = state ? state.marginTop : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["options"] = state ? state.options : undefined;
            inputs["paddingBottom"] = state ? state.paddingBottom : undefined;
            inputs["paddingLeft"] = state ? state.paddingLeft : undefined;
            inputs["paddingRight"] = state ? state.paddingRight : undefined;
            inputs["paddingTop"] = state ? state.paddingTop : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as ReportStyleArgs | undefined;
            inputs["align"] = args ? args.align : undefined;
            inputs["bgColor"] = args ? args.bgColor : undefined;
            inputs["borderBottom"] = args ? args.borderBottom : undefined;
            inputs["borderLeft"] = args ? args.borderLeft : undefined;
            inputs["borderRight"] = args ? args.borderRight : undefined;
            inputs["borderTop"] = args ? args.borderTop : undefined;
            inputs["columnGap"] = args ? args.columnGap : undefined;
            inputs["columnSpan"] = args ? args.columnSpan : undefined;
            inputs["fgColor"] = args ? args.fgColor : undefined;
            inputs["fontFamily"] = args ? args.fontFamily : undefined;
            inputs["fontSize"] = args ? args.fontSize : undefined;
            inputs["fontStyle"] = args ? args.fontStyle : undefined;
            inputs["fontWeight"] = args ? args.fontWeight : undefined;
            inputs["height"] = args ? args.height : undefined;
            inputs["lineHeight"] = args ? args.lineHeight : undefined;
            inputs["marginBottom"] = args ? args.marginBottom : undefined;
            inputs["marginLeft"] = args ? args.marginLeft : undefined;
            inputs["marginRight"] = args ? args.marginRight : undefined;
            inputs["marginTop"] = args ? args.marginTop : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["options"] = args ? args.options : undefined;
            inputs["paddingBottom"] = args ? args.paddingBottom : undefined;
            inputs["paddingLeft"] = args ? args.paddingLeft : undefined;
            inputs["paddingRight"] = args ? args.paddingRight : undefined;
            inputs["paddingTop"] = args ? args.paddingTop : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["width"] = args ? args.width : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ReportStyle.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReportStyle resources.
 */
export interface ReportStyleState {
    /**
     * Alignment. Valid values: `left`, `center`, `right`, `justify`.
     */
    align?: pulumi.Input<string>;
    /**
     * Background color.
     */
    bgColor?: pulumi.Input<string>;
    /**
     * Border bottom.
     */
    borderBottom?: pulumi.Input<string>;
    /**
     * Border left.
     */
    borderLeft?: pulumi.Input<string>;
    /**
     * Border right.
     */
    borderRight?: pulumi.Input<string>;
    /**
     * Border top.
     */
    borderTop?: pulumi.Input<string>;
    /**
     * Column gap.
     */
    columnGap?: pulumi.Input<string>;
    /**
     * Column span. Valid values: `none`, `all`.
     */
    columnSpan?: pulumi.Input<string>;
    /**
     * Foreground color.
     */
    fgColor?: pulumi.Input<string>;
    /**
     * Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
     */
    fontFamily?: pulumi.Input<string>;
    /**
     * Font size.
     */
    fontSize?: pulumi.Input<string>;
    /**
     * Font style. Valid values: `normal`, `italic`.
     */
    fontStyle?: pulumi.Input<string>;
    /**
     * Font weight. Valid values: `normal`, `bold`.
     */
    fontWeight?: pulumi.Input<string>;
    /**
     * Height.
     */
    height?: pulumi.Input<string>;
    /**
     * Text line height.
     */
    lineHeight?: pulumi.Input<string>;
    /**
     * Margin bottom.
     */
    marginBottom?: pulumi.Input<string>;
    /**
     * Margin left.
     */
    marginLeft?: pulumi.Input<string>;
    /**
     * Margin right.
     */
    marginRight?: pulumi.Input<string>;
    /**
     * Margin top.
     */
    marginTop?: pulumi.Input<string>;
    /**
     * Report style name.
     */
    name?: pulumi.Input<string>;
    /**
     * Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
     */
    options?: pulumi.Input<string>;
    /**
     * Padding bottom.
     */
    paddingBottom?: pulumi.Input<string>;
    /**
     * Padding left.
     */
    paddingLeft?: pulumi.Input<string>;
    /**
     * Padding right.
     */
    paddingRight?: pulumi.Input<string>;
    /**
     * Padding top.
     */
    paddingTop?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Width.
     */
    width?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReportStyle resource.
 */
export interface ReportStyleArgs {
    /**
     * Alignment. Valid values: `left`, `center`, `right`, `justify`.
     */
    align?: pulumi.Input<string>;
    /**
     * Background color.
     */
    bgColor?: pulumi.Input<string>;
    /**
     * Border bottom.
     */
    borderBottom?: pulumi.Input<string>;
    /**
     * Border left.
     */
    borderLeft?: pulumi.Input<string>;
    /**
     * Border right.
     */
    borderRight?: pulumi.Input<string>;
    /**
     * Border top.
     */
    borderTop?: pulumi.Input<string>;
    /**
     * Column gap.
     */
    columnGap?: pulumi.Input<string>;
    /**
     * Column span. Valid values: `none`, `all`.
     */
    columnSpan?: pulumi.Input<string>;
    /**
     * Foreground color.
     */
    fgColor?: pulumi.Input<string>;
    /**
     * Font family. Valid values: `Verdana`, `Arial`, `Helvetica`, `Courier`, `Times`.
     */
    fontFamily?: pulumi.Input<string>;
    /**
     * Font size.
     */
    fontSize?: pulumi.Input<string>;
    /**
     * Font style. Valid values: `normal`, `italic`.
     */
    fontStyle?: pulumi.Input<string>;
    /**
     * Font weight. Valid values: `normal`, `bold`.
     */
    fontWeight?: pulumi.Input<string>;
    /**
     * Height.
     */
    height?: pulumi.Input<string>;
    /**
     * Text line height.
     */
    lineHeight?: pulumi.Input<string>;
    /**
     * Margin bottom.
     */
    marginBottom?: pulumi.Input<string>;
    /**
     * Margin left.
     */
    marginLeft?: pulumi.Input<string>;
    /**
     * Margin right.
     */
    marginRight?: pulumi.Input<string>;
    /**
     * Margin top.
     */
    marginTop?: pulumi.Input<string>;
    /**
     * Report style name.
     */
    name?: pulumi.Input<string>;
    /**
     * Report style options. Valid values: `font`, `text`, `color`, `align`, `size`, `margin`, `border`, `padding`, `column`.
     */
    options?: pulumi.Input<string>;
    /**
     * Padding bottom.
     */
    paddingBottom?: pulumi.Input<string>;
    /**
     * Padding left.
     */
    paddingLeft?: pulumi.Input<string>;
    /**
     * Padding right.
     */
    paddingRight?: pulumi.Input<string>;
    /**
     * Padding top.
     */
    paddingTop?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Width.
     */
    width?: pulumi.Input<string>;
}
