// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to get information on fortios router ospf
 */
export function getRouterOspf(args?: GetRouterOspfArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterOspfResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("fortios:index/getRouterOspf:GetRouterOspf", {
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking GetRouterOspf.
 */
export interface GetRouterOspfArgs {
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by GetRouterOspf.
 */
export interface GetRouterOspfResult {
    /**
     * Area border router type.
     */
    readonly abrType: string;
    /**
     * Attach the network to area.
     */
    readonly areas: outputs.GetRouterOspfArea[];
    /**
     * Reference bandwidth in terms of megabits per second.
     */
    readonly autoCostRefBandwidth: number;
    /**
     * Bidirectional Forwarding Detection (BFD).
     */
    readonly bfd: string;
    /**
     * Enable/disable database overflow.
     */
    readonly databaseOverflow: string;
    /**
     * Database overflow maximum LSAs.
     */
    readonly databaseOverflowMaxLsas: number;
    /**
     * Database overflow time to recover (sec).
     */
    readonly databaseOverflowTimeToRecover: number;
    /**
     * Default information metric.
     */
    readonly defaultInformationMetric: number;
    /**
     * Default information metric type.
     */
    readonly defaultInformationMetricType: string;
    /**
     * Enable/disable generation of default route.
     */
    readonly defaultInformationOriginate: string;
    /**
     * Default information route map.
     */
    readonly defaultInformationRouteMap: string;
    /**
     * Default metric of redistribute routes.
     */
    readonly defaultMetric: number;
    /**
     * Distance of the route.
     */
    readonly distance: number;
    /**
     * Administrative external distance.
     */
    readonly distanceExternal: number;
    /**
     * Administrative inter-area distance.
     */
    readonly distanceInterArea: number;
    /**
     * Administrative intra-area distance.
     */
    readonly distanceIntraArea: number;
    /**
     * Filter incoming routes.
     */
    readonly distributeListIn: string;
    /**
     * Distribute list configuration. The structure of `distributeList` block is documented below.
     */
    readonly distributeLists: outputs.GetRouterOspfDistributeList[];
    /**
     * Filter incoming external routes by route-map.
     */
    readonly distributeRouteMapIn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Enable logging of OSPF neighbour's changes
     */
    readonly logNeighbourChanges: string;
    /**
     * OSPF neighbor configuration are used when OSPF runs on non-broadcast media The structure of `neighbor` block is documented below.
     */
    readonly neighbors: outputs.GetRouterOspfNeighbor[];
    /**
     * OSPF network configuration. The structure of `network` block is documented below.
     */
    readonly networks: outputs.GetRouterOspfNetwork[];
    /**
     * OSPF interface configuration. The structure of `ospfInterface` block is documented below.
     */
    readonly ospfInterfaces: outputs.GetRouterOspfOspfInterface[];
    /**
     * Passive interface configuration. The structure of `passiveInterface` block is documented below.
     */
    readonly passiveInterfaces: outputs.GetRouterOspfPassiveInterface[];
    /**
     * Redistribute configuration. The structure of `redistribute` block is documented below.
     */
    readonly redistributes: outputs.GetRouterOspfRedistribute[];
    /**
     * OSPF restart mode (graceful or LLS).
     */
    readonly restartMode: string;
    /**
     * Graceful restart period.
     */
    readonly restartPeriod: number;
    /**
     * Enable/disable RFC1583 compatibility.
     */
    readonly rfc1583Compatible: string;
    /**
     * Router ID.
     */
    readonly routerId: string;
    /**
     * SPF calculation frequency.
     */
    readonly spfTimers: string;
    /**
     * IP address summary configuration. The structure of `summaryAddress` block is documented below.
     */
    readonly summaryAddresses: outputs.GetRouterOspfSummaryAddress[];
    readonly vdomparam?: string;
}
