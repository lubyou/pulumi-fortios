// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterOspf(args?: GetRouterOspfArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterOspfResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterOspf:GetRouterOspf", {
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking GetRouterOspf.
 */
export interface GetRouterOspfArgs {
    vdomparam?: string;
}

/**
 * A collection of values returned by GetRouterOspf.
 */
export interface GetRouterOspfResult {
    readonly abrType: string;
    readonly areas: outputs.GetRouterOspfArea[];
    readonly autoCostRefBandwidth: number;
    readonly bfd: string;
    readonly databaseOverflow: string;
    readonly databaseOverflowMaxLsas: number;
    readonly databaseOverflowTimeToRecover: number;
    readonly defaultInformationMetric: number;
    readonly defaultInformationMetricType: string;
    readonly defaultInformationOriginate: string;
    readonly defaultInformationRouteMap: string;
    readonly defaultMetric: number;
    readonly distance: number;
    readonly distanceExternal: number;
    readonly distanceInterArea: number;
    readonly distanceIntraArea: number;
    readonly distributeListIn: string;
    readonly distributeLists: outputs.GetRouterOspfDistributeList[];
    readonly distributeRouteMapIn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logNeighbourChanges: string;
    readonly neighbors: outputs.GetRouterOspfNeighbor[];
    readonly networks: outputs.GetRouterOspfNetwork[];
    readonly ospfInterfaces: outputs.GetRouterOspfOspfInterface[];
    readonly passiveInterfaces: outputs.GetRouterOspfPassiveInterface[];
    readonly redistributes: outputs.GetRouterOspfRedistribute[];
    readonly restartMode: string;
    readonly restartOnTopologyChange: string;
    readonly restartPeriod: number;
    readonly rfc1583Compatible: string;
    readonly routerId: string;
    readonly spfTimers: string;
    readonly summaryAddresses: outputs.GetRouterOspfSummaryAddress[];
    readonly vdomparam?: string;
}
export function getRouterOspfOutput(args?: GetRouterOspfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterOspfResult> {
    return pulumi.output(args).apply((a: any) => getRouterOspf(a, opts))
}

/**
 * A collection of arguments for invoking GetRouterOspf.
 */
export interface GetRouterOspfOutputArgs {
    vdomparam?: pulumi.Input<string>;
}
