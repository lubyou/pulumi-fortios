// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WirelessControllerSyslogProfile extends pulumi.CustomResource {
    /**
     * Get an existing WirelessControllerSyslogProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessControllerSyslogProfileState, opts?: pulumi.CustomResourceOptions): WirelessControllerSyslogProfile {
        return new WirelessControllerSyslogProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wirelessControllerSyslogProfile:WirelessControllerSyslogProfile';

    /**
     * Returns true if the given object is an instance of WirelessControllerSyslogProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessControllerSyslogProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessControllerSyslogProfile.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly logLevel!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly serverAddrType!: pulumi.Output<string>;
    public readonly serverFqdn!: pulumi.Output<string>;
    public readonly serverIp!: pulumi.Output<string>;
    public readonly serverPort!: pulumi.Output<number>;
    public readonly serverStatus!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a WirelessControllerSyslogProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WirelessControllerSyslogProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessControllerSyslogProfileArgs | WirelessControllerSyslogProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessControllerSyslogProfileState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["logLevel"] = state ? state.logLevel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverAddrType"] = state ? state.serverAddrType : undefined;
            resourceInputs["serverFqdn"] = state ? state.serverFqdn : undefined;
            resourceInputs["serverIp"] = state ? state.serverIp : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["serverStatus"] = state ? state.serverStatus : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as WirelessControllerSyslogProfileArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverAddrType"] = args ? args.serverAddrType : undefined;
            resourceInputs["serverFqdn"] = args ? args.serverFqdn : undefined;
            resourceInputs["serverIp"] = args ? args.serverIp : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["serverStatus"] = args ? args.serverStatus : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessControllerSyslogProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessControllerSyslogProfile resources.
 */
export interface WirelessControllerSyslogProfileState {
    comment?: pulumi.Input<string>;
    logLevel?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverAddrType?: pulumi.Input<string>;
    serverFqdn?: pulumi.Input<string>;
    serverIp?: pulumi.Input<string>;
    serverPort?: pulumi.Input<number>;
    serverStatus?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelessControllerSyslogProfile resource.
 */
export interface WirelessControllerSyslogProfileArgs {
    comment?: pulumi.Input<string>;
    logLevel?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverAddrType?: pulumi.Input<string>;
    serverFqdn?: pulumi.Input<string>;
    serverIp?: pulumi.Input<string>;
    serverPort?: pulumi.Input<number>;
    serverStatus?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
