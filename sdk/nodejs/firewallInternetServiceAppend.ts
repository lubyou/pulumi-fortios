// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure additional port mappings for Internet Services.
 *
 * ## Import
 *
 * Firewall InternetServiceAppend can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend labelname FirewallInternetServiceAppend
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FirewallInternetServiceAppend extends pulumi.CustomResource {
    /**
     * Get an existing FirewallInternetServiceAppend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallInternetServiceAppendState, opts?: pulumi.CustomResourceOptions): FirewallInternetServiceAppend {
        return new FirewallInternetServiceAppend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend';

    /**
     * Returns true if the given object is an instance of FirewallInternetServiceAppend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallInternetServiceAppend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallInternetServiceAppend.__pulumiType;
    }

    /**
     * Appending TCP/UDP/SCTP destination port (1 to 65535).
     */
    public readonly appendPort!: pulumi.Output<number>;
    /**
     * Matching TCP/UDP/SCTP destination port (1 to 65535).
     */
    public readonly matchPort!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallInternetServiceAppend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallInternetServiceAppendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallInternetServiceAppendArgs | FirewallInternetServiceAppendState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallInternetServiceAppendState | undefined;
            inputs["appendPort"] = state ? state.appendPort : undefined;
            inputs["matchPort"] = state ? state.matchPort : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallInternetServiceAppendArgs | undefined;
            inputs["appendPort"] = args ? args.appendPort : undefined;
            inputs["matchPort"] = args ? args.matchPort : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FirewallInternetServiceAppend.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallInternetServiceAppend resources.
 */
export interface FirewallInternetServiceAppendState {
    /**
     * Appending TCP/UDP/SCTP destination port (1 to 65535).
     */
    appendPort?: pulumi.Input<number>;
    /**
     * Matching TCP/UDP/SCTP destination port (1 to 65535).
     */
    matchPort?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallInternetServiceAppend resource.
 */
export interface FirewallInternetServiceAppendArgs {
    /**
     * Appending TCP/UDP/SCTP destination port (1 to 65535).
     */
    appendPort?: pulumi.Input<number>;
    /**
     * Matching TCP/UDP/SCTP destination port (1 to 65535).
     */
    matchPort?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
