// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallInternetServiceAppend extends pulumi.CustomResource {
    /**
     * Get an existing FirewallInternetServiceAppend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallInternetServiceAppendState, opts?: pulumi.CustomResourceOptions): FirewallInternetServiceAppend {
        return new FirewallInternetServiceAppend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallInternetServiceAppend:FirewallInternetServiceAppend';

    /**
     * Returns true if the given object is an instance of FirewallInternetServiceAppend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallInternetServiceAppend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallInternetServiceAppend.__pulumiType;
    }

    public readonly addrMode!: pulumi.Output<string>;
    public readonly appendPort!: pulumi.Output<number>;
    public readonly matchPort!: pulumi.Output<number>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallInternetServiceAppend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallInternetServiceAppendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallInternetServiceAppendArgs | FirewallInternetServiceAppendState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallInternetServiceAppendState | undefined;
            resourceInputs["addrMode"] = state ? state.addrMode : undefined;
            resourceInputs["appendPort"] = state ? state.appendPort : undefined;
            resourceInputs["matchPort"] = state ? state.matchPort : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallInternetServiceAppendArgs | undefined;
            resourceInputs["addrMode"] = args ? args.addrMode : undefined;
            resourceInputs["appendPort"] = args ? args.appendPort : undefined;
            resourceInputs["matchPort"] = args ? args.matchPort : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallInternetServiceAppend.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallInternetServiceAppend resources.
 */
export interface FirewallInternetServiceAppendState {
    addrMode?: pulumi.Input<string>;
    appendPort?: pulumi.Input<number>;
    matchPort?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallInternetServiceAppend resource.
 */
export interface FirewallInternetServiceAppendArgs {
    addrMode?: pulumi.Input<string>;
    appendPort?: pulumi.Input<number>;
    matchPort?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
