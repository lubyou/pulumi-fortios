// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Report chart widget configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.ReportChart("trname", {
 *     category: "misc",
 *     comments: "test report chart",
 *     dataset: "s1",
 *     dimension: "3D",
 *     favorite: "no",
 *     graphType: "none",
 *     legend: "enable",
 *     legendFontSize: 0,
 *     period: "last24h",
 *     policy: 0,
 *     style: "auto",
 *     titleFontSize: 0,
 *     type: "graph",
 * });
 * ```
 *
 * ## Import
 *
 * Report Chart can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/reportChart:ReportChart labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class ReportChart extends pulumi.CustomResource {
    /**
     * Get an existing ReportChart resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReportChartState, opts?: pulumi.CustomResourceOptions): ReportChart {
        return new ReportChart(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/reportChart:ReportChart';

    /**
     * Returns true if the given object is an instance of ReportChart.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReportChart {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReportChart.__pulumiType;
    }

    /**
     * Chart background.
     */
    public readonly background!: pulumi.Output<string>;
    /**
     * Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Category series of pie chart. The structure of `categorySeries` block is documented below.
     */
    public readonly categorySeries!: pulumi.Output<outputs.ReportChartCategorySeries | undefined>;
    /**
     * Color palette (system will pick color automatically by default).
     */
    public readonly colorPalette!: pulumi.Output<string>;
    /**
     * Table column definition. The structure of `column` block is documented below.
     */
    public readonly columns!: pulumi.Output<outputs.ReportChartColumn[] | undefined>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string>;
    /**
     * Bind dataset to chart.
     */
    public readonly dataset!: pulumi.Output<string>;
    /**
     * Dimension. Valid values: `2D`, `3D`.
     */
    public readonly dimension!: pulumi.Output<string>;
    /**
     * Drill down charts. The structure of `drillDownCharts` block is documented below.
     */
    public readonly drillDownCharts!: pulumi.Output<outputs.ReportChartDrillDownChart[] | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Favorite. Valid values: `no`, `yes`.
     */
    public readonly favorite!: pulumi.Output<string>;
    /**
     * Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
     */
    public readonly graphType!: pulumi.Output<string>;
    /**
     * Enable/Disable Legend area. Valid values: `enable`, `disable`.
     */
    public readonly legend!: pulumi.Output<string>;
    /**
     * Font size of legend area.
     */
    public readonly legendFontSize!: pulumi.Output<number>;
    /**
     * Chart Widget Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Time period. Valid values: `last24h`, `last7d`.
     */
    public readonly period!: pulumi.Output<string>;
    /**
     * Used by monitor policy.
     */
    public readonly policy!: pulumi.Output<number>;
    /**
     * Style. Valid values: `auto`, `manual`.
     */
    public readonly style!: pulumi.Output<string>;
    /**
     * Chart title.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Font size of chart title.
     */
    public readonly titleFontSize!: pulumi.Output<number>;
    /**
     * Chart type. Valid values: `graph`, `table`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Value series of pie chart. The structure of `valueSeries` block is documented below.
     */
    public readonly valueSeries!: pulumi.Output<outputs.ReportChartValueSeries | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * X-series of chart. The structure of `xSeries` block is documented below.
     */
    public readonly xSeries!: pulumi.Output<outputs.ReportChartXSeries | undefined>;
    /**
     * Y-series of chart. The structure of `ySeries` block is documented below.
     */
    public readonly ySeries!: pulumi.Output<outputs.ReportChartYSeries | undefined>;

    /**
     * Create a ReportChart resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReportChartArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReportChartArgs | ReportChartState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReportChartState | undefined;
            inputs["background"] = state ? state.background : undefined;
            inputs["category"] = state ? state.category : undefined;
            inputs["categorySeries"] = state ? state.categorySeries : undefined;
            inputs["colorPalette"] = state ? state.colorPalette : undefined;
            inputs["columns"] = state ? state.columns : undefined;
            inputs["comments"] = state ? state.comments : undefined;
            inputs["dataset"] = state ? state.dataset : undefined;
            inputs["dimension"] = state ? state.dimension : undefined;
            inputs["drillDownCharts"] = state ? state.drillDownCharts : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["favorite"] = state ? state.favorite : undefined;
            inputs["graphType"] = state ? state.graphType : undefined;
            inputs["legend"] = state ? state.legend : undefined;
            inputs["legendFontSize"] = state ? state.legendFontSize : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["period"] = state ? state.period : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["style"] = state ? state.style : undefined;
            inputs["title"] = state ? state.title : undefined;
            inputs["titleFontSize"] = state ? state.titleFontSize : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["valueSeries"] = state ? state.valueSeries : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["xSeries"] = state ? state.xSeries : undefined;
            inputs["ySeries"] = state ? state.ySeries : undefined;
        } else {
            const args = argsOrState as ReportChartArgs | undefined;
            if ((!args || args.comments === undefined) && !opts.urn) {
                throw new Error("Missing required property 'comments'");
            }
            if ((!args || args.dataset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataset'");
            }
            inputs["background"] = args ? args.background : undefined;
            inputs["category"] = args ? args.category : undefined;
            inputs["categorySeries"] = args ? args.categorySeries : undefined;
            inputs["colorPalette"] = args ? args.colorPalette : undefined;
            inputs["columns"] = args ? args.columns : undefined;
            inputs["comments"] = args ? args.comments : undefined;
            inputs["dataset"] = args ? args.dataset : undefined;
            inputs["dimension"] = args ? args.dimension : undefined;
            inputs["drillDownCharts"] = args ? args.drillDownCharts : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["favorite"] = args ? args.favorite : undefined;
            inputs["graphType"] = args ? args.graphType : undefined;
            inputs["legend"] = args ? args.legend : undefined;
            inputs["legendFontSize"] = args ? args.legendFontSize : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["period"] = args ? args.period : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["style"] = args ? args.style : undefined;
            inputs["title"] = args ? args.title : undefined;
            inputs["titleFontSize"] = args ? args.titleFontSize : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["valueSeries"] = args ? args.valueSeries : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["xSeries"] = args ? args.xSeries : undefined;
            inputs["ySeries"] = args ? args.ySeries : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ReportChart.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReportChart resources.
 */
export interface ReportChartState {
    /**
     * Chart background.
     */
    background?: pulumi.Input<string>;
    /**
     * Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
     */
    category?: pulumi.Input<string>;
    /**
     * Category series of pie chart. The structure of `categorySeries` block is documented below.
     */
    categorySeries?: pulumi.Input<inputs.ReportChartCategorySeries>;
    /**
     * Color palette (system will pick color automatically by default).
     */
    colorPalette?: pulumi.Input<string>;
    /**
     * Table column definition. The structure of `column` block is documented below.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.ReportChartColumn>[]>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * Bind dataset to chart.
     */
    dataset?: pulumi.Input<string>;
    /**
     * Dimension. Valid values: `2D`, `3D`.
     */
    dimension?: pulumi.Input<string>;
    /**
     * Drill down charts. The structure of `drillDownCharts` block is documented below.
     */
    drillDownCharts?: pulumi.Input<pulumi.Input<inputs.ReportChartDrillDownChart>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Favorite. Valid values: `no`, `yes`.
     */
    favorite?: pulumi.Input<string>;
    /**
     * Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
     */
    graphType?: pulumi.Input<string>;
    /**
     * Enable/Disable Legend area. Valid values: `enable`, `disable`.
     */
    legend?: pulumi.Input<string>;
    /**
     * Font size of legend area.
     */
    legendFontSize?: pulumi.Input<number>;
    /**
     * Chart Widget Name
     */
    name?: pulumi.Input<string>;
    /**
     * Time period. Valid values: `last24h`, `last7d`.
     */
    period?: pulumi.Input<string>;
    /**
     * Used by monitor policy.
     */
    policy?: pulumi.Input<number>;
    /**
     * Style. Valid values: `auto`, `manual`.
     */
    style?: pulumi.Input<string>;
    /**
     * Chart title.
     */
    title?: pulumi.Input<string>;
    /**
     * Font size of chart title.
     */
    titleFontSize?: pulumi.Input<number>;
    /**
     * Chart type. Valid values: `graph`, `table`.
     */
    type?: pulumi.Input<string>;
    /**
     * Value series of pie chart. The structure of `valueSeries` block is documented below.
     */
    valueSeries?: pulumi.Input<inputs.ReportChartValueSeries>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * X-series of chart. The structure of `xSeries` block is documented below.
     */
    xSeries?: pulumi.Input<inputs.ReportChartXSeries>;
    /**
     * Y-series of chart. The structure of `ySeries` block is documented below.
     */
    ySeries?: pulumi.Input<inputs.ReportChartYSeries>;
}

/**
 * The set of arguments for constructing a ReportChart resource.
 */
export interface ReportChartArgs {
    /**
     * Chart background.
     */
    background?: pulumi.Input<string>;
    /**
     * Category. Valid values: `misc`, `traffic`, `event`, `virus`, `webfilter`, `attack`, `spam`, `dlp`, `app-ctrl`, `vulnerability`.
     */
    category?: pulumi.Input<string>;
    /**
     * Category series of pie chart. The structure of `categorySeries` block is documented below.
     */
    categorySeries?: pulumi.Input<inputs.ReportChartCategorySeries>;
    /**
     * Color palette (system will pick color automatically by default).
     */
    colorPalette?: pulumi.Input<string>;
    /**
     * Table column definition. The structure of `column` block is documented below.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.ReportChartColumn>[]>;
    /**
     * Comment.
     */
    comments: pulumi.Input<string>;
    /**
     * Bind dataset to chart.
     */
    dataset: pulumi.Input<string>;
    /**
     * Dimension. Valid values: `2D`, `3D`.
     */
    dimension?: pulumi.Input<string>;
    /**
     * Drill down charts. The structure of `drillDownCharts` block is documented below.
     */
    drillDownCharts?: pulumi.Input<pulumi.Input<inputs.ReportChartDrillDownChart>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Favorite. Valid values: `no`, `yes`.
     */
    favorite?: pulumi.Input<string>;
    /**
     * Graph type. Valid values: `none`, `bar`, `pie`, `line`, `flow`.
     */
    graphType?: pulumi.Input<string>;
    /**
     * Enable/Disable Legend area. Valid values: `enable`, `disable`.
     */
    legend?: pulumi.Input<string>;
    /**
     * Font size of legend area.
     */
    legendFontSize?: pulumi.Input<number>;
    /**
     * Chart Widget Name
     */
    name?: pulumi.Input<string>;
    /**
     * Time period. Valid values: `last24h`, `last7d`.
     */
    period?: pulumi.Input<string>;
    /**
     * Used by monitor policy.
     */
    policy?: pulumi.Input<number>;
    /**
     * Style. Valid values: `auto`, `manual`.
     */
    style?: pulumi.Input<string>;
    /**
     * Chart title.
     */
    title?: pulumi.Input<string>;
    /**
     * Font size of chart title.
     */
    titleFontSize?: pulumi.Input<number>;
    /**
     * Chart type. Valid values: `graph`, `table`.
     */
    type?: pulumi.Input<string>;
    /**
     * Value series of pie chart. The structure of `valueSeries` block is documented below.
     */
    valueSeries?: pulumi.Input<inputs.ReportChartValueSeries>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * X-series of chart. The structure of `xSeries` block is documented below.
     */
    xSeries?: pulumi.Input<inputs.ReportChartXSeries>;
    /**
     * Y-series of chart. The structure of `ySeries` block is documented below.
     */
    ySeries?: pulumi.Input<inputs.ReportChartYSeries>;
}
