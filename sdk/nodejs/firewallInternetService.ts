// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Show Internet Service application.
 *
 * ## Import
 *
 * Firewall InternetService can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/firewallInternetService:FirewallInternetService labelname {{fosid}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FirewallInternetService extends pulumi.CustomResource {
    /**
     * Get an existing FirewallInternetService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallInternetServiceState, opts?: pulumi.CustomResourceOptions): FirewallInternetService {
        return new FirewallInternetService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallInternetService:FirewallInternetService';

    /**
     * Returns true if the given object is an instance of FirewallInternetService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallInternetService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallInternetService.__pulumiType;
    }

    /**
     * Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
     */
    public readonly database!: pulumi.Output<string>;
    /**
     * How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * Extra number of IP ranges.
     */
    public readonly extraIpRangeNumber!: pulumi.Output<number>;
    /**
     * Internet Service ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * Icon ID of Internet Service.
     */
    public readonly iconId!: pulumi.Output<number>;
    /**
     * Total number of IP addresses.
     */
    public readonly ipNumber!: pulumi.Output<number>;
    /**
     * Total number of IP ranges.
     */
    public readonly ipRangeNumber!: pulumi.Output<number>;
    /**
     * Internet Service name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates whether the Internet Service can be used.
     */
    public readonly obsolete!: pulumi.Output<number>;
    /**
     * Reputation level of the Internet Service.
     */
    public readonly reputation!: pulumi.Output<number>;
    /**
     * Singular level of the Internet Service.
     */
    public readonly singularity!: pulumi.Output<number>;
    /**
     * Second Level Domain.
     */
    public readonly sldId!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallInternetService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallInternetServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallInternetServiceArgs | FirewallInternetServiceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallInternetServiceState | undefined;
            inputs["database"] = state ? state.database : undefined;
            inputs["direction"] = state ? state.direction : undefined;
            inputs["extraIpRangeNumber"] = state ? state.extraIpRangeNumber : undefined;
            inputs["fosid"] = state ? state.fosid : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["ipNumber"] = state ? state.ipNumber : undefined;
            inputs["ipRangeNumber"] = state ? state.ipRangeNumber : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["obsolete"] = state ? state.obsolete : undefined;
            inputs["reputation"] = state ? state.reputation : undefined;
            inputs["singularity"] = state ? state.singularity : undefined;
            inputs["sldId"] = state ? state.sldId : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallInternetServiceArgs | undefined;
            inputs["database"] = args ? args.database : undefined;
            inputs["direction"] = args ? args.direction : undefined;
            inputs["extraIpRangeNumber"] = args ? args.extraIpRangeNumber : undefined;
            inputs["fosid"] = args ? args.fosid : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["ipNumber"] = args ? args.ipNumber : undefined;
            inputs["ipRangeNumber"] = args ? args.ipRangeNumber : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["obsolete"] = args ? args.obsolete : undefined;
            inputs["reputation"] = args ? args.reputation : undefined;
            inputs["singularity"] = args ? args.singularity : undefined;
            inputs["sldId"] = args ? args.sldId : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FirewallInternetService.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallInternetService resources.
 */
export interface FirewallInternetServiceState {
    /**
     * Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
     */
    database?: pulumi.Input<string>;
    /**
     * How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
     */
    direction?: pulumi.Input<string>;
    /**
     * Extra number of IP ranges.
     */
    extraIpRangeNumber?: pulumi.Input<number>;
    /**
     * Internet Service ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Icon ID of Internet Service.
     */
    iconId?: pulumi.Input<number>;
    /**
     * Total number of IP addresses.
     */
    ipNumber?: pulumi.Input<number>;
    /**
     * Total number of IP ranges.
     */
    ipRangeNumber?: pulumi.Input<number>;
    /**
     * Internet Service name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates whether the Internet Service can be used.
     */
    obsolete?: pulumi.Input<number>;
    /**
     * Reputation level of the Internet Service.
     */
    reputation?: pulumi.Input<number>;
    /**
     * Singular level of the Internet Service.
     */
    singularity?: pulumi.Input<number>;
    /**
     * Second Level Domain.
     */
    sldId?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallInternetService resource.
 */
export interface FirewallInternetServiceArgs {
    /**
     * Database name this Internet Service belongs to. Valid values: `isdb`, `irdb`.
     */
    database?: pulumi.Input<string>;
    /**
     * How this service may be used in a firewall policy (source, destination or both). Valid values: `src`, `dst`, `both`.
     */
    direction?: pulumi.Input<string>;
    /**
     * Extra number of IP ranges.
     */
    extraIpRangeNumber?: pulumi.Input<number>;
    /**
     * Internet Service ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Icon ID of Internet Service.
     */
    iconId?: pulumi.Input<number>;
    /**
     * Total number of IP addresses.
     */
    ipNumber?: pulumi.Input<number>;
    /**
     * Total number of IP ranges.
     */
    ipRangeNumber?: pulumi.Input<number>;
    /**
     * Internet Service name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates whether the Internet Service can be used.
     */
    obsolete?: pulumi.Input<number>;
    /**
     * Reputation level of the Internet Service.
     */
    reputation?: pulumi.Input<number>;
    /**
     * Singular level of the Internet Service.
     */
    singularity?: pulumi.Input<number>;
    /**
     * Second Level Domain.
     */
    sldId?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
