// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure device access control lists. Applies to FortiOS Version `<= 6.2.0`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.UserDeviceAccessList("trname", {
 *     defaultAction: "accept",
 * });
 * ```
 *
 * ## Import
 *
 * User DeviceAccessList can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/userDeviceAccessList:UserDeviceAccessList labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class UserDeviceAccessList extends pulumi.CustomResource {
    /**
     * Get an existing UserDeviceAccessList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserDeviceAccessListState, opts?: pulumi.CustomResourceOptions): UserDeviceAccessList {
        return new UserDeviceAccessList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/userDeviceAccessList:UserDeviceAccessList';

    /**
     * Returns true if the given object is an instance of UserDeviceAccessList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserDeviceAccessList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserDeviceAccessList.__pulumiType;
    }

    /**
     * Accept or deny unknown/unspecified devices. Valid values: `accept`, `deny`.
     */
    public readonly defaultAction!: pulumi.Output<string>;
    /**
     * Device list. The structure of `deviceList` block is documented below.
     */
    public readonly deviceLists!: pulumi.Output<outputs.UserDeviceAccessListDeviceList[] | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Device access list name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a UserDeviceAccessList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserDeviceAccessListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserDeviceAccessListArgs | UserDeviceAccessListState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserDeviceAccessListState | undefined;
            inputs["defaultAction"] = state ? state.defaultAction : undefined;
            inputs["deviceLists"] = state ? state.deviceLists : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as UserDeviceAccessListArgs | undefined;
            inputs["defaultAction"] = args ? args.defaultAction : undefined;
            inputs["deviceLists"] = args ? args.deviceLists : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(UserDeviceAccessList.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserDeviceAccessList resources.
 */
export interface UserDeviceAccessListState {
    /**
     * Accept or deny unknown/unspecified devices. Valid values: `accept`, `deny`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * Device list. The structure of `deviceList` block is documented below.
     */
    deviceLists?: pulumi.Input<pulumi.Input<inputs.UserDeviceAccessListDeviceList>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Device access list name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserDeviceAccessList resource.
 */
export interface UserDeviceAccessListArgs {
    /**
     * Accept or deny unknown/unspecified devices. Valid values: `accept`, `deny`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * Device list. The structure of `deviceList` block is documented below.
     */
    deviceLists?: pulumi.Input<pulumi.Input<inputs.UserDeviceAccessListDeviceList>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Device access list name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
