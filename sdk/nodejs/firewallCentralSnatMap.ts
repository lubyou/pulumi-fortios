// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirewallCentralSnatMap extends pulumi.CustomResource {
    /**
     * Get an existing FirewallCentralSnatMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallCentralSnatMapState, opts?: pulumi.CustomResourceOptions): FirewallCentralSnatMap {
        return new FirewallCentralSnatMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallCentralSnatMap:FirewallCentralSnatMap';

    /**
     * Returns true if the given object is an instance of FirewallCentralSnatMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallCentralSnatMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallCentralSnatMap.__pulumiType;
    }

    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly dstAddr6s!: pulumi.Output<outputs.FirewallCentralSnatMapDstAddr6[] | undefined>;
    public readonly dstAddrs!: pulumi.Output<outputs.FirewallCentralSnatMapDstAddr[]>;
    public readonly dstPort!: pulumi.Output<string>;
    public readonly dstintfs!: pulumi.Output<outputs.FirewallCentralSnatMapDstintf[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly nat!: pulumi.Output<string>;
    public readonly nat46!: pulumi.Output<string>;
    public readonly nat64!: pulumi.Output<string>;
    public readonly natIppool6s!: pulumi.Output<outputs.FirewallCentralSnatMapNatIppool6[] | undefined>;
    public readonly natIppools!: pulumi.Output<outputs.FirewallCentralSnatMapNatIppool[] | undefined>;
    public readonly natPort!: pulumi.Output<string>;
    public readonly origAddr6s!: pulumi.Output<outputs.FirewallCentralSnatMapOrigAddr6[] | undefined>;
    public readonly origAddrs!: pulumi.Output<outputs.FirewallCentralSnatMapOrigAddr[]>;
    public readonly origPort!: pulumi.Output<string>;
    public readonly policyid!: pulumi.Output<number>;
    public readonly protocol!: pulumi.Output<number>;
    public readonly srcintfs!: pulumi.Output<outputs.FirewallCentralSnatMapSrcintf[]>;
    public readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallCentralSnatMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallCentralSnatMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallCentralSnatMapArgs | FirewallCentralSnatMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallCentralSnatMapState | undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["dstAddr6s"] = state ? state.dstAddr6s : undefined;
            resourceInputs["dstAddrs"] = state ? state.dstAddrs : undefined;
            resourceInputs["dstPort"] = state ? state.dstPort : undefined;
            resourceInputs["dstintfs"] = state ? state.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["nat46"] = state ? state.nat46 : undefined;
            resourceInputs["nat64"] = state ? state.nat64 : undefined;
            resourceInputs["natIppool6s"] = state ? state.natIppool6s : undefined;
            resourceInputs["natIppools"] = state ? state.natIppools : undefined;
            resourceInputs["natPort"] = state ? state.natPort : undefined;
            resourceInputs["origAddr6s"] = state ? state.origAddr6s : undefined;
            resourceInputs["origAddrs"] = state ? state.origAddrs : undefined;
            resourceInputs["origPort"] = state ? state.origPort : undefined;
            resourceInputs["policyid"] = state ? state.policyid : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["srcintfs"] = state ? state.srcintfs : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallCentralSnatMapArgs | undefined;
            if ((!args || args.dstAddrs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dstAddrs'");
            }
            if ((!args || args.dstintfs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dstintfs'");
            }
            if ((!args || args.nat === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nat'");
            }
            if ((!args || args.origAddrs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origAddrs'");
            }
            if ((!args || args.origPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origPort'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.srcintfs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'srcintfs'");
            }
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["dstAddr6s"] = args ? args.dstAddr6s : undefined;
            resourceInputs["dstAddrs"] = args ? args.dstAddrs : undefined;
            resourceInputs["dstPort"] = args ? args.dstPort : undefined;
            resourceInputs["dstintfs"] = args ? args.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["nat46"] = args ? args.nat46 : undefined;
            resourceInputs["nat64"] = args ? args.nat64 : undefined;
            resourceInputs["natIppool6s"] = args ? args.natIppool6s : undefined;
            resourceInputs["natIppools"] = args ? args.natIppools : undefined;
            resourceInputs["natPort"] = args ? args.natPort : undefined;
            resourceInputs["origAddr6s"] = args ? args.origAddr6s : undefined;
            resourceInputs["origAddrs"] = args ? args.origAddrs : undefined;
            resourceInputs["origPort"] = args ? args.origPort : undefined;
            resourceInputs["policyid"] = args ? args.policyid : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["srcintfs"] = args ? args.srcintfs : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallCentralSnatMap.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallCentralSnatMap resources.
 */
export interface FirewallCentralSnatMapState {
    comments?: pulumi.Input<string>;
    dstAddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstAddr6>[]>;
    dstAddrs?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstAddr>[]>;
    dstPort?: pulumi.Input<string>;
    dstintfs?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstintf>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    nat?: pulumi.Input<string>;
    nat46?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    natIppool6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapNatIppool6>[]>;
    natIppools?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapNatIppool>[]>;
    natPort?: pulumi.Input<string>;
    origAddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapOrigAddr6>[]>;
    origAddrs?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapOrigAddr>[]>;
    origPort?: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    protocol?: pulumi.Input<number>;
    srcintfs?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapSrcintf>[]>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallCentralSnatMap resource.
 */
export interface FirewallCentralSnatMapArgs {
    comments?: pulumi.Input<string>;
    dstAddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstAddr6>[]>;
    dstAddrs: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstAddr>[]>;
    dstPort?: pulumi.Input<string>;
    dstintfs: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapDstintf>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    nat: pulumi.Input<string>;
    nat46?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    natIppool6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapNatIppool6>[]>;
    natIppools?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapNatIppool>[]>;
    natPort?: pulumi.Input<string>;
    origAddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapOrigAddr6>[]>;
    origAddrs: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapOrigAddr>[]>;
    origPort: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    protocol: pulumi.Input<number>;
    srcintfs: pulumi.Input<pulumi.Input<inputs.FirewallCentralSnatMapSrcintf>[]>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
