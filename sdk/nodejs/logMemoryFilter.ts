// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Filters for memory buffer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.LogMemoryFilter("trname", {
 *     anomaly: "enable",
 *     dns: "enable",
 *     filterType: "include",
 *     forwardTraffic: "enable",
 *     gtp: "enable",
 *     localTraffic: "enable",
 *     multicastTraffic: "enable",
 *     severity: "information",
 *     snifferTraffic: "enable",
 *     ssh: "enable",
 *     voip: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * LogMemory Filter can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/logMemoryFilter:LogMemoryFilter labelname LogMemoryFilter
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class LogMemoryFilter extends pulumi.CustomResource {
    /**
     * Get an existing LogMemoryFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogMemoryFilterState, opts?: pulumi.CustomResourceOptions): LogMemoryFilter {
        return new LogMemoryFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/logMemoryFilter:LogMemoryFilter';

    /**
     * Returns true if the given object is an instance of LogMemoryFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogMemoryFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogMemoryFilter.__pulumiType;
    }

    /**
     * Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
     */
    public readonly admin!: pulumi.Output<string>;
    /**
     * Enable/disable anomaly logging. Valid values: `enable`, `disable`.
     */
    public readonly anomaly!: pulumi.Output<string>;
    /**
     * Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
     */
    public readonly auth!: pulumi.Output<string>;
    /**
     * Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
     */
    public readonly cpuMemoryUsage!: pulumi.Output<string>;
    /**
     * Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
     */
    public readonly dhcp!: pulumi.Output<string>;
    /**
     * Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
     */
    public readonly dns!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable event logging. Valid values: `enable`, `disable`.
     */
    public readonly event!: pulumi.Output<string>;
    /**
     * Free style filter string.
     */
    public readonly filter!: pulumi.Output<string>;
    /**
     * Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
     */
    public readonly filterType!: pulumi.Output<string>;
    /**
     * Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
     */
    public readonly forwardTraffic!: pulumi.Output<string>;
    /**
     * Free Style Filters The structure of `freeStyle` block is documented below.
     */
    public readonly freeStyles!: pulumi.Output<outputs.LogMemoryFilterFreeStyle[] | undefined>;
    /**
     * Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
     */
    public readonly gtp!: pulumi.Output<string>;
    /**
     * Enable/disable HA logging. Valid values: `enable`, `disable`.
     */
    public readonly ha!: pulumi.Output<string>;
    /**
     * Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
     */
    public readonly ipsec!: pulumi.Output<string>;
    /**
     * Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
     */
    public readonly ldbMonitor!: pulumi.Output<string>;
    /**
     * Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
     */
    public readonly localTraffic!: pulumi.Output<string>;
    /**
     * Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
     */
    public readonly multicastTraffic!: pulumi.Output<string>;
    /**
     * Enable/disable netscan discovery event logging.
     */
    public readonly netscanDiscovery!: pulumi.Output<string>;
    /**
     * Enable/disable netscan vulnerability event logging.
     */
    public readonly netscanVulnerability!: pulumi.Output<string>;
    /**
     * Enable/disable pattern update logging. Valid values: `enable`, `disable`.
     */
    public readonly pattern!: pulumi.Output<string>;
    /**
     * Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
     */
    public readonly ppp!: pulumi.Output<string>;
    /**
     * Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
     */
    public readonly radius!: pulumi.Output<string>;
    /**
     * Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
     */
    public readonly snifferTraffic!: pulumi.Output<string>;
    /**
     * Enable/disable SSH logging. Valid values: `enable`, `disable`.
     */
    public readonly ssh!: pulumi.Output<string>;
    /**
     * Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
     */
    public readonly sslvpnLogAdm!: pulumi.Output<string>;
    /**
     * Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
     */
    public readonly sslvpnLogAuth!: pulumi.Output<string>;
    /**
     * Enable/disable SSL session logging. Valid values: `enable`, `disable`.
     */
    public readonly sslvpnLogSession!: pulumi.Output<string>;
    /**
     * Enable/disable system activity logging. Valid values: `enable`, `disable`.
     */
    public readonly system!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
     */
    public readonly vipSsl!: pulumi.Output<string>;
    /**
     * Enable/disable VoIP logging. Valid values: `enable`, `disable`.
     */
    public readonly voip!: pulumi.Output<string>;
    /**
     * Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
     */
    public readonly wanOpt!: pulumi.Output<string>;
    /**
     * Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
     */
    public readonly wirelessActivity!: pulumi.Output<string>;

    /**
     * Create a LogMemoryFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogMemoryFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogMemoryFilterArgs | LogMemoryFilterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogMemoryFilterState | undefined;
            inputs["admin"] = state ? state.admin : undefined;
            inputs["anomaly"] = state ? state.anomaly : undefined;
            inputs["auth"] = state ? state.auth : undefined;
            inputs["cpuMemoryUsage"] = state ? state.cpuMemoryUsage : undefined;
            inputs["dhcp"] = state ? state.dhcp : undefined;
            inputs["dns"] = state ? state.dns : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["event"] = state ? state.event : undefined;
            inputs["filter"] = state ? state.filter : undefined;
            inputs["filterType"] = state ? state.filterType : undefined;
            inputs["forwardTraffic"] = state ? state.forwardTraffic : undefined;
            inputs["freeStyles"] = state ? state.freeStyles : undefined;
            inputs["gtp"] = state ? state.gtp : undefined;
            inputs["ha"] = state ? state.ha : undefined;
            inputs["ipsec"] = state ? state.ipsec : undefined;
            inputs["ldbMonitor"] = state ? state.ldbMonitor : undefined;
            inputs["localTraffic"] = state ? state.localTraffic : undefined;
            inputs["multicastTraffic"] = state ? state.multicastTraffic : undefined;
            inputs["netscanDiscovery"] = state ? state.netscanDiscovery : undefined;
            inputs["netscanVulnerability"] = state ? state.netscanVulnerability : undefined;
            inputs["pattern"] = state ? state.pattern : undefined;
            inputs["ppp"] = state ? state.ppp : undefined;
            inputs["radius"] = state ? state.radius : undefined;
            inputs["severity"] = state ? state.severity : undefined;
            inputs["snifferTraffic"] = state ? state.snifferTraffic : undefined;
            inputs["ssh"] = state ? state.ssh : undefined;
            inputs["sslvpnLogAdm"] = state ? state.sslvpnLogAdm : undefined;
            inputs["sslvpnLogAuth"] = state ? state.sslvpnLogAuth : undefined;
            inputs["sslvpnLogSession"] = state ? state.sslvpnLogSession : undefined;
            inputs["system"] = state ? state.system : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["vipSsl"] = state ? state.vipSsl : undefined;
            inputs["voip"] = state ? state.voip : undefined;
            inputs["wanOpt"] = state ? state.wanOpt : undefined;
            inputs["wirelessActivity"] = state ? state.wirelessActivity : undefined;
        } else {
            const args = argsOrState as LogMemoryFilterArgs | undefined;
            inputs["admin"] = args ? args.admin : undefined;
            inputs["anomaly"] = args ? args.anomaly : undefined;
            inputs["auth"] = args ? args.auth : undefined;
            inputs["cpuMemoryUsage"] = args ? args.cpuMemoryUsage : undefined;
            inputs["dhcp"] = args ? args.dhcp : undefined;
            inputs["dns"] = args ? args.dns : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["event"] = args ? args.event : undefined;
            inputs["filter"] = args ? args.filter : undefined;
            inputs["filterType"] = args ? args.filterType : undefined;
            inputs["forwardTraffic"] = args ? args.forwardTraffic : undefined;
            inputs["freeStyles"] = args ? args.freeStyles : undefined;
            inputs["gtp"] = args ? args.gtp : undefined;
            inputs["ha"] = args ? args.ha : undefined;
            inputs["ipsec"] = args ? args.ipsec : undefined;
            inputs["ldbMonitor"] = args ? args.ldbMonitor : undefined;
            inputs["localTraffic"] = args ? args.localTraffic : undefined;
            inputs["multicastTraffic"] = args ? args.multicastTraffic : undefined;
            inputs["netscanDiscovery"] = args ? args.netscanDiscovery : undefined;
            inputs["netscanVulnerability"] = args ? args.netscanVulnerability : undefined;
            inputs["pattern"] = args ? args.pattern : undefined;
            inputs["ppp"] = args ? args.ppp : undefined;
            inputs["radius"] = args ? args.radius : undefined;
            inputs["severity"] = args ? args.severity : undefined;
            inputs["snifferTraffic"] = args ? args.snifferTraffic : undefined;
            inputs["ssh"] = args ? args.ssh : undefined;
            inputs["sslvpnLogAdm"] = args ? args.sslvpnLogAdm : undefined;
            inputs["sslvpnLogAuth"] = args ? args.sslvpnLogAuth : undefined;
            inputs["sslvpnLogSession"] = args ? args.sslvpnLogSession : undefined;
            inputs["system"] = args ? args.system : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["vipSsl"] = args ? args.vipSsl : undefined;
            inputs["voip"] = args ? args.voip : undefined;
            inputs["wanOpt"] = args ? args.wanOpt : undefined;
            inputs["wirelessActivity"] = args ? args.wirelessActivity : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(LogMemoryFilter.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogMemoryFilter resources.
 */
export interface LogMemoryFilterState {
    /**
     * Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
     */
    admin?: pulumi.Input<string>;
    /**
     * Enable/disable anomaly logging. Valid values: `enable`, `disable`.
     */
    anomaly?: pulumi.Input<string>;
    /**
     * Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
     */
    cpuMemoryUsage?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
     */
    dhcp?: pulumi.Input<string>;
    /**
     * Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
     */
    dns?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable event logging. Valid values: `enable`, `disable`.
     */
    event?: pulumi.Input<string>;
    /**
     * Free style filter string.
     */
    filter?: pulumi.Input<string>;
    /**
     * Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
     */
    filterType?: pulumi.Input<string>;
    /**
     * Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
     */
    forwardTraffic?: pulumi.Input<string>;
    /**
     * Free Style Filters The structure of `freeStyle` block is documented below.
     */
    freeStyles?: pulumi.Input<pulumi.Input<inputs.LogMemoryFilterFreeStyle>[]>;
    /**
     * Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
     */
    gtp?: pulumi.Input<string>;
    /**
     * Enable/disable HA logging. Valid values: `enable`, `disable`.
     */
    ha?: pulumi.Input<string>;
    /**
     * Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
     */
    ipsec?: pulumi.Input<string>;
    /**
     * Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
     */
    ldbMonitor?: pulumi.Input<string>;
    /**
     * Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
     */
    localTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
     */
    multicastTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable netscan discovery event logging.
     */
    netscanDiscovery?: pulumi.Input<string>;
    /**
     * Enable/disable netscan vulnerability event logging.
     */
    netscanVulnerability?: pulumi.Input<string>;
    /**
     * Enable/disable pattern update logging. Valid values: `enable`, `disable`.
     */
    pattern?: pulumi.Input<string>;
    /**
     * Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
     */
    ppp?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
     */
    radius?: pulumi.Input<string>;
    /**
     * Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    severity?: pulumi.Input<string>;
    /**
     * Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
     */
    snifferTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable SSH logging. Valid values: `enable`, `disable`.
     */
    ssh?: pulumi.Input<string>;
    /**
     * Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogAdm?: pulumi.Input<string>;
    /**
     * Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogAuth?: pulumi.Input<string>;
    /**
     * Enable/disable SSL session logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogSession?: pulumi.Input<string>;
    /**
     * Enable/disable system activity logging. Valid values: `enable`, `disable`.
     */
    system?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
     */
    vipSsl?: pulumi.Input<string>;
    /**
     * Enable/disable VoIP logging. Valid values: `enable`, `disable`.
     */
    voip?: pulumi.Input<string>;
    /**
     * Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
     */
    wanOpt?: pulumi.Input<string>;
    /**
     * Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
     */
    wirelessActivity?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogMemoryFilter resource.
 */
export interface LogMemoryFilterArgs {
    /**
     * Enable/disable admin login/logout logging. Valid values: `enable`, `disable`.
     */
    admin?: pulumi.Input<string>;
    /**
     * Enable/disable anomaly logging. Valid values: `enable`, `disable`.
     */
    anomaly?: pulumi.Input<string>;
    /**
     * Enable/disable firewall authentication logging. Valid values: `enable`, `disable`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Enable/disable CPU & memory usage logging every 5 minutes. Valid values: `enable`, `disable`.
     */
    cpuMemoryUsage?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP service messages logging. Valid values: `enable`, `disable`.
     */
    dhcp?: pulumi.Input<string>;
    /**
     * Enable/disable detailed DNS event logging. Valid values: `enable`, `disable`.
     */
    dns?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable event logging. Valid values: `enable`, `disable`.
     */
    event?: pulumi.Input<string>;
    /**
     * Free style filter string.
     */
    filter?: pulumi.Input<string>;
    /**
     * Include/exclude logs that match the filter. Valid values: `include`, `exclude`.
     */
    filterType?: pulumi.Input<string>;
    /**
     * Enable/disable forward traffic logging. Valid values: `enable`, `disable`.
     */
    forwardTraffic?: pulumi.Input<string>;
    /**
     * Free Style Filters The structure of `freeStyle` block is documented below.
     */
    freeStyles?: pulumi.Input<pulumi.Input<inputs.LogMemoryFilterFreeStyle>[]>;
    /**
     * Enable/disable GTP messages logging. Valid values: `enable`, `disable`.
     */
    gtp?: pulumi.Input<string>;
    /**
     * Enable/disable HA logging. Valid values: `enable`, `disable`.
     */
    ha?: pulumi.Input<string>;
    /**
     * Enable/disable IPsec negotiation messages logging. Valid values: `enable`, `disable`.
     */
    ipsec?: pulumi.Input<string>;
    /**
     * Enable/disable VIP real server health monitoring logging. Valid values: `enable`, `disable`.
     */
    ldbMonitor?: pulumi.Input<string>;
    /**
     * Enable/disable local in or out traffic logging. Valid values: `enable`, `disable`.
     */
    localTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable multicast traffic logging. Valid values: `enable`, `disable`.
     */
    multicastTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable netscan discovery event logging.
     */
    netscanDiscovery?: pulumi.Input<string>;
    /**
     * Enable/disable netscan vulnerability event logging.
     */
    netscanVulnerability?: pulumi.Input<string>;
    /**
     * Enable/disable pattern update logging. Valid values: `enable`, `disable`.
     */
    pattern?: pulumi.Input<string>;
    /**
     * Enable/disable L2TP/PPTP/PPPoE logging. Valid values: `enable`, `disable`.
     */
    ppp?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS messages logging. Valid values: `enable`, `disable`.
     */
    radius?: pulumi.Input<string>;
    /**
     * Log every message above and including this severity level. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    severity?: pulumi.Input<string>;
    /**
     * Enable/disable sniffer traffic logging. Valid values: `enable`, `disable`.
     */
    snifferTraffic?: pulumi.Input<string>;
    /**
     * Enable/disable SSH logging. Valid values: `enable`, `disable`.
     */
    ssh?: pulumi.Input<string>;
    /**
     * Enable/disable SSL administrator login logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogAdm?: pulumi.Input<string>;
    /**
     * Enable/disable SSL user authentication logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogAuth?: pulumi.Input<string>;
    /**
     * Enable/disable SSL session logging. Valid values: `enable`, `disable`.
     */
    sslvpnLogSession?: pulumi.Input<string>;
    /**
     * Enable/disable system activity logging. Valid values: `enable`, `disable`.
     */
    system?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable VIP SSL logging. Valid values: `enable`, `disable`.
     */
    vipSsl?: pulumi.Input<string>;
    /**
     * Enable/disable VoIP logging. Valid values: `enable`, `disable`.
     */
    voip?: pulumi.Input<string>;
    /**
     * Enable/disable WAN optimization event logging. Valid values: `enable`, `disable`.
     */
    wanOpt?: pulumi.Input<string>;
    /**
     * Enable/disable wireless activity event logging. Valid values: `enable`, `disable`.
     */
    wirelessActivity?: pulumi.Input<string>;
}
