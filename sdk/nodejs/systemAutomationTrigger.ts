// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Trigger for automation stitches.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.SystemAutomationTrigger("trname", {
 *     eventType: "event-log",
 *     iocLevel: "high",
 *     licenseType: "forticare-support",
 *     logid: 32002,
 *     triggerFrequency: "daily",
 *     triggerMinute: 60,
 *     triggerType: "event-based",
 * });
 * ```
 *
 * ## Import
 *
 * System AutomationTrigger can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemAutomationTrigger:SystemAutomationTrigger labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemAutomationTrigger extends pulumi.CustomResource {
    /**
     * Get an existing SystemAutomationTrigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAutomationTriggerState, opts?: pulumi.CustomResourceOptions): SystemAutomationTrigger {
        return new SystemAutomationTrigger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemAutomationTrigger:SystemAutomationTrigger';

    /**
     * Returns true if the given object is an instance of SystemAutomationTrigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAutomationTrigger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAutomationTrigger.__pulumiType;
    }

    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Event type.
     */
    public readonly eventType!: pulumi.Output<string>;
    /**
     * FortiAnalyzer event handler name.
     */
    public readonly fazEventName!: pulumi.Output<string | undefined>;
    /**
     * FortiAnalyzer event severity.
     */
    public readonly fazEventSeverity!: pulumi.Output<string | undefined>;
    /**
     * FortiAnalyzer event tags.
     */
    public readonly fazEventTags!: pulumi.Output<string | undefined>;
    /**
     * Customized trigger field settings. The structure of `fields` block is documented below.
     */
    public readonly fields!: pulumi.Output<outputs.SystemAutomationTriggerField[] | undefined>;
    /**
     * IOC threat level. Valid values: `medium`, `high`.
     */
    public readonly iocLevel!: pulumi.Output<string>;
    /**
     * License type.
     */
    public readonly licenseType!: pulumi.Output<string>;
    /**
     * Log ID to trigger event.
     */
    public readonly logid!: pulumi.Output<number>;
    /**
     * Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
     */
    public readonly reportType!: pulumi.Output<string>;
    /**
     * Day within a month to trigger.
     */
    public readonly triggerDay!: pulumi.Output<number>;
    /**
     * Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
     */
    public readonly triggerFrequency!: pulumi.Output<string>;
    /**
     * Hour of the day on which to trigger (0 - 23, default = 1).
     */
    public readonly triggerHour!: pulumi.Output<number>;
    /**
     * Minute of the hour on which to trigger (0 - 59, 60 to randomize).
     */
    public readonly triggerMinute!: pulumi.Output<number>;
    /**
     * Trigger type. Valid values: `event-based`, `scheduled`.
     */
    public readonly triggerType!: pulumi.Output<string>;
    /**
     * Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
     */
    public readonly triggerWeekday!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemAutomationTrigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAutomationTriggerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAutomationTriggerArgs | SystemAutomationTriggerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAutomationTriggerState | undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["eventType"] = state ? state.eventType : undefined;
            inputs["fazEventName"] = state ? state.fazEventName : undefined;
            inputs["fazEventSeverity"] = state ? state.fazEventSeverity : undefined;
            inputs["fazEventTags"] = state ? state.fazEventTags : undefined;
            inputs["fields"] = state ? state.fields : undefined;
            inputs["iocLevel"] = state ? state.iocLevel : undefined;
            inputs["licenseType"] = state ? state.licenseType : undefined;
            inputs["logid"] = state ? state.logid : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["reportType"] = state ? state.reportType : undefined;
            inputs["triggerDay"] = state ? state.triggerDay : undefined;
            inputs["triggerFrequency"] = state ? state.triggerFrequency : undefined;
            inputs["triggerHour"] = state ? state.triggerHour : undefined;
            inputs["triggerMinute"] = state ? state.triggerMinute : undefined;
            inputs["triggerType"] = state ? state.triggerType : undefined;
            inputs["triggerWeekday"] = state ? state.triggerWeekday : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemAutomationTriggerArgs | undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["eventType"] = args ? args.eventType : undefined;
            inputs["fazEventName"] = args ? args.fazEventName : undefined;
            inputs["fazEventSeverity"] = args ? args.fazEventSeverity : undefined;
            inputs["fazEventTags"] = args ? args.fazEventTags : undefined;
            inputs["fields"] = args ? args.fields : undefined;
            inputs["iocLevel"] = args ? args.iocLevel : undefined;
            inputs["licenseType"] = args ? args.licenseType : undefined;
            inputs["logid"] = args ? args.logid : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["reportType"] = args ? args.reportType : undefined;
            inputs["triggerDay"] = args ? args.triggerDay : undefined;
            inputs["triggerFrequency"] = args ? args.triggerFrequency : undefined;
            inputs["triggerHour"] = args ? args.triggerHour : undefined;
            inputs["triggerMinute"] = args ? args.triggerMinute : undefined;
            inputs["triggerType"] = args ? args.triggerType : undefined;
            inputs["triggerWeekday"] = args ? args.triggerWeekday : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemAutomationTrigger.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemAutomationTrigger resources.
 */
export interface SystemAutomationTriggerState {
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Event type.
     */
    eventType?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event handler name.
     */
    fazEventName?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event severity.
     */
    fazEventSeverity?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event tags.
     */
    fazEventTags?: pulumi.Input<string>;
    /**
     * Customized trigger field settings. The structure of `fields` block is documented below.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SystemAutomationTriggerField>[]>;
    /**
     * IOC threat level. Valid values: `medium`, `high`.
     */
    iocLevel?: pulumi.Input<string>;
    /**
     * License type.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * Log ID to trigger event.
     */
    logid?: pulumi.Input<number>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
     */
    reportType?: pulumi.Input<string>;
    /**
     * Day within a month to trigger.
     */
    triggerDay?: pulumi.Input<number>;
    /**
     * Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
     */
    triggerFrequency?: pulumi.Input<string>;
    /**
     * Hour of the day on which to trigger (0 - 23, default = 1).
     */
    triggerHour?: pulumi.Input<number>;
    /**
     * Minute of the hour on which to trigger (0 - 59, 60 to randomize).
     */
    triggerMinute?: pulumi.Input<number>;
    /**
     * Trigger type. Valid values: `event-based`, `scheduled`.
     */
    triggerType?: pulumi.Input<string>;
    /**
     * Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
     */
    triggerWeekday?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAutomationTrigger resource.
 */
export interface SystemAutomationTriggerArgs {
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Event type.
     */
    eventType?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event handler name.
     */
    fazEventName?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event severity.
     */
    fazEventSeverity?: pulumi.Input<string>;
    /**
     * FortiAnalyzer event tags.
     */
    fazEventTags?: pulumi.Input<string>;
    /**
     * Customized trigger field settings. The structure of `fields` block is documented below.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SystemAutomationTriggerField>[]>;
    /**
     * IOC threat level. Valid values: `medium`, `high`.
     */
    iocLevel?: pulumi.Input<string>;
    /**
     * License type.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * Log ID to trigger event.
     */
    logid?: pulumi.Input<number>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Security Rating report. Valid values: `PostureReport`, `CoverageReport`, `OptimizationReport`.
     */
    reportType?: pulumi.Input<string>;
    /**
     * Day within a month to trigger.
     */
    triggerDay?: pulumi.Input<number>;
    /**
     * Scheduled trigger frequency (default = daily). Valid values: `hourly`, `daily`, `weekly`, `monthly`.
     */
    triggerFrequency?: pulumi.Input<string>;
    /**
     * Hour of the day on which to trigger (0 - 23, default = 1).
     */
    triggerHour?: pulumi.Input<number>;
    /**
     * Minute of the hour on which to trigger (0 - 59, 60 to randomize).
     */
    triggerMinute?: pulumi.Input<number>;
    /**
     * Trigger type. Valid values: `event-based`, `scheduled`.
     */
    triggerType?: pulumi.Input<string>;
    /**
     * Day of week for trigger. Valid values: `sunday`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`.
     */
    triggerWeekday?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
