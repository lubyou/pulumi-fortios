// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirewallShapingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing FirewallShapingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallShapingPolicyState, opts?: pulumi.CustomResourceOptions): FirewallShapingPolicy {
        return new FirewallShapingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallShapingPolicy:FirewallShapingPolicy';

    /**
     * Returns true if the given object is an instance of FirewallShapingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallShapingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallShapingPolicy.__pulumiType;
    }

    public readonly appCategories!: pulumi.Output<outputs.FirewallShapingPolicyAppCategory[] | undefined>;
    public readonly appGroups!: pulumi.Output<outputs.FirewallShapingPolicyAppGroup[] | undefined>;
    public readonly applications!: pulumi.Output<outputs.FirewallShapingPolicyApplication[] | undefined>;
    public readonly classId!: pulumi.Output<number>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly diffservForward!: pulumi.Output<string>;
    public readonly diffservReverse!: pulumi.Output<string>;
    public readonly diffservcodeForward!: pulumi.Output<string>;
    public readonly diffservcodeRev!: pulumi.Output<string>;
    public readonly dstaddr6s!: pulumi.Output<outputs.FirewallShapingPolicyDstaddr6[] | undefined>;
    public readonly dstaddrs!: pulumi.Output<outputs.FirewallShapingPolicyDstaddr[]>;
    public readonly dstintfs!: pulumi.Output<outputs.FirewallShapingPolicyDstintf[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly fosid!: pulumi.Output<number>;
    public readonly groups!: pulumi.Output<outputs.FirewallShapingPolicyGroup[] | undefined>;
    public readonly internetService!: pulumi.Output<string>;
    public readonly internetServiceCustomGroups!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceCustomGroup[] | undefined>;
    public readonly internetServiceCustoms!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceCustom[] | undefined>;
    public readonly internetServiceGroups!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceGroup[] | undefined>;
    public readonly internetServiceIds!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceId[] | undefined>;
    public readonly internetServiceNames!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceName[] | undefined>;
    public readonly internetServiceSrc!: pulumi.Output<string>;
    public readonly internetServiceSrcCustomGroups!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceSrcCustomGroup[] | undefined>;
    public readonly internetServiceSrcCustoms!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceSrcCustom[] | undefined>;
    public readonly internetServiceSrcGroups!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceSrcGroup[] | undefined>;
    public readonly internetServiceSrcIds!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceSrcId[] | undefined>;
    public readonly internetServiceSrcNames!: pulumi.Output<outputs.FirewallShapingPolicyInternetServiceSrcName[] | undefined>;
    public readonly ipVersion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly perIpShaper!: pulumi.Output<string>;
    public readonly schedule!: pulumi.Output<string>;
    public readonly services!: pulumi.Output<outputs.FirewallShapingPolicyService[]>;
    public readonly srcaddr6s!: pulumi.Output<outputs.FirewallShapingPolicySrcaddr6[] | undefined>;
    public readonly srcaddrs!: pulumi.Output<outputs.FirewallShapingPolicySrcaddr[]>;
    public readonly srcintfs!: pulumi.Output<outputs.FirewallShapingPolicySrcintf[] | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly tos!: pulumi.Output<string>;
    public readonly tosMask!: pulumi.Output<string>;
    public readonly tosNegate!: pulumi.Output<string>;
    public readonly trafficShaper!: pulumi.Output<string>;
    public readonly trafficShaperReverse!: pulumi.Output<string>;
    public readonly urlCategories!: pulumi.Output<outputs.FirewallShapingPolicyUrlCategory[] | undefined>;
    public readonly users!: pulumi.Output<outputs.FirewallShapingPolicyUser[] | undefined>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallShapingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallShapingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallShapingPolicyArgs | FirewallShapingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallShapingPolicyState | undefined;
            resourceInputs["appCategories"] = state ? state.appCategories : undefined;
            resourceInputs["appGroups"] = state ? state.appGroups : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["diffservForward"] = state ? state.diffservForward : undefined;
            resourceInputs["diffservReverse"] = state ? state.diffservReverse : undefined;
            resourceInputs["diffservcodeForward"] = state ? state.diffservcodeForward : undefined;
            resourceInputs["diffservcodeRev"] = state ? state.diffservcodeRev : undefined;
            resourceInputs["dstaddr6s"] = state ? state.dstaddr6s : undefined;
            resourceInputs["dstaddrs"] = state ? state.dstaddrs : undefined;
            resourceInputs["dstintfs"] = state ? state.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["internetService"] = state ? state.internetService : undefined;
            resourceInputs["internetServiceCustomGroups"] = state ? state.internetServiceCustomGroups : undefined;
            resourceInputs["internetServiceCustoms"] = state ? state.internetServiceCustoms : undefined;
            resourceInputs["internetServiceGroups"] = state ? state.internetServiceGroups : undefined;
            resourceInputs["internetServiceIds"] = state ? state.internetServiceIds : undefined;
            resourceInputs["internetServiceNames"] = state ? state.internetServiceNames : undefined;
            resourceInputs["internetServiceSrc"] = state ? state.internetServiceSrc : undefined;
            resourceInputs["internetServiceSrcCustomGroups"] = state ? state.internetServiceSrcCustomGroups : undefined;
            resourceInputs["internetServiceSrcCustoms"] = state ? state.internetServiceSrcCustoms : undefined;
            resourceInputs["internetServiceSrcGroups"] = state ? state.internetServiceSrcGroups : undefined;
            resourceInputs["internetServiceSrcIds"] = state ? state.internetServiceSrcIds : undefined;
            resourceInputs["internetServiceSrcNames"] = state ? state.internetServiceSrcNames : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["perIpShaper"] = state ? state.perIpShaper : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["srcaddr6s"] = state ? state.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = state ? state.srcaddrs : undefined;
            resourceInputs["srcintfs"] = state ? state.srcintfs : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
            resourceInputs["tosMask"] = state ? state.tosMask : undefined;
            resourceInputs["tosNegate"] = state ? state.tosNegate : undefined;
            resourceInputs["trafficShaper"] = state ? state.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = state ? state.trafficShaperReverse : undefined;
            resourceInputs["urlCategories"] = state ? state.urlCategories : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallShapingPolicyArgs | undefined;
            if ((!args || args.dstaddrs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dstaddrs'");
            }
            if ((!args || args.dstintfs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dstintfs'");
            }
            if ((!args || args.services === undefined) && !opts.urn) {
                throw new Error("Missing required property 'services'");
            }
            if ((!args || args.srcaddrs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'srcaddrs'");
            }
            resourceInputs["appCategories"] = args ? args.appCategories : undefined;
            resourceInputs["appGroups"] = args ? args.appGroups : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["diffservForward"] = args ? args.diffservForward : undefined;
            resourceInputs["diffservReverse"] = args ? args.diffservReverse : undefined;
            resourceInputs["diffservcodeForward"] = args ? args.diffservcodeForward : undefined;
            resourceInputs["diffservcodeRev"] = args ? args.diffservcodeRev : undefined;
            resourceInputs["dstaddr6s"] = args ? args.dstaddr6s : undefined;
            resourceInputs["dstaddrs"] = args ? args.dstaddrs : undefined;
            resourceInputs["dstintfs"] = args ? args.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["internetService"] = args ? args.internetService : undefined;
            resourceInputs["internetServiceCustomGroups"] = args ? args.internetServiceCustomGroups : undefined;
            resourceInputs["internetServiceCustoms"] = args ? args.internetServiceCustoms : undefined;
            resourceInputs["internetServiceGroups"] = args ? args.internetServiceGroups : undefined;
            resourceInputs["internetServiceIds"] = args ? args.internetServiceIds : undefined;
            resourceInputs["internetServiceNames"] = args ? args.internetServiceNames : undefined;
            resourceInputs["internetServiceSrc"] = args ? args.internetServiceSrc : undefined;
            resourceInputs["internetServiceSrcCustomGroups"] = args ? args.internetServiceSrcCustomGroups : undefined;
            resourceInputs["internetServiceSrcCustoms"] = args ? args.internetServiceSrcCustoms : undefined;
            resourceInputs["internetServiceSrcGroups"] = args ? args.internetServiceSrcGroups : undefined;
            resourceInputs["internetServiceSrcIds"] = args ? args.internetServiceSrcIds : undefined;
            resourceInputs["internetServiceSrcNames"] = args ? args.internetServiceSrcNames : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["perIpShaper"] = args ? args.perIpShaper : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["srcaddr6s"] = args ? args.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = args ? args.srcaddrs : undefined;
            resourceInputs["srcintfs"] = args ? args.srcintfs : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
            resourceInputs["tosMask"] = args ? args.tosMask : undefined;
            resourceInputs["tosNegate"] = args ? args.tosNegate : undefined;
            resourceInputs["trafficShaper"] = args ? args.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = args ? args.trafficShaperReverse : undefined;
            resourceInputs["urlCategories"] = args ? args.urlCategories : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallShapingPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallShapingPolicy resources.
 */
export interface FirewallShapingPolicyState {
    appCategories?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyAppCategory>[]>;
    appGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyAppGroup>[]>;
    applications?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyApplication>[]>;
    classId?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    diffservForward?: pulumi.Input<string>;
    diffservReverse?: pulumi.Input<string>;
    diffservcodeForward?: pulumi.Input<string>;
    diffservcodeRev?: pulumi.Input<string>;
    dstaddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstaddr6>[]>;
    dstaddrs?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstaddr>[]>;
    dstintfs?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstintf>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    groups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyGroup>[]>;
    internetService?: pulumi.Input<string>;
    internetServiceCustomGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceCustomGroup>[]>;
    internetServiceCustoms?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceCustom>[]>;
    internetServiceGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceGroup>[]>;
    internetServiceIds?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceId>[]>;
    internetServiceNames?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceName>[]>;
    internetServiceSrc?: pulumi.Input<string>;
    internetServiceSrcCustomGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcCustomGroup>[]>;
    internetServiceSrcCustoms?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcCustom>[]>;
    internetServiceSrcGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcGroup>[]>;
    internetServiceSrcIds?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcId>[]>;
    internetServiceSrcNames?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcName>[]>;
    ipVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    perIpShaper?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    services?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyService>[]>;
    srcaddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcaddr6>[]>;
    srcaddrs?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcaddr>[]>;
    srcintfs?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcintf>[]>;
    status?: pulumi.Input<string>;
    tos?: pulumi.Input<string>;
    tosMask?: pulumi.Input<string>;
    tosNegate?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    urlCategories?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyUrlCategory>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyUser>[]>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallShapingPolicy resource.
 */
export interface FirewallShapingPolicyArgs {
    appCategories?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyAppCategory>[]>;
    appGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyAppGroup>[]>;
    applications?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyApplication>[]>;
    classId?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    diffservForward?: pulumi.Input<string>;
    diffservReverse?: pulumi.Input<string>;
    diffservcodeForward?: pulumi.Input<string>;
    diffservcodeRev?: pulumi.Input<string>;
    dstaddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstaddr6>[]>;
    dstaddrs: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstaddr>[]>;
    dstintfs: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyDstintf>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    groups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyGroup>[]>;
    internetService?: pulumi.Input<string>;
    internetServiceCustomGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceCustomGroup>[]>;
    internetServiceCustoms?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceCustom>[]>;
    internetServiceGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceGroup>[]>;
    internetServiceIds?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceId>[]>;
    internetServiceNames?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceName>[]>;
    internetServiceSrc?: pulumi.Input<string>;
    internetServiceSrcCustomGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcCustomGroup>[]>;
    internetServiceSrcCustoms?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcCustom>[]>;
    internetServiceSrcGroups?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcGroup>[]>;
    internetServiceSrcIds?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcId>[]>;
    internetServiceSrcNames?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyInternetServiceSrcName>[]>;
    ipVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    perIpShaper?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    services: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyService>[]>;
    srcaddr6s?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcaddr6>[]>;
    srcaddrs: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcaddr>[]>;
    srcintfs?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicySrcintf>[]>;
    status?: pulumi.Input<string>;
    tos?: pulumi.Input<string>;
    tosMask?: pulumi.Input<string>;
    tosNegate?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    urlCategories?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyUrlCategory>[]>;
    users?: pulumi.Input<pulumi.Input<inputs.FirewallShapingPolicyUser>[]>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
