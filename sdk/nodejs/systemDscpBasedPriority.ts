// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure DSCP based priority table.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.SystemDscpBasedPriority("trname", {
 *     ds: 1,
 *     fosid: 1,
 *     priority: "low",
 * });
 * ```
 *
 * ## Import
 *
 * System DscpBasedPriority can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemDscpBasedPriority:SystemDscpBasedPriority labelname {{fosid}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemDscpBasedPriority extends pulumi.CustomResource {
    /**
     * Get an existing SystemDscpBasedPriority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemDscpBasedPriorityState, opts?: pulumi.CustomResourceOptions): SystemDscpBasedPriority {
        return new SystemDscpBasedPriority(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemDscpBasedPriority:SystemDscpBasedPriority';

    /**
     * Returns true if the given object is an instance of SystemDscpBasedPriority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemDscpBasedPriority {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemDscpBasedPriority.__pulumiType;
    }

    /**
     * DSCP(DiffServ) DS value (0 - 63).
     */
    public readonly ds!: pulumi.Output<number>;
    /**
     * Item ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * DSCP based priority level. Valid values: `low`, `medium`, `high`.
     */
    public readonly priority!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemDscpBasedPriority resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemDscpBasedPriorityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemDscpBasedPriorityArgs | SystemDscpBasedPriorityState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemDscpBasedPriorityState | undefined;
            inputs["ds"] = state ? state.ds : undefined;
            inputs["fosid"] = state ? state.fosid : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemDscpBasedPriorityArgs | undefined;
            inputs["ds"] = args ? args.ds : undefined;
            inputs["fosid"] = args ? args.fosid : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemDscpBasedPriority.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemDscpBasedPriority resources.
 */
export interface SystemDscpBasedPriorityState {
    /**
     * DSCP(DiffServ) DS value (0 - 63).
     */
    ds?: pulumi.Input<number>;
    /**
     * Item ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * DSCP based priority level. Valid values: `low`, `medium`, `high`.
     */
    priority?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemDscpBasedPriority resource.
 */
export interface SystemDscpBasedPriorityArgs {
    /**
     * DSCP(DiffServ) DS value (0 - 63).
     */
    ds?: pulumi.Input<number>;
    /**
     * Item ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * DSCP based priority level. Valid values: `low`, `medium`, `high`.
     */
    priority?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
