// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname1WebProxyForwardServer = new fortios.WebProxyForwardServer("trname1WebProxyForwardServer", {
 *     addrType: "fqdn",
 *     healthcheck: "disable",
 *     ip: "0.0.0.0",
 *     monitor: "http://www.google.com",
 *     port: 1128,
 *     serverDownOption: "block",
 * });
 * const trname1WebProxyForwardServerGroup = new fortios.WebProxyForwardServerGroup("trname1WebProxyForwardServerGroup", {
 *     affinity: "disable",
 *     groupDownOption: "block",
 *     ldbMethod: "weighted",
 *     serverLists: [{
 *         name: trname1WebProxyForwardServer.name,
 *         weight: 12,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * WebProxy ForwardServerGroup can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/webProxyForwardServerGroup:WebProxyForwardServerGroup labelname {{name}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/webProxyForwardServerGroup:WebProxyForwardServerGroup labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class WebProxyForwardServerGroup extends pulumi.CustomResource {
    /**
     * Get an existing WebProxyForwardServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebProxyForwardServerGroupState, opts?: pulumi.CustomResourceOptions): WebProxyForwardServerGroup {
        return new WebProxyForwardServerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/webProxyForwardServerGroup:WebProxyForwardServerGroup';

    /**
     * Returns true if the given object is an instance of WebProxyForwardServerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebProxyForwardServerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebProxyForwardServerGroup.__pulumiType;
    }

    /**
     * Enable/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global). Valid values: `enable`, `disable`.
     */
    public readonly affinity!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    public readonly groupDownOption!: pulumi.Output<string>;
    /**
     * Load balance method: weighted or least-session.
     */
    public readonly ldbMethod!: pulumi.Output<string>;
    /**
     * Forward server name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Add web forward servers to a list to form a server group. Optionally assign weights to each server. The structure of `serverList` block is documented below.
     */
    public readonly serverLists!: pulumi.Output<outputs.WebProxyForwardServerGroupServerList[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a WebProxyForwardServerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WebProxyForwardServerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebProxyForwardServerGroupArgs | WebProxyForwardServerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebProxyForwardServerGroupState | undefined;
            resourceInputs["affinity"] = state ? state.affinity : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["groupDownOption"] = state ? state.groupDownOption : undefined;
            resourceInputs["ldbMethod"] = state ? state.ldbMethod : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverLists"] = state ? state.serverLists : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as WebProxyForwardServerGroupArgs | undefined;
            resourceInputs["affinity"] = args ? args.affinity : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["groupDownOption"] = args ? args.groupDownOption : undefined;
            resourceInputs["ldbMethod"] = args ? args.ldbMethod : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverLists"] = args ? args.serverLists : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebProxyForwardServerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebProxyForwardServerGroup resources.
 */
export interface WebProxyForwardServerGroupState {
    /**
     * Enable/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global). Valid values: `enable`, `disable`.
     */
    affinity?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    groupDownOption?: pulumi.Input<string>;
    /**
     * Load balance method: weighted or least-session.
     */
    ldbMethod?: pulumi.Input<string>;
    /**
     * Forward server name.
     */
    name?: pulumi.Input<string>;
    /**
     * Add web forward servers to a list to form a server group. Optionally assign weights to each server. The structure of `serverList` block is documented below.
     */
    serverLists?: pulumi.Input<pulumi.Input<inputs.WebProxyForwardServerGroupServerList>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebProxyForwardServerGroup resource.
 */
export interface WebProxyForwardServerGroupArgs {
    /**
     * Enable/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global). Valid values: `enable`, `disable`.
     */
    affinity?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination. Valid values: `block`, `pass`.
     */
    groupDownOption?: pulumi.Input<string>;
    /**
     * Load balance method: weighted or least-session.
     */
    ldbMethod?: pulumi.Input<string>;
    /**
     * Forward server name.
     */
    name?: pulumi.Input<string>;
    /**
     * Add web forward servers to a list to form a server group. Optionally assign weights to each server. The structure of `serverList` block is documented below.
     */
    serverLists?: pulumi.Input<pulumi.Input<inputs.WebProxyForwardServerGroupServerList>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
