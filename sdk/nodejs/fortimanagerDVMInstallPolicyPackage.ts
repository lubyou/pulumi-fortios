// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource supports installing devicemanager policy package from FortiManager to the related FortiGate
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const test1 = new fortios.FortimanagerDVMInstallPolicyPackage("test1", {
 *     packageName: "test-pkg1",
 *     timeout: 5,
 * });
 * ```
 */
export class FortimanagerDVMInstallPolicyPackage extends pulumi.CustomResource {
    /**
     * Get an existing FortimanagerDVMInstallPolicyPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortimanagerDVMInstallPolicyPackageState, opts?: pulumi.CustomResourceOptions): FortimanagerDVMInstallPolicyPackage {
        return new FortimanagerDVMInstallPolicyPackage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fortimanagerDVMInstallPolicyPackage:FortimanagerDVMInstallPolicyPackage';

    /**
     * Returns true if the given object is an instance of FortimanagerDVMInstallPolicyPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FortimanagerDVMInstallPolicyPackage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FortimanagerDVMInstallPolicyPackage.__pulumiType;
    }

    /**
     * Source ADOM name. default is 'root'
     */
    public readonly adom!: pulumi.Output<string | undefined>;
    /**
     * The installation package name.
     */
    public readonly packageName!: pulumi.Output<string>;
    /**
     * Timeout for installing the package to the target, default: 3 minutes.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;

    /**
     * Create a FortimanagerDVMInstallPolicyPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FortimanagerDVMInstallPolicyPackageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortimanagerDVMInstallPolicyPackageArgs | FortimanagerDVMInstallPolicyPackageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortimanagerDVMInstallPolicyPackageState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["packageName"] = state ? state.packageName : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as FortimanagerDVMInstallPolicyPackageArgs | undefined;
            if ((!args || args.packageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageName'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["packageName"] = args ? args.packageName : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FortimanagerDVMInstallPolicyPackage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FortimanagerDVMInstallPolicyPackage resources.
 */
export interface FortimanagerDVMInstallPolicyPackageState {
    /**
     * Source ADOM name. default is 'root'
     */
    adom?: pulumi.Input<string>;
    /**
     * The installation package name.
     */
    packageName?: pulumi.Input<string>;
    /**
     * Timeout for installing the package to the target, default: 3 minutes.
     */
    timeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FortimanagerDVMInstallPolicyPackage resource.
 */
export interface FortimanagerDVMInstallPolicyPackageArgs {
    /**
     * Source ADOM name. default is 'root'
     */
    adom?: pulumi.Input<string>;
    /**
     * The installation package name.
     */
    packageName: pulumi.Input<string>;
    /**
     * Timeout for installing the package to the target, default: 3 minutes.
     */
    timeout?: pulumi.Input<number>;
}
