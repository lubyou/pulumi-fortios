// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure user password policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.UserPasswordPolicy("trname", {
 *     expireDays: 22,
 *     warnDays: 13,
 * });
 * ```
 *
 * ## Import
 *
 * User PasswordPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/userPasswordPolicy:UserPasswordPolicy labelname {{name}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/userPasswordPolicy:UserPasswordPolicy labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class UserPasswordPolicy extends pulumi.CustomResource {
    /**
     * Get an existing UserPasswordPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserPasswordPolicyState, opts?: pulumi.CustomResourceOptions): UserPasswordPolicy {
        return new UserPasswordPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/userPasswordPolicy:UserPasswordPolicy';

    /**
     * Returns true if the given object is an instance of UserPasswordPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserPasswordPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPasswordPolicy.__pulumiType;
    }

    /**
     * Time in days before the user's password expires.
     */
    public readonly expireDays!: pulumi.Output<number>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    public readonly expiredPasswordRenewal!: pulumi.Output<string>;
    /**
     * Password policy name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    public readonly warnDays!: pulumi.Output<number>;

    /**
     * Create a UserPasswordPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserPasswordPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserPasswordPolicyArgs | UserPasswordPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserPasswordPolicyState | undefined;
            resourceInputs["expireDays"] = state ? state.expireDays : undefined;
            resourceInputs["expiredPasswordRenewal"] = state ? state.expiredPasswordRenewal : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["warnDays"] = state ? state.warnDays : undefined;
        } else {
            const args = argsOrState as UserPasswordPolicyArgs | undefined;
            resourceInputs["expireDays"] = args ? args.expireDays : undefined;
            resourceInputs["expiredPasswordRenewal"] = args ? args.expiredPasswordRenewal : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["warnDays"] = args ? args.warnDays : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserPasswordPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserPasswordPolicy resources.
 */
export interface UserPasswordPolicyState {
    /**
     * Time in days before the user's password expires.
     */
    expireDays?: pulumi.Input<number>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    expiredPasswordRenewal?: pulumi.Input<string>;
    /**
     * Password policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    warnDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a UserPasswordPolicy resource.
 */
export interface UserPasswordPolicyArgs {
    /**
     * Time in days before the user's password expires.
     */
    expireDays?: pulumi.Input<number>;
    /**
     * Enable/disable renewal of a password that already is expired. Valid values: `enable`, `disable`.
     */
    expiredPasswordRenewal?: pulumi.Input<string>;
    /**
     * Password policy name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Time in days before a password expiration warning message is displayed to the user upon login.
     */
    warnDays?: pulumi.Input<number>;
}
