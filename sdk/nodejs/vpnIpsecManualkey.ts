// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure IPsec manual keys.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.VpnIpsecManualkey("trname", {
 *     authentication: "md5",
 *     authkey: "EE32CA121ECD772A-ECACAABA212345EC",
 *     enckey: "-",
 *     encryption: "null",
 *     interface: "port4",
 *     localGw: "0.0.0.0",
 *     localspi: "0x100",
 *     remoteGw: "1.1.1.1",
 *     remotespi: "0x100",
 * });
 * ```
 *
 * ## Import
 *
 * VpnIpsec Manualkey can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/vpnIpsecManualkey:VpnIpsecManualkey labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class VpnIpsecManualkey extends pulumi.CustomResource {
    /**
     * Get an existing VpnIpsecManualkey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnIpsecManualkeyState, opts?: pulumi.CustomResourceOptions): VpnIpsecManualkey {
        return new VpnIpsecManualkey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/vpnIpsecManualkey:VpnIpsecManualkey';

    /**
     * Returns true if the given object is an instance of VpnIpsecManualkey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnIpsecManualkey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnIpsecManualkey.__pulumiType;
    }

    /**
     * Authentication algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
     */
    public readonly authentication!: pulumi.Output<string>;
    /**
     * Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens.
     */
    public readonly authkey!: pulumi.Output<string>;
    /**
     * Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens.
     */
    public readonly enckey!: pulumi.Output<string>;
    /**
     * Encryption algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`, `aria128`, `aria192`, `aria256`, `seed`.
     */
    public readonly encryption!: pulumi.Output<string>;
    /**
     * Name of the physical, aggregate, or VLAN interface.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Local gateway.
     */
    public readonly localGw!: pulumi.Output<string>;
    /**
     * Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    public readonly localspi!: pulumi.Output<string>;
    /**
     * IPsec tunnel name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Peer gateway.
     */
    public readonly remoteGw!: pulumi.Output<string>;
    /**
     * Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    public readonly remotespi!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a VpnIpsecManualkey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnIpsecManualkeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnIpsecManualkeyArgs | VpnIpsecManualkeyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnIpsecManualkeyState | undefined;
            inputs["authentication"] = state ? state.authentication : undefined;
            inputs["authkey"] = state ? state.authkey : undefined;
            inputs["enckey"] = state ? state.enckey : undefined;
            inputs["encryption"] = state ? state.encryption : undefined;
            inputs["interface"] = state ? state.interface : undefined;
            inputs["localGw"] = state ? state.localGw : undefined;
            inputs["localspi"] = state ? state.localspi : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["remoteGw"] = state ? state.remoteGw : undefined;
            inputs["remotespi"] = state ? state.remotespi : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as VpnIpsecManualkeyArgs | undefined;
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.encryption === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encryption'");
            }
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            if ((!args || args.remoteGw === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteGw'");
            }
            inputs["authentication"] = args ? args.authentication : undefined;
            inputs["authkey"] = args ? args.authkey : undefined;
            inputs["enckey"] = args ? args.enckey : undefined;
            inputs["encryption"] = args ? args.encryption : undefined;
            inputs["interface"] = args ? args.interface : undefined;
            inputs["localGw"] = args ? args.localGw : undefined;
            inputs["localspi"] = args ? args.localspi : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["remoteGw"] = args ? args.remoteGw : undefined;
            inputs["remotespi"] = args ? args.remotespi : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VpnIpsecManualkey.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpnIpsecManualkey resources.
 */
export interface VpnIpsecManualkeyState {
    /**
     * Authentication algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
     */
    authentication?: pulumi.Input<string>;
    /**
     * Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens.
     */
    authkey?: pulumi.Input<string>;
    /**
     * Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens.
     */
    enckey?: pulumi.Input<string>;
    /**
     * Encryption algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`, `aria128`, `aria192`, `aria256`, `seed`.
     */
    encryption?: pulumi.Input<string>;
    /**
     * Name of the physical, aggregate, or VLAN interface.
     */
    interface?: pulumi.Input<string>;
    /**
     * Local gateway.
     */
    localGw?: pulumi.Input<string>;
    /**
     * Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    localspi?: pulumi.Input<string>;
    /**
     * IPsec tunnel name.
     */
    name?: pulumi.Input<string>;
    /**
     * Peer gateway.
     */
    remoteGw?: pulumi.Input<string>;
    /**
     * Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    remotespi?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnIpsecManualkey resource.
 */
export interface VpnIpsecManualkeyArgs {
    /**
     * Authentication algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `md5`, `sha1`, `sha256`, `sha384`, `sha512`.
     */
    authentication: pulumi.Input<string>;
    /**
     * Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens.
     */
    authkey?: pulumi.Input<string>;
    /**
     * Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens.
     */
    enckey?: pulumi.Input<string>;
    /**
     * Encryption algorithm. Must be the same for both ends of the tunnel. Valid values: `null`, `des`, `3des`, `aes128`, `aes192`, `aes256`, `aria128`, `aria192`, `aria256`, `seed`.
     */
    encryption: pulumi.Input<string>;
    /**
     * Name of the physical, aggregate, or VLAN interface.
     */
    interface: pulumi.Input<string>;
    /**
     * Local gateway.
     */
    localGw?: pulumi.Input<string>;
    /**
     * Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    localspi?: pulumi.Input<string>;
    /**
     * IPsec tunnel name.
     */
    name?: pulumi.Input<string>;
    /**
     * Peer gateway.
     */
    remoteGw: pulumi.Input<string>;
    /**
     * Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules.
     */
    remotespi?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
