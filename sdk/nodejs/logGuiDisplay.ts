// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure how log messages are displayed on the GUI.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.LogGuiDisplay("trname", {
 *     fortiviewUnscannedApps: "disable",
 *     resolveApps: "enable",
 *     resolveHosts: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * Log GuiDisplay can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/logGuiDisplay:LogGuiDisplay labelname LogGuiDisplay
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/logGuiDisplay:LogGuiDisplay labelname LogGuiDisplay
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class LogGuiDisplay extends pulumi.CustomResource {
    /**
     * Get an existing LogGuiDisplay resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogGuiDisplayState, opts?: pulumi.CustomResourceOptions): LogGuiDisplay {
        return new LogGuiDisplay(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/logGuiDisplay:LogGuiDisplay';

    /**
     * Returns true if the given object is an instance of LogGuiDisplay.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogGuiDisplay {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogGuiDisplay.__pulumiType;
    }

    /**
     * Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
     */
    public readonly fortiviewUnscannedApps!: pulumi.Output<string>;
    /**
     * Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
     */
    public readonly resolveApps!: pulumi.Output<string>;
    /**
     * Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
     */
    public readonly resolveHosts!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a LogGuiDisplay resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogGuiDisplayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogGuiDisplayArgs | LogGuiDisplayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogGuiDisplayState | undefined;
            resourceInputs["fortiviewUnscannedApps"] = state ? state.fortiviewUnscannedApps : undefined;
            resourceInputs["resolveApps"] = state ? state.resolveApps : undefined;
            resourceInputs["resolveHosts"] = state ? state.resolveHosts : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as LogGuiDisplayArgs | undefined;
            resourceInputs["fortiviewUnscannedApps"] = args ? args.fortiviewUnscannedApps : undefined;
            resourceInputs["resolveApps"] = args ? args.resolveApps : undefined;
            resourceInputs["resolveHosts"] = args ? args.resolveHosts : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogGuiDisplay.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogGuiDisplay resources.
 */
export interface LogGuiDisplayState {
    /**
     * Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
     */
    fortiviewUnscannedApps?: pulumi.Input<string>;
    /**
     * Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
     */
    resolveApps?: pulumi.Input<string>;
    /**
     * Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
     */
    resolveHosts?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogGuiDisplay resource.
 */
export interface LogGuiDisplayArgs {
    /**
     * Enable/disable showing unscanned traffic in FortiView application charts. Valid values: `enable`, `disable`.
     */
    fortiviewUnscannedApps?: pulumi.Input<string>;
    /**
     * Resolve unknown applications on the GUI using Fortinet's remote application database. Valid values: `enable`, `disable`.
     */
    resolveApps?: pulumi.Input<string>;
    /**
     * Enable/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup Valid values: `enable`, `disable`.
     */
    resolveHosts?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
