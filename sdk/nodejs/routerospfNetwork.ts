// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * OSPF network configuration.
 *
 * > The provider supports the definition of Network in Router Ospf `fortios.RouterOspf`, and also allows the definition of separate Network resources `fortios.RouterospfNetwork`, but do not use a `fortios.RouterOspf` with in-line Network in conjunction with any `fortios.RouterospfNetwork` resources, otherwise conflicts and overwrite will occur.
 *
 * ## Import
 *
 * Routerospf Network can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/routerospfNetwork:RouterospfNetwork labelname {{fosid}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class RouterospfNetwork extends pulumi.CustomResource {
    /**
     * Get an existing RouterospfNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterospfNetworkState, opts?: pulumi.CustomResourceOptions): RouterospfNetwork {
        return new RouterospfNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/routerospfNetwork:RouterospfNetwork';

    /**
     * Returns true if the given object is an instance of RouterospfNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterospfNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterospfNetwork.__pulumiType;
    }

    /**
     * Attach the network to area.
     */
    public readonly area!: pulumi.Output<string>;
    /**
     * Network entry ID.
     */
    public readonly fosid!: pulumi.Output<number>;
    /**
     * Prefix.
     */
    public readonly prefix!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a RouterospfNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterospfNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterospfNetworkArgs | RouterospfNetworkState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterospfNetworkState | undefined;
            inputs["area"] = state ? state.area : undefined;
            inputs["fosid"] = state ? state.fosid : undefined;
            inputs["prefix"] = state ? state.prefix : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as RouterospfNetworkArgs | undefined;
            inputs["area"] = args ? args.area : undefined;
            inputs["fosid"] = args ? args.fosid : undefined;
            inputs["prefix"] = args ? args.prefix : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RouterospfNetwork.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterospfNetwork resources.
 */
export interface RouterospfNetworkState {
    /**
     * Attach the network to area.
     */
    area?: pulumi.Input<string>;
    /**
     * Network entry ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterospfNetwork resource.
 */
export interface RouterospfNetworkArgs {
    /**
     * Attach the network to area.
     */
    area?: pulumi.Input<string>;
    /**
     * Network entry ID.
     */
    fosid?: pulumi.Input<number>;
    /**
     * Prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
