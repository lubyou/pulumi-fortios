// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallShaperTrafficShaper extends pulumi.CustomResource {
    /**
     * Get an existing FirewallShaperTrafficShaper resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallShaperTrafficShaperState, opts?: pulumi.CustomResourceOptions): FirewallShaperTrafficShaper {
        return new FirewallShaperTrafficShaper(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallShaperTrafficShaper:FirewallShaperTrafficShaper';

    /**
     * Returns true if the given object is an instance of FirewallShaperTrafficShaper.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallShaperTrafficShaper {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallShaperTrafficShaper.__pulumiType;
    }

    public readonly bandwidthUnit!: pulumi.Output<string>;
    public readonly diffserv!: pulumi.Output<string>;
    public readonly diffservcode!: pulumi.Output<string>;
    public readonly dscpMarkingMethod!: pulumi.Output<string>;
    public readonly exceedBandwidth!: pulumi.Output<number>;
    public readonly exceedClassId!: pulumi.Output<number>;
    public readonly exceedDscp!: pulumi.Output<string>;
    public readonly guaranteedBandwidth!: pulumi.Output<number>;
    public readonly maximumBandwidth!: pulumi.Output<number>;
    public readonly maximumDscp!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly overhead!: pulumi.Output<number>;
    public readonly perPolicy!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallShaperTrafficShaper resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallShaperTrafficShaperArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallShaperTrafficShaperArgs | FirewallShaperTrafficShaperState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallShaperTrafficShaperState | undefined;
            resourceInputs["bandwidthUnit"] = state ? state.bandwidthUnit : undefined;
            resourceInputs["diffserv"] = state ? state.diffserv : undefined;
            resourceInputs["diffservcode"] = state ? state.diffservcode : undefined;
            resourceInputs["dscpMarkingMethod"] = state ? state.dscpMarkingMethod : undefined;
            resourceInputs["exceedBandwidth"] = state ? state.exceedBandwidth : undefined;
            resourceInputs["exceedClassId"] = state ? state.exceedClassId : undefined;
            resourceInputs["exceedDscp"] = state ? state.exceedDscp : undefined;
            resourceInputs["guaranteedBandwidth"] = state ? state.guaranteedBandwidth : undefined;
            resourceInputs["maximumBandwidth"] = state ? state.maximumBandwidth : undefined;
            resourceInputs["maximumDscp"] = state ? state.maximumDscp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overhead"] = state ? state.overhead : undefined;
            resourceInputs["perPolicy"] = state ? state.perPolicy : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallShaperTrafficShaperArgs | undefined;
            resourceInputs["bandwidthUnit"] = args ? args.bandwidthUnit : undefined;
            resourceInputs["diffserv"] = args ? args.diffserv : undefined;
            resourceInputs["diffservcode"] = args ? args.diffservcode : undefined;
            resourceInputs["dscpMarkingMethod"] = args ? args.dscpMarkingMethod : undefined;
            resourceInputs["exceedBandwidth"] = args ? args.exceedBandwidth : undefined;
            resourceInputs["exceedClassId"] = args ? args.exceedClassId : undefined;
            resourceInputs["exceedDscp"] = args ? args.exceedDscp : undefined;
            resourceInputs["guaranteedBandwidth"] = args ? args.guaranteedBandwidth : undefined;
            resourceInputs["maximumBandwidth"] = args ? args.maximumBandwidth : undefined;
            resourceInputs["maximumDscp"] = args ? args.maximumDscp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overhead"] = args ? args.overhead : undefined;
            resourceInputs["perPolicy"] = args ? args.perPolicy : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallShaperTrafficShaper.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallShaperTrafficShaper resources.
 */
export interface FirewallShaperTrafficShaperState {
    bandwidthUnit?: pulumi.Input<string>;
    diffserv?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dscpMarkingMethod?: pulumi.Input<string>;
    exceedBandwidth?: pulumi.Input<number>;
    exceedClassId?: pulumi.Input<number>;
    exceedDscp?: pulumi.Input<string>;
    guaranteedBandwidth?: pulumi.Input<number>;
    maximumBandwidth?: pulumi.Input<number>;
    maximumDscp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overhead?: pulumi.Input<number>;
    perPolicy?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallShaperTrafficShaper resource.
 */
export interface FirewallShaperTrafficShaperArgs {
    bandwidthUnit?: pulumi.Input<string>;
    diffserv?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dscpMarkingMethod?: pulumi.Input<string>;
    exceedBandwidth?: pulumi.Input<number>;
    exceedClassId?: pulumi.Input<number>;
    exceedDscp?: pulumi.Input<string>;
    guaranteedBandwidth?: pulumi.Input<number>;
    maximumBandwidth?: pulumi.Input<number>;
    maximumDscp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overhead?: pulumi.Input<number>;
    perPolicy?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
