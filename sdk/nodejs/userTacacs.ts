// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure TACACS+ server entries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.UserTacacs("trname", {
 *     authenType: "auto",
 *     authorization: "disable",
 *     port: 2342,
 *     server: "1.1.1.1",
 * });
 * ```
 *
 * ## Import
 *
 * User Tacacs can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/userTacacs:UserTacacs labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class UserTacacs extends pulumi.CustomResource {
    /**
     * Get an existing UserTacacs resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserTacacsState, opts?: pulumi.CustomResourceOptions): UserTacacs {
        return new UserTacacs(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/userTacacs:UserTacacs';

    /**
     * Returns true if the given object is an instance of UserTacacs.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserTacacs {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserTacacs.__pulumiType;
    }

    /**
     * Allowed authentication protocols/methods. Valid values: `mschap`, `chap`, `pap`, `ascii`, `auto`.
     */
    public readonly authenType!: pulumi.Output<string>;
    /**
     * Enable/disable TACACS+ authorization. Valid values: `enable`, `disable`.
     */
    public readonly authorization!: pulumi.Output<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    /**
     * Key to access the primary server.
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * TACACS+ server entry name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Port number of the TACACS+ server.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Key to access the secondary server.
     */
    public readonly secondaryKey!: pulumi.Output<string | undefined>;
    /**
     * Secondary TACACS+ server CN domain name or IP address.
     */
    public readonly secondaryServer!: pulumi.Output<string>;
    /**
     * Primary TACACS+ server CN domain name or IP address.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * source IP for communications to TACACS+ server.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * Key to access the tertiary server.
     */
    public readonly tertiaryKey!: pulumi.Output<string | undefined>;
    /**
     * Tertiary TACACS+ server CN domain name or IP address.
     */
    public readonly tertiaryServer!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a UserTacacs resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserTacacsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserTacacsArgs | UserTacacsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserTacacsState | undefined;
            inputs["authenType"] = state ? state.authenType : undefined;
            inputs["authorization"] = state ? state.authorization : undefined;
            inputs["interface"] = state ? state.interface : undefined;
            inputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["secondaryKey"] = state ? state.secondaryKey : undefined;
            inputs["secondaryServer"] = state ? state.secondaryServer : undefined;
            inputs["server"] = state ? state.server : undefined;
            inputs["sourceIp"] = state ? state.sourceIp : undefined;
            inputs["tertiaryKey"] = state ? state.tertiaryKey : undefined;
            inputs["tertiaryServer"] = state ? state.tertiaryServer : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as UserTacacsArgs | undefined;
            inputs["authenType"] = args ? args.authenType : undefined;
            inputs["authorization"] = args ? args.authorization : undefined;
            inputs["interface"] = args ? args.interface : undefined;
            inputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["secondaryKey"] = args ? args.secondaryKey : undefined;
            inputs["secondaryServer"] = args ? args.secondaryServer : undefined;
            inputs["server"] = args ? args.server : undefined;
            inputs["sourceIp"] = args ? args.sourceIp : undefined;
            inputs["tertiaryKey"] = args ? args.tertiaryKey : undefined;
            inputs["tertiaryServer"] = args ? args.tertiaryServer : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(UserTacacs.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserTacacs resources.
 */
export interface UserTacacsState {
    /**
     * Allowed authentication protocols/methods. Valid values: `mschap`, `chap`, `pap`, `ascii`, `auto`.
     */
    authenType?: pulumi.Input<string>;
    /**
     * Enable/disable TACACS+ authorization. Valid values: `enable`, `disable`.
     */
    authorization?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * Key to access the primary server.
     */
    key?: pulumi.Input<string>;
    /**
     * TACACS+ server entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * Port number of the TACACS+ server.
     */
    port?: pulumi.Input<number>;
    /**
     * Key to access the secondary server.
     */
    secondaryKey?: pulumi.Input<string>;
    /**
     * Secondary TACACS+ server CN domain name or IP address.
     */
    secondaryServer?: pulumi.Input<string>;
    /**
     * Primary TACACS+ server CN domain name or IP address.
     */
    server?: pulumi.Input<string>;
    /**
     * source IP for communications to TACACS+ server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Key to access the tertiary server.
     */
    tertiaryKey?: pulumi.Input<string>;
    /**
     * Tertiary TACACS+ server CN domain name or IP address.
     */
    tertiaryServer?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserTacacs resource.
 */
export interface UserTacacsArgs {
    /**
     * Allowed authentication protocols/methods. Valid values: `mschap`, `chap`, `pap`, `ascii`, `auto`.
     */
    authenType?: pulumi.Input<string>;
    /**
     * Enable/disable TACACS+ authorization. Valid values: `enable`, `disable`.
     */
    authorization?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * Key to access the primary server.
     */
    key?: pulumi.Input<string>;
    /**
     * TACACS+ server entry name.
     */
    name?: pulumi.Input<string>;
    /**
     * Port number of the TACACS+ server.
     */
    port?: pulumi.Input<number>;
    /**
     * Key to access the secondary server.
     */
    secondaryKey?: pulumi.Input<string>;
    /**
     * Secondary TACACS+ server CN domain name or IP address.
     */
    secondaryServer?: pulumi.Input<string>;
    /**
     * Primary TACACS+ server CN domain name or IP address.
     */
    server?: pulumi.Input<string>;
    /**
     * source IP for communications to TACACS+ server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Key to access the tertiary server.
     */
    tertiaryKey?: pulumi.Input<string>;
    /**
     * Tertiary TACACS+ server CN domain name or IP address.
     */
    tertiaryServer?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
