// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to configure firewall service of FortiOS.
 *
 * !> **Warning:** The resource will be deprecated and replaced by new resource `fortios.FirewallServiceCustom`, we recommend that you use the new resource.
 *
 * ## Example Usage
 * ### Fqdn Service
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const v11 = new fortios.FirewallObjectService("v11", {
 *     category: "General",
 *     comment: "comment",
 *     fqdn: "abc.com",
 *     protocol: "TCP/UDP/SCTP",
 * });
 * ```
 * ### Iprange Service
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const v13 = new fortios.FirewallObjectService("v13", {
 *     category: "General",
 *     comment: "comment",
 *     iprange: "1.1.1.1-2.2.2.2",
 *     protocol: "TCP/UDP/SCTP",
 *     sctpPortrange: "66-88",
 *     tcpPortrange: "22-33",
 *     udpPortrange: "44-55",
 * });
 * ```
 * ### ICMP Service
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const iCMP = new fortios.FirewallObjectService("ICMP", {
 *     category: "General",
 *     comment: "comment",
 *     icmpcode: "3",
 *     icmptype: "2",
 *     protocol: "ICMP",
 *     protocolNumber: "1",
 * });
 * ```
 */
export class FirewallObjectService extends pulumi.CustomResource {
    /**
     * Get an existing FirewallObjectService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallObjectServiceState, opts?: pulumi.CustomResourceOptions): FirewallObjectService {
        return new FirewallObjectService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallObjectService:FirewallObjectService';

    /**
     * Returns true if the given object is an instance of FirewallObjectService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallObjectService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallObjectService.__pulumiType;
    }

    /**
     * Service category.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Comment.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Fully qualified domain name.
     */
    public readonly fqdn!: pulumi.Output<string>;
    /**
     * ICMP code.
     */
    public readonly icmpcode!: pulumi.Output<string>;
    /**
     * ICMP type.
     */
    public readonly icmptype!: pulumi.Output<string>;
    /**
     * Start and end of the IP range associated with service.
     */
    public readonly iprange!: pulumi.Output<string>;
    /**
     * Number of minutes before an idle administrator session time out.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Protocol type based on IANA numbers.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * IP protocol number.
     */
    public readonly protocolNumber!: pulumi.Output<string>;
    /**
     * Multiple SCTP port ranges.
     */
    public readonly sctpPortrange!: pulumi.Output<string>;
    /**
     * Custom tcp session TTL.
     */
    public readonly sessionTtl!: pulumi.Output<string>;
    /**
     * Multiple TCP port ranges.
     */
    public readonly tcpPortrange!: pulumi.Output<string>;
    /**
     * Multiple UDP port ranges.
     */
    public readonly udpPortrange!: pulumi.Output<string>;

    /**
     * Create a FirewallObjectService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallObjectServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallObjectServiceArgs | FirewallObjectServiceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallObjectServiceState | undefined;
            inputs["category"] = state ? state.category : undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["fqdn"] = state ? state.fqdn : undefined;
            inputs["icmpcode"] = state ? state.icmpcode : undefined;
            inputs["icmptype"] = state ? state.icmptype : undefined;
            inputs["iprange"] = state ? state.iprange : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["protocolNumber"] = state ? state.protocolNumber : undefined;
            inputs["sctpPortrange"] = state ? state.sctpPortrange : undefined;
            inputs["sessionTtl"] = state ? state.sessionTtl : undefined;
            inputs["tcpPortrange"] = state ? state.tcpPortrange : undefined;
            inputs["udpPortrange"] = state ? state.udpPortrange : undefined;
        } else {
            const args = argsOrState as FirewallObjectServiceArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            inputs["category"] = args ? args.category : undefined;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["fqdn"] = args ? args.fqdn : undefined;
            inputs["icmpcode"] = args ? args.icmpcode : undefined;
            inputs["icmptype"] = args ? args.icmptype : undefined;
            inputs["iprange"] = args ? args.iprange : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["protocolNumber"] = args ? args.protocolNumber : undefined;
            inputs["sctpPortrange"] = args ? args.sctpPortrange : undefined;
            inputs["sessionTtl"] = args ? args.sessionTtl : undefined;
            inputs["tcpPortrange"] = args ? args.tcpPortrange : undefined;
            inputs["udpPortrange"] = args ? args.udpPortrange : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FirewallObjectService.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallObjectService resources.
 */
export interface FirewallObjectServiceState {
    /**
     * Service category.
     */
    category?: pulumi.Input<string>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Fully qualified domain name.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * ICMP code.
     */
    icmpcode?: pulumi.Input<string>;
    /**
     * ICMP type.
     */
    icmptype?: pulumi.Input<string>;
    /**
     * Start and end of the IP range associated with service.
     */
    iprange?: pulumi.Input<string>;
    /**
     * Number of minutes before an idle administrator session time out.
     */
    name?: pulumi.Input<string>;
    /**
     * Protocol type based on IANA numbers.
     */
    protocol?: pulumi.Input<string>;
    /**
     * IP protocol number.
     */
    protocolNumber?: pulumi.Input<string>;
    /**
     * Multiple SCTP port ranges.
     */
    sctpPortrange?: pulumi.Input<string>;
    /**
     * Custom tcp session TTL.
     */
    sessionTtl?: pulumi.Input<string>;
    /**
     * Multiple TCP port ranges.
     */
    tcpPortrange?: pulumi.Input<string>;
    /**
     * Multiple UDP port ranges.
     */
    udpPortrange?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallObjectService resource.
 */
export interface FirewallObjectServiceArgs {
    /**
     * Service category.
     */
    category: pulumi.Input<string>;
    /**
     * Comment.
     */
    comment?: pulumi.Input<string>;
    /**
     * Fully qualified domain name.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * ICMP code.
     */
    icmpcode?: pulumi.Input<string>;
    /**
     * ICMP type.
     */
    icmptype?: pulumi.Input<string>;
    /**
     * Start and end of the IP range associated with service.
     */
    iprange?: pulumi.Input<string>;
    /**
     * Number of minutes before an idle administrator session time out.
     */
    name?: pulumi.Input<string>;
    /**
     * Protocol type based on IANA numbers.
     */
    protocol: pulumi.Input<string>;
    /**
     * IP protocol number.
     */
    protocolNumber?: pulumi.Input<string>;
    /**
     * Multiple SCTP port ranges.
     */
    sctpPortrange?: pulumi.Input<string>;
    /**
     * Custom tcp session TTL.
     */
    sessionTtl?: pulumi.Input<string>;
    /**
     * Multiple TCP port ranges.
     */
    tcpPortrange?: pulumi.Input<string>;
    /**
     * Multiple UDP port ranges.
     */
    udpPortrange?: pulumi.Input<string>;
}
