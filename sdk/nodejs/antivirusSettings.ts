// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure AntiVirus settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.AntivirusSettings("trname", {
 *     defaultDb: "extended",
 *     grayware: "enable",
 * });
 * ```
 *
 * ## Import
 *
 * Antivirus Settings can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/antivirusSettings:AntivirusSettings labelname AntivirusSettings
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class AntivirusSettings extends pulumi.CustomResource {
    /**
     * Get an existing AntivirusSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntivirusSettingsState, opts?: pulumi.CustomResourceOptions): AntivirusSettings {
        return new AntivirusSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/antivirusSettings:AntivirusSettings';

    /**
     * Returns true if the given object is an instance of AntivirusSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntivirusSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntivirusSettings.__pulumiType;
    }

    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    public readonly defaultDb!: pulumi.Output<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    public readonly grayware!: pulumi.Output<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    public readonly overrideTimeout!: pulumi.Output<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    public readonly useExtremeDb!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a AntivirusSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AntivirusSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntivirusSettingsArgs | AntivirusSettingsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntivirusSettingsState | undefined;
            inputs["defaultDb"] = state ? state.defaultDb : undefined;
            inputs["grayware"] = state ? state.grayware : undefined;
            inputs["overrideTimeout"] = state ? state.overrideTimeout : undefined;
            inputs["useExtremeDb"] = state ? state.useExtremeDb : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as AntivirusSettingsArgs | undefined;
            inputs["defaultDb"] = args ? args.defaultDb : undefined;
            inputs["grayware"] = args ? args.grayware : undefined;
            inputs["overrideTimeout"] = args ? args.overrideTimeout : undefined;
            inputs["useExtremeDb"] = args ? args.useExtremeDb : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AntivirusSettings.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AntivirusSettings resources.
 */
export interface AntivirusSettingsState {
    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    defaultDb?: pulumi.Input<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    grayware?: pulumi.Input<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    overrideTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    useExtremeDb?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AntivirusSettings resource.
 */
export interface AntivirusSettingsArgs {
    /**
     * Select the AV database to be used for AV scanning. Valid values: `normal`, `extended`, `extreme`.
     */
    defaultDb?: pulumi.Input<string>;
    /**
     * Enable/disable grayware detection when an AntiVirus profile is applied to traffic. Valid values: `enable`, `disable`.
     */
    grayware?: pulumi.Input<string>;
    /**
     * Override the large file scan timeout value in seconds (30 - 3600). Zero is the default value and is used to disable this command. When disabled, the daemon adjusts the large file scan timeout based on the file size.
     */
    overrideTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable the use of Extreme AVDB. Valid values: `enable`, `disable`.
     */
    useExtremeDb?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
