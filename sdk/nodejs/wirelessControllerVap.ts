// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure Virtual Access Points (VAPs).
 *
 * ## Import
 *
 * WirelessController Vap can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/wirelessControllerVap:WirelessControllerVap labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class WirelessControllerVap extends pulumi.CustomResource {
    /**
     * Get an existing WirelessControllerVap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessControllerVapState, opts?: pulumi.CustomResourceOptions): WirelessControllerVap {
        return new WirelessControllerVap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wirelessControllerVap:WirelessControllerVap';

    /**
     * Returns true if the given object is an instance of WirelessControllerVap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessControllerVap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessControllerVap.__pulumiType;
    }

    /**
     * access-control-list profile name.
     */
    public readonly accessControlList!: pulumi.Output<string>;
    /**
     * WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
     */
    public readonly acctInterimInterval!: pulumi.Output<number>;
    /**
     * Additional AKMs. Valid values: `akm6`.
     */
    public readonly additionalAkms!: pulumi.Output<string>;
    /**
     * Address group ID.
     */
    public readonly addressGroup!: pulumi.Output<string>;
    /**
     * Alias.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * Airtime weight in percentage (default = 20).
     */
    public readonly atfWeight!: pulumi.Output<number>;
    /**
     * Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
     */
    public readonly auth!: pulumi.Output<string>;
    /**
     * Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly broadcastSsid!: pulumi.Output<string>;
    /**
     * Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
     */
    public readonly broadcastSuppression!: pulumi.Output<string>;
    /**
     * Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly bssColorPartial!: pulumi.Output<string>;
    /**
     * Local-bridging captive portal ac-name.
     */
    public readonly captivePortalAcName!: pulumi.Output<string>;
    /**
     * Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
     */
    public readonly captivePortalAuthTimeout!: pulumi.Output<number>;
    /**
     * Secret key to access the macauth RADIUS server.
     */
    public readonly captivePortalMacauthRadiusSecret!: pulumi.Output<string | undefined>;
    /**
     * Captive portal external RADIUS server domain name or IP address.
     */
    public readonly captivePortalMacauthRadiusServer!: pulumi.Output<string>;
    /**
     * Secret key to access the RADIUS server.
     */
    public readonly captivePortalRadiusSecret!: pulumi.Output<string | undefined>;
    /**
     * Captive portal RADIUS server domain name or IP address.
     */
    public readonly captivePortalRadiusServer!: pulumi.Output<string>;
    /**
     * Session timeout interval (0 - 864000 sec, default = 0).
     */
    public readonly captivePortalSessionTimeoutInterval!: pulumi.Output<number>;
    /**
     * DHCP lease time in seconds for NAT IP address.
     */
    public readonly dhcpLeaseTime!: pulumi.Output<number>;
    /**
     * Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly dhcpOption43Insertion!: pulumi.Output<string>;
    /**
     * Enable/disable DHCP option 82 circuit-id insert (default = disable).
     */
    public readonly dhcpOption82CircuitIdInsertion!: pulumi.Output<string>;
    /**
     * Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly dhcpOption82Insertion!: pulumi.Output<string>;
    /**
     * Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
     */
    public readonly dhcpOption82RemoteIdInsertion!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
     */
    public readonly dynamicVlan!: pulumi.Output<string>;
    /**
     * Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    public readonly eapReauth!: pulumi.Output<string>;
    /**
     * EAP re-authentication interval (1800 - 864000 sec, default = 86400).
     */
    public readonly eapReauthIntv!: pulumi.Output<number>;
    /**
     * Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
     */
    public readonly eapolKeyRetries!: pulumi.Output<string>;
    /**
     * Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
     */
    public readonly encrypt!: pulumi.Output<string>;
    /**
     * Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly externalFastRoaming!: pulumi.Output<string>;
    /**
     * URL of external authentication logout server.
     */
    public readonly externalLogout!: pulumi.Output<string>;
    /**
     * URL of external authentication web server.
     */
    public readonly externalWeb!: pulumi.Output<string>;
    /**
     * URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
     */
    public readonly externalWebFormat!: pulumi.Output<string>;
    /**
     * Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
     */
    public readonly fastBssTransition!: pulumi.Output<string>;
    /**
     * Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly fastRoaming!: pulumi.Output<string>;
    /**
     * Mobility domain identifier in FT (1 - 65535, default = 1000).
     */
    public readonly ftMobilityDomain!: pulumi.Output<number>;
    /**
     * Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
     */
    public readonly ftOverDs!: pulumi.Output<string>;
    /**
     * Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
     */
    public readonly ftR0KeyLifetime!: pulumi.Output<number>;
    /**
     * Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
     */
    public readonly gtkRekey!: pulumi.Output<string>;
    /**
     * GTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    public readonly gtkRekeyIntv!: pulumi.Output<number>;
    /**
     * Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly highEfficiency!: pulumi.Output<string>;
    /**
     * Hotspot 2.0 profile name.
     */
    public readonly hotspot20Profile!: pulumi.Output<string>;
    /**
     * Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
     */
    public readonly igmpSnooping!: pulumi.Output<string>;
    /**
     * Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly intraVapPrivacy!: pulumi.Output<string>;
    /**
     * IP address and subnet mask for the local standalone NAT subnet.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
     */
    public readonly ipv6Rules!: pulumi.Output<string>;
    /**
     * WEP Key.
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * WEP key index (1 - 4).
     */
    public readonly keyindex!: pulumi.Output<number>;
    /**
     * VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
     */
    public readonly ldpc!: pulumi.Output<string>;
    /**
     * Enable/disable AP local authentication. Valid values: `enable`, `disable`.
     */
    public readonly localAuthentication!: pulumi.Output<string>;
    /**
     * Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly localBridging!: pulumi.Output<string>;
    /**
     * Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
     */
    public readonly localLan!: pulumi.Output<string>;
    /**
     * Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly localStandalone!: pulumi.Output<string>;
    /**
     * Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
     */
    public readonly localStandaloneNat!: pulumi.Output<string>;
    /**
     * Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
     */
    public readonly macAuthBypass!: pulumi.Output<string>;
    /**
     * Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
     */
    public readonly macFilter!: pulumi.Output<string>;
    /**
     * Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
     */
    public readonly macFilterLists!: pulumi.Output<outputs.WirelessControllerVapMacFilterList[] | undefined>;
    /**
     * Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
     */
    public readonly macFilterPolicyOther!: pulumi.Output<string>;
    /**
     * Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
     */
    public readonly maxClients!: pulumi.Output<number>;
    /**
     * Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
     */
    public readonly maxClientsAp!: pulumi.Output<number>;
    /**
     * Disable multicast enhancement when this many clients are receiving multicast traffic.
     */
    public readonly meDisableThresh!: pulumi.Output<number>;
    /**
     * Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
     */
    public readonly meshBackhaul!: pulumi.Output<string>;
    /**
     * Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
     */
    public readonly mpsk!: pulumi.Output<string>;
    /**
     * Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
     */
    public readonly mpskConcurrentClients!: pulumi.Output<number>;
    /**
     * Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
     */
    public readonly mpskKeys!: pulumi.Output<outputs.WirelessControllerVapMpskKey[] | undefined>;
    /**
     * MPSK profile name.
     */
    public readonly mpskProfile!: pulumi.Output<string>;
    /**
     * Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly muMimo!: pulumi.Output<string>;
    /**
     * Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly multicastEnhance!: pulumi.Output<string>;
    /**
     * Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
     */
    public readonly multicastRate!: pulumi.Output<string>;
    /**
     * Schedule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
     */
    public readonly okc!: pulumi.Output<string>;
    /**
     * OWE-Groups. Valid values: `19`, `20`, `21`.
     */
    public readonly oweGroups!: pulumi.Output<string>;
    /**
     * Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
     */
    public readonly oweTransition!: pulumi.Output<string>;
    /**
     * OWE transition mode peer SSID.
     */
    public readonly oweTransitionSsid!: pulumi.Output<string>;
    /**
     * WPA Pre-shared key.
     */
    public readonly passphrase!: pulumi.Output<string | undefined>;
    /**
     * Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
     */
    public readonly pmf!: pulumi.Output<string>;
    /**
     * Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
     */
    public readonly pmfAssocComebackTimeout!: pulumi.Output<number>;
    /**
     * Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
     */
    public readonly pmfSaQueryRetryTimeout!: pulumi.Output<number>;
    /**
     * Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
     */
    public readonly portMacauth!: pulumi.Output<string>;
    /**
     * LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
     */
    public readonly portMacauthReauthTimeout!: pulumi.Output<number>;
    /**
     * LAN port MAC authentication idle timeout value (default = 600 sec).
     */
    public readonly portMacauthTimeout!: pulumi.Output<number>;
    /**
     * Replacement message group for this VAP (only available when security is set to a captive portal type).
     */
    public readonly portalMessageOverrideGroup!: pulumi.Output<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    public readonly portalMessageOverrides!: pulumi.Output<outputs.WirelessControllerVapPortalMessageOverrides | undefined>;
    /**
     * Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
     */
    public readonly portalType!: pulumi.Output<string>;
    /**
     * Primary wireless access gateway profile name.
     */
    public readonly primaryWagProfile!: pulumi.Output<string>;
    /**
     * Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly probeRespSuppression!: pulumi.Output<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
     */
    public readonly probeRespThreshold!: pulumi.Output<string>;
    /**
     * Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    public readonly ptkRekey!: pulumi.Output<string>;
    /**
     * PTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    public readonly ptkRekeyIntv!: pulumi.Output<number>;
    /**
     * Quality of service profile name.
     */
    public readonly qosProfile!: pulumi.Output<string>;
    /**
     * Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly quarantine!: pulumi.Output<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
     */
    public readonly radio2gThreshold!: pulumi.Output<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
     */
    public readonly radio5gThreshold!: pulumi.Output<string>;
    /**
     * Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly radioSensitivity!: pulumi.Output<string>;
    /**
     * Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly radiusMacAuth!: pulumi.Output<string>;
    /**
     * RADIUS-based MAC authentication server.
     */
    public readonly radiusMacAuthServer!: pulumi.Output<string>;
    /**
     * Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
     */
    public readonly radiusMacAuthUsergroups!: pulumi.Output<outputs.WirelessControllerVapRadiusMacAuthUsergroup[] | undefined>;
    /**
     * RADIUS server to be used to authenticate WiFi users.
     */
    public readonly radiusServer!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    public readonly rates11a!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
     */
    public readonly rates11acSs12!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
     */
    public readonly rates11acSs34!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    public readonly rates11bg!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
     */
    public readonly rates11nSs12!: pulumi.Output<string>;
    /**
     * Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
     */
    public readonly rates11nSs34!: pulumi.Output<string>;
    /**
     * SAE-Groups. Valid values: `19`, `20`, `21`.
     */
    public readonly saeGroups!: pulumi.Output<string>;
    /**
     * WPA3 SAE password to be used to authenticate WiFi users.
     */
    public readonly saePassword!: pulumi.Output<string | undefined>;
    /**
     * VAP schedule name.
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * Secondary wireless access gateway profile name.
     */
    public readonly secondaryWagProfile!: pulumi.Output<string>;
    /**
     * Security mode for the wireless interface (default = wpa2-only-personal).
     */
    public readonly security!: pulumi.Output<string>;
    /**
     * Optional security exempt list for captive portal authentication.
     */
    public readonly securityExemptList!: pulumi.Output<string>;
    /**
     * Enable/disable obsolete security options. Valid values: `enable`, `disable`.
     */
    public readonly securityObsoleteOption!: pulumi.Output<string>;
    /**
     * Optional URL for redirecting users after they pass captive portal authentication.
     */
    public readonly securityRedirectUrl!: pulumi.Output<string>;
    /**
     * Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
     */
    public readonly selectedUsergroups!: pulumi.Output<outputs.WirelessControllerVapSelectedUsergroup[] | undefined>;
    /**
     * Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly splitTunneling!: pulumi.Output<string>;
    /**
     * IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
     */
    public readonly ssid!: pulumi.Output<string>;
    /**
     * Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly stickyClientRemove!: pulumi.Output<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
     */
    public readonly stickyClientThreshold2g!: pulumi.Output<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
     */
    public readonly stickyClientThreshold5g!: pulumi.Output<string>;
    /**
     * Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly targetWakeTime!: pulumi.Output<string>;
    /**
     * Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
     */
    public readonly tkipCounterMeasure!: pulumi.Output<string>;
    /**
     * The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
     */
    public readonly tunnelEchoInterval!: pulumi.Output<number>;
    /**
     * The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
     */
    public readonly tunnelFallbackInterval!: pulumi.Output<number>;
    /**
     * Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
     */
    public readonly usergroups!: pulumi.Output<outputs.WirelessControllerVapUsergroup[] | undefined>;
    /**
     * UTM profile name.
     */
    public readonly utmProfile!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
     */
    public readonly vlanAuto!: pulumi.Output<string>;
    /**
     * Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
     */
    public readonly vlanPooling!: pulumi.Output<string>;
    /**
     * VLAN pool. The structure of `vlanPool` block is documented below.
     */
    public readonly vlanPools!: pulumi.Output<outputs.WirelessControllerVapVlanPool[] | undefined>;
    /**
     * Optional VLAN ID.
     */
    public readonly vlanid!: pulumi.Output<number>;
    /**
     * Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
     */
    public readonly voiceEnterprise!: pulumi.Output<string>;

    /**
     * Create a WirelessControllerVap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WirelessControllerVapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessControllerVapArgs | WirelessControllerVapState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessControllerVapState | undefined;
            inputs["accessControlList"] = state ? state.accessControlList : undefined;
            inputs["acctInterimInterval"] = state ? state.acctInterimInterval : undefined;
            inputs["additionalAkms"] = state ? state.additionalAkms : undefined;
            inputs["addressGroup"] = state ? state.addressGroup : undefined;
            inputs["alias"] = state ? state.alias : undefined;
            inputs["atfWeight"] = state ? state.atfWeight : undefined;
            inputs["auth"] = state ? state.auth : undefined;
            inputs["broadcastSsid"] = state ? state.broadcastSsid : undefined;
            inputs["broadcastSuppression"] = state ? state.broadcastSuppression : undefined;
            inputs["bssColorPartial"] = state ? state.bssColorPartial : undefined;
            inputs["captivePortalAcName"] = state ? state.captivePortalAcName : undefined;
            inputs["captivePortalAuthTimeout"] = state ? state.captivePortalAuthTimeout : undefined;
            inputs["captivePortalMacauthRadiusSecret"] = state ? state.captivePortalMacauthRadiusSecret : undefined;
            inputs["captivePortalMacauthRadiusServer"] = state ? state.captivePortalMacauthRadiusServer : undefined;
            inputs["captivePortalRadiusSecret"] = state ? state.captivePortalRadiusSecret : undefined;
            inputs["captivePortalRadiusServer"] = state ? state.captivePortalRadiusServer : undefined;
            inputs["captivePortalSessionTimeoutInterval"] = state ? state.captivePortalSessionTimeoutInterval : undefined;
            inputs["dhcpLeaseTime"] = state ? state.dhcpLeaseTime : undefined;
            inputs["dhcpOption43Insertion"] = state ? state.dhcpOption43Insertion : undefined;
            inputs["dhcpOption82CircuitIdInsertion"] = state ? state.dhcpOption82CircuitIdInsertion : undefined;
            inputs["dhcpOption82Insertion"] = state ? state.dhcpOption82Insertion : undefined;
            inputs["dhcpOption82RemoteIdInsertion"] = state ? state.dhcpOption82RemoteIdInsertion : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["dynamicVlan"] = state ? state.dynamicVlan : undefined;
            inputs["eapReauth"] = state ? state.eapReauth : undefined;
            inputs["eapReauthIntv"] = state ? state.eapReauthIntv : undefined;
            inputs["eapolKeyRetries"] = state ? state.eapolKeyRetries : undefined;
            inputs["encrypt"] = state ? state.encrypt : undefined;
            inputs["externalFastRoaming"] = state ? state.externalFastRoaming : undefined;
            inputs["externalLogout"] = state ? state.externalLogout : undefined;
            inputs["externalWeb"] = state ? state.externalWeb : undefined;
            inputs["externalWebFormat"] = state ? state.externalWebFormat : undefined;
            inputs["fastBssTransition"] = state ? state.fastBssTransition : undefined;
            inputs["fastRoaming"] = state ? state.fastRoaming : undefined;
            inputs["ftMobilityDomain"] = state ? state.ftMobilityDomain : undefined;
            inputs["ftOverDs"] = state ? state.ftOverDs : undefined;
            inputs["ftR0KeyLifetime"] = state ? state.ftR0KeyLifetime : undefined;
            inputs["gtkRekey"] = state ? state.gtkRekey : undefined;
            inputs["gtkRekeyIntv"] = state ? state.gtkRekeyIntv : undefined;
            inputs["highEfficiency"] = state ? state.highEfficiency : undefined;
            inputs["hotspot20Profile"] = state ? state.hotspot20Profile : undefined;
            inputs["igmpSnooping"] = state ? state.igmpSnooping : undefined;
            inputs["intraVapPrivacy"] = state ? state.intraVapPrivacy : undefined;
            inputs["ip"] = state ? state.ip : undefined;
            inputs["ipv6Rules"] = state ? state.ipv6Rules : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["keyindex"] = state ? state.keyindex : undefined;
            inputs["ldpc"] = state ? state.ldpc : undefined;
            inputs["localAuthentication"] = state ? state.localAuthentication : undefined;
            inputs["localBridging"] = state ? state.localBridging : undefined;
            inputs["localLan"] = state ? state.localLan : undefined;
            inputs["localStandalone"] = state ? state.localStandalone : undefined;
            inputs["localStandaloneNat"] = state ? state.localStandaloneNat : undefined;
            inputs["macAuthBypass"] = state ? state.macAuthBypass : undefined;
            inputs["macFilter"] = state ? state.macFilter : undefined;
            inputs["macFilterLists"] = state ? state.macFilterLists : undefined;
            inputs["macFilterPolicyOther"] = state ? state.macFilterPolicyOther : undefined;
            inputs["maxClients"] = state ? state.maxClients : undefined;
            inputs["maxClientsAp"] = state ? state.maxClientsAp : undefined;
            inputs["meDisableThresh"] = state ? state.meDisableThresh : undefined;
            inputs["meshBackhaul"] = state ? state.meshBackhaul : undefined;
            inputs["mpsk"] = state ? state.mpsk : undefined;
            inputs["mpskConcurrentClients"] = state ? state.mpskConcurrentClients : undefined;
            inputs["mpskKeys"] = state ? state.mpskKeys : undefined;
            inputs["mpskProfile"] = state ? state.mpskProfile : undefined;
            inputs["muMimo"] = state ? state.muMimo : undefined;
            inputs["multicastEnhance"] = state ? state.multicastEnhance : undefined;
            inputs["multicastRate"] = state ? state.multicastRate : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["okc"] = state ? state.okc : undefined;
            inputs["oweGroups"] = state ? state.oweGroups : undefined;
            inputs["oweTransition"] = state ? state.oweTransition : undefined;
            inputs["oweTransitionSsid"] = state ? state.oweTransitionSsid : undefined;
            inputs["passphrase"] = state ? state.passphrase : undefined;
            inputs["pmf"] = state ? state.pmf : undefined;
            inputs["pmfAssocComebackTimeout"] = state ? state.pmfAssocComebackTimeout : undefined;
            inputs["pmfSaQueryRetryTimeout"] = state ? state.pmfSaQueryRetryTimeout : undefined;
            inputs["portMacauth"] = state ? state.portMacauth : undefined;
            inputs["portMacauthReauthTimeout"] = state ? state.portMacauthReauthTimeout : undefined;
            inputs["portMacauthTimeout"] = state ? state.portMacauthTimeout : undefined;
            inputs["portalMessageOverrideGroup"] = state ? state.portalMessageOverrideGroup : undefined;
            inputs["portalMessageOverrides"] = state ? state.portalMessageOverrides : undefined;
            inputs["portalType"] = state ? state.portalType : undefined;
            inputs["primaryWagProfile"] = state ? state.primaryWagProfile : undefined;
            inputs["probeRespSuppression"] = state ? state.probeRespSuppression : undefined;
            inputs["probeRespThreshold"] = state ? state.probeRespThreshold : undefined;
            inputs["ptkRekey"] = state ? state.ptkRekey : undefined;
            inputs["ptkRekeyIntv"] = state ? state.ptkRekeyIntv : undefined;
            inputs["qosProfile"] = state ? state.qosProfile : undefined;
            inputs["quarantine"] = state ? state.quarantine : undefined;
            inputs["radio2gThreshold"] = state ? state.radio2gThreshold : undefined;
            inputs["radio5gThreshold"] = state ? state.radio5gThreshold : undefined;
            inputs["radioSensitivity"] = state ? state.radioSensitivity : undefined;
            inputs["radiusMacAuth"] = state ? state.radiusMacAuth : undefined;
            inputs["radiusMacAuthServer"] = state ? state.radiusMacAuthServer : undefined;
            inputs["radiusMacAuthUsergroups"] = state ? state.radiusMacAuthUsergroups : undefined;
            inputs["radiusServer"] = state ? state.radiusServer : undefined;
            inputs["rates11a"] = state ? state.rates11a : undefined;
            inputs["rates11acSs12"] = state ? state.rates11acSs12 : undefined;
            inputs["rates11acSs34"] = state ? state.rates11acSs34 : undefined;
            inputs["rates11bg"] = state ? state.rates11bg : undefined;
            inputs["rates11nSs12"] = state ? state.rates11nSs12 : undefined;
            inputs["rates11nSs34"] = state ? state.rates11nSs34 : undefined;
            inputs["saeGroups"] = state ? state.saeGroups : undefined;
            inputs["saePassword"] = state ? state.saePassword : undefined;
            inputs["schedule"] = state ? state.schedule : undefined;
            inputs["secondaryWagProfile"] = state ? state.secondaryWagProfile : undefined;
            inputs["security"] = state ? state.security : undefined;
            inputs["securityExemptList"] = state ? state.securityExemptList : undefined;
            inputs["securityObsoleteOption"] = state ? state.securityObsoleteOption : undefined;
            inputs["securityRedirectUrl"] = state ? state.securityRedirectUrl : undefined;
            inputs["selectedUsergroups"] = state ? state.selectedUsergroups : undefined;
            inputs["splitTunneling"] = state ? state.splitTunneling : undefined;
            inputs["ssid"] = state ? state.ssid : undefined;
            inputs["stickyClientRemove"] = state ? state.stickyClientRemove : undefined;
            inputs["stickyClientThreshold2g"] = state ? state.stickyClientThreshold2g : undefined;
            inputs["stickyClientThreshold5g"] = state ? state.stickyClientThreshold5g : undefined;
            inputs["targetWakeTime"] = state ? state.targetWakeTime : undefined;
            inputs["tkipCounterMeasure"] = state ? state.tkipCounterMeasure : undefined;
            inputs["tunnelEchoInterval"] = state ? state.tunnelEchoInterval : undefined;
            inputs["tunnelFallbackInterval"] = state ? state.tunnelFallbackInterval : undefined;
            inputs["usergroups"] = state ? state.usergroups : undefined;
            inputs["utmProfile"] = state ? state.utmProfile : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["vlanAuto"] = state ? state.vlanAuto : undefined;
            inputs["vlanPooling"] = state ? state.vlanPooling : undefined;
            inputs["vlanPools"] = state ? state.vlanPools : undefined;
            inputs["vlanid"] = state ? state.vlanid : undefined;
            inputs["voiceEnterprise"] = state ? state.voiceEnterprise : undefined;
        } else {
            const args = argsOrState as WirelessControllerVapArgs | undefined;
            inputs["accessControlList"] = args ? args.accessControlList : undefined;
            inputs["acctInterimInterval"] = args ? args.acctInterimInterval : undefined;
            inputs["additionalAkms"] = args ? args.additionalAkms : undefined;
            inputs["addressGroup"] = args ? args.addressGroup : undefined;
            inputs["alias"] = args ? args.alias : undefined;
            inputs["atfWeight"] = args ? args.atfWeight : undefined;
            inputs["auth"] = args ? args.auth : undefined;
            inputs["broadcastSsid"] = args ? args.broadcastSsid : undefined;
            inputs["broadcastSuppression"] = args ? args.broadcastSuppression : undefined;
            inputs["bssColorPartial"] = args ? args.bssColorPartial : undefined;
            inputs["captivePortalAcName"] = args ? args.captivePortalAcName : undefined;
            inputs["captivePortalAuthTimeout"] = args ? args.captivePortalAuthTimeout : undefined;
            inputs["captivePortalMacauthRadiusSecret"] = args ? args.captivePortalMacauthRadiusSecret : undefined;
            inputs["captivePortalMacauthRadiusServer"] = args ? args.captivePortalMacauthRadiusServer : undefined;
            inputs["captivePortalRadiusSecret"] = args ? args.captivePortalRadiusSecret : undefined;
            inputs["captivePortalRadiusServer"] = args ? args.captivePortalRadiusServer : undefined;
            inputs["captivePortalSessionTimeoutInterval"] = args ? args.captivePortalSessionTimeoutInterval : undefined;
            inputs["dhcpLeaseTime"] = args ? args.dhcpLeaseTime : undefined;
            inputs["dhcpOption43Insertion"] = args ? args.dhcpOption43Insertion : undefined;
            inputs["dhcpOption82CircuitIdInsertion"] = args ? args.dhcpOption82CircuitIdInsertion : undefined;
            inputs["dhcpOption82Insertion"] = args ? args.dhcpOption82Insertion : undefined;
            inputs["dhcpOption82RemoteIdInsertion"] = args ? args.dhcpOption82RemoteIdInsertion : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["dynamicVlan"] = args ? args.dynamicVlan : undefined;
            inputs["eapReauth"] = args ? args.eapReauth : undefined;
            inputs["eapReauthIntv"] = args ? args.eapReauthIntv : undefined;
            inputs["eapolKeyRetries"] = args ? args.eapolKeyRetries : undefined;
            inputs["encrypt"] = args ? args.encrypt : undefined;
            inputs["externalFastRoaming"] = args ? args.externalFastRoaming : undefined;
            inputs["externalLogout"] = args ? args.externalLogout : undefined;
            inputs["externalWeb"] = args ? args.externalWeb : undefined;
            inputs["externalWebFormat"] = args ? args.externalWebFormat : undefined;
            inputs["fastBssTransition"] = args ? args.fastBssTransition : undefined;
            inputs["fastRoaming"] = args ? args.fastRoaming : undefined;
            inputs["ftMobilityDomain"] = args ? args.ftMobilityDomain : undefined;
            inputs["ftOverDs"] = args ? args.ftOverDs : undefined;
            inputs["ftR0KeyLifetime"] = args ? args.ftR0KeyLifetime : undefined;
            inputs["gtkRekey"] = args ? args.gtkRekey : undefined;
            inputs["gtkRekeyIntv"] = args ? args.gtkRekeyIntv : undefined;
            inputs["highEfficiency"] = args ? args.highEfficiency : undefined;
            inputs["hotspot20Profile"] = args ? args.hotspot20Profile : undefined;
            inputs["igmpSnooping"] = args ? args.igmpSnooping : undefined;
            inputs["intraVapPrivacy"] = args ? args.intraVapPrivacy : undefined;
            inputs["ip"] = args ? args.ip : undefined;
            inputs["ipv6Rules"] = args ? args.ipv6Rules : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["keyindex"] = args ? args.keyindex : undefined;
            inputs["ldpc"] = args ? args.ldpc : undefined;
            inputs["localAuthentication"] = args ? args.localAuthentication : undefined;
            inputs["localBridging"] = args ? args.localBridging : undefined;
            inputs["localLan"] = args ? args.localLan : undefined;
            inputs["localStandalone"] = args ? args.localStandalone : undefined;
            inputs["localStandaloneNat"] = args ? args.localStandaloneNat : undefined;
            inputs["macAuthBypass"] = args ? args.macAuthBypass : undefined;
            inputs["macFilter"] = args ? args.macFilter : undefined;
            inputs["macFilterLists"] = args ? args.macFilterLists : undefined;
            inputs["macFilterPolicyOther"] = args ? args.macFilterPolicyOther : undefined;
            inputs["maxClients"] = args ? args.maxClients : undefined;
            inputs["maxClientsAp"] = args ? args.maxClientsAp : undefined;
            inputs["meDisableThresh"] = args ? args.meDisableThresh : undefined;
            inputs["meshBackhaul"] = args ? args.meshBackhaul : undefined;
            inputs["mpsk"] = args ? args.mpsk : undefined;
            inputs["mpskConcurrentClients"] = args ? args.mpskConcurrentClients : undefined;
            inputs["mpskKeys"] = args ? args.mpskKeys : undefined;
            inputs["mpskProfile"] = args ? args.mpskProfile : undefined;
            inputs["muMimo"] = args ? args.muMimo : undefined;
            inputs["multicastEnhance"] = args ? args.multicastEnhance : undefined;
            inputs["multicastRate"] = args ? args.multicastRate : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["okc"] = args ? args.okc : undefined;
            inputs["oweGroups"] = args ? args.oweGroups : undefined;
            inputs["oweTransition"] = args ? args.oweTransition : undefined;
            inputs["oweTransitionSsid"] = args ? args.oweTransitionSsid : undefined;
            inputs["passphrase"] = args ? args.passphrase : undefined;
            inputs["pmf"] = args ? args.pmf : undefined;
            inputs["pmfAssocComebackTimeout"] = args ? args.pmfAssocComebackTimeout : undefined;
            inputs["pmfSaQueryRetryTimeout"] = args ? args.pmfSaQueryRetryTimeout : undefined;
            inputs["portMacauth"] = args ? args.portMacauth : undefined;
            inputs["portMacauthReauthTimeout"] = args ? args.portMacauthReauthTimeout : undefined;
            inputs["portMacauthTimeout"] = args ? args.portMacauthTimeout : undefined;
            inputs["portalMessageOverrideGroup"] = args ? args.portalMessageOverrideGroup : undefined;
            inputs["portalMessageOverrides"] = args ? args.portalMessageOverrides : undefined;
            inputs["portalType"] = args ? args.portalType : undefined;
            inputs["primaryWagProfile"] = args ? args.primaryWagProfile : undefined;
            inputs["probeRespSuppression"] = args ? args.probeRespSuppression : undefined;
            inputs["probeRespThreshold"] = args ? args.probeRespThreshold : undefined;
            inputs["ptkRekey"] = args ? args.ptkRekey : undefined;
            inputs["ptkRekeyIntv"] = args ? args.ptkRekeyIntv : undefined;
            inputs["qosProfile"] = args ? args.qosProfile : undefined;
            inputs["quarantine"] = args ? args.quarantine : undefined;
            inputs["radio2gThreshold"] = args ? args.radio2gThreshold : undefined;
            inputs["radio5gThreshold"] = args ? args.radio5gThreshold : undefined;
            inputs["radioSensitivity"] = args ? args.radioSensitivity : undefined;
            inputs["radiusMacAuth"] = args ? args.radiusMacAuth : undefined;
            inputs["radiusMacAuthServer"] = args ? args.radiusMacAuthServer : undefined;
            inputs["radiusMacAuthUsergroups"] = args ? args.radiusMacAuthUsergroups : undefined;
            inputs["radiusServer"] = args ? args.radiusServer : undefined;
            inputs["rates11a"] = args ? args.rates11a : undefined;
            inputs["rates11acSs12"] = args ? args.rates11acSs12 : undefined;
            inputs["rates11acSs34"] = args ? args.rates11acSs34 : undefined;
            inputs["rates11bg"] = args ? args.rates11bg : undefined;
            inputs["rates11nSs12"] = args ? args.rates11nSs12 : undefined;
            inputs["rates11nSs34"] = args ? args.rates11nSs34 : undefined;
            inputs["saeGroups"] = args ? args.saeGroups : undefined;
            inputs["saePassword"] = args ? args.saePassword : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["secondaryWagProfile"] = args ? args.secondaryWagProfile : undefined;
            inputs["security"] = args ? args.security : undefined;
            inputs["securityExemptList"] = args ? args.securityExemptList : undefined;
            inputs["securityObsoleteOption"] = args ? args.securityObsoleteOption : undefined;
            inputs["securityRedirectUrl"] = args ? args.securityRedirectUrl : undefined;
            inputs["selectedUsergroups"] = args ? args.selectedUsergroups : undefined;
            inputs["splitTunneling"] = args ? args.splitTunneling : undefined;
            inputs["ssid"] = args ? args.ssid : undefined;
            inputs["stickyClientRemove"] = args ? args.stickyClientRemove : undefined;
            inputs["stickyClientThreshold2g"] = args ? args.stickyClientThreshold2g : undefined;
            inputs["stickyClientThreshold5g"] = args ? args.stickyClientThreshold5g : undefined;
            inputs["targetWakeTime"] = args ? args.targetWakeTime : undefined;
            inputs["tkipCounterMeasure"] = args ? args.tkipCounterMeasure : undefined;
            inputs["tunnelEchoInterval"] = args ? args.tunnelEchoInterval : undefined;
            inputs["tunnelFallbackInterval"] = args ? args.tunnelFallbackInterval : undefined;
            inputs["usergroups"] = args ? args.usergroups : undefined;
            inputs["utmProfile"] = args ? args.utmProfile : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["vlanAuto"] = args ? args.vlanAuto : undefined;
            inputs["vlanPooling"] = args ? args.vlanPooling : undefined;
            inputs["vlanPools"] = args ? args.vlanPools : undefined;
            inputs["vlanid"] = args ? args.vlanid : undefined;
            inputs["voiceEnterprise"] = args ? args.voiceEnterprise : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(WirelessControllerVap.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessControllerVap resources.
 */
export interface WirelessControllerVapState {
    /**
     * access-control-list profile name.
     */
    accessControlList?: pulumi.Input<string>;
    /**
     * WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
     */
    acctInterimInterval?: pulumi.Input<number>;
    /**
     * Additional AKMs. Valid values: `akm6`.
     */
    additionalAkms?: pulumi.Input<string>;
    /**
     * Address group ID.
     */
    addressGroup?: pulumi.Input<string>;
    /**
     * Alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * Airtime weight in percentage (default = 20).
     */
    atfWeight?: pulumi.Input<number>;
    /**
     * Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
     */
    broadcastSsid?: pulumi.Input<string>;
    /**
     * Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
     */
    broadcastSuppression?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
     */
    bssColorPartial?: pulumi.Input<string>;
    /**
     * Local-bridging captive portal ac-name.
     */
    captivePortalAcName?: pulumi.Input<string>;
    /**
     * Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
     */
    captivePortalAuthTimeout?: pulumi.Input<number>;
    /**
     * Secret key to access the macauth RADIUS server.
     */
    captivePortalMacauthRadiusSecret?: pulumi.Input<string>;
    /**
     * Captive portal external RADIUS server domain name or IP address.
     */
    captivePortalMacauthRadiusServer?: pulumi.Input<string>;
    /**
     * Secret key to access the RADIUS server.
     */
    captivePortalRadiusSecret?: pulumi.Input<string>;
    /**
     * Captive portal RADIUS server domain name or IP address.
     */
    captivePortalRadiusServer?: pulumi.Input<string>;
    /**
     * Session timeout interval (0 - 864000 sec, default = 0).
     */
    captivePortalSessionTimeoutInterval?: pulumi.Input<number>;
    /**
     * DHCP lease time in seconds for NAT IP address.
     */
    dhcpLeaseTime?: pulumi.Input<number>;
    /**
     * Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
     */
    dhcpOption43Insertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 circuit-id insert (default = disable).
     */
    dhcpOption82CircuitIdInsertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
     */
    dhcpOption82Insertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
     */
    dhcpOption82RemoteIdInsertion?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
     */
    dynamicVlan?: pulumi.Input<string>;
    /**
     * Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    eapReauth?: pulumi.Input<string>;
    /**
     * EAP re-authentication interval (1800 - 864000 sec, default = 86400).
     */
    eapReauthIntv?: pulumi.Input<number>;
    /**
     * Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
     */
    eapolKeyRetries?: pulumi.Input<string>;
    /**
     * Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
     */
    encrypt?: pulumi.Input<string>;
    /**
     * Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
     */
    externalFastRoaming?: pulumi.Input<string>;
    /**
     * URL of external authentication logout server.
     */
    externalLogout?: pulumi.Input<string>;
    /**
     * URL of external authentication web server.
     */
    externalWeb?: pulumi.Input<string>;
    /**
     * URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
     */
    externalWebFormat?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
     */
    fastBssTransition?: pulumi.Input<string>;
    /**
     * Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
     */
    fastRoaming?: pulumi.Input<string>;
    /**
     * Mobility domain identifier in FT (1 - 65535, default = 1000).
     */
    ftMobilityDomain?: pulumi.Input<number>;
    /**
     * Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
     */
    ftOverDs?: pulumi.Input<string>;
    /**
     * Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
     */
    ftR0KeyLifetime?: pulumi.Input<number>;
    /**
     * Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
     */
    gtkRekey?: pulumi.Input<string>;
    /**
     * GTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    gtkRekeyIntv?: pulumi.Input<number>;
    /**
     * Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
     */
    highEfficiency?: pulumi.Input<string>;
    /**
     * Hotspot 2.0 profile name.
     */
    hotspot20Profile?: pulumi.Input<string>;
    /**
     * Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
     */
    igmpSnooping?: pulumi.Input<string>;
    /**
     * Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
     */
    intraVapPrivacy?: pulumi.Input<string>;
    /**
     * IP address and subnet mask for the local standalone NAT subnet.
     */
    ip?: pulumi.Input<string>;
    /**
     * Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
     */
    ipv6Rules?: pulumi.Input<string>;
    /**
     * WEP Key.
     */
    key?: pulumi.Input<string>;
    /**
     * WEP key index (1 - 4).
     */
    keyindex?: pulumi.Input<number>;
    /**
     * VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
     */
    ldpc?: pulumi.Input<string>;
    /**
     * Enable/disable AP local authentication. Valid values: `enable`, `disable`.
     */
    localAuthentication?: pulumi.Input<string>;
    /**
     * Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
     */
    localBridging?: pulumi.Input<string>;
    /**
     * Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
     */
    localLan?: pulumi.Input<string>;
    /**
     * Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
     */
    localStandalone?: pulumi.Input<string>;
    /**
     * Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
     */
    localStandaloneNat?: pulumi.Input<string>;
    /**
     * Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
     */
    macAuthBypass?: pulumi.Input<string>;
    /**
     * Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
     */
    macFilter?: pulumi.Input<string>;
    /**
     * Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
     */
    macFilterLists?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapMacFilterList>[]>;
    /**
     * Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
     */
    macFilterPolicyOther?: pulumi.Input<string>;
    /**
     * Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
     */
    maxClients?: pulumi.Input<number>;
    /**
     * Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
     */
    maxClientsAp?: pulumi.Input<number>;
    /**
     * Disable multicast enhancement when this many clients are receiving multicast traffic.
     */
    meDisableThresh?: pulumi.Input<number>;
    /**
     * Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
     */
    meshBackhaul?: pulumi.Input<string>;
    /**
     * Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
     */
    mpsk?: pulumi.Input<string>;
    /**
     * Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
     */
    mpskConcurrentClients?: pulumi.Input<number>;
    /**
     * Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
     */
    mpskKeys?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapMpskKey>[]>;
    /**
     * MPSK profile name.
     */
    mpskProfile?: pulumi.Input<string>;
    /**
     * Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
     */
    muMimo?: pulumi.Input<string>;
    /**
     * Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
     */
    multicastEnhance?: pulumi.Input<string>;
    /**
     * Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
     */
    multicastRate?: pulumi.Input<string>;
    /**
     * Schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
     */
    okc?: pulumi.Input<string>;
    /**
     * OWE-Groups. Valid values: `19`, `20`, `21`.
     */
    oweGroups?: pulumi.Input<string>;
    /**
     * Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
     */
    oweTransition?: pulumi.Input<string>;
    /**
     * OWE transition mode peer SSID.
     */
    oweTransitionSsid?: pulumi.Input<string>;
    /**
     * WPA Pre-shared key.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
     */
    pmf?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
     */
    pmfAssocComebackTimeout?: pulumi.Input<number>;
    /**
     * Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
     */
    pmfSaQueryRetryTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
     */
    portMacauth?: pulumi.Input<string>;
    /**
     * LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
     */
    portMacauthReauthTimeout?: pulumi.Input<number>;
    /**
     * LAN port MAC authentication idle timeout value (default = 600 sec).
     */
    portMacauthTimeout?: pulumi.Input<number>;
    /**
     * Replacement message group for this VAP (only available when security is set to a captive portal type).
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.WirelessControllerVapPortalMessageOverrides>;
    /**
     * Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
     */
    portalType?: pulumi.Input<string>;
    /**
     * Primary wireless access gateway profile name.
     */
    primaryWagProfile?: pulumi.Input<string>;
    /**
     * Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    probeRespSuppression?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
     */
    probeRespThreshold?: pulumi.Input<string>;
    /**
     * Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    ptkRekey?: pulumi.Input<string>;
    /**
     * PTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    ptkRekeyIntv?: pulumi.Input<number>;
    /**
     * Quality of service profile name.
     */
    qosProfile?: pulumi.Input<string>;
    /**
     * Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
     */
    quarantine?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
     */
    radio2gThreshold?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
     */
    radio5gThreshold?: pulumi.Input<string>;
    /**
     * Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    radioSensitivity?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
     */
    radiusMacAuth?: pulumi.Input<string>;
    /**
     * RADIUS-based MAC authentication server.
     */
    radiusMacAuthServer?: pulumi.Input<string>;
    /**
     * Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
     */
    radiusMacAuthUsergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapRadiusMacAuthUsergroup>[]>;
    /**
     * RADIUS server to be used to authenticate WiFi users.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    rates11a?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
     */
    rates11acSs12?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
     */
    rates11acSs34?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    rates11bg?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
     */
    rates11nSs12?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
     */
    rates11nSs34?: pulumi.Input<string>;
    /**
     * SAE-Groups. Valid values: `19`, `20`, `21`.
     */
    saeGroups?: pulumi.Input<string>;
    /**
     * WPA3 SAE password to be used to authenticate WiFi users.
     */
    saePassword?: pulumi.Input<string>;
    /**
     * VAP schedule name.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Secondary wireless access gateway profile name.
     */
    secondaryWagProfile?: pulumi.Input<string>;
    /**
     * Security mode for the wireless interface (default = wpa2-only-personal).
     */
    security?: pulumi.Input<string>;
    /**
     * Optional security exempt list for captive portal authentication.
     */
    securityExemptList?: pulumi.Input<string>;
    /**
     * Enable/disable obsolete security options. Valid values: `enable`, `disable`.
     */
    securityObsoleteOption?: pulumi.Input<string>;
    /**
     * Optional URL for redirecting users after they pass captive portal authentication.
     */
    securityRedirectUrl?: pulumi.Input<string>;
    /**
     * Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapSelectedUsergroup>[]>;
    /**
     * Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
     */
    splitTunneling?: pulumi.Input<string>;
    /**
     * IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
     */
    ssid?: pulumi.Input<string>;
    /**
     * Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
     */
    stickyClientRemove?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
     */
    stickyClientThreshold2g?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
     */
    stickyClientThreshold5g?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
     */
    targetWakeTime?: pulumi.Input<string>;
    /**
     * Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
     */
    tkipCounterMeasure?: pulumi.Input<string>;
    /**
     * The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
     */
    tunnelEchoInterval?: pulumi.Input<number>;
    /**
     * The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
     */
    tunnelFallbackInterval?: pulumi.Input<number>;
    /**
     * Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
     */
    usergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapUsergroup>[]>;
    /**
     * UTM profile name.
     */
    utmProfile?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
     */
    vlanAuto?: pulumi.Input<string>;
    /**
     * Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
     */
    vlanPooling?: pulumi.Input<string>;
    /**
     * VLAN pool. The structure of `vlanPool` block is documented below.
     */
    vlanPools?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapVlanPool>[]>;
    /**
     * Optional VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
    /**
     * Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
     */
    voiceEnterprise?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelessControllerVap resource.
 */
export interface WirelessControllerVapArgs {
    /**
     * access-control-list profile name.
     */
    accessControlList?: pulumi.Input<string>;
    /**
     * WiFi RADIUS accounting interim interval (60 - 86400 sec, default = 0).
     */
    acctInterimInterval?: pulumi.Input<number>;
    /**
     * Additional AKMs. Valid values: `akm6`.
     */
    additionalAkms?: pulumi.Input<string>;
    /**
     * Address group ID.
     */
    addressGroup?: pulumi.Input<string>;
    /**
     * Alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * Airtime weight in percentage (default = 20).
     */
    atfWeight?: pulumi.Input<number>;
    /**
     * Authentication protocol. Valid values: `psk`, `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Enable/disable broadcasting the SSID (default = enable). Valid values: `enable`, `disable`.
     */
    broadcastSsid?: pulumi.Input<string>;
    /**
     * Optional suppression of broadcast messages. For example, you can keep DHCP messages, ARP broadcasts, and so on off of the wireless network.
     */
    broadcastSuppression?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11ax partial BSS color (default = enable). Valid values: `enable`, `disable`.
     */
    bssColorPartial?: pulumi.Input<string>;
    /**
     * Local-bridging captive portal ac-name.
     */
    captivePortalAcName?: pulumi.Input<string>;
    /**
     * Hard timeout - AP will always clear the session after timeout regardless of traffic (0 - 864000 sec, default = 0).
     */
    captivePortalAuthTimeout?: pulumi.Input<number>;
    /**
     * Secret key to access the macauth RADIUS server.
     */
    captivePortalMacauthRadiusSecret?: pulumi.Input<string>;
    /**
     * Captive portal external RADIUS server domain name or IP address.
     */
    captivePortalMacauthRadiusServer?: pulumi.Input<string>;
    /**
     * Secret key to access the RADIUS server.
     */
    captivePortalRadiusSecret?: pulumi.Input<string>;
    /**
     * Captive portal RADIUS server domain name or IP address.
     */
    captivePortalRadiusServer?: pulumi.Input<string>;
    /**
     * Session timeout interval (0 - 864000 sec, default = 0).
     */
    captivePortalSessionTimeoutInterval?: pulumi.Input<number>;
    /**
     * DHCP lease time in seconds for NAT IP address.
     */
    dhcpLeaseTime?: pulumi.Input<number>;
    /**
     * Enable/disable insertion of DHCP option 43 (default = enable). Valid values: `enable`, `disable`.
     */
    dhcpOption43Insertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 circuit-id insert (default = disable).
     */
    dhcpOption82CircuitIdInsertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 insert (default = disable). Valid values: `enable`, `disable`.
     */
    dhcpOption82Insertion?: pulumi.Input<string>;
    /**
     * Enable/disable DHCP option 82 remote-id insert (default = disable). Valid values: `style-1`, `disable`.
     */
    dhcpOption82RemoteIdInsertion?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Enable/disable dynamic VLAN assignment. Valid values: `enable`, `disable`.
     */
    dynamicVlan?: pulumi.Input<string>;
    /**
     * Enable/disable EAP re-authentication for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    eapReauth?: pulumi.Input<string>;
    /**
     * EAP re-authentication interval (1800 - 864000 sec, default = 86400).
     */
    eapReauthIntv?: pulumi.Input<number>;
    /**
     * Enable/disable retransmission of EAPOL-Key frames (message 3/4 and group message 1/2) (default = enable). Valid values: `disable`, `enable`.
     */
    eapolKeyRetries?: pulumi.Input<string>;
    /**
     * Encryption protocol to use (only available when security is set to a WPA type). Valid values: `TKIP`, `AES`, `TKIP-AES`.
     */
    encrypt?: pulumi.Input<string>;
    /**
     * Enable/disable fast roaming or pre-authentication with external APs not managed by the FortiGate (default = disable). Valid values: `enable`, `disable`.
     */
    externalFastRoaming?: pulumi.Input<string>;
    /**
     * URL of external authentication logout server.
     */
    externalLogout?: pulumi.Input<string>;
    /**
     * URL of external authentication web server.
     */
    externalWeb?: pulumi.Input<string>;
    /**
     * URL query parameter detection (default = auto-detect). Valid values: `auto-detect`, `no-query-string`, `partial-query-string`.
     */
    externalWebFormat?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11r Fast BSS Transition (FT) (default = disable). Valid values: `disable`, `enable`.
     */
    fastBssTransition?: pulumi.Input<string>;
    /**
     * Enable/disable fast-roaming, or pre-authentication, where supported by clients (default = disable). Valid values: `enable`, `disable`.
     */
    fastRoaming?: pulumi.Input<string>;
    /**
     * Mobility domain identifier in FT (1 - 65535, default = 1000).
     */
    ftMobilityDomain?: pulumi.Input<number>;
    /**
     * Enable/disable FT over the Distribution System (DS). Valid values: `disable`, `enable`.
     */
    ftOverDs?: pulumi.Input<string>;
    /**
     * Lifetime of the PMK-R0 key in FT, 1-65535 minutes.
     */
    ftR0KeyLifetime?: pulumi.Input<number>;
    /**
     * Enable/disable GTK rekey for WPA security. Valid values: `enable`, `disable`.
     */
    gtkRekey?: pulumi.Input<string>;
    /**
     * GTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    gtkRekeyIntv?: pulumi.Input<number>;
    /**
     * Enable/disable 802.11ax high efficiency (default = enable). Valid values: `enable`, `disable`.
     */
    highEfficiency?: pulumi.Input<string>;
    /**
     * Hotspot 2.0 profile name.
     */
    hotspot20Profile?: pulumi.Input<string>;
    /**
     * Enable/disable IGMP snooping. Valid values: `enable`, `disable`.
     */
    igmpSnooping?: pulumi.Input<string>;
    /**
     * Enable/disable blocking communication between clients on the same SSID (called intra-SSID privacy) (default = disable). Valid values: `enable`, `disable`.
     */
    intraVapPrivacy?: pulumi.Input<string>;
    /**
     * IP address and subnet mask for the local standalone NAT subnet.
     */
    ip?: pulumi.Input<string>;
    /**
     * Optional rules of IPv6 packets. For example, you can keep RA, RS and so on off of the wireless network. Valid values: `drop-icmp6ra`, `drop-icmp6rs`, `drop-llmnr6`, `drop-icmp6mld2`, `drop-dhcp6s`, `drop-dhcp6c`, `ndp-proxy`, `drop-ns-dad`, `drop-ns-nondad`.
     */
    ipv6Rules?: pulumi.Input<string>;
    /**
     * WEP Key.
     */
    key?: pulumi.Input<string>;
    /**
     * WEP key index (1 - 4).
     */
    keyindex?: pulumi.Input<number>;
    /**
     * VAP low-density parity-check (LDPC) coding configuration. Valid values: `disable`, `rx`, `tx`, `rxtx`.
     */
    ldpc?: pulumi.Input<string>;
    /**
     * Enable/disable AP local authentication. Valid values: `enable`, `disable`.
     */
    localAuthentication?: pulumi.Input<string>;
    /**
     * Enable/disable bridging of wireless and Ethernet interfaces on the FortiAP (default = disable). Valid values: `enable`, `disable`.
     */
    localBridging?: pulumi.Input<string>;
    /**
     * Allow/deny traffic destined for a Class A, B, or C private IP address (default = allow). Valid values: `allow`, `deny`.
     */
    localLan?: pulumi.Input<string>;
    /**
     * Enable/disable AP local standalone (default = disable). Valid values: `enable`, `disable`.
     */
    localStandalone?: pulumi.Input<string>;
    /**
     * Enable/disable AP local standalone NAT mode. Valid values: `enable`, `disable`.
     */
    localStandaloneNat?: pulumi.Input<string>;
    /**
     * Enable/disable MAC authentication bypass. Valid values: `enable`, `disable`.
     */
    macAuthBypass?: pulumi.Input<string>;
    /**
     * Enable/disable MAC filtering to block wireless clients by mac address. Valid values: `enable`, `disable`.
     */
    macFilter?: pulumi.Input<string>;
    /**
     * Create a list of MAC addresses for MAC address filtering. The structure of `macFilterList` block is documented below.
     */
    macFilterLists?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapMacFilterList>[]>;
    /**
     * Allow or block clients with MAC addresses that are not in the filter list. Valid values: `allow`, `deny`.
     */
    macFilterPolicyOther?: pulumi.Input<string>;
    /**
     * Maximum number of clients that can connect simultaneously to the VAP (default = 0, meaning no limitation).
     */
    maxClients?: pulumi.Input<number>;
    /**
     * Maximum number of clients that can connect simultaneously to each radio (default = 0, meaning no limitation).
     */
    maxClientsAp?: pulumi.Input<number>;
    /**
     * Disable multicast enhancement when this many clients are receiving multicast traffic.
     */
    meDisableThresh?: pulumi.Input<number>;
    /**
     * Enable/disable using this VAP as a WiFi mesh backhaul (default = disable). This entry is only available when security is set to a WPA type or open. Valid values: `enable`, `disable`.
     */
    meshBackhaul?: pulumi.Input<string>;
    /**
     * Enable/disable multiple pre-shared keys (PSKs.) Valid values: `enable`, `disable`.
     */
    mpsk?: pulumi.Input<string>;
    /**
     * Number of pre-shared keys (PSKs) to allow if multiple pre-shared keys are enabled.
     */
    mpskConcurrentClients?: pulumi.Input<number>;
    /**
     * Pre-shared keys that can be used to connect to this virtual access point. The structure of `mpskKey` block is documented below.
     */
    mpskKeys?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapMpskKey>[]>;
    /**
     * MPSK profile name.
     */
    mpskProfile?: pulumi.Input<string>;
    /**
     * Enable/disable Multi-user MIMO (default = enable). Valid values: `enable`, `disable`.
     */
    muMimo?: pulumi.Input<string>;
    /**
     * Enable/disable converting multicast to unicast to improve performance (default = disable). Valid values: `enable`, `disable`.
     */
    multicastEnhance?: pulumi.Input<string>;
    /**
     * Multicast rate (0, 6000, 12000, or 24000 kbps, default = 0). Valid values: `0`, `6000`, `12000`, `24000`.
     */
    multicastRate?: pulumi.Input<string>;
    /**
     * Schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable/disable Opportunistic Key Caching (OKC) (default = enable). Valid values: `disable`, `enable`.
     */
    okc?: pulumi.Input<string>;
    /**
     * OWE-Groups. Valid values: `19`, `20`, `21`.
     */
    oweGroups?: pulumi.Input<string>;
    /**
     * Enable/disable OWE transition mode support. Valid values: `disable`, `enable`.
     */
    oweTransition?: pulumi.Input<string>;
    /**
     * OWE transition mode peer SSID.
     */
    oweTransitionSsid?: pulumi.Input<string>;
    /**
     * WPA Pre-shared key.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) support (default = disable). Valid values: `disable`, `enable`, `optional`.
     */
    pmf?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) comeback maximum timeout (1-20 sec).
     */
    pmfAssocComebackTimeout?: pulumi.Input<number>;
    /**
     * Protected Management Frames (PMF) SA query retry timeout interval (1 - 5 100s of msec).
     */
    pmfSaQueryRetryTimeout?: pulumi.Input<number>;
    /**
     * Enable/disable LAN port MAC authentication (default = disable). Valid values: `disable`, `radius`, `address-group`.
     */
    portMacauth?: pulumi.Input<string>;
    /**
     * LAN port MAC authentication re-authentication timeout value (default = 7200 sec).
     */
    portMacauthReauthTimeout?: pulumi.Input<number>;
    /**
     * LAN port MAC authentication idle timeout value (default = 600 sec).
     */
    portMacauthTimeout?: pulumi.Input<number>;
    /**
     * Replacement message group for this VAP (only available when security is set to a captive portal type).
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.WirelessControllerVapPortalMessageOverrides>;
    /**
     * Captive portal functionality. Configure how the captive portal authenticates users and whether it includes a disclaimer.
     */
    portalType?: pulumi.Input<string>;
    /**
     * Primary wireless access gateway profile name.
     */
    primaryWagProfile?: pulumi.Input<string>;
    /**
     * Enable/disable probe response suppression (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    probeRespSuppression?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to probe requests (-95 to -20, default = -80).
     */
    probeRespThreshold?: pulumi.Input<string>;
    /**
     * Enable/disable PTK rekey for WPA-Enterprise security. Valid values: `enable`, `disable`.
     */
    ptkRekey?: pulumi.Input<string>;
    /**
     * PTK rekey interval (1800 - 864000 sec, default = 86400).
     */
    ptkRekeyIntv?: pulumi.Input<number>;
    /**
     * Quality of service profile name.
     */
    qosProfile?: pulumi.Input<string>;
    /**
     * Enable/disable station quarantine (default = enable). Valid values: `enable`, `disable`.
     */
    quarantine?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 2.4G band (-95 to -20, default = -79).
     */
    radio2gThreshold?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the AP response to receive a packet in 5G band(-95 to -20, default = -76).
     */
    radio5gThreshold?: pulumi.Input<string>;
    /**
     * Enable/disable software radio sensitivity (to ignore weak signals) (default = disable). Valid values: `enable`, `disable`.
     */
    radioSensitivity?: pulumi.Input<string>;
    /**
     * Enable/disable RADIUS-based MAC authentication of clients (default = disable). Valid values: `enable`, `disable`.
     */
    radiusMacAuth?: pulumi.Input<string>;
    /**
     * RADIUS-based MAC authentication server.
     */
    radiusMacAuthServer?: pulumi.Input<string>;
    /**
     * Selective user groups that are permitted for RADIUS mac authentication. The structure of `radiusMacAuthUsergroups` block is documented below.
     */
    radiusMacAuthUsergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapRadiusMacAuthUsergroup>[]>;
    /**
     * RADIUS server to be used to authenticate WiFi users.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11a. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    rates11a?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11ac with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/1`, `mcs9/1`, `mcs10/1`, `mcs11/1`, `mcs0/2`, `mcs1/2`, `mcs2/2`, `mcs3/2`, `mcs4/2`, `mcs5/2`, `mcs6/2`, `mcs7/2`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`.
     */
    rates11acSs12?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11ac with 3 or 4 spatial streams. Valid values: `mcs0/3`, `mcs1/3`, `mcs2/3`, `mcs3/3`, `mcs4/3`, `mcs5/3`, `mcs6/3`, `mcs7/3`, `mcs8/3`, `mcs9/3`, `mcs10/3`, `mcs11/3`, `mcs0/4`, `mcs1/4`, `mcs2/4`, `mcs3/4`, `mcs4/4`, `mcs5/4`, `mcs6/4`, `mcs7/4`, `mcs8/4`, `mcs9/4`, `mcs10/4`, `mcs11/4`.
     */
    rates11acSs34?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11b/g. Valid values: `1`, `1-basic`, `2`, `2-basic`, `5.5`, `5.5-basic`, `11`, `11-basic`, `6`, `6-basic`, `9`, `9-basic`, `12`, `12-basic`, `18`, `18-basic`, `24`, `24-basic`, `36`, `36-basic`, `48`, `48-basic`, `54`, `54-basic`.
     */
    rates11bg?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11n with 1 or 2 spatial streams. Valid values: `mcs0/1`, `mcs1/1`, `mcs2/1`, `mcs3/1`, `mcs4/1`, `mcs5/1`, `mcs6/1`, `mcs7/1`, `mcs8/2`, `mcs9/2`, `mcs10/2`, `mcs11/2`, `mcs12/2`, `mcs13/2`, `mcs14/2`, `mcs15/2`.
     */
    rates11nSs12?: pulumi.Input<string>;
    /**
     * Allowed data rates for 802.11n with 3 or 4 spatial streams. Valid values: `mcs16/3`, `mcs17/3`, `mcs18/3`, `mcs19/3`, `mcs20/3`, `mcs21/3`, `mcs22/3`, `mcs23/3`, `mcs24/4`, `mcs25/4`, `mcs26/4`, `mcs27/4`, `mcs28/4`, `mcs29/4`, `mcs30/4`, `mcs31/4`.
     */
    rates11nSs34?: pulumi.Input<string>;
    /**
     * SAE-Groups. Valid values: `19`, `20`, `21`.
     */
    saeGroups?: pulumi.Input<string>;
    /**
     * WPA3 SAE password to be used to authenticate WiFi users.
     */
    saePassword?: pulumi.Input<string>;
    /**
     * VAP schedule name.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Secondary wireless access gateway profile name.
     */
    secondaryWagProfile?: pulumi.Input<string>;
    /**
     * Security mode for the wireless interface (default = wpa2-only-personal).
     */
    security?: pulumi.Input<string>;
    /**
     * Optional security exempt list for captive portal authentication.
     */
    securityExemptList?: pulumi.Input<string>;
    /**
     * Enable/disable obsolete security options. Valid values: `enable`, `disable`.
     */
    securityObsoleteOption?: pulumi.Input<string>;
    /**
     * Optional URL for redirecting users after they pass captive portal authentication.
     */
    securityRedirectUrl?: pulumi.Input<string>;
    /**
     * Selective user groups that are permitted to authenticate. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapSelectedUsergroup>[]>;
    /**
     * Enable/disable split tunneling (default = disable). Valid values: `enable`, `disable`.
     */
    splitTunneling?: pulumi.Input<string>;
    /**
     * IEEE 802.11 service set identifier (SSID) for the wireless interface. Users who wish to use the wireless network must configure their computers to access this SSID name.
     */
    ssid?: pulumi.Input<string>;
    /**
     * Enable/disable sticky client remove to maintain good signal level clients in SSID. (default = disable). Valid values: `enable`, `disable`.
     */
    stickyClientRemove?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 2G client to be serviced by the AP (-95 to -20, default = -79).
     */
    stickyClientThreshold2g?: pulumi.Input<string>;
    /**
     * Minimum signal level/threshold in dBm required for the 5G client to be serviced by the AP (-95 to -20, default = -76).
     */
    stickyClientThreshold5g?: pulumi.Input<string>;
    /**
     * Enable/disable 802.11ax target wake time (default = enable). Valid values: `enable`, `disable`.
     */
    targetWakeTime?: pulumi.Input<string>;
    /**
     * Enable/disable TKIP counter measure. Valid values: `enable`, `disable`.
     */
    tkipCounterMeasure?: pulumi.Input<string>;
    /**
     * The time interval to send echo to both primary and secondary tunnel peers (1 - 65535 sec, default = 300).
     */
    tunnelEchoInterval?: pulumi.Input<number>;
    /**
     * The time interval for secondary tunnel to fall back to primary tunnel (0 - 65535 sec, default = 7200).
     */
    tunnelFallbackInterval?: pulumi.Input<number>;
    /**
     * Firewall user group to be used to authenticate WiFi users. The structure of `usergroup` block is documented below.
     */
    usergroups?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapUsergroup>[]>;
    /**
     * UTM profile name.
     */
    utmProfile?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable automatic management of SSID VLAN interface. Valid values: `enable`, `disable`.
     */
    vlanAuto?: pulumi.Input<string>;
    /**
     * Enable/disable VLAN pooling, to allow grouping of multiple wireless controller VLANs into VLAN pools (default = disable). When set to wtp-group, VLAN pooling occurs with VLAN assignment by wtp-group. Valid values: `wtp-group`, `round-robin`, `hash`, `disable`.
     */
    vlanPooling?: pulumi.Input<string>;
    /**
     * VLAN pool. The structure of `vlanPool` block is documented below.
     */
    vlanPools?: pulumi.Input<pulumi.Input<inputs.WirelessControllerVapVlanPool>[]>;
    /**
     * Optional VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
    /**
     * Enable/disable 802.11k and 802.11v assisted Voice-Enterprise roaming (default = disable). Valid values: `disable`, `enable`.
     */
    voiceEnterprise?: pulumi.Input<string>;
}
