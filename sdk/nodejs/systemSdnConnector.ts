// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemSdnConnector extends pulumi.CustomResource {
    /**
     * Get an existing SystemSdnConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSdnConnectorState, opts?: pulumi.CustomResourceOptions): SystemSdnConnector {
        return new SystemSdnConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSdnConnector:SystemSdnConnector';

    /**
     * Returns true if the given object is an instance of SystemSdnConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSdnConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSdnConnector.__pulumiType;
    }

    public readonly accessKey!: pulumi.Output<string>;
    public readonly apiKey!: pulumi.Output<string | undefined>;
    public readonly azureRegion!: pulumi.Output<string>;
    public readonly clientId!: pulumi.Output<string>;
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly computeGeneration!: pulumi.Output<number>;
    public readonly domain!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly externalAccountLists!: pulumi.Output<outputs.SystemSdnConnectorExternalAccountList[] | undefined>;
    public readonly externalIps!: pulumi.Output<outputs.SystemSdnConnectorExternalIp[] | undefined>;
    public readonly forwardingRules!: pulumi.Output<outputs.SystemSdnConnectorForwardingRule[] | undefined>;
    public readonly gcpProject!: pulumi.Output<string>;
    public readonly gcpProjectLists!: pulumi.Output<outputs.SystemSdnConnectorGcpProjectList[] | undefined>;
    public readonly groupName!: pulumi.Output<string>;
    public readonly haStatus!: pulumi.Output<string>;
    public readonly ibmRegion!: pulumi.Output<string>;
    public readonly ibmRegionGen1!: pulumi.Output<string>;
    public readonly ibmRegionGen2!: pulumi.Output<string>;
    public readonly keyPasswd!: pulumi.Output<string | undefined>;
    public readonly loginEndpoint!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nics!: pulumi.Output<outputs.SystemSdnConnectorNic[] | undefined>;
    public readonly ociCert!: pulumi.Output<string>;
    public readonly ociFingerprint!: pulumi.Output<string>;
    public readonly ociRegion!: pulumi.Output<string>;
    public readonly ociRegionType!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string>;
    public readonly privateKey!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly resourceGroup!: pulumi.Output<string>;
    public readonly resourceUrl!: pulumi.Output<string>;
    public readonly routeTables!: pulumi.Output<outputs.SystemSdnConnectorRouteTable[] | undefined>;
    public readonly routes!: pulumi.Output<outputs.SystemSdnConnectorRoute[] | undefined>;
    public readonly secretKey!: pulumi.Output<string | undefined>;
    public readonly secretToken!: pulumi.Output<string>;
    public readonly server!: pulumi.Output<string>;
    public readonly serverLists!: pulumi.Output<outputs.SystemSdnConnectorServerList[] | undefined>;
    public readonly serverPort!: pulumi.Output<number>;
    public readonly serviceAccount!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly updateInterval!: pulumi.Output<number>;
    public readonly useMetadataIam!: pulumi.Output<string>;
    public readonly userId!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string>;
    public readonly vcenterPassword!: pulumi.Output<string | undefined>;
    public readonly vcenterServer!: pulumi.Output<string>;
    public readonly vcenterUsername!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    public readonly verifyCertificate!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a SystemSdnConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemSdnConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSdnConnectorArgs | SystemSdnConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSdnConnectorState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["azureRegion"] = state ? state.azureRegion : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeGeneration"] = state ? state.computeGeneration : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["externalAccountLists"] = state ? state.externalAccountLists : undefined;
            resourceInputs["externalIps"] = state ? state.externalIps : undefined;
            resourceInputs["forwardingRules"] = state ? state.forwardingRules : undefined;
            resourceInputs["gcpProject"] = state ? state.gcpProject : undefined;
            resourceInputs["gcpProjectLists"] = state ? state.gcpProjectLists : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["haStatus"] = state ? state.haStatus : undefined;
            resourceInputs["ibmRegion"] = state ? state.ibmRegion : undefined;
            resourceInputs["ibmRegionGen1"] = state ? state.ibmRegionGen1 : undefined;
            resourceInputs["ibmRegionGen2"] = state ? state.ibmRegionGen2 : undefined;
            resourceInputs["keyPasswd"] = state ? state.keyPasswd : undefined;
            resourceInputs["loginEndpoint"] = state ? state.loginEndpoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nics"] = state ? state.nics : undefined;
            resourceInputs["ociCert"] = state ? state.ociCert : undefined;
            resourceInputs["ociFingerprint"] = state ? state.ociFingerprint : undefined;
            resourceInputs["ociRegion"] = state ? state.ociRegion : undefined;
            resourceInputs["ociRegionType"] = state ? state.ociRegionType : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["resourceUrl"] = state ? state.resourceUrl : undefined;
            resourceInputs["routeTables"] = state ? state.routeTables : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["secretToken"] = state ? state.secretToken : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverLists"] = state ? state.serverLists : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateInterval"] = state ? state.updateInterval : undefined;
            resourceInputs["useMetadataIam"] = state ? state.useMetadataIam : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vcenterPassword"] = state ? state.vcenterPassword : undefined;
            resourceInputs["vcenterServer"] = state ? state.vcenterServer : undefined;
            resourceInputs["vcenterUsername"] = state ? state.vcenterUsername : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["verifyCertificate"] = state ? state.verifyCertificate : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as SystemSdnConnectorArgs | undefined;
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accessKey"] = args?.accessKey ? pulumi.secret(args.accessKey) : undefined;
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["azureRegion"] = args ? args.azureRegion : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["computeGeneration"] = args ? args.computeGeneration : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["externalAccountLists"] = args ? args.externalAccountLists : undefined;
            resourceInputs["externalIps"] = args ? args.externalIps : undefined;
            resourceInputs["forwardingRules"] = args ? args.forwardingRules : undefined;
            resourceInputs["gcpProject"] = args ? args.gcpProject : undefined;
            resourceInputs["gcpProjectLists"] = args ? args.gcpProjectLists : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["haStatus"] = args ? args.haStatus : undefined;
            resourceInputs["ibmRegion"] = args ? args.ibmRegion : undefined;
            resourceInputs["ibmRegionGen1"] = args ? args.ibmRegionGen1 : undefined;
            resourceInputs["ibmRegionGen2"] = args ? args.ibmRegionGen2 : undefined;
            resourceInputs["keyPasswd"] = args?.keyPasswd ? pulumi.secret(args.keyPasswd) : undefined;
            resourceInputs["loginEndpoint"] = args ? args.loginEndpoint : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nics"] = args ? args.nics : undefined;
            resourceInputs["ociCert"] = args ? args.ociCert : undefined;
            resourceInputs["ociFingerprint"] = args ? args.ociFingerprint : undefined;
            resourceInputs["ociRegion"] = args ? args.ociRegion : undefined;
            resourceInputs["ociRegionType"] = args ? args.ociRegionType : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["resourceUrl"] = args ? args.resourceUrl : undefined;
            resourceInputs["routeTables"] = args ? args.routeTables : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["secretKey"] = args?.secretKey ? pulumi.secret(args.secretKey) : undefined;
            resourceInputs["secretToken"] = args?.secretToken ? pulumi.secret(args.secretToken) : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverLists"] = args ? args.serverLists : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateInterval"] = args ? args.updateInterval : undefined;
            resourceInputs["useMetadataIam"] = args ? args.useMetadataIam : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vcenterPassword"] = args?.vcenterPassword ? pulumi.secret(args.vcenterPassword) : undefined;
            resourceInputs["vcenterServer"] = args ? args.vcenterServer : undefined;
            resourceInputs["vcenterUsername"] = args ? args.vcenterUsername : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["verifyCertificate"] = args ? args.verifyCertificate : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessKey", "apiKey", "clientSecret", "keyPasswd", "password", "privateKey", "secretKey", "secretToken", "vcenterPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemSdnConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSdnConnector resources.
 */
export interface SystemSdnConnectorState {
    accessKey?: pulumi.Input<string>;
    apiKey?: pulumi.Input<string>;
    azureRegion?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeGeneration?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    externalAccountLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorExternalAccountList>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorExternalIp>[]>;
    forwardingRules?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorForwardingRule>[]>;
    gcpProject?: pulumi.Input<string>;
    gcpProjectLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorGcpProjectList>[]>;
    groupName?: pulumi.Input<string>;
    haStatus?: pulumi.Input<string>;
    ibmRegion?: pulumi.Input<string>;
    ibmRegionGen1?: pulumi.Input<string>;
    ibmRegionGen2?: pulumi.Input<string>;
    keyPasswd?: pulumi.Input<string>;
    loginEndpoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorNic>[]>;
    ociCert?: pulumi.Input<string>;
    ociFingerprint?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionType?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceUrl?: pulumi.Input<string>;
    routeTables?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorRouteTable>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorRoute>[]>;
    secretKey?: pulumi.Input<string>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    serverLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorServerList>[]>;
    serverPort?: pulumi.Input<number>;
    serviceAccount?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<number>;
    useMetadataIam?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vcenterPassword?: pulumi.Input<string>;
    vcenterServer?: pulumi.Input<string>;
    vcenterUsername?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    verifyCertificate?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSdnConnector resource.
 */
export interface SystemSdnConnectorArgs {
    accessKey?: pulumi.Input<string>;
    apiKey?: pulumi.Input<string>;
    azureRegion?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeGeneration?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    externalAccountLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorExternalAccountList>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorExternalIp>[]>;
    forwardingRules?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorForwardingRule>[]>;
    gcpProject?: pulumi.Input<string>;
    gcpProjectLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorGcpProjectList>[]>;
    groupName?: pulumi.Input<string>;
    haStatus?: pulumi.Input<string>;
    ibmRegion?: pulumi.Input<string>;
    ibmRegionGen1?: pulumi.Input<string>;
    ibmRegionGen2?: pulumi.Input<string>;
    keyPasswd?: pulumi.Input<string>;
    loginEndpoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorNic>[]>;
    ociCert?: pulumi.Input<string>;
    ociFingerprint?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionType?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceUrl?: pulumi.Input<string>;
    routeTables?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorRouteTable>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorRoute>[]>;
    secretKey?: pulumi.Input<string>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    serverLists?: pulumi.Input<pulumi.Input<inputs.SystemSdnConnectorServerList>[]>;
    serverPort?: pulumi.Input<number>;
    serviceAccount?: pulumi.Input<string>;
    status: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    updateInterval?: pulumi.Input<number>;
    useMetadataIam?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vcenterPassword?: pulumi.Input<string>;
    vcenterServer?: pulumi.Input<string>;
    vcenterUsername?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    verifyCertificate?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
