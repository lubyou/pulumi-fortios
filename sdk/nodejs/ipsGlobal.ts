// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure IPS global parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.IpsGlobal("trname", {
 *     anomalyMode: "continuous",
 *     database: "regular",
 *     deepAppInspDbLimit: 0,
 *     deepAppInspTimeout: 0,
 *     engineCount: 0,
 *     excludeSignatures: "industrial",
 *     failOpen: "disable",
 *     intelligentMode: "enable",
 *     sessionLimitMode: "heuristic",
 *     socketSize: 0,
 *     syncSessionTtl: "enable",
 *     trafficSubmit: "disable",
 * });
 * ```
 *
 * ## Import
 *
 * Ips Global can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/ipsGlobal:IpsGlobal labelname IpsGlobal
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class IpsGlobal extends pulumi.CustomResource {
    /**
     * Get an existing IpsGlobal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsGlobalState, opts?: pulumi.CustomResourceOptions): IpsGlobal {
        return new IpsGlobal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/ipsGlobal:IpsGlobal';

    /**
     * Returns true if the given object is an instance of IpsGlobal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpsGlobal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpsGlobal.__pulumiType;
    }

    /**
     * Global blocking mode for rate-based anomalies. Valid values: `periodical`, `continuous`.
     */
    public readonly anomalyMode!: pulumi.Output<string>;
    /**
     * Regular or extended IPS database. Regular protects against the latest common and in-the-wild attacks. Extended includes protection from legacy attacks. Valid values: `regular`, `extended`.
     */
    public readonly database!: pulumi.Output<string>;
    /**
     * Limit on number of entries in deep application inspection database (1 - 2147483647, 0 = use recommended setting)
     */
    public readonly deepAppInspDbLimit!: pulumi.Output<number>;
    /**
     * Timeout for Deep application inspection (1 - 2147483647 sec., 0 = use recommended setting).
     */
    public readonly deepAppInspTimeout!: pulumi.Output<number>;
    /**
     * Number of IPS engines running. If set to the default value of 0, FortiOS sets the number to optimize performance depending on the number of CPU cores.
     */
    public readonly engineCount!: pulumi.Output<number>;
    /**
     * Excluded signatures. Valid values: `none`, `industrial`.
     */
    public readonly excludeSignatures!: pulumi.Output<string>;
    /**
     * Enable to allow traffic if the IPS process crashes. Default is disable and IPS traffic is blocked when the IPS process crashes. Valid values: `enable`, `disable`.
     */
    public readonly failOpen!: pulumi.Output<string>;
    /**
     * Enable/disable IPS adaptive scanning (intelligent mode). Intelligent mode optimizes the scanning method for the type of traffic. Valid values: `enable`, `disable`.
     */
    public readonly intelligentMode!: pulumi.Output<string>;
    /**
     * NGFW policy-mode app detection threshold.
     */
    public readonly ngfwMaxScanRange!: pulumi.Output<number>;
    /**
     * Packet/pcap log queue depth per IPS engine.
     */
    public readonly packetLogQueueDepth!: pulumi.Output<number>;
    /**
     * Method of counting concurrent sessions used by session limit anomalies. Choose between greater accuracy (accurate) or improved performance (heuristics). Valid values: `accurate`, `heuristic`.
     */
    public readonly sessionLimitMode!: pulumi.Output<string>;
    /**
     * Public IP addresses of your network that receive Skype sessions. Helps identify Skype sessions. Separate IP addresses with commas.
     */
    public readonly skypeClientPublicIpaddr!: pulumi.Output<string | undefined>;
    /**
     * IPS socket buffer size (0 - 256 MB). Default depends on available memory. Can be changed to tune performance.
     */
    public readonly socketSize!: pulumi.Output<number>;
    /**
     * Enable/disable use of kernel session TTL for IPS sessions. Valid values: `enable`, `disable`.
     */
    public readonly syncSessionTtl!: pulumi.Output<string>;
    /**
     * TLS active probe configuration. The structure of `tlsActiveProbe` block is documented below.
     */
    public readonly tlsActiveProbe!: pulumi.Output<outputs.IpsGlobalTlsActiveProbe | undefined>;
    /**
     * Enable/disable submitting attack data found by this FortiGate to FortiGuard. Valid values: `enable`, `disable`.
     */
    public readonly trafficSubmit!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a IpsGlobal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpsGlobalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsGlobalArgs | IpsGlobalState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsGlobalState | undefined;
            inputs["anomalyMode"] = state ? state.anomalyMode : undefined;
            inputs["database"] = state ? state.database : undefined;
            inputs["deepAppInspDbLimit"] = state ? state.deepAppInspDbLimit : undefined;
            inputs["deepAppInspTimeout"] = state ? state.deepAppInspTimeout : undefined;
            inputs["engineCount"] = state ? state.engineCount : undefined;
            inputs["excludeSignatures"] = state ? state.excludeSignatures : undefined;
            inputs["failOpen"] = state ? state.failOpen : undefined;
            inputs["intelligentMode"] = state ? state.intelligentMode : undefined;
            inputs["ngfwMaxScanRange"] = state ? state.ngfwMaxScanRange : undefined;
            inputs["packetLogQueueDepth"] = state ? state.packetLogQueueDepth : undefined;
            inputs["sessionLimitMode"] = state ? state.sessionLimitMode : undefined;
            inputs["skypeClientPublicIpaddr"] = state ? state.skypeClientPublicIpaddr : undefined;
            inputs["socketSize"] = state ? state.socketSize : undefined;
            inputs["syncSessionTtl"] = state ? state.syncSessionTtl : undefined;
            inputs["tlsActiveProbe"] = state ? state.tlsActiveProbe : undefined;
            inputs["trafficSubmit"] = state ? state.trafficSubmit : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as IpsGlobalArgs | undefined;
            inputs["anomalyMode"] = args ? args.anomalyMode : undefined;
            inputs["database"] = args ? args.database : undefined;
            inputs["deepAppInspDbLimit"] = args ? args.deepAppInspDbLimit : undefined;
            inputs["deepAppInspTimeout"] = args ? args.deepAppInspTimeout : undefined;
            inputs["engineCount"] = args ? args.engineCount : undefined;
            inputs["excludeSignatures"] = args ? args.excludeSignatures : undefined;
            inputs["failOpen"] = args ? args.failOpen : undefined;
            inputs["intelligentMode"] = args ? args.intelligentMode : undefined;
            inputs["ngfwMaxScanRange"] = args ? args.ngfwMaxScanRange : undefined;
            inputs["packetLogQueueDepth"] = args ? args.packetLogQueueDepth : undefined;
            inputs["sessionLimitMode"] = args ? args.sessionLimitMode : undefined;
            inputs["skypeClientPublicIpaddr"] = args ? args.skypeClientPublicIpaddr : undefined;
            inputs["socketSize"] = args ? args.socketSize : undefined;
            inputs["syncSessionTtl"] = args ? args.syncSessionTtl : undefined;
            inputs["tlsActiveProbe"] = args ? args.tlsActiveProbe : undefined;
            inputs["trafficSubmit"] = args ? args.trafficSubmit : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(IpsGlobal.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpsGlobal resources.
 */
export interface IpsGlobalState {
    /**
     * Global blocking mode for rate-based anomalies. Valid values: `periodical`, `continuous`.
     */
    anomalyMode?: pulumi.Input<string>;
    /**
     * Regular or extended IPS database. Regular protects against the latest common and in-the-wild attacks. Extended includes protection from legacy attacks. Valid values: `regular`, `extended`.
     */
    database?: pulumi.Input<string>;
    /**
     * Limit on number of entries in deep application inspection database (1 - 2147483647, 0 = use recommended setting)
     */
    deepAppInspDbLimit?: pulumi.Input<number>;
    /**
     * Timeout for Deep application inspection (1 - 2147483647 sec., 0 = use recommended setting).
     */
    deepAppInspTimeout?: pulumi.Input<number>;
    /**
     * Number of IPS engines running. If set to the default value of 0, FortiOS sets the number to optimize performance depending on the number of CPU cores.
     */
    engineCount?: pulumi.Input<number>;
    /**
     * Excluded signatures. Valid values: `none`, `industrial`.
     */
    excludeSignatures?: pulumi.Input<string>;
    /**
     * Enable to allow traffic if the IPS process crashes. Default is disable and IPS traffic is blocked when the IPS process crashes. Valid values: `enable`, `disable`.
     */
    failOpen?: pulumi.Input<string>;
    /**
     * Enable/disable IPS adaptive scanning (intelligent mode). Intelligent mode optimizes the scanning method for the type of traffic. Valid values: `enable`, `disable`.
     */
    intelligentMode?: pulumi.Input<string>;
    /**
     * NGFW policy-mode app detection threshold.
     */
    ngfwMaxScanRange?: pulumi.Input<number>;
    /**
     * Packet/pcap log queue depth per IPS engine.
     */
    packetLogQueueDepth?: pulumi.Input<number>;
    /**
     * Method of counting concurrent sessions used by session limit anomalies. Choose between greater accuracy (accurate) or improved performance (heuristics). Valid values: `accurate`, `heuristic`.
     */
    sessionLimitMode?: pulumi.Input<string>;
    /**
     * Public IP addresses of your network that receive Skype sessions. Helps identify Skype sessions. Separate IP addresses with commas.
     */
    skypeClientPublicIpaddr?: pulumi.Input<string>;
    /**
     * IPS socket buffer size (0 - 256 MB). Default depends on available memory. Can be changed to tune performance.
     */
    socketSize?: pulumi.Input<number>;
    /**
     * Enable/disable use of kernel session TTL for IPS sessions. Valid values: `enable`, `disable`.
     */
    syncSessionTtl?: pulumi.Input<string>;
    /**
     * TLS active probe configuration. The structure of `tlsActiveProbe` block is documented below.
     */
    tlsActiveProbe?: pulumi.Input<inputs.IpsGlobalTlsActiveProbe>;
    /**
     * Enable/disable submitting attack data found by this FortiGate to FortiGuard. Valid values: `enable`, `disable`.
     */
    trafficSubmit?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpsGlobal resource.
 */
export interface IpsGlobalArgs {
    /**
     * Global blocking mode for rate-based anomalies. Valid values: `periodical`, `continuous`.
     */
    anomalyMode?: pulumi.Input<string>;
    /**
     * Regular or extended IPS database. Regular protects against the latest common and in-the-wild attacks. Extended includes protection from legacy attacks. Valid values: `regular`, `extended`.
     */
    database?: pulumi.Input<string>;
    /**
     * Limit on number of entries in deep application inspection database (1 - 2147483647, 0 = use recommended setting)
     */
    deepAppInspDbLimit?: pulumi.Input<number>;
    /**
     * Timeout for Deep application inspection (1 - 2147483647 sec., 0 = use recommended setting).
     */
    deepAppInspTimeout?: pulumi.Input<number>;
    /**
     * Number of IPS engines running. If set to the default value of 0, FortiOS sets the number to optimize performance depending on the number of CPU cores.
     */
    engineCount?: pulumi.Input<number>;
    /**
     * Excluded signatures. Valid values: `none`, `industrial`.
     */
    excludeSignatures?: pulumi.Input<string>;
    /**
     * Enable to allow traffic if the IPS process crashes. Default is disable and IPS traffic is blocked when the IPS process crashes. Valid values: `enable`, `disable`.
     */
    failOpen?: pulumi.Input<string>;
    /**
     * Enable/disable IPS adaptive scanning (intelligent mode). Intelligent mode optimizes the scanning method for the type of traffic. Valid values: `enable`, `disable`.
     */
    intelligentMode?: pulumi.Input<string>;
    /**
     * NGFW policy-mode app detection threshold.
     */
    ngfwMaxScanRange?: pulumi.Input<number>;
    /**
     * Packet/pcap log queue depth per IPS engine.
     */
    packetLogQueueDepth?: pulumi.Input<number>;
    /**
     * Method of counting concurrent sessions used by session limit anomalies. Choose between greater accuracy (accurate) or improved performance (heuristics). Valid values: `accurate`, `heuristic`.
     */
    sessionLimitMode?: pulumi.Input<string>;
    /**
     * Public IP addresses of your network that receive Skype sessions. Helps identify Skype sessions. Separate IP addresses with commas.
     */
    skypeClientPublicIpaddr?: pulumi.Input<string>;
    /**
     * IPS socket buffer size (0 - 256 MB). Default depends on available memory. Can be changed to tune performance.
     */
    socketSize?: pulumi.Input<number>;
    /**
     * Enable/disable use of kernel session TTL for IPS sessions. Valid values: `enable`, `disable`.
     */
    syncSessionTtl?: pulumi.Input<string>;
    /**
     * TLS active probe configuration. The structure of `tlsActiveProbe` block is documented below.
     */
    tlsActiveProbe?: pulumi.Input<inputs.IpsGlobalTlsActiveProbe>;
    /**
     * Enable/disable submitting attack data found by this FortiGate to FortiGuard. Valid values: `enable`, `disable`.
     */
    trafficSubmit?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
