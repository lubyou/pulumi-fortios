// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM.
 *
 * ## Import
 *
 * System VdomRadiusServer can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/systemVdomRadiusServer:SystemVdomRadiusServer labelname {{name}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemVdomRadiusServer:SystemVdomRadiusServer labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemVdomRadiusServer extends pulumi.CustomResource {
    /**
     * Get an existing SystemVdomRadiusServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemVdomRadiusServerState, opts?: pulumi.CustomResourceOptions): SystemVdomRadiusServer {
        return new SystemVdomRadiusServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemVdomRadiusServer:SystemVdomRadiusServer';

    /**
     * Returns true if the given object is an instance of SystemVdomRadiusServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemVdomRadiusServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemVdomRadiusServer.__pulumiType;
    }

    /**
     * Name of the VDOM that you are adding the RADIUS server to.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
     */
    public readonly radiusServerVdom!: pulumi.Output<string>;
    /**
     * Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemVdomRadiusServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemVdomRadiusServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemVdomRadiusServerArgs | SystemVdomRadiusServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemVdomRadiusServerState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["radiusServerVdom"] = state ? state.radiusServerVdom : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemVdomRadiusServerArgs | undefined;
            if ((!args || args.radiusServerVdom === undefined) && !opts.urn) {
                throw new Error("Missing required property 'radiusServerVdom'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["radiusServerVdom"] = args ? args.radiusServerVdom : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemVdomRadiusServer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemVdomRadiusServer resources.
 */
export interface SystemVdomRadiusServerState {
    /**
     * Name of the VDOM that you are adding the RADIUS server to.
     */
    name?: pulumi.Input<string>;
    /**
     * Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
     */
    radiusServerVdom?: pulumi.Input<string>;
    /**
     * Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemVdomRadiusServer resource.
 */
export interface SystemVdomRadiusServerArgs {
    /**
     * Name of the VDOM that you are adding the RADIUS server to.
     */
    name?: pulumi.Input<string>;
    /**
     * Use this option to select another VDOM containing a VDOM RSSO RADIUS server to use for the current VDOM.
     */
    radiusServerVdom: pulumi.Input<string>;
    /**
     * Enable/disable the RSSO RADIUS server for this VDOM. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
