// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure FortiGate Session Life Support Protocol (FGSP) session synchronization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.SystemClusterSync("trname", {
 *     hbInterval: 3,
 *     hbLostThreshold: 3,
 *     peerip: "1.1.1.1",
 *     peervd: "root",
 *     slaveAddIkeRoutes: "enable",
 *     syncId: 1,
 * });
 * ```
 *
 * ## Import
 *
 * System ClusterSync can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemClusterSync:SystemClusterSync labelname {{sync_id}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemClusterSync extends pulumi.CustomResource {
    /**
     * Get an existing SystemClusterSync resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemClusterSyncState, opts?: pulumi.CustomResourceOptions): SystemClusterSync {
        return new SystemClusterSync(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemClusterSync:SystemClusterSync';

    /**
     * Returns true if the given object is an instance of SystemClusterSync.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemClusterSync {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemClusterSync.__pulumiType;
    }

    /**
     * List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
     */
    public readonly downIntfsBeforeSessSyncs!: pulumi.Output<outputs.SystemClusterSyncDownIntfsBeforeSessSync[] | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Heartbeat interval (1 - 10 sec).
     */
    public readonly hbInterval!: pulumi.Output<number>;
    /**
     * Lost heartbeat threshold (1 - 10).
     */
    public readonly hbLostThreshold!: pulumi.Output<number>;
    /**
     * Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
     */
    public readonly ipsecTunnelSync!: pulumi.Output<string>;
    /**
     * IP address of the interface on the peer unit that is used for the session synchronization link.
     */
    public readonly peerip!: pulumi.Output<string>;
    /**
     * VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
     */
    public readonly peervd!: pulumi.Output<string>;
    /**
     * Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
     */
    public readonly sessionSyncFilter!: pulumi.Output<outputs.SystemClusterSyncSessionSyncFilter | undefined>;
    /**
     * Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
     */
    public readonly slaveAddIkeRoutes!: pulumi.Output<string>;
    /**
     * Sync ID.
     */
    public readonly syncId!: pulumi.Output<number>;
    /**
     * Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
     */
    public readonly syncvds!: pulumi.Output<outputs.SystemClusterSyncSyncvd[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemClusterSync resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemClusterSyncArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemClusterSyncArgs | SystemClusterSyncState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemClusterSyncState | undefined;
            inputs["downIntfsBeforeSessSyncs"] = state ? state.downIntfsBeforeSessSyncs : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["hbInterval"] = state ? state.hbInterval : undefined;
            inputs["hbLostThreshold"] = state ? state.hbLostThreshold : undefined;
            inputs["ipsecTunnelSync"] = state ? state.ipsecTunnelSync : undefined;
            inputs["peerip"] = state ? state.peerip : undefined;
            inputs["peervd"] = state ? state.peervd : undefined;
            inputs["sessionSyncFilter"] = state ? state.sessionSyncFilter : undefined;
            inputs["slaveAddIkeRoutes"] = state ? state.slaveAddIkeRoutes : undefined;
            inputs["syncId"] = state ? state.syncId : undefined;
            inputs["syncvds"] = state ? state.syncvds : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemClusterSyncArgs | undefined;
            inputs["downIntfsBeforeSessSyncs"] = args ? args.downIntfsBeforeSessSyncs : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["hbInterval"] = args ? args.hbInterval : undefined;
            inputs["hbLostThreshold"] = args ? args.hbLostThreshold : undefined;
            inputs["ipsecTunnelSync"] = args ? args.ipsecTunnelSync : undefined;
            inputs["peerip"] = args ? args.peerip : undefined;
            inputs["peervd"] = args ? args.peervd : undefined;
            inputs["sessionSyncFilter"] = args ? args.sessionSyncFilter : undefined;
            inputs["slaveAddIkeRoutes"] = args ? args.slaveAddIkeRoutes : undefined;
            inputs["syncId"] = args ? args.syncId : undefined;
            inputs["syncvds"] = args ? args.syncvds : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemClusterSync.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemClusterSync resources.
 */
export interface SystemClusterSyncState {
    /**
     * List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
     */
    downIntfsBeforeSessSyncs?: pulumi.Input<pulumi.Input<inputs.SystemClusterSyncDownIntfsBeforeSessSync>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Heartbeat interval (1 - 10 sec).
     */
    hbInterval?: pulumi.Input<number>;
    /**
     * Lost heartbeat threshold (1 - 10).
     */
    hbLostThreshold?: pulumi.Input<number>;
    /**
     * Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
     */
    ipsecTunnelSync?: pulumi.Input<string>;
    /**
     * IP address of the interface on the peer unit that is used for the session synchronization link.
     */
    peerip?: pulumi.Input<string>;
    /**
     * VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
     */
    peervd?: pulumi.Input<string>;
    /**
     * Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
     */
    sessionSyncFilter?: pulumi.Input<inputs.SystemClusterSyncSessionSyncFilter>;
    /**
     * Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
     */
    slaveAddIkeRoutes?: pulumi.Input<string>;
    /**
     * Sync ID.
     */
    syncId?: pulumi.Input<number>;
    /**
     * Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
     */
    syncvds?: pulumi.Input<pulumi.Input<inputs.SystemClusterSyncSyncvd>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemClusterSync resource.
 */
export interface SystemClusterSyncArgs {
    /**
     * List of interfaces to be turned down before session synchronization is complete. The structure of `downIntfsBeforeSessSync` block is documented below.
     */
    downIntfsBeforeSessSyncs?: pulumi.Input<pulumi.Input<inputs.SystemClusterSyncDownIntfsBeforeSessSync>[]>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Heartbeat interval (1 - 10 sec).
     */
    hbInterval?: pulumi.Input<number>;
    /**
     * Lost heartbeat threshold (1 - 10).
     */
    hbLostThreshold?: pulumi.Input<number>;
    /**
     * Enable/disable IPsec tunnel synchronization. Valid values: `enable`, `disable`.
     */
    ipsecTunnelSync?: pulumi.Input<string>;
    /**
     * IP address of the interface on the peer unit that is used for the session synchronization link.
     */
    peerip?: pulumi.Input<string>;
    /**
     * VDOM that contains the session synchronization link interface on the peer unit. Usually both peers would have the same peervd.
     */
    peervd?: pulumi.Input<string>;
    /**
     * Add one or more filters if you only want to synchronize some sessions. Use the filter to configure the types of sessions to synchronize. The structure of `sessionSyncFilter` block is documented below.
     */
    sessionSyncFilter?: pulumi.Input<inputs.SystemClusterSyncSessionSyncFilter>;
    /**
     * Enable/disable IKE route announcement on the backup unit. Valid values: `enable`, `disable`.
     */
    slaveAddIkeRoutes?: pulumi.Input<string>;
    /**
     * Sync ID.
     */
    syncId?: pulumi.Input<number>;
    /**
     * Sessions from these VDOMs are synchronized using this session synchronization configuration. The structure of `syncvd` block is documented below.
     */
    syncvds?: pulumi.Input<pulumi.Input<inputs.SystemClusterSyncSyncvd>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
