// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure DNS servers for a non-management VDOM.
 *
 * ## Import
 *
 * System VdomDns can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemVdomDns:SystemVdomDns labelname SystemVdomDns
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemVdomDns extends pulumi.CustomResource {
    /**
     * Get an existing SystemVdomDns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemVdomDnsState, opts?: pulumi.CustomResourceOptions): SystemVdomDns {
        return new SystemVdomDns(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemVdomDns:SystemVdomDns';

    /**
     * Returns true if the given object is an instance of SystemVdomDns.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemVdomDns {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemVdomDns.__pulumiType;
    }

    /**
     * Enable/disable/enforce DNS over TLS. Valid values: `disable`, `enable`, `enforce`.
     */
    public readonly dnsOverTls!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Specify outgoing interface to reach server.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    /**
     * Primary IPv6 DNS server IP address for the VDOM.
     */
    public readonly ip6Primary!: pulumi.Output<string>;
    /**
     * Secondary IPv6 DNS server IP address for the VDOM.
     */
    public readonly ip6Secondary!: pulumi.Output<string>;
    /**
     * Primary DNS server IP address for the VDOM.
     */
    public readonly primary!: pulumi.Output<string>;
    /**
     * Secondary DNS server IP address for the VDOM.
     */
    public readonly secondary!: pulumi.Output<string>;
    /**
     * DNS server host name list. The structure of `serverHostname` block is documented below.
     */
    public readonly serverHostnames!: pulumi.Output<outputs.SystemVdomDnsServerHostname[] | undefined>;
    /**
     * Source IP for communications with the DNS server.
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * Name of local certificate for SSL connections.
     */
    public readonly sslCertificate!: pulumi.Output<string>;
    /**
     * Enable/disable configuring DNS servers for the current VDOM. Valid values: `enable`, `disable`.
     */
    public readonly vdomDns!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemVdomDns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemVdomDnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemVdomDnsArgs | SystemVdomDnsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemVdomDnsState | undefined;
            inputs["dnsOverTls"] = state ? state.dnsOverTls : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["interface"] = state ? state.interface : undefined;
            inputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            inputs["ip6Primary"] = state ? state.ip6Primary : undefined;
            inputs["ip6Secondary"] = state ? state.ip6Secondary : undefined;
            inputs["primary"] = state ? state.primary : undefined;
            inputs["secondary"] = state ? state.secondary : undefined;
            inputs["serverHostnames"] = state ? state.serverHostnames : undefined;
            inputs["sourceIp"] = state ? state.sourceIp : undefined;
            inputs["sslCertificate"] = state ? state.sslCertificate : undefined;
            inputs["vdomDns"] = state ? state.vdomDns : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemVdomDnsArgs | undefined;
            inputs["dnsOverTls"] = args ? args.dnsOverTls : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["interface"] = args ? args.interface : undefined;
            inputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            inputs["ip6Primary"] = args ? args.ip6Primary : undefined;
            inputs["ip6Secondary"] = args ? args.ip6Secondary : undefined;
            inputs["primary"] = args ? args.primary : undefined;
            inputs["secondary"] = args ? args.secondary : undefined;
            inputs["serverHostnames"] = args ? args.serverHostnames : undefined;
            inputs["sourceIp"] = args ? args.sourceIp : undefined;
            inputs["sslCertificate"] = args ? args.sslCertificate : undefined;
            inputs["vdomDns"] = args ? args.vdomDns : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemVdomDns.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemVdomDns resources.
 */
export interface SystemVdomDnsState {
    /**
     * Enable/disable/enforce DNS over TLS. Valid values: `disable`, `enable`, `enforce`.
     */
    dnsOverTls?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * Primary IPv6 DNS server IP address for the VDOM.
     */
    ip6Primary?: pulumi.Input<string>;
    /**
     * Secondary IPv6 DNS server IP address for the VDOM.
     */
    ip6Secondary?: pulumi.Input<string>;
    /**
     * Primary DNS server IP address for the VDOM.
     */
    primary?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP address for the VDOM.
     */
    secondary?: pulumi.Input<string>;
    /**
     * DNS server host name list. The structure of `serverHostname` block is documented below.
     */
    serverHostnames?: pulumi.Input<pulumi.Input<inputs.SystemVdomDnsServerHostname>[]>;
    /**
     * Source IP for communications with the DNS server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Name of local certificate for SSL connections.
     */
    sslCertificate?: pulumi.Input<string>;
    /**
     * Enable/disable configuring DNS servers for the current VDOM. Valid values: `enable`, `disable`.
     */
    vdomDns?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemVdomDns resource.
 */
export interface SystemVdomDnsArgs {
    /**
     * Enable/disable/enforce DNS over TLS. Valid values: `disable`, `enable`, `enforce`.
     */
    dnsOverTls?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Specify outgoing interface to reach server.
     */
    interface?: pulumi.Input<string>;
    /**
     * Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
     */
    interfaceSelectMethod?: pulumi.Input<string>;
    /**
     * Primary IPv6 DNS server IP address for the VDOM.
     */
    ip6Primary?: pulumi.Input<string>;
    /**
     * Secondary IPv6 DNS server IP address for the VDOM.
     */
    ip6Secondary?: pulumi.Input<string>;
    /**
     * Primary DNS server IP address for the VDOM.
     */
    primary?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP address for the VDOM.
     */
    secondary?: pulumi.Input<string>;
    /**
     * DNS server host name list. The structure of `serverHostname` block is documented below.
     */
    serverHostnames?: pulumi.Input<pulumi.Input<inputs.SystemVdomDnsServerHostname>[]>;
    /**
     * Source IP for communications with the DNS server.
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Name of local certificate for SSL connections.
     */
    sslCertificate?: pulumi.Input<string>;
    /**
     * Enable/disable configuring DNS servers for the current VDOM. Valid values: `enable`, `disable`.
     */
    vdomDns?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
