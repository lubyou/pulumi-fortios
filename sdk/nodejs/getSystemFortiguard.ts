// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemFortiguard(args?: GetSystemFortiguardArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemFortiguardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getSystemFortiguard:GetSystemFortiguard", {
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking GetSystemFortiguard.
 */
export interface GetSystemFortiguardArgs {
    vdomparam?: string;
}

/**
 * A collection of values returned by GetSystemFortiguard.
 */
export interface GetSystemFortiguardResult {
    readonly antispamCache: string;
    readonly antispamCacheMpercent: number;
    readonly antispamCacheMpermille: number;
    readonly antispamCacheTtl: number;
    readonly antispamExpiration: number;
    readonly antispamForceOff: string;
    readonly antispamLicense: number;
    readonly antispamTimeout: number;
    readonly anycastSdnsServerIp: string;
    readonly anycastSdnsServerPort: number;
    readonly autoFirmwareUpgrade: string;
    readonly autoFirmwareUpgradeDay: string;
    readonly autoFirmwareUpgradeDelay: number;
    readonly autoFirmwareUpgradeEndHour: number;
    readonly autoFirmwareUpgradeStartHour: number;
    readonly autoJoinForticloud: string;
    readonly ddnsServerIp: string;
    readonly ddnsServerIp6: string;
    readonly ddnsServerPort: number;
    readonly fdsLicenseExpiringDays: number;
    readonly fortiguardAnycast: string;
    readonly fortiguardAnycastSource: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interface: string;
    readonly interfaceSelectMethod: string;
    readonly loadBalanceServers: number;
    readonly outbreakPreventionCache: string;
    readonly outbreakPreventionCacheMpercent: number;
    readonly outbreakPreventionCacheMpermille: number;
    readonly outbreakPreventionCacheTtl: number;
    readonly outbreakPreventionExpiration: number;
    readonly outbreakPreventionForceOff: string;
    readonly outbreakPreventionLicense: number;
    readonly outbreakPreventionTimeout: number;
    readonly persistentConnection: string;
    readonly port: string;
    readonly protocol: string;
    readonly proxyPassword: string;
    readonly proxyServerIp: string;
    readonly proxyServerPort: number;
    readonly proxyUsername: string;
    readonly sandboxInlineScan: string;
    readonly sandboxRegion: string;
    readonly sdnsOptions: string;
    readonly sdnsServerIp: string;
    readonly sdnsServerPort: number;
    readonly serviceAccountId: string;
    readonly sourceIp: string;
    readonly sourceIp6: string;
    readonly updateBuildProxy: string;
    readonly updateDldb: string;
    readonly updateExtdb: string;
    readonly updateFfdb: string;
    readonly updateServerLocation: string;
    readonly updateUwdb: string;
    readonly vdom: string;
    readonly vdomparam?: string;
    readonly videofilterExpiration: number;
    readonly videofilterLicense: number;
    readonly webfilterCache: string;
    readonly webfilterCacheTtl: number;
    readonly webfilterExpiration: number;
    readonly webfilterForceOff: string;
    readonly webfilterLicense: number;
    readonly webfilterTimeout: number;
}
export function getSystemFortiguardOutput(args?: GetSystemFortiguardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemFortiguardResult> {
    return pulumi.output(args).apply((a: any) => getSystemFortiguard(a, opts))
}

/**
 * A collection of arguments for invoking GetSystemFortiguard.
 */
export interface GetSystemFortiguardOutputArgs {
    vdomparam?: pulumi.Input<string>;
}
