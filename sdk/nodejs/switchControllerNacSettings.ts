// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchControllerNacSettings extends pulumi.CustomResource {
    /**
     * Get an existing SwitchControllerNacSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchControllerNacSettingsState, opts?: pulumi.CustomResourceOptions): SwitchControllerNacSettings {
        return new SwitchControllerNacSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchControllerNacSettings:SwitchControllerNacSettings';

    /**
     * Returns true if the given object is an instance of SwitchControllerNacSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchControllerNacSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchControllerNacSettings.__pulumiType;
    }

    public readonly autoAuth!: pulumi.Output<string>;
    public readonly bounceNacPort!: pulumi.Output<string>;
    public readonly inactiveTimer!: pulumi.Output<number>;
    public readonly linkDownFlush!: pulumi.Output<string>;
    public readonly mode!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly onboardingVlan!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchControllerNacSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchControllerNacSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchControllerNacSettingsArgs | SwitchControllerNacSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchControllerNacSettingsState | undefined;
            resourceInputs["autoAuth"] = state ? state.autoAuth : undefined;
            resourceInputs["bounceNacPort"] = state ? state.bounceNacPort : undefined;
            resourceInputs["inactiveTimer"] = state ? state.inactiveTimer : undefined;
            resourceInputs["linkDownFlush"] = state ? state.linkDownFlush : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onboardingVlan"] = state ? state.onboardingVlan : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SwitchControllerNacSettingsArgs | undefined;
            resourceInputs["autoAuth"] = args ? args.autoAuth : undefined;
            resourceInputs["bounceNacPort"] = args ? args.bounceNacPort : undefined;
            resourceInputs["inactiveTimer"] = args ? args.inactiveTimer : undefined;
            resourceInputs["linkDownFlush"] = args ? args.linkDownFlush : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onboardingVlan"] = args ? args.onboardingVlan : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchControllerNacSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchControllerNacSettings resources.
 */
export interface SwitchControllerNacSettingsState {
    autoAuth?: pulumi.Input<string>;
    bounceNacPort?: pulumi.Input<string>;
    inactiveTimer?: pulumi.Input<number>;
    linkDownFlush?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onboardingVlan?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchControllerNacSettings resource.
 */
export interface SwitchControllerNacSettingsArgs {
    autoAuth?: pulumi.Input<string>;
    bounceNacPort?: pulumi.Input<string>;
    inactiveTimer?: pulumi.Input<number>;
    linkDownFlush?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onboardingVlan?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
