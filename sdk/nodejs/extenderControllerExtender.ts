// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Extender controller configuration.
 *
 * > The resource applies to FortiOS Version < 6.4.2. For FortiOS Version >= 6.4.2, see `fortios.ExtenderControllerExtender1`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.ExtenderControllerExtender("trname", {
 *     admin: "disable",
 *     billingStartDay: 1,
 *     connStatus: 0,
 *     dialMode: "always-connect",
 *     dialStatus: 0,
 *     extName: "332",
 *     fosid: "1",
 *     initiatedUpdate: "disable",
 *     mode: "standalone",
 *     modemType: "gsm/lte",
 *     multiMode: "auto",
 *     pppAuthProtocol: "auto",
 *     pppEchoRequest: "disable",
 *     quotaLimitMb: 0,
 *     redial: "none",
 *     roaming: "disable",
 *     role: "primary",
 *     vdom: 0,
 *     wimaxAuthProtocol: "tls",
 * });
 * ```
 *
 * ## Import
 *
 * ExtenderController Extender can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/extenderControllerExtender:ExtenderControllerExtender labelname {{fosid}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class ExtenderControllerExtender extends pulumi.CustomResource {
    /**
     * Get an existing ExtenderControllerExtender resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExtenderControllerExtenderState, opts?: pulumi.CustomResourceOptions): ExtenderControllerExtender {
        return new ExtenderControllerExtender(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/extenderControllerExtender:ExtenderControllerExtender';

    /**
     * Returns true if the given object is an instance of ExtenderControllerExtender.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExtenderControllerExtender {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExtenderControllerExtender.__pulumiType;
    }

    /**
     * AAA shared secret.
     */
    public readonly aaaSharedSecret!: pulumi.Output<string | undefined>;
    /**
     * Access point name(APN).
     */
    public readonly accessPointName!: pulumi.Output<string>;
    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
     */
    public readonly admin!: pulumi.Output<string>;
    /**
     * Initialization AT commands specific to the MODEM.
     */
    public readonly atDialScript!: pulumi.Output<string>;
    /**
     * Billing start day.
     */
    public readonly billingStartDay!: pulumi.Output<number>;
    /**
     * CDMA AAA SPI.
     */
    public readonly cdmaAaaSpi!: pulumi.Output<string>;
    /**
     * CDMA HA SPI.
     */
    public readonly cdmaHaSpi!: pulumi.Output<string>;
    /**
     * NAI for CDMA MODEMS.
     */
    public readonly cdmaNai!: pulumi.Output<string>;
    /**
     * Connection status.
     */
    public readonly connStatus!: pulumi.Output<number>;
    /**
     * Description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
     */
    public readonly dialMode!: pulumi.Output<string>;
    /**
     * Dial status.
     */
    public readonly dialStatus!: pulumi.Output<number>;
    /**
     * FortiExtender name.
     */
    public readonly extName!: pulumi.Output<string>;
    /**
     * FortiExtender serial number.
     */
    public readonly fosid!: pulumi.Output<string>;
    /**
     * HA shared secret.
     */
    public readonly haSharedSecret!: pulumi.Output<string | undefined>;
    /**
     * FortiExtender interface name.
     */
    public readonly ifname!: pulumi.Output<string>;
    /**
     * Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
     */
    public readonly initiatedUpdate!: pulumi.Output<string>;
    /**
     * FortiExtender mode. Valid values: `standalone`, `redundant`.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * MODEM password.
     */
    public readonly modemPasswd!: pulumi.Output<string | undefined>;
    /**
     * MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
     */
    public readonly modemType!: pulumi.Output<string>;
    /**
     * MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
     */
    public readonly multiMode!: pulumi.Output<string>;
    /**
     * PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
     */
    public readonly pppAuthProtocol!: pulumi.Output<string>;
    /**
     * Enable/disable PPP echo request. Valid values: `enable`, `disable`.
     */
    public readonly pppEchoRequest!: pulumi.Output<string>;
    /**
     * PPP password.
     */
    public readonly pppPassword!: pulumi.Output<string | undefined>;
    /**
     * PPP username.
     */
    public readonly pppUsername!: pulumi.Output<string>;
    /**
     * Primary HA.
     */
    public readonly primaryHa!: pulumi.Output<string>;
    /**
     * Monthly quota limit (MB).
     */
    public readonly quotaLimitMb!: pulumi.Output<number>;
    /**
     * Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
     */
    public readonly redial!: pulumi.Output<string>;
    /**
     * Redundant interface.
     */
    public readonly redundantIntf!: pulumi.Output<string>;
    /**
     * Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
     */
    public readonly roaming!: pulumi.Output<string>;
    /**
     * FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * Secondary HA.
     */
    public readonly secondaryHa!: pulumi.Output<string>;
    /**
     * SIM PIN.
     */
    public readonly simPin!: pulumi.Output<string | undefined>;
    /**
     * VDOM
     */
    public readonly vdom!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
     */
    public readonly wimaxAuthProtocol!: pulumi.Output<string>;
    /**
     * WiMax carrier.
     */
    public readonly wimaxCarrier!: pulumi.Output<string>;
    /**
     * WiMax realm.
     */
    public readonly wimaxRealm!: pulumi.Output<string>;

    /**
     * Create a ExtenderControllerExtender resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExtenderControllerExtenderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExtenderControllerExtenderArgs | ExtenderControllerExtenderState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExtenderControllerExtenderState | undefined;
            inputs["aaaSharedSecret"] = state ? state.aaaSharedSecret : undefined;
            inputs["accessPointName"] = state ? state.accessPointName : undefined;
            inputs["admin"] = state ? state.admin : undefined;
            inputs["atDialScript"] = state ? state.atDialScript : undefined;
            inputs["billingStartDay"] = state ? state.billingStartDay : undefined;
            inputs["cdmaAaaSpi"] = state ? state.cdmaAaaSpi : undefined;
            inputs["cdmaHaSpi"] = state ? state.cdmaHaSpi : undefined;
            inputs["cdmaNai"] = state ? state.cdmaNai : undefined;
            inputs["connStatus"] = state ? state.connStatus : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["dialMode"] = state ? state.dialMode : undefined;
            inputs["dialStatus"] = state ? state.dialStatus : undefined;
            inputs["extName"] = state ? state.extName : undefined;
            inputs["fosid"] = state ? state.fosid : undefined;
            inputs["haSharedSecret"] = state ? state.haSharedSecret : undefined;
            inputs["ifname"] = state ? state.ifname : undefined;
            inputs["initiatedUpdate"] = state ? state.initiatedUpdate : undefined;
            inputs["mode"] = state ? state.mode : undefined;
            inputs["modemPasswd"] = state ? state.modemPasswd : undefined;
            inputs["modemType"] = state ? state.modemType : undefined;
            inputs["multiMode"] = state ? state.multiMode : undefined;
            inputs["pppAuthProtocol"] = state ? state.pppAuthProtocol : undefined;
            inputs["pppEchoRequest"] = state ? state.pppEchoRequest : undefined;
            inputs["pppPassword"] = state ? state.pppPassword : undefined;
            inputs["pppUsername"] = state ? state.pppUsername : undefined;
            inputs["primaryHa"] = state ? state.primaryHa : undefined;
            inputs["quotaLimitMb"] = state ? state.quotaLimitMb : undefined;
            inputs["redial"] = state ? state.redial : undefined;
            inputs["redundantIntf"] = state ? state.redundantIntf : undefined;
            inputs["roaming"] = state ? state.roaming : undefined;
            inputs["role"] = state ? state.role : undefined;
            inputs["secondaryHa"] = state ? state.secondaryHa : undefined;
            inputs["simPin"] = state ? state.simPin : undefined;
            inputs["vdom"] = state ? state.vdom : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["wimaxAuthProtocol"] = state ? state.wimaxAuthProtocol : undefined;
            inputs["wimaxCarrier"] = state ? state.wimaxCarrier : undefined;
            inputs["wimaxRealm"] = state ? state.wimaxRealm : undefined;
        } else {
            const args = argsOrState as ExtenderControllerExtenderArgs | undefined;
            if ((!args || args.admin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'admin'");
            }
            if ((!args || args.fosid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fosid'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            inputs["aaaSharedSecret"] = args ? args.aaaSharedSecret : undefined;
            inputs["accessPointName"] = args ? args.accessPointName : undefined;
            inputs["admin"] = args ? args.admin : undefined;
            inputs["atDialScript"] = args ? args.atDialScript : undefined;
            inputs["billingStartDay"] = args ? args.billingStartDay : undefined;
            inputs["cdmaAaaSpi"] = args ? args.cdmaAaaSpi : undefined;
            inputs["cdmaHaSpi"] = args ? args.cdmaHaSpi : undefined;
            inputs["cdmaNai"] = args ? args.cdmaNai : undefined;
            inputs["connStatus"] = args ? args.connStatus : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["dialMode"] = args ? args.dialMode : undefined;
            inputs["dialStatus"] = args ? args.dialStatus : undefined;
            inputs["extName"] = args ? args.extName : undefined;
            inputs["fosid"] = args ? args.fosid : undefined;
            inputs["haSharedSecret"] = args ? args.haSharedSecret : undefined;
            inputs["ifname"] = args ? args.ifname : undefined;
            inputs["initiatedUpdate"] = args ? args.initiatedUpdate : undefined;
            inputs["mode"] = args ? args.mode : undefined;
            inputs["modemPasswd"] = args ? args.modemPasswd : undefined;
            inputs["modemType"] = args ? args.modemType : undefined;
            inputs["multiMode"] = args ? args.multiMode : undefined;
            inputs["pppAuthProtocol"] = args ? args.pppAuthProtocol : undefined;
            inputs["pppEchoRequest"] = args ? args.pppEchoRequest : undefined;
            inputs["pppPassword"] = args ? args.pppPassword : undefined;
            inputs["pppUsername"] = args ? args.pppUsername : undefined;
            inputs["primaryHa"] = args ? args.primaryHa : undefined;
            inputs["quotaLimitMb"] = args ? args.quotaLimitMb : undefined;
            inputs["redial"] = args ? args.redial : undefined;
            inputs["redundantIntf"] = args ? args.redundantIntf : undefined;
            inputs["roaming"] = args ? args.roaming : undefined;
            inputs["role"] = args ? args.role : undefined;
            inputs["secondaryHa"] = args ? args.secondaryHa : undefined;
            inputs["simPin"] = args ? args.simPin : undefined;
            inputs["vdom"] = args ? args.vdom : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["wimaxAuthProtocol"] = args ? args.wimaxAuthProtocol : undefined;
            inputs["wimaxCarrier"] = args ? args.wimaxCarrier : undefined;
            inputs["wimaxRealm"] = args ? args.wimaxRealm : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ExtenderControllerExtender.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExtenderControllerExtender resources.
 */
export interface ExtenderControllerExtenderState {
    /**
     * AAA shared secret.
     */
    aaaSharedSecret?: pulumi.Input<string>;
    /**
     * Access point name(APN).
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
     */
    admin?: pulumi.Input<string>;
    /**
     * Initialization AT commands specific to the MODEM.
     */
    atDialScript?: pulumi.Input<string>;
    /**
     * Billing start day.
     */
    billingStartDay?: pulumi.Input<number>;
    /**
     * CDMA AAA SPI.
     */
    cdmaAaaSpi?: pulumi.Input<string>;
    /**
     * CDMA HA SPI.
     */
    cdmaHaSpi?: pulumi.Input<string>;
    /**
     * NAI for CDMA MODEMS.
     */
    cdmaNai?: pulumi.Input<string>;
    /**
     * Connection status.
     */
    connStatus?: pulumi.Input<number>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
     */
    dialMode?: pulumi.Input<string>;
    /**
     * Dial status.
     */
    dialStatus?: pulumi.Input<number>;
    /**
     * FortiExtender name.
     */
    extName?: pulumi.Input<string>;
    /**
     * FortiExtender serial number.
     */
    fosid?: pulumi.Input<string>;
    /**
     * HA shared secret.
     */
    haSharedSecret?: pulumi.Input<string>;
    /**
     * FortiExtender interface name.
     */
    ifname?: pulumi.Input<string>;
    /**
     * Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
     */
    initiatedUpdate?: pulumi.Input<string>;
    /**
     * FortiExtender mode. Valid values: `standalone`, `redundant`.
     */
    mode?: pulumi.Input<string>;
    /**
     * MODEM password.
     */
    modemPasswd?: pulumi.Input<string>;
    /**
     * MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
     */
    modemType?: pulumi.Input<string>;
    /**
     * MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
     */
    multiMode?: pulumi.Input<string>;
    /**
     * PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
     */
    pppAuthProtocol?: pulumi.Input<string>;
    /**
     * Enable/disable PPP echo request. Valid values: `enable`, `disable`.
     */
    pppEchoRequest?: pulumi.Input<string>;
    /**
     * PPP password.
     */
    pppPassword?: pulumi.Input<string>;
    /**
     * PPP username.
     */
    pppUsername?: pulumi.Input<string>;
    /**
     * Primary HA.
     */
    primaryHa?: pulumi.Input<string>;
    /**
     * Monthly quota limit (MB).
     */
    quotaLimitMb?: pulumi.Input<number>;
    /**
     * Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
     */
    redial?: pulumi.Input<string>;
    /**
     * Redundant interface.
     */
    redundantIntf?: pulumi.Input<string>;
    /**
     * Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
     */
    roaming?: pulumi.Input<string>;
    /**
     * FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
     */
    role?: pulumi.Input<string>;
    /**
     * Secondary HA.
     */
    secondaryHa?: pulumi.Input<string>;
    /**
     * SIM PIN.
     */
    simPin?: pulumi.Input<string>;
    /**
     * VDOM
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
     */
    wimaxAuthProtocol?: pulumi.Input<string>;
    /**
     * WiMax carrier.
     */
    wimaxCarrier?: pulumi.Input<string>;
    /**
     * WiMax realm.
     */
    wimaxRealm?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExtenderControllerExtender resource.
 */
export interface ExtenderControllerExtenderArgs {
    /**
     * AAA shared secret.
     */
    aaaSharedSecret?: pulumi.Input<string>;
    /**
     * Access point name(APN).
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * FortiExtender Administration (enable or disable). Valid values: `disable`, `discovered`, `enable`.
     */
    admin: pulumi.Input<string>;
    /**
     * Initialization AT commands specific to the MODEM.
     */
    atDialScript?: pulumi.Input<string>;
    /**
     * Billing start day.
     */
    billingStartDay?: pulumi.Input<number>;
    /**
     * CDMA AAA SPI.
     */
    cdmaAaaSpi?: pulumi.Input<string>;
    /**
     * CDMA HA SPI.
     */
    cdmaHaSpi?: pulumi.Input<string>;
    /**
     * NAI for CDMA MODEMS.
     */
    cdmaNai?: pulumi.Input<string>;
    /**
     * Connection status.
     */
    connStatus?: pulumi.Input<number>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * Dial mode (dial-on-demand or always-connect). Valid values: `dial-on-demand`, `always-connect`.
     */
    dialMode?: pulumi.Input<string>;
    /**
     * Dial status.
     */
    dialStatus?: pulumi.Input<number>;
    /**
     * FortiExtender name.
     */
    extName?: pulumi.Input<string>;
    /**
     * FortiExtender serial number.
     */
    fosid: pulumi.Input<string>;
    /**
     * HA shared secret.
     */
    haSharedSecret?: pulumi.Input<string>;
    /**
     * FortiExtender interface name.
     */
    ifname?: pulumi.Input<string>;
    /**
     * Allow/disallow network initiated updates to the MODEM. Valid values: `enable`, `disable`.
     */
    initiatedUpdate?: pulumi.Input<string>;
    /**
     * FortiExtender mode. Valid values: `standalone`, `redundant`.
     */
    mode?: pulumi.Input<string>;
    /**
     * MODEM password.
     */
    modemPasswd?: pulumi.Input<string>;
    /**
     * MODEM type (CDMA, GSM/LTE or WIMAX). Valid values: `cdma`, `gsm/lte`, `wimax`.
     */
    modemType?: pulumi.Input<string>;
    /**
     * MODEM mode of operation(3G,LTE,etc). Valid values: `auto`, `auto-3g`, `force-lte`, `force-3g`, `force-2g`.
     */
    multiMode?: pulumi.Input<string>;
    /**
     * PPP authentication protocol (PAP,CHAP or auto). Valid values: `auto`, `pap`, `chap`.
     */
    pppAuthProtocol?: pulumi.Input<string>;
    /**
     * Enable/disable PPP echo request. Valid values: `enable`, `disable`.
     */
    pppEchoRequest?: pulumi.Input<string>;
    /**
     * PPP password.
     */
    pppPassword?: pulumi.Input<string>;
    /**
     * PPP username.
     */
    pppUsername?: pulumi.Input<string>;
    /**
     * Primary HA.
     */
    primaryHa?: pulumi.Input<string>;
    /**
     * Monthly quota limit (MB).
     */
    quotaLimitMb?: pulumi.Input<number>;
    /**
     * Number of redials allowed based on failed attempts. Valid values: `none`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`.
     */
    redial?: pulumi.Input<string>;
    /**
     * Redundant interface.
     */
    redundantIntf?: pulumi.Input<string>;
    /**
     * Enable/disable MODEM roaming. Valid values: `enable`, `disable`.
     */
    roaming?: pulumi.Input<string>;
    /**
     * FortiExtender work role(Primary, Secondary, None). Valid values: `none`, `primary`, `secondary`.
     */
    role: pulumi.Input<string>;
    /**
     * Secondary HA.
     */
    secondaryHa?: pulumi.Input<string>;
    /**
     * SIM PIN.
     */
    simPin?: pulumi.Input<string>;
    /**
     * VDOM
     */
    vdom?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * WiMax authentication protocol(TLS or TTLS). Valid values: `tls`, `ttls`.
     */
    wimaxAuthProtocol?: pulumi.Input<string>;
    /**
     * WiMax carrier.
     */
    wimaxCarrier?: pulumi.Input<string>;
    /**
     * WiMax realm.
     */
    wimaxRealm?: pulumi.Input<string>;
}
