// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure DNS64. Applies to FortiOS Version `>= 7.0.1`.
 *
 * ## Import
 *
 * System Dns64 can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/systemDns64:SystemDns64 labelname SystemDns64
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemDns64:SystemDns64 labelname SystemDns64
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemDns64 extends pulumi.CustomResource {
    /**
     * Get an existing SystemDns64 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemDns64State, opts?: pulumi.CustomResourceOptions): SystemDns64 {
        return new SystemDns64(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemDns64:SystemDns64';

    /**
     * Returns true if the given object is an instance of SystemDns64.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemDns64 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemDns64.__pulumiType;
    }

    /**
     * Enable/disable AAAA record synthesis (default = enable). Valid values: `enable`, `disable`.
     */
    public readonly alwaysSynthesizeAaaaRecord!: pulumi.Output<string>;
    /**
     * DNS64 prefix must be ::/96 (default = 64:ff9b::/96).
     */
    public readonly dns64Prefix!: pulumi.Output<string>;
    /**
     * Enable/disable DNS64 (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemDns64 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemDns64Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemDns64Args | SystemDns64State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemDns64State | undefined;
            resourceInputs["alwaysSynthesizeAaaaRecord"] = state ? state.alwaysSynthesizeAaaaRecord : undefined;
            resourceInputs["dns64Prefix"] = state ? state.dns64Prefix : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemDns64Args | undefined;
            resourceInputs["alwaysSynthesizeAaaaRecord"] = args ? args.alwaysSynthesizeAaaaRecord : undefined;
            resourceInputs["dns64Prefix"] = args ? args.dns64Prefix : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemDns64.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemDns64 resources.
 */
export interface SystemDns64State {
    /**
     * Enable/disable AAAA record synthesis (default = enable). Valid values: `enable`, `disable`.
     */
    alwaysSynthesizeAaaaRecord?: pulumi.Input<string>;
    /**
     * DNS64 prefix must be ::/96 (default = 64:ff9b::/96).
     */
    dns64Prefix?: pulumi.Input<string>;
    /**
     * Enable/disable DNS64 (default = disable). Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemDns64 resource.
 */
export interface SystemDns64Args {
    /**
     * Enable/disable AAAA record synthesis (default = enable). Valid values: `enable`, `disable`.
     */
    alwaysSynthesizeAaaaRecord?: pulumi.Input<string>;
    /**
     * DNS64 prefix must be ::/96 (default = 64:ff9b::/96).
     */
    dns64Prefix?: pulumi.Input<string>;
    /**
     * Enable/disable DNS64 (default = disable). Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
