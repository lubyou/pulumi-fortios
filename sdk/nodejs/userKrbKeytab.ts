// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class UserKrbKeytab extends pulumi.CustomResource {
    /**
     * Get an existing UserKrbKeytab resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserKrbKeytabState, opts?: pulumi.CustomResourceOptions): UserKrbKeytab {
        return new UserKrbKeytab(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/userKrbKeytab:UserKrbKeytab';

    /**
     * Returns true if the given object is an instance of UserKrbKeytab.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserKrbKeytab {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserKrbKeytab.__pulumiType;
    }

    public readonly keytab!: pulumi.Output<string>;
    public readonly ldapServer!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly pacData!: pulumi.Output<string>;
    public readonly principal!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a UserKrbKeytab resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserKrbKeytabArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserKrbKeytabArgs | UserKrbKeytabState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserKrbKeytabState | undefined;
            resourceInputs["keytab"] = state ? state.keytab : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pacData"] = state ? state.pacData : undefined;
            resourceInputs["principal"] = state ? state.principal : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as UserKrbKeytabArgs | undefined;
            if ((!args || args.keytab === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keytab'");
            }
            if ((!args || args.ldapServer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ldapServer'");
            }
            if ((!args || args.principal === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principal'");
            }
            resourceInputs["keytab"] = args?.keytab ? pulumi.secret(args.keytab) : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pacData"] = args ? args.pacData : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keytab"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(UserKrbKeytab.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserKrbKeytab resources.
 */
export interface UserKrbKeytabState {
    keytab?: pulumi.Input<string>;
    ldapServer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pacData?: pulumi.Input<string>;
    principal?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserKrbKeytab resource.
 */
export interface UserKrbKeytabArgs {
    keytab: pulumi.Input<string>;
    ldapServer: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pacData?: pulumi.Input<string>;
    principal: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
