// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure firewall application groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.ApplicationGroup("trname", {
 *     categories: [{
 *         id: 2,
 *     }],
 *     comment: "group1 test",
 *     type: "category",
 * });
 * ```
 *
 * ## Import
 *
 * Application Group can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/applicationGroup:ApplicationGroup labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class ApplicationGroup extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationGroupState, opts?: pulumi.CustomResourceOptions): ApplicationGroup {
        return new ApplicationGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/applicationGroup:ApplicationGroup';

    /**
     * Returns true if the given object is an instance of ApplicationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationGroup.__pulumiType;
    }

    /**
     * Application ID list. The structure of `application` block is documented below.
     */
    public readonly applications!: pulumi.Output<outputs.ApplicationGroupApplication[] | undefined>;
    /**
     * Application behavior filter.
     */
    public readonly behavior!: pulumi.Output<string>;
    /**
     * Application category ID list. The structure of `category` block is documented below.
     */
    public readonly categories!: pulumi.Output<outputs.ApplicationGroupCategory[] | undefined>;
    /**
     * Comment
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Application group name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
     */
    public readonly popularity!: pulumi.Output<string>;
    /**
     * Application protocol filter.
     */
    public readonly protocols!: pulumi.Output<string>;
    /**
     * Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
     */
    public readonly risks!: pulumi.Output<outputs.ApplicationGroupRisk[] | undefined>;
    /**
     * Application technology filter.
     */
    public readonly technology!: pulumi.Output<string>;
    /**
     * Application group type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Application vendor filter.
     */
    public readonly vendor!: pulumi.Output<string>;

    /**
     * Create a ApplicationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplicationGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationGroupArgs | ApplicationGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationGroupState | undefined;
            inputs["applications"] = state ? state.applications : undefined;
            inputs["behavior"] = state ? state.behavior : undefined;
            inputs["categories"] = state ? state.categories : undefined;
            inputs["comment"] = state ? state.comment : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["popularity"] = state ? state.popularity : undefined;
            inputs["protocols"] = state ? state.protocols : undefined;
            inputs["risks"] = state ? state.risks : undefined;
            inputs["technology"] = state ? state.technology : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as ApplicationGroupArgs | undefined;
            inputs["applications"] = args ? args.applications : undefined;
            inputs["behavior"] = args ? args.behavior : undefined;
            inputs["categories"] = args ? args.categories : undefined;
            inputs["comment"] = args ? args.comment : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["popularity"] = args ? args.popularity : undefined;
            inputs["protocols"] = args ? args.protocols : undefined;
            inputs["risks"] = args ? args.risks : undefined;
            inputs["technology"] = args ? args.technology : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["vendor"] = args ? args.vendor : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ApplicationGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationGroup resources.
 */
export interface ApplicationGroupState {
    /**
     * Application ID list. The structure of `application` block is documented below.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupApplication>[]>;
    /**
     * Application behavior filter.
     */
    behavior?: pulumi.Input<string>;
    /**
     * Application category ID list. The structure of `category` block is documented below.
     */
    categories?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupCategory>[]>;
    /**
     * Comment
     */
    comment?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Application group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
     */
    popularity?: pulumi.Input<string>;
    /**
     * Application protocol filter.
     */
    protocols?: pulumi.Input<string>;
    /**
     * Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
     */
    risks?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupRisk>[]>;
    /**
     * Application technology filter.
     */
    technology?: pulumi.Input<string>;
    /**
     * Application group type.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Application vendor filter.
     */
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationGroup resource.
 */
export interface ApplicationGroupArgs {
    /**
     * Application ID list. The structure of `application` block is documented below.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupApplication>[]>;
    /**
     * Application behavior filter.
     */
    behavior?: pulumi.Input<string>;
    /**
     * Application category ID list. The structure of `category` block is documented below.
     */
    categories?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupCategory>[]>;
    /**
     * Comment
     */
    comment?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Application group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Application popularity filter (1 - 5, from least to most popular). Valid values: `1`, `2`, `3`, `4`, `5`.
     */
    popularity?: pulumi.Input<string>;
    /**
     * Application protocol filter.
     */
    protocols?: pulumi.Input<string>;
    /**
     * Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical). The structure of `risk` block is documented below.
     */
    risks?: pulumi.Input<pulumi.Input<inputs.ApplicationGroupRisk>[]>;
    /**
     * Application technology filter.
     */
    technology?: pulumi.Input<string>;
    /**
     * Application group type.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Application vendor filter.
     */
    vendor?: pulumi.Input<string>;
}
