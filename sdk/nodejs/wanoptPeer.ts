// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure WAN optimization peers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.WanoptPeer("trname", {
 *     ip: "1.1.1.1",
 *     peerHostId: "1",
 * });
 * ```
 *
 * ## Import
 *
 * Wanopt Peer can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/wanoptPeer:WanoptPeer labelname {{peer_host_id}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/wanoptPeer:WanoptPeer labelname {{peer_host_id}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class WanoptPeer extends pulumi.CustomResource {
    /**
     * Get an existing WanoptPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WanoptPeerState, opts?: pulumi.CustomResourceOptions): WanoptPeer {
        return new WanoptPeer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wanoptPeer:WanoptPeer';

    /**
     * Returns true if the given object is an instance of WanoptPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WanoptPeer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WanoptPeer.__pulumiType;
    }

    /**
     * Peer IP address.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * Peer host ID.
     */
    public readonly peerHostId!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a WanoptPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WanoptPeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WanoptPeerArgs | WanoptPeerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WanoptPeerState | undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["peerHostId"] = state ? state.peerHostId : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as WanoptPeerArgs | undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["peerHostId"] = args ? args.peerHostId : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WanoptPeer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WanoptPeer resources.
 */
export interface WanoptPeerState {
    /**
     * Peer IP address.
     */
    ip?: pulumi.Input<string>;
    /**
     * Peer host ID.
     */
    peerHostId?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WanoptPeer resource.
 */
export interface WanoptPeerArgs {
    /**
     * Peer IP address.
     */
    ip?: pulumi.Input<string>;
    /**
     * Peer host ID.
     */
    peerHostId?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
