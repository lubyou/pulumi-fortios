// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchController8021XSettings extends pulumi.CustomResource {
    /**
     * Get an existing SwitchController8021XSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchController8021XSettingsState, opts?: pulumi.CustomResourceOptions): SwitchController8021XSettings {
        return new SwitchController8021XSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchController8021XSettings:SwitchController8021XSettings';

    /**
     * Returns true if the given object is an instance of SwitchController8021XSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchController8021XSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchController8021XSettings.__pulumiType;
    }

    public readonly linkDownAuth!: pulumi.Output<string>;
    public readonly mabReauth!: pulumi.Output<string>;
    public readonly maxReauthAttempt!: pulumi.Output<number>;
    public readonly reauthPeriod!: pulumi.Output<number>;
    public readonly txPeriod!: pulumi.Output<number>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchController8021XSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchController8021XSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchController8021XSettingsArgs | SwitchController8021XSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchController8021XSettingsState | undefined;
            resourceInputs["linkDownAuth"] = state ? state.linkDownAuth : undefined;
            resourceInputs["mabReauth"] = state ? state.mabReauth : undefined;
            resourceInputs["maxReauthAttempt"] = state ? state.maxReauthAttempt : undefined;
            resourceInputs["reauthPeriod"] = state ? state.reauthPeriod : undefined;
            resourceInputs["txPeriod"] = state ? state.txPeriod : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SwitchController8021XSettingsArgs | undefined;
            resourceInputs["linkDownAuth"] = args ? args.linkDownAuth : undefined;
            resourceInputs["mabReauth"] = args ? args.mabReauth : undefined;
            resourceInputs["maxReauthAttempt"] = args ? args.maxReauthAttempt : undefined;
            resourceInputs["reauthPeriod"] = args ? args.reauthPeriod : undefined;
            resourceInputs["txPeriod"] = args ? args.txPeriod : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchController8021XSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchController8021XSettings resources.
 */
export interface SwitchController8021XSettingsState {
    linkDownAuth?: pulumi.Input<string>;
    mabReauth?: pulumi.Input<string>;
    maxReauthAttempt?: pulumi.Input<number>;
    reauthPeriod?: pulumi.Input<number>;
    txPeriod?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchController8021XSettings resource.
 */
export interface SwitchController8021XSettingsArgs {
    linkDownAuth?: pulumi.Input<string>;
    mabReauth?: pulumi.Input<string>;
    maxReauthAttempt?: pulumi.Input<number>;
    reauthPeriod?: pulumi.Input<number>;
    txPeriod?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
