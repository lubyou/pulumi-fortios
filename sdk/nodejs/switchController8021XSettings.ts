// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure global 802.1X settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.SwitchController8021XSettings("trname", {
 *     linkDownAuth: "set-unauth",
 *     maxReauthAttempt: 3,
 *     reauthPeriod: 12,
 * });
 * ```
 *
 * ## Import
 *
 * SwitchController 8021XSettings can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/switchController8021XSettings:SwitchController8021XSettings labelname SwitchController8021XSettings
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SwitchController8021XSettings extends pulumi.CustomResource {
    /**
     * Get an existing SwitchController8021XSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchController8021XSettingsState, opts?: pulumi.CustomResourceOptions): SwitchController8021XSettings {
        return new SwitchController8021XSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchController8021XSettings:SwitchController8021XSettings';

    /**
     * Returns true if the given object is an instance of SwitchController8021XSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchController8021XSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchController8021XSettings.__pulumiType;
    }

    /**
     * Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
     */
    public readonly linkDownAuth!: pulumi.Output<string>;
    /**
     * Maximum number of authentication attempts (0 - 15, default = 3).
     */
    public readonly maxReauthAttempt!: pulumi.Output<number>;
    /**
     * Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
     */
    public readonly reauthPeriod!: pulumi.Output<number>;
    /**
     * 802.1X Tx period (seconds, default=30).
     */
    public readonly txPeriod!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchController8021XSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchController8021XSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchController8021XSettingsArgs | SwitchController8021XSettingsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchController8021XSettingsState | undefined;
            inputs["linkDownAuth"] = state ? state.linkDownAuth : undefined;
            inputs["maxReauthAttempt"] = state ? state.maxReauthAttempt : undefined;
            inputs["reauthPeriod"] = state ? state.reauthPeriod : undefined;
            inputs["txPeriod"] = state ? state.txPeriod : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SwitchController8021XSettingsArgs | undefined;
            inputs["linkDownAuth"] = args ? args.linkDownAuth : undefined;
            inputs["maxReauthAttempt"] = args ? args.maxReauthAttempt : undefined;
            inputs["reauthPeriod"] = args ? args.reauthPeriod : undefined;
            inputs["txPeriod"] = args ? args.txPeriod : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SwitchController8021XSettings.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchController8021XSettings resources.
 */
export interface SwitchController8021XSettingsState {
    /**
     * Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
     */
    linkDownAuth?: pulumi.Input<string>;
    /**
     * Maximum number of authentication attempts (0 - 15, default = 3).
     */
    maxReauthAttempt?: pulumi.Input<number>;
    /**
     * Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
     */
    reauthPeriod?: pulumi.Input<number>;
    /**
     * 802.1X Tx period (seconds, default=30).
     */
    txPeriod?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchController8021XSettings resource.
 */
export interface SwitchController8021XSettingsArgs {
    /**
     * Interface-reauthentication state to set if a link is down. Valid values: `set-unauth`, `no-action`.
     */
    linkDownAuth?: pulumi.Input<string>;
    /**
     * Maximum number of authentication attempts (0 - 15, default = 3).
     */
    maxReauthAttempt?: pulumi.Input<number>;
    /**
     * Period of time to allow for reauthentication (1 - 1440 sec, default = 60, 0 = disable reauthentication).
     */
    reauthPeriod?: pulumi.Input<number>;
    /**
     * 802.1X Tx period (seconds, default=30).
     */
    txPeriod?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
