// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallProfileProtocolOptions(args: GetFirewallProfileProtocolOptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallProfileProtocolOptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getFirewallProfileProtocolOptions:GetFirewallProfileProtocolOptions", {
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking GetFirewallProfileProtocolOptions.
 */
export interface GetFirewallProfileProtocolOptionsArgs {
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by GetFirewallProfileProtocolOptions.
 */
export interface GetFirewallProfileProtocolOptionsResult {
    readonly cifs: outputs.GetFirewallProfileProtocolOptionsCif[];
    readonly comment: string;
    readonly dns: outputs.GetFirewallProfileProtocolOptionsDn[];
    readonly featureSet: string;
    readonly ftps: outputs.GetFirewallProfileProtocolOptionsFtp[];
    readonly https: outputs.GetFirewallProfileProtocolOptionsHttp[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imaps: outputs.GetFirewallProfileProtocolOptionsImap[];
    readonly mailSignatures: outputs.GetFirewallProfileProtocolOptionsMailSignature[];
    readonly mapis: outputs.GetFirewallProfileProtocolOptionsMapi[];
    readonly name: string;
    readonly nntps: outputs.GetFirewallProfileProtocolOptionsNntp[];
    readonly oversizeLog: string;
    readonly pop3s: outputs.GetFirewallProfileProtocolOptionsPop3[];
    readonly replacemsgGroup: string;
    readonly rpcOverHttp: string;
    readonly smtps: outputs.GetFirewallProfileProtocolOptionsSmtp[];
    readonly sshes: outputs.GetFirewallProfileProtocolOptionsSsh[];
    readonly switchingProtocolsLog: string;
    readonly vdomparam?: string;
}
export function getFirewallProfileProtocolOptionsOutput(args: GetFirewallProfileProtocolOptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallProfileProtocolOptionsResult> {
    return pulumi.output(args).apply((a: any) => getFirewallProfileProtocolOptions(a, opts))
}

/**
 * A collection of arguments for invoking GetFirewallProfileProtocolOptions.
 */
export interface GetFirewallProfileProtocolOptionsOutputArgs {
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
