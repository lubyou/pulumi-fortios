// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure authentication based routing.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.RouterAuthPath("trname", {
 *     device: "port3",
 *     gateway: "1.1.1.1",
 * });
 * ```
 *
 * ## Import
 *
 * Router AuthPath can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/routerAuthPath:RouterAuthPath labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class RouterAuthPath extends pulumi.CustomResource {
    /**
     * Get an existing RouterAuthPath resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterAuthPathState, opts?: pulumi.CustomResourceOptions): RouterAuthPath {
        return new RouterAuthPath(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/routerAuthPath:RouterAuthPath';

    /**
     * Returns true if the given object is an instance of RouterAuthPath.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterAuthPath {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterAuthPath.__pulumiType;
    }

    /**
     * Outgoing interface.
     */
    public readonly device!: pulumi.Output<string>;
    /**
     * Gateway IP address.
     */
    public readonly gateway!: pulumi.Output<string>;
    /**
     * Name of the entry.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a RouterAuthPath resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterAuthPathArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterAuthPathArgs | RouterAuthPathState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterAuthPathState | undefined;
            inputs["device"] = state ? state.device : undefined;
            inputs["gateway"] = state ? state.gateway : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as RouterAuthPathArgs | undefined;
            if ((!args || args.device === undefined) && !opts.urn) {
                throw new Error("Missing required property 'device'");
            }
            inputs["device"] = args ? args.device : undefined;
            inputs["gateway"] = args ? args.gateway : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RouterAuthPath.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterAuthPath resources.
 */
export interface RouterAuthPathState {
    /**
     * Outgoing interface.
     */
    device?: pulumi.Input<string>;
    /**
     * Gateway IP address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Name of the entry.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterAuthPath resource.
 */
export interface RouterAuthPathArgs {
    /**
     * Outgoing interface.
     */
    device: pulumi.Input<string>;
    /**
     * Gateway IP address.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Name of the entry.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
