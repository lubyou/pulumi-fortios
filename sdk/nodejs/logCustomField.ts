// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure custom log fields.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.LogCustomField("trname", {
 *     fosid: "1",
 *     value: "logteststr",
 * });
 * ```
 *
 * ## Import
 *
 * Log CustomField can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/logCustomField:LogCustomField labelname {{fosid}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class LogCustomField extends pulumi.CustomResource {
    /**
     * Get an existing LogCustomField resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogCustomFieldState, opts?: pulumi.CustomResourceOptions): LogCustomField {
        return new LogCustomField(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/logCustomField:LogCustomField';

    /**
     * Returns true if the given object is an instance of LogCustomField.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogCustomField {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogCustomField.__pulumiType;
    }

    /**
     * field ID <string>.
     */
    public readonly fosid!: pulumi.Output<string>;
    /**
     * Field name (max: 15 characters).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Field value (max: 15 characters).
     */
    public readonly value!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a LogCustomField resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogCustomFieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogCustomFieldArgs | LogCustomFieldState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogCustomFieldState | undefined;
            inputs["fosid"] = state ? state.fosid : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["value"] = state ? state.value : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as LogCustomFieldArgs | undefined;
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            inputs["fosid"] = args ? args.fosid : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["value"] = args ? args.value : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(LogCustomField.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogCustomField resources.
 */
export interface LogCustomFieldState {
    /**
     * field ID <string>.
     */
    fosid?: pulumi.Input<string>;
    /**
     * Field name (max: 15 characters).
     */
    name?: pulumi.Input<string>;
    /**
     * Field value (max: 15 characters).
     */
    value?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogCustomField resource.
 */
export interface LogCustomFieldArgs {
    /**
     * field ID <string>.
     */
    fosid?: pulumi.Input<string>;
    /**
     * Field name (max: 15 characters).
     */
    name?: pulumi.Input<string>;
    /**
     * Field value (max: 15 characters).
     */
    value: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
