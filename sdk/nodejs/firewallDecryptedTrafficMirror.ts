// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure decrypted traffic mirror. Applies to FortiOS Version `>= 6.4.0`.
 *
 * ## Import
 *
 * Firewall DecryptedTrafficMirror can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/firewallDecryptedTrafficMirror:FirewallDecryptedTrafficMirror labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FirewallDecryptedTrafficMirror extends pulumi.CustomResource {
    /**
     * Get an existing FirewallDecryptedTrafficMirror resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallDecryptedTrafficMirrorState, opts?: pulumi.CustomResourceOptions): FirewallDecryptedTrafficMirror {
        return new FirewallDecryptedTrafficMirror(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallDecryptedTrafficMirror:FirewallDecryptedTrafficMirror';

    /**
     * Returns true if the given object is an instance of FirewallDecryptedTrafficMirror.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallDecryptedTrafficMirror {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallDecryptedTrafficMirror.__pulumiType;
    }

    /**
     * Set destination MAC address for mirrored traffic.
     */
    public readonly dstmac!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Decrypted traffic mirror interface The structure of `interface` block is documented below.
     */
    public readonly interfaces!: pulumi.Output<outputs.FirewallDecryptedTrafficMirrorInterface[] | undefined>;
    /**
     * Decrypted traffic mirror interface.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Source of decrypted traffic to be mirrored. Valid values: `client`, `server`, `both`.
     */
    public readonly trafficSource!: pulumi.Output<string>;
    /**
     * Types of decrypted traffic to be mirrored. Valid values: `ssl`, `ssh`.
     */
    public readonly trafficType!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallDecryptedTrafficMirror resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallDecryptedTrafficMirrorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallDecryptedTrafficMirrorArgs | FirewallDecryptedTrafficMirrorState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallDecryptedTrafficMirrorState | undefined;
            inputs["dstmac"] = state ? state.dstmac : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["interfaces"] = state ? state.interfaces : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["trafficSource"] = state ? state.trafficSource : undefined;
            inputs["trafficType"] = state ? state.trafficType : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallDecryptedTrafficMirrorArgs | undefined;
            inputs["dstmac"] = args ? args.dstmac : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["interfaces"] = args ? args.interfaces : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["trafficSource"] = args ? args.trafficSource : undefined;
            inputs["trafficType"] = args ? args.trafficType : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FirewallDecryptedTrafficMirror.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallDecryptedTrafficMirror resources.
 */
export interface FirewallDecryptedTrafficMirrorState {
    /**
     * Set destination MAC address for mirrored traffic.
     */
    dstmac?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Decrypted traffic mirror interface The structure of `interface` block is documented below.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.FirewallDecryptedTrafficMirrorInterface>[]>;
    /**
     * Decrypted traffic mirror interface.
     */
    name?: pulumi.Input<string>;
    /**
     * Source of decrypted traffic to be mirrored. Valid values: `client`, `server`, `both`.
     */
    trafficSource?: pulumi.Input<string>;
    /**
     * Types of decrypted traffic to be mirrored. Valid values: `ssl`, `ssh`.
     */
    trafficType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallDecryptedTrafficMirror resource.
 */
export interface FirewallDecryptedTrafficMirrorArgs {
    /**
     * Set destination MAC address for mirrored traffic.
     */
    dstmac?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Decrypted traffic mirror interface The structure of `interface` block is documented below.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.FirewallDecryptedTrafficMirrorInterface>[]>;
    /**
     * Decrypted traffic mirror interface.
     */
    name?: pulumi.Input<string>;
    /**
     * Source of decrypted traffic to be mirrored. Valid values: `client`, `server`, `both`.
     */
    trafficSource?: pulumi.Input<string>;
    /**
     * Types of decrypted traffic to be mirrored. Valid values: `ssl`, `ssh`.
     */
    trafficType?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
