// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure virtual hardware switch interfaces. Applies to FortiOS Version `>= 7.0.4`.
 *
 * ## Import
 *
 * System VirtualSwitch can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemVirtualSwitch:SystemVirtualSwitch labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemVirtualSwitch extends pulumi.CustomResource {
    /**
     * Get an existing SystemVirtualSwitch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemVirtualSwitchState, opts?: pulumi.CustomResourceOptions): SystemVirtualSwitch {
        return new SystemVirtualSwitch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemVirtualSwitch:SystemVirtualSwitch';

    /**
     * Returns true if the given object is an instance of SystemVirtualSwitch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemVirtualSwitch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemVirtualSwitch.__pulumiType;
    }

    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * Physical interface name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Physical switch parent.
     */
    public readonly physicalSwitch!: pulumi.Output<string>;
    /**
     * Configure member ports. The structure of `port` block is documented below.
     */
    public readonly ports!: pulumi.Output<outputs.SystemVirtualSwitchPort[] | undefined>;
    /**
     * Enable/disable SPAN. Valid values: `disable`, `enable`.
     */
    public readonly span!: pulumi.Output<string>;
    /**
     * SPAN destination port.
     */
    public readonly spanDestPort!: pulumi.Output<string>;
    /**
     * SPAN direction. Valid values: `rx`, `tx`, `both`.
     */
    public readonly spanDirection!: pulumi.Output<string>;
    /**
     * SPAN source port.
     */
    public readonly spanSourcePort!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * VLAN.
     */
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a SystemVirtualSwitch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemVirtualSwitchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemVirtualSwitchArgs | SystemVirtualSwitchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemVirtualSwitchState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["physicalSwitch"] = state ? state.physicalSwitch : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["span"] = state ? state.span : undefined;
            resourceInputs["spanDestPort"] = state ? state.spanDestPort : undefined;
            resourceInputs["spanDirection"] = state ? state.spanDirection : undefined;
            resourceInputs["spanSourcePort"] = state ? state.spanSourcePort : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as SystemVirtualSwitchArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["physicalSwitch"] = args ? args.physicalSwitch : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["span"] = args ? args.span : undefined;
            resourceInputs["spanDestPort"] = args ? args.spanDestPort : undefined;
            resourceInputs["spanDirection"] = args ? args.spanDirection : undefined;
            resourceInputs["spanSourcePort"] = args ? args.spanSourcePort : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemVirtualSwitch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemVirtualSwitch resources.
 */
export interface SystemVirtualSwitchState {
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Physical interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * Physical switch parent.
     */
    physicalSwitch?: pulumi.Input<string>;
    /**
     * Configure member ports. The structure of `port` block is documented below.
     */
    ports?: pulumi.Input<pulumi.Input<inputs.SystemVirtualSwitchPort>[]>;
    /**
     * Enable/disable SPAN. Valid values: `disable`, `enable`.
     */
    span?: pulumi.Input<string>;
    /**
     * SPAN destination port.
     */
    spanDestPort?: pulumi.Input<string>;
    /**
     * SPAN direction. Valid values: `rx`, `tx`, `both`.
     */
    spanDirection?: pulumi.Input<string>;
    /**
     * SPAN source port.
     */
    spanSourcePort?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN.
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemVirtualSwitch resource.
 */
export interface SystemVirtualSwitchArgs {
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * Physical interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * Physical switch parent.
     */
    physicalSwitch?: pulumi.Input<string>;
    /**
     * Configure member ports. The structure of `port` block is documented below.
     */
    ports?: pulumi.Input<pulumi.Input<inputs.SystemVirtualSwitchPort>[]>;
    /**
     * Enable/disable SPAN. Valid values: `disable`, `enable`.
     */
    span?: pulumi.Input<string>;
    /**
     * SPAN destination port.
     */
    spanDestPort?: pulumi.Input<string>;
    /**
     * SPAN direction. Valid values: `rx`, `tx`, `both`.
     */
    spanDirection?: pulumi.Input<string>;
    /**
     * SPAN source port.
     */
    spanSourcePort?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN.
     */
    vlan?: pulumi.Input<number>;
}
