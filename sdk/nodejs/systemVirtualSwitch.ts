// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemVirtualSwitch extends pulumi.CustomResource {
    /**
     * Get an existing SystemVirtualSwitch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemVirtualSwitchState, opts?: pulumi.CustomResourceOptions): SystemVirtualSwitch {
        return new SystemVirtualSwitch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemVirtualSwitch:SystemVirtualSwitch';

    /**
     * Returns true if the given object is an instance of SystemVirtualSwitch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemVirtualSwitch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemVirtualSwitch.__pulumiType;
    }

    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly physicalSwitch!: pulumi.Output<string>;
    public readonly ports!: pulumi.Output<outputs.SystemVirtualSwitchPort[] | undefined>;
    public readonly span!: pulumi.Output<string>;
    public readonly spanDestPort!: pulumi.Output<string>;
    public readonly spanDirection!: pulumi.Output<string>;
    public readonly spanSourcePort!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a SystemVirtualSwitch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemVirtualSwitchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemVirtualSwitchArgs | SystemVirtualSwitchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemVirtualSwitchState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["physicalSwitch"] = state ? state.physicalSwitch : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["span"] = state ? state.span : undefined;
            resourceInputs["spanDestPort"] = state ? state.spanDestPort : undefined;
            resourceInputs["spanDirection"] = state ? state.spanDirection : undefined;
            resourceInputs["spanSourcePort"] = state ? state.spanSourcePort : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as SystemVirtualSwitchArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["physicalSwitch"] = args ? args.physicalSwitch : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["span"] = args ? args.span : undefined;
            resourceInputs["spanDestPort"] = args ? args.spanDestPort : undefined;
            resourceInputs["spanDirection"] = args ? args.spanDirection : undefined;
            resourceInputs["spanSourcePort"] = args ? args.spanSourcePort : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemVirtualSwitch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemVirtualSwitch resources.
 */
export interface SystemVirtualSwitchState {
    dynamicSortSubtable?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physicalSwitch?: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<inputs.SystemVirtualSwitchPort>[]>;
    span?: pulumi.Input<string>;
    spanDestPort?: pulumi.Input<string>;
    spanDirection?: pulumi.Input<string>;
    spanSourcePort?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemVirtualSwitch resource.
 */
export interface SystemVirtualSwitchArgs {
    dynamicSortSubtable?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physicalSwitch?: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<inputs.SystemVirtualSwitchPort>[]>;
    span?: pulumi.Input<string>;
    spanDestPort?: pulumi.Input<string>;
    spanDirection?: pulumi.Input<string>;
    spanSourcePort?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    vlan?: pulumi.Input<number>;
}
