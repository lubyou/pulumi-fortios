// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to configure DNS of FortiOS.
 *
 * !> **Warning:** The resource will be deprecated and replaced by new resource `fortios.SystemDns`, we recommend that you use the new resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const test1 = new fortios.SystemSettingDNS("test1", {
 *     dnsOverTls: "disable",
 *     primary: "208.91.112.53",
 *     secondary: "208.91.112.22",
 * });
 * ```
 */
export class SystemSettingDNS extends pulumi.CustomResource {
    /**
     * Get an existing SystemSettingDNS resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSettingDNSState, opts?: pulumi.CustomResourceOptions): SystemSettingDNS {
        return new SystemSettingDNS(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSettingDNS:SystemSettingDNS';

    /**
     * Returns true if the given object is an instance of SystemSettingDNS.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSettingDNS {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSettingDNS.__pulumiType;
    }

    /**
     * Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
     */
    public readonly dnsOverTls!: pulumi.Output<string>;
    /**
     * Primary DNS server IP address.
     */
    public readonly primary!: pulumi.Output<string>;
    /**
     * Secondary DNS server IP address.
     */
    public readonly secondary!: pulumi.Output<string>;

    /**
     * Create a SystemSettingDNS resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSettingDNSArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSettingDNSArgs | SystemSettingDNSState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSettingDNSState | undefined;
            inputs["dnsOverTls"] = state ? state.dnsOverTls : undefined;
            inputs["primary"] = state ? state.primary : undefined;
            inputs["secondary"] = state ? state.secondary : undefined;
        } else {
            const args = argsOrState as SystemSettingDNSArgs | undefined;
            inputs["dnsOverTls"] = args ? args.dnsOverTls : undefined;
            inputs["primary"] = args ? args.primary : undefined;
            inputs["secondary"] = args ? args.secondary : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemSettingDNS.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSettingDNS resources.
 */
export interface SystemSettingDNSState {
    /**
     * Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
     */
    dnsOverTls?: pulumi.Input<string>;
    /**
     * Primary DNS server IP address.
     */
    primary?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP address.
     */
    secondary?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSettingDNS resource.
 */
export interface SystemSettingDNSArgs {
    /**
     * Enable/disable/enforce DNS over TLS(available since v6.2.0). Enum: [ disable, enable, enforce ]
     */
    dnsOverTls?: pulumi.Input<string>;
    /**
     * Primary DNS server IP address.
     */
    primary?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP address.
     */
    secondary?: pulumi.Input<string>;
}
