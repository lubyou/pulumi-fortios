// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WebProxyGlobal extends pulumi.CustomResource {
    /**
     * Get an existing WebProxyGlobal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebProxyGlobalState, opts?: pulumi.CustomResourceOptions): WebProxyGlobal {
        return new WebProxyGlobal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/webProxyGlobal:WebProxyGlobal';

    /**
     * Returns true if the given object is an instance of WebProxyGlobal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebProxyGlobal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebProxyGlobal.__pulumiType;
    }

    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly fastPolicyMatch!: pulumi.Output<string>;
    public readonly forwardProxyAuth!: pulumi.Output<string>;
    public readonly forwardServerAffinityTimeout!: pulumi.Output<number>;
    public readonly ldapUserCache!: pulumi.Output<string>;
    public readonly learnClientIp!: pulumi.Output<string>;
    public readonly learnClientIpFromHeader!: pulumi.Output<string>;
    public readonly learnClientIpSrcaddr6s!: pulumi.Output<outputs.WebProxyGlobalLearnClientIpSrcaddr6[] | undefined>;
    public readonly learnClientIpSrcaddrs!: pulumi.Output<outputs.WebProxyGlobalLearnClientIpSrcaddr[] | undefined>;
    public readonly maxMessageLength!: pulumi.Output<number>;
    public readonly maxRequestLength!: pulumi.Output<number>;
    public readonly maxWafBodyCacheLength!: pulumi.Output<number>;
    public readonly proxyFqdn!: pulumi.Output<string>;
    public readonly srcAffinityExemptAddr!: pulumi.Output<string>;
    public readonly srcAffinityExemptAddr6!: pulumi.Output<string>;
    public readonly sslCaCert!: pulumi.Output<string>;
    public readonly sslCert!: pulumi.Output<string>;
    public readonly strictWebCheck!: pulumi.Output<string>;
    public readonly tunnelNonHttp!: pulumi.Output<string>;
    public readonly unknownHttpVersion!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    public readonly webproxyProfile!: pulumi.Output<string>;

    /**
     * Create a WebProxyGlobal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebProxyGlobalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebProxyGlobalArgs | WebProxyGlobalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebProxyGlobalState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fastPolicyMatch"] = state ? state.fastPolicyMatch : undefined;
            resourceInputs["forwardProxyAuth"] = state ? state.forwardProxyAuth : undefined;
            resourceInputs["forwardServerAffinityTimeout"] = state ? state.forwardServerAffinityTimeout : undefined;
            resourceInputs["ldapUserCache"] = state ? state.ldapUserCache : undefined;
            resourceInputs["learnClientIp"] = state ? state.learnClientIp : undefined;
            resourceInputs["learnClientIpFromHeader"] = state ? state.learnClientIpFromHeader : undefined;
            resourceInputs["learnClientIpSrcaddr6s"] = state ? state.learnClientIpSrcaddr6s : undefined;
            resourceInputs["learnClientIpSrcaddrs"] = state ? state.learnClientIpSrcaddrs : undefined;
            resourceInputs["maxMessageLength"] = state ? state.maxMessageLength : undefined;
            resourceInputs["maxRequestLength"] = state ? state.maxRequestLength : undefined;
            resourceInputs["maxWafBodyCacheLength"] = state ? state.maxWafBodyCacheLength : undefined;
            resourceInputs["proxyFqdn"] = state ? state.proxyFqdn : undefined;
            resourceInputs["srcAffinityExemptAddr"] = state ? state.srcAffinityExemptAddr : undefined;
            resourceInputs["srcAffinityExemptAddr6"] = state ? state.srcAffinityExemptAddr6 : undefined;
            resourceInputs["sslCaCert"] = state ? state.sslCaCert : undefined;
            resourceInputs["sslCert"] = state ? state.sslCert : undefined;
            resourceInputs["strictWebCheck"] = state ? state.strictWebCheck : undefined;
            resourceInputs["tunnelNonHttp"] = state ? state.tunnelNonHttp : undefined;
            resourceInputs["unknownHttpVersion"] = state ? state.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["webproxyProfile"] = state ? state.webproxyProfile : undefined;
        } else {
            const args = argsOrState as WebProxyGlobalArgs | undefined;
            if ((!args || args.proxyFqdn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyFqdn'");
            }
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fastPolicyMatch"] = args ? args.fastPolicyMatch : undefined;
            resourceInputs["forwardProxyAuth"] = args ? args.forwardProxyAuth : undefined;
            resourceInputs["forwardServerAffinityTimeout"] = args ? args.forwardServerAffinityTimeout : undefined;
            resourceInputs["ldapUserCache"] = args ? args.ldapUserCache : undefined;
            resourceInputs["learnClientIp"] = args ? args.learnClientIp : undefined;
            resourceInputs["learnClientIpFromHeader"] = args ? args.learnClientIpFromHeader : undefined;
            resourceInputs["learnClientIpSrcaddr6s"] = args ? args.learnClientIpSrcaddr6s : undefined;
            resourceInputs["learnClientIpSrcaddrs"] = args ? args.learnClientIpSrcaddrs : undefined;
            resourceInputs["maxMessageLength"] = args ? args.maxMessageLength : undefined;
            resourceInputs["maxRequestLength"] = args ? args.maxRequestLength : undefined;
            resourceInputs["maxWafBodyCacheLength"] = args ? args.maxWafBodyCacheLength : undefined;
            resourceInputs["proxyFqdn"] = args ? args.proxyFqdn : undefined;
            resourceInputs["srcAffinityExemptAddr"] = args ? args.srcAffinityExemptAddr : undefined;
            resourceInputs["srcAffinityExemptAddr6"] = args ? args.srcAffinityExemptAddr6 : undefined;
            resourceInputs["sslCaCert"] = args ? args.sslCaCert : undefined;
            resourceInputs["sslCert"] = args ? args.sslCert : undefined;
            resourceInputs["strictWebCheck"] = args ? args.strictWebCheck : undefined;
            resourceInputs["tunnelNonHttp"] = args ? args.tunnelNonHttp : undefined;
            resourceInputs["unknownHttpVersion"] = args ? args.unknownHttpVersion : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["webproxyProfile"] = args ? args.webproxyProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebProxyGlobal.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebProxyGlobal resources.
 */
export interface WebProxyGlobalState {
    dynamicSortSubtable?: pulumi.Input<string>;
    fastPolicyMatch?: pulumi.Input<string>;
    forwardProxyAuth?: pulumi.Input<string>;
    forwardServerAffinityTimeout?: pulumi.Input<number>;
    ldapUserCache?: pulumi.Input<string>;
    learnClientIp?: pulumi.Input<string>;
    learnClientIpFromHeader?: pulumi.Input<string>;
    learnClientIpSrcaddr6s?: pulumi.Input<pulumi.Input<inputs.WebProxyGlobalLearnClientIpSrcaddr6>[]>;
    learnClientIpSrcaddrs?: pulumi.Input<pulumi.Input<inputs.WebProxyGlobalLearnClientIpSrcaddr>[]>;
    maxMessageLength?: pulumi.Input<number>;
    maxRequestLength?: pulumi.Input<number>;
    maxWafBodyCacheLength?: pulumi.Input<number>;
    proxyFqdn?: pulumi.Input<string>;
    srcAffinityExemptAddr?: pulumi.Input<string>;
    srcAffinityExemptAddr6?: pulumi.Input<string>;
    sslCaCert?: pulumi.Input<string>;
    sslCert?: pulumi.Input<string>;
    strictWebCheck?: pulumi.Input<string>;
    tunnelNonHttp?: pulumi.Input<string>;
    unknownHttpVersion?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    webproxyProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebProxyGlobal resource.
 */
export interface WebProxyGlobalArgs {
    dynamicSortSubtable?: pulumi.Input<string>;
    fastPolicyMatch?: pulumi.Input<string>;
    forwardProxyAuth?: pulumi.Input<string>;
    forwardServerAffinityTimeout?: pulumi.Input<number>;
    ldapUserCache?: pulumi.Input<string>;
    learnClientIp?: pulumi.Input<string>;
    learnClientIpFromHeader?: pulumi.Input<string>;
    learnClientIpSrcaddr6s?: pulumi.Input<pulumi.Input<inputs.WebProxyGlobalLearnClientIpSrcaddr6>[]>;
    learnClientIpSrcaddrs?: pulumi.Input<pulumi.Input<inputs.WebProxyGlobalLearnClientIpSrcaddr>[]>;
    maxMessageLength?: pulumi.Input<number>;
    maxRequestLength?: pulumi.Input<number>;
    maxWafBodyCacheLength?: pulumi.Input<number>;
    proxyFqdn: pulumi.Input<string>;
    srcAffinityExemptAddr?: pulumi.Input<string>;
    srcAffinityExemptAddr6?: pulumi.Input<string>;
    sslCaCert?: pulumi.Input<string>;
    sslCert?: pulumi.Input<string>;
    strictWebCheck?: pulumi.Input<string>;
    tunnelNonHttp?: pulumi.Input<string>;
    unknownHttpVersion?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    webproxyProfile?: pulumi.Input<string>;
}
