// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Configure VLANs for switch controller. Applies to FortiOS Version `<= 6.2.0`.
 *
 * ## Import
 *
 * SwitchController Vlan can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/switchControllerVlan:SwitchControllerVlan labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SwitchControllerVlan extends pulumi.CustomResource {
    /**
     * Get an existing SwitchControllerVlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchControllerVlanState, opts?: pulumi.CustomResourceOptions): SwitchControllerVlan {
        return new SwitchControllerVlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchControllerVlan:SwitchControllerVlan';

    /**
     * Returns true if the given object is an instance of SwitchControllerVlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchControllerVlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchControllerVlan.__pulumiType;
    }

    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    public readonly auth!: pulumi.Output<string>;
    /**
     * Color of icon on the GUI.
     */
    public readonly color!: pulumi.Output<number>;
    /**
     * Comment.
     */
    public readonly comments!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * User group name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    public readonly portalMessageOverrideGroup!: pulumi.Output<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    public readonly portalMessageOverrides!: pulumi.Output<outputs.SwitchControllerVlanPortalMessageOverrides | undefined>;
    /**
     * Authentication radius server.
     */
    public readonly radiusServer!: pulumi.Output<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    public readonly security!: pulumi.Output<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    public readonly selectedUsergroups!: pulumi.Output<outputs.SwitchControllerVlanSelectedUsergroup[] | undefined>;
    /**
     * Authentication usergroup.
     */
    public readonly usergroup!: pulumi.Output<string>;
    /**
     * Virtual domain,
     */
    public readonly vdom!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * VLAN ID.
     */
    public readonly vlanid!: pulumi.Output<number>;

    /**
     * Create a SwitchControllerVlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchControllerVlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchControllerVlanArgs | SwitchControllerVlanState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchControllerVlanState | undefined;
            inputs["auth"] = state ? state.auth : undefined;
            inputs["color"] = state ? state.color : undefined;
            inputs["comments"] = state ? state.comments : undefined;
            inputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["portalMessageOverrideGroup"] = state ? state.portalMessageOverrideGroup : undefined;
            inputs["portalMessageOverrides"] = state ? state.portalMessageOverrides : undefined;
            inputs["radiusServer"] = state ? state.radiusServer : undefined;
            inputs["security"] = state ? state.security : undefined;
            inputs["selectedUsergroups"] = state ? state.selectedUsergroups : undefined;
            inputs["usergroup"] = state ? state.usergroup : undefined;
            inputs["vdom"] = state ? state.vdom : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["vlanid"] = state ? state.vlanid : undefined;
        } else {
            const args = argsOrState as SwitchControllerVlanArgs | undefined;
            inputs["auth"] = args ? args.auth : undefined;
            inputs["color"] = args ? args.color : undefined;
            inputs["comments"] = args ? args.comments : undefined;
            inputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["portalMessageOverrideGroup"] = args ? args.portalMessageOverrideGroup : undefined;
            inputs["portalMessageOverrides"] = args ? args.portalMessageOverrides : undefined;
            inputs["radiusServer"] = args ? args.radiusServer : undefined;
            inputs["security"] = args ? args.security : undefined;
            inputs["selectedUsergroups"] = args ? args.selectedUsergroups : undefined;
            inputs["usergroup"] = args ? args.usergroup : undefined;
            inputs["vdom"] = args ? args.vdom : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["vlanid"] = args ? args.vlanid : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SwitchControllerVlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchControllerVlan resources.
 */
export interface SwitchControllerVlanState {
    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * User group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.SwitchControllerVlanPortalMessageOverrides>;
    /**
     * Authentication radius server.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    security?: pulumi.Input<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.SwitchControllerVlanSelectedUsergroup>[]>;
    /**
     * Authentication usergroup.
     */
    usergroup?: pulumi.Input<string>;
    /**
     * Virtual domain,
     */
    vdom?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SwitchControllerVlan resource.
 */
export interface SwitchControllerVlanArgs {
    /**
     * Authentication. Valid values: `radius`, `usergroup`.
     */
    auth?: pulumi.Input<string>;
    /**
     * Color of icon on the GUI.
     */
    color?: pulumi.Input<number>;
    /**
     * Comment.
     */
    comments?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * User group name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify captive portal replacement message override group.
     */
    portalMessageOverrideGroup?: pulumi.Input<string>;
    /**
     * Individual message overrides. The structure of `portalMessageOverrides` block is documented below.
     */
    portalMessageOverrides?: pulumi.Input<inputs.SwitchControllerVlanPortalMessageOverrides>;
    /**
     * Authentication radius server.
     */
    radiusServer?: pulumi.Input<string>;
    /**
     * Security. Valid values: `open`, `captive-portal`, `8021x`.
     */
    security?: pulumi.Input<string>;
    /**
     * Selected user group. The structure of `selectedUsergroups` block is documented below.
     */
    selectedUsergroups?: pulumi.Input<pulumi.Input<inputs.SwitchControllerVlanSelectedUsergroup>[]>;
    /**
     * Authentication usergroup.
     */
    usergroup?: pulumi.Input<string>;
    /**
     * Virtual domain,
     */
    vdom?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * VLAN ID.
     */
    vlanid?: pulumi.Input<number>;
}
