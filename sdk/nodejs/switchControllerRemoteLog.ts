// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure logging by FortiSwitch device to a remote syslog server. Applies to FortiOS Version `>= 6.2.4`.
 *
 * ## Import
 *
 * SwitchController RemoteLog can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/switchControllerRemoteLog:SwitchControllerRemoteLog labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SwitchControllerRemoteLog extends pulumi.CustomResource {
    /**
     * Get an existing SwitchControllerRemoteLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchControllerRemoteLogState, opts?: pulumi.CustomResourceOptions): SwitchControllerRemoteLog {
        return new SwitchControllerRemoteLog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchControllerRemoteLog:SwitchControllerRemoteLog';

    /**
     * Returns true if the given object is an instance of SwitchControllerRemoteLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchControllerRemoteLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchControllerRemoteLog.__pulumiType;
    }

    /**
     * Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
     */
    public readonly csv!: pulumi.Output<string>;
    /**
     * Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
     */
    public readonly facility!: pulumi.Output<string>;
    /**
     * Remote log name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Remote syslog server listening port.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * IPv4 address of the remote syslog server.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchControllerRemoteLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchControllerRemoteLogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchControllerRemoteLogArgs | SwitchControllerRemoteLogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchControllerRemoteLogState | undefined;
            resourceInputs["csv"] = state ? state.csv : undefined;
            resourceInputs["facility"] = state ? state.facility : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SwitchControllerRemoteLogArgs | undefined;
            resourceInputs["csv"] = args ? args.csv : undefined;
            resourceInputs["facility"] = args ? args.facility : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchControllerRemoteLog.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SwitchControllerRemoteLog resources.
 */
export interface SwitchControllerRemoteLogState {
    /**
     * Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
     */
    csv?: pulumi.Input<string>;
    /**
     * Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
     */
    facility?: pulumi.Input<string>;
    /**
     * Remote log name.
     */
    name?: pulumi.Input<string>;
    /**
     * Remote syslog server listening port.
     */
    port?: pulumi.Input<number>;
    /**
     * IPv4 address of the remote syslog server.
     */
    server?: pulumi.Input<string>;
    /**
     * Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    severity?: pulumi.Input<string>;
    /**
     * Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchControllerRemoteLog resource.
 */
export interface SwitchControllerRemoteLogArgs {
    /**
     * Enable/disable comma-separated value (CSV) strings. Valid values: `enable`, `disable`.
     */
    csv?: pulumi.Input<string>;
    /**
     * Facility to log to remote syslog server. Valid values: `kernel`, `user`, `mail`, `daemon`, `auth`, `syslog`, `lpr`, `news`, `uucp`, `cron`, `authpriv`, `ftp`, `ntp`, `audit`, `alert`, `clock`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`.
     */
    facility?: pulumi.Input<string>;
    /**
     * Remote log name.
     */
    name?: pulumi.Input<string>;
    /**
     * Remote syslog server listening port.
     */
    port?: pulumi.Input<number>;
    /**
     * IPv4 address of the remote syslog server.
     */
    server?: pulumi.Input<string>;
    /**
     * Severity of logs to be transferred to remote log server. Valid values: `emergency`, `alert`, `critical`, `error`, `warning`, `notification`, `information`, `debug`.
     */
    severity?: pulumi.Input<string>;
    /**
     * Enable/disable logging by FortiSwitch device to a remote syslog server. Valid values: `enable`, `disable`.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
