// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Remote certificate as a PEM file.
 *
 * ## Import
 *
 * VpnCertificate Remote can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import fortios:index/vpnCertificateRemote:VpnCertificateRemote labelname {{name}}
 * ```
 *
 *  If you do not want to import arguments of block$ export "FORTIOS_IMPORT_TABLE"="false"
 *
 * ```sh
 *  $ pulumi import fortios:index/vpnCertificateRemote:VpnCertificateRemote labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class VpnCertificateRemote extends pulumi.CustomResource {
    /**
     * Get an existing VpnCertificateRemote resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnCertificateRemoteState, opts?: pulumi.CustomResourceOptions): VpnCertificateRemote {
        return new VpnCertificateRemote(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/vpnCertificateRemote:VpnCertificateRemote';

    /**
     * Returns true if the given object is an instance of VpnCertificateRemote.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnCertificateRemote {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnCertificateRemote.__pulumiType;
    }

    /**
     * Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Either the global or VDOM IP address range for the remote certificate. Valid values: `global`, `vdom`.
     */
    public readonly range!: pulumi.Output<string>;
    /**
     * Remote certificate.
     */
    public readonly remote!: pulumi.Output<string>;
    /**
     * Remote certificate source type.
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a VpnCertificateRemote resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpnCertificateRemoteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnCertificateRemoteArgs | VpnCertificateRemoteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnCertificateRemoteState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["range"] = state ? state.range : undefined;
            resourceInputs["remote"] = state ? state.remote : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as VpnCertificateRemoteArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["range"] = args ? args.range : undefined;
            resourceInputs["remote"] = args ? args.remote : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnCertificateRemote.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpnCertificateRemote resources.
 */
export interface VpnCertificateRemoteState {
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Either the global or VDOM IP address range for the remote certificate. Valid values: `global`, `vdom`.
     */
    range?: pulumi.Input<string>;
    /**
     * Remote certificate.
     */
    remote?: pulumi.Input<string>;
    /**
     * Remote certificate source type.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnCertificateRemote resource.
 */
export interface VpnCertificateRemoteArgs {
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Either the global or VDOM IP address range for the remote certificate. Valid values: `global`, `vdom`.
     */
    range?: pulumi.Input<string>;
    /**
     * Remote certificate.
     */
    remote?: pulumi.Input<string>;
    /**
     * Remote certificate source type.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
