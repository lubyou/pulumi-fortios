// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource supports uploading FortiCare registration code to FortiGate through FortiManager.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const test1 = new fortios.FortimanagerSystemLicenseFortiCare("test1", {
 *     registrationCode: "jn3t3Nw7qckQzt955Htkfj5hwQ6aaa",
 *     target: "fortigate-test",
 * });
 * ```
 */
export class FortimanagerSystemLicenseFortiCare extends pulumi.CustomResource {
    /**
     * Get an existing FortimanagerSystemLicenseFortiCare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortimanagerSystemLicenseFortiCareState, opts?: pulumi.CustomResourceOptions): FortimanagerSystemLicenseFortiCare {
        return new FortimanagerSystemLicenseFortiCare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fortimanagerSystemLicenseFortiCare:FortimanagerSystemLicenseFortiCare';

    /**
     * Returns true if the given object is an instance of FortimanagerSystemLicenseFortiCare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FortimanagerSystemLicenseFortiCare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FortimanagerSystemLicenseFortiCare.__pulumiType;
    }

    /**
     * ADOM that the target device belongs to. default is 'root'.
     */
    public readonly adom!: pulumi.Output<string | undefined>;
    /**
     * Registration code.
     */
    public readonly registrationCode!: pulumi.Output<string>;
    /**
     * Target name, which is managed by FortiManager.
     */
    public readonly target!: pulumi.Output<string>;

    /**
     * Create a FortimanagerSystemLicenseFortiCare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FortimanagerSystemLicenseFortiCareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortimanagerSystemLicenseFortiCareArgs | FortimanagerSystemLicenseFortiCareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortimanagerSystemLicenseFortiCareState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["registrationCode"] = state ? state.registrationCode : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        } else {
            const args = argsOrState as FortimanagerSystemLicenseFortiCareArgs | undefined;
            if ((!args || args.registrationCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'registrationCode'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["registrationCode"] = args ? args.registrationCode : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FortimanagerSystemLicenseFortiCare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FortimanagerSystemLicenseFortiCare resources.
 */
export interface FortimanagerSystemLicenseFortiCareState {
    /**
     * ADOM that the target device belongs to. default is 'root'.
     */
    adom?: pulumi.Input<string>;
    /**
     * Registration code.
     */
    registrationCode?: pulumi.Input<string>;
    /**
     * Target name, which is managed by FortiManager.
     */
    target?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FortimanagerSystemLicenseFortiCare resource.
 */
export interface FortimanagerSystemLicenseFortiCareArgs {
    /**
     * ADOM that the target device belongs to. default is 'root'.
     */
    adom?: pulumi.Input<string>;
    /**
     * Registration code.
     */
    registrationCode: pulumi.Input<string>;
    /**
     * Target name, which is managed by FortiManager.
     */
    target: pulumi.Input<string>;
}
