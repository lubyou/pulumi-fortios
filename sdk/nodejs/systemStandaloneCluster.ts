// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes. Applies to FortiOS Version `>= 6.4.0`.
 *
 * ## Import
 *
 * System StandaloneCluster can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/systemStandaloneCluster:SystemStandaloneCluster labelname SystemStandaloneCluster
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SystemStandaloneCluster extends pulumi.CustomResource {
    /**
     * Get an existing SystemStandaloneCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemStandaloneClusterState, opts?: pulumi.CustomResourceOptions): SystemStandaloneCluster {
        return new SystemStandaloneCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemStandaloneCluster:SystemStandaloneCluster';

    /**
     * Returns true if the given object is an instance of SystemStandaloneCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemStandaloneCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemStandaloneCluster.__pulumiType;
    }

    /**
     * Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
     */
    public readonly encryption!: pulumi.Output<string>;
    /**
     * Cluster member ID (0 - 3).
     */
    public readonly groupMemberId!: pulumi.Output<number>;
    /**
     * Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
     */
    public readonly layer2Connection!: pulumi.Output<string>;
    /**
     * Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
     */
    public readonly psksecret!: pulumi.Output<string | undefined>;
    /**
     * Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
     */
    public readonly sessionSyncDev!: pulumi.Output<string>;
    /**
     * Cluster group ID (0 - 255). Must be the same for all members.
     */
    public readonly standaloneGroupId!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemStandaloneCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemStandaloneClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemStandaloneClusterArgs | SystemStandaloneClusterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemStandaloneClusterState | undefined;
            inputs["encryption"] = state ? state.encryption : undefined;
            inputs["groupMemberId"] = state ? state.groupMemberId : undefined;
            inputs["layer2Connection"] = state ? state.layer2Connection : undefined;
            inputs["psksecret"] = state ? state.psksecret : undefined;
            inputs["sessionSyncDev"] = state ? state.sessionSyncDev : undefined;
            inputs["standaloneGroupId"] = state ? state.standaloneGroupId : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemStandaloneClusterArgs | undefined;
            inputs["encryption"] = args ? args.encryption : undefined;
            inputs["groupMemberId"] = args ? args.groupMemberId : undefined;
            inputs["layer2Connection"] = args ? args.layer2Connection : undefined;
            inputs["psksecret"] = args ? args.psksecret : undefined;
            inputs["sessionSyncDev"] = args ? args.sessionSyncDev : undefined;
            inputs["standaloneGroupId"] = args ? args.standaloneGroupId : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SystemStandaloneCluster.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemStandaloneCluster resources.
 */
export interface SystemStandaloneClusterState {
    /**
     * Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
     */
    encryption?: pulumi.Input<string>;
    /**
     * Cluster member ID (0 - 3).
     */
    groupMemberId?: pulumi.Input<number>;
    /**
     * Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
     */
    layer2Connection?: pulumi.Input<string>;
    /**
     * Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
     */
    psksecret?: pulumi.Input<string>;
    /**
     * Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
     */
    sessionSyncDev?: pulumi.Input<string>;
    /**
     * Cluster group ID (0 - 255). Must be the same for all members.
     */
    standaloneGroupId?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemStandaloneCluster resource.
 */
export interface SystemStandaloneClusterArgs {
    /**
     * Enable/disable encryption when synchronizing sessions. Valid values: `enable`, `disable`.
     */
    encryption?: pulumi.Input<string>;
    /**
     * Cluster member ID (0 - 3).
     */
    groupMemberId?: pulumi.Input<number>;
    /**
     * Indicate whether layer 2 connections are present among FGSP members. Valid values: `available`, `unavailable`.
     */
    layer2Connection?: pulumi.Input<string>;
    /**
     * Pre-shared secret for session synchronization (ASCII string or hexadecimal encoded with a leading 0x).
     */
    psksecret?: pulumi.Input<string>;
    /**
     * Offload session-sync process to kernel and sync sessions using connected interface(s) directly.
     */
    sessionSyncDev?: pulumi.Input<string>;
    /**
     * Cluster group ID (0 - 255). Must be the same for all members.
     */
    standaloneGroupId?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
