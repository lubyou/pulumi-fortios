// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource supports adding/deleting online FortiGate to/from FortiManager
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const test1 = new fortios.FortimanagerDVMDevice("test1", {
 *     deviceName: "FGVM64-test",
 *     ipaddr: "192.168.88.101",
 *     password: "",
 *     userid: "admin",
 * });
 * ```
 */
export class FortimanagerDVMDevice extends pulumi.CustomResource {
    /**
     * Get an existing FortimanagerDVMDevice resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FortimanagerDVMDeviceState, opts?: pulumi.CustomResourceOptions): FortimanagerDVMDevice {
        return new FortimanagerDVMDevice(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fortimanagerDVMDevice:FortimanagerDVMDevice';

    /**
     * Returns true if the given object is an instance of FortimanagerDVMDevice.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FortimanagerDVMDevice {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FortimanagerDVMDevice.__pulumiType;
    }

    /**
     * Name or ID of the ADOM where the command is to be executed on.
     */
    public readonly adom!: pulumi.Output<string | undefined>;
    /**
     * Fortigate's device name.
     */
    public readonly deviceName!: pulumi.Output<string>;
    /**
     * Fortigate's ipaddress.
     */
    public readonly ipaddr!: pulumi.Output<string>;
    /**
     * Password.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * User name.
     */
    public readonly userid!: pulumi.Output<string>;

    /**
     * Create a FortimanagerDVMDevice resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FortimanagerDVMDeviceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FortimanagerDVMDeviceArgs | FortimanagerDVMDeviceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FortimanagerDVMDeviceState | undefined;
            inputs["adom"] = state ? state.adom : undefined;
            inputs["deviceName"] = state ? state.deviceName : undefined;
            inputs["ipaddr"] = state ? state.ipaddr : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["userid"] = state ? state.userid : undefined;
        } else {
            const args = argsOrState as FortimanagerDVMDeviceArgs | undefined;
            if ((!args || args.deviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceName'");
            }
            if ((!args || args.ipaddr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipaddr'");
            }
            if ((!args || args.userid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userid'");
            }
            inputs["adom"] = args ? args.adom : undefined;
            inputs["deviceName"] = args ? args.deviceName : undefined;
            inputs["ipaddr"] = args ? args.ipaddr : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["userid"] = args ? args.userid : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FortimanagerDVMDevice.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FortimanagerDVMDevice resources.
 */
export interface FortimanagerDVMDeviceState {
    /**
     * Name or ID of the ADOM where the command is to be executed on.
     */
    adom?: pulumi.Input<string>;
    /**
     * Fortigate's device name.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * Fortigate's ipaddress.
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * Password.
     */
    password?: pulumi.Input<string>;
    /**
     * User name.
     */
    userid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FortimanagerDVMDevice resource.
 */
export interface FortimanagerDVMDeviceArgs {
    /**
     * Name or ID of the ADOM where the command is to be executed on.
     */
    adom?: pulumi.Input<string>;
    /**
     * Fortigate's device name.
     */
    deviceName: pulumi.Input<string>;
    /**
     * Fortigate's ipaddress.
     */
    ipaddr: pulumi.Input<string>;
    /**
     * Password.
     */
    password?: pulumi.Input<string>;
    /**
     * User name.
     */
    userid: pulumi.Input<string>;
}
