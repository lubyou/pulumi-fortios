// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * SSH proxy settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.FirewallSshSetting("trname", {
 *     caname: "Fortinet_SSH_CA",
 *     hostTrustedChecking: "enable",
 *     hostkeyDsa1024: "Fortinet_SSH_DSA1024",
 *     hostkeyEcdsa256: "Fortinet_SSH_ECDSA256",
 *     hostkeyEcdsa384: "Fortinet_SSH_ECDSA384",
 *     hostkeyEcdsa521: "Fortinet_SSH_ECDSA521",
 *     hostkeyEd25519: "Fortinet_SSH_ED25519",
 *     hostkeyRsa2048: "Fortinet_SSH_RSA2048",
 *     untrustedCaname: "Fortinet_SSH_CA_Untrusted",
 * });
 * ```
 *
 * ## Import
 *
 * FirewallSsh Setting can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/firewallSshSetting:FirewallSshSetting labelname FirewallSshSetting
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class FirewallSshSetting extends pulumi.CustomResource {
    /**
     * Get an existing FirewallSshSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallSshSettingState, opts?: pulumi.CustomResourceOptions): FirewallSshSetting {
        return new FirewallSshSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallSshSetting:FirewallSshSetting';

    /**
     * Returns true if the given object is an instance of FirewallSshSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallSshSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallSshSetting.__pulumiType;
    }

    /**
     * CA certificate used by SSH Inspection.
     */
    public readonly caname!: pulumi.Output<string>;
    /**
     * Enable/disable host trusted checking. Valid values: `enable`, `disable`.
     */
    public readonly hostTrustedChecking!: pulumi.Output<string>;
    /**
     * DSA certificate used by SSH proxy.
     */
    public readonly hostkeyDsa1024!: pulumi.Output<string>;
    /**
     * ECDSA nid256 certificate used by SSH proxy.
     */
    public readonly hostkeyEcdsa256!: pulumi.Output<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    public readonly hostkeyEcdsa384!: pulumi.Output<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    public readonly hostkeyEcdsa521!: pulumi.Output<string>;
    /**
     * ED25519 hostkey used by SSH proxy.
     */
    public readonly hostkeyEd25519!: pulumi.Output<string>;
    /**
     * RSA certificate used by SSH proxy.
     */
    public readonly hostkeyRsa2048!: pulumi.Output<string>;
    /**
     * Untrusted CA certificate used by SSH Inspection.
     */
    public readonly untrustedCaname!: pulumi.Output<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallSshSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallSshSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallSshSettingArgs | FirewallSshSettingState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallSshSettingState | undefined;
            inputs["caname"] = state ? state.caname : undefined;
            inputs["hostTrustedChecking"] = state ? state.hostTrustedChecking : undefined;
            inputs["hostkeyDsa1024"] = state ? state.hostkeyDsa1024 : undefined;
            inputs["hostkeyEcdsa256"] = state ? state.hostkeyEcdsa256 : undefined;
            inputs["hostkeyEcdsa384"] = state ? state.hostkeyEcdsa384 : undefined;
            inputs["hostkeyEcdsa521"] = state ? state.hostkeyEcdsa521 : undefined;
            inputs["hostkeyEd25519"] = state ? state.hostkeyEd25519 : undefined;
            inputs["hostkeyRsa2048"] = state ? state.hostkeyRsa2048 : undefined;
            inputs["untrustedCaname"] = state ? state.untrustedCaname : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallSshSettingArgs | undefined;
            inputs["caname"] = args ? args.caname : undefined;
            inputs["hostTrustedChecking"] = args ? args.hostTrustedChecking : undefined;
            inputs["hostkeyDsa1024"] = args ? args.hostkeyDsa1024 : undefined;
            inputs["hostkeyEcdsa256"] = args ? args.hostkeyEcdsa256 : undefined;
            inputs["hostkeyEcdsa384"] = args ? args.hostkeyEcdsa384 : undefined;
            inputs["hostkeyEcdsa521"] = args ? args.hostkeyEcdsa521 : undefined;
            inputs["hostkeyEd25519"] = args ? args.hostkeyEd25519 : undefined;
            inputs["hostkeyRsa2048"] = args ? args.hostkeyRsa2048 : undefined;
            inputs["untrustedCaname"] = args ? args.untrustedCaname : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FirewallSshSetting.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallSshSetting resources.
 */
export interface FirewallSshSettingState {
    /**
     * CA certificate used by SSH Inspection.
     */
    caname?: pulumi.Input<string>;
    /**
     * Enable/disable host trusted checking. Valid values: `enable`, `disable`.
     */
    hostTrustedChecking?: pulumi.Input<string>;
    /**
     * DSA certificate used by SSH proxy.
     */
    hostkeyDsa1024?: pulumi.Input<string>;
    /**
     * ECDSA nid256 certificate used by SSH proxy.
     */
    hostkeyEcdsa256?: pulumi.Input<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    hostkeyEcdsa384?: pulumi.Input<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    hostkeyEcdsa521?: pulumi.Input<string>;
    /**
     * ED25519 hostkey used by SSH proxy.
     */
    hostkeyEd25519?: pulumi.Input<string>;
    /**
     * RSA certificate used by SSH proxy.
     */
    hostkeyRsa2048?: pulumi.Input<string>;
    /**
     * Untrusted CA certificate used by SSH Inspection.
     */
    untrustedCaname?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallSshSetting resource.
 */
export interface FirewallSshSettingArgs {
    /**
     * CA certificate used by SSH Inspection.
     */
    caname?: pulumi.Input<string>;
    /**
     * Enable/disable host trusted checking. Valid values: `enable`, `disable`.
     */
    hostTrustedChecking?: pulumi.Input<string>;
    /**
     * DSA certificate used by SSH proxy.
     */
    hostkeyDsa1024?: pulumi.Input<string>;
    /**
     * ECDSA nid256 certificate used by SSH proxy.
     */
    hostkeyEcdsa256?: pulumi.Input<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    hostkeyEcdsa384?: pulumi.Input<string>;
    /**
     * ECDSA nid384 certificate used by SSH proxy.
     */
    hostkeyEcdsa521?: pulumi.Input<string>;
    /**
     * ED25519 hostkey used by SSH proxy.
     */
    hostkeyEd25519?: pulumi.Input<string>;
    /**
     * RSA certificate used by SSH proxy.
     */
    hostkeyRsa2048?: pulumi.Input<string>;
    /**
     * Untrusted CA certificate used by SSH Inspection.
     */
    untrustedCaname?: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
