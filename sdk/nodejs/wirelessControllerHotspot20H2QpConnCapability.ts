// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WirelessControllerHotspot20H2QpConnCapability extends pulumi.CustomResource {
    /**
     * Get an existing WirelessControllerHotspot20H2QpConnCapability resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessControllerHotspot20H2QpConnCapabilityState, opts?: pulumi.CustomResourceOptions): WirelessControllerHotspot20H2QpConnCapability {
        return new WirelessControllerHotspot20H2QpConnCapability(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wirelessControllerHotspot20H2QpConnCapability:WirelessControllerHotspot20H2QpConnCapability';

    /**
     * Returns true if the given object is an instance of WirelessControllerHotspot20H2QpConnCapability.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessControllerHotspot20H2QpConnCapability {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessControllerHotspot20H2QpConnCapability.__pulumiType;
    }

    public readonly espPort!: pulumi.Output<string>;
    public readonly ftpPort!: pulumi.Output<string>;
    public readonly httpPort!: pulumi.Output<string>;
    public readonly icmpPort!: pulumi.Output<string>;
    public readonly ikev2Port!: pulumi.Output<string>;
    public readonly ikev2XxPort!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly pptpVpnPort!: pulumi.Output<string>;
    public readonly sshPort!: pulumi.Output<string>;
    public readonly tlsPort!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    public readonly voipTcpPort!: pulumi.Output<string>;
    public readonly voipUdpPort!: pulumi.Output<string>;

    /**
     * Create a WirelessControllerHotspot20H2QpConnCapability resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WirelessControllerHotspot20H2QpConnCapabilityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessControllerHotspot20H2QpConnCapabilityArgs | WirelessControllerHotspot20H2QpConnCapabilityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessControllerHotspot20H2QpConnCapabilityState | undefined;
            resourceInputs["espPort"] = state ? state.espPort : undefined;
            resourceInputs["ftpPort"] = state ? state.ftpPort : undefined;
            resourceInputs["httpPort"] = state ? state.httpPort : undefined;
            resourceInputs["icmpPort"] = state ? state.icmpPort : undefined;
            resourceInputs["ikev2Port"] = state ? state.ikev2Port : undefined;
            resourceInputs["ikev2XxPort"] = state ? state.ikev2XxPort : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pptpVpnPort"] = state ? state.pptpVpnPort : undefined;
            resourceInputs["sshPort"] = state ? state.sshPort : undefined;
            resourceInputs["tlsPort"] = state ? state.tlsPort : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["voipTcpPort"] = state ? state.voipTcpPort : undefined;
            resourceInputs["voipUdpPort"] = state ? state.voipUdpPort : undefined;
        } else {
            const args = argsOrState as WirelessControllerHotspot20H2QpConnCapabilityArgs | undefined;
            resourceInputs["espPort"] = args ? args.espPort : undefined;
            resourceInputs["ftpPort"] = args ? args.ftpPort : undefined;
            resourceInputs["httpPort"] = args ? args.httpPort : undefined;
            resourceInputs["icmpPort"] = args ? args.icmpPort : undefined;
            resourceInputs["ikev2Port"] = args ? args.ikev2Port : undefined;
            resourceInputs["ikev2XxPort"] = args ? args.ikev2XxPort : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pptpVpnPort"] = args ? args.pptpVpnPort : undefined;
            resourceInputs["sshPort"] = args ? args.sshPort : undefined;
            resourceInputs["tlsPort"] = args ? args.tlsPort : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["voipTcpPort"] = args ? args.voipTcpPort : undefined;
            resourceInputs["voipUdpPort"] = args ? args.voipUdpPort : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessControllerHotspot20H2QpConnCapability.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessControllerHotspot20H2QpConnCapability resources.
 */
export interface WirelessControllerHotspot20H2QpConnCapabilityState {
    espPort?: pulumi.Input<string>;
    ftpPort?: pulumi.Input<string>;
    httpPort?: pulumi.Input<string>;
    icmpPort?: pulumi.Input<string>;
    ikev2Port?: pulumi.Input<string>;
    ikev2XxPort?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pptpVpnPort?: pulumi.Input<string>;
    sshPort?: pulumi.Input<string>;
    tlsPort?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    voipTcpPort?: pulumi.Input<string>;
    voipUdpPort?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelessControllerHotspot20H2QpConnCapability resource.
 */
export interface WirelessControllerHotspot20H2QpConnCapabilityArgs {
    espPort?: pulumi.Input<string>;
    ftpPort?: pulumi.Input<string>;
    httpPort?: pulumi.Input<string>;
    icmpPort?: pulumi.Input<string>;
    ikev2Port?: pulumi.Input<string>;
    ikev2XxPort?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pptpVpnPort?: pulumi.Input<string>;
    sshPort?: pulumi.Input<string>;
    tlsPort?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    voipTcpPort?: pulumi.Input<string>;
    voipUdpPort?: pulumi.Input<string>;
}
