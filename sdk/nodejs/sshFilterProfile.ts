// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * SSH filter profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.SshFilterProfile("trname", {
 *     block: "x11",
 *     defaultCommandLog: "enable",
 *     log: "x11",
 * });
 * ```
 *
 * ## Import
 *
 * SshFilter Profile can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/sshFilterProfile:SshFilterProfile labelname {{name}}
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class SshFilterProfile extends pulumi.CustomResource {
    /**
     * Get an existing SshFilterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshFilterProfileState, opts?: pulumi.CustomResourceOptions): SshFilterProfile {
        return new SshFilterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/sshFilterProfile:SshFilterProfile';

    /**
     * Returns true if the given object is an instance of SshFilterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshFilterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshFilterProfile.__pulumiType;
    }

    /**
     * SSH blocking options.
     */
    public readonly block!: pulumi.Output<string>;
    /**
     * Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
     */
    public readonly defaultCommandLog!: pulumi.Output<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    /**
     * File filter. The structure of `fileFilter` block is documented below.
     */
    public readonly fileFilter!: pulumi.Output<outputs.SshFilterProfileFileFilter | undefined>;
    /**
     * Enable/disable file filter logging. Valid values: `enable`, `disable`.
     */
    public readonly log!: pulumi.Output<string>;
    /**
     * File type name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * SSH command filter. The structure of `shellCommands` block is documented below.
     */
    public readonly shellCommands!: pulumi.Output<outputs.SshFilterProfileShellCommand[] | undefined>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a SshFilterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SshFilterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshFilterProfileArgs | SshFilterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SshFilterProfileState | undefined;
            resourceInputs["block"] = state ? state.block : undefined;
            resourceInputs["defaultCommandLog"] = state ? state.defaultCommandLog : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fileFilter"] = state ? state.fileFilter : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shellCommands"] = state ? state.shellCommands : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SshFilterProfileArgs | undefined;
            resourceInputs["block"] = args ? args.block : undefined;
            resourceInputs["defaultCommandLog"] = args ? args.defaultCommandLog : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fileFilter"] = args ? args.fileFilter : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shellCommands"] = args ? args.shellCommands : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SshFilterProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SshFilterProfile resources.
 */
export interface SshFilterProfileState {
    /**
     * SSH blocking options.
     */
    block?: pulumi.Input<string>;
    /**
     * Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
     */
    defaultCommandLog?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * File filter. The structure of `fileFilter` block is documented below.
     */
    fileFilter?: pulumi.Input<inputs.SshFilterProfileFileFilter>;
    /**
     * Enable/disable file filter logging. Valid values: `enable`, `disable`.
     */
    log?: pulumi.Input<string>;
    /**
     * File type name.
     */
    name?: pulumi.Input<string>;
    /**
     * SSH command filter. The structure of `shellCommands` block is documented below.
     */
    shellCommands?: pulumi.Input<pulumi.Input<inputs.SshFilterProfileShellCommand>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SshFilterProfile resource.
 */
export interface SshFilterProfileArgs {
    /**
     * SSH blocking options.
     */
    block?: pulumi.Input<string>;
    /**
     * Enable/disable logging unmatched shell commands. Valid values: `enable`, `disable`.
     */
    defaultCommandLog?: pulumi.Input<string>;
    /**
     * true or false, set this parameter to true when using dynamic forEach + toset to configure and sort sub-tables, please do not set this parameter when configuring static sub-tables.
     */
    dynamicSortSubtable?: pulumi.Input<string>;
    /**
     * File filter. The structure of `fileFilter` block is documented below.
     */
    fileFilter?: pulumi.Input<inputs.SshFilterProfileFileFilter>;
    /**
     * Enable/disable file filter logging. Valid values: `enable`, `disable`.
     */
    log?: pulumi.Input<string>;
    /**
     * File type name.
     */
    name?: pulumi.Input<string>;
    /**
     * SSH command filter. The structure of `shellCommands` block is documented below.
     */
    shellCommands?: pulumi.Input<pulumi.Input<inputs.SshFilterProfileShellCommand>[]>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
