// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Configure wireless controller global settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fortios from "@pulumi/fortios";
 *
 * const trname = new fortios.WirelessControllerGlobal("trname", {
 *     apLogServer: "disable",
 *     apLogServerIp: "0.0.0.0",
 *     apLogServerPort: 0,
 *     controlMessageOffload: "ebp-frame aeroscout-tag ap-list sta-list sta-cap-list stats aeroscout-mu",
 *     dataEthernetIi: "disable",
 *     discoveryMcAddr: "224.0.1.140",
 *     fiappEthType: 5252,
 *     imageDownload: "enable",
 *     ipsecBaseIp: "169.254.0.1",
 *     linkAggregation: "disable",
 *     maxClients: 0,
 *     maxRetransmit: 3,
 *     meshEthType: 8755,
 *     rogueScanMacAdjacency: 7,
 *     wtpShare: "disable",
 * });
 * ```
 *
 * ## Import
 *
 * WirelessController Global can be imported using any of these accepted formats$ export "FORTIOS_IMPORT_TABLE"="true"
 *
 * ```sh
 *  $ pulumi import fortios:index/wirelessControllerGlobal:WirelessControllerGlobal labelname WirelessControllerGlobal
 * ```
 *
 *  $ unset "FORTIOS_IMPORT_TABLE"
 */
export class WirelessControllerGlobal extends pulumi.CustomResource {
    /**
     * Get an existing WirelessControllerGlobal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessControllerGlobalState, opts?: pulumi.CustomResourceOptions): WirelessControllerGlobal {
        return new WirelessControllerGlobal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wirelessControllerGlobal:WirelessControllerGlobal';

    /**
     * Returns true if the given object is an instance of WirelessControllerGlobal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessControllerGlobal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessControllerGlobal.__pulumiType;
    }

    /**
     * Enable/disable configuring APs or FortiAPs to send log messages to a syslog server (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly apLogServer!: pulumi.Output<string>;
    /**
     * IP address that APs or FortiAPs send log messages to.
     */
    public readonly apLogServerIp!: pulumi.Output<string>;
    /**
     * Port that APs or FortiAPs send log messages to.
     */
    public readonly apLogServerPort!: pulumi.Output<number>;
    /**
     * Configure CAPWAP control message data channel offload.
     */
    public readonly controlMessageOffload!: pulumi.Output<string>;
    public readonly dataEthernetIi!: pulumi.Output<string>;
    /**
     * Multicast IP address for AP discovery (default = 244.0.1.140).
     */
    public readonly discoveryMcAddr!: pulumi.Output<string>;
    /**
     * Ethernet type for Fortinet Inter-Access Point Protocol (IAPP), or IEEE 802.11f, packets (0 - 65535, default = 5252).
     */
    public readonly fiappEthType!: pulumi.Output<number>;
    /**
     * Enable/disable WTP image download at join time. Valid values: `enable`, `disable`.
     */
    public readonly imageDownload!: pulumi.Output<string>;
    /**
     * Base IP address for IPsec VPN tunnels between the access points and the wireless controller (default = 169.254.0.1).
     */
    public readonly ipsecBaseIp!: pulumi.Output<string>;
    /**
     * Enable/disable calculating the CAPWAP transmit hash to load balance sessions to link aggregation nodes (default = disable). Valid values: `enable`, `disable`.
     */
    public readonly linkAggregation!: pulumi.Output<string>;
    /**
     * Description of the location of the wireless controller.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Maximum number of clients that can connect simultaneously (default = 0, meaning no limitation).
     */
    public readonly maxClients!: pulumi.Output<number>;
    /**
     * Maximum number of tunnel packet retransmissions (0 - 64, default = 3).
     */
    public readonly maxRetransmit!: pulumi.Output<number>;
    /**
     * Mesh Ethernet identifier included in backhaul packets (0 - 65535, default = 8755).
     */
    public readonly meshEthType!: pulumi.Output<number>;
    /**
     * Name of the wireless controller.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Maximum numerical difference between an AP's Ethernet and wireless MAC values to match for rogue detection (0 - 31, default = 7).
     */
    public readonly rogueScanMacAdjacency!: pulumi.Output<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    public readonly vdomparam!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable sharing of WTPs between VDOMs. Valid values: `enable`, `disable`.
     */
    public readonly wtpShare!: pulumi.Output<string>;

    /**
     * Create a WirelessControllerGlobal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WirelessControllerGlobalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessControllerGlobalArgs | WirelessControllerGlobalState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessControllerGlobalState | undefined;
            inputs["apLogServer"] = state ? state.apLogServer : undefined;
            inputs["apLogServerIp"] = state ? state.apLogServerIp : undefined;
            inputs["apLogServerPort"] = state ? state.apLogServerPort : undefined;
            inputs["controlMessageOffload"] = state ? state.controlMessageOffload : undefined;
            inputs["dataEthernetIi"] = state ? state.dataEthernetIi : undefined;
            inputs["discoveryMcAddr"] = state ? state.discoveryMcAddr : undefined;
            inputs["fiappEthType"] = state ? state.fiappEthType : undefined;
            inputs["imageDownload"] = state ? state.imageDownload : undefined;
            inputs["ipsecBaseIp"] = state ? state.ipsecBaseIp : undefined;
            inputs["linkAggregation"] = state ? state.linkAggregation : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["maxClients"] = state ? state.maxClients : undefined;
            inputs["maxRetransmit"] = state ? state.maxRetransmit : undefined;
            inputs["meshEthType"] = state ? state.meshEthType : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["rogueScanMacAdjacency"] = state ? state.rogueScanMacAdjacency : undefined;
            inputs["vdomparam"] = state ? state.vdomparam : undefined;
            inputs["wtpShare"] = state ? state.wtpShare : undefined;
        } else {
            const args = argsOrState as WirelessControllerGlobalArgs | undefined;
            inputs["apLogServer"] = args ? args.apLogServer : undefined;
            inputs["apLogServerIp"] = args ? args.apLogServerIp : undefined;
            inputs["apLogServerPort"] = args ? args.apLogServerPort : undefined;
            inputs["controlMessageOffload"] = args ? args.controlMessageOffload : undefined;
            inputs["dataEthernetIi"] = args ? args.dataEthernetIi : undefined;
            inputs["discoveryMcAddr"] = args ? args.discoveryMcAddr : undefined;
            inputs["fiappEthType"] = args ? args.fiappEthType : undefined;
            inputs["imageDownload"] = args ? args.imageDownload : undefined;
            inputs["ipsecBaseIp"] = args ? args.ipsecBaseIp : undefined;
            inputs["linkAggregation"] = args ? args.linkAggregation : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxClients"] = args ? args.maxClients : undefined;
            inputs["maxRetransmit"] = args ? args.maxRetransmit : undefined;
            inputs["meshEthType"] = args ? args.meshEthType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["rogueScanMacAdjacency"] = args ? args.rogueScanMacAdjacency : undefined;
            inputs["vdomparam"] = args ? args.vdomparam : undefined;
            inputs["wtpShare"] = args ? args.wtpShare : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(WirelessControllerGlobal.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WirelessControllerGlobal resources.
 */
export interface WirelessControllerGlobalState {
    /**
     * Enable/disable configuring APs or FortiAPs to send log messages to a syslog server (default = disable). Valid values: `enable`, `disable`.
     */
    apLogServer?: pulumi.Input<string>;
    /**
     * IP address that APs or FortiAPs send log messages to.
     */
    apLogServerIp?: pulumi.Input<string>;
    /**
     * Port that APs or FortiAPs send log messages to.
     */
    apLogServerPort?: pulumi.Input<number>;
    /**
     * Configure CAPWAP control message data channel offload.
     */
    controlMessageOffload?: pulumi.Input<string>;
    dataEthernetIi?: pulumi.Input<string>;
    /**
     * Multicast IP address for AP discovery (default = 244.0.1.140).
     */
    discoveryMcAddr?: pulumi.Input<string>;
    /**
     * Ethernet type for Fortinet Inter-Access Point Protocol (IAPP), or IEEE 802.11f, packets (0 - 65535, default = 5252).
     */
    fiappEthType?: pulumi.Input<number>;
    /**
     * Enable/disable WTP image download at join time. Valid values: `enable`, `disable`.
     */
    imageDownload?: pulumi.Input<string>;
    /**
     * Base IP address for IPsec VPN tunnels between the access points and the wireless controller (default = 169.254.0.1).
     */
    ipsecBaseIp?: pulumi.Input<string>;
    /**
     * Enable/disable calculating the CAPWAP transmit hash to load balance sessions to link aggregation nodes (default = disable). Valid values: `enable`, `disable`.
     */
    linkAggregation?: pulumi.Input<string>;
    /**
     * Description of the location of the wireless controller.
     */
    location?: pulumi.Input<string>;
    /**
     * Maximum number of clients that can connect simultaneously (default = 0, meaning no limitation).
     */
    maxClients?: pulumi.Input<number>;
    /**
     * Maximum number of tunnel packet retransmissions (0 - 64, default = 3).
     */
    maxRetransmit?: pulumi.Input<number>;
    /**
     * Mesh Ethernet identifier included in backhaul packets (0 - 65535, default = 8755).
     */
    meshEthType?: pulumi.Input<number>;
    /**
     * Name of the wireless controller.
     */
    name?: pulumi.Input<string>;
    /**
     * Maximum numerical difference between an AP's Ethernet and wireless MAC values to match for rogue detection (0 - 31, default = 7).
     */
    rogueScanMacAdjacency?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable sharing of WTPs between VDOMs. Valid values: `enable`, `disable`.
     */
    wtpShare?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelessControllerGlobal resource.
 */
export interface WirelessControllerGlobalArgs {
    /**
     * Enable/disable configuring APs or FortiAPs to send log messages to a syslog server (default = disable). Valid values: `enable`, `disable`.
     */
    apLogServer?: pulumi.Input<string>;
    /**
     * IP address that APs or FortiAPs send log messages to.
     */
    apLogServerIp?: pulumi.Input<string>;
    /**
     * Port that APs or FortiAPs send log messages to.
     */
    apLogServerPort?: pulumi.Input<number>;
    /**
     * Configure CAPWAP control message data channel offload.
     */
    controlMessageOffload?: pulumi.Input<string>;
    dataEthernetIi?: pulumi.Input<string>;
    /**
     * Multicast IP address for AP discovery (default = 244.0.1.140).
     */
    discoveryMcAddr?: pulumi.Input<string>;
    /**
     * Ethernet type for Fortinet Inter-Access Point Protocol (IAPP), or IEEE 802.11f, packets (0 - 65535, default = 5252).
     */
    fiappEthType?: pulumi.Input<number>;
    /**
     * Enable/disable WTP image download at join time. Valid values: `enable`, `disable`.
     */
    imageDownload?: pulumi.Input<string>;
    /**
     * Base IP address for IPsec VPN tunnels between the access points and the wireless controller (default = 169.254.0.1).
     */
    ipsecBaseIp?: pulumi.Input<string>;
    /**
     * Enable/disable calculating the CAPWAP transmit hash to load balance sessions to link aggregation nodes (default = disable). Valid values: `enable`, `disable`.
     */
    linkAggregation?: pulumi.Input<string>;
    /**
     * Description of the location of the wireless controller.
     */
    location?: pulumi.Input<string>;
    /**
     * Maximum number of clients that can connect simultaneously (default = 0, meaning no limitation).
     */
    maxClients?: pulumi.Input<number>;
    /**
     * Maximum number of tunnel packet retransmissions (0 - 64, default = 3).
     */
    maxRetransmit?: pulumi.Input<number>;
    /**
     * Mesh Ethernet identifier included in backhaul packets (0 - 65535, default = 8755).
     */
    meshEthType?: pulumi.Input<number>;
    /**
     * Name of the wireless controller.
     */
    name?: pulumi.Input<string>;
    /**
     * Maximum numerical difference between an AP's Ethernet and wireless MAC values to match for rogue detection (0 - 31, default = 7).
     */
    rogueScanMacAdjacency?: pulumi.Input<number>;
    /**
     * Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
    /**
     * Enable/disable sharing of WTPs between VDOMs. Valid values: `enable`, `disable`.
     */
    wtpShare?: pulumi.Input<string>;
}
